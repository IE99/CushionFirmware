
CushionFirmware.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   00000000  10040000  10040000  00030a07  2**0
                  CONTENTS
  1 .intvec       000000c0  10040000  10040000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00018fdc  100400c0  100400c0  000100c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .data         000000bc  20000944  100590c8  00030944  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .BOR_config   00000007  20000a00  10059184  00030a00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  5 .ram_preamble 0000002c  20000008  1005909c  00030008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .ram_preamble_noinit 00000008  20000000  20000000  00040000  2**2
                  ALLOC
  7 .ram_preamble_noinit2 00000028  20000034  20000034  00040000  2**0
                  ALLOC
  8 .bss.blueRAM  0000020c  200000c0  200000c0  00040000  2**2
                  ALLOC
  9 .bss          00000678  200002cc  200002cc  00040000  2**2
                  ALLOC
 10 .noinit       000031dc  20000a08  1005918b  00030a08  2**2
                  ALLOC
 11 BLOCK_STACKLIB_FLASH_DATA 00000838  1007f000  1007f000  0003f000  2**2
                  ALLOC
 12 CSTACK        00000000  20005400  20005400  00030a07  2**0
                  CONTENTS
 13 .rom_info     00000000  10000000  10000000  00030a07  2**0
                  CONTENTS
 14 .ARM.attributes 00000031  00000000  00000000  00030a07  2**0
                  CONTENTS, READONLY
 15 .debug_info   00026734  00000000  00000000  00030a38  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_abbrev 000042ea  00000000  00000000  0005716c  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    00007826  00000000  00000000  0005b456  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_aranges 00000c78  00000000  00000000  00062c80  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_ranges 00001050  00000000  00000000  000638f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_line   000069cc  00000000  00000000  00064948  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    00005c3e  00000000  00000000  0006b314  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .comment      000139a8  00000000  00000000  00070f52  2**0
                  CONTENTS, READONLY
 23 .arm_vfe_header 000000c0  00000000  00000000  000848fc  2**2
                  CONTENTS, READONLY
 24 .debug_frame  00002460  00000000  00000000  000849bc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

100400c0 <CS_contextSave>:
                 __IMPORT__ savedMSP
                 __IMPORT__ savedICSR
                 __IMPORT__ savedSHCSR
                 __IMPORT__ savedNVIC_ISPR
EXPORT_FUNC(CS_contextSave)
                 MRS    R2, CONTROL             /* load the CONTROL register into R2 */
100400c0:	f3ef 8214 	mrs	r2, CONTROL
                 MRS    R1, PSP                 /* load the process stack pointer into R1 */
100400c4:	f3ef 8109 	mrs	r1, PSP
                 LDR    R0, =0
100400c8:	2000      	movs	r0, #0
                 MSR    CONTROL, R0             /* Switch to Main Stack Pointer */
100400ca:	f380 8814 	msr	CONTROL, r0
                 ISB
100400ce:	f3bf 8f6f 	isb	sy
                 SUB    SP, #0x44			    /* Move stack pointer in order to be sure that after wake up the __low_level_init()
                                                   will not corrupt data saved in the stack by CS_contextSave routine.
                                                   WARNING: this instruction breaks backward compatibility with previous CS_contextRestore. */ 
#endif

                 PUSH   { r4 - r7, lr }         /* store R4-R7 and LR (5 words) onto the stack */
100400d2:	b5f0      	push	{r4, r5, r6, r7, lr}
                 MOV    R3, R8                  /* move {r8 - r12} to {r3 - r7} */    
100400d4:	4643      	mov	r3, r8
                 MOV    R4, R9
100400d6:	464c      	mov	r4, r9
                 MOV    R5, R10
100400d8:	4655      	mov	r5, sl
                 MOV    R6, R11        
100400da:	465e      	mov	r6, fp
                 MOV    R7, R12        
100400dc:	4667      	mov	r7, ip
                 PUSH   {R3-R7}                 /* store R8-R12 (5 words) onto the stack */
100400de:	b4f8      	push	{r3, r4, r5, r6, r7}
                 
                 LDR    R4, =savedMSP           /* load address of savedMSP into R4 */
100400e0:	4c16      	ldr	r4, [pc, #88]	; (1004013c <CS_contextRestore+0x2a>)
                 MRS    R3, MSP                 /* load the stack pointer into R3 */
100400e2:	f3ef 8308 	mrs	r3, MSP
                 STR    R3, [R4]                /* store the MSP into savedMSP */
100400e6:	6023      	str	r3, [r4, #0]

                 PUSH   { r1, r2 }               /*  store PSP, CONTROL */
100400e8:	b406      	push	{r1, r2}
                 
                 LDR    R4, =0xE000ED04         /* load address of ICSR register into R4 */
100400ea:	4c15      	ldr	r4, [pc, #84]	; (10040140 <CS_contextRestore+0x2e>)
                 LDR    R0, [R4]                /* load the ICSR register value into R0 */
100400ec:	6820      	ldr	r0, [r4, #0]
                 LDR    R4, =savedICSR          /* load address of savedICSR into R4 */
100400ee:	4c15      	ldr	r4, [pc, #84]	; (10040144 <CS_contextRestore+0x32>)
                 STR    R0, [R4]                /* store the ICSR register value into savedICSR */
100400f0:	6020      	str	r0, [r4, #0]

                 LDR    R4, =0xE000ED24         /* load address of SHCSR register into R4 */
100400f2:	4c15      	ldr	r4, [pc, #84]	; (10040148 <CS_contextRestore+0x36>)
                 LDR    R0, [R4]                /* load the SHCSR register value into R0 */
100400f4:	6820      	ldr	r0, [r4, #0]
                 LDR    R4, =savedSHCSR         /* load address of savedSHCSR into R4 */
100400f6:	4c15      	ldr	r4, [pc, #84]	; (1004014c <CS_contextRestore+0x3a>)
                 STR    R0, [R4]                /* store the SHCSR register value into savedSHCSR */
100400f8:	6020      	str	r0, [r4, #0]

                 LDR    R4, =0xE000E200         /* load address of NVIC_ISPR register into R4 */
100400fa:	4c15      	ldr	r4, [pc, #84]	; (10040150 <CS_contextRestore+0x3e>)
                 LDR    R0, [R4]                /* load the NVIC_ISPR register value into R0 */
100400fc:	6820      	ldr	r0, [r4, #0]
                 LDR    R4, =savedNVIC_ISPR     /* load address of savedNVIC_ISPR into R4 */
100400fe:	4c15      	ldr	r4, [pc, #84]	; (10040154 <CS_contextRestore+0x42>)
                 STR    R0, [R4]                /* store the NVIC_ISPR register value into savedNVIC_ISPR */
10040100:	6020      	str	r0, [r4, #0]

                 LDR    R4, =0x40200008         /* setup the  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 0 */
10040102:	4c15      	ldr	r4, [pc, #84]	; (10040158 <CS_contextRestore+0x46>)
                 LDR    R7, [R4]
10040104:	6827      	ldr	r7, [r4, #0]
                 MOVS   R0, #0                 
10040106:	2000      	movs	r0, #0
                 STR    R0, [R4]
10040108:	6020      	str	r0, [r4, #0]

                 DSB
1004010a:	f3bf 8f4f 	dsb	sy
                 WFI                            /* all saved, trigger deep sleep */
1004010e:	bf30      	wfi
                 
                 STR    R7, [R4]                /* if WFI will be skipped restore the content of the 
10040110:	6027      	str	r7, [r4, #0]

10040112 <CS_contextRestore>:
EXPORT_FUNC(CS_contextRestore)
                /* Even if we fall through the WFI instruction, we will immediately
                 * execute a context restore and end up where we left off with no
                 * ill effects.  Normally at this point the core will either be
                 * powered off or reset (depending on the deep sleep level). */
                LDR    R4, =savedMSP            /* load address of savedMSP into R4 */
10040112:	4c0a      	ldr	r4, [pc, #40]	; (1004013c <CS_contextRestore+0x2a>)
                LDR    R4, [R4]                 /* load the MSP from savedMSP */
10040114:	6824      	ldr	r4, [r4, #0]
                MSR    MSP, R4                  /* restore the MSP from R4 */
10040116:	f384 8808 	msr	MSP, r4
              
                SUB    SP, #0x8               
1004011a:	b082      	sub	sp, #8
                POP    { R0, R1 }               /* load PSP from the stack in R0, and  load CONTROL register from the stack in R1 */
1004011c:	bc03      	pop	{r0, r1}
                
                POP    { R3-R7 }                /* load R8-R12 (5 words) from the stack */
1004011e:	bcf8      	pop	{r3, r4, r5, r6, r7}
                MOV    R8, R3                   /* mov {r3 - r7} to {r8 - r12} */
10040120:	4698      	mov	r8, r3
                MOV    R9, R4
10040122:	46a1      	mov	r9, r4
                MOV    R10, R5
10040124:	46aa      	mov	sl, r5
                MOV    R11, R6
10040126:	46b3      	mov	fp, r6
                MOV    R12, R7
10040128:	46bc      	mov	ip, r7
                POP    { R4 - R7 }              /* load R4-R7 (4 words) from the stack */
1004012a:	bcf0      	pop	{r4, r5, r6, r7}
                POP    { R2 }                   /* load LR from the stack */
1004012c:	bc04      	pop	{r2}
#ifdef CONTEXT_SAVE_V2
                ADD	   SP, #0x44                /* Restore MSP to the point where it was before pushing data to the stack in CS_contextSave */
#endif
                
                MSR    PSP, R0                   /* restore PSP from R0 */
1004012e:	f380 8809 	msr	PSP, r0
                MSR    CONTROL , R1              /* restore CONTROL register from R1 */
10040132:	f381 8814 	msr	CONTROL, r1
                ISB
10040136:	f3bf 8f6f 	isb	sy
 
                BX  R2                          /*load PC (1 words) from the stack */
1004013a:	4710      	bx	r2
                 LDR    R4, =savedMSP           /* load address of savedMSP into R4 */
1004013c:	20000008 	.word	0x20000008
                 LDR    R4, =0xE000ED04         /* load address of ICSR register into R4 */
10040140:	e000ed04 	.word	0xe000ed04
                 LDR    R4, =savedICSR          /* load address of savedICSR into R4 */
10040144:	20000850 	.word	0x20000850
                 LDR    R4, =0xE000ED24         /* load address of SHCSR register into R4 */
10040148:	e000ed24 	.word	0xe000ed24
                 LDR    R4, =savedSHCSR         /* load address of savedSHCSR into R4 */
1004014c:	2000084c 	.word	0x2000084c
                 LDR    R4, =0xE000E200         /* load address of NVIC_ISPR register into R4 */
10040150:	e000e200 	.word	0xe000e200
                 LDR    R4, =savedNVIC_ISPR     /* load address of savedNVIC_ISPR into R4 */
10040154:	20000854 	.word	0x20000854
                 LDR    R4, =0x40200008         /* setup the  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 0 */
10040158:	40200008 	.word	0x40200008

1004015c <__gnu_thumb1_case_uqi>:
1004015c:	b402      	push	{r1}
1004015e:	4671      	mov	r1, lr
10040160:	0849      	lsrs	r1, r1, #1
10040162:	0049      	lsls	r1, r1, #1
10040164:	5c09      	ldrb	r1, [r1, r0]
10040166:	0049      	lsls	r1, r1, #1
10040168:	448e      	add	lr, r1
1004016a:	bc02      	pop	{r1}
1004016c:	4770      	bx	lr
1004016e:	46c0      	nop			; (mov r8, r8)

10040170 <__udivsi3>:
10040170:	2200      	movs	r2, #0
10040172:	0843      	lsrs	r3, r0, #1
10040174:	428b      	cmp	r3, r1
10040176:	d374      	bcc.n	10040262 <__udivsi3+0xf2>
10040178:	0903      	lsrs	r3, r0, #4
1004017a:	428b      	cmp	r3, r1
1004017c:	d35f      	bcc.n	1004023e <__udivsi3+0xce>
1004017e:	0a03      	lsrs	r3, r0, #8
10040180:	428b      	cmp	r3, r1
10040182:	d344      	bcc.n	1004020e <__udivsi3+0x9e>
10040184:	0b03      	lsrs	r3, r0, #12
10040186:	428b      	cmp	r3, r1
10040188:	d328      	bcc.n	100401dc <__udivsi3+0x6c>
1004018a:	0c03      	lsrs	r3, r0, #16
1004018c:	428b      	cmp	r3, r1
1004018e:	d30d      	bcc.n	100401ac <__udivsi3+0x3c>
10040190:	22ff      	movs	r2, #255	; 0xff
10040192:	0209      	lsls	r1, r1, #8
10040194:	ba12      	rev	r2, r2
10040196:	0c03      	lsrs	r3, r0, #16
10040198:	428b      	cmp	r3, r1
1004019a:	d302      	bcc.n	100401a2 <__udivsi3+0x32>
1004019c:	1212      	asrs	r2, r2, #8
1004019e:	0209      	lsls	r1, r1, #8
100401a0:	d065      	beq.n	1004026e <__udivsi3+0xfe>
100401a2:	0b03      	lsrs	r3, r0, #12
100401a4:	428b      	cmp	r3, r1
100401a6:	d319      	bcc.n	100401dc <__udivsi3+0x6c>
100401a8:	e000      	b.n	100401ac <__udivsi3+0x3c>
100401aa:	0a09      	lsrs	r1, r1, #8
100401ac:	0bc3      	lsrs	r3, r0, #15
100401ae:	428b      	cmp	r3, r1
100401b0:	d301      	bcc.n	100401b6 <__udivsi3+0x46>
100401b2:	03cb      	lsls	r3, r1, #15
100401b4:	1ac0      	subs	r0, r0, r3
100401b6:	4152      	adcs	r2, r2
100401b8:	0b83      	lsrs	r3, r0, #14
100401ba:	428b      	cmp	r3, r1
100401bc:	d301      	bcc.n	100401c2 <__udivsi3+0x52>
100401be:	038b      	lsls	r3, r1, #14
100401c0:	1ac0      	subs	r0, r0, r3
100401c2:	4152      	adcs	r2, r2
100401c4:	0b43      	lsrs	r3, r0, #13
100401c6:	428b      	cmp	r3, r1
100401c8:	d301      	bcc.n	100401ce <__udivsi3+0x5e>
100401ca:	034b      	lsls	r3, r1, #13
100401cc:	1ac0      	subs	r0, r0, r3
100401ce:	4152      	adcs	r2, r2
100401d0:	0b03      	lsrs	r3, r0, #12
100401d2:	428b      	cmp	r3, r1
100401d4:	d301      	bcc.n	100401da <__udivsi3+0x6a>
100401d6:	030b      	lsls	r3, r1, #12
100401d8:	1ac0      	subs	r0, r0, r3
100401da:	4152      	adcs	r2, r2
100401dc:	0ac3      	lsrs	r3, r0, #11
100401de:	428b      	cmp	r3, r1
100401e0:	d301      	bcc.n	100401e6 <__udivsi3+0x76>
100401e2:	02cb      	lsls	r3, r1, #11
100401e4:	1ac0      	subs	r0, r0, r3
100401e6:	4152      	adcs	r2, r2
100401e8:	0a83      	lsrs	r3, r0, #10
100401ea:	428b      	cmp	r3, r1
100401ec:	d301      	bcc.n	100401f2 <__udivsi3+0x82>
100401ee:	028b      	lsls	r3, r1, #10
100401f0:	1ac0      	subs	r0, r0, r3
100401f2:	4152      	adcs	r2, r2
100401f4:	0a43      	lsrs	r3, r0, #9
100401f6:	428b      	cmp	r3, r1
100401f8:	d301      	bcc.n	100401fe <__udivsi3+0x8e>
100401fa:	024b      	lsls	r3, r1, #9
100401fc:	1ac0      	subs	r0, r0, r3
100401fe:	4152      	adcs	r2, r2
10040200:	0a03      	lsrs	r3, r0, #8
10040202:	428b      	cmp	r3, r1
10040204:	d301      	bcc.n	1004020a <__udivsi3+0x9a>
10040206:	020b      	lsls	r3, r1, #8
10040208:	1ac0      	subs	r0, r0, r3
1004020a:	4152      	adcs	r2, r2
1004020c:	d2cd      	bcs.n	100401aa <__udivsi3+0x3a>
1004020e:	09c3      	lsrs	r3, r0, #7
10040210:	428b      	cmp	r3, r1
10040212:	d301      	bcc.n	10040218 <__udivsi3+0xa8>
10040214:	01cb      	lsls	r3, r1, #7
10040216:	1ac0      	subs	r0, r0, r3
10040218:	4152      	adcs	r2, r2
1004021a:	0983      	lsrs	r3, r0, #6
1004021c:	428b      	cmp	r3, r1
1004021e:	d301      	bcc.n	10040224 <__udivsi3+0xb4>
10040220:	018b      	lsls	r3, r1, #6
10040222:	1ac0      	subs	r0, r0, r3
10040224:	4152      	adcs	r2, r2
10040226:	0943      	lsrs	r3, r0, #5
10040228:	428b      	cmp	r3, r1
1004022a:	d301      	bcc.n	10040230 <__udivsi3+0xc0>
1004022c:	014b      	lsls	r3, r1, #5
1004022e:	1ac0      	subs	r0, r0, r3
10040230:	4152      	adcs	r2, r2
10040232:	0903      	lsrs	r3, r0, #4
10040234:	428b      	cmp	r3, r1
10040236:	d301      	bcc.n	1004023c <__udivsi3+0xcc>
10040238:	010b      	lsls	r3, r1, #4
1004023a:	1ac0      	subs	r0, r0, r3
1004023c:	4152      	adcs	r2, r2
1004023e:	08c3      	lsrs	r3, r0, #3
10040240:	428b      	cmp	r3, r1
10040242:	d301      	bcc.n	10040248 <__udivsi3+0xd8>
10040244:	00cb      	lsls	r3, r1, #3
10040246:	1ac0      	subs	r0, r0, r3
10040248:	4152      	adcs	r2, r2
1004024a:	0883      	lsrs	r3, r0, #2
1004024c:	428b      	cmp	r3, r1
1004024e:	d301      	bcc.n	10040254 <__udivsi3+0xe4>
10040250:	008b      	lsls	r3, r1, #2
10040252:	1ac0      	subs	r0, r0, r3
10040254:	4152      	adcs	r2, r2
10040256:	0843      	lsrs	r3, r0, #1
10040258:	428b      	cmp	r3, r1
1004025a:	d301      	bcc.n	10040260 <__udivsi3+0xf0>
1004025c:	004b      	lsls	r3, r1, #1
1004025e:	1ac0      	subs	r0, r0, r3
10040260:	4152      	adcs	r2, r2
10040262:	1a41      	subs	r1, r0, r1
10040264:	d200      	bcs.n	10040268 <__udivsi3+0xf8>
10040266:	4601      	mov	r1, r0
10040268:	4152      	adcs	r2, r2
1004026a:	4610      	mov	r0, r2
1004026c:	4770      	bx	lr
1004026e:	e7ff      	b.n	10040270 <__udivsi3+0x100>
10040270:	b501      	push	{r0, lr}
10040272:	2000      	movs	r0, #0
10040274:	f000 f8f0 	bl	10040458 <__aeabi_idiv0>
10040278:	bd02      	pop	{r1, pc}
1004027a:	46c0      	nop			; (mov r8, r8)

1004027c <__aeabi_uidivmod>:
1004027c:	2900      	cmp	r1, #0
1004027e:	d0f7      	beq.n	10040270 <__udivsi3+0x100>
10040280:	e776      	b.n	10040170 <__udivsi3>
10040282:	4770      	bx	lr

10040284 <__divsi3>:
10040284:	4603      	mov	r3, r0
10040286:	430b      	orrs	r3, r1
10040288:	d47f      	bmi.n	1004038a <__divsi3+0x106>
1004028a:	2200      	movs	r2, #0
1004028c:	0843      	lsrs	r3, r0, #1
1004028e:	428b      	cmp	r3, r1
10040290:	d374      	bcc.n	1004037c <__divsi3+0xf8>
10040292:	0903      	lsrs	r3, r0, #4
10040294:	428b      	cmp	r3, r1
10040296:	d35f      	bcc.n	10040358 <__divsi3+0xd4>
10040298:	0a03      	lsrs	r3, r0, #8
1004029a:	428b      	cmp	r3, r1
1004029c:	d344      	bcc.n	10040328 <__divsi3+0xa4>
1004029e:	0b03      	lsrs	r3, r0, #12
100402a0:	428b      	cmp	r3, r1
100402a2:	d328      	bcc.n	100402f6 <__divsi3+0x72>
100402a4:	0c03      	lsrs	r3, r0, #16
100402a6:	428b      	cmp	r3, r1
100402a8:	d30d      	bcc.n	100402c6 <__divsi3+0x42>
100402aa:	22ff      	movs	r2, #255	; 0xff
100402ac:	0209      	lsls	r1, r1, #8
100402ae:	ba12      	rev	r2, r2
100402b0:	0c03      	lsrs	r3, r0, #16
100402b2:	428b      	cmp	r3, r1
100402b4:	d302      	bcc.n	100402bc <__divsi3+0x38>
100402b6:	1212      	asrs	r2, r2, #8
100402b8:	0209      	lsls	r1, r1, #8
100402ba:	d065      	beq.n	10040388 <__divsi3+0x104>
100402bc:	0b03      	lsrs	r3, r0, #12
100402be:	428b      	cmp	r3, r1
100402c0:	d319      	bcc.n	100402f6 <__divsi3+0x72>
100402c2:	e000      	b.n	100402c6 <__divsi3+0x42>
100402c4:	0a09      	lsrs	r1, r1, #8
100402c6:	0bc3      	lsrs	r3, r0, #15
100402c8:	428b      	cmp	r3, r1
100402ca:	d301      	bcc.n	100402d0 <__divsi3+0x4c>
100402cc:	03cb      	lsls	r3, r1, #15
100402ce:	1ac0      	subs	r0, r0, r3
100402d0:	4152      	adcs	r2, r2
100402d2:	0b83      	lsrs	r3, r0, #14
100402d4:	428b      	cmp	r3, r1
100402d6:	d301      	bcc.n	100402dc <__divsi3+0x58>
100402d8:	038b      	lsls	r3, r1, #14
100402da:	1ac0      	subs	r0, r0, r3
100402dc:	4152      	adcs	r2, r2
100402de:	0b43      	lsrs	r3, r0, #13
100402e0:	428b      	cmp	r3, r1
100402e2:	d301      	bcc.n	100402e8 <__divsi3+0x64>
100402e4:	034b      	lsls	r3, r1, #13
100402e6:	1ac0      	subs	r0, r0, r3
100402e8:	4152      	adcs	r2, r2
100402ea:	0b03      	lsrs	r3, r0, #12
100402ec:	428b      	cmp	r3, r1
100402ee:	d301      	bcc.n	100402f4 <__divsi3+0x70>
100402f0:	030b      	lsls	r3, r1, #12
100402f2:	1ac0      	subs	r0, r0, r3
100402f4:	4152      	adcs	r2, r2
100402f6:	0ac3      	lsrs	r3, r0, #11
100402f8:	428b      	cmp	r3, r1
100402fa:	d301      	bcc.n	10040300 <__divsi3+0x7c>
100402fc:	02cb      	lsls	r3, r1, #11
100402fe:	1ac0      	subs	r0, r0, r3
10040300:	4152      	adcs	r2, r2
10040302:	0a83      	lsrs	r3, r0, #10
10040304:	428b      	cmp	r3, r1
10040306:	d301      	bcc.n	1004030c <__divsi3+0x88>
10040308:	028b      	lsls	r3, r1, #10
1004030a:	1ac0      	subs	r0, r0, r3
1004030c:	4152      	adcs	r2, r2
1004030e:	0a43      	lsrs	r3, r0, #9
10040310:	428b      	cmp	r3, r1
10040312:	d301      	bcc.n	10040318 <__divsi3+0x94>
10040314:	024b      	lsls	r3, r1, #9
10040316:	1ac0      	subs	r0, r0, r3
10040318:	4152      	adcs	r2, r2
1004031a:	0a03      	lsrs	r3, r0, #8
1004031c:	428b      	cmp	r3, r1
1004031e:	d301      	bcc.n	10040324 <__divsi3+0xa0>
10040320:	020b      	lsls	r3, r1, #8
10040322:	1ac0      	subs	r0, r0, r3
10040324:	4152      	adcs	r2, r2
10040326:	d2cd      	bcs.n	100402c4 <__divsi3+0x40>
10040328:	09c3      	lsrs	r3, r0, #7
1004032a:	428b      	cmp	r3, r1
1004032c:	d301      	bcc.n	10040332 <__divsi3+0xae>
1004032e:	01cb      	lsls	r3, r1, #7
10040330:	1ac0      	subs	r0, r0, r3
10040332:	4152      	adcs	r2, r2
10040334:	0983      	lsrs	r3, r0, #6
10040336:	428b      	cmp	r3, r1
10040338:	d301      	bcc.n	1004033e <__divsi3+0xba>
1004033a:	018b      	lsls	r3, r1, #6
1004033c:	1ac0      	subs	r0, r0, r3
1004033e:	4152      	adcs	r2, r2
10040340:	0943      	lsrs	r3, r0, #5
10040342:	428b      	cmp	r3, r1
10040344:	d301      	bcc.n	1004034a <__divsi3+0xc6>
10040346:	014b      	lsls	r3, r1, #5
10040348:	1ac0      	subs	r0, r0, r3
1004034a:	4152      	adcs	r2, r2
1004034c:	0903      	lsrs	r3, r0, #4
1004034e:	428b      	cmp	r3, r1
10040350:	d301      	bcc.n	10040356 <__divsi3+0xd2>
10040352:	010b      	lsls	r3, r1, #4
10040354:	1ac0      	subs	r0, r0, r3
10040356:	4152      	adcs	r2, r2
10040358:	08c3      	lsrs	r3, r0, #3
1004035a:	428b      	cmp	r3, r1
1004035c:	d301      	bcc.n	10040362 <__divsi3+0xde>
1004035e:	00cb      	lsls	r3, r1, #3
10040360:	1ac0      	subs	r0, r0, r3
10040362:	4152      	adcs	r2, r2
10040364:	0883      	lsrs	r3, r0, #2
10040366:	428b      	cmp	r3, r1
10040368:	d301      	bcc.n	1004036e <__divsi3+0xea>
1004036a:	008b      	lsls	r3, r1, #2
1004036c:	1ac0      	subs	r0, r0, r3
1004036e:	4152      	adcs	r2, r2
10040370:	0843      	lsrs	r3, r0, #1
10040372:	428b      	cmp	r3, r1
10040374:	d301      	bcc.n	1004037a <__divsi3+0xf6>
10040376:	004b      	lsls	r3, r1, #1
10040378:	1ac0      	subs	r0, r0, r3
1004037a:	4152      	adcs	r2, r2
1004037c:	1a41      	subs	r1, r0, r1
1004037e:	d200      	bcs.n	10040382 <__divsi3+0xfe>
10040380:	4601      	mov	r1, r0
10040382:	4152      	adcs	r2, r2
10040384:	4610      	mov	r0, r2
10040386:	4770      	bx	lr
10040388:	e05d      	b.n	10040446 <__divsi3+0x1c2>
1004038a:	0fca      	lsrs	r2, r1, #31
1004038c:	d000      	beq.n	10040390 <__divsi3+0x10c>
1004038e:	4249      	negs	r1, r1
10040390:	1003      	asrs	r3, r0, #32
10040392:	d300      	bcc.n	10040396 <__divsi3+0x112>
10040394:	4240      	negs	r0, r0
10040396:	4053      	eors	r3, r2
10040398:	2200      	movs	r2, #0
1004039a:	469c      	mov	ip, r3
1004039c:	0903      	lsrs	r3, r0, #4
1004039e:	428b      	cmp	r3, r1
100403a0:	d32d      	bcc.n	100403fe <__divsi3+0x17a>
100403a2:	0a03      	lsrs	r3, r0, #8
100403a4:	428b      	cmp	r3, r1
100403a6:	d312      	bcc.n	100403ce <__divsi3+0x14a>
100403a8:	22fc      	movs	r2, #252	; 0xfc
100403aa:	0189      	lsls	r1, r1, #6
100403ac:	ba12      	rev	r2, r2
100403ae:	0a03      	lsrs	r3, r0, #8
100403b0:	428b      	cmp	r3, r1
100403b2:	d30c      	bcc.n	100403ce <__divsi3+0x14a>
100403b4:	0189      	lsls	r1, r1, #6
100403b6:	1192      	asrs	r2, r2, #6
100403b8:	428b      	cmp	r3, r1
100403ba:	d308      	bcc.n	100403ce <__divsi3+0x14a>
100403bc:	0189      	lsls	r1, r1, #6
100403be:	1192      	asrs	r2, r2, #6
100403c0:	428b      	cmp	r3, r1
100403c2:	d304      	bcc.n	100403ce <__divsi3+0x14a>
100403c4:	0189      	lsls	r1, r1, #6
100403c6:	d03a      	beq.n	1004043e <__divsi3+0x1ba>
100403c8:	1192      	asrs	r2, r2, #6
100403ca:	e000      	b.n	100403ce <__divsi3+0x14a>
100403cc:	0989      	lsrs	r1, r1, #6
100403ce:	09c3      	lsrs	r3, r0, #7
100403d0:	428b      	cmp	r3, r1
100403d2:	d301      	bcc.n	100403d8 <__divsi3+0x154>
100403d4:	01cb      	lsls	r3, r1, #7
100403d6:	1ac0      	subs	r0, r0, r3
100403d8:	4152      	adcs	r2, r2
100403da:	0983      	lsrs	r3, r0, #6
100403dc:	428b      	cmp	r3, r1
100403de:	d301      	bcc.n	100403e4 <__divsi3+0x160>
100403e0:	018b      	lsls	r3, r1, #6
100403e2:	1ac0      	subs	r0, r0, r3
100403e4:	4152      	adcs	r2, r2
100403e6:	0943      	lsrs	r3, r0, #5
100403e8:	428b      	cmp	r3, r1
100403ea:	d301      	bcc.n	100403f0 <__divsi3+0x16c>
100403ec:	014b      	lsls	r3, r1, #5
100403ee:	1ac0      	subs	r0, r0, r3
100403f0:	4152      	adcs	r2, r2
100403f2:	0903      	lsrs	r3, r0, #4
100403f4:	428b      	cmp	r3, r1
100403f6:	d301      	bcc.n	100403fc <__divsi3+0x178>
100403f8:	010b      	lsls	r3, r1, #4
100403fa:	1ac0      	subs	r0, r0, r3
100403fc:	4152      	adcs	r2, r2
100403fe:	08c3      	lsrs	r3, r0, #3
10040400:	428b      	cmp	r3, r1
10040402:	d301      	bcc.n	10040408 <__divsi3+0x184>
10040404:	00cb      	lsls	r3, r1, #3
10040406:	1ac0      	subs	r0, r0, r3
10040408:	4152      	adcs	r2, r2
1004040a:	0883      	lsrs	r3, r0, #2
1004040c:	428b      	cmp	r3, r1
1004040e:	d301      	bcc.n	10040414 <__divsi3+0x190>
10040410:	008b      	lsls	r3, r1, #2
10040412:	1ac0      	subs	r0, r0, r3
10040414:	4152      	adcs	r2, r2
10040416:	d2d9      	bcs.n	100403cc <__divsi3+0x148>
10040418:	0843      	lsrs	r3, r0, #1
1004041a:	428b      	cmp	r3, r1
1004041c:	d301      	bcc.n	10040422 <__divsi3+0x19e>
1004041e:	004b      	lsls	r3, r1, #1
10040420:	1ac0      	subs	r0, r0, r3
10040422:	4152      	adcs	r2, r2
10040424:	1a41      	subs	r1, r0, r1
10040426:	d200      	bcs.n	1004042a <__divsi3+0x1a6>
10040428:	4601      	mov	r1, r0
1004042a:	4663      	mov	r3, ip
1004042c:	4152      	adcs	r2, r2
1004042e:	105b      	asrs	r3, r3, #1
10040430:	4610      	mov	r0, r2
10040432:	d301      	bcc.n	10040438 <__divsi3+0x1b4>
10040434:	4240      	negs	r0, r0
10040436:	2b00      	cmp	r3, #0
10040438:	d500      	bpl.n	1004043c <__divsi3+0x1b8>
1004043a:	4249      	negs	r1, r1
1004043c:	4770      	bx	lr
1004043e:	4663      	mov	r3, ip
10040440:	105b      	asrs	r3, r3, #1
10040442:	d300      	bcc.n	10040446 <__divsi3+0x1c2>
10040444:	4240      	negs	r0, r0
10040446:	b501      	push	{r0, lr}
10040448:	2000      	movs	r0, #0
1004044a:	f000 f805 	bl	10040458 <__aeabi_idiv0>
1004044e:	bd02      	pop	{r1, pc}

10040450 <__aeabi_idivmod>:
10040450:	2900      	cmp	r1, #0
10040452:	d0f8      	beq.n	10040446 <__divsi3+0x1c2>
10040454:	e716      	b.n	10040284 <__divsi3>
10040456:	4770      	bx	lr

10040458 <__aeabi_idiv0>:
10040458:	4770      	bx	lr
1004045a:	46c0      	nop			; (mov r8, r8)

1004045c <__aeabi_cdrcmple>:
1004045c:	4684      	mov	ip, r0
1004045e:	1c10      	adds	r0, r2, #0
10040460:	4662      	mov	r2, ip
10040462:	468c      	mov	ip, r1
10040464:	1c19      	adds	r1, r3, #0
10040466:	4663      	mov	r3, ip
10040468:	e000      	b.n	1004046c <__aeabi_cdcmpeq>
1004046a:	46c0      	nop			; (mov r8, r8)

1004046c <__aeabi_cdcmpeq>:
1004046c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
1004046e:	f001 feb3 	bl	100421d8 <__ledf2>
10040472:	2800      	cmp	r0, #0
10040474:	d401      	bmi.n	1004047a <__aeabi_cdcmpeq+0xe>
10040476:	2100      	movs	r1, #0
10040478:	42c8      	cmn	r0, r1
1004047a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

1004047c <__aeabi_dcmpeq>:
1004047c:	b510      	push	{r4, lr}
1004047e:	f001 fe0d 	bl	1004209c <__eqdf2>
10040482:	4240      	negs	r0, r0
10040484:	3001      	adds	r0, #1
10040486:	bd10      	pop	{r4, pc}

10040488 <__aeabi_dcmplt>:
10040488:	b510      	push	{r4, lr}
1004048a:	f001 fea5 	bl	100421d8 <__ledf2>
1004048e:	2800      	cmp	r0, #0
10040490:	db01      	blt.n	10040496 <__aeabi_dcmplt+0xe>
10040492:	2000      	movs	r0, #0
10040494:	bd10      	pop	{r4, pc}
10040496:	2001      	movs	r0, #1
10040498:	bd10      	pop	{r4, pc}
1004049a:	46c0      	nop			; (mov r8, r8)

1004049c <__aeabi_dcmple>:
1004049c:	b510      	push	{r4, lr}
1004049e:	f001 fe9b 	bl	100421d8 <__ledf2>
100404a2:	2800      	cmp	r0, #0
100404a4:	dd01      	ble.n	100404aa <__aeabi_dcmple+0xe>
100404a6:	2000      	movs	r0, #0
100404a8:	bd10      	pop	{r4, pc}
100404aa:	2001      	movs	r0, #1
100404ac:	bd10      	pop	{r4, pc}
100404ae:	46c0      	nop			; (mov r8, r8)

100404b0 <__aeabi_dcmpgt>:
100404b0:	b510      	push	{r4, lr}
100404b2:	f001 fe2d 	bl	10042110 <__gedf2>
100404b6:	2800      	cmp	r0, #0
100404b8:	dc01      	bgt.n	100404be <__aeabi_dcmpgt+0xe>
100404ba:	2000      	movs	r0, #0
100404bc:	bd10      	pop	{r4, pc}
100404be:	2001      	movs	r0, #1
100404c0:	bd10      	pop	{r4, pc}
100404c2:	46c0      	nop			; (mov r8, r8)

100404c4 <__aeabi_dcmpge>:
100404c4:	b510      	push	{r4, lr}
100404c6:	f001 fe23 	bl	10042110 <__gedf2>
100404ca:	2800      	cmp	r0, #0
100404cc:	da01      	bge.n	100404d2 <__aeabi_dcmpge+0xe>
100404ce:	2000      	movs	r0, #0
100404d0:	bd10      	pop	{r4, pc}
100404d2:	2001      	movs	r0, #1
100404d4:	bd10      	pop	{r4, pc}
100404d6:	46c0      	nop			; (mov r8, r8)

100404d8 <__aeabi_cfrcmple>:
100404d8:	4684      	mov	ip, r0
100404da:	1c08      	adds	r0, r1, #0
100404dc:	4661      	mov	r1, ip
100404de:	e7ff      	b.n	100404e0 <__aeabi_cfcmpeq>

100404e0 <__aeabi_cfcmpeq>:
100404e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
100404e2:	f000 fbe3 	bl	10040cac <__lesf2>
100404e6:	2800      	cmp	r0, #0
100404e8:	d401      	bmi.n	100404ee <__aeabi_cfcmpeq+0xe>
100404ea:	2100      	movs	r1, #0
100404ec:	42c8      	cmn	r0, r1
100404ee:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

100404f0 <__aeabi_fcmpeq>:
100404f0:	b510      	push	{r4, lr}
100404f2:	f000 fb75 	bl	10040be0 <__eqsf2>
100404f6:	4240      	negs	r0, r0
100404f8:	3001      	adds	r0, #1
100404fa:	bd10      	pop	{r4, pc}

100404fc <__aeabi_fcmplt>:
100404fc:	b510      	push	{r4, lr}
100404fe:	f000 fbd5 	bl	10040cac <__lesf2>
10040502:	2800      	cmp	r0, #0
10040504:	db01      	blt.n	1004050a <__aeabi_fcmplt+0xe>
10040506:	2000      	movs	r0, #0
10040508:	bd10      	pop	{r4, pc}
1004050a:	2001      	movs	r0, #1
1004050c:	bd10      	pop	{r4, pc}
1004050e:	46c0      	nop			; (mov r8, r8)

10040510 <__aeabi_fcmple>:
10040510:	b510      	push	{r4, lr}
10040512:	f000 fbcb 	bl	10040cac <__lesf2>
10040516:	2800      	cmp	r0, #0
10040518:	dd01      	ble.n	1004051e <__aeabi_fcmple+0xe>
1004051a:	2000      	movs	r0, #0
1004051c:	bd10      	pop	{r4, pc}
1004051e:	2001      	movs	r0, #1
10040520:	bd10      	pop	{r4, pc}
10040522:	46c0      	nop			; (mov r8, r8)

10040524 <__aeabi_fcmpgt>:
10040524:	b510      	push	{r4, lr}
10040526:	f000 fb81 	bl	10040c2c <__gesf2>
1004052a:	2800      	cmp	r0, #0
1004052c:	dc01      	bgt.n	10040532 <__aeabi_fcmpgt+0xe>
1004052e:	2000      	movs	r0, #0
10040530:	bd10      	pop	{r4, pc}
10040532:	2001      	movs	r0, #1
10040534:	bd10      	pop	{r4, pc}
10040536:	46c0      	nop			; (mov r8, r8)

10040538 <__aeabi_fcmpge>:
10040538:	b510      	push	{r4, lr}
1004053a:	f000 fb77 	bl	10040c2c <__gesf2>
1004053e:	2800      	cmp	r0, #0
10040540:	da01      	bge.n	10040546 <__aeabi_fcmpge+0xe>
10040542:	2000      	movs	r0, #0
10040544:	bd10      	pop	{r4, pc}
10040546:	2001      	movs	r0, #1
10040548:	bd10      	pop	{r4, pc}
1004054a:	46c0      	nop			; (mov r8, r8)

1004054c <__aeabi_f2uiz>:
1004054c:	219e      	movs	r1, #158	; 0x9e
1004054e:	b510      	push	{r4, lr}
10040550:	05c9      	lsls	r1, r1, #23
10040552:	1c04      	adds	r4, r0, #0
10040554:	f7ff fff0 	bl	10040538 <__aeabi_fcmpge>
10040558:	2800      	cmp	r0, #0
1004055a:	d103      	bne.n	10040564 <__aeabi_f2uiz+0x18>
1004055c:	1c20      	adds	r0, r4, #0
1004055e:	f000 fea3 	bl	100412a8 <__aeabi_f2iz>
10040562:	bd10      	pop	{r4, pc}
10040564:	219e      	movs	r1, #158	; 0x9e
10040566:	1c20      	adds	r0, r4, #0
10040568:	05c9      	lsls	r1, r1, #23
1004056a:	f000 fd01 	bl	10040f70 <__aeabi_fsub>
1004056e:	f000 fe9b 	bl	100412a8 <__aeabi_f2iz>
10040572:	2380      	movs	r3, #128	; 0x80
10040574:	061b      	lsls	r3, r3, #24
10040576:	469c      	mov	ip, r3
10040578:	4460      	add	r0, ip
1004057a:	e7f2      	b.n	10040562 <__aeabi_f2uiz+0x16>

1004057c <__aeabi_d2uiz>:
1004057c:	b570      	push	{r4, r5, r6, lr}
1004057e:	2200      	movs	r2, #0
10040580:	4b0c      	ldr	r3, [pc, #48]	; (100405b4 <__aeabi_d2uiz+0x38>)
10040582:	0004      	movs	r4, r0
10040584:	000d      	movs	r5, r1
10040586:	f7ff ff9d 	bl	100404c4 <__aeabi_dcmpge>
1004058a:	2800      	cmp	r0, #0
1004058c:	d104      	bne.n	10040598 <__aeabi_d2uiz+0x1c>
1004058e:	0020      	movs	r0, r4
10040590:	0029      	movs	r1, r5
10040592:	f002 fc39 	bl	10042e08 <__aeabi_d2iz>
10040596:	bd70      	pop	{r4, r5, r6, pc}
10040598:	4b06      	ldr	r3, [pc, #24]	; (100405b4 <__aeabi_d2uiz+0x38>)
1004059a:	2200      	movs	r2, #0
1004059c:	0020      	movs	r0, r4
1004059e:	0029      	movs	r1, r5
100405a0:	f002 f8fc 	bl	1004279c <__aeabi_dsub>
100405a4:	f002 fc30 	bl	10042e08 <__aeabi_d2iz>
100405a8:	2380      	movs	r3, #128	; 0x80
100405aa:	061b      	lsls	r3, r3, #24
100405ac:	469c      	mov	ip, r3
100405ae:	4460      	add	r0, ip
100405b0:	e7f1      	b.n	10040596 <__aeabi_d2uiz+0x1a>
100405b2:	46c0      	nop			; (mov r8, r8)
100405b4:	41e00000 	.word	0x41e00000

100405b8 <__aeabi_uread4>:
100405b8:	7843      	ldrb	r3, [r0, #1]
100405ba:	7802      	ldrb	r2, [r0, #0]
100405bc:	021b      	lsls	r3, r3, #8
100405be:	431a      	orrs	r2, r3
100405c0:	7883      	ldrb	r3, [r0, #2]
100405c2:	78c0      	ldrb	r0, [r0, #3]
100405c4:	041b      	lsls	r3, r3, #16
100405c6:	4313      	orrs	r3, r2
100405c8:	0600      	lsls	r0, r0, #24
100405ca:	4318      	orrs	r0, r3
100405cc:	4770      	bx	lr
100405ce:	46c0      	nop			; (mov r8, r8)

100405d0 <__aeabi_uwrite4>:
100405d0:	0a03      	lsrs	r3, r0, #8
100405d2:	704b      	strb	r3, [r1, #1]
100405d4:	0c03      	lsrs	r3, r0, #16
100405d6:	708b      	strb	r3, [r1, #2]
100405d8:	0e03      	lsrs	r3, r0, #24
100405da:	7008      	strb	r0, [r1, #0]
100405dc:	70cb      	strb	r3, [r1, #3]
100405de:	4770      	bx	lr

100405e0 <__aeabi_uread8>:
100405e0:	0003      	movs	r3, r0
100405e2:	785a      	ldrb	r2, [r3, #1]
100405e4:	7800      	ldrb	r0, [r0, #0]
100405e6:	0212      	lsls	r2, r2, #8
100405e8:	4302      	orrs	r2, r0
100405ea:	7898      	ldrb	r0, [r3, #2]
100405ec:	7919      	ldrb	r1, [r3, #4]
100405ee:	0400      	lsls	r0, r0, #16
100405f0:	4302      	orrs	r2, r0
100405f2:	78d8      	ldrb	r0, [r3, #3]
100405f4:	0600      	lsls	r0, r0, #24
100405f6:	4310      	orrs	r0, r2
100405f8:	795a      	ldrb	r2, [r3, #5]
100405fa:	0212      	lsls	r2, r2, #8
100405fc:	430a      	orrs	r2, r1
100405fe:	7999      	ldrb	r1, [r3, #6]
10040600:	0409      	lsls	r1, r1, #16
10040602:	430a      	orrs	r2, r1
10040604:	79d9      	ldrb	r1, [r3, #7]
10040606:	0609      	lsls	r1, r1, #24
10040608:	4311      	orrs	r1, r2
1004060a:	4770      	bx	lr

1004060c <__aeabi_uwrite8>:
1004060c:	0a03      	lsrs	r3, r0, #8
1004060e:	7053      	strb	r3, [r2, #1]
10040610:	0c03      	lsrs	r3, r0, #16
10040612:	7093      	strb	r3, [r2, #2]
10040614:	0e03      	lsrs	r3, r0, #24
10040616:	70d3      	strb	r3, [r2, #3]
10040618:	0a0b      	lsrs	r3, r1, #8
1004061a:	7153      	strb	r3, [r2, #5]
1004061c:	0c0b      	lsrs	r3, r1, #16
1004061e:	7193      	strb	r3, [r2, #6]
10040620:	0e0b      	lsrs	r3, r1, #24
10040622:	7010      	strb	r0, [r2, #0]
10040624:	7111      	strb	r1, [r2, #4]
10040626:	71d3      	strb	r3, [r2, #7]
10040628:	4770      	bx	lr
1004062a:	46c0      	nop			; (mov r8, r8)

1004062c <__aeabi_fadd>:
1004062c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004062e:	46c6      	mov	lr, r8
10040630:	024e      	lsls	r6, r1, #9
10040632:	0247      	lsls	r7, r0, #9
10040634:	0a76      	lsrs	r6, r6, #9
10040636:	0a7b      	lsrs	r3, r7, #9
10040638:	0044      	lsls	r4, r0, #1
1004063a:	0fc5      	lsrs	r5, r0, #31
1004063c:	00f7      	lsls	r7, r6, #3
1004063e:	0048      	lsls	r0, r1, #1
10040640:	4698      	mov	r8, r3
10040642:	b500      	push	{lr}
10040644:	0e24      	lsrs	r4, r4, #24
10040646:	002a      	movs	r2, r5
10040648:	00db      	lsls	r3, r3, #3
1004064a:	0e00      	lsrs	r0, r0, #24
1004064c:	0fc9      	lsrs	r1, r1, #31
1004064e:	46bc      	mov	ip, r7
10040650:	428d      	cmp	r5, r1
10040652:	d067      	beq.n	10040724 <__aeabi_fadd+0xf8>
10040654:	1a22      	subs	r2, r4, r0
10040656:	2a00      	cmp	r2, #0
10040658:	dc00      	bgt.n	1004065c <__aeabi_fadd+0x30>
1004065a:	e0a5      	b.n	100407a8 <__aeabi_fadd+0x17c>
1004065c:	2800      	cmp	r0, #0
1004065e:	d13a      	bne.n	100406d6 <__aeabi_fadd+0xaa>
10040660:	2f00      	cmp	r7, #0
10040662:	d100      	bne.n	10040666 <__aeabi_fadd+0x3a>
10040664:	e093      	b.n	1004078e <__aeabi_fadd+0x162>
10040666:	1e51      	subs	r1, r2, #1
10040668:	2900      	cmp	r1, #0
1004066a:	d000      	beq.n	1004066e <__aeabi_fadd+0x42>
1004066c:	e0bc      	b.n	100407e8 <__aeabi_fadd+0x1bc>
1004066e:	2401      	movs	r4, #1
10040670:	1bdb      	subs	r3, r3, r7
10040672:	015a      	lsls	r2, r3, #5
10040674:	d546      	bpl.n	10040704 <__aeabi_fadd+0xd8>
10040676:	019b      	lsls	r3, r3, #6
10040678:	099e      	lsrs	r6, r3, #6
1004067a:	0030      	movs	r0, r6
1004067c:	f002 fd16 	bl	100430ac <__clzsi2>
10040680:	3805      	subs	r0, #5
10040682:	4086      	lsls	r6, r0
10040684:	4284      	cmp	r4, r0
10040686:	dd00      	ble.n	1004068a <__aeabi_fadd+0x5e>
10040688:	e09d      	b.n	100407c6 <__aeabi_fadd+0x19a>
1004068a:	1b04      	subs	r4, r0, r4
1004068c:	0032      	movs	r2, r6
1004068e:	2020      	movs	r0, #32
10040690:	3401      	adds	r4, #1
10040692:	40e2      	lsrs	r2, r4
10040694:	1b04      	subs	r4, r0, r4
10040696:	40a6      	lsls	r6, r4
10040698:	0033      	movs	r3, r6
1004069a:	1e5e      	subs	r6, r3, #1
1004069c:	41b3      	sbcs	r3, r6
1004069e:	2400      	movs	r4, #0
100406a0:	4313      	orrs	r3, r2
100406a2:	075a      	lsls	r2, r3, #29
100406a4:	d004      	beq.n	100406b0 <__aeabi_fadd+0x84>
100406a6:	220f      	movs	r2, #15
100406a8:	401a      	ands	r2, r3
100406aa:	2a04      	cmp	r2, #4
100406ac:	d000      	beq.n	100406b0 <__aeabi_fadd+0x84>
100406ae:	3304      	adds	r3, #4
100406b0:	015a      	lsls	r2, r3, #5
100406b2:	d529      	bpl.n	10040708 <__aeabi_fadd+0xdc>
100406b4:	3401      	adds	r4, #1
100406b6:	2cff      	cmp	r4, #255	; 0xff
100406b8:	d100      	bne.n	100406bc <__aeabi_fadd+0x90>
100406ba:	e081      	b.n	100407c0 <__aeabi_fadd+0x194>
100406bc:	002a      	movs	r2, r5
100406be:	019b      	lsls	r3, r3, #6
100406c0:	0a5b      	lsrs	r3, r3, #9
100406c2:	b2e4      	uxtb	r4, r4
100406c4:	025b      	lsls	r3, r3, #9
100406c6:	05e4      	lsls	r4, r4, #23
100406c8:	0a58      	lsrs	r0, r3, #9
100406ca:	07d2      	lsls	r2, r2, #31
100406cc:	4320      	orrs	r0, r4
100406ce:	4310      	orrs	r0, r2
100406d0:	bc04      	pop	{r2}
100406d2:	4690      	mov	r8, r2
100406d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100406d6:	2cff      	cmp	r4, #255	; 0xff
100406d8:	d0e3      	beq.n	100406a2 <__aeabi_fadd+0x76>
100406da:	2180      	movs	r1, #128	; 0x80
100406dc:	0038      	movs	r0, r7
100406de:	04c9      	lsls	r1, r1, #19
100406e0:	4308      	orrs	r0, r1
100406e2:	4684      	mov	ip, r0
100406e4:	2a1b      	cmp	r2, #27
100406e6:	dd00      	ble.n	100406ea <__aeabi_fadd+0xbe>
100406e8:	e082      	b.n	100407f0 <__aeabi_fadd+0x1c4>
100406ea:	2020      	movs	r0, #32
100406ec:	4661      	mov	r1, ip
100406ee:	40d1      	lsrs	r1, r2
100406f0:	1a82      	subs	r2, r0, r2
100406f2:	4660      	mov	r0, ip
100406f4:	4090      	lsls	r0, r2
100406f6:	0002      	movs	r2, r0
100406f8:	1e50      	subs	r0, r2, #1
100406fa:	4182      	sbcs	r2, r0
100406fc:	430a      	orrs	r2, r1
100406fe:	1a9b      	subs	r3, r3, r2
10040700:	015a      	lsls	r2, r3, #5
10040702:	d4b8      	bmi.n	10040676 <__aeabi_fadd+0x4a>
10040704:	075a      	lsls	r2, r3, #29
10040706:	d1ce      	bne.n	100406a6 <__aeabi_fadd+0x7a>
10040708:	08de      	lsrs	r6, r3, #3
1004070a:	002a      	movs	r2, r5
1004070c:	2cff      	cmp	r4, #255	; 0xff
1004070e:	d13a      	bne.n	10040786 <__aeabi_fadd+0x15a>
10040710:	2e00      	cmp	r6, #0
10040712:	d100      	bne.n	10040716 <__aeabi_fadd+0xea>
10040714:	e0ae      	b.n	10040874 <__aeabi_fadd+0x248>
10040716:	2380      	movs	r3, #128	; 0x80
10040718:	03db      	lsls	r3, r3, #15
1004071a:	4333      	orrs	r3, r6
1004071c:	025b      	lsls	r3, r3, #9
1004071e:	0a5b      	lsrs	r3, r3, #9
10040720:	24ff      	movs	r4, #255	; 0xff
10040722:	e7cf      	b.n	100406c4 <__aeabi_fadd+0x98>
10040724:	1a21      	subs	r1, r4, r0
10040726:	2900      	cmp	r1, #0
10040728:	dd52      	ble.n	100407d0 <__aeabi_fadd+0x1a4>
1004072a:	2800      	cmp	r0, #0
1004072c:	d031      	beq.n	10040792 <__aeabi_fadd+0x166>
1004072e:	2cff      	cmp	r4, #255	; 0xff
10040730:	d0b7      	beq.n	100406a2 <__aeabi_fadd+0x76>
10040732:	2080      	movs	r0, #128	; 0x80
10040734:	003e      	movs	r6, r7
10040736:	04c0      	lsls	r0, r0, #19
10040738:	4306      	orrs	r6, r0
1004073a:	46b4      	mov	ip, r6
1004073c:	291b      	cmp	r1, #27
1004073e:	dd00      	ble.n	10040742 <__aeabi_fadd+0x116>
10040740:	e0aa      	b.n	10040898 <__aeabi_fadd+0x26c>
10040742:	2620      	movs	r6, #32
10040744:	4660      	mov	r0, ip
10040746:	40c8      	lsrs	r0, r1
10040748:	1a71      	subs	r1, r6, r1
1004074a:	4666      	mov	r6, ip
1004074c:	408e      	lsls	r6, r1
1004074e:	0031      	movs	r1, r6
10040750:	1e4e      	subs	r6, r1, #1
10040752:	41b1      	sbcs	r1, r6
10040754:	4301      	orrs	r1, r0
10040756:	185b      	adds	r3, r3, r1
10040758:	0159      	lsls	r1, r3, #5
1004075a:	d5d3      	bpl.n	10040704 <__aeabi_fadd+0xd8>
1004075c:	3401      	adds	r4, #1
1004075e:	2cff      	cmp	r4, #255	; 0xff
10040760:	d100      	bne.n	10040764 <__aeabi_fadd+0x138>
10040762:	e087      	b.n	10040874 <__aeabi_fadd+0x248>
10040764:	2201      	movs	r2, #1
10040766:	4978      	ldr	r1, [pc, #480]	; (10040948 <__aeabi_fadd+0x31c>)
10040768:	401a      	ands	r2, r3
1004076a:	085b      	lsrs	r3, r3, #1
1004076c:	400b      	ands	r3, r1
1004076e:	4313      	orrs	r3, r2
10040770:	e797      	b.n	100406a2 <__aeabi_fadd+0x76>
10040772:	2c00      	cmp	r4, #0
10040774:	d000      	beq.n	10040778 <__aeabi_fadd+0x14c>
10040776:	e0a7      	b.n	100408c8 <__aeabi_fadd+0x29c>
10040778:	2b00      	cmp	r3, #0
1004077a:	d000      	beq.n	1004077e <__aeabi_fadd+0x152>
1004077c:	e0b6      	b.n	100408ec <__aeabi_fadd+0x2c0>
1004077e:	1e3b      	subs	r3, r7, #0
10040780:	d162      	bne.n	10040848 <__aeabi_fadd+0x21c>
10040782:	2600      	movs	r6, #0
10040784:	2200      	movs	r2, #0
10040786:	0273      	lsls	r3, r6, #9
10040788:	0a5b      	lsrs	r3, r3, #9
1004078a:	b2e4      	uxtb	r4, r4
1004078c:	e79a      	b.n	100406c4 <__aeabi_fadd+0x98>
1004078e:	0014      	movs	r4, r2
10040790:	e787      	b.n	100406a2 <__aeabi_fadd+0x76>
10040792:	2f00      	cmp	r7, #0
10040794:	d04d      	beq.n	10040832 <__aeabi_fadd+0x206>
10040796:	1e48      	subs	r0, r1, #1
10040798:	2800      	cmp	r0, #0
1004079a:	d157      	bne.n	1004084c <__aeabi_fadd+0x220>
1004079c:	4463      	add	r3, ip
1004079e:	2401      	movs	r4, #1
100407a0:	015a      	lsls	r2, r3, #5
100407a2:	d5af      	bpl.n	10040704 <__aeabi_fadd+0xd8>
100407a4:	2402      	movs	r4, #2
100407a6:	e7dd      	b.n	10040764 <__aeabi_fadd+0x138>
100407a8:	2a00      	cmp	r2, #0
100407aa:	d124      	bne.n	100407f6 <__aeabi_fadd+0x1ca>
100407ac:	1c62      	adds	r2, r4, #1
100407ae:	b2d2      	uxtb	r2, r2
100407b0:	2a01      	cmp	r2, #1
100407b2:	ddde      	ble.n	10040772 <__aeabi_fadd+0x146>
100407b4:	1bde      	subs	r6, r3, r7
100407b6:	0172      	lsls	r2, r6, #5
100407b8:	d535      	bpl.n	10040826 <__aeabi_fadd+0x1fa>
100407ba:	1afe      	subs	r6, r7, r3
100407bc:	000d      	movs	r5, r1
100407be:	e75c      	b.n	1004067a <__aeabi_fadd+0x4e>
100407c0:	002a      	movs	r2, r5
100407c2:	2300      	movs	r3, #0
100407c4:	e77e      	b.n	100406c4 <__aeabi_fadd+0x98>
100407c6:	0033      	movs	r3, r6
100407c8:	4a60      	ldr	r2, [pc, #384]	; (1004094c <__aeabi_fadd+0x320>)
100407ca:	1a24      	subs	r4, r4, r0
100407cc:	4013      	ands	r3, r2
100407ce:	e768      	b.n	100406a2 <__aeabi_fadd+0x76>
100407d0:	2900      	cmp	r1, #0
100407d2:	d163      	bne.n	1004089c <__aeabi_fadd+0x270>
100407d4:	1c61      	adds	r1, r4, #1
100407d6:	b2c8      	uxtb	r0, r1
100407d8:	2801      	cmp	r0, #1
100407da:	dd4e      	ble.n	1004087a <__aeabi_fadd+0x24e>
100407dc:	29ff      	cmp	r1, #255	; 0xff
100407de:	d049      	beq.n	10040874 <__aeabi_fadd+0x248>
100407e0:	4463      	add	r3, ip
100407e2:	085b      	lsrs	r3, r3, #1
100407e4:	000c      	movs	r4, r1
100407e6:	e75c      	b.n	100406a2 <__aeabi_fadd+0x76>
100407e8:	2aff      	cmp	r2, #255	; 0xff
100407ea:	d041      	beq.n	10040870 <__aeabi_fadd+0x244>
100407ec:	000a      	movs	r2, r1
100407ee:	e779      	b.n	100406e4 <__aeabi_fadd+0xb8>
100407f0:	2201      	movs	r2, #1
100407f2:	1a9b      	subs	r3, r3, r2
100407f4:	e784      	b.n	10040700 <__aeabi_fadd+0xd4>
100407f6:	2c00      	cmp	r4, #0
100407f8:	d01d      	beq.n	10040836 <__aeabi_fadd+0x20a>
100407fa:	28ff      	cmp	r0, #255	; 0xff
100407fc:	d022      	beq.n	10040844 <__aeabi_fadd+0x218>
100407fe:	2480      	movs	r4, #128	; 0x80
10040800:	04e4      	lsls	r4, r4, #19
10040802:	4252      	negs	r2, r2
10040804:	4323      	orrs	r3, r4
10040806:	2a1b      	cmp	r2, #27
10040808:	dd00      	ble.n	1004080c <__aeabi_fadd+0x1e0>
1004080a:	e08a      	b.n	10040922 <__aeabi_fadd+0x2f6>
1004080c:	001c      	movs	r4, r3
1004080e:	2520      	movs	r5, #32
10040810:	40d4      	lsrs	r4, r2
10040812:	1aaa      	subs	r2, r5, r2
10040814:	4093      	lsls	r3, r2
10040816:	1e5a      	subs	r2, r3, #1
10040818:	4193      	sbcs	r3, r2
1004081a:	4323      	orrs	r3, r4
1004081c:	4662      	mov	r2, ip
1004081e:	0004      	movs	r4, r0
10040820:	1ad3      	subs	r3, r2, r3
10040822:	000d      	movs	r5, r1
10040824:	e725      	b.n	10040672 <__aeabi_fadd+0x46>
10040826:	2e00      	cmp	r6, #0
10040828:	d000      	beq.n	1004082c <__aeabi_fadd+0x200>
1004082a:	e726      	b.n	1004067a <__aeabi_fadd+0x4e>
1004082c:	2200      	movs	r2, #0
1004082e:	2400      	movs	r4, #0
10040830:	e7a9      	b.n	10040786 <__aeabi_fadd+0x15a>
10040832:	000c      	movs	r4, r1
10040834:	e735      	b.n	100406a2 <__aeabi_fadd+0x76>
10040836:	2b00      	cmp	r3, #0
10040838:	d04d      	beq.n	100408d6 <__aeabi_fadd+0x2aa>
1004083a:	43d2      	mvns	r2, r2
1004083c:	2a00      	cmp	r2, #0
1004083e:	d0ed      	beq.n	1004081c <__aeabi_fadd+0x1f0>
10040840:	28ff      	cmp	r0, #255	; 0xff
10040842:	d1e0      	bne.n	10040806 <__aeabi_fadd+0x1da>
10040844:	4663      	mov	r3, ip
10040846:	24ff      	movs	r4, #255	; 0xff
10040848:	000d      	movs	r5, r1
1004084a:	e72a      	b.n	100406a2 <__aeabi_fadd+0x76>
1004084c:	29ff      	cmp	r1, #255	; 0xff
1004084e:	d00f      	beq.n	10040870 <__aeabi_fadd+0x244>
10040850:	0001      	movs	r1, r0
10040852:	e773      	b.n	1004073c <__aeabi_fadd+0x110>
10040854:	2b00      	cmp	r3, #0
10040856:	d061      	beq.n	1004091c <__aeabi_fadd+0x2f0>
10040858:	24ff      	movs	r4, #255	; 0xff
1004085a:	2f00      	cmp	r7, #0
1004085c:	d100      	bne.n	10040860 <__aeabi_fadd+0x234>
1004085e:	e720      	b.n	100406a2 <__aeabi_fadd+0x76>
10040860:	2280      	movs	r2, #128	; 0x80
10040862:	4641      	mov	r1, r8
10040864:	03d2      	lsls	r2, r2, #15
10040866:	4211      	tst	r1, r2
10040868:	d002      	beq.n	10040870 <__aeabi_fadd+0x244>
1004086a:	4216      	tst	r6, r2
1004086c:	d100      	bne.n	10040870 <__aeabi_fadd+0x244>
1004086e:	003b      	movs	r3, r7
10040870:	24ff      	movs	r4, #255	; 0xff
10040872:	e716      	b.n	100406a2 <__aeabi_fadd+0x76>
10040874:	24ff      	movs	r4, #255	; 0xff
10040876:	2300      	movs	r3, #0
10040878:	e724      	b.n	100406c4 <__aeabi_fadd+0x98>
1004087a:	2c00      	cmp	r4, #0
1004087c:	d1ea      	bne.n	10040854 <__aeabi_fadd+0x228>
1004087e:	2b00      	cmp	r3, #0
10040880:	d058      	beq.n	10040934 <__aeabi_fadd+0x308>
10040882:	2f00      	cmp	r7, #0
10040884:	d100      	bne.n	10040888 <__aeabi_fadd+0x25c>
10040886:	e70c      	b.n	100406a2 <__aeabi_fadd+0x76>
10040888:	4463      	add	r3, ip
1004088a:	015a      	lsls	r2, r3, #5
1004088c:	d400      	bmi.n	10040890 <__aeabi_fadd+0x264>
1004088e:	e739      	b.n	10040704 <__aeabi_fadd+0xd8>
10040890:	4a2e      	ldr	r2, [pc, #184]	; (1004094c <__aeabi_fadd+0x320>)
10040892:	000c      	movs	r4, r1
10040894:	4013      	ands	r3, r2
10040896:	e704      	b.n	100406a2 <__aeabi_fadd+0x76>
10040898:	2101      	movs	r1, #1
1004089a:	e75c      	b.n	10040756 <__aeabi_fadd+0x12a>
1004089c:	2c00      	cmp	r4, #0
1004089e:	d11e      	bne.n	100408de <__aeabi_fadd+0x2b2>
100408a0:	2b00      	cmp	r3, #0
100408a2:	d040      	beq.n	10040926 <__aeabi_fadd+0x2fa>
100408a4:	43c9      	mvns	r1, r1
100408a6:	2900      	cmp	r1, #0
100408a8:	d00b      	beq.n	100408c2 <__aeabi_fadd+0x296>
100408aa:	28ff      	cmp	r0, #255	; 0xff
100408ac:	d036      	beq.n	1004091c <__aeabi_fadd+0x2f0>
100408ae:	291b      	cmp	r1, #27
100408b0:	dc47      	bgt.n	10040942 <__aeabi_fadd+0x316>
100408b2:	001c      	movs	r4, r3
100408b4:	2620      	movs	r6, #32
100408b6:	40cc      	lsrs	r4, r1
100408b8:	1a71      	subs	r1, r6, r1
100408ba:	408b      	lsls	r3, r1
100408bc:	1e59      	subs	r1, r3, #1
100408be:	418b      	sbcs	r3, r1
100408c0:	4323      	orrs	r3, r4
100408c2:	4463      	add	r3, ip
100408c4:	0004      	movs	r4, r0
100408c6:	e747      	b.n	10040758 <__aeabi_fadd+0x12c>
100408c8:	2b00      	cmp	r3, #0
100408ca:	d118      	bne.n	100408fe <__aeabi_fadd+0x2d2>
100408cc:	1e3b      	subs	r3, r7, #0
100408ce:	d02d      	beq.n	1004092c <__aeabi_fadd+0x300>
100408d0:	000d      	movs	r5, r1
100408d2:	24ff      	movs	r4, #255	; 0xff
100408d4:	e6e5      	b.n	100406a2 <__aeabi_fadd+0x76>
100408d6:	003b      	movs	r3, r7
100408d8:	0004      	movs	r4, r0
100408da:	000d      	movs	r5, r1
100408dc:	e6e1      	b.n	100406a2 <__aeabi_fadd+0x76>
100408de:	28ff      	cmp	r0, #255	; 0xff
100408e0:	d01c      	beq.n	1004091c <__aeabi_fadd+0x2f0>
100408e2:	2480      	movs	r4, #128	; 0x80
100408e4:	04e4      	lsls	r4, r4, #19
100408e6:	4249      	negs	r1, r1
100408e8:	4323      	orrs	r3, r4
100408ea:	e7e0      	b.n	100408ae <__aeabi_fadd+0x282>
100408ec:	2f00      	cmp	r7, #0
100408ee:	d100      	bne.n	100408f2 <__aeabi_fadd+0x2c6>
100408f0:	e6d7      	b.n	100406a2 <__aeabi_fadd+0x76>
100408f2:	1bde      	subs	r6, r3, r7
100408f4:	0172      	lsls	r2, r6, #5
100408f6:	d51f      	bpl.n	10040938 <__aeabi_fadd+0x30c>
100408f8:	1afb      	subs	r3, r7, r3
100408fa:	000d      	movs	r5, r1
100408fc:	e6d1      	b.n	100406a2 <__aeabi_fadd+0x76>
100408fe:	24ff      	movs	r4, #255	; 0xff
10040900:	2f00      	cmp	r7, #0
10040902:	d100      	bne.n	10040906 <__aeabi_fadd+0x2da>
10040904:	e6cd      	b.n	100406a2 <__aeabi_fadd+0x76>
10040906:	2280      	movs	r2, #128	; 0x80
10040908:	4640      	mov	r0, r8
1004090a:	03d2      	lsls	r2, r2, #15
1004090c:	4210      	tst	r0, r2
1004090e:	d0af      	beq.n	10040870 <__aeabi_fadd+0x244>
10040910:	4216      	tst	r6, r2
10040912:	d1ad      	bne.n	10040870 <__aeabi_fadd+0x244>
10040914:	003b      	movs	r3, r7
10040916:	000d      	movs	r5, r1
10040918:	24ff      	movs	r4, #255	; 0xff
1004091a:	e6c2      	b.n	100406a2 <__aeabi_fadd+0x76>
1004091c:	4663      	mov	r3, ip
1004091e:	24ff      	movs	r4, #255	; 0xff
10040920:	e6bf      	b.n	100406a2 <__aeabi_fadd+0x76>
10040922:	2301      	movs	r3, #1
10040924:	e77a      	b.n	1004081c <__aeabi_fadd+0x1f0>
10040926:	003b      	movs	r3, r7
10040928:	0004      	movs	r4, r0
1004092a:	e6ba      	b.n	100406a2 <__aeabi_fadd+0x76>
1004092c:	2680      	movs	r6, #128	; 0x80
1004092e:	2200      	movs	r2, #0
10040930:	03f6      	lsls	r6, r6, #15
10040932:	e6f0      	b.n	10040716 <__aeabi_fadd+0xea>
10040934:	003b      	movs	r3, r7
10040936:	e6b4      	b.n	100406a2 <__aeabi_fadd+0x76>
10040938:	1e33      	subs	r3, r6, #0
1004093a:	d000      	beq.n	1004093e <__aeabi_fadd+0x312>
1004093c:	e6e2      	b.n	10040704 <__aeabi_fadd+0xd8>
1004093e:	2200      	movs	r2, #0
10040940:	e721      	b.n	10040786 <__aeabi_fadd+0x15a>
10040942:	2301      	movs	r3, #1
10040944:	e7bd      	b.n	100408c2 <__aeabi_fadd+0x296>
10040946:	46c0      	nop			; (mov r8, r8)
10040948:	7dffffff 	.word	0x7dffffff
1004094c:	fbffffff 	.word	0xfbffffff

10040950 <__aeabi_fdiv>:
10040950:	b5f0      	push	{r4, r5, r6, r7, lr}
10040952:	4657      	mov	r7, sl
10040954:	464e      	mov	r6, r9
10040956:	46de      	mov	lr, fp
10040958:	4645      	mov	r5, r8
1004095a:	b5e0      	push	{r5, r6, r7, lr}
1004095c:	0244      	lsls	r4, r0, #9
1004095e:	0043      	lsls	r3, r0, #1
10040960:	0fc6      	lsrs	r6, r0, #31
10040962:	b083      	sub	sp, #12
10040964:	1c0f      	adds	r7, r1, #0
10040966:	0a64      	lsrs	r4, r4, #9
10040968:	0e1b      	lsrs	r3, r3, #24
1004096a:	46b2      	mov	sl, r6
1004096c:	d053      	beq.n	10040a16 <__aeabi_fdiv+0xc6>
1004096e:	2bff      	cmp	r3, #255	; 0xff
10040970:	d027      	beq.n	100409c2 <__aeabi_fdiv+0x72>
10040972:	2280      	movs	r2, #128	; 0x80
10040974:	00e4      	lsls	r4, r4, #3
10040976:	04d2      	lsls	r2, r2, #19
10040978:	4314      	orrs	r4, r2
1004097a:	227f      	movs	r2, #127	; 0x7f
1004097c:	4252      	negs	r2, r2
1004097e:	4690      	mov	r8, r2
10040980:	4498      	add	r8, r3
10040982:	2300      	movs	r3, #0
10040984:	4699      	mov	r9, r3
10040986:	469b      	mov	fp, r3
10040988:	027d      	lsls	r5, r7, #9
1004098a:	0078      	lsls	r0, r7, #1
1004098c:	0ffb      	lsrs	r3, r7, #31
1004098e:	0a6d      	lsrs	r5, r5, #9
10040990:	0e00      	lsrs	r0, r0, #24
10040992:	9300      	str	r3, [sp, #0]
10040994:	d024      	beq.n	100409e0 <__aeabi_fdiv+0x90>
10040996:	28ff      	cmp	r0, #255	; 0xff
10040998:	d046      	beq.n	10040a28 <__aeabi_fdiv+0xd8>
1004099a:	2380      	movs	r3, #128	; 0x80
1004099c:	2100      	movs	r1, #0
1004099e:	00ed      	lsls	r5, r5, #3
100409a0:	04db      	lsls	r3, r3, #19
100409a2:	431d      	orrs	r5, r3
100409a4:	387f      	subs	r0, #127	; 0x7f
100409a6:	4647      	mov	r7, r8
100409a8:	1a38      	subs	r0, r7, r0
100409aa:	464f      	mov	r7, r9
100409ac:	430f      	orrs	r7, r1
100409ae:	00bf      	lsls	r7, r7, #2
100409b0:	46b9      	mov	r9, r7
100409b2:	0033      	movs	r3, r6
100409b4:	9a00      	ldr	r2, [sp, #0]
100409b6:	4f87      	ldr	r7, [pc, #540]	; (10040bd4 <__aeabi_fdiv+0x284>)
100409b8:	4053      	eors	r3, r2
100409ba:	464a      	mov	r2, r9
100409bc:	58ba      	ldr	r2, [r7, r2]
100409be:	9301      	str	r3, [sp, #4]
100409c0:	4697      	mov	pc, r2
100409c2:	2c00      	cmp	r4, #0
100409c4:	d14e      	bne.n	10040a64 <__aeabi_fdiv+0x114>
100409c6:	2308      	movs	r3, #8
100409c8:	4699      	mov	r9, r3
100409ca:	33f7      	adds	r3, #247	; 0xf7
100409cc:	4698      	mov	r8, r3
100409ce:	3bfd      	subs	r3, #253	; 0xfd
100409d0:	469b      	mov	fp, r3
100409d2:	027d      	lsls	r5, r7, #9
100409d4:	0078      	lsls	r0, r7, #1
100409d6:	0ffb      	lsrs	r3, r7, #31
100409d8:	0a6d      	lsrs	r5, r5, #9
100409da:	0e00      	lsrs	r0, r0, #24
100409dc:	9300      	str	r3, [sp, #0]
100409de:	d1da      	bne.n	10040996 <__aeabi_fdiv+0x46>
100409e0:	2d00      	cmp	r5, #0
100409e2:	d126      	bne.n	10040a32 <__aeabi_fdiv+0xe2>
100409e4:	2000      	movs	r0, #0
100409e6:	2101      	movs	r1, #1
100409e8:	0033      	movs	r3, r6
100409ea:	9a00      	ldr	r2, [sp, #0]
100409ec:	4f7a      	ldr	r7, [pc, #488]	; (10040bd8 <__aeabi_fdiv+0x288>)
100409ee:	4053      	eors	r3, r2
100409f0:	4642      	mov	r2, r8
100409f2:	1a10      	subs	r0, r2, r0
100409f4:	464a      	mov	r2, r9
100409f6:	430a      	orrs	r2, r1
100409f8:	0092      	lsls	r2, r2, #2
100409fa:	58ba      	ldr	r2, [r7, r2]
100409fc:	001d      	movs	r5, r3
100409fe:	4697      	mov	pc, r2
10040a00:	9b00      	ldr	r3, [sp, #0]
10040a02:	002c      	movs	r4, r5
10040a04:	469a      	mov	sl, r3
10040a06:	468b      	mov	fp, r1
10040a08:	465b      	mov	r3, fp
10040a0a:	2b02      	cmp	r3, #2
10040a0c:	d131      	bne.n	10040a72 <__aeabi_fdiv+0x122>
10040a0e:	4653      	mov	r3, sl
10040a10:	21ff      	movs	r1, #255	; 0xff
10040a12:	2400      	movs	r4, #0
10040a14:	e038      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040a16:	2c00      	cmp	r4, #0
10040a18:	d117      	bne.n	10040a4a <__aeabi_fdiv+0xfa>
10040a1a:	2304      	movs	r3, #4
10040a1c:	4699      	mov	r9, r3
10040a1e:	2300      	movs	r3, #0
10040a20:	4698      	mov	r8, r3
10040a22:	3301      	adds	r3, #1
10040a24:	469b      	mov	fp, r3
10040a26:	e7af      	b.n	10040988 <__aeabi_fdiv+0x38>
10040a28:	20ff      	movs	r0, #255	; 0xff
10040a2a:	2d00      	cmp	r5, #0
10040a2c:	d10b      	bne.n	10040a46 <__aeabi_fdiv+0xf6>
10040a2e:	2102      	movs	r1, #2
10040a30:	e7da      	b.n	100409e8 <__aeabi_fdiv+0x98>
10040a32:	0028      	movs	r0, r5
10040a34:	f002 fb3a 	bl	100430ac <__clzsi2>
10040a38:	1f43      	subs	r3, r0, #5
10040a3a:	409d      	lsls	r5, r3
10040a3c:	2376      	movs	r3, #118	; 0x76
10040a3e:	425b      	negs	r3, r3
10040a40:	1a18      	subs	r0, r3, r0
10040a42:	2100      	movs	r1, #0
10040a44:	e7af      	b.n	100409a6 <__aeabi_fdiv+0x56>
10040a46:	2103      	movs	r1, #3
10040a48:	e7ad      	b.n	100409a6 <__aeabi_fdiv+0x56>
10040a4a:	0020      	movs	r0, r4
10040a4c:	f002 fb2e 	bl	100430ac <__clzsi2>
10040a50:	1f43      	subs	r3, r0, #5
10040a52:	409c      	lsls	r4, r3
10040a54:	2376      	movs	r3, #118	; 0x76
10040a56:	425b      	negs	r3, r3
10040a58:	1a1b      	subs	r3, r3, r0
10040a5a:	4698      	mov	r8, r3
10040a5c:	2300      	movs	r3, #0
10040a5e:	4699      	mov	r9, r3
10040a60:	469b      	mov	fp, r3
10040a62:	e791      	b.n	10040988 <__aeabi_fdiv+0x38>
10040a64:	230c      	movs	r3, #12
10040a66:	4699      	mov	r9, r3
10040a68:	33f3      	adds	r3, #243	; 0xf3
10040a6a:	4698      	mov	r8, r3
10040a6c:	3bfc      	subs	r3, #252	; 0xfc
10040a6e:	469b      	mov	fp, r3
10040a70:	e78a      	b.n	10040988 <__aeabi_fdiv+0x38>
10040a72:	2b03      	cmp	r3, #3
10040a74:	d100      	bne.n	10040a78 <__aeabi_fdiv+0x128>
10040a76:	e0a5      	b.n	10040bc4 <__aeabi_fdiv+0x274>
10040a78:	4655      	mov	r5, sl
10040a7a:	2b01      	cmp	r3, #1
10040a7c:	d000      	beq.n	10040a80 <__aeabi_fdiv+0x130>
10040a7e:	e081      	b.n	10040b84 <__aeabi_fdiv+0x234>
10040a80:	2301      	movs	r3, #1
10040a82:	2100      	movs	r1, #0
10040a84:	2400      	movs	r4, #0
10040a86:	402b      	ands	r3, r5
10040a88:	0264      	lsls	r4, r4, #9
10040a8a:	05c9      	lsls	r1, r1, #23
10040a8c:	0a60      	lsrs	r0, r4, #9
10040a8e:	07db      	lsls	r3, r3, #31
10040a90:	4308      	orrs	r0, r1
10040a92:	4318      	orrs	r0, r3
10040a94:	b003      	add	sp, #12
10040a96:	bc3c      	pop	{r2, r3, r4, r5}
10040a98:	4690      	mov	r8, r2
10040a9a:	4699      	mov	r9, r3
10040a9c:	46a2      	mov	sl, r4
10040a9e:	46ab      	mov	fp, r5
10040aa0:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040aa2:	2480      	movs	r4, #128	; 0x80
10040aa4:	2300      	movs	r3, #0
10040aa6:	03e4      	lsls	r4, r4, #15
10040aa8:	21ff      	movs	r1, #255	; 0xff
10040aaa:	e7ed      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040aac:	21ff      	movs	r1, #255	; 0xff
10040aae:	2400      	movs	r4, #0
10040ab0:	e7ea      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040ab2:	2301      	movs	r3, #1
10040ab4:	1a59      	subs	r1, r3, r1
10040ab6:	291b      	cmp	r1, #27
10040ab8:	dd66      	ble.n	10040b88 <__aeabi_fdiv+0x238>
10040aba:	9a01      	ldr	r2, [sp, #4]
10040abc:	4013      	ands	r3, r2
10040abe:	2100      	movs	r1, #0
10040ac0:	2400      	movs	r4, #0
10040ac2:	e7e1      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040ac4:	2380      	movs	r3, #128	; 0x80
10040ac6:	03db      	lsls	r3, r3, #15
10040ac8:	421c      	tst	r4, r3
10040aca:	d038      	beq.n	10040b3e <__aeabi_fdiv+0x1ee>
10040acc:	421d      	tst	r5, r3
10040ace:	d051      	beq.n	10040b74 <__aeabi_fdiv+0x224>
10040ad0:	431c      	orrs	r4, r3
10040ad2:	0264      	lsls	r4, r4, #9
10040ad4:	0a64      	lsrs	r4, r4, #9
10040ad6:	0033      	movs	r3, r6
10040ad8:	21ff      	movs	r1, #255	; 0xff
10040ada:	e7d5      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040adc:	0163      	lsls	r3, r4, #5
10040ade:	016c      	lsls	r4, r5, #5
10040ae0:	42a3      	cmp	r3, r4
10040ae2:	d23b      	bcs.n	10040b5c <__aeabi_fdiv+0x20c>
10040ae4:	261b      	movs	r6, #27
10040ae6:	2100      	movs	r1, #0
10040ae8:	3801      	subs	r0, #1
10040aea:	2501      	movs	r5, #1
10040aec:	001f      	movs	r7, r3
10040aee:	0049      	lsls	r1, r1, #1
10040af0:	005b      	lsls	r3, r3, #1
10040af2:	2f00      	cmp	r7, #0
10040af4:	db01      	blt.n	10040afa <__aeabi_fdiv+0x1aa>
10040af6:	429c      	cmp	r4, r3
10040af8:	d801      	bhi.n	10040afe <__aeabi_fdiv+0x1ae>
10040afa:	1b1b      	subs	r3, r3, r4
10040afc:	4329      	orrs	r1, r5
10040afe:	3e01      	subs	r6, #1
10040b00:	2e00      	cmp	r6, #0
10040b02:	d1f3      	bne.n	10040aec <__aeabi_fdiv+0x19c>
10040b04:	001c      	movs	r4, r3
10040b06:	1e63      	subs	r3, r4, #1
10040b08:	419c      	sbcs	r4, r3
10040b0a:	430c      	orrs	r4, r1
10040b0c:	0001      	movs	r1, r0
10040b0e:	317f      	adds	r1, #127	; 0x7f
10040b10:	2900      	cmp	r1, #0
10040b12:	ddce      	ble.n	10040ab2 <__aeabi_fdiv+0x162>
10040b14:	0763      	lsls	r3, r4, #29
10040b16:	d004      	beq.n	10040b22 <__aeabi_fdiv+0x1d2>
10040b18:	230f      	movs	r3, #15
10040b1a:	4023      	ands	r3, r4
10040b1c:	2b04      	cmp	r3, #4
10040b1e:	d000      	beq.n	10040b22 <__aeabi_fdiv+0x1d2>
10040b20:	3404      	adds	r4, #4
10040b22:	0123      	lsls	r3, r4, #4
10040b24:	d503      	bpl.n	10040b2e <__aeabi_fdiv+0x1de>
10040b26:	0001      	movs	r1, r0
10040b28:	4b2c      	ldr	r3, [pc, #176]	; (10040bdc <__aeabi_fdiv+0x28c>)
10040b2a:	3180      	adds	r1, #128	; 0x80
10040b2c:	401c      	ands	r4, r3
10040b2e:	29fe      	cmp	r1, #254	; 0xfe
10040b30:	dd0d      	ble.n	10040b4e <__aeabi_fdiv+0x1fe>
10040b32:	2301      	movs	r3, #1
10040b34:	9a01      	ldr	r2, [sp, #4]
10040b36:	21ff      	movs	r1, #255	; 0xff
10040b38:	4013      	ands	r3, r2
10040b3a:	2400      	movs	r4, #0
10040b3c:	e7a4      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040b3e:	2380      	movs	r3, #128	; 0x80
10040b40:	03db      	lsls	r3, r3, #15
10040b42:	431c      	orrs	r4, r3
10040b44:	0264      	lsls	r4, r4, #9
10040b46:	0a64      	lsrs	r4, r4, #9
10040b48:	0033      	movs	r3, r6
10040b4a:	21ff      	movs	r1, #255	; 0xff
10040b4c:	e79c      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040b4e:	2301      	movs	r3, #1
10040b50:	9a01      	ldr	r2, [sp, #4]
10040b52:	01a4      	lsls	r4, r4, #6
10040b54:	0a64      	lsrs	r4, r4, #9
10040b56:	b2c9      	uxtb	r1, r1
10040b58:	4013      	ands	r3, r2
10040b5a:	e795      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040b5c:	1b1b      	subs	r3, r3, r4
10040b5e:	261a      	movs	r6, #26
10040b60:	2101      	movs	r1, #1
10040b62:	e7c2      	b.n	10040aea <__aeabi_fdiv+0x19a>
10040b64:	9b00      	ldr	r3, [sp, #0]
10040b66:	468b      	mov	fp, r1
10040b68:	469a      	mov	sl, r3
10040b6a:	2400      	movs	r4, #0
10040b6c:	e74c      	b.n	10040a08 <__aeabi_fdiv+0xb8>
10040b6e:	0263      	lsls	r3, r4, #9
10040b70:	d5e5      	bpl.n	10040b3e <__aeabi_fdiv+0x1ee>
10040b72:	2500      	movs	r5, #0
10040b74:	2480      	movs	r4, #128	; 0x80
10040b76:	03e4      	lsls	r4, r4, #15
10040b78:	432c      	orrs	r4, r5
10040b7a:	0264      	lsls	r4, r4, #9
10040b7c:	0a64      	lsrs	r4, r4, #9
10040b7e:	9b00      	ldr	r3, [sp, #0]
10040b80:	21ff      	movs	r1, #255	; 0xff
10040b82:	e781      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040b84:	9501      	str	r5, [sp, #4]
10040b86:	e7c1      	b.n	10040b0c <__aeabi_fdiv+0x1bc>
10040b88:	0023      	movs	r3, r4
10040b8a:	2020      	movs	r0, #32
10040b8c:	40cb      	lsrs	r3, r1
10040b8e:	1a41      	subs	r1, r0, r1
10040b90:	408c      	lsls	r4, r1
10040b92:	1e61      	subs	r1, r4, #1
10040b94:	418c      	sbcs	r4, r1
10040b96:	431c      	orrs	r4, r3
10040b98:	0763      	lsls	r3, r4, #29
10040b9a:	d004      	beq.n	10040ba6 <__aeabi_fdiv+0x256>
10040b9c:	230f      	movs	r3, #15
10040b9e:	4023      	ands	r3, r4
10040ba0:	2b04      	cmp	r3, #4
10040ba2:	d000      	beq.n	10040ba6 <__aeabi_fdiv+0x256>
10040ba4:	3404      	adds	r4, #4
10040ba6:	0163      	lsls	r3, r4, #5
10040ba8:	d505      	bpl.n	10040bb6 <__aeabi_fdiv+0x266>
10040baa:	2301      	movs	r3, #1
10040bac:	9a01      	ldr	r2, [sp, #4]
10040bae:	2101      	movs	r1, #1
10040bb0:	4013      	ands	r3, r2
10040bb2:	2400      	movs	r4, #0
10040bb4:	e768      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040bb6:	2301      	movs	r3, #1
10040bb8:	9a01      	ldr	r2, [sp, #4]
10040bba:	01a4      	lsls	r4, r4, #6
10040bbc:	0a64      	lsrs	r4, r4, #9
10040bbe:	4013      	ands	r3, r2
10040bc0:	2100      	movs	r1, #0
10040bc2:	e761      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040bc4:	2380      	movs	r3, #128	; 0x80
10040bc6:	03db      	lsls	r3, r3, #15
10040bc8:	431c      	orrs	r4, r3
10040bca:	0264      	lsls	r4, r4, #9
10040bcc:	0a64      	lsrs	r4, r4, #9
10040bce:	4653      	mov	r3, sl
10040bd0:	21ff      	movs	r1, #255	; 0xff
10040bd2:	e759      	b.n	10040a88 <__aeabi_fdiv+0x138>
10040bd4:	100582a4 	.word	0x100582a4
10040bd8:	100582e4 	.word	0x100582e4
10040bdc:	f7ffffff 	.word	0xf7ffffff

10040be0 <__eqsf2>:
10040be0:	b570      	push	{r4, r5, r6, lr}
10040be2:	0042      	lsls	r2, r0, #1
10040be4:	0245      	lsls	r5, r0, #9
10040be6:	024e      	lsls	r6, r1, #9
10040be8:	004c      	lsls	r4, r1, #1
10040bea:	0fc3      	lsrs	r3, r0, #31
10040bec:	0a6d      	lsrs	r5, r5, #9
10040bee:	0e12      	lsrs	r2, r2, #24
10040bf0:	0a76      	lsrs	r6, r6, #9
10040bf2:	0e24      	lsrs	r4, r4, #24
10040bf4:	0fc9      	lsrs	r1, r1, #31
10040bf6:	2001      	movs	r0, #1
10040bf8:	2aff      	cmp	r2, #255	; 0xff
10040bfa:	d006      	beq.n	10040c0a <__eqsf2+0x2a>
10040bfc:	2cff      	cmp	r4, #255	; 0xff
10040bfe:	d003      	beq.n	10040c08 <__eqsf2+0x28>
10040c00:	42a2      	cmp	r2, r4
10040c02:	d101      	bne.n	10040c08 <__eqsf2+0x28>
10040c04:	42b5      	cmp	r5, r6
10040c06:	d006      	beq.n	10040c16 <__eqsf2+0x36>
10040c08:	bd70      	pop	{r4, r5, r6, pc}
10040c0a:	2d00      	cmp	r5, #0
10040c0c:	d1fc      	bne.n	10040c08 <__eqsf2+0x28>
10040c0e:	2cff      	cmp	r4, #255	; 0xff
10040c10:	d1fa      	bne.n	10040c08 <__eqsf2+0x28>
10040c12:	2e00      	cmp	r6, #0
10040c14:	d1f8      	bne.n	10040c08 <__eqsf2+0x28>
10040c16:	428b      	cmp	r3, r1
10040c18:	d006      	beq.n	10040c28 <__eqsf2+0x48>
10040c1a:	2001      	movs	r0, #1
10040c1c:	2a00      	cmp	r2, #0
10040c1e:	d1f3      	bne.n	10040c08 <__eqsf2+0x28>
10040c20:	0028      	movs	r0, r5
10040c22:	1e45      	subs	r5, r0, #1
10040c24:	41a8      	sbcs	r0, r5
10040c26:	e7ef      	b.n	10040c08 <__eqsf2+0x28>
10040c28:	2000      	movs	r0, #0
10040c2a:	e7ed      	b.n	10040c08 <__eqsf2+0x28>

10040c2c <__gesf2>:
10040c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
10040c2e:	0042      	lsls	r2, r0, #1
10040c30:	0245      	lsls	r5, r0, #9
10040c32:	024c      	lsls	r4, r1, #9
10040c34:	0fc3      	lsrs	r3, r0, #31
10040c36:	0048      	lsls	r0, r1, #1
10040c38:	0a6d      	lsrs	r5, r5, #9
10040c3a:	0e12      	lsrs	r2, r2, #24
10040c3c:	0a64      	lsrs	r4, r4, #9
10040c3e:	0e00      	lsrs	r0, r0, #24
10040c40:	0fc9      	lsrs	r1, r1, #31
10040c42:	2aff      	cmp	r2, #255	; 0xff
10040c44:	d01e      	beq.n	10040c84 <__gesf2+0x58>
10040c46:	28ff      	cmp	r0, #255	; 0xff
10040c48:	d021      	beq.n	10040c8e <__gesf2+0x62>
10040c4a:	2a00      	cmp	r2, #0
10040c4c:	d10a      	bne.n	10040c64 <__gesf2+0x38>
10040c4e:	426e      	negs	r6, r5
10040c50:	416e      	adcs	r6, r5
10040c52:	b2f6      	uxtb	r6, r6
10040c54:	2800      	cmp	r0, #0
10040c56:	d10f      	bne.n	10040c78 <__gesf2+0x4c>
10040c58:	2c00      	cmp	r4, #0
10040c5a:	d10d      	bne.n	10040c78 <__gesf2+0x4c>
10040c5c:	2000      	movs	r0, #0
10040c5e:	2d00      	cmp	r5, #0
10040c60:	d009      	beq.n	10040c76 <__gesf2+0x4a>
10040c62:	e005      	b.n	10040c70 <__gesf2+0x44>
10040c64:	2800      	cmp	r0, #0
10040c66:	d101      	bne.n	10040c6c <__gesf2+0x40>
10040c68:	2c00      	cmp	r4, #0
10040c6a:	d001      	beq.n	10040c70 <__gesf2+0x44>
10040c6c:	428b      	cmp	r3, r1
10040c6e:	d011      	beq.n	10040c94 <__gesf2+0x68>
10040c70:	2101      	movs	r1, #1
10040c72:	4258      	negs	r0, r3
10040c74:	4308      	orrs	r0, r1
10040c76:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040c78:	2e00      	cmp	r6, #0
10040c7a:	d0f7      	beq.n	10040c6c <__gesf2+0x40>
10040c7c:	2001      	movs	r0, #1
10040c7e:	3901      	subs	r1, #1
10040c80:	4308      	orrs	r0, r1
10040c82:	e7f8      	b.n	10040c76 <__gesf2+0x4a>
10040c84:	2d00      	cmp	r5, #0
10040c86:	d0de      	beq.n	10040c46 <__gesf2+0x1a>
10040c88:	2002      	movs	r0, #2
10040c8a:	4240      	negs	r0, r0
10040c8c:	e7f3      	b.n	10040c76 <__gesf2+0x4a>
10040c8e:	2c00      	cmp	r4, #0
10040c90:	d0db      	beq.n	10040c4a <__gesf2+0x1e>
10040c92:	e7f9      	b.n	10040c88 <__gesf2+0x5c>
10040c94:	4282      	cmp	r2, r0
10040c96:	dceb      	bgt.n	10040c70 <__gesf2+0x44>
10040c98:	db04      	blt.n	10040ca4 <__gesf2+0x78>
10040c9a:	42a5      	cmp	r5, r4
10040c9c:	d8e8      	bhi.n	10040c70 <__gesf2+0x44>
10040c9e:	2000      	movs	r0, #0
10040ca0:	42a5      	cmp	r5, r4
10040ca2:	d2e8      	bcs.n	10040c76 <__gesf2+0x4a>
10040ca4:	2101      	movs	r1, #1
10040ca6:	1e58      	subs	r0, r3, #1
10040ca8:	4308      	orrs	r0, r1
10040caa:	e7e4      	b.n	10040c76 <__gesf2+0x4a>

10040cac <__lesf2>:
10040cac:	b5f0      	push	{r4, r5, r6, r7, lr}
10040cae:	0042      	lsls	r2, r0, #1
10040cb0:	024d      	lsls	r5, r1, #9
10040cb2:	004c      	lsls	r4, r1, #1
10040cb4:	0246      	lsls	r6, r0, #9
10040cb6:	0a76      	lsrs	r6, r6, #9
10040cb8:	0e12      	lsrs	r2, r2, #24
10040cba:	0fc3      	lsrs	r3, r0, #31
10040cbc:	0a6d      	lsrs	r5, r5, #9
10040cbe:	0e24      	lsrs	r4, r4, #24
10040cc0:	0fc9      	lsrs	r1, r1, #31
10040cc2:	2aff      	cmp	r2, #255	; 0xff
10040cc4:	d016      	beq.n	10040cf4 <__lesf2+0x48>
10040cc6:	2cff      	cmp	r4, #255	; 0xff
10040cc8:	d018      	beq.n	10040cfc <__lesf2+0x50>
10040cca:	2a00      	cmp	r2, #0
10040ccc:	d10a      	bne.n	10040ce4 <__lesf2+0x38>
10040cce:	4270      	negs	r0, r6
10040cd0:	4170      	adcs	r0, r6
10040cd2:	b2c0      	uxtb	r0, r0
10040cd4:	2c00      	cmp	r4, #0
10040cd6:	d015      	beq.n	10040d04 <__lesf2+0x58>
10040cd8:	2800      	cmp	r0, #0
10040cda:	d005      	beq.n	10040ce8 <__lesf2+0x3c>
10040cdc:	2001      	movs	r0, #1
10040cde:	3901      	subs	r1, #1
10040ce0:	4308      	orrs	r0, r1
10040ce2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040ce4:	2c00      	cmp	r4, #0
10040ce6:	d013      	beq.n	10040d10 <__lesf2+0x64>
10040ce8:	4299      	cmp	r1, r3
10040cea:	d014      	beq.n	10040d16 <__lesf2+0x6a>
10040cec:	2001      	movs	r0, #1
10040cee:	425b      	negs	r3, r3
10040cf0:	4318      	orrs	r0, r3
10040cf2:	e7f6      	b.n	10040ce2 <__lesf2+0x36>
10040cf4:	2002      	movs	r0, #2
10040cf6:	2e00      	cmp	r6, #0
10040cf8:	d1f3      	bne.n	10040ce2 <__lesf2+0x36>
10040cfa:	e7e4      	b.n	10040cc6 <__lesf2+0x1a>
10040cfc:	2002      	movs	r0, #2
10040cfe:	2d00      	cmp	r5, #0
10040d00:	d1ef      	bne.n	10040ce2 <__lesf2+0x36>
10040d02:	e7e2      	b.n	10040cca <__lesf2+0x1e>
10040d04:	2d00      	cmp	r5, #0
10040d06:	d1e7      	bne.n	10040cd8 <__lesf2+0x2c>
10040d08:	2000      	movs	r0, #0
10040d0a:	2e00      	cmp	r6, #0
10040d0c:	d0e9      	beq.n	10040ce2 <__lesf2+0x36>
10040d0e:	e7ed      	b.n	10040cec <__lesf2+0x40>
10040d10:	2d00      	cmp	r5, #0
10040d12:	d1e9      	bne.n	10040ce8 <__lesf2+0x3c>
10040d14:	e7ea      	b.n	10040cec <__lesf2+0x40>
10040d16:	42a2      	cmp	r2, r4
10040d18:	dc06      	bgt.n	10040d28 <__lesf2+0x7c>
10040d1a:	dbdf      	blt.n	10040cdc <__lesf2+0x30>
10040d1c:	42ae      	cmp	r6, r5
10040d1e:	d803      	bhi.n	10040d28 <__lesf2+0x7c>
10040d20:	2000      	movs	r0, #0
10040d22:	42ae      	cmp	r6, r5
10040d24:	d3da      	bcc.n	10040cdc <__lesf2+0x30>
10040d26:	e7dc      	b.n	10040ce2 <__lesf2+0x36>
10040d28:	2001      	movs	r0, #1
10040d2a:	4249      	negs	r1, r1
10040d2c:	4308      	orrs	r0, r1
10040d2e:	e7d8      	b.n	10040ce2 <__lesf2+0x36>

10040d30 <__aeabi_fmul>:
10040d30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10040d32:	4657      	mov	r7, sl
10040d34:	464e      	mov	r6, r9
10040d36:	4645      	mov	r5, r8
10040d38:	46de      	mov	lr, fp
10040d3a:	b5e0      	push	{r5, r6, r7, lr}
10040d3c:	0247      	lsls	r7, r0, #9
10040d3e:	0046      	lsls	r6, r0, #1
10040d40:	4688      	mov	r8, r1
10040d42:	0a7f      	lsrs	r7, r7, #9
10040d44:	0e36      	lsrs	r6, r6, #24
10040d46:	0fc4      	lsrs	r4, r0, #31
10040d48:	2e00      	cmp	r6, #0
10040d4a:	d047      	beq.n	10040ddc <__aeabi_fmul+0xac>
10040d4c:	2eff      	cmp	r6, #255	; 0xff
10040d4e:	d024      	beq.n	10040d9a <__aeabi_fmul+0x6a>
10040d50:	00fb      	lsls	r3, r7, #3
10040d52:	2780      	movs	r7, #128	; 0x80
10040d54:	04ff      	lsls	r7, r7, #19
10040d56:	431f      	orrs	r7, r3
10040d58:	2300      	movs	r3, #0
10040d5a:	4699      	mov	r9, r3
10040d5c:	469a      	mov	sl, r3
10040d5e:	3e7f      	subs	r6, #127	; 0x7f
10040d60:	4643      	mov	r3, r8
10040d62:	025d      	lsls	r5, r3, #9
10040d64:	0058      	lsls	r0, r3, #1
10040d66:	0fdb      	lsrs	r3, r3, #31
10040d68:	0a6d      	lsrs	r5, r5, #9
10040d6a:	0e00      	lsrs	r0, r0, #24
10040d6c:	4698      	mov	r8, r3
10040d6e:	d043      	beq.n	10040df8 <__aeabi_fmul+0xc8>
10040d70:	28ff      	cmp	r0, #255	; 0xff
10040d72:	d03b      	beq.n	10040dec <__aeabi_fmul+0xbc>
10040d74:	00eb      	lsls	r3, r5, #3
10040d76:	2580      	movs	r5, #128	; 0x80
10040d78:	2200      	movs	r2, #0
10040d7a:	04ed      	lsls	r5, r5, #19
10040d7c:	431d      	orrs	r5, r3
10040d7e:	387f      	subs	r0, #127	; 0x7f
10040d80:	1836      	adds	r6, r6, r0
10040d82:	1c73      	adds	r3, r6, #1
10040d84:	4641      	mov	r1, r8
10040d86:	469b      	mov	fp, r3
10040d88:	464b      	mov	r3, r9
10040d8a:	4061      	eors	r1, r4
10040d8c:	4313      	orrs	r3, r2
10040d8e:	2b0f      	cmp	r3, #15
10040d90:	d864      	bhi.n	10040e5c <__aeabi_fmul+0x12c>
10040d92:	4875      	ldr	r0, [pc, #468]	; (10040f68 <__aeabi_fmul+0x238>)
10040d94:	009b      	lsls	r3, r3, #2
10040d96:	58c3      	ldr	r3, [r0, r3]
10040d98:	469f      	mov	pc, r3
10040d9a:	2f00      	cmp	r7, #0
10040d9c:	d142      	bne.n	10040e24 <__aeabi_fmul+0xf4>
10040d9e:	2308      	movs	r3, #8
10040da0:	4699      	mov	r9, r3
10040da2:	3b06      	subs	r3, #6
10040da4:	26ff      	movs	r6, #255	; 0xff
10040da6:	469a      	mov	sl, r3
10040da8:	e7da      	b.n	10040d60 <__aeabi_fmul+0x30>
10040daa:	4641      	mov	r1, r8
10040dac:	2a02      	cmp	r2, #2
10040dae:	d028      	beq.n	10040e02 <__aeabi_fmul+0xd2>
10040db0:	2a03      	cmp	r2, #3
10040db2:	d100      	bne.n	10040db6 <__aeabi_fmul+0x86>
10040db4:	e0ce      	b.n	10040f54 <__aeabi_fmul+0x224>
10040db6:	2a01      	cmp	r2, #1
10040db8:	d000      	beq.n	10040dbc <__aeabi_fmul+0x8c>
10040dba:	e0ac      	b.n	10040f16 <__aeabi_fmul+0x1e6>
10040dbc:	4011      	ands	r1, r2
10040dbe:	2000      	movs	r0, #0
10040dc0:	2200      	movs	r2, #0
10040dc2:	b2cc      	uxtb	r4, r1
10040dc4:	0240      	lsls	r0, r0, #9
10040dc6:	05d2      	lsls	r2, r2, #23
10040dc8:	0a40      	lsrs	r0, r0, #9
10040dca:	07e4      	lsls	r4, r4, #31
10040dcc:	4310      	orrs	r0, r2
10040dce:	4320      	orrs	r0, r4
10040dd0:	bc3c      	pop	{r2, r3, r4, r5}
10040dd2:	4690      	mov	r8, r2
10040dd4:	4699      	mov	r9, r3
10040dd6:	46a2      	mov	sl, r4
10040dd8:	46ab      	mov	fp, r5
10040dda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10040ddc:	2f00      	cmp	r7, #0
10040dde:	d115      	bne.n	10040e0c <__aeabi_fmul+0xdc>
10040de0:	2304      	movs	r3, #4
10040de2:	4699      	mov	r9, r3
10040de4:	3b03      	subs	r3, #3
10040de6:	2600      	movs	r6, #0
10040de8:	469a      	mov	sl, r3
10040dea:	e7b9      	b.n	10040d60 <__aeabi_fmul+0x30>
10040dec:	20ff      	movs	r0, #255	; 0xff
10040dee:	2202      	movs	r2, #2
10040df0:	2d00      	cmp	r5, #0
10040df2:	d0c5      	beq.n	10040d80 <__aeabi_fmul+0x50>
10040df4:	2203      	movs	r2, #3
10040df6:	e7c3      	b.n	10040d80 <__aeabi_fmul+0x50>
10040df8:	2d00      	cmp	r5, #0
10040dfa:	d119      	bne.n	10040e30 <__aeabi_fmul+0x100>
10040dfc:	2000      	movs	r0, #0
10040dfe:	2201      	movs	r2, #1
10040e00:	e7be      	b.n	10040d80 <__aeabi_fmul+0x50>
10040e02:	2401      	movs	r4, #1
10040e04:	22ff      	movs	r2, #255	; 0xff
10040e06:	400c      	ands	r4, r1
10040e08:	2000      	movs	r0, #0
10040e0a:	e7db      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040e0c:	0038      	movs	r0, r7
10040e0e:	f002 f94d 	bl	100430ac <__clzsi2>
10040e12:	2676      	movs	r6, #118	; 0x76
10040e14:	1f43      	subs	r3, r0, #5
10040e16:	409f      	lsls	r7, r3
10040e18:	2300      	movs	r3, #0
10040e1a:	4276      	negs	r6, r6
10040e1c:	1a36      	subs	r6, r6, r0
10040e1e:	4699      	mov	r9, r3
10040e20:	469a      	mov	sl, r3
10040e22:	e79d      	b.n	10040d60 <__aeabi_fmul+0x30>
10040e24:	230c      	movs	r3, #12
10040e26:	4699      	mov	r9, r3
10040e28:	3b09      	subs	r3, #9
10040e2a:	26ff      	movs	r6, #255	; 0xff
10040e2c:	469a      	mov	sl, r3
10040e2e:	e797      	b.n	10040d60 <__aeabi_fmul+0x30>
10040e30:	0028      	movs	r0, r5
10040e32:	f002 f93b 	bl	100430ac <__clzsi2>
10040e36:	1f43      	subs	r3, r0, #5
10040e38:	409d      	lsls	r5, r3
10040e3a:	2376      	movs	r3, #118	; 0x76
10040e3c:	425b      	negs	r3, r3
10040e3e:	1a18      	subs	r0, r3, r0
10040e40:	2200      	movs	r2, #0
10040e42:	e79d      	b.n	10040d80 <__aeabi_fmul+0x50>
10040e44:	2080      	movs	r0, #128	; 0x80
10040e46:	2400      	movs	r4, #0
10040e48:	03c0      	lsls	r0, r0, #15
10040e4a:	22ff      	movs	r2, #255	; 0xff
10040e4c:	e7ba      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040e4e:	003d      	movs	r5, r7
10040e50:	4652      	mov	r2, sl
10040e52:	e7ab      	b.n	10040dac <__aeabi_fmul+0x7c>
10040e54:	003d      	movs	r5, r7
10040e56:	0021      	movs	r1, r4
10040e58:	4652      	mov	r2, sl
10040e5a:	e7a7      	b.n	10040dac <__aeabi_fmul+0x7c>
10040e5c:	0c3b      	lsrs	r3, r7, #16
10040e5e:	469c      	mov	ip, r3
10040e60:	042a      	lsls	r2, r5, #16
10040e62:	0c12      	lsrs	r2, r2, #16
10040e64:	0c2b      	lsrs	r3, r5, #16
10040e66:	0014      	movs	r4, r2
10040e68:	4660      	mov	r0, ip
10040e6a:	4665      	mov	r5, ip
10040e6c:	043f      	lsls	r7, r7, #16
10040e6e:	0c3f      	lsrs	r7, r7, #16
10040e70:	437c      	muls	r4, r7
10040e72:	4342      	muls	r2, r0
10040e74:	435d      	muls	r5, r3
10040e76:	437b      	muls	r3, r7
10040e78:	0c27      	lsrs	r7, r4, #16
10040e7a:	189b      	adds	r3, r3, r2
10040e7c:	18ff      	adds	r7, r7, r3
10040e7e:	42ba      	cmp	r2, r7
10040e80:	d903      	bls.n	10040e8a <__aeabi_fmul+0x15a>
10040e82:	2380      	movs	r3, #128	; 0x80
10040e84:	025b      	lsls	r3, r3, #9
10040e86:	469c      	mov	ip, r3
10040e88:	4465      	add	r5, ip
10040e8a:	0424      	lsls	r4, r4, #16
10040e8c:	043a      	lsls	r2, r7, #16
10040e8e:	0c24      	lsrs	r4, r4, #16
10040e90:	1912      	adds	r2, r2, r4
10040e92:	0193      	lsls	r3, r2, #6
10040e94:	1e5c      	subs	r4, r3, #1
10040e96:	41a3      	sbcs	r3, r4
10040e98:	0c3f      	lsrs	r7, r7, #16
10040e9a:	0e92      	lsrs	r2, r2, #26
10040e9c:	197d      	adds	r5, r7, r5
10040e9e:	431a      	orrs	r2, r3
10040ea0:	01ad      	lsls	r5, r5, #6
10040ea2:	4315      	orrs	r5, r2
10040ea4:	012b      	lsls	r3, r5, #4
10040ea6:	d504      	bpl.n	10040eb2 <__aeabi_fmul+0x182>
10040ea8:	2301      	movs	r3, #1
10040eaa:	465e      	mov	r6, fp
10040eac:	086a      	lsrs	r2, r5, #1
10040eae:	401d      	ands	r5, r3
10040eb0:	4315      	orrs	r5, r2
10040eb2:	0032      	movs	r2, r6
10040eb4:	327f      	adds	r2, #127	; 0x7f
10040eb6:	2a00      	cmp	r2, #0
10040eb8:	dd25      	ble.n	10040f06 <__aeabi_fmul+0x1d6>
10040eba:	076b      	lsls	r3, r5, #29
10040ebc:	d004      	beq.n	10040ec8 <__aeabi_fmul+0x198>
10040ebe:	230f      	movs	r3, #15
10040ec0:	402b      	ands	r3, r5
10040ec2:	2b04      	cmp	r3, #4
10040ec4:	d000      	beq.n	10040ec8 <__aeabi_fmul+0x198>
10040ec6:	3504      	adds	r5, #4
10040ec8:	012b      	lsls	r3, r5, #4
10040eca:	d503      	bpl.n	10040ed4 <__aeabi_fmul+0x1a4>
10040ecc:	0032      	movs	r2, r6
10040ece:	4b27      	ldr	r3, [pc, #156]	; (10040f6c <__aeabi_fmul+0x23c>)
10040ed0:	3280      	adds	r2, #128	; 0x80
10040ed2:	401d      	ands	r5, r3
10040ed4:	2afe      	cmp	r2, #254	; 0xfe
10040ed6:	dc94      	bgt.n	10040e02 <__aeabi_fmul+0xd2>
10040ed8:	2401      	movs	r4, #1
10040eda:	01a8      	lsls	r0, r5, #6
10040edc:	0a40      	lsrs	r0, r0, #9
10040ede:	b2d2      	uxtb	r2, r2
10040ee0:	400c      	ands	r4, r1
10040ee2:	e76f      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040ee4:	2080      	movs	r0, #128	; 0x80
10040ee6:	03c0      	lsls	r0, r0, #15
10040ee8:	4207      	tst	r7, r0
10040eea:	d007      	beq.n	10040efc <__aeabi_fmul+0x1cc>
10040eec:	4205      	tst	r5, r0
10040eee:	d105      	bne.n	10040efc <__aeabi_fmul+0x1cc>
10040ef0:	4328      	orrs	r0, r5
10040ef2:	0240      	lsls	r0, r0, #9
10040ef4:	0a40      	lsrs	r0, r0, #9
10040ef6:	4644      	mov	r4, r8
10040ef8:	22ff      	movs	r2, #255	; 0xff
10040efa:	e763      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040efc:	4338      	orrs	r0, r7
10040efe:	0240      	lsls	r0, r0, #9
10040f00:	0a40      	lsrs	r0, r0, #9
10040f02:	22ff      	movs	r2, #255	; 0xff
10040f04:	e75e      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040f06:	2401      	movs	r4, #1
10040f08:	1aa3      	subs	r3, r4, r2
10040f0a:	2b1b      	cmp	r3, #27
10040f0c:	dd05      	ble.n	10040f1a <__aeabi_fmul+0x1ea>
10040f0e:	400c      	ands	r4, r1
10040f10:	2200      	movs	r2, #0
10040f12:	2000      	movs	r0, #0
10040f14:	e756      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040f16:	465e      	mov	r6, fp
10040f18:	e7cb      	b.n	10040eb2 <__aeabi_fmul+0x182>
10040f1a:	002a      	movs	r2, r5
10040f1c:	2020      	movs	r0, #32
10040f1e:	40da      	lsrs	r2, r3
10040f20:	1ac3      	subs	r3, r0, r3
10040f22:	409d      	lsls	r5, r3
10040f24:	002b      	movs	r3, r5
10040f26:	1e5d      	subs	r5, r3, #1
10040f28:	41ab      	sbcs	r3, r5
10040f2a:	4313      	orrs	r3, r2
10040f2c:	075a      	lsls	r2, r3, #29
10040f2e:	d004      	beq.n	10040f3a <__aeabi_fmul+0x20a>
10040f30:	220f      	movs	r2, #15
10040f32:	401a      	ands	r2, r3
10040f34:	2a04      	cmp	r2, #4
10040f36:	d000      	beq.n	10040f3a <__aeabi_fmul+0x20a>
10040f38:	3304      	adds	r3, #4
10040f3a:	015a      	lsls	r2, r3, #5
10040f3c:	d504      	bpl.n	10040f48 <__aeabi_fmul+0x218>
10040f3e:	2401      	movs	r4, #1
10040f40:	2201      	movs	r2, #1
10040f42:	400c      	ands	r4, r1
10040f44:	2000      	movs	r0, #0
10040f46:	e73d      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040f48:	2401      	movs	r4, #1
10040f4a:	019b      	lsls	r3, r3, #6
10040f4c:	0a58      	lsrs	r0, r3, #9
10040f4e:	400c      	ands	r4, r1
10040f50:	2200      	movs	r2, #0
10040f52:	e737      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040f54:	2080      	movs	r0, #128	; 0x80
10040f56:	2401      	movs	r4, #1
10040f58:	03c0      	lsls	r0, r0, #15
10040f5a:	4328      	orrs	r0, r5
10040f5c:	0240      	lsls	r0, r0, #9
10040f5e:	0a40      	lsrs	r0, r0, #9
10040f60:	400c      	ands	r4, r1
10040f62:	22ff      	movs	r2, #255	; 0xff
10040f64:	e72e      	b.n	10040dc4 <__aeabi_fmul+0x94>
10040f66:	46c0      	nop			; (mov r8, r8)
10040f68:	10058324 	.word	0x10058324
10040f6c:	f7ffffff 	.word	0xf7ffffff

10040f70 <__aeabi_fsub>:
10040f70:	b5f0      	push	{r4, r5, r6, r7, lr}
10040f72:	464f      	mov	r7, r9
10040f74:	46d6      	mov	lr, sl
10040f76:	4646      	mov	r6, r8
10040f78:	0044      	lsls	r4, r0, #1
10040f7a:	b5c0      	push	{r6, r7, lr}
10040f7c:	0fc2      	lsrs	r2, r0, #31
10040f7e:	0247      	lsls	r7, r0, #9
10040f80:	0248      	lsls	r0, r1, #9
10040f82:	0a40      	lsrs	r0, r0, #9
10040f84:	4684      	mov	ip, r0
10040f86:	4666      	mov	r6, ip
10040f88:	0a7b      	lsrs	r3, r7, #9
10040f8a:	0048      	lsls	r0, r1, #1
10040f8c:	0fc9      	lsrs	r1, r1, #31
10040f8e:	469a      	mov	sl, r3
10040f90:	0e24      	lsrs	r4, r4, #24
10040f92:	0015      	movs	r5, r2
10040f94:	00db      	lsls	r3, r3, #3
10040f96:	0e00      	lsrs	r0, r0, #24
10040f98:	4689      	mov	r9, r1
10040f9a:	00f6      	lsls	r6, r6, #3
10040f9c:	28ff      	cmp	r0, #255	; 0xff
10040f9e:	d100      	bne.n	10040fa2 <__aeabi_fsub+0x32>
10040fa0:	e08f      	b.n	100410c2 <__aeabi_fsub+0x152>
10040fa2:	2101      	movs	r1, #1
10040fa4:	464f      	mov	r7, r9
10040fa6:	404f      	eors	r7, r1
10040fa8:	0039      	movs	r1, r7
10040faa:	4291      	cmp	r1, r2
10040fac:	d066      	beq.n	1004107c <__aeabi_fsub+0x10c>
10040fae:	1a22      	subs	r2, r4, r0
10040fb0:	2a00      	cmp	r2, #0
10040fb2:	dc00      	bgt.n	10040fb6 <__aeabi_fsub+0x46>
10040fb4:	e09d      	b.n	100410f2 <__aeabi_fsub+0x182>
10040fb6:	2800      	cmp	r0, #0
10040fb8:	d13d      	bne.n	10041036 <__aeabi_fsub+0xc6>
10040fba:	2e00      	cmp	r6, #0
10040fbc:	d100      	bne.n	10040fc0 <__aeabi_fsub+0x50>
10040fbe:	e08b      	b.n	100410d8 <__aeabi_fsub+0x168>
10040fc0:	1e51      	subs	r1, r2, #1
10040fc2:	2900      	cmp	r1, #0
10040fc4:	d000      	beq.n	10040fc8 <__aeabi_fsub+0x58>
10040fc6:	e0b5      	b.n	10041134 <__aeabi_fsub+0x1c4>
10040fc8:	2401      	movs	r4, #1
10040fca:	1b9b      	subs	r3, r3, r6
10040fcc:	015a      	lsls	r2, r3, #5
10040fce:	d544      	bpl.n	1004105a <__aeabi_fsub+0xea>
10040fd0:	019b      	lsls	r3, r3, #6
10040fd2:	099f      	lsrs	r7, r3, #6
10040fd4:	0038      	movs	r0, r7
10040fd6:	f002 f869 	bl	100430ac <__clzsi2>
10040fda:	3805      	subs	r0, #5
10040fdc:	4087      	lsls	r7, r0
10040fde:	4284      	cmp	r4, r0
10040fe0:	dd00      	ble.n	10040fe4 <__aeabi_fsub+0x74>
10040fe2:	e096      	b.n	10041112 <__aeabi_fsub+0x1a2>
10040fe4:	1b04      	subs	r4, r0, r4
10040fe6:	003a      	movs	r2, r7
10040fe8:	2020      	movs	r0, #32
10040fea:	3401      	adds	r4, #1
10040fec:	40e2      	lsrs	r2, r4
10040fee:	1b04      	subs	r4, r0, r4
10040ff0:	40a7      	lsls	r7, r4
10040ff2:	003b      	movs	r3, r7
10040ff4:	1e5f      	subs	r7, r3, #1
10040ff6:	41bb      	sbcs	r3, r7
10040ff8:	2400      	movs	r4, #0
10040ffa:	4313      	orrs	r3, r2
10040ffc:	075a      	lsls	r2, r3, #29
10040ffe:	d004      	beq.n	1004100a <__aeabi_fsub+0x9a>
10041000:	220f      	movs	r2, #15
10041002:	401a      	ands	r2, r3
10041004:	2a04      	cmp	r2, #4
10041006:	d000      	beq.n	1004100a <__aeabi_fsub+0x9a>
10041008:	3304      	adds	r3, #4
1004100a:	015a      	lsls	r2, r3, #5
1004100c:	d527      	bpl.n	1004105e <__aeabi_fsub+0xee>
1004100e:	3401      	adds	r4, #1
10041010:	2cff      	cmp	r4, #255	; 0xff
10041012:	d100      	bne.n	10041016 <__aeabi_fsub+0xa6>
10041014:	e079      	b.n	1004110a <__aeabi_fsub+0x19a>
10041016:	2201      	movs	r2, #1
10041018:	019b      	lsls	r3, r3, #6
1004101a:	0a5b      	lsrs	r3, r3, #9
1004101c:	b2e4      	uxtb	r4, r4
1004101e:	402a      	ands	r2, r5
10041020:	025b      	lsls	r3, r3, #9
10041022:	05e4      	lsls	r4, r4, #23
10041024:	0a58      	lsrs	r0, r3, #9
10041026:	07d2      	lsls	r2, r2, #31
10041028:	4320      	orrs	r0, r4
1004102a:	4310      	orrs	r0, r2
1004102c:	bc1c      	pop	{r2, r3, r4}
1004102e:	4690      	mov	r8, r2
10041030:	4699      	mov	r9, r3
10041032:	46a2      	mov	sl, r4
10041034:	bdf0      	pop	{r4, r5, r6, r7, pc}
10041036:	2cff      	cmp	r4, #255	; 0xff
10041038:	d0e0      	beq.n	10040ffc <__aeabi_fsub+0x8c>
1004103a:	2180      	movs	r1, #128	; 0x80
1004103c:	04c9      	lsls	r1, r1, #19
1004103e:	430e      	orrs	r6, r1
10041040:	2a1b      	cmp	r2, #27
10041042:	dc7b      	bgt.n	1004113c <__aeabi_fsub+0x1cc>
10041044:	0031      	movs	r1, r6
10041046:	2020      	movs	r0, #32
10041048:	40d1      	lsrs	r1, r2
1004104a:	1a82      	subs	r2, r0, r2
1004104c:	4096      	lsls	r6, r2
1004104e:	1e72      	subs	r2, r6, #1
10041050:	4196      	sbcs	r6, r2
10041052:	430e      	orrs	r6, r1
10041054:	1b9b      	subs	r3, r3, r6
10041056:	015a      	lsls	r2, r3, #5
10041058:	d4ba      	bmi.n	10040fd0 <__aeabi_fsub+0x60>
1004105a:	075a      	lsls	r2, r3, #29
1004105c:	d1d0      	bne.n	10041000 <__aeabi_fsub+0x90>
1004105e:	2201      	movs	r2, #1
10041060:	08df      	lsrs	r7, r3, #3
10041062:	402a      	ands	r2, r5
10041064:	2cff      	cmp	r4, #255	; 0xff
10041066:	d133      	bne.n	100410d0 <__aeabi_fsub+0x160>
10041068:	2f00      	cmp	r7, #0
1004106a:	d100      	bne.n	1004106e <__aeabi_fsub+0xfe>
1004106c:	e0a8      	b.n	100411c0 <__aeabi_fsub+0x250>
1004106e:	2380      	movs	r3, #128	; 0x80
10041070:	03db      	lsls	r3, r3, #15
10041072:	433b      	orrs	r3, r7
10041074:	025b      	lsls	r3, r3, #9
10041076:	0a5b      	lsrs	r3, r3, #9
10041078:	24ff      	movs	r4, #255	; 0xff
1004107a:	e7d1      	b.n	10041020 <__aeabi_fsub+0xb0>
1004107c:	1a21      	subs	r1, r4, r0
1004107e:	2900      	cmp	r1, #0
10041080:	dd4c      	ble.n	1004111c <__aeabi_fsub+0x1ac>
10041082:	2800      	cmp	r0, #0
10041084:	d02a      	beq.n	100410dc <__aeabi_fsub+0x16c>
10041086:	2cff      	cmp	r4, #255	; 0xff
10041088:	d0b8      	beq.n	10040ffc <__aeabi_fsub+0x8c>
1004108a:	2080      	movs	r0, #128	; 0x80
1004108c:	04c0      	lsls	r0, r0, #19
1004108e:	4306      	orrs	r6, r0
10041090:	291b      	cmp	r1, #27
10041092:	dd00      	ble.n	10041096 <__aeabi_fsub+0x126>
10041094:	e0af      	b.n	100411f6 <__aeabi_fsub+0x286>
10041096:	0030      	movs	r0, r6
10041098:	2720      	movs	r7, #32
1004109a:	40c8      	lsrs	r0, r1
1004109c:	1a79      	subs	r1, r7, r1
1004109e:	408e      	lsls	r6, r1
100410a0:	1e71      	subs	r1, r6, #1
100410a2:	418e      	sbcs	r6, r1
100410a4:	4306      	orrs	r6, r0
100410a6:	199b      	adds	r3, r3, r6
100410a8:	0159      	lsls	r1, r3, #5
100410aa:	d5d6      	bpl.n	1004105a <__aeabi_fsub+0xea>
100410ac:	3401      	adds	r4, #1
100410ae:	2cff      	cmp	r4, #255	; 0xff
100410b0:	d100      	bne.n	100410b4 <__aeabi_fsub+0x144>
100410b2:	e085      	b.n	100411c0 <__aeabi_fsub+0x250>
100410b4:	2201      	movs	r2, #1
100410b6:	497a      	ldr	r1, [pc, #488]	; (100412a0 <__aeabi_fsub+0x330>)
100410b8:	401a      	ands	r2, r3
100410ba:	085b      	lsrs	r3, r3, #1
100410bc:	400b      	ands	r3, r1
100410be:	4313      	orrs	r3, r2
100410c0:	e79c      	b.n	10040ffc <__aeabi_fsub+0x8c>
100410c2:	2e00      	cmp	r6, #0
100410c4:	d000      	beq.n	100410c8 <__aeabi_fsub+0x158>
100410c6:	e770      	b.n	10040faa <__aeabi_fsub+0x3a>
100410c8:	e76b      	b.n	10040fa2 <__aeabi_fsub+0x32>
100410ca:	1e3b      	subs	r3, r7, #0
100410cc:	d1c5      	bne.n	1004105a <__aeabi_fsub+0xea>
100410ce:	2200      	movs	r2, #0
100410d0:	027b      	lsls	r3, r7, #9
100410d2:	0a5b      	lsrs	r3, r3, #9
100410d4:	b2e4      	uxtb	r4, r4
100410d6:	e7a3      	b.n	10041020 <__aeabi_fsub+0xb0>
100410d8:	0014      	movs	r4, r2
100410da:	e78f      	b.n	10040ffc <__aeabi_fsub+0x8c>
100410dc:	2e00      	cmp	r6, #0
100410de:	d04d      	beq.n	1004117c <__aeabi_fsub+0x20c>
100410e0:	1e48      	subs	r0, r1, #1
100410e2:	2800      	cmp	r0, #0
100410e4:	d157      	bne.n	10041196 <__aeabi_fsub+0x226>
100410e6:	199b      	adds	r3, r3, r6
100410e8:	2401      	movs	r4, #1
100410ea:	015a      	lsls	r2, r3, #5
100410ec:	d5b5      	bpl.n	1004105a <__aeabi_fsub+0xea>
100410ee:	2402      	movs	r4, #2
100410f0:	e7e0      	b.n	100410b4 <__aeabi_fsub+0x144>
100410f2:	2a00      	cmp	r2, #0
100410f4:	d125      	bne.n	10041142 <__aeabi_fsub+0x1d2>
100410f6:	1c62      	adds	r2, r4, #1
100410f8:	b2d2      	uxtb	r2, r2
100410fa:	2a01      	cmp	r2, #1
100410fc:	dd72      	ble.n	100411e4 <__aeabi_fsub+0x274>
100410fe:	1b9f      	subs	r7, r3, r6
10041100:	017a      	lsls	r2, r7, #5
10041102:	d535      	bpl.n	10041170 <__aeabi_fsub+0x200>
10041104:	1af7      	subs	r7, r6, r3
10041106:	000d      	movs	r5, r1
10041108:	e764      	b.n	10040fd4 <__aeabi_fsub+0x64>
1004110a:	2201      	movs	r2, #1
1004110c:	2300      	movs	r3, #0
1004110e:	402a      	ands	r2, r5
10041110:	e786      	b.n	10041020 <__aeabi_fsub+0xb0>
10041112:	003b      	movs	r3, r7
10041114:	4a63      	ldr	r2, [pc, #396]	; (100412a4 <__aeabi_fsub+0x334>)
10041116:	1a24      	subs	r4, r4, r0
10041118:	4013      	ands	r3, r2
1004111a:	e76f      	b.n	10040ffc <__aeabi_fsub+0x8c>
1004111c:	2900      	cmp	r1, #0
1004111e:	d16c      	bne.n	100411fa <__aeabi_fsub+0x28a>
10041120:	1c61      	adds	r1, r4, #1
10041122:	b2c8      	uxtb	r0, r1
10041124:	2801      	cmp	r0, #1
10041126:	dd4e      	ble.n	100411c6 <__aeabi_fsub+0x256>
10041128:	29ff      	cmp	r1, #255	; 0xff
1004112a:	d049      	beq.n	100411c0 <__aeabi_fsub+0x250>
1004112c:	199b      	adds	r3, r3, r6
1004112e:	085b      	lsrs	r3, r3, #1
10041130:	000c      	movs	r4, r1
10041132:	e763      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041134:	2aff      	cmp	r2, #255	; 0xff
10041136:	d041      	beq.n	100411bc <__aeabi_fsub+0x24c>
10041138:	000a      	movs	r2, r1
1004113a:	e781      	b.n	10041040 <__aeabi_fsub+0xd0>
1004113c:	2601      	movs	r6, #1
1004113e:	1b9b      	subs	r3, r3, r6
10041140:	e789      	b.n	10041056 <__aeabi_fsub+0xe6>
10041142:	2c00      	cmp	r4, #0
10041144:	d01c      	beq.n	10041180 <__aeabi_fsub+0x210>
10041146:	28ff      	cmp	r0, #255	; 0xff
10041148:	d021      	beq.n	1004118e <__aeabi_fsub+0x21e>
1004114a:	2480      	movs	r4, #128	; 0x80
1004114c:	04e4      	lsls	r4, r4, #19
1004114e:	4252      	negs	r2, r2
10041150:	4323      	orrs	r3, r4
10041152:	2a1b      	cmp	r2, #27
10041154:	dd00      	ble.n	10041158 <__aeabi_fsub+0x1e8>
10041156:	e096      	b.n	10041286 <__aeabi_fsub+0x316>
10041158:	001c      	movs	r4, r3
1004115a:	2520      	movs	r5, #32
1004115c:	40d4      	lsrs	r4, r2
1004115e:	1aaa      	subs	r2, r5, r2
10041160:	4093      	lsls	r3, r2
10041162:	1e5a      	subs	r2, r3, #1
10041164:	4193      	sbcs	r3, r2
10041166:	4323      	orrs	r3, r4
10041168:	1af3      	subs	r3, r6, r3
1004116a:	0004      	movs	r4, r0
1004116c:	000d      	movs	r5, r1
1004116e:	e72d      	b.n	10040fcc <__aeabi_fsub+0x5c>
10041170:	2f00      	cmp	r7, #0
10041172:	d000      	beq.n	10041176 <__aeabi_fsub+0x206>
10041174:	e72e      	b.n	10040fd4 <__aeabi_fsub+0x64>
10041176:	2200      	movs	r2, #0
10041178:	2400      	movs	r4, #0
1004117a:	e7a9      	b.n	100410d0 <__aeabi_fsub+0x160>
1004117c:	000c      	movs	r4, r1
1004117e:	e73d      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041180:	2b00      	cmp	r3, #0
10041182:	d058      	beq.n	10041236 <__aeabi_fsub+0x2c6>
10041184:	43d2      	mvns	r2, r2
10041186:	2a00      	cmp	r2, #0
10041188:	d0ee      	beq.n	10041168 <__aeabi_fsub+0x1f8>
1004118a:	28ff      	cmp	r0, #255	; 0xff
1004118c:	d1e1      	bne.n	10041152 <__aeabi_fsub+0x1e2>
1004118e:	0033      	movs	r3, r6
10041190:	24ff      	movs	r4, #255	; 0xff
10041192:	000d      	movs	r5, r1
10041194:	e732      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041196:	29ff      	cmp	r1, #255	; 0xff
10041198:	d010      	beq.n	100411bc <__aeabi_fsub+0x24c>
1004119a:	0001      	movs	r1, r0
1004119c:	e778      	b.n	10041090 <__aeabi_fsub+0x120>
1004119e:	2b00      	cmp	r3, #0
100411a0:	d06e      	beq.n	10041280 <__aeabi_fsub+0x310>
100411a2:	24ff      	movs	r4, #255	; 0xff
100411a4:	2e00      	cmp	r6, #0
100411a6:	d100      	bne.n	100411aa <__aeabi_fsub+0x23a>
100411a8:	e728      	b.n	10040ffc <__aeabi_fsub+0x8c>
100411aa:	2280      	movs	r2, #128	; 0x80
100411ac:	4651      	mov	r1, sl
100411ae:	03d2      	lsls	r2, r2, #15
100411b0:	4211      	tst	r1, r2
100411b2:	d003      	beq.n	100411bc <__aeabi_fsub+0x24c>
100411b4:	4661      	mov	r1, ip
100411b6:	4211      	tst	r1, r2
100411b8:	d100      	bne.n	100411bc <__aeabi_fsub+0x24c>
100411ba:	0033      	movs	r3, r6
100411bc:	24ff      	movs	r4, #255	; 0xff
100411be:	e71d      	b.n	10040ffc <__aeabi_fsub+0x8c>
100411c0:	24ff      	movs	r4, #255	; 0xff
100411c2:	2300      	movs	r3, #0
100411c4:	e72c      	b.n	10041020 <__aeabi_fsub+0xb0>
100411c6:	2c00      	cmp	r4, #0
100411c8:	d1e9      	bne.n	1004119e <__aeabi_fsub+0x22e>
100411ca:	2b00      	cmp	r3, #0
100411cc:	d063      	beq.n	10041296 <__aeabi_fsub+0x326>
100411ce:	2e00      	cmp	r6, #0
100411d0:	d100      	bne.n	100411d4 <__aeabi_fsub+0x264>
100411d2:	e713      	b.n	10040ffc <__aeabi_fsub+0x8c>
100411d4:	199b      	adds	r3, r3, r6
100411d6:	015a      	lsls	r2, r3, #5
100411d8:	d400      	bmi.n	100411dc <__aeabi_fsub+0x26c>
100411da:	e73e      	b.n	1004105a <__aeabi_fsub+0xea>
100411dc:	4a31      	ldr	r2, [pc, #196]	; (100412a4 <__aeabi_fsub+0x334>)
100411de:	000c      	movs	r4, r1
100411e0:	4013      	ands	r3, r2
100411e2:	e70b      	b.n	10040ffc <__aeabi_fsub+0x8c>
100411e4:	2c00      	cmp	r4, #0
100411e6:	d11e      	bne.n	10041226 <__aeabi_fsub+0x2b6>
100411e8:	2b00      	cmp	r3, #0
100411ea:	d12f      	bne.n	1004124c <__aeabi_fsub+0x2dc>
100411ec:	2e00      	cmp	r6, #0
100411ee:	d04f      	beq.n	10041290 <__aeabi_fsub+0x320>
100411f0:	0033      	movs	r3, r6
100411f2:	000d      	movs	r5, r1
100411f4:	e702      	b.n	10040ffc <__aeabi_fsub+0x8c>
100411f6:	2601      	movs	r6, #1
100411f8:	e755      	b.n	100410a6 <__aeabi_fsub+0x136>
100411fa:	2c00      	cmp	r4, #0
100411fc:	d11f      	bne.n	1004123e <__aeabi_fsub+0x2ce>
100411fe:	2b00      	cmp	r3, #0
10041200:	d043      	beq.n	1004128a <__aeabi_fsub+0x31a>
10041202:	43c9      	mvns	r1, r1
10041204:	2900      	cmp	r1, #0
10041206:	d00b      	beq.n	10041220 <__aeabi_fsub+0x2b0>
10041208:	28ff      	cmp	r0, #255	; 0xff
1004120a:	d039      	beq.n	10041280 <__aeabi_fsub+0x310>
1004120c:	291b      	cmp	r1, #27
1004120e:	dc44      	bgt.n	1004129a <__aeabi_fsub+0x32a>
10041210:	001c      	movs	r4, r3
10041212:	2720      	movs	r7, #32
10041214:	40cc      	lsrs	r4, r1
10041216:	1a79      	subs	r1, r7, r1
10041218:	408b      	lsls	r3, r1
1004121a:	1e59      	subs	r1, r3, #1
1004121c:	418b      	sbcs	r3, r1
1004121e:	4323      	orrs	r3, r4
10041220:	199b      	adds	r3, r3, r6
10041222:	0004      	movs	r4, r0
10041224:	e740      	b.n	100410a8 <__aeabi_fsub+0x138>
10041226:	2b00      	cmp	r3, #0
10041228:	d11a      	bne.n	10041260 <__aeabi_fsub+0x2f0>
1004122a:	2e00      	cmp	r6, #0
1004122c:	d124      	bne.n	10041278 <__aeabi_fsub+0x308>
1004122e:	2780      	movs	r7, #128	; 0x80
10041230:	2200      	movs	r2, #0
10041232:	03ff      	lsls	r7, r7, #15
10041234:	e71b      	b.n	1004106e <__aeabi_fsub+0xfe>
10041236:	0033      	movs	r3, r6
10041238:	0004      	movs	r4, r0
1004123a:	000d      	movs	r5, r1
1004123c:	e6de      	b.n	10040ffc <__aeabi_fsub+0x8c>
1004123e:	28ff      	cmp	r0, #255	; 0xff
10041240:	d01e      	beq.n	10041280 <__aeabi_fsub+0x310>
10041242:	2480      	movs	r4, #128	; 0x80
10041244:	04e4      	lsls	r4, r4, #19
10041246:	4249      	negs	r1, r1
10041248:	4323      	orrs	r3, r4
1004124a:	e7df      	b.n	1004120c <__aeabi_fsub+0x29c>
1004124c:	2e00      	cmp	r6, #0
1004124e:	d100      	bne.n	10041252 <__aeabi_fsub+0x2e2>
10041250:	e6d4      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041252:	1b9f      	subs	r7, r3, r6
10041254:	017a      	lsls	r2, r7, #5
10041256:	d400      	bmi.n	1004125a <__aeabi_fsub+0x2ea>
10041258:	e737      	b.n	100410ca <__aeabi_fsub+0x15a>
1004125a:	1af3      	subs	r3, r6, r3
1004125c:	000d      	movs	r5, r1
1004125e:	e6cd      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041260:	24ff      	movs	r4, #255	; 0xff
10041262:	2e00      	cmp	r6, #0
10041264:	d100      	bne.n	10041268 <__aeabi_fsub+0x2f8>
10041266:	e6c9      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041268:	2280      	movs	r2, #128	; 0x80
1004126a:	4650      	mov	r0, sl
1004126c:	03d2      	lsls	r2, r2, #15
1004126e:	4210      	tst	r0, r2
10041270:	d0a4      	beq.n	100411bc <__aeabi_fsub+0x24c>
10041272:	4660      	mov	r0, ip
10041274:	4210      	tst	r0, r2
10041276:	d1a1      	bne.n	100411bc <__aeabi_fsub+0x24c>
10041278:	0033      	movs	r3, r6
1004127a:	000d      	movs	r5, r1
1004127c:	24ff      	movs	r4, #255	; 0xff
1004127e:	e6bd      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041280:	0033      	movs	r3, r6
10041282:	24ff      	movs	r4, #255	; 0xff
10041284:	e6ba      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041286:	2301      	movs	r3, #1
10041288:	e76e      	b.n	10041168 <__aeabi_fsub+0x1f8>
1004128a:	0033      	movs	r3, r6
1004128c:	0004      	movs	r4, r0
1004128e:	e6b5      	b.n	10040ffc <__aeabi_fsub+0x8c>
10041290:	2700      	movs	r7, #0
10041292:	2200      	movs	r2, #0
10041294:	e71c      	b.n	100410d0 <__aeabi_fsub+0x160>
10041296:	0033      	movs	r3, r6
10041298:	e6b0      	b.n	10040ffc <__aeabi_fsub+0x8c>
1004129a:	2301      	movs	r3, #1
1004129c:	e7c0      	b.n	10041220 <__aeabi_fsub+0x2b0>
1004129e:	46c0      	nop			; (mov r8, r8)
100412a0:	7dffffff 	.word	0x7dffffff
100412a4:	fbffffff 	.word	0xfbffffff

100412a8 <__aeabi_f2iz>:
100412a8:	0241      	lsls	r1, r0, #9
100412aa:	0043      	lsls	r3, r0, #1
100412ac:	0fc2      	lsrs	r2, r0, #31
100412ae:	0a49      	lsrs	r1, r1, #9
100412b0:	0e1b      	lsrs	r3, r3, #24
100412b2:	2000      	movs	r0, #0
100412b4:	2b7e      	cmp	r3, #126	; 0x7e
100412b6:	dd0d      	ble.n	100412d4 <__aeabi_f2iz+0x2c>
100412b8:	2b9d      	cmp	r3, #157	; 0x9d
100412ba:	dc0c      	bgt.n	100412d6 <__aeabi_f2iz+0x2e>
100412bc:	2080      	movs	r0, #128	; 0x80
100412be:	0400      	lsls	r0, r0, #16
100412c0:	4301      	orrs	r1, r0
100412c2:	2b95      	cmp	r3, #149	; 0x95
100412c4:	dc0a      	bgt.n	100412dc <__aeabi_f2iz+0x34>
100412c6:	2096      	movs	r0, #150	; 0x96
100412c8:	1ac3      	subs	r3, r0, r3
100412ca:	40d9      	lsrs	r1, r3
100412cc:	4248      	negs	r0, r1
100412ce:	2a00      	cmp	r2, #0
100412d0:	d100      	bne.n	100412d4 <__aeabi_f2iz+0x2c>
100412d2:	0008      	movs	r0, r1
100412d4:	4770      	bx	lr
100412d6:	4b03      	ldr	r3, [pc, #12]	; (100412e4 <__aeabi_f2iz+0x3c>)
100412d8:	18d0      	adds	r0, r2, r3
100412da:	e7fb      	b.n	100412d4 <__aeabi_f2iz+0x2c>
100412dc:	3b96      	subs	r3, #150	; 0x96
100412de:	4099      	lsls	r1, r3
100412e0:	e7f4      	b.n	100412cc <__aeabi_f2iz+0x24>
100412e2:	46c0      	nop			; (mov r8, r8)
100412e4:	7fffffff 	.word	0x7fffffff

100412e8 <__aeabi_i2f>:
100412e8:	b570      	push	{r4, r5, r6, lr}
100412ea:	2800      	cmp	r0, #0
100412ec:	d030      	beq.n	10041350 <__aeabi_i2f+0x68>
100412ee:	17c3      	asrs	r3, r0, #31
100412f0:	18c4      	adds	r4, r0, r3
100412f2:	405c      	eors	r4, r3
100412f4:	0fc5      	lsrs	r5, r0, #31
100412f6:	0020      	movs	r0, r4
100412f8:	f001 fed8 	bl	100430ac <__clzsi2>
100412fc:	239e      	movs	r3, #158	; 0x9e
100412fe:	1a1b      	subs	r3, r3, r0
10041300:	2b96      	cmp	r3, #150	; 0x96
10041302:	dc0d      	bgt.n	10041320 <__aeabi_i2f+0x38>
10041304:	2296      	movs	r2, #150	; 0x96
10041306:	1ad2      	subs	r2, r2, r3
10041308:	4094      	lsls	r4, r2
1004130a:	002a      	movs	r2, r5
1004130c:	0264      	lsls	r4, r4, #9
1004130e:	0a64      	lsrs	r4, r4, #9
10041310:	b2db      	uxtb	r3, r3
10041312:	0264      	lsls	r4, r4, #9
10041314:	05db      	lsls	r3, r3, #23
10041316:	0a60      	lsrs	r0, r4, #9
10041318:	07d2      	lsls	r2, r2, #31
1004131a:	4318      	orrs	r0, r3
1004131c:	4310      	orrs	r0, r2
1004131e:	bd70      	pop	{r4, r5, r6, pc}
10041320:	2b99      	cmp	r3, #153	; 0x99
10041322:	dc19      	bgt.n	10041358 <__aeabi_i2f+0x70>
10041324:	2299      	movs	r2, #153	; 0x99
10041326:	1ad2      	subs	r2, r2, r3
10041328:	2a00      	cmp	r2, #0
1004132a:	dd29      	ble.n	10041380 <__aeabi_i2f+0x98>
1004132c:	4094      	lsls	r4, r2
1004132e:	0022      	movs	r2, r4
10041330:	4c14      	ldr	r4, [pc, #80]	; (10041384 <__aeabi_i2f+0x9c>)
10041332:	4014      	ands	r4, r2
10041334:	0751      	lsls	r1, r2, #29
10041336:	d004      	beq.n	10041342 <__aeabi_i2f+0x5a>
10041338:	210f      	movs	r1, #15
1004133a:	400a      	ands	r2, r1
1004133c:	2a04      	cmp	r2, #4
1004133e:	d000      	beq.n	10041342 <__aeabi_i2f+0x5a>
10041340:	3404      	adds	r4, #4
10041342:	0162      	lsls	r2, r4, #5
10041344:	d413      	bmi.n	1004136e <__aeabi_i2f+0x86>
10041346:	01a4      	lsls	r4, r4, #6
10041348:	0a64      	lsrs	r4, r4, #9
1004134a:	b2db      	uxtb	r3, r3
1004134c:	002a      	movs	r2, r5
1004134e:	e7e0      	b.n	10041312 <__aeabi_i2f+0x2a>
10041350:	2200      	movs	r2, #0
10041352:	2300      	movs	r3, #0
10041354:	2400      	movs	r4, #0
10041356:	e7dc      	b.n	10041312 <__aeabi_i2f+0x2a>
10041358:	2205      	movs	r2, #5
1004135a:	0021      	movs	r1, r4
1004135c:	1a12      	subs	r2, r2, r0
1004135e:	40d1      	lsrs	r1, r2
10041360:	22b9      	movs	r2, #185	; 0xb9
10041362:	1ad2      	subs	r2, r2, r3
10041364:	4094      	lsls	r4, r2
10041366:	1e62      	subs	r2, r4, #1
10041368:	4194      	sbcs	r4, r2
1004136a:	430c      	orrs	r4, r1
1004136c:	e7da      	b.n	10041324 <__aeabi_i2f+0x3c>
1004136e:	4b05      	ldr	r3, [pc, #20]	; (10041384 <__aeabi_i2f+0x9c>)
10041370:	002a      	movs	r2, r5
10041372:	401c      	ands	r4, r3
10041374:	239f      	movs	r3, #159	; 0x9f
10041376:	01a4      	lsls	r4, r4, #6
10041378:	1a1b      	subs	r3, r3, r0
1004137a:	0a64      	lsrs	r4, r4, #9
1004137c:	b2db      	uxtb	r3, r3
1004137e:	e7c8      	b.n	10041312 <__aeabi_i2f+0x2a>
10041380:	0022      	movs	r2, r4
10041382:	e7d5      	b.n	10041330 <__aeabi_i2f+0x48>
10041384:	fbffffff 	.word	0xfbffffff

10041388 <__aeabi_ui2f>:
10041388:	b510      	push	{r4, lr}
1004138a:	1e04      	subs	r4, r0, #0
1004138c:	d027      	beq.n	100413de <__aeabi_ui2f+0x56>
1004138e:	f001 fe8d 	bl	100430ac <__clzsi2>
10041392:	239e      	movs	r3, #158	; 0x9e
10041394:	1a1b      	subs	r3, r3, r0
10041396:	2b96      	cmp	r3, #150	; 0x96
10041398:	dc0a      	bgt.n	100413b0 <__aeabi_ui2f+0x28>
1004139a:	2296      	movs	r2, #150	; 0x96
1004139c:	1ad2      	subs	r2, r2, r3
1004139e:	4094      	lsls	r4, r2
100413a0:	0264      	lsls	r4, r4, #9
100413a2:	0a64      	lsrs	r4, r4, #9
100413a4:	b2db      	uxtb	r3, r3
100413a6:	0264      	lsls	r4, r4, #9
100413a8:	05db      	lsls	r3, r3, #23
100413aa:	0a60      	lsrs	r0, r4, #9
100413ac:	4318      	orrs	r0, r3
100413ae:	bd10      	pop	{r4, pc}
100413b0:	2b99      	cmp	r3, #153	; 0x99
100413b2:	dc17      	bgt.n	100413e4 <__aeabi_ui2f+0x5c>
100413b4:	2299      	movs	r2, #153	; 0x99
100413b6:	1ad2      	subs	r2, r2, r3
100413b8:	2a00      	cmp	r2, #0
100413ba:	dd27      	ble.n	1004140c <__aeabi_ui2f+0x84>
100413bc:	4094      	lsls	r4, r2
100413be:	0022      	movs	r2, r4
100413c0:	4c13      	ldr	r4, [pc, #76]	; (10041410 <__aeabi_ui2f+0x88>)
100413c2:	4014      	ands	r4, r2
100413c4:	0751      	lsls	r1, r2, #29
100413c6:	d004      	beq.n	100413d2 <__aeabi_ui2f+0x4a>
100413c8:	210f      	movs	r1, #15
100413ca:	400a      	ands	r2, r1
100413cc:	2a04      	cmp	r2, #4
100413ce:	d000      	beq.n	100413d2 <__aeabi_ui2f+0x4a>
100413d0:	3404      	adds	r4, #4
100413d2:	0162      	lsls	r2, r4, #5
100413d4:	d412      	bmi.n	100413fc <__aeabi_ui2f+0x74>
100413d6:	01a4      	lsls	r4, r4, #6
100413d8:	0a64      	lsrs	r4, r4, #9
100413da:	b2db      	uxtb	r3, r3
100413dc:	e7e3      	b.n	100413a6 <__aeabi_ui2f+0x1e>
100413de:	2300      	movs	r3, #0
100413e0:	2400      	movs	r4, #0
100413e2:	e7e0      	b.n	100413a6 <__aeabi_ui2f+0x1e>
100413e4:	22b9      	movs	r2, #185	; 0xb9
100413e6:	0021      	movs	r1, r4
100413e8:	1ad2      	subs	r2, r2, r3
100413ea:	4091      	lsls	r1, r2
100413ec:	000a      	movs	r2, r1
100413ee:	1e51      	subs	r1, r2, #1
100413f0:	418a      	sbcs	r2, r1
100413f2:	2105      	movs	r1, #5
100413f4:	1a09      	subs	r1, r1, r0
100413f6:	40cc      	lsrs	r4, r1
100413f8:	4314      	orrs	r4, r2
100413fa:	e7db      	b.n	100413b4 <__aeabi_ui2f+0x2c>
100413fc:	4b04      	ldr	r3, [pc, #16]	; (10041410 <__aeabi_ui2f+0x88>)
100413fe:	401c      	ands	r4, r3
10041400:	239f      	movs	r3, #159	; 0x9f
10041402:	01a4      	lsls	r4, r4, #6
10041404:	1a1b      	subs	r3, r3, r0
10041406:	0a64      	lsrs	r4, r4, #9
10041408:	b2db      	uxtb	r3, r3
1004140a:	e7cc      	b.n	100413a6 <__aeabi_ui2f+0x1e>
1004140c:	0022      	movs	r2, r4
1004140e:	e7d7      	b.n	100413c0 <__aeabi_ui2f+0x38>
10041410:	fbffffff 	.word	0xfbffffff

10041414 <__aeabi_dadd>:
10041414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10041416:	4645      	mov	r5, r8
10041418:	46de      	mov	lr, fp
1004141a:	4657      	mov	r7, sl
1004141c:	464e      	mov	r6, r9
1004141e:	030c      	lsls	r4, r1, #12
10041420:	b5e0      	push	{r5, r6, r7, lr}
10041422:	004e      	lsls	r6, r1, #1
10041424:	0fc9      	lsrs	r1, r1, #31
10041426:	4688      	mov	r8, r1
10041428:	000d      	movs	r5, r1
1004142a:	0a61      	lsrs	r1, r4, #9
1004142c:	0f44      	lsrs	r4, r0, #29
1004142e:	430c      	orrs	r4, r1
10041430:	00c7      	lsls	r7, r0, #3
10041432:	0319      	lsls	r1, r3, #12
10041434:	0058      	lsls	r0, r3, #1
10041436:	0fdb      	lsrs	r3, r3, #31
10041438:	469b      	mov	fp, r3
1004143a:	0a4b      	lsrs	r3, r1, #9
1004143c:	0f51      	lsrs	r1, r2, #29
1004143e:	430b      	orrs	r3, r1
10041440:	0d76      	lsrs	r6, r6, #21
10041442:	0d40      	lsrs	r0, r0, #21
10041444:	0019      	movs	r1, r3
10041446:	00d2      	lsls	r2, r2, #3
10041448:	45d8      	cmp	r8, fp
1004144a:	d100      	bne.n	1004144e <__aeabi_dadd+0x3a>
1004144c:	e0ae      	b.n	100415ac <__aeabi_dadd+0x198>
1004144e:	1a35      	subs	r5, r6, r0
10041450:	2d00      	cmp	r5, #0
10041452:	dc00      	bgt.n	10041456 <__aeabi_dadd+0x42>
10041454:	e0f6      	b.n	10041644 <__aeabi_dadd+0x230>
10041456:	2800      	cmp	r0, #0
10041458:	d10f      	bne.n	1004147a <__aeabi_dadd+0x66>
1004145a:	4313      	orrs	r3, r2
1004145c:	d100      	bne.n	10041460 <__aeabi_dadd+0x4c>
1004145e:	e0db      	b.n	10041618 <__aeabi_dadd+0x204>
10041460:	1e6b      	subs	r3, r5, #1
10041462:	2b00      	cmp	r3, #0
10041464:	d000      	beq.n	10041468 <__aeabi_dadd+0x54>
10041466:	e137      	b.n	100416d8 <__aeabi_dadd+0x2c4>
10041468:	1aba      	subs	r2, r7, r2
1004146a:	4297      	cmp	r7, r2
1004146c:	41bf      	sbcs	r7, r7
1004146e:	1a64      	subs	r4, r4, r1
10041470:	427f      	negs	r7, r7
10041472:	1be4      	subs	r4, r4, r7
10041474:	2601      	movs	r6, #1
10041476:	0017      	movs	r7, r2
10041478:	e024      	b.n	100414c4 <__aeabi_dadd+0xb0>
1004147a:	4bc6      	ldr	r3, [pc, #792]	; (10041794 <__aeabi_dadd+0x380>)
1004147c:	429e      	cmp	r6, r3
1004147e:	d04d      	beq.n	1004151c <__aeabi_dadd+0x108>
10041480:	2380      	movs	r3, #128	; 0x80
10041482:	041b      	lsls	r3, r3, #16
10041484:	4319      	orrs	r1, r3
10041486:	2d38      	cmp	r5, #56	; 0x38
10041488:	dd00      	ble.n	1004148c <__aeabi_dadd+0x78>
1004148a:	e107      	b.n	1004169c <__aeabi_dadd+0x288>
1004148c:	2d1f      	cmp	r5, #31
1004148e:	dd00      	ble.n	10041492 <__aeabi_dadd+0x7e>
10041490:	e138      	b.n	10041704 <__aeabi_dadd+0x2f0>
10041492:	2020      	movs	r0, #32
10041494:	1b43      	subs	r3, r0, r5
10041496:	469a      	mov	sl, r3
10041498:	000b      	movs	r3, r1
1004149a:	4650      	mov	r0, sl
1004149c:	4083      	lsls	r3, r0
1004149e:	4699      	mov	r9, r3
100414a0:	0013      	movs	r3, r2
100414a2:	4648      	mov	r0, r9
100414a4:	40eb      	lsrs	r3, r5
100414a6:	4318      	orrs	r0, r3
100414a8:	0003      	movs	r3, r0
100414aa:	4650      	mov	r0, sl
100414ac:	4082      	lsls	r2, r0
100414ae:	1e50      	subs	r0, r2, #1
100414b0:	4182      	sbcs	r2, r0
100414b2:	40e9      	lsrs	r1, r5
100414b4:	431a      	orrs	r2, r3
100414b6:	1aba      	subs	r2, r7, r2
100414b8:	1a61      	subs	r1, r4, r1
100414ba:	4297      	cmp	r7, r2
100414bc:	41a4      	sbcs	r4, r4
100414be:	0017      	movs	r7, r2
100414c0:	4264      	negs	r4, r4
100414c2:	1b0c      	subs	r4, r1, r4
100414c4:	0223      	lsls	r3, r4, #8
100414c6:	d562      	bpl.n	1004158e <__aeabi_dadd+0x17a>
100414c8:	0264      	lsls	r4, r4, #9
100414ca:	0a65      	lsrs	r5, r4, #9
100414cc:	2d00      	cmp	r5, #0
100414ce:	d100      	bne.n	100414d2 <__aeabi_dadd+0xbe>
100414d0:	e0df      	b.n	10041692 <__aeabi_dadd+0x27e>
100414d2:	0028      	movs	r0, r5
100414d4:	f001 fdea 	bl	100430ac <__clzsi2>
100414d8:	0003      	movs	r3, r0
100414da:	3b08      	subs	r3, #8
100414dc:	2b1f      	cmp	r3, #31
100414de:	dd00      	ble.n	100414e2 <__aeabi_dadd+0xce>
100414e0:	e0d2      	b.n	10041688 <__aeabi_dadd+0x274>
100414e2:	2220      	movs	r2, #32
100414e4:	003c      	movs	r4, r7
100414e6:	1ad2      	subs	r2, r2, r3
100414e8:	409d      	lsls	r5, r3
100414ea:	40d4      	lsrs	r4, r2
100414ec:	409f      	lsls	r7, r3
100414ee:	4325      	orrs	r5, r4
100414f0:	429e      	cmp	r6, r3
100414f2:	dd00      	ble.n	100414f6 <__aeabi_dadd+0xe2>
100414f4:	e0c4      	b.n	10041680 <__aeabi_dadd+0x26c>
100414f6:	1b9e      	subs	r6, r3, r6
100414f8:	1c73      	adds	r3, r6, #1
100414fa:	2b1f      	cmp	r3, #31
100414fc:	dd00      	ble.n	10041500 <__aeabi_dadd+0xec>
100414fe:	e0f1      	b.n	100416e4 <__aeabi_dadd+0x2d0>
10041500:	2220      	movs	r2, #32
10041502:	0038      	movs	r0, r7
10041504:	0029      	movs	r1, r5
10041506:	1ad2      	subs	r2, r2, r3
10041508:	40d8      	lsrs	r0, r3
1004150a:	4091      	lsls	r1, r2
1004150c:	4097      	lsls	r7, r2
1004150e:	002c      	movs	r4, r5
10041510:	4301      	orrs	r1, r0
10041512:	1e78      	subs	r0, r7, #1
10041514:	4187      	sbcs	r7, r0
10041516:	40dc      	lsrs	r4, r3
10041518:	2600      	movs	r6, #0
1004151a:	430f      	orrs	r7, r1
1004151c:	077b      	lsls	r3, r7, #29
1004151e:	d009      	beq.n	10041534 <__aeabi_dadd+0x120>
10041520:	230f      	movs	r3, #15
10041522:	403b      	ands	r3, r7
10041524:	2b04      	cmp	r3, #4
10041526:	d005      	beq.n	10041534 <__aeabi_dadd+0x120>
10041528:	1d3b      	adds	r3, r7, #4
1004152a:	42bb      	cmp	r3, r7
1004152c:	41bf      	sbcs	r7, r7
1004152e:	427f      	negs	r7, r7
10041530:	19e4      	adds	r4, r4, r7
10041532:	001f      	movs	r7, r3
10041534:	0223      	lsls	r3, r4, #8
10041536:	d52c      	bpl.n	10041592 <__aeabi_dadd+0x17e>
10041538:	4b96      	ldr	r3, [pc, #600]	; (10041794 <__aeabi_dadd+0x380>)
1004153a:	3601      	adds	r6, #1
1004153c:	429e      	cmp	r6, r3
1004153e:	d100      	bne.n	10041542 <__aeabi_dadd+0x12e>
10041540:	e09a      	b.n	10041678 <__aeabi_dadd+0x264>
10041542:	4645      	mov	r5, r8
10041544:	4b94      	ldr	r3, [pc, #592]	; (10041798 <__aeabi_dadd+0x384>)
10041546:	08ff      	lsrs	r7, r7, #3
10041548:	401c      	ands	r4, r3
1004154a:	0760      	lsls	r0, r4, #29
1004154c:	0576      	lsls	r6, r6, #21
1004154e:	0264      	lsls	r4, r4, #9
10041550:	4307      	orrs	r7, r0
10041552:	0b24      	lsrs	r4, r4, #12
10041554:	0d76      	lsrs	r6, r6, #21
10041556:	2100      	movs	r1, #0
10041558:	0324      	lsls	r4, r4, #12
1004155a:	0b23      	lsrs	r3, r4, #12
1004155c:	0d0c      	lsrs	r4, r1, #20
1004155e:	4a8f      	ldr	r2, [pc, #572]	; (1004179c <__aeabi_dadd+0x388>)
10041560:	0524      	lsls	r4, r4, #20
10041562:	431c      	orrs	r4, r3
10041564:	4014      	ands	r4, r2
10041566:	0533      	lsls	r3, r6, #20
10041568:	4323      	orrs	r3, r4
1004156a:	005b      	lsls	r3, r3, #1
1004156c:	07ed      	lsls	r5, r5, #31
1004156e:	085b      	lsrs	r3, r3, #1
10041570:	432b      	orrs	r3, r5
10041572:	0038      	movs	r0, r7
10041574:	0019      	movs	r1, r3
10041576:	bc3c      	pop	{r2, r3, r4, r5}
10041578:	4690      	mov	r8, r2
1004157a:	4699      	mov	r9, r3
1004157c:	46a2      	mov	sl, r4
1004157e:	46ab      	mov	fp, r5
10041580:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10041582:	4664      	mov	r4, ip
10041584:	4304      	orrs	r4, r0
10041586:	d100      	bne.n	1004158a <__aeabi_dadd+0x176>
10041588:	e211      	b.n	100419ae <__aeabi_dadd+0x59a>
1004158a:	0004      	movs	r4, r0
1004158c:	4667      	mov	r7, ip
1004158e:	077b      	lsls	r3, r7, #29
10041590:	d1c6      	bne.n	10041520 <__aeabi_dadd+0x10c>
10041592:	4645      	mov	r5, r8
10041594:	0760      	lsls	r0, r4, #29
10041596:	08ff      	lsrs	r7, r7, #3
10041598:	4307      	orrs	r7, r0
1004159a:	08e4      	lsrs	r4, r4, #3
1004159c:	4b7d      	ldr	r3, [pc, #500]	; (10041794 <__aeabi_dadd+0x380>)
1004159e:	429e      	cmp	r6, r3
100415a0:	d030      	beq.n	10041604 <__aeabi_dadd+0x1f0>
100415a2:	0324      	lsls	r4, r4, #12
100415a4:	0576      	lsls	r6, r6, #21
100415a6:	0b24      	lsrs	r4, r4, #12
100415a8:	0d76      	lsrs	r6, r6, #21
100415aa:	e7d4      	b.n	10041556 <__aeabi_dadd+0x142>
100415ac:	1a33      	subs	r3, r6, r0
100415ae:	469a      	mov	sl, r3
100415b0:	2b00      	cmp	r3, #0
100415b2:	dd78      	ble.n	100416a6 <__aeabi_dadd+0x292>
100415b4:	2800      	cmp	r0, #0
100415b6:	d031      	beq.n	1004161c <__aeabi_dadd+0x208>
100415b8:	4876      	ldr	r0, [pc, #472]	; (10041794 <__aeabi_dadd+0x380>)
100415ba:	4286      	cmp	r6, r0
100415bc:	d0ae      	beq.n	1004151c <__aeabi_dadd+0x108>
100415be:	2080      	movs	r0, #128	; 0x80
100415c0:	0400      	lsls	r0, r0, #16
100415c2:	4301      	orrs	r1, r0
100415c4:	4653      	mov	r3, sl
100415c6:	2b38      	cmp	r3, #56	; 0x38
100415c8:	dc00      	bgt.n	100415cc <__aeabi_dadd+0x1b8>
100415ca:	e0e9      	b.n	100417a0 <__aeabi_dadd+0x38c>
100415cc:	430a      	orrs	r2, r1
100415ce:	1e51      	subs	r1, r2, #1
100415d0:	418a      	sbcs	r2, r1
100415d2:	2100      	movs	r1, #0
100415d4:	19d2      	adds	r2, r2, r7
100415d6:	42ba      	cmp	r2, r7
100415d8:	41bf      	sbcs	r7, r7
100415da:	1909      	adds	r1, r1, r4
100415dc:	427c      	negs	r4, r7
100415de:	0017      	movs	r7, r2
100415e0:	190c      	adds	r4, r1, r4
100415e2:	0223      	lsls	r3, r4, #8
100415e4:	d5d3      	bpl.n	1004158e <__aeabi_dadd+0x17a>
100415e6:	4b6b      	ldr	r3, [pc, #428]	; (10041794 <__aeabi_dadd+0x380>)
100415e8:	3601      	adds	r6, #1
100415ea:	429e      	cmp	r6, r3
100415ec:	d100      	bne.n	100415f0 <__aeabi_dadd+0x1dc>
100415ee:	e13a      	b.n	10041866 <__aeabi_dadd+0x452>
100415f0:	2001      	movs	r0, #1
100415f2:	4b69      	ldr	r3, [pc, #420]	; (10041798 <__aeabi_dadd+0x384>)
100415f4:	401c      	ands	r4, r3
100415f6:	087b      	lsrs	r3, r7, #1
100415f8:	4007      	ands	r7, r0
100415fa:	431f      	orrs	r7, r3
100415fc:	07e0      	lsls	r0, r4, #31
100415fe:	4307      	orrs	r7, r0
10041600:	0864      	lsrs	r4, r4, #1
10041602:	e78b      	b.n	1004151c <__aeabi_dadd+0x108>
10041604:	0023      	movs	r3, r4
10041606:	433b      	orrs	r3, r7
10041608:	d100      	bne.n	1004160c <__aeabi_dadd+0x1f8>
1004160a:	e1cb      	b.n	100419a4 <__aeabi_dadd+0x590>
1004160c:	2280      	movs	r2, #128	; 0x80
1004160e:	0312      	lsls	r2, r2, #12
10041610:	4314      	orrs	r4, r2
10041612:	0324      	lsls	r4, r4, #12
10041614:	0b24      	lsrs	r4, r4, #12
10041616:	e79e      	b.n	10041556 <__aeabi_dadd+0x142>
10041618:	002e      	movs	r6, r5
1004161a:	e77f      	b.n	1004151c <__aeabi_dadd+0x108>
1004161c:	0008      	movs	r0, r1
1004161e:	4310      	orrs	r0, r2
10041620:	d100      	bne.n	10041624 <__aeabi_dadd+0x210>
10041622:	e0b4      	b.n	1004178e <__aeabi_dadd+0x37a>
10041624:	1e58      	subs	r0, r3, #1
10041626:	2800      	cmp	r0, #0
10041628:	d000      	beq.n	1004162c <__aeabi_dadd+0x218>
1004162a:	e0de      	b.n	100417ea <__aeabi_dadd+0x3d6>
1004162c:	18ba      	adds	r2, r7, r2
1004162e:	42ba      	cmp	r2, r7
10041630:	419b      	sbcs	r3, r3
10041632:	1864      	adds	r4, r4, r1
10041634:	425b      	negs	r3, r3
10041636:	18e4      	adds	r4, r4, r3
10041638:	0017      	movs	r7, r2
1004163a:	2601      	movs	r6, #1
1004163c:	0223      	lsls	r3, r4, #8
1004163e:	d5a6      	bpl.n	1004158e <__aeabi_dadd+0x17a>
10041640:	2602      	movs	r6, #2
10041642:	e7d5      	b.n	100415f0 <__aeabi_dadd+0x1dc>
10041644:	2d00      	cmp	r5, #0
10041646:	d16e      	bne.n	10041726 <__aeabi_dadd+0x312>
10041648:	1c70      	adds	r0, r6, #1
1004164a:	0540      	lsls	r0, r0, #21
1004164c:	0d40      	lsrs	r0, r0, #21
1004164e:	2801      	cmp	r0, #1
10041650:	dc00      	bgt.n	10041654 <__aeabi_dadd+0x240>
10041652:	e0f9      	b.n	10041848 <__aeabi_dadd+0x434>
10041654:	1ab8      	subs	r0, r7, r2
10041656:	4684      	mov	ip, r0
10041658:	4287      	cmp	r7, r0
1004165a:	4180      	sbcs	r0, r0
1004165c:	1ae5      	subs	r5, r4, r3
1004165e:	4240      	negs	r0, r0
10041660:	1a2d      	subs	r5, r5, r0
10041662:	0228      	lsls	r0, r5, #8
10041664:	d400      	bmi.n	10041668 <__aeabi_dadd+0x254>
10041666:	e089      	b.n	1004177c <__aeabi_dadd+0x368>
10041668:	1bd7      	subs	r7, r2, r7
1004166a:	42ba      	cmp	r2, r7
1004166c:	4192      	sbcs	r2, r2
1004166e:	1b1c      	subs	r4, r3, r4
10041670:	4252      	negs	r2, r2
10041672:	1aa5      	subs	r5, r4, r2
10041674:	46d8      	mov	r8, fp
10041676:	e729      	b.n	100414cc <__aeabi_dadd+0xb8>
10041678:	4645      	mov	r5, r8
1004167a:	2400      	movs	r4, #0
1004167c:	2700      	movs	r7, #0
1004167e:	e76a      	b.n	10041556 <__aeabi_dadd+0x142>
10041680:	4c45      	ldr	r4, [pc, #276]	; (10041798 <__aeabi_dadd+0x384>)
10041682:	1af6      	subs	r6, r6, r3
10041684:	402c      	ands	r4, r5
10041686:	e749      	b.n	1004151c <__aeabi_dadd+0x108>
10041688:	003d      	movs	r5, r7
1004168a:	3828      	subs	r0, #40	; 0x28
1004168c:	4085      	lsls	r5, r0
1004168e:	2700      	movs	r7, #0
10041690:	e72e      	b.n	100414f0 <__aeabi_dadd+0xdc>
10041692:	0038      	movs	r0, r7
10041694:	f001 fd0a 	bl	100430ac <__clzsi2>
10041698:	3020      	adds	r0, #32
1004169a:	e71d      	b.n	100414d8 <__aeabi_dadd+0xc4>
1004169c:	430a      	orrs	r2, r1
1004169e:	1e51      	subs	r1, r2, #1
100416a0:	418a      	sbcs	r2, r1
100416a2:	2100      	movs	r1, #0
100416a4:	e707      	b.n	100414b6 <__aeabi_dadd+0xa2>
100416a6:	2b00      	cmp	r3, #0
100416a8:	d000      	beq.n	100416ac <__aeabi_dadd+0x298>
100416aa:	e0f3      	b.n	10041894 <__aeabi_dadd+0x480>
100416ac:	1c70      	adds	r0, r6, #1
100416ae:	0543      	lsls	r3, r0, #21
100416b0:	0d5b      	lsrs	r3, r3, #21
100416b2:	2b01      	cmp	r3, #1
100416b4:	dc00      	bgt.n	100416b8 <__aeabi_dadd+0x2a4>
100416b6:	e0ad      	b.n	10041814 <__aeabi_dadd+0x400>
100416b8:	4b36      	ldr	r3, [pc, #216]	; (10041794 <__aeabi_dadd+0x380>)
100416ba:	4298      	cmp	r0, r3
100416bc:	d100      	bne.n	100416c0 <__aeabi_dadd+0x2ac>
100416be:	e0d1      	b.n	10041864 <__aeabi_dadd+0x450>
100416c0:	18ba      	adds	r2, r7, r2
100416c2:	42ba      	cmp	r2, r7
100416c4:	41bf      	sbcs	r7, r7
100416c6:	1864      	adds	r4, r4, r1
100416c8:	427f      	negs	r7, r7
100416ca:	19e4      	adds	r4, r4, r7
100416cc:	07e7      	lsls	r7, r4, #31
100416ce:	0852      	lsrs	r2, r2, #1
100416d0:	4317      	orrs	r7, r2
100416d2:	0864      	lsrs	r4, r4, #1
100416d4:	0006      	movs	r6, r0
100416d6:	e721      	b.n	1004151c <__aeabi_dadd+0x108>
100416d8:	482e      	ldr	r0, [pc, #184]	; (10041794 <__aeabi_dadd+0x380>)
100416da:	4285      	cmp	r5, r0
100416dc:	d100      	bne.n	100416e0 <__aeabi_dadd+0x2cc>
100416de:	e093      	b.n	10041808 <__aeabi_dadd+0x3f4>
100416e0:	001d      	movs	r5, r3
100416e2:	e6d0      	b.n	10041486 <__aeabi_dadd+0x72>
100416e4:	0029      	movs	r1, r5
100416e6:	3e1f      	subs	r6, #31
100416e8:	40f1      	lsrs	r1, r6
100416ea:	2b20      	cmp	r3, #32
100416ec:	d100      	bne.n	100416f0 <__aeabi_dadd+0x2dc>
100416ee:	e08d      	b.n	1004180c <__aeabi_dadd+0x3f8>
100416f0:	2240      	movs	r2, #64	; 0x40
100416f2:	1ad3      	subs	r3, r2, r3
100416f4:	409d      	lsls	r5, r3
100416f6:	432f      	orrs	r7, r5
100416f8:	1e7d      	subs	r5, r7, #1
100416fa:	41af      	sbcs	r7, r5
100416fc:	2400      	movs	r4, #0
100416fe:	430f      	orrs	r7, r1
10041700:	2600      	movs	r6, #0
10041702:	e744      	b.n	1004158e <__aeabi_dadd+0x17a>
10041704:	002b      	movs	r3, r5
10041706:	0008      	movs	r0, r1
10041708:	3b20      	subs	r3, #32
1004170a:	40d8      	lsrs	r0, r3
1004170c:	0003      	movs	r3, r0
1004170e:	2d20      	cmp	r5, #32
10041710:	d100      	bne.n	10041714 <__aeabi_dadd+0x300>
10041712:	e07d      	b.n	10041810 <__aeabi_dadd+0x3fc>
10041714:	2040      	movs	r0, #64	; 0x40
10041716:	1b45      	subs	r5, r0, r5
10041718:	40a9      	lsls	r1, r5
1004171a:	430a      	orrs	r2, r1
1004171c:	1e51      	subs	r1, r2, #1
1004171e:	418a      	sbcs	r2, r1
10041720:	2100      	movs	r1, #0
10041722:	431a      	orrs	r2, r3
10041724:	e6c7      	b.n	100414b6 <__aeabi_dadd+0xa2>
10041726:	2e00      	cmp	r6, #0
10041728:	d050      	beq.n	100417cc <__aeabi_dadd+0x3b8>
1004172a:	4e1a      	ldr	r6, [pc, #104]	; (10041794 <__aeabi_dadd+0x380>)
1004172c:	42b0      	cmp	r0, r6
1004172e:	d057      	beq.n	100417e0 <__aeabi_dadd+0x3cc>
10041730:	2680      	movs	r6, #128	; 0x80
10041732:	426b      	negs	r3, r5
10041734:	4699      	mov	r9, r3
10041736:	0436      	lsls	r6, r6, #16
10041738:	4334      	orrs	r4, r6
1004173a:	464b      	mov	r3, r9
1004173c:	2b38      	cmp	r3, #56	; 0x38
1004173e:	dd00      	ble.n	10041742 <__aeabi_dadd+0x32e>
10041740:	e0d6      	b.n	100418f0 <__aeabi_dadd+0x4dc>
10041742:	2b1f      	cmp	r3, #31
10041744:	dd00      	ble.n	10041748 <__aeabi_dadd+0x334>
10041746:	e135      	b.n	100419b4 <__aeabi_dadd+0x5a0>
10041748:	2620      	movs	r6, #32
1004174a:	1af5      	subs	r5, r6, r3
1004174c:	0026      	movs	r6, r4
1004174e:	40ae      	lsls	r6, r5
10041750:	46b2      	mov	sl, r6
10041752:	003e      	movs	r6, r7
10041754:	40de      	lsrs	r6, r3
10041756:	46ac      	mov	ip, r5
10041758:	0035      	movs	r5, r6
1004175a:	4656      	mov	r6, sl
1004175c:	432e      	orrs	r6, r5
1004175e:	4665      	mov	r5, ip
10041760:	40af      	lsls	r7, r5
10041762:	1e7d      	subs	r5, r7, #1
10041764:	41af      	sbcs	r7, r5
10041766:	40dc      	lsrs	r4, r3
10041768:	4337      	orrs	r7, r6
1004176a:	1bd7      	subs	r7, r2, r7
1004176c:	42ba      	cmp	r2, r7
1004176e:	4192      	sbcs	r2, r2
10041770:	1b0c      	subs	r4, r1, r4
10041772:	4252      	negs	r2, r2
10041774:	1aa4      	subs	r4, r4, r2
10041776:	0006      	movs	r6, r0
10041778:	46d8      	mov	r8, fp
1004177a:	e6a3      	b.n	100414c4 <__aeabi_dadd+0xb0>
1004177c:	4664      	mov	r4, ip
1004177e:	4667      	mov	r7, ip
10041780:	432c      	orrs	r4, r5
10041782:	d000      	beq.n	10041786 <__aeabi_dadd+0x372>
10041784:	e6a2      	b.n	100414cc <__aeabi_dadd+0xb8>
10041786:	2500      	movs	r5, #0
10041788:	2600      	movs	r6, #0
1004178a:	2700      	movs	r7, #0
1004178c:	e706      	b.n	1004159c <__aeabi_dadd+0x188>
1004178e:	001e      	movs	r6, r3
10041790:	e6c4      	b.n	1004151c <__aeabi_dadd+0x108>
10041792:	46c0      	nop			; (mov r8, r8)
10041794:	000007ff 	.word	0x000007ff
10041798:	ff7fffff 	.word	0xff7fffff
1004179c:	800fffff 	.word	0x800fffff
100417a0:	2b1f      	cmp	r3, #31
100417a2:	dc63      	bgt.n	1004186c <__aeabi_dadd+0x458>
100417a4:	2020      	movs	r0, #32
100417a6:	1ac3      	subs	r3, r0, r3
100417a8:	0008      	movs	r0, r1
100417aa:	4098      	lsls	r0, r3
100417ac:	469c      	mov	ip, r3
100417ae:	4683      	mov	fp, r0
100417b0:	4653      	mov	r3, sl
100417b2:	0010      	movs	r0, r2
100417b4:	40d8      	lsrs	r0, r3
100417b6:	0003      	movs	r3, r0
100417b8:	4658      	mov	r0, fp
100417ba:	4318      	orrs	r0, r3
100417bc:	4663      	mov	r3, ip
100417be:	409a      	lsls	r2, r3
100417c0:	1e53      	subs	r3, r2, #1
100417c2:	419a      	sbcs	r2, r3
100417c4:	4653      	mov	r3, sl
100417c6:	4302      	orrs	r2, r0
100417c8:	40d9      	lsrs	r1, r3
100417ca:	e703      	b.n	100415d4 <__aeabi_dadd+0x1c0>
100417cc:	0026      	movs	r6, r4
100417ce:	433e      	orrs	r6, r7
100417d0:	d006      	beq.n	100417e0 <__aeabi_dadd+0x3cc>
100417d2:	43eb      	mvns	r3, r5
100417d4:	4699      	mov	r9, r3
100417d6:	2b00      	cmp	r3, #0
100417d8:	d0c7      	beq.n	1004176a <__aeabi_dadd+0x356>
100417da:	4e94      	ldr	r6, [pc, #592]	; (10041a2c <__aeabi_dadd+0x618>)
100417dc:	42b0      	cmp	r0, r6
100417de:	d1ac      	bne.n	1004173a <__aeabi_dadd+0x326>
100417e0:	000c      	movs	r4, r1
100417e2:	0017      	movs	r7, r2
100417e4:	0006      	movs	r6, r0
100417e6:	46d8      	mov	r8, fp
100417e8:	e698      	b.n	1004151c <__aeabi_dadd+0x108>
100417ea:	4b90      	ldr	r3, [pc, #576]	; (10041a2c <__aeabi_dadd+0x618>)
100417ec:	459a      	cmp	sl, r3
100417ee:	d00b      	beq.n	10041808 <__aeabi_dadd+0x3f4>
100417f0:	4682      	mov	sl, r0
100417f2:	e6e7      	b.n	100415c4 <__aeabi_dadd+0x1b0>
100417f4:	2800      	cmp	r0, #0
100417f6:	d000      	beq.n	100417fa <__aeabi_dadd+0x3e6>
100417f8:	e09e      	b.n	10041938 <__aeabi_dadd+0x524>
100417fa:	0018      	movs	r0, r3
100417fc:	4310      	orrs	r0, r2
100417fe:	d100      	bne.n	10041802 <__aeabi_dadd+0x3ee>
10041800:	e0e9      	b.n	100419d6 <__aeabi_dadd+0x5c2>
10041802:	001c      	movs	r4, r3
10041804:	0017      	movs	r7, r2
10041806:	46d8      	mov	r8, fp
10041808:	4e88      	ldr	r6, [pc, #544]	; (10041a2c <__aeabi_dadd+0x618>)
1004180a:	e687      	b.n	1004151c <__aeabi_dadd+0x108>
1004180c:	2500      	movs	r5, #0
1004180e:	e772      	b.n	100416f6 <__aeabi_dadd+0x2e2>
10041810:	2100      	movs	r1, #0
10041812:	e782      	b.n	1004171a <__aeabi_dadd+0x306>
10041814:	0023      	movs	r3, r4
10041816:	433b      	orrs	r3, r7
10041818:	2e00      	cmp	r6, #0
1004181a:	d000      	beq.n	1004181e <__aeabi_dadd+0x40a>
1004181c:	e0ab      	b.n	10041976 <__aeabi_dadd+0x562>
1004181e:	2b00      	cmp	r3, #0
10041820:	d100      	bne.n	10041824 <__aeabi_dadd+0x410>
10041822:	e0e7      	b.n	100419f4 <__aeabi_dadd+0x5e0>
10041824:	000b      	movs	r3, r1
10041826:	4313      	orrs	r3, r2
10041828:	d100      	bne.n	1004182c <__aeabi_dadd+0x418>
1004182a:	e677      	b.n	1004151c <__aeabi_dadd+0x108>
1004182c:	18ba      	adds	r2, r7, r2
1004182e:	42ba      	cmp	r2, r7
10041830:	41bf      	sbcs	r7, r7
10041832:	1864      	adds	r4, r4, r1
10041834:	427f      	negs	r7, r7
10041836:	19e4      	adds	r4, r4, r7
10041838:	0223      	lsls	r3, r4, #8
1004183a:	d400      	bmi.n	1004183e <__aeabi_dadd+0x42a>
1004183c:	e0f2      	b.n	10041a24 <__aeabi_dadd+0x610>
1004183e:	4b7c      	ldr	r3, [pc, #496]	; (10041a30 <__aeabi_dadd+0x61c>)
10041840:	0017      	movs	r7, r2
10041842:	401c      	ands	r4, r3
10041844:	0006      	movs	r6, r0
10041846:	e669      	b.n	1004151c <__aeabi_dadd+0x108>
10041848:	0020      	movs	r0, r4
1004184a:	4338      	orrs	r0, r7
1004184c:	2e00      	cmp	r6, #0
1004184e:	d1d1      	bne.n	100417f4 <__aeabi_dadd+0x3e0>
10041850:	2800      	cmp	r0, #0
10041852:	d15b      	bne.n	1004190c <__aeabi_dadd+0x4f8>
10041854:	001c      	movs	r4, r3
10041856:	4314      	orrs	r4, r2
10041858:	d100      	bne.n	1004185c <__aeabi_dadd+0x448>
1004185a:	e0a8      	b.n	100419ae <__aeabi_dadd+0x59a>
1004185c:	001c      	movs	r4, r3
1004185e:	0017      	movs	r7, r2
10041860:	46d8      	mov	r8, fp
10041862:	e65b      	b.n	1004151c <__aeabi_dadd+0x108>
10041864:	0006      	movs	r6, r0
10041866:	2400      	movs	r4, #0
10041868:	2700      	movs	r7, #0
1004186a:	e697      	b.n	1004159c <__aeabi_dadd+0x188>
1004186c:	4650      	mov	r0, sl
1004186e:	000b      	movs	r3, r1
10041870:	3820      	subs	r0, #32
10041872:	40c3      	lsrs	r3, r0
10041874:	4699      	mov	r9, r3
10041876:	4653      	mov	r3, sl
10041878:	2b20      	cmp	r3, #32
1004187a:	d100      	bne.n	1004187e <__aeabi_dadd+0x46a>
1004187c:	e095      	b.n	100419aa <__aeabi_dadd+0x596>
1004187e:	2340      	movs	r3, #64	; 0x40
10041880:	4650      	mov	r0, sl
10041882:	1a1b      	subs	r3, r3, r0
10041884:	4099      	lsls	r1, r3
10041886:	430a      	orrs	r2, r1
10041888:	1e51      	subs	r1, r2, #1
1004188a:	418a      	sbcs	r2, r1
1004188c:	464b      	mov	r3, r9
1004188e:	2100      	movs	r1, #0
10041890:	431a      	orrs	r2, r3
10041892:	e69f      	b.n	100415d4 <__aeabi_dadd+0x1c0>
10041894:	2e00      	cmp	r6, #0
10041896:	d130      	bne.n	100418fa <__aeabi_dadd+0x4e6>
10041898:	0026      	movs	r6, r4
1004189a:	433e      	orrs	r6, r7
1004189c:	d067      	beq.n	1004196e <__aeabi_dadd+0x55a>
1004189e:	43db      	mvns	r3, r3
100418a0:	469a      	mov	sl, r3
100418a2:	2b00      	cmp	r3, #0
100418a4:	d01c      	beq.n	100418e0 <__aeabi_dadd+0x4cc>
100418a6:	4e61      	ldr	r6, [pc, #388]	; (10041a2c <__aeabi_dadd+0x618>)
100418a8:	42b0      	cmp	r0, r6
100418aa:	d060      	beq.n	1004196e <__aeabi_dadd+0x55a>
100418ac:	4653      	mov	r3, sl
100418ae:	2b38      	cmp	r3, #56	; 0x38
100418b0:	dd00      	ble.n	100418b4 <__aeabi_dadd+0x4a0>
100418b2:	e096      	b.n	100419e2 <__aeabi_dadd+0x5ce>
100418b4:	2b1f      	cmp	r3, #31
100418b6:	dd00      	ble.n	100418ba <__aeabi_dadd+0x4a6>
100418b8:	e09f      	b.n	100419fa <__aeabi_dadd+0x5e6>
100418ba:	2620      	movs	r6, #32
100418bc:	1af3      	subs	r3, r6, r3
100418be:	0026      	movs	r6, r4
100418c0:	409e      	lsls	r6, r3
100418c2:	469c      	mov	ip, r3
100418c4:	46b3      	mov	fp, r6
100418c6:	4653      	mov	r3, sl
100418c8:	003e      	movs	r6, r7
100418ca:	40de      	lsrs	r6, r3
100418cc:	0033      	movs	r3, r6
100418ce:	465e      	mov	r6, fp
100418d0:	431e      	orrs	r6, r3
100418d2:	4663      	mov	r3, ip
100418d4:	409f      	lsls	r7, r3
100418d6:	1e7b      	subs	r3, r7, #1
100418d8:	419f      	sbcs	r7, r3
100418da:	4653      	mov	r3, sl
100418dc:	40dc      	lsrs	r4, r3
100418de:	4337      	orrs	r7, r6
100418e0:	18bf      	adds	r7, r7, r2
100418e2:	4297      	cmp	r7, r2
100418e4:	4192      	sbcs	r2, r2
100418e6:	1864      	adds	r4, r4, r1
100418e8:	4252      	negs	r2, r2
100418ea:	18a4      	adds	r4, r4, r2
100418ec:	0006      	movs	r6, r0
100418ee:	e678      	b.n	100415e2 <__aeabi_dadd+0x1ce>
100418f0:	4327      	orrs	r7, r4
100418f2:	1e7c      	subs	r4, r7, #1
100418f4:	41a7      	sbcs	r7, r4
100418f6:	2400      	movs	r4, #0
100418f8:	e737      	b.n	1004176a <__aeabi_dadd+0x356>
100418fa:	4e4c      	ldr	r6, [pc, #304]	; (10041a2c <__aeabi_dadd+0x618>)
100418fc:	42b0      	cmp	r0, r6
100418fe:	d036      	beq.n	1004196e <__aeabi_dadd+0x55a>
10041900:	2680      	movs	r6, #128	; 0x80
10041902:	425b      	negs	r3, r3
10041904:	0436      	lsls	r6, r6, #16
10041906:	469a      	mov	sl, r3
10041908:	4334      	orrs	r4, r6
1004190a:	e7cf      	b.n	100418ac <__aeabi_dadd+0x498>
1004190c:	0018      	movs	r0, r3
1004190e:	4310      	orrs	r0, r2
10041910:	d100      	bne.n	10041914 <__aeabi_dadd+0x500>
10041912:	e603      	b.n	1004151c <__aeabi_dadd+0x108>
10041914:	1ab8      	subs	r0, r7, r2
10041916:	4684      	mov	ip, r0
10041918:	4567      	cmp	r7, ip
1004191a:	41ad      	sbcs	r5, r5
1004191c:	1ae0      	subs	r0, r4, r3
1004191e:	426d      	negs	r5, r5
10041920:	1b40      	subs	r0, r0, r5
10041922:	0205      	lsls	r5, r0, #8
10041924:	d400      	bmi.n	10041928 <__aeabi_dadd+0x514>
10041926:	e62c      	b.n	10041582 <__aeabi_dadd+0x16e>
10041928:	1bd7      	subs	r7, r2, r7
1004192a:	42ba      	cmp	r2, r7
1004192c:	4192      	sbcs	r2, r2
1004192e:	1b1c      	subs	r4, r3, r4
10041930:	4252      	negs	r2, r2
10041932:	1aa4      	subs	r4, r4, r2
10041934:	46d8      	mov	r8, fp
10041936:	e5f1      	b.n	1004151c <__aeabi_dadd+0x108>
10041938:	0018      	movs	r0, r3
1004193a:	4310      	orrs	r0, r2
1004193c:	d100      	bne.n	10041940 <__aeabi_dadd+0x52c>
1004193e:	e763      	b.n	10041808 <__aeabi_dadd+0x3f4>
10041940:	08f8      	lsrs	r0, r7, #3
10041942:	0767      	lsls	r7, r4, #29
10041944:	4307      	orrs	r7, r0
10041946:	2080      	movs	r0, #128	; 0x80
10041948:	08e4      	lsrs	r4, r4, #3
1004194a:	0300      	lsls	r0, r0, #12
1004194c:	4204      	tst	r4, r0
1004194e:	d008      	beq.n	10041962 <__aeabi_dadd+0x54e>
10041950:	08dd      	lsrs	r5, r3, #3
10041952:	4205      	tst	r5, r0
10041954:	d105      	bne.n	10041962 <__aeabi_dadd+0x54e>
10041956:	08d2      	lsrs	r2, r2, #3
10041958:	0759      	lsls	r1, r3, #29
1004195a:	4311      	orrs	r1, r2
1004195c:	000f      	movs	r7, r1
1004195e:	002c      	movs	r4, r5
10041960:	46d8      	mov	r8, fp
10041962:	0f7b      	lsrs	r3, r7, #29
10041964:	00e4      	lsls	r4, r4, #3
10041966:	431c      	orrs	r4, r3
10041968:	00ff      	lsls	r7, r7, #3
1004196a:	4e30      	ldr	r6, [pc, #192]	; (10041a2c <__aeabi_dadd+0x618>)
1004196c:	e5d6      	b.n	1004151c <__aeabi_dadd+0x108>
1004196e:	000c      	movs	r4, r1
10041970:	0017      	movs	r7, r2
10041972:	0006      	movs	r6, r0
10041974:	e5d2      	b.n	1004151c <__aeabi_dadd+0x108>
10041976:	2b00      	cmp	r3, #0
10041978:	d038      	beq.n	100419ec <__aeabi_dadd+0x5d8>
1004197a:	000b      	movs	r3, r1
1004197c:	4313      	orrs	r3, r2
1004197e:	d100      	bne.n	10041982 <__aeabi_dadd+0x56e>
10041980:	e742      	b.n	10041808 <__aeabi_dadd+0x3f4>
10041982:	08f8      	lsrs	r0, r7, #3
10041984:	0767      	lsls	r7, r4, #29
10041986:	4307      	orrs	r7, r0
10041988:	2080      	movs	r0, #128	; 0x80
1004198a:	08e4      	lsrs	r4, r4, #3
1004198c:	0300      	lsls	r0, r0, #12
1004198e:	4204      	tst	r4, r0
10041990:	d0e7      	beq.n	10041962 <__aeabi_dadd+0x54e>
10041992:	08cb      	lsrs	r3, r1, #3
10041994:	4203      	tst	r3, r0
10041996:	d1e4      	bne.n	10041962 <__aeabi_dadd+0x54e>
10041998:	08d2      	lsrs	r2, r2, #3
1004199a:	0749      	lsls	r1, r1, #29
1004199c:	4311      	orrs	r1, r2
1004199e:	000f      	movs	r7, r1
100419a0:	001c      	movs	r4, r3
100419a2:	e7de      	b.n	10041962 <__aeabi_dadd+0x54e>
100419a4:	2700      	movs	r7, #0
100419a6:	2400      	movs	r4, #0
100419a8:	e5d5      	b.n	10041556 <__aeabi_dadd+0x142>
100419aa:	2100      	movs	r1, #0
100419ac:	e76b      	b.n	10041886 <__aeabi_dadd+0x472>
100419ae:	2500      	movs	r5, #0
100419b0:	2700      	movs	r7, #0
100419b2:	e5f3      	b.n	1004159c <__aeabi_dadd+0x188>
100419b4:	464e      	mov	r6, r9
100419b6:	0025      	movs	r5, r4
100419b8:	3e20      	subs	r6, #32
100419ba:	40f5      	lsrs	r5, r6
100419bc:	464b      	mov	r3, r9
100419be:	002e      	movs	r6, r5
100419c0:	2b20      	cmp	r3, #32
100419c2:	d02d      	beq.n	10041a20 <__aeabi_dadd+0x60c>
100419c4:	2540      	movs	r5, #64	; 0x40
100419c6:	1aed      	subs	r5, r5, r3
100419c8:	40ac      	lsls	r4, r5
100419ca:	4327      	orrs	r7, r4
100419cc:	1e7c      	subs	r4, r7, #1
100419ce:	41a7      	sbcs	r7, r4
100419d0:	2400      	movs	r4, #0
100419d2:	4337      	orrs	r7, r6
100419d4:	e6c9      	b.n	1004176a <__aeabi_dadd+0x356>
100419d6:	2480      	movs	r4, #128	; 0x80
100419d8:	2500      	movs	r5, #0
100419da:	0324      	lsls	r4, r4, #12
100419dc:	4e13      	ldr	r6, [pc, #76]	; (10041a2c <__aeabi_dadd+0x618>)
100419de:	2700      	movs	r7, #0
100419e0:	e5dc      	b.n	1004159c <__aeabi_dadd+0x188>
100419e2:	4327      	orrs	r7, r4
100419e4:	1e7c      	subs	r4, r7, #1
100419e6:	41a7      	sbcs	r7, r4
100419e8:	2400      	movs	r4, #0
100419ea:	e779      	b.n	100418e0 <__aeabi_dadd+0x4cc>
100419ec:	000c      	movs	r4, r1
100419ee:	0017      	movs	r7, r2
100419f0:	4e0e      	ldr	r6, [pc, #56]	; (10041a2c <__aeabi_dadd+0x618>)
100419f2:	e593      	b.n	1004151c <__aeabi_dadd+0x108>
100419f4:	000c      	movs	r4, r1
100419f6:	0017      	movs	r7, r2
100419f8:	e590      	b.n	1004151c <__aeabi_dadd+0x108>
100419fa:	4656      	mov	r6, sl
100419fc:	0023      	movs	r3, r4
100419fe:	3e20      	subs	r6, #32
10041a00:	40f3      	lsrs	r3, r6
10041a02:	4699      	mov	r9, r3
10041a04:	4653      	mov	r3, sl
10041a06:	2b20      	cmp	r3, #32
10041a08:	d00e      	beq.n	10041a28 <__aeabi_dadd+0x614>
10041a0a:	2340      	movs	r3, #64	; 0x40
10041a0c:	4656      	mov	r6, sl
10041a0e:	1b9b      	subs	r3, r3, r6
10041a10:	409c      	lsls	r4, r3
10041a12:	4327      	orrs	r7, r4
10041a14:	1e7c      	subs	r4, r7, #1
10041a16:	41a7      	sbcs	r7, r4
10041a18:	464b      	mov	r3, r9
10041a1a:	2400      	movs	r4, #0
10041a1c:	431f      	orrs	r7, r3
10041a1e:	e75f      	b.n	100418e0 <__aeabi_dadd+0x4cc>
10041a20:	2400      	movs	r4, #0
10041a22:	e7d2      	b.n	100419ca <__aeabi_dadd+0x5b6>
10041a24:	0017      	movs	r7, r2
10041a26:	e5b2      	b.n	1004158e <__aeabi_dadd+0x17a>
10041a28:	2400      	movs	r4, #0
10041a2a:	e7f2      	b.n	10041a12 <__aeabi_dadd+0x5fe>
10041a2c:	000007ff 	.word	0x000007ff
10041a30:	ff7fffff 	.word	0xff7fffff

10041a34 <__aeabi_ddiv>:
10041a34:	b5f0      	push	{r4, r5, r6, r7, lr}
10041a36:	4657      	mov	r7, sl
10041a38:	4645      	mov	r5, r8
10041a3a:	46de      	mov	lr, fp
10041a3c:	464e      	mov	r6, r9
10041a3e:	b5e0      	push	{r5, r6, r7, lr}
10041a40:	004c      	lsls	r4, r1, #1
10041a42:	030e      	lsls	r6, r1, #12
10041a44:	b087      	sub	sp, #28
10041a46:	4683      	mov	fp, r0
10041a48:	4692      	mov	sl, r2
10041a4a:	001d      	movs	r5, r3
10041a4c:	4680      	mov	r8, r0
10041a4e:	0b36      	lsrs	r6, r6, #12
10041a50:	0d64      	lsrs	r4, r4, #21
10041a52:	0fcf      	lsrs	r7, r1, #31
10041a54:	2c00      	cmp	r4, #0
10041a56:	d04f      	beq.n	10041af8 <__aeabi_ddiv+0xc4>
10041a58:	4b6f      	ldr	r3, [pc, #444]	; (10041c18 <__aeabi_ddiv+0x1e4>)
10041a5a:	429c      	cmp	r4, r3
10041a5c:	d035      	beq.n	10041aca <__aeabi_ddiv+0x96>
10041a5e:	2380      	movs	r3, #128	; 0x80
10041a60:	0f42      	lsrs	r2, r0, #29
10041a62:	041b      	lsls	r3, r3, #16
10041a64:	00f6      	lsls	r6, r6, #3
10041a66:	4313      	orrs	r3, r2
10041a68:	4333      	orrs	r3, r6
10041a6a:	4699      	mov	r9, r3
10041a6c:	00c3      	lsls	r3, r0, #3
10041a6e:	4698      	mov	r8, r3
10041a70:	4b6a      	ldr	r3, [pc, #424]	; (10041c1c <__aeabi_ddiv+0x1e8>)
10041a72:	2600      	movs	r6, #0
10041a74:	469c      	mov	ip, r3
10041a76:	2300      	movs	r3, #0
10041a78:	4464      	add	r4, ip
10041a7a:	9303      	str	r3, [sp, #12]
10041a7c:	032b      	lsls	r3, r5, #12
10041a7e:	0b1b      	lsrs	r3, r3, #12
10041a80:	469b      	mov	fp, r3
10041a82:	006b      	lsls	r3, r5, #1
10041a84:	0fed      	lsrs	r5, r5, #31
10041a86:	4650      	mov	r0, sl
10041a88:	0d5b      	lsrs	r3, r3, #21
10041a8a:	9501      	str	r5, [sp, #4]
10041a8c:	d05e      	beq.n	10041b4c <__aeabi_ddiv+0x118>
10041a8e:	4a62      	ldr	r2, [pc, #392]	; (10041c18 <__aeabi_ddiv+0x1e4>)
10041a90:	4293      	cmp	r3, r2
10041a92:	d053      	beq.n	10041b3c <__aeabi_ddiv+0x108>
10041a94:	465a      	mov	r2, fp
10041a96:	00d1      	lsls	r1, r2, #3
10041a98:	2280      	movs	r2, #128	; 0x80
10041a9a:	0f40      	lsrs	r0, r0, #29
10041a9c:	0412      	lsls	r2, r2, #16
10041a9e:	4302      	orrs	r2, r0
10041aa0:	430a      	orrs	r2, r1
10041aa2:	4693      	mov	fp, r2
10041aa4:	4652      	mov	r2, sl
10041aa6:	00d1      	lsls	r1, r2, #3
10041aa8:	4a5c      	ldr	r2, [pc, #368]	; (10041c1c <__aeabi_ddiv+0x1e8>)
10041aaa:	4694      	mov	ip, r2
10041aac:	2200      	movs	r2, #0
10041aae:	4463      	add	r3, ip
10041ab0:	0038      	movs	r0, r7
10041ab2:	4068      	eors	r0, r5
10041ab4:	4684      	mov	ip, r0
10041ab6:	9002      	str	r0, [sp, #8]
10041ab8:	1ae4      	subs	r4, r4, r3
10041aba:	4316      	orrs	r6, r2
10041abc:	2e0f      	cmp	r6, #15
10041abe:	d900      	bls.n	10041ac2 <__aeabi_ddiv+0x8e>
10041ac0:	e0b4      	b.n	10041c2c <__aeabi_ddiv+0x1f8>
10041ac2:	4b57      	ldr	r3, [pc, #348]	; (10041c20 <__aeabi_ddiv+0x1ec>)
10041ac4:	00b6      	lsls	r6, r6, #2
10041ac6:	599b      	ldr	r3, [r3, r6]
10041ac8:	469f      	mov	pc, r3
10041aca:	0003      	movs	r3, r0
10041acc:	4333      	orrs	r3, r6
10041ace:	4699      	mov	r9, r3
10041ad0:	d16c      	bne.n	10041bac <__aeabi_ddiv+0x178>
10041ad2:	2300      	movs	r3, #0
10041ad4:	4698      	mov	r8, r3
10041ad6:	3302      	adds	r3, #2
10041ad8:	2608      	movs	r6, #8
10041ada:	9303      	str	r3, [sp, #12]
10041adc:	e7ce      	b.n	10041a7c <__aeabi_ddiv+0x48>
10041ade:	46cb      	mov	fp, r9
10041ae0:	4641      	mov	r1, r8
10041ae2:	9a03      	ldr	r2, [sp, #12]
10041ae4:	9701      	str	r7, [sp, #4]
10041ae6:	2a02      	cmp	r2, #2
10041ae8:	d165      	bne.n	10041bb6 <__aeabi_ddiv+0x182>
10041aea:	9b01      	ldr	r3, [sp, #4]
10041aec:	4c4a      	ldr	r4, [pc, #296]	; (10041c18 <__aeabi_ddiv+0x1e4>)
10041aee:	469c      	mov	ip, r3
10041af0:	2300      	movs	r3, #0
10041af2:	2200      	movs	r2, #0
10041af4:	4698      	mov	r8, r3
10041af6:	e06b      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
10041af8:	0003      	movs	r3, r0
10041afa:	4333      	orrs	r3, r6
10041afc:	4699      	mov	r9, r3
10041afe:	d04e      	beq.n	10041b9e <__aeabi_ddiv+0x16a>
10041b00:	2e00      	cmp	r6, #0
10041b02:	d100      	bne.n	10041b06 <__aeabi_ddiv+0xd2>
10041b04:	e1bc      	b.n	10041e80 <__aeabi_ddiv+0x44c>
10041b06:	0030      	movs	r0, r6
10041b08:	f001 fad0 	bl	100430ac <__clzsi2>
10041b0c:	0003      	movs	r3, r0
10041b0e:	3b0b      	subs	r3, #11
10041b10:	2b1c      	cmp	r3, #28
10041b12:	dd00      	ble.n	10041b16 <__aeabi_ddiv+0xe2>
10041b14:	e1ac      	b.n	10041e70 <__aeabi_ddiv+0x43c>
10041b16:	221d      	movs	r2, #29
10041b18:	1ad3      	subs	r3, r2, r3
10041b1a:	465a      	mov	r2, fp
10041b1c:	0001      	movs	r1, r0
10041b1e:	40da      	lsrs	r2, r3
10041b20:	3908      	subs	r1, #8
10041b22:	408e      	lsls	r6, r1
10041b24:	0013      	movs	r3, r2
10041b26:	4333      	orrs	r3, r6
10041b28:	4699      	mov	r9, r3
10041b2a:	465b      	mov	r3, fp
10041b2c:	408b      	lsls	r3, r1
10041b2e:	4698      	mov	r8, r3
10041b30:	2300      	movs	r3, #0
10041b32:	4c3c      	ldr	r4, [pc, #240]	; (10041c24 <__aeabi_ddiv+0x1f0>)
10041b34:	2600      	movs	r6, #0
10041b36:	1a24      	subs	r4, r4, r0
10041b38:	9303      	str	r3, [sp, #12]
10041b3a:	e79f      	b.n	10041a7c <__aeabi_ddiv+0x48>
10041b3c:	4651      	mov	r1, sl
10041b3e:	465a      	mov	r2, fp
10041b40:	4311      	orrs	r1, r2
10041b42:	d129      	bne.n	10041b98 <__aeabi_ddiv+0x164>
10041b44:	2200      	movs	r2, #0
10041b46:	4693      	mov	fp, r2
10041b48:	3202      	adds	r2, #2
10041b4a:	e7b1      	b.n	10041ab0 <__aeabi_ddiv+0x7c>
10041b4c:	4659      	mov	r1, fp
10041b4e:	4301      	orrs	r1, r0
10041b50:	d01e      	beq.n	10041b90 <__aeabi_ddiv+0x15c>
10041b52:	465b      	mov	r3, fp
10041b54:	2b00      	cmp	r3, #0
10041b56:	d100      	bne.n	10041b5a <__aeabi_ddiv+0x126>
10041b58:	e19e      	b.n	10041e98 <__aeabi_ddiv+0x464>
10041b5a:	4658      	mov	r0, fp
10041b5c:	f001 faa6 	bl	100430ac <__clzsi2>
10041b60:	0003      	movs	r3, r0
10041b62:	3b0b      	subs	r3, #11
10041b64:	2b1c      	cmp	r3, #28
10041b66:	dd00      	ble.n	10041b6a <__aeabi_ddiv+0x136>
10041b68:	e18f      	b.n	10041e8a <__aeabi_ddiv+0x456>
10041b6a:	0002      	movs	r2, r0
10041b6c:	4659      	mov	r1, fp
10041b6e:	3a08      	subs	r2, #8
10041b70:	4091      	lsls	r1, r2
10041b72:	468b      	mov	fp, r1
10041b74:	211d      	movs	r1, #29
10041b76:	1acb      	subs	r3, r1, r3
10041b78:	4651      	mov	r1, sl
10041b7a:	40d9      	lsrs	r1, r3
10041b7c:	000b      	movs	r3, r1
10041b7e:	4659      	mov	r1, fp
10041b80:	430b      	orrs	r3, r1
10041b82:	4651      	mov	r1, sl
10041b84:	469b      	mov	fp, r3
10041b86:	4091      	lsls	r1, r2
10041b88:	4b26      	ldr	r3, [pc, #152]	; (10041c24 <__aeabi_ddiv+0x1f0>)
10041b8a:	2200      	movs	r2, #0
10041b8c:	1a1b      	subs	r3, r3, r0
10041b8e:	e78f      	b.n	10041ab0 <__aeabi_ddiv+0x7c>
10041b90:	2300      	movs	r3, #0
10041b92:	2201      	movs	r2, #1
10041b94:	469b      	mov	fp, r3
10041b96:	e78b      	b.n	10041ab0 <__aeabi_ddiv+0x7c>
10041b98:	4651      	mov	r1, sl
10041b9a:	2203      	movs	r2, #3
10041b9c:	e788      	b.n	10041ab0 <__aeabi_ddiv+0x7c>
10041b9e:	2300      	movs	r3, #0
10041ba0:	4698      	mov	r8, r3
10041ba2:	3301      	adds	r3, #1
10041ba4:	2604      	movs	r6, #4
10041ba6:	2400      	movs	r4, #0
10041ba8:	9303      	str	r3, [sp, #12]
10041baa:	e767      	b.n	10041a7c <__aeabi_ddiv+0x48>
10041bac:	2303      	movs	r3, #3
10041bae:	46b1      	mov	r9, r6
10041bb0:	9303      	str	r3, [sp, #12]
10041bb2:	260c      	movs	r6, #12
10041bb4:	e762      	b.n	10041a7c <__aeabi_ddiv+0x48>
10041bb6:	2a03      	cmp	r2, #3
10041bb8:	d100      	bne.n	10041bbc <__aeabi_ddiv+0x188>
10041bba:	e25c      	b.n	10042076 <__aeabi_ddiv+0x642>
10041bbc:	9b01      	ldr	r3, [sp, #4]
10041bbe:	2a01      	cmp	r2, #1
10041bc0:	d000      	beq.n	10041bc4 <__aeabi_ddiv+0x190>
10041bc2:	e1e4      	b.n	10041f8e <__aeabi_ddiv+0x55a>
10041bc4:	4013      	ands	r3, r2
10041bc6:	469c      	mov	ip, r3
10041bc8:	2300      	movs	r3, #0
10041bca:	2400      	movs	r4, #0
10041bcc:	2200      	movs	r2, #0
10041bce:	4698      	mov	r8, r3
10041bd0:	2100      	movs	r1, #0
10041bd2:	0312      	lsls	r2, r2, #12
10041bd4:	0b13      	lsrs	r3, r2, #12
10041bd6:	0d0a      	lsrs	r2, r1, #20
10041bd8:	0512      	lsls	r2, r2, #20
10041bda:	431a      	orrs	r2, r3
10041bdc:	0523      	lsls	r3, r4, #20
10041bde:	4c12      	ldr	r4, [pc, #72]	; (10041c28 <__aeabi_ddiv+0x1f4>)
10041be0:	4640      	mov	r0, r8
10041be2:	4022      	ands	r2, r4
10041be4:	4313      	orrs	r3, r2
10041be6:	4662      	mov	r2, ip
10041be8:	005b      	lsls	r3, r3, #1
10041bea:	07d2      	lsls	r2, r2, #31
10041bec:	085b      	lsrs	r3, r3, #1
10041bee:	4313      	orrs	r3, r2
10041bf0:	0019      	movs	r1, r3
10041bf2:	b007      	add	sp, #28
10041bf4:	bc3c      	pop	{r2, r3, r4, r5}
10041bf6:	4690      	mov	r8, r2
10041bf8:	4699      	mov	r9, r3
10041bfa:	46a2      	mov	sl, r4
10041bfc:	46ab      	mov	fp, r5
10041bfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
10041c00:	2300      	movs	r3, #0
10041c02:	2280      	movs	r2, #128	; 0x80
10041c04:	469c      	mov	ip, r3
10041c06:	0312      	lsls	r2, r2, #12
10041c08:	4698      	mov	r8, r3
10041c0a:	4c03      	ldr	r4, [pc, #12]	; (10041c18 <__aeabi_ddiv+0x1e4>)
10041c0c:	e7e0      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
10041c0e:	2300      	movs	r3, #0
10041c10:	4c01      	ldr	r4, [pc, #4]	; (10041c18 <__aeabi_ddiv+0x1e4>)
10041c12:	2200      	movs	r2, #0
10041c14:	4698      	mov	r8, r3
10041c16:	e7db      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
10041c18:	000007ff 	.word	0x000007ff
10041c1c:	fffffc01 	.word	0xfffffc01
10041c20:	10058364 	.word	0x10058364
10041c24:	fffffc0d 	.word	0xfffffc0d
10041c28:	800fffff 	.word	0x800fffff
10041c2c:	45d9      	cmp	r9, fp
10041c2e:	d900      	bls.n	10041c32 <__aeabi_ddiv+0x1fe>
10041c30:	e139      	b.n	10041ea6 <__aeabi_ddiv+0x472>
10041c32:	d100      	bne.n	10041c36 <__aeabi_ddiv+0x202>
10041c34:	e134      	b.n	10041ea0 <__aeabi_ddiv+0x46c>
10041c36:	2300      	movs	r3, #0
10041c38:	4646      	mov	r6, r8
10041c3a:	464d      	mov	r5, r9
10041c3c:	469a      	mov	sl, r3
10041c3e:	3c01      	subs	r4, #1
10041c40:	465b      	mov	r3, fp
10041c42:	0e0a      	lsrs	r2, r1, #24
10041c44:	021b      	lsls	r3, r3, #8
10041c46:	431a      	orrs	r2, r3
10041c48:	020b      	lsls	r3, r1, #8
10041c4a:	0c17      	lsrs	r7, r2, #16
10041c4c:	9303      	str	r3, [sp, #12]
10041c4e:	0413      	lsls	r3, r2, #16
10041c50:	0c1b      	lsrs	r3, r3, #16
10041c52:	0039      	movs	r1, r7
10041c54:	0028      	movs	r0, r5
10041c56:	4690      	mov	r8, r2
10041c58:	9301      	str	r3, [sp, #4]
10041c5a:	f7fe fa89 	bl	10040170 <__udivsi3>
10041c5e:	0002      	movs	r2, r0
10041c60:	9b01      	ldr	r3, [sp, #4]
10041c62:	4683      	mov	fp, r0
10041c64:	435a      	muls	r2, r3
10041c66:	0028      	movs	r0, r5
10041c68:	0039      	movs	r1, r7
10041c6a:	4691      	mov	r9, r2
10041c6c:	f7fe fb06 	bl	1004027c <__aeabi_uidivmod>
10041c70:	0c35      	lsrs	r5, r6, #16
10041c72:	0409      	lsls	r1, r1, #16
10041c74:	430d      	orrs	r5, r1
10041c76:	45a9      	cmp	r9, r5
10041c78:	d90d      	bls.n	10041c96 <__aeabi_ddiv+0x262>
10041c7a:	465b      	mov	r3, fp
10041c7c:	4445      	add	r5, r8
10041c7e:	3b01      	subs	r3, #1
10041c80:	45a8      	cmp	r8, r5
10041c82:	d900      	bls.n	10041c86 <__aeabi_ddiv+0x252>
10041c84:	e13a      	b.n	10041efc <__aeabi_ddiv+0x4c8>
10041c86:	45a9      	cmp	r9, r5
10041c88:	d800      	bhi.n	10041c8c <__aeabi_ddiv+0x258>
10041c8a:	e137      	b.n	10041efc <__aeabi_ddiv+0x4c8>
10041c8c:	2302      	movs	r3, #2
10041c8e:	425b      	negs	r3, r3
10041c90:	469c      	mov	ip, r3
10041c92:	4445      	add	r5, r8
10041c94:	44e3      	add	fp, ip
10041c96:	464b      	mov	r3, r9
10041c98:	1aeb      	subs	r3, r5, r3
10041c9a:	0039      	movs	r1, r7
10041c9c:	0018      	movs	r0, r3
10041c9e:	9304      	str	r3, [sp, #16]
10041ca0:	f7fe fa66 	bl	10040170 <__udivsi3>
10041ca4:	9b01      	ldr	r3, [sp, #4]
10041ca6:	0005      	movs	r5, r0
10041ca8:	4343      	muls	r3, r0
10041caa:	0039      	movs	r1, r7
10041cac:	9804      	ldr	r0, [sp, #16]
10041cae:	4699      	mov	r9, r3
10041cb0:	f7fe fae4 	bl	1004027c <__aeabi_uidivmod>
10041cb4:	0433      	lsls	r3, r6, #16
10041cb6:	0409      	lsls	r1, r1, #16
10041cb8:	0c1b      	lsrs	r3, r3, #16
10041cba:	430b      	orrs	r3, r1
10041cbc:	4599      	cmp	r9, r3
10041cbe:	d909      	bls.n	10041cd4 <__aeabi_ddiv+0x2a0>
10041cc0:	4443      	add	r3, r8
10041cc2:	1e6a      	subs	r2, r5, #1
10041cc4:	4598      	cmp	r8, r3
10041cc6:	d900      	bls.n	10041cca <__aeabi_ddiv+0x296>
10041cc8:	e11a      	b.n	10041f00 <__aeabi_ddiv+0x4cc>
10041cca:	4599      	cmp	r9, r3
10041ccc:	d800      	bhi.n	10041cd0 <__aeabi_ddiv+0x29c>
10041cce:	e117      	b.n	10041f00 <__aeabi_ddiv+0x4cc>
10041cd0:	3d02      	subs	r5, #2
10041cd2:	4443      	add	r3, r8
10041cd4:	464a      	mov	r2, r9
10041cd6:	1a9b      	subs	r3, r3, r2
10041cd8:	465a      	mov	r2, fp
10041cda:	0412      	lsls	r2, r2, #16
10041cdc:	432a      	orrs	r2, r5
10041cde:	9903      	ldr	r1, [sp, #12]
10041ce0:	4693      	mov	fp, r2
10041ce2:	0c10      	lsrs	r0, r2, #16
10041ce4:	0c0a      	lsrs	r2, r1, #16
10041ce6:	4691      	mov	r9, r2
10041ce8:	0409      	lsls	r1, r1, #16
10041cea:	465a      	mov	r2, fp
10041cec:	0c09      	lsrs	r1, r1, #16
10041cee:	464e      	mov	r6, r9
10041cf0:	000d      	movs	r5, r1
10041cf2:	0412      	lsls	r2, r2, #16
10041cf4:	0c12      	lsrs	r2, r2, #16
10041cf6:	4345      	muls	r5, r0
10041cf8:	9105      	str	r1, [sp, #20]
10041cfa:	4351      	muls	r1, r2
10041cfc:	4372      	muls	r2, r6
10041cfe:	4370      	muls	r0, r6
10041d00:	1952      	adds	r2, r2, r5
10041d02:	0c0e      	lsrs	r6, r1, #16
10041d04:	18b2      	adds	r2, r6, r2
10041d06:	4295      	cmp	r5, r2
10041d08:	d903      	bls.n	10041d12 <__aeabi_ddiv+0x2de>
10041d0a:	2580      	movs	r5, #128	; 0x80
10041d0c:	026d      	lsls	r5, r5, #9
10041d0e:	46ac      	mov	ip, r5
10041d10:	4460      	add	r0, ip
10041d12:	0c15      	lsrs	r5, r2, #16
10041d14:	0409      	lsls	r1, r1, #16
10041d16:	0412      	lsls	r2, r2, #16
10041d18:	0c09      	lsrs	r1, r1, #16
10041d1a:	1828      	adds	r0, r5, r0
10041d1c:	1852      	adds	r2, r2, r1
10041d1e:	4283      	cmp	r3, r0
10041d20:	d200      	bcs.n	10041d24 <__aeabi_ddiv+0x2f0>
10041d22:	e0ce      	b.n	10041ec2 <__aeabi_ddiv+0x48e>
10041d24:	d100      	bne.n	10041d28 <__aeabi_ddiv+0x2f4>
10041d26:	e0c8      	b.n	10041eba <__aeabi_ddiv+0x486>
10041d28:	1a1d      	subs	r5, r3, r0
10041d2a:	4653      	mov	r3, sl
10041d2c:	1a9e      	subs	r6, r3, r2
10041d2e:	45b2      	cmp	sl, r6
10041d30:	4192      	sbcs	r2, r2
10041d32:	4252      	negs	r2, r2
10041d34:	1aab      	subs	r3, r5, r2
10041d36:	469a      	mov	sl, r3
10041d38:	4598      	cmp	r8, r3
10041d3a:	d100      	bne.n	10041d3e <__aeabi_ddiv+0x30a>
10041d3c:	e117      	b.n	10041f6e <__aeabi_ddiv+0x53a>
10041d3e:	0039      	movs	r1, r7
10041d40:	0018      	movs	r0, r3
10041d42:	f7fe fa15 	bl	10040170 <__udivsi3>
10041d46:	9b01      	ldr	r3, [sp, #4]
10041d48:	0005      	movs	r5, r0
10041d4a:	4343      	muls	r3, r0
10041d4c:	0039      	movs	r1, r7
10041d4e:	4650      	mov	r0, sl
10041d50:	9304      	str	r3, [sp, #16]
10041d52:	f7fe fa93 	bl	1004027c <__aeabi_uidivmod>
10041d56:	9804      	ldr	r0, [sp, #16]
10041d58:	040b      	lsls	r3, r1, #16
10041d5a:	0c31      	lsrs	r1, r6, #16
10041d5c:	4319      	orrs	r1, r3
10041d5e:	4288      	cmp	r0, r1
10041d60:	d909      	bls.n	10041d76 <__aeabi_ddiv+0x342>
10041d62:	4441      	add	r1, r8
10041d64:	1e6b      	subs	r3, r5, #1
10041d66:	4588      	cmp	r8, r1
10041d68:	d900      	bls.n	10041d6c <__aeabi_ddiv+0x338>
10041d6a:	e107      	b.n	10041f7c <__aeabi_ddiv+0x548>
10041d6c:	4288      	cmp	r0, r1
10041d6e:	d800      	bhi.n	10041d72 <__aeabi_ddiv+0x33e>
10041d70:	e104      	b.n	10041f7c <__aeabi_ddiv+0x548>
10041d72:	3d02      	subs	r5, #2
10041d74:	4441      	add	r1, r8
10041d76:	9b04      	ldr	r3, [sp, #16]
10041d78:	1acb      	subs	r3, r1, r3
10041d7a:	0018      	movs	r0, r3
10041d7c:	0039      	movs	r1, r7
10041d7e:	9304      	str	r3, [sp, #16]
10041d80:	f7fe f9f6 	bl	10040170 <__udivsi3>
10041d84:	9b01      	ldr	r3, [sp, #4]
10041d86:	4682      	mov	sl, r0
10041d88:	4343      	muls	r3, r0
10041d8a:	0039      	movs	r1, r7
10041d8c:	9804      	ldr	r0, [sp, #16]
10041d8e:	9301      	str	r3, [sp, #4]
10041d90:	f7fe fa74 	bl	1004027c <__aeabi_uidivmod>
10041d94:	9801      	ldr	r0, [sp, #4]
10041d96:	040b      	lsls	r3, r1, #16
10041d98:	0431      	lsls	r1, r6, #16
10041d9a:	0c09      	lsrs	r1, r1, #16
10041d9c:	4319      	orrs	r1, r3
10041d9e:	4288      	cmp	r0, r1
10041da0:	d90d      	bls.n	10041dbe <__aeabi_ddiv+0x38a>
10041da2:	4653      	mov	r3, sl
10041da4:	4441      	add	r1, r8
10041da6:	3b01      	subs	r3, #1
10041da8:	4588      	cmp	r8, r1
10041daa:	d900      	bls.n	10041dae <__aeabi_ddiv+0x37a>
10041dac:	e0e8      	b.n	10041f80 <__aeabi_ddiv+0x54c>
10041dae:	4288      	cmp	r0, r1
10041db0:	d800      	bhi.n	10041db4 <__aeabi_ddiv+0x380>
10041db2:	e0e5      	b.n	10041f80 <__aeabi_ddiv+0x54c>
10041db4:	2302      	movs	r3, #2
10041db6:	425b      	negs	r3, r3
10041db8:	469c      	mov	ip, r3
10041dba:	4441      	add	r1, r8
10041dbc:	44e2      	add	sl, ip
10041dbe:	9b01      	ldr	r3, [sp, #4]
10041dc0:	042d      	lsls	r5, r5, #16
10041dc2:	1ace      	subs	r6, r1, r3
10041dc4:	4651      	mov	r1, sl
10041dc6:	4329      	orrs	r1, r5
10041dc8:	9d05      	ldr	r5, [sp, #20]
10041dca:	464f      	mov	r7, r9
10041dcc:	002a      	movs	r2, r5
10041dce:	040b      	lsls	r3, r1, #16
10041dd0:	0c08      	lsrs	r0, r1, #16
10041dd2:	0c1b      	lsrs	r3, r3, #16
10041dd4:	435a      	muls	r2, r3
10041dd6:	4345      	muls	r5, r0
10041dd8:	437b      	muls	r3, r7
10041dda:	4378      	muls	r0, r7
10041ddc:	195b      	adds	r3, r3, r5
10041dde:	0c17      	lsrs	r7, r2, #16
10041de0:	18fb      	adds	r3, r7, r3
10041de2:	429d      	cmp	r5, r3
10041de4:	d903      	bls.n	10041dee <__aeabi_ddiv+0x3ba>
10041de6:	2580      	movs	r5, #128	; 0x80
10041de8:	026d      	lsls	r5, r5, #9
10041dea:	46ac      	mov	ip, r5
10041dec:	4460      	add	r0, ip
10041dee:	0c1d      	lsrs	r5, r3, #16
10041df0:	0412      	lsls	r2, r2, #16
10041df2:	041b      	lsls	r3, r3, #16
10041df4:	0c12      	lsrs	r2, r2, #16
10041df6:	1828      	adds	r0, r5, r0
10041df8:	189b      	adds	r3, r3, r2
10041dfa:	4286      	cmp	r6, r0
10041dfc:	d200      	bcs.n	10041e00 <__aeabi_ddiv+0x3cc>
10041dfe:	e093      	b.n	10041f28 <__aeabi_ddiv+0x4f4>
10041e00:	d100      	bne.n	10041e04 <__aeabi_ddiv+0x3d0>
10041e02:	e08e      	b.n	10041f22 <__aeabi_ddiv+0x4ee>
10041e04:	2301      	movs	r3, #1
10041e06:	4319      	orrs	r1, r3
10041e08:	4ba0      	ldr	r3, [pc, #640]	; (1004208c <__aeabi_ddiv+0x658>)
10041e0a:	18e3      	adds	r3, r4, r3
10041e0c:	2b00      	cmp	r3, #0
10041e0e:	dc00      	bgt.n	10041e12 <__aeabi_ddiv+0x3de>
10041e10:	e099      	b.n	10041f46 <__aeabi_ddiv+0x512>
10041e12:	074a      	lsls	r2, r1, #29
10041e14:	d000      	beq.n	10041e18 <__aeabi_ddiv+0x3e4>
10041e16:	e09e      	b.n	10041f56 <__aeabi_ddiv+0x522>
10041e18:	465a      	mov	r2, fp
10041e1a:	01d2      	lsls	r2, r2, #7
10041e1c:	d506      	bpl.n	10041e2c <__aeabi_ddiv+0x3f8>
10041e1e:	465a      	mov	r2, fp
10041e20:	4b9b      	ldr	r3, [pc, #620]	; (10042090 <__aeabi_ddiv+0x65c>)
10041e22:	401a      	ands	r2, r3
10041e24:	2380      	movs	r3, #128	; 0x80
10041e26:	4693      	mov	fp, r2
10041e28:	00db      	lsls	r3, r3, #3
10041e2a:	18e3      	adds	r3, r4, r3
10041e2c:	4a99      	ldr	r2, [pc, #612]	; (10042094 <__aeabi_ddiv+0x660>)
10041e2e:	4293      	cmp	r3, r2
10041e30:	dd68      	ble.n	10041f04 <__aeabi_ddiv+0x4d0>
10041e32:	2301      	movs	r3, #1
10041e34:	9a02      	ldr	r2, [sp, #8]
10041e36:	4c98      	ldr	r4, [pc, #608]	; (10042098 <__aeabi_ddiv+0x664>)
10041e38:	401a      	ands	r2, r3
10041e3a:	2300      	movs	r3, #0
10041e3c:	4694      	mov	ip, r2
10041e3e:	4698      	mov	r8, r3
10041e40:	2200      	movs	r2, #0
10041e42:	e6c5      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
10041e44:	2280      	movs	r2, #128	; 0x80
10041e46:	464b      	mov	r3, r9
10041e48:	0312      	lsls	r2, r2, #12
10041e4a:	4213      	tst	r3, r2
10041e4c:	d00a      	beq.n	10041e64 <__aeabi_ddiv+0x430>
10041e4e:	465b      	mov	r3, fp
10041e50:	4213      	tst	r3, r2
10041e52:	d106      	bne.n	10041e62 <__aeabi_ddiv+0x42e>
10041e54:	431a      	orrs	r2, r3
10041e56:	0312      	lsls	r2, r2, #12
10041e58:	0b12      	lsrs	r2, r2, #12
10041e5a:	46ac      	mov	ip, r5
10041e5c:	4688      	mov	r8, r1
10041e5e:	4c8e      	ldr	r4, [pc, #568]	; (10042098 <__aeabi_ddiv+0x664>)
10041e60:	e6b6      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
10041e62:	464b      	mov	r3, r9
10041e64:	431a      	orrs	r2, r3
10041e66:	0312      	lsls	r2, r2, #12
10041e68:	0b12      	lsrs	r2, r2, #12
10041e6a:	46bc      	mov	ip, r7
10041e6c:	4c8a      	ldr	r4, [pc, #552]	; (10042098 <__aeabi_ddiv+0x664>)
10041e6e:	e6af      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
10041e70:	0003      	movs	r3, r0
10041e72:	465a      	mov	r2, fp
10041e74:	3b28      	subs	r3, #40	; 0x28
10041e76:	409a      	lsls	r2, r3
10041e78:	2300      	movs	r3, #0
10041e7a:	4691      	mov	r9, r2
10041e7c:	4698      	mov	r8, r3
10041e7e:	e657      	b.n	10041b30 <__aeabi_ddiv+0xfc>
10041e80:	4658      	mov	r0, fp
10041e82:	f001 f913 	bl	100430ac <__clzsi2>
10041e86:	3020      	adds	r0, #32
10041e88:	e640      	b.n	10041b0c <__aeabi_ddiv+0xd8>
10041e8a:	0003      	movs	r3, r0
10041e8c:	4652      	mov	r2, sl
10041e8e:	3b28      	subs	r3, #40	; 0x28
10041e90:	409a      	lsls	r2, r3
10041e92:	2100      	movs	r1, #0
10041e94:	4693      	mov	fp, r2
10041e96:	e677      	b.n	10041b88 <__aeabi_ddiv+0x154>
10041e98:	f001 f908 	bl	100430ac <__clzsi2>
10041e9c:	3020      	adds	r0, #32
10041e9e:	e65f      	b.n	10041b60 <__aeabi_ddiv+0x12c>
10041ea0:	4588      	cmp	r8, r1
10041ea2:	d200      	bcs.n	10041ea6 <__aeabi_ddiv+0x472>
10041ea4:	e6c7      	b.n	10041c36 <__aeabi_ddiv+0x202>
10041ea6:	464b      	mov	r3, r9
10041ea8:	07de      	lsls	r6, r3, #31
10041eaa:	085d      	lsrs	r5, r3, #1
10041eac:	4643      	mov	r3, r8
10041eae:	085b      	lsrs	r3, r3, #1
10041eb0:	431e      	orrs	r6, r3
10041eb2:	4643      	mov	r3, r8
10041eb4:	07db      	lsls	r3, r3, #31
10041eb6:	469a      	mov	sl, r3
10041eb8:	e6c2      	b.n	10041c40 <__aeabi_ddiv+0x20c>
10041eba:	2500      	movs	r5, #0
10041ebc:	4592      	cmp	sl, r2
10041ebe:	d300      	bcc.n	10041ec2 <__aeabi_ddiv+0x48e>
10041ec0:	e733      	b.n	10041d2a <__aeabi_ddiv+0x2f6>
10041ec2:	9e03      	ldr	r6, [sp, #12]
10041ec4:	4659      	mov	r1, fp
10041ec6:	46b4      	mov	ip, r6
10041ec8:	44e2      	add	sl, ip
10041eca:	45b2      	cmp	sl, r6
10041ecc:	41ad      	sbcs	r5, r5
10041ece:	426d      	negs	r5, r5
10041ed0:	4445      	add	r5, r8
10041ed2:	18eb      	adds	r3, r5, r3
10041ed4:	3901      	subs	r1, #1
10041ed6:	4598      	cmp	r8, r3
10041ed8:	d207      	bcs.n	10041eea <__aeabi_ddiv+0x4b6>
10041eda:	4298      	cmp	r0, r3
10041edc:	d900      	bls.n	10041ee0 <__aeabi_ddiv+0x4ac>
10041ede:	e07f      	b.n	10041fe0 <__aeabi_ddiv+0x5ac>
10041ee0:	d100      	bne.n	10041ee4 <__aeabi_ddiv+0x4b0>
10041ee2:	e0bc      	b.n	1004205e <__aeabi_ddiv+0x62a>
10041ee4:	1a1d      	subs	r5, r3, r0
10041ee6:	468b      	mov	fp, r1
10041ee8:	e71f      	b.n	10041d2a <__aeabi_ddiv+0x2f6>
10041eea:	4598      	cmp	r8, r3
10041eec:	d1fa      	bne.n	10041ee4 <__aeabi_ddiv+0x4b0>
10041eee:	9d03      	ldr	r5, [sp, #12]
10041ef0:	4555      	cmp	r5, sl
10041ef2:	d9f2      	bls.n	10041eda <__aeabi_ddiv+0x4a6>
10041ef4:	4643      	mov	r3, r8
10041ef6:	468b      	mov	fp, r1
10041ef8:	1a1d      	subs	r5, r3, r0
10041efa:	e716      	b.n	10041d2a <__aeabi_ddiv+0x2f6>
10041efc:	469b      	mov	fp, r3
10041efe:	e6ca      	b.n	10041c96 <__aeabi_ddiv+0x262>
10041f00:	0015      	movs	r5, r2
10041f02:	e6e7      	b.n	10041cd4 <__aeabi_ddiv+0x2a0>
10041f04:	465a      	mov	r2, fp
10041f06:	08c9      	lsrs	r1, r1, #3
10041f08:	0752      	lsls	r2, r2, #29
10041f0a:	430a      	orrs	r2, r1
10041f0c:	055b      	lsls	r3, r3, #21
10041f0e:	4690      	mov	r8, r2
10041f10:	0d5c      	lsrs	r4, r3, #21
10041f12:	465a      	mov	r2, fp
10041f14:	2301      	movs	r3, #1
10041f16:	9902      	ldr	r1, [sp, #8]
10041f18:	0252      	lsls	r2, r2, #9
10041f1a:	4019      	ands	r1, r3
10041f1c:	0b12      	lsrs	r2, r2, #12
10041f1e:	468c      	mov	ip, r1
10041f20:	e656      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
10041f22:	2b00      	cmp	r3, #0
10041f24:	d100      	bne.n	10041f28 <__aeabi_ddiv+0x4f4>
10041f26:	e76f      	b.n	10041e08 <__aeabi_ddiv+0x3d4>
10041f28:	4446      	add	r6, r8
10041f2a:	1e4a      	subs	r2, r1, #1
10041f2c:	45b0      	cmp	r8, r6
10041f2e:	d929      	bls.n	10041f84 <__aeabi_ddiv+0x550>
10041f30:	0011      	movs	r1, r2
10041f32:	4286      	cmp	r6, r0
10041f34:	d000      	beq.n	10041f38 <__aeabi_ddiv+0x504>
10041f36:	e765      	b.n	10041e04 <__aeabi_ddiv+0x3d0>
10041f38:	9a03      	ldr	r2, [sp, #12]
10041f3a:	4293      	cmp	r3, r2
10041f3c:	d000      	beq.n	10041f40 <__aeabi_ddiv+0x50c>
10041f3e:	e761      	b.n	10041e04 <__aeabi_ddiv+0x3d0>
10041f40:	e762      	b.n	10041e08 <__aeabi_ddiv+0x3d4>
10041f42:	2101      	movs	r1, #1
10041f44:	4249      	negs	r1, r1
10041f46:	2001      	movs	r0, #1
10041f48:	1ac2      	subs	r2, r0, r3
10041f4a:	2a38      	cmp	r2, #56	; 0x38
10041f4c:	dd21      	ble.n	10041f92 <__aeabi_ddiv+0x55e>
10041f4e:	9b02      	ldr	r3, [sp, #8]
10041f50:	4003      	ands	r3, r0
10041f52:	469c      	mov	ip, r3
10041f54:	e638      	b.n	10041bc8 <__aeabi_ddiv+0x194>
10041f56:	220f      	movs	r2, #15
10041f58:	400a      	ands	r2, r1
10041f5a:	2a04      	cmp	r2, #4
10041f5c:	d100      	bne.n	10041f60 <__aeabi_ddiv+0x52c>
10041f5e:	e75b      	b.n	10041e18 <__aeabi_ddiv+0x3e4>
10041f60:	000a      	movs	r2, r1
10041f62:	1d11      	adds	r1, r2, #4
10041f64:	4291      	cmp	r1, r2
10041f66:	4192      	sbcs	r2, r2
10041f68:	4252      	negs	r2, r2
10041f6a:	4493      	add	fp, r2
10041f6c:	e754      	b.n	10041e18 <__aeabi_ddiv+0x3e4>
10041f6e:	4b47      	ldr	r3, [pc, #284]	; (1004208c <__aeabi_ddiv+0x658>)
10041f70:	18e3      	adds	r3, r4, r3
10041f72:	2b00      	cmp	r3, #0
10041f74:	dde5      	ble.n	10041f42 <__aeabi_ddiv+0x50e>
10041f76:	2201      	movs	r2, #1
10041f78:	4252      	negs	r2, r2
10041f7a:	e7f2      	b.n	10041f62 <__aeabi_ddiv+0x52e>
10041f7c:	001d      	movs	r5, r3
10041f7e:	e6fa      	b.n	10041d76 <__aeabi_ddiv+0x342>
10041f80:	469a      	mov	sl, r3
10041f82:	e71c      	b.n	10041dbe <__aeabi_ddiv+0x38a>
10041f84:	42b0      	cmp	r0, r6
10041f86:	d839      	bhi.n	10041ffc <__aeabi_ddiv+0x5c8>
10041f88:	d06e      	beq.n	10042068 <__aeabi_ddiv+0x634>
10041f8a:	0011      	movs	r1, r2
10041f8c:	e73a      	b.n	10041e04 <__aeabi_ddiv+0x3d0>
10041f8e:	9302      	str	r3, [sp, #8]
10041f90:	e73a      	b.n	10041e08 <__aeabi_ddiv+0x3d4>
10041f92:	2a1f      	cmp	r2, #31
10041f94:	dc3c      	bgt.n	10042010 <__aeabi_ddiv+0x5dc>
10041f96:	2320      	movs	r3, #32
10041f98:	1a9b      	subs	r3, r3, r2
10041f9a:	000c      	movs	r4, r1
10041f9c:	4658      	mov	r0, fp
10041f9e:	4099      	lsls	r1, r3
10041fa0:	4098      	lsls	r0, r3
10041fa2:	1e4b      	subs	r3, r1, #1
10041fa4:	4199      	sbcs	r1, r3
10041fa6:	465b      	mov	r3, fp
10041fa8:	40d4      	lsrs	r4, r2
10041faa:	40d3      	lsrs	r3, r2
10041fac:	4320      	orrs	r0, r4
10041fae:	4308      	orrs	r0, r1
10041fb0:	001a      	movs	r2, r3
10041fb2:	0743      	lsls	r3, r0, #29
10041fb4:	d009      	beq.n	10041fca <__aeabi_ddiv+0x596>
10041fb6:	230f      	movs	r3, #15
10041fb8:	4003      	ands	r3, r0
10041fba:	2b04      	cmp	r3, #4
10041fbc:	d005      	beq.n	10041fca <__aeabi_ddiv+0x596>
10041fbe:	0001      	movs	r1, r0
10041fc0:	1d08      	adds	r0, r1, #4
10041fc2:	4288      	cmp	r0, r1
10041fc4:	419b      	sbcs	r3, r3
10041fc6:	425b      	negs	r3, r3
10041fc8:	18d2      	adds	r2, r2, r3
10041fca:	0213      	lsls	r3, r2, #8
10041fcc:	d53a      	bpl.n	10042044 <__aeabi_ddiv+0x610>
10041fce:	2301      	movs	r3, #1
10041fd0:	9a02      	ldr	r2, [sp, #8]
10041fd2:	2401      	movs	r4, #1
10041fd4:	401a      	ands	r2, r3
10041fd6:	2300      	movs	r3, #0
10041fd8:	4694      	mov	ip, r2
10041fda:	4698      	mov	r8, r3
10041fdc:	2200      	movs	r2, #0
10041fde:	e5f7      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
10041fe0:	2102      	movs	r1, #2
10041fe2:	4249      	negs	r1, r1
10041fe4:	468c      	mov	ip, r1
10041fe6:	9d03      	ldr	r5, [sp, #12]
10041fe8:	44e3      	add	fp, ip
10041fea:	46ac      	mov	ip, r5
10041fec:	44e2      	add	sl, ip
10041fee:	45aa      	cmp	sl, r5
10041ff0:	41ad      	sbcs	r5, r5
10041ff2:	426d      	negs	r5, r5
10041ff4:	4445      	add	r5, r8
10041ff6:	18ed      	adds	r5, r5, r3
10041ff8:	1a2d      	subs	r5, r5, r0
10041ffa:	e696      	b.n	10041d2a <__aeabi_ddiv+0x2f6>
10041ffc:	1e8a      	subs	r2, r1, #2
10041ffe:	9903      	ldr	r1, [sp, #12]
10042000:	004d      	lsls	r5, r1, #1
10042002:	428d      	cmp	r5, r1
10042004:	4189      	sbcs	r1, r1
10042006:	4249      	negs	r1, r1
10042008:	4441      	add	r1, r8
1004200a:	1876      	adds	r6, r6, r1
1004200c:	9503      	str	r5, [sp, #12]
1004200e:	e78f      	b.n	10041f30 <__aeabi_ddiv+0x4fc>
10042010:	201f      	movs	r0, #31
10042012:	4240      	negs	r0, r0
10042014:	1ac3      	subs	r3, r0, r3
10042016:	4658      	mov	r0, fp
10042018:	40d8      	lsrs	r0, r3
1004201a:	0003      	movs	r3, r0
1004201c:	2a20      	cmp	r2, #32
1004201e:	d028      	beq.n	10042072 <__aeabi_ddiv+0x63e>
10042020:	2040      	movs	r0, #64	; 0x40
10042022:	465d      	mov	r5, fp
10042024:	1a82      	subs	r2, r0, r2
10042026:	4095      	lsls	r5, r2
10042028:	4329      	orrs	r1, r5
1004202a:	1e4a      	subs	r2, r1, #1
1004202c:	4191      	sbcs	r1, r2
1004202e:	4319      	orrs	r1, r3
10042030:	2307      	movs	r3, #7
10042032:	2200      	movs	r2, #0
10042034:	400b      	ands	r3, r1
10042036:	d009      	beq.n	1004204c <__aeabi_ddiv+0x618>
10042038:	230f      	movs	r3, #15
1004203a:	2200      	movs	r2, #0
1004203c:	400b      	ands	r3, r1
1004203e:	0008      	movs	r0, r1
10042040:	2b04      	cmp	r3, #4
10042042:	d1bd      	bne.n	10041fc0 <__aeabi_ddiv+0x58c>
10042044:	0001      	movs	r1, r0
10042046:	0753      	lsls	r3, r2, #29
10042048:	0252      	lsls	r2, r2, #9
1004204a:	0b12      	lsrs	r2, r2, #12
1004204c:	08c9      	lsrs	r1, r1, #3
1004204e:	4319      	orrs	r1, r3
10042050:	2301      	movs	r3, #1
10042052:	4688      	mov	r8, r1
10042054:	9902      	ldr	r1, [sp, #8]
10042056:	2400      	movs	r4, #0
10042058:	4019      	ands	r1, r3
1004205a:	468c      	mov	ip, r1
1004205c:	e5b8      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
1004205e:	4552      	cmp	r2, sl
10042060:	d8be      	bhi.n	10041fe0 <__aeabi_ddiv+0x5ac>
10042062:	468b      	mov	fp, r1
10042064:	2500      	movs	r5, #0
10042066:	e660      	b.n	10041d2a <__aeabi_ddiv+0x2f6>
10042068:	9d03      	ldr	r5, [sp, #12]
1004206a:	429d      	cmp	r5, r3
1004206c:	d3c6      	bcc.n	10041ffc <__aeabi_ddiv+0x5c8>
1004206e:	0011      	movs	r1, r2
10042070:	e762      	b.n	10041f38 <__aeabi_ddiv+0x504>
10042072:	2500      	movs	r5, #0
10042074:	e7d8      	b.n	10042028 <__aeabi_ddiv+0x5f4>
10042076:	2280      	movs	r2, #128	; 0x80
10042078:	465b      	mov	r3, fp
1004207a:	0312      	lsls	r2, r2, #12
1004207c:	431a      	orrs	r2, r3
1004207e:	9b01      	ldr	r3, [sp, #4]
10042080:	0312      	lsls	r2, r2, #12
10042082:	0b12      	lsrs	r2, r2, #12
10042084:	469c      	mov	ip, r3
10042086:	4688      	mov	r8, r1
10042088:	4c03      	ldr	r4, [pc, #12]	; (10042098 <__aeabi_ddiv+0x664>)
1004208a:	e5a1      	b.n	10041bd0 <__aeabi_ddiv+0x19c>
1004208c:	000003ff 	.word	0x000003ff
10042090:	feffffff 	.word	0xfeffffff
10042094:	000007fe 	.word	0x000007fe
10042098:	000007ff 	.word	0x000007ff

1004209c <__eqdf2>:
1004209c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004209e:	464f      	mov	r7, r9
100420a0:	4646      	mov	r6, r8
100420a2:	46d6      	mov	lr, sl
100420a4:	005c      	lsls	r4, r3, #1
100420a6:	b5c0      	push	{r6, r7, lr}
100420a8:	031f      	lsls	r7, r3, #12
100420aa:	0fdb      	lsrs	r3, r3, #31
100420ac:	469a      	mov	sl, r3
100420ae:	4b17      	ldr	r3, [pc, #92]	; (1004210c <__eqdf2+0x70>)
100420b0:	030e      	lsls	r6, r1, #12
100420b2:	004d      	lsls	r5, r1, #1
100420b4:	4684      	mov	ip, r0
100420b6:	4680      	mov	r8, r0
100420b8:	0b36      	lsrs	r6, r6, #12
100420ba:	0d6d      	lsrs	r5, r5, #21
100420bc:	0fc9      	lsrs	r1, r1, #31
100420be:	4691      	mov	r9, r2
100420c0:	0b3f      	lsrs	r7, r7, #12
100420c2:	0d64      	lsrs	r4, r4, #21
100420c4:	2001      	movs	r0, #1
100420c6:	429d      	cmp	r5, r3
100420c8:	d008      	beq.n	100420dc <__eqdf2+0x40>
100420ca:	429c      	cmp	r4, r3
100420cc:	d001      	beq.n	100420d2 <__eqdf2+0x36>
100420ce:	42a5      	cmp	r5, r4
100420d0:	d00b      	beq.n	100420ea <__eqdf2+0x4e>
100420d2:	bc1c      	pop	{r2, r3, r4}
100420d4:	4690      	mov	r8, r2
100420d6:	4699      	mov	r9, r3
100420d8:	46a2      	mov	sl, r4
100420da:	bdf0      	pop	{r4, r5, r6, r7, pc}
100420dc:	4663      	mov	r3, ip
100420de:	4333      	orrs	r3, r6
100420e0:	d1f7      	bne.n	100420d2 <__eqdf2+0x36>
100420e2:	42ac      	cmp	r4, r5
100420e4:	d1f5      	bne.n	100420d2 <__eqdf2+0x36>
100420e6:	433a      	orrs	r2, r7
100420e8:	d1f3      	bne.n	100420d2 <__eqdf2+0x36>
100420ea:	2001      	movs	r0, #1
100420ec:	42be      	cmp	r6, r7
100420ee:	d1f0      	bne.n	100420d2 <__eqdf2+0x36>
100420f0:	45c8      	cmp	r8, r9
100420f2:	d1ee      	bne.n	100420d2 <__eqdf2+0x36>
100420f4:	4551      	cmp	r1, sl
100420f6:	d007      	beq.n	10042108 <__eqdf2+0x6c>
100420f8:	2d00      	cmp	r5, #0
100420fa:	d1ea      	bne.n	100420d2 <__eqdf2+0x36>
100420fc:	4663      	mov	r3, ip
100420fe:	431e      	orrs	r6, r3
10042100:	0030      	movs	r0, r6
10042102:	1e46      	subs	r6, r0, #1
10042104:	41b0      	sbcs	r0, r6
10042106:	e7e4      	b.n	100420d2 <__eqdf2+0x36>
10042108:	2000      	movs	r0, #0
1004210a:	e7e2      	b.n	100420d2 <__eqdf2+0x36>
1004210c:	000007ff 	.word	0x000007ff

10042110 <__gedf2>:
10042110:	b5f0      	push	{r4, r5, r6, r7, lr}
10042112:	4645      	mov	r5, r8
10042114:	46de      	mov	lr, fp
10042116:	4657      	mov	r7, sl
10042118:	464e      	mov	r6, r9
1004211a:	b5e0      	push	{r5, r6, r7, lr}
1004211c:	031f      	lsls	r7, r3, #12
1004211e:	0b3d      	lsrs	r5, r7, #12
10042120:	4f2c      	ldr	r7, [pc, #176]	; (100421d4 <__gedf2+0xc4>)
10042122:	030e      	lsls	r6, r1, #12
10042124:	004c      	lsls	r4, r1, #1
10042126:	46ab      	mov	fp, r5
10042128:	005d      	lsls	r5, r3, #1
1004212a:	4684      	mov	ip, r0
1004212c:	0b36      	lsrs	r6, r6, #12
1004212e:	0d64      	lsrs	r4, r4, #21
10042130:	0fc9      	lsrs	r1, r1, #31
10042132:	4690      	mov	r8, r2
10042134:	0d6d      	lsrs	r5, r5, #21
10042136:	0fdb      	lsrs	r3, r3, #31
10042138:	42bc      	cmp	r4, r7
1004213a:	d02a      	beq.n	10042192 <__gedf2+0x82>
1004213c:	4f25      	ldr	r7, [pc, #148]	; (100421d4 <__gedf2+0xc4>)
1004213e:	42bd      	cmp	r5, r7
10042140:	d02d      	beq.n	1004219e <__gedf2+0x8e>
10042142:	2c00      	cmp	r4, #0
10042144:	d10f      	bne.n	10042166 <__gedf2+0x56>
10042146:	4330      	orrs	r0, r6
10042148:	0007      	movs	r7, r0
1004214a:	4681      	mov	r9, r0
1004214c:	4278      	negs	r0, r7
1004214e:	4178      	adcs	r0, r7
10042150:	b2c0      	uxtb	r0, r0
10042152:	2d00      	cmp	r5, #0
10042154:	d117      	bne.n	10042186 <__gedf2+0x76>
10042156:	465f      	mov	r7, fp
10042158:	433a      	orrs	r2, r7
1004215a:	d114      	bne.n	10042186 <__gedf2+0x76>
1004215c:	464b      	mov	r3, r9
1004215e:	2000      	movs	r0, #0
10042160:	2b00      	cmp	r3, #0
10042162:	d00a      	beq.n	1004217a <__gedf2+0x6a>
10042164:	e006      	b.n	10042174 <__gedf2+0x64>
10042166:	2d00      	cmp	r5, #0
10042168:	d102      	bne.n	10042170 <__gedf2+0x60>
1004216a:	4658      	mov	r0, fp
1004216c:	4302      	orrs	r2, r0
1004216e:	d001      	beq.n	10042174 <__gedf2+0x64>
10042170:	4299      	cmp	r1, r3
10042172:	d018      	beq.n	100421a6 <__gedf2+0x96>
10042174:	4248      	negs	r0, r1
10042176:	2101      	movs	r1, #1
10042178:	4308      	orrs	r0, r1
1004217a:	bc3c      	pop	{r2, r3, r4, r5}
1004217c:	4690      	mov	r8, r2
1004217e:	4699      	mov	r9, r3
10042180:	46a2      	mov	sl, r4
10042182:	46ab      	mov	fp, r5
10042184:	bdf0      	pop	{r4, r5, r6, r7, pc}
10042186:	2800      	cmp	r0, #0
10042188:	d0f2      	beq.n	10042170 <__gedf2+0x60>
1004218a:	2001      	movs	r0, #1
1004218c:	3b01      	subs	r3, #1
1004218e:	4318      	orrs	r0, r3
10042190:	e7f3      	b.n	1004217a <__gedf2+0x6a>
10042192:	0037      	movs	r7, r6
10042194:	4307      	orrs	r7, r0
10042196:	d0d1      	beq.n	1004213c <__gedf2+0x2c>
10042198:	2002      	movs	r0, #2
1004219a:	4240      	negs	r0, r0
1004219c:	e7ed      	b.n	1004217a <__gedf2+0x6a>
1004219e:	465f      	mov	r7, fp
100421a0:	4317      	orrs	r7, r2
100421a2:	d0ce      	beq.n	10042142 <__gedf2+0x32>
100421a4:	e7f8      	b.n	10042198 <__gedf2+0x88>
100421a6:	42ac      	cmp	r4, r5
100421a8:	dce4      	bgt.n	10042174 <__gedf2+0x64>
100421aa:	da03      	bge.n	100421b4 <__gedf2+0xa4>
100421ac:	1e48      	subs	r0, r1, #1
100421ae:	2101      	movs	r1, #1
100421b0:	4308      	orrs	r0, r1
100421b2:	e7e2      	b.n	1004217a <__gedf2+0x6a>
100421b4:	455e      	cmp	r6, fp
100421b6:	d8dd      	bhi.n	10042174 <__gedf2+0x64>
100421b8:	d006      	beq.n	100421c8 <__gedf2+0xb8>
100421ba:	2000      	movs	r0, #0
100421bc:	455e      	cmp	r6, fp
100421be:	d2dc      	bcs.n	1004217a <__gedf2+0x6a>
100421c0:	2301      	movs	r3, #1
100421c2:	1e48      	subs	r0, r1, #1
100421c4:	4318      	orrs	r0, r3
100421c6:	e7d8      	b.n	1004217a <__gedf2+0x6a>
100421c8:	45c4      	cmp	ip, r8
100421ca:	d8d3      	bhi.n	10042174 <__gedf2+0x64>
100421cc:	2000      	movs	r0, #0
100421ce:	45c4      	cmp	ip, r8
100421d0:	d3f6      	bcc.n	100421c0 <__gedf2+0xb0>
100421d2:	e7d2      	b.n	1004217a <__gedf2+0x6a>
100421d4:	000007ff 	.word	0x000007ff

100421d8 <__ledf2>:
100421d8:	b5f0      	push	{r4, r5, r6, r7, lr}
100421da:	464e      	mov	r6, r9
100421dc:	4645      	mov	r5, r8
100421de:	46de      	mov	lr, fp
100421e0:	4657      	mov	r7, sl
100421e2:	005c      	lsls	r4, r3, #1
100421e4:	b5e0      	push	{r5, r6, r7, lr}
100421e6:	031f      	lsls	r7, r3, #12
100421e8:	0fdb      	lsrs	r3, r3, #31
100421ea:	4699      	mov	r9, r3
100421ec:	4b2a      	ldr	r3, [pc, #168]	; (10042298 <__ledf2+0xc0>)
100421ee:	030e      	lsls	r6, r1, #12
100421f0:	004d      	lsls	r5, r1, #1
100421f2:	0fc9      	lsrs	r1, r1, #31
100421f4:	4684      	mov	ip, r0
100421f6:	0b36      	lsrs	r6, r6, #12
100421f8:	0d6d      	lsrs	r5, r5, #21
100421fa:	468b      	mov	fp, r1
100421fc:	4690      	mov	r8, r2
100421fe:	0b3f      	lsrs	r7, r7, #12
10042200:	0d64      	lsrs	r4, r4, #21
10042202:	429d      	cmp	r5, r3
10042204:	d020      	beq.n	10042248 <__ledf2+0x70>
10042206:	4b24      	ldr	r3, [pc, #144]	; (10042298 <__ledf2+0xc0>)
10042208:	429c      	cmp	r4, r3
1004220a:	d022      	beq.n	10042252 <__ledf2+0x7a>
1004220c:	2d00      	cmp	r5, #0
1004220e:	d112      	bne.n	10042236 <__ledf2+0x5e>
10042210:	4330      	orrs	r0, r6
10042212:	4243      	negs	r3, r0
10042214:	4143      	adcs	r3, r0
10042216:	b2db      	uxtb	r3, r3
10042218:	2c00      	cmp	r4, #0
1004221a:	d01f      	beq.n	1004225c <__ledf2+0x84>
1004221c:	2b00      	cmp	r3, #0
1004221e:	d00c      	beq.n	1004223a <__ledf2+0x62>
10042220:	464b      	mov	r3, r9
10042222:	2001      	movs	r0, #1
10042224:	3b01      	subs	r3, #1
10042226:	4303      	orrs	r3, r0
10042228:	0018      	movs	r0, r3
1004222a:	bc3c      	pop	{r2, r3, r4, r5}
1004222c:	4690      	mov	r8, r2
1004222e:	4699      	mov	r9, r3
10042230:	46a2      	mov	sl, r4
10042232:	46ab      	mov	fp, r5
10042234:	bdf0      	pop	{r4, r5, r6, r7, pc}
10042236:	2c00      	cmp	r4, #0
10042238:	d016      	beq.n	10042268 <__ledf2+0x90>
1004223a:	45cb      	cmp	fp, r9
1004223c:	d017      	beq.n	1004226e <__ledf2+0x96>
1004223e:	465b      	mov	r3, fp
10042240:	4259      	negs	r1, r3
10042242:	2301      	movs	r3, #1
10042244:	430b      	orrs	r3, r1
10042246:	e7ef      	b.n	10042228 <__ledf2+0x50>
10042248:	0031      	movs	r1, r6
1004224a:	2302      	movs	r3, #2
1004224c:	4301      	orrs	r1, r0
1004224e:	d1eb      	bne.n	10042228 <__ledf2+0x50>
10042250:	e7d9      	b.n	10042206 <__ledf2+0x2e>
10042252:	0039      	movs	r1, r7
10042254:	2302      	movs	r3, #2
10042256:	4311      	orrs	r1, r2
10042258:	d1e6      	bne.n	10042228 <__ledf2+0x50>
1004225a:	e7d7      	b.n	1004220c <__ledf2+0x34>
1004225c:	433a      	orrs	r2, r7
1004225e:	d1dd      	bne.n	1004221c <__ledf2+0x44>
10042260:	2300      	movs	r3, #0
10042262:	2800      	cmp	r0, #0
10042264:	d0e0      	beq.n	10042228 <__ledf2+0x50>
10042266:	e7ea      	b.n	1004223e <__ledf2+0x66>
10042268:	433a      	orrs	r2, r7
1004226a:	d1e6      	bne.n	1004223a <__ledf2+0x62>
1004226c:	e7e7      	b.n	1004223e <__ledf2+0x66>
1004226e:	42a5      	cmp	r5, r4
10042270:	dce5      	bgt.n	1004223e <__ledf2+0x66>
10042272:	db05      	blt.n	10042280 <__ledf2+0xa8>
10042274:	42be      	cmp	r6, r7
10042276:	d8e2      	bhi.n	1004223e <__ledf2+0x66>
10042278:	d007      	beq.n	1004228a <__ledf2+0xb2>
1004227a:	2300      	movs	r3, #0
1004227c:	42be      	cmp	r6, r7
1004227e:	d2d3      	bcs.n	10042228 <__ledf2+0x50>
10042280:	4659      	mov	r1, fp
10042282:	2301      	movs	r3, #1
10042284:	3901      	subs	r1, #1
10042286:	430b      	orrs	r3, r1
10042288:	e7ce      	b.n	10042228 <__ledf2+0x50>
1004228a:	45c4      	cmp	ip, r8
1004228c:	d8d7      	bhi.n	1004223e <__ledf2+0x66>
1004228e:	2300      	movs	r3, #0
10042290:	45c4      	cmp	ip, r8
10042292:	d3f5      	bcc.n	10042280 <__ledf2+0xa8>
10042294:	e7c8      	b.n	10042228 <__ledf2+0x50>
10042296:	46c0      	nop			; (mov r8, r8)
10042298:	000007ff 	.word	0x000007ff

1004229c <__aeabi_dmul>:
1004229c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004229e:	4657      	mov	r7, sl
100422a0:	4645      	mov	r5, r8
100422a2:	46de      	mov	lr, fp
100422a4:	464e      	mov	r6, r9
100422a6:	b5e0      	push	{r5, r6, r7, lr}
100422a8:	030c      	lsls	r4, r1, #12
100422aa:	4698      	mov	r8, r3
100422ac:	004e      	lsls	r6, r1, #1
100422ae:	0b23      	lsrs	r3, r4, #12
100422b0:	b087      	sub	sp, #28
100422b2:	0007      	movs	r7, r0
100422b4:	4692      	mov	sl, r2
100422b6:	469b      	mov	fp, r3
100422b8:	0d76      	lsrs	r6, r6, #21
100422ba:	0fcd      	lsrs	r5, r1, #31
100422bc:	2e00      	cmp	r6, #0
100422be:	d06b      	beq.n	10042398 <__aeabi_dmul+0xfc>
100422c0:	4b6d      	ldr	r3, [pc, #436]	; (10042478 <__aeabi_dmul+0x1dc>)
100422c2:	429e      	cmp	r6, r3
100422c4:	d035      	beq.n	10042332 <__aeabi_dmul+0x96>
100422c6:	2480      	movs	r4, #128	; 0x80
100422c8:	465b      	mov	r3, fp
100422ca:	0f42      	lsrs	r2, r0, #29
100422cc:	0424      	lsls	r4, r4, #16
100422ce:	00db      	lsls	r3, r3, #3
100422d0:	4314      	orrs	r4, r2
100422d2:	431c      	orrs	r4, r3
100422d4:	00c3      	lsls	r3, r0, #3
100422d6:	4699      	mov	r9, r3
100422d8:	4b68      	ldr	r3, [pc, #416]	; (1004247c <__aeabi_dmul+0x1e0>)
100422da:	46a3      	mov	fp, r4
100422dc:	469c      	mov	ip, r3
100422de:	2300      	movs	r3, #0
100422e0:	2700      	movs	r7, #0
100422e2:	4466      	add	r6, ip
100422e4:	9302      	str	r3, [sp, #8]
100422e6:	4643      	mov	r3, r8
100422e8:	031c      	lsls	r4, r3, #12
100422ea:	005a      	lsls	r2, r3, #1
100422ec:	0fdb      	lsrs	r3, r3, #31
100422ee:	4650      	mov	r0, sl
100422f0:	0b24      	lsrs	r4, r4, #12
100422f2:	0d52      	lsrs	r2, r2, #21
100422f4:	4698      	mov	r8, r3
100422f6:	d100      	bne.n	100422fa <__aeabi_dmul+0x5e>
100422f8:	e076      	b.n	100423e8 <__aeabi_dmul+0x14c>
100422fa:	4b5f      	ldr	r3, [pc, #380]	; (10042478 <__aeabi_dmul+0x1dc>)
100422fc:	429a      	cmp	r2, r3
100422fe:	d06d      	beq.n	100423dc <__aeabi_dmul+0x140>
10042300:	2380      	movs	r3, #128	; 0x80
10042302:	0f41      	lsrs	r1, r0, #29
10042304:	041b      	lsls	r3, r3, #16
10042306:	430b      	orrs	r3, r1
10042308:	495c      	ldr	r1, [pc, #368]	; (1004247c <__aeabi_dmul+0x1e0>)
1004230a:	00e4      	lsls	r4, r4, #3
1004230c:	468c      	mov	ip, r1
1004230e:	431c      	orrs	r4, r3
10042310:	00c3      	lsls	r3, r0, #3
10042312:	2000      	movs	r0, #0
10042314:	4462      	add	r2, ip
10042316:	4641      	mov	r1, r8
10042318:	18b6      	adds	r6, r6, r2
1004231a:	4069      	eors	r1, r5
1004231c:	1c72      	adds	r2, r6, #1
1004231e:	9101      	str	r1, [sp, #4]
10042320:	4694      	mov	ip, r2
10042322:	4307      	orrs	r7, r0
10042324:	2f0f      	cmp	r7, #15
10042326:	d900      	bls.n	1004232a <__aeabi_dmul+0x8e>
10042328:	e0b0      	b.n	1004248c <__aeabi_dmul+0x1f0>
1004232a:	4a55      	ldr	r2, [pc, #340]	; (10042480 <__aeabi_dmul+0x1e4>)
1004232c:	00bf      	lsls	r7, r7, #2
1004232e:	59d2      	ldr	r2, [r2, r7]
10042330:	4697      	mov	pc, r2
10042332:	465b      	mov	r3, fp
10042334:	4303      	orrs	r3, r0
10042336:	4699      	mov	r9, r3
10042338:	d000      	beq.n	1004233c <__aeabi_dmul+0xa0>
1004233a:	e087      	b.n	1004244c <__aeabi_dmul+0x1b0>
1004233c:	2300      	movs	r3, #0
1004233e:	469b      	mov	fp, r3
10042340:	3302      	adds	r3, #2
10042342:	2708      	movs	r7, #8
10042344:	9302      	str	r3, [sp, #8]
10042346:	e7ce      	b.n	100422e6 <__aeabi_dmul+0x4a>
10042348:	4642      	mov	r2, r8
1004234a:	9201      	str	r2, [sp, #4]
1004234c:	2802      	cmp	r0, #2
1004234e:	d067      	beq.n	10042420 <__aeabi_dmul+0x184>
10042350:	2803      	cmp	r0, #3
10042352:	d100      	bne.n	10042356 <__aeabi_dmul+0xba>
10042354:	e20e      	b.n	10042774 <__aeabi_dmul+0x4d8>
10042356:	2801      	cmp	r0, #1
10042358:	d000      	beq.n	1004235c <__aeabi_dmul+0xc0>
1004235a:	e162      	b.n	10042622 <__aeabi_dmul+0x386>
1004235c:	2300      	movs	r3, #0
1004235e:	2400      	movs	r4, #0
10042360:	2200      	movs	r2, #0
10042362:	4699      	mov	r9, r3
10042364:	9901      	ldr	r1, [sp, #4]
10042366:	4001      	ands	r1, r0
10042368:	b2cd      	uxtb	r5, r1
1004236a:	2100      	movs	r1, #0
1004236c:	0312      	lsls	r2, r2, #12
1004236e:	0d0b      	lsrs	r3, r1, #20
10042370:	0b12      	lsrs	r2, r2, #12
10042372:	051b      	lsls	r3, r3, #20
10042374:	4313      	orrs	r3, r2
10042376:	4a43      	ldr	r2, [pc, #268]	; (10042484 <__aeabi_dmul+0x1e8>)
10042378:	0524      	lsls	r4, r4, #20
1004237a:	4013      	ands	r3, r2
1004237c:	431c      	orrs	r4, r3
1004237e:	0064      	lsls	r4, r4, #1
10042380:	07ed      	lsls	r5, r5, #31
10042382:	0864      	lsrs	r4, r4, #1
10042384:	432c      	orrs	r4, r5
10042386:	4648      	mov	r0, r9
10042388:	0021      	movs	r1, r4
1004238a:	b007      	add	sp, #28
1004238c:	bc3c      	pop	{r2, r3, r4, r5}
1004238e:	4690      	mov	r8, r2
10042390:	4699      	mov	r9, r3
10042392:	46a2      	mov	sl, r4
10042394:	46ab      	mov	fp, r5
10042396:	bdf0      	pop	{r4, r5, r6, r7, pc}
10042398:	4303      	orrs	r3, r0
1004239a:	4699      	mov	r9, r3
1004239c:	d04f      	beq.n	1004243e <__aeabi_dmul+0x1a2>
1004239e:	465b      	mov	r3, fp
100423a0:	2b00      	cmp	r3, #0
100423a2:	d100      	bne.n	100423a6 <__aeabi_dmul+0x10a>
100423a4:	e189      	b.n	100426ba <__aeabi_dmul+0x41e>
100423a6:	4658      	mov	r0, fp
100423a8:	f000 fe80 	bl	100430ac <__clzsi2>
100423ac:	0003      	movs	r3, r0
100423ae:	3b0b      	subs	r3, #11
100423b0:	2b1c      	cmp	r3, #28
100423b2:	dd00      	ble.n	100423b6 <__aeabi_dmul+0x11a>
100423b4:	e17a      	b.n	100426ac <__aeabi_dmul+0x410>
100423b6:	221d      	movs	r2, #29
100423b8:	1ad3      	subs	r3, r2, r3
100423ba:	003a      	movs	r2, r7
100423bc:	0001      	movs	r1, r0
100423be:	465c      	mov	r4, fp
100423c0:	40da      	lsrs	r2, r3
100423c2:	3908      	subs	r1, #8
100423c4:	408c      	lsls	r4, r1
100423c6:	0013      	movs	r3, r2
100423c8:	408f      	lsls	r7, r1
100423ca:	4323      	orrs	r3, r4
100423cc:	469b      	mov	fp, r3
100423ce:	46b9      	mov	r9, r7
100423d0:	2300      	movs	r3, #0
100423d2:	4e2d      	ldr	r6, [pc, #180]	; (10042488 <__aeabi_dmul+0x1ec>)
100423d4:	2700      	movs	r7, #0
100423d6:	1a36      	subs	r6, r6, r0
100423d8:	9302      	str	r3, [sp, #8]
100423da:	e784      	b.n	100422e6 <__aeabi_dmul+0x4a>
100423dc:	4653      	mov	r3, sl
100423de:	4323      	orrs	r3, r4
100423e0:	d12a      	bne.n	10042438 <__aeabi_dmul+0x19c>
100423e2:	2400      	movs	r4, #0
100423e4:	2002      	movs	r0, #2
100423e6:	e796      	b.n	10042316 <__aeabi_dmul+0x7a>
100423e8:	4653      	mov	r3, sl
100423ea:	4323      	orrs	r3, r4
100423ec:	d020      	beq.n	10042430 <__aeabi_dmul+0x194>
100423ee:	2c00      	cmp	r4, #0
100423f0:	d100      	bne.n	100423f4 <__aeabi_dmul+0x158>
100423f2:	e157      	b.n	100426a4 <__aeabi_dmul+0x408>
100423f4:	0020      	movs	r0, r4
100423f6:	f000 fe59 	bl	100430ac <__clzsi2>
100423fa:	0003      	movs	r3, r0
100423fc:	3b0b      	subs	r3, #11
100423fe:	2b1c      	cmp	r3, #28
10042400:	dd00      	ble.n	10042404 <__aeabi_dmul+0x168>
10042402:	e149      	b.n	10042698 <__aeabi_dmul+0x3fc>
10042404:	211d      	movs	r1, #29
10042406:	1acb      	subs	r3, r1, r3
10042408:	4651      	mov	r1, sl
1004240a:	0002      	movs	r2, r0
1004240c:	40d9      	lsrs	r1, r3
1004240e:	4653      	mov	r3, sl
10042410:	3a08      	subs	r2, #8
10042412:	4094      	lsls	r4, r2
10042414:	4093      	lsls	r3, r2
10042416:	430c      	orrs	r4, r1
10042418:	4a1b      	ldr	r2, [pc, #108]	; (10042488 <__aeabi_dmul+0x1ec>)
1004241a:	1a12      	subs	r2, r2, r0
1004241c:	2000      	movs	r0, #0
1004241e:	e77a      	b.n	10042316 <__aeabi_dmul+0x7a>
10042420:	2501      	movs	r5, #1
10042422:	9b01      	ldr	r3, [sp, #4]
10042424:	4c14      	ldr	r4, [pc, #80]	; (10042478 <__aeabi_dmul+0x1dc>)
10042426:	401d      	ands	r5, r3
10042428:	2300      	movs	r3, #0
1004242a:	2200      	movs	r2, #0
1004242c:	4699      	mov	r9, r3
1004242e:	e79c      	b.n	1004236a <__aeabi_dmul+0xce>
10042430:	2400      	movs	r4, #0
10042432:	2200      	movs	r2, #0
10042434:	2001      	movs	r0, #1
10042436:	e76e      	b.n	10042316 <__aeabi_dmul+0x7a>
10042438:	4653      	mov	r3, sl
1004243a:	2003      	movs	r0, #3
1004243c:	e76b      	b.n	10042316 <__aeabi_dmul+0x7a>
1004243e:	2300      	movs	r3, #0
10042440:	469b      	mov	fp, r3
10042442:	3301      	adds	r3, #1
10042444:	2704      	movs	r7, #4
10042446:	2600      	movs	r6, #0
10042448:	9302      	str	r3, [sp, #8]
1004244a:	e74c      	b.n	100422e6 <__aeabi_dmul+0x4a>
1004244c:	2303      	movs	r3, #3
1004244e:	4681      	mov	r9, r0
10042450:	270c      	movs	r7, #12
10042452:	9302      	str	r3, [sp, #8]
10042454:	e747      	b.n	100422e6 <__aeabi_dmul+0x4a>
10042456:	2280      	movs	r2, #128	; 0x80
10042458:	2300      	movs	r3, #0
1004245a:	2500      	movs	r5, #0
1004245c:	0312      	lsls	r2, r2, #12
1004245e:	4699      	mov	r9, r3
10042460:	4c05      	ldr	r4, [pc, #20]	; (10042478 <__aeabi_dmul+0x1dc>)
10042462:	e782      	b.n	1004236a <__aeabi_dmul+0xce>
10042464:	465c      	mov	r4, fp
10042466:	464b      	mov	r3, r9
10042468:	9802      	ldr	r0, [sp, #8]
1004246a:	e76f      	b.n	1004234c <__aeabi_dmul+0xb0>
1004246c:	465c      	mov	r4, fp
1004246e:	464b      	mov	r3, r9
10042470:	9501      	str	r5, [sp, #4]
10042472:	9802      	ldr	r0, [sp, #8]
10042474:	e76a      	b.n	1004234c <__aeabi_dmul+0xb0>
10042476:	46c0      	nop			; (mov r8, r8)
10042478:	000007ff 	.word	0x000007ff
1004247c:	fffffc01 	.word	0xfffffc01
10042480:	100583a4 	.word	0x100583a4
10042484:	800fffff 	.word	0x800fffff
10042488:	fffffc0d 	.word	0xfffffc0d
1004248c:	464a      	mov	r2, r9
1004248e:	4649      	mov	r1, r9
10042490:	0c17      	lsrs	r7, r2, #16
10042492:	0c1a      	lsrs	r2, r3, #16
10042494:	041b      	lsls	r3, r3, #16
10042496:	0c1b      	lsrs	r3, r3, #16
10042498:	0408      	lsls	r0, r1, #16
1004249a:	0019      	movs	r1, r3
1004249c:	0c00      	lsrs	r0, r0, #16
1004249e:	4341      	muls	r1, r0
100424a0:	0015      	movs	r5, r2
100424a2:	4688      	mov	r8, r1
100424a4:	0019      	movs	r1, r3
100424a6:	437d      	muls	r5, r7
100424a8:	4379      	muls	r1, r7
100424aa:	9503      	str	r5, [sp, #12]
100424ac:	4689      	mov	r9, r1
100424ae:	0029      	movs	r1, r5
100424b0:	0015      	movs	r5, r2
100424b2:	4345      	muls	r5, r0
100424b4:	444d      	add	r5, r9
100424b6:	9502      	str	r5, [sp, #8]
100424b8:	4645      	mov	r5, r8
100424ba:	0c2d      	lsrs	r5, r5, #16
100424bc:	46aa      	mov	sl, r5
100424be:	9d02      	ldr	r5, [sp, #8]
100424c0:	4455      	add	r5, sl
100424c2:	45a9      	cmp	r9, r5
100424c4:	d906      	bls.n	100424d4 <__aeabi_dmul+0x238>
100424c6:	468a      	mov	sl, r1
100424c8:	2180      	movs	r1, #128	; 0x80
100424ca:	0249      	lsls	r1, r1, #9
100424cc:	4689      	mov	r9, r1
100424ce:	44ca      	add	sl, r9
100424d0:	4651      	mov	r1, sl
100424d2:	9103      	str	r1, [sp, #12]
100424d4:	0c29      	lsrs	r1, r5, #16
100424d6:	9104      	str	r1, [sp, #16]
100424d8:	4641      	mov	r1, r8
100424da:	0409      	lsls	r1, r1, #16
100424dc:	042d      	lsls	r5, r5, #16
100424de:	0c09      	lsrs	r1, r1, #16
100424e0:	4688      	mov	r8, r1
100424e2:	0029      	movs	r1, r5
100424e4:	0c25      	lsrs	r5, r4, #16
100424e6:	0424      	lsls	r4, r4, #16
100424e8:	4441      	add	r1, r8
100424ea:	0c24      	lsrs	r4, r4, #16
100424ec:	9105      	str	r1, [sp, #20]
100424ee:	0021      	movs	r1, r4
100424f0:	4341      	muls	r1, r0
100424f2:	4688      	mov	r8, r1
100424f4:	0021      	movs	r1, r4
100424f6:	4379      	muls	r1, r7
100424f8:	468a      	mov	sl, r1
100424fa:	4368      	muls	r0, r5
100424fc:	4641      	mov	r1, r8
100424fe:	4450      	add	r0, sl
10042500:	4681      	mov	r9, r0
10042502:	0c08      	lsrs	r0, r1, #16
10042504:	4448      	add	r0, r9
10042506:	436f      	muls	r7, r5
10042508:	4582      	cmp	sl, r0
1004250a:	d903      	bls.n	10042514 <__aeabi_dmul+0x278>
1004250c:	2180      	movs	r1, #128	; 0x80
1004250e:	0249      	lsls	r1, r1, #9
10042510:	4689      	mov	r9, r1
10042512:	444f      	add	r7, r9
10042514:	0c01      	lsrs	r1, r0, #16
10042516:	4689      	mov	r9, r1
10042518:	0039      	movs	r1, r7
1004251a:	4449      	add	r1, r9
1004251c:	9102      	str	r1, [sp, #8]
1004251e:	4641      	mov	r1, r8
10042520:	040f      	lsls	r7, r1, #16
10042522:	9904      	ldr	r1, [sp, #16]
10042524:	0c3f      	lsrs	r7, r7, #16
10042526:	4688      	mov	r8, r1
10042528:	0400      	lsls	r0, r0, #16
1004252a:	19c0      	adds	r0, r0, r7
1004252c:	4480      	add	r8, r0
1004252e:	4641      	mov	r1, r8
10042530:	9104      	str	r1, [sp, #16]
10042532:	4659      	mov	r1, fp
10042534:	0c0f      	lsrs	r7, r1, #16
10042536:	0409      	lsls	r1, r1, #16
10042538:	0c09      	lsrs	r1, r1, #16
1004253a:	4688      	mov	r8, r1
1004253c:	4359      	muls	r1, r3
1004253e:	468a      	mov	sl, r1
10042540:	0039      	movs	r1, r7
10042542:	4351      	muls	r1, r2
10042544:	4689      	mov	r9, r1
10042546:	4641      	mov	r1, r8
10042548:	434a      	muls	r2, r1
1004254a:	4651      	mov	r1, sl
1004254c:	0c09      	lsrs	r1, r1, #16
1004254e:	468b      	mov	fp, r1
10042550:	437b      	muls	r3, r7
10042552:	18d2      	adds	r2, r2, r3
10042554:	445a      	add	r2, fp
10042556:	4293      	cmp	r3, r2
10042558:	d903      	bls.n	10042562 <__aeabi_dmul+0x2c6>
1004255a:	2380      	movs	r3, #128	; 0x80
1004255c:	025b      	lsls	r3, r3, #9
1004255e:	469b      	mov	fp, r3
10042560:	44d9      	add	r9, fp
10042562:	4651      	mov	r1, sl
10042564:	0409      	lsls	r1, r1, #16
10042566:	0c09      	lsrs	r1, r1, #16
10042568:	468a      	mov	sl, r1
1004256a:	4641      	mov	r1, r8
1004256c:	4361      	muls	r1, r4
1004256e:	437c      	muls	r4, r7
10042570:	0c13      	lsrs	r3, r2, #16
10042572:	0412      	lsls	r2, r2, #16
10042574:	444b      	add	r3, r9
10042576:	4452      	add	r2, sl
10042578:	46a1      	mov	r9, r4
1004257a:	468a      	mov	sl, r1
1004257c:	003c      	movs	r4, r7
1004257e:	4641      	mov	r1, r8
10042580:	436c      	muls	r4, r5
10042582:	434d      	muls	r5, r1
10042584:	4651      	mov	r1, sl
10042586:	444d      	add	r5, r9
10042588:	0c0f      	lsrs	r7, r1, #16
1004258a:	197d      	adds	r5, r7, r5
1004258c:	45a9      	cmp	r9, r5
1004258e:	d903      	bls.n	10042598 <__aeabi_dmul+0x2fc>
10042590:	2180      	movs	r1, #128	; 0x80
10042592:	0249      	lsls	r1, r1, #9
10042594:	4688      	mov	r8, r1
10042596:	4444      	add	r4, r8
10042598:	9f04      	ldr	r7, [sp, #16]
1004259a:	9903      	ldr	r1, [sp, #12]
1004259c:	46b8      	mov	r8, r7
1004259e:	4441      	add	r1, r8
100425a0:	468b      	mov	fp, r1
100425a2:	4583      	cmp	fp, r0
100425a4:	4180      	sbcs	r0, r0
100425a6:	4241      	negs	r1, r0
100425a8:	4688      	mov	r8, r1
100425aa:	4651      	mov	r1, sl
100425ac:	0408      	lsls	r0, r1, #16
100425ae:	042f      	lsls	r7, r5, #16
100425b0:	0c00      	lsrs	r0, r0, #16
100425b2:	183f      	adds	r7, r7, r0
100425b4:	4658      	mov	r0, fp
100425b6:	9902      	ldr	r1, [sp, #8]
100425b8:	1810      	adds	r0, r2, r0
100425ba:	4689      	mov	r9, r1
100425bc:	4290      	cmp	r0, r2
100425be:	4192      	sbcs	r2, r2
100425c0:	444f      	add	r7, r9
100425c2:	46ba      	mov	sl, r7
100425c4:	4252      	negs	r2, r2
100425c6:	4699      	mov	r9, r3
100425c8:	4693      	mov	fp, r2
100425ca:	44c2      	add	sl, r8
100425cc:	44d1      	add	r9, sl
100425ce:	44cb      	add	fp, r9
100425d0:	428f      	cmp	r7, r1
100425d2:	41bf      	sbcs	r7, r7
100425d4:	45c2      	cmp	sl, r8
100425d6:	4189      	sbcs	r1, r1
100425d8:	4599      	cmp	r9, r3
100425da:	419b      	sbcs	r3, r3
100425dc:	4593      	cmp	fp, r2
100425de:	4192      	sbcs	r2, r2
100425e0:	427f      	negs	r7, r7
100425e2:	4249      	negs	r1, r1
100425e4:	0c2d      	lsrs	r5, r5, #16
100425e6:	4252      	negs	r2, r2
100425e8:	430f      	orrs	r7, r1
100425ea:	425b      	negs	r3, r3
100425ec:	4313      	orrs	r3, r2
100425ee:	197f      	adds	r7, r7, r5
100425f0:	18ff      	adds	r7, r7, r3
100425f2:	465b      	mov	r3, fp
100425f4:	193c      	adds	r4, r7, r4
100425f6:	0ddb      	lsrs	r3, r3, #23
100425f8:	9a05      	ldr	r2, [sp, #20]
100425fa:	0264      	lsls	r4, r4, #9
100425fc:	431c      	orrs	r4, r3
100425fe:	0243      	lsls	r3, r0, #9
10042600:	4313      	orrs	r3, r2
10042602:	1e5d      	subs	r5, r3, #1
10042604:	41ab      	sbcs	r3, r5
10042606:	465a      	mov	r2, fp
10042608:	0dc0      	lsrs	r0, r0, #23
1004260a:	4303      	orrs	r3, r0
1004260c:	0252      	lsls	r2, r2, #9
1004260e:	4313      	orrs	r3, r2
10042610:	01e2      	lsls	r2, r4, #7
10042612:	d556      	bpl.n	100426c2 <__aeabi_dmul+0x426>
10042614:	2001      	movs	r0, #1
10042616:	085a      	lsrs	r2, r3, #1
10042618:	4003      	ands	r3, r0
1004261a:	4313      	orrs	r3, r2
1004261c:	07e2      	lsls	r2, r4, #31
1004261e:	4313      	orrs	r3, r2
10042620:	0864      	lsrs	r4, r4, #1
10042622:	485a      	ldr	r0, [pc, #360]	; (1004278c <__aeabi_dmul+0x4f0>)
10042624:	4460      	add	r0, ip
10042626:	2800      	cmp	r0, #0
10042628:	dd4d      	ble.n	100426c6 <__aeabi_dmul+0x42a>
1004262a:	075a      	lsls	r2, r3, #29
1004262c:	d009      	beq.n	10042642 <__aeabi_dmul+0x3a6>
1004262e:	220f      	movs	r2, #15
10042630:	401a      	ands	r2, r3
10042632:	2a04      	cmp	r2, #4
10042634:	d005      	beq.n	10042642 <__aeabi_dmul+0x3a6>
10042636:	1d1a      	adds	r2, r3, #4
10042638:	429a      	cmp	r2, r3
1004263a:	419b      	sbcs	r3, r3
1004263c:	425b      	negs	r3, r3
1004263e:	18e4      	adds	r4, r4, r3
10042640:	0013      	movs	r3, r2
10042642:	01e2      	lsls	r2, r4, #7
10042644:	d504      	bpl.n	10042650 <__aeabi_dmul+0x3b4>
10042646:	2080      	movs	r0, #128	; 0x80
10042648:	4a51      	ldr	r2, [pc, #324]	; (10042790 <__aeabi_dmul+0x4f4>)
1004264a:	00c0      	lsls	r0, r0, #3
1004264c:	4014      	ands	r4, r2
1004264e:	4460      	add	r0, ip
10042650:	4a50      	ldr	r2, [pc, #320]	; (10042794 <__aeabi_dmul+0x4f8>)
10042652:	4290      	cmp	r0, r2
10042654:	dd00      	ble.n	10042658 <__aeabi_dmul+0x3bc>
10042656:	e6e3      	b.n	10042420 <__aeabi_dmul+0x184>
10042658:	2501      	movs	r5, #1
1004265a:	08db      	lsrs	r3, r3, #3
1004265c:	0762      	lsls	r2, r4, #29
1004265e:	431a      	orrs	r2, r3
10042660:	0264      	lsls	r4, r4, #9
10042662:	9b01      	ldr	r3, [sp, #4]
10042664:	4691      	mov	r9, r2
10042666:	0b22      	lsrs	r2, r4, #12
10042668:	0544      	lsls	r4, r0, #21
1004266a:	0d64      	lsrs	r4, r4, #21
1004266c:	401d      	ands	r5, r3
1004266e:	e67c      	b.n	1004236a <__aeabi_dmul+0xce>
10042670:	2280      	movs	r2, #128	; 0x80
10042672:	4659      	mov	r1, fp
10042674:	0312      	lsls	r2, r2, #12
10042676:	4211      	tst	r1, r2
10042678:	d008      	beq.n	1004268c <__aeabi_dmul+0x3f0>
1004267a:	4214      	tst	r4, r2
1004267c:	d106      	bne.n	1004268c <__aeabi_dmul+0x3f0>
1004267e:	4322      	orrs	r2, r4
10042680:	0312      	lsls	r2, r2, #12
10042682:	0b12      	lsrs	r2, r2, #12
10042684:	4645      	mov	r5, r8
10042686:	4699      	mov	r9, r3
10042688:	4c43      	ldr	r4, [pc, #268]	; (10042798 <__aeabi_dmul+0x4fc>)
1004268a:	e66e      	b.n	1004236a <__aeabi_dmul+0xce>
1004268c:	465b      	mov	r3, fp
1004268e:	431a      	orrs	r2, r3
10042690:	0312      	lsls	r2, r2, #12
10042692:	0b12      	lsrs	r2, r2, #12
10042694:	4c40      	ldr	r4, [pc, #256]	; (10042798 <__aeabi_dmul+0x4fc>)
10042696:	e668      	b.n	1004236a <__aeabi_dmul+0xce>
10042698:	0003      	movs	r3, r0
1004269a:	4654      	mov	r4, sl
1004269c:	3b28      	subs	r3, #40	; 0x28
1004269e:	409c      	lsls	r4, r3
100426a0:	2300      	movs	r3, #0
100426a2:	e6b9      	b.n	10042418 <__aeabi_dmul+0x17c>
100426a4:	f000 fd02 	bl	100430ac <__clzsi2>
100426a8:	3020      	adds	r0, #32
100426aa:	e6a6      	b.n	100423fa <__aeabi_dmul+0x15e>
100426ac:	0003      	movs	r3, r0
100426ae:	3b28      	subs	r3, #40	; 0x28
100426b0:	409f      	lsls	r7, r3
100426b2:	2300      	movs	r3, #0
100426b4:	46bb      	mov	fp, r7
100426b6:	4699      	mov	r9, r3
100426b8:	e68a      	b.n	100423d0 <__aeabi_dmul+0x134>
100426ba:	f000 fcf7 	bl	100430ac <__clzsi2>
100426be:	3020      	adds	r0, #32
100426c0:	e674      	b.n	100423ac <__aeabi_dmul+0x110>
100426c2:	46b4      	mov	ip, r6
100426c4:	e7ad      	b.n	10042622 <__aeabi_dmul+0x386>
100426c6:	2501      	movs	r5, #1
100426c8:	1a2a      	subs	r2, r5, r0
100426ca:	2a38      	cmp	r2, #56	; 0x38
100426cc:	dd06      	ble.n	100426dc <__aeabi_dmul+0x440>
100426ce:	9b01      	ldr	r3, [sp, #4]
100426d0:	2400      	movs	r4, #0
100426d2:	401d      	ands	r5, r3
100426d4:	2300      	movs	r3, #0
100426d6:	2200      	movs	r2, #0
100426d8:	4699      	mov	r9, r3
100426da:	e646      	b.n	1004236a <__aeabi_dmul+0xce>
100426dc:	2a1f      	cmp	r2, #31
100426de:	dc21      	bgt.n	10042724 <__aeabi_dmul+0x488>
100426e0:	2520      	movs	r5, #32
100426e2:	0020      	movs	r0, r4
100426e4:	1aad      	subs	r5, r5, r2
100426e6:	001e      	movs	r6, r3
100426e8:	40ab      	lsls	r3, r5
100426ea:	40a8      	lsls	r0, r5
100426ec:	40d6      	lsrs	r6, r2
100426ee:	1e5d      	subs	r5, r3, #1
100426f0:	41ab      	sbcs	r3, r5
100426f2:	4330      	orrs	r0, r6
100426f4:	4318      	orrs	r0, r3
100426f6:	40d4      	lsrs	r4, r2
100426f8:	0743      	lsls	r3, r0, #29
100426fa:	d009      	beq.n	10042710 <__aeabi_dmul+0x474>
100426fc:	230f      	movs	r3, #15
100426fe:	4003      	ands	r3, r0
10042700:	2b04      	cmp	r3, #4
10042702:	d005      	beq.n	10042710 <__aeabi_dmul+0x474>
10042704:	0003      	movs	r3, r0
10042706:	1d18      	adds	r0, r3, #4
10042708:	4298      	cmp	r0, r3
1004270a:	419b      	sbcs	r3, r3
1004270c:	425b      	negs	r3, r3
1004270e:	18e4      	adds	r4, r4, r3
10042710:	0223      	lsls	r3, r4, #8
10042712:	d521      	bpl.n	10042758 <__aeabi_dmul+0x4bc>
10042714:	2501      	movs	r5, #1
10042716:	9b01      	ldr	r3, [sp, #4]
10042718:	2401      	movs	r4, #1
1004271a:	401d      	ands	r5, r3
1004271c:	2300      	movs	r3, #0
1004271e:	2200      	movs	r2, #0
10042720:	4699      	mov	r9, r3
10042722:	e622      	b.n	1004236a <__aeabi_dmul+0xce>
10042724:	251f      	movs	r5, #31
10042726:	0021      	movs	r1, r4
10042728:	426d      	negs	r5, r5
1004272a:	1a28      	subs	r0, r5, r0
1004272c:	40c1      	lsrs	r1, r0
1004272e:	0008      	movs	r0, r1
10042730:	2a20      	cmp	r2, #32
10042732:	d01d      	beq.n	10042770 <__aeabi_dmul+0x4d4>
10042734:	355f      	adds	r5, #95	; 0x5f
10042736:	1aaa      	subs	r2, r5, r2
10042738:	4094      	lsls	r4, r2
1004273a:	4323      	orrs	r3, r4
1004273c:	1e5c      	subs	r4, r3, #1
1004273e:	41a3      	sbcs	r3, r4
10042740:	2507      	movs	r5, #7
10042742:	4303      	orrs	r3, r0
10042744:	401d      	ands	r5, r3
10042746:	2200      	movs	r2, #0
10042748:	2d00      	cmp	r5, #0
1004274a:	d009      	beq.n	10042760 <__aeabi_dmul+0x4c4>
1004274c:	220f      	movs	r2, #15
1004274e:	2400      	movs	r4, #0
10042750:	401a      	ands	r2, r3
10042752:	0018      	movs	r0, r3
10042754:	2a04      	cmp	r2, #4
10042756:	d1d6      	bne.n	10042706 <__aeabi_dmul+0x46a>
10042758:	0003      	movs	r3, r0
1004275a:	0765      	lsls	r5, r4, #29
1004275c:	0264      	lsls	r4, r4, #9
1004275e:	0b22      	lsrs	r2, r4, #12
10042760:	08db      	lsrs	r3, r3, #3
10042762:	432b      	orrs	r3, r5
10042764:	2501      	movs	r5, #1
10042766:	4699      	mov	r9, r3
10042768:	9b01      	ldr	r3, [sp, #4]
1004276a:	2400      	movs	r4, #0
1004276c:	401d      	ands	r5, r3
1004276e:	e5fc      	b.n	1004236a <__aeabi_dmul+0xce>
10042770:	2400      	movs	r4, #0
10042772:	e7e2      	b.n	1004273a <__aeabi_dmul+0x49e>
10042774:	2280      	movs	r2, #128	; 0x80
10042776:	2501      	movs	r5, #1
10042778:	0312      	lsls	r2, r2, #12
1004277a:	4322      	orrs	r2, r4
1004277c:	9901      	ldr	r1, [sp, #4]
1004277e:	0312      	lsls	r2, r2, #12
10042780:	0b12      	lsrs	r2, r2, #12
10042782:	400d      	ands	r5, r1
10042784:	4699      	mov	r9, r3
10042786:	4c04      	ldr	r4, [pc, #16]	; (10042798 <__aeabi_dmul+0x4fc>)
10042788:	e5ef      	b.n	1004236a <__aeabi_dmul+0xce>
1004278a:	46c0      	nop			; (mov r8, r8)
1004278c:	000003ff 	.word	0x000003ff
10042790:	feffffff 	.word	0xfeffffff
10042794:	000007fe 	.word	0x000007fe
10042798:	000007ff 	.word	0x000007ff

1004279c <__aeabi_dsub>:
1004279c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004279e:	4646      	mov	r6, r8
100427a0:	46d6      	mov	lr, sl
100427a2:	464f      	mov	r7, r9
100427a4:	030c      	lsls	r4, r1, #12
100427a6:	b5c0      	push	{r6, r7, lr}
100427a8:	0fcd      	lsrs	r5, r1, #31
100427aa:	004e      	lsls	r6, r1, #1
100427ac:	0a61      	lsrs	r1, r4, #9
100427ae:	0f44      	lsrs	r4, r0, #29
100427b0:	430c      	orrs	r4, r1
100427b2:	00c1      	lsls	r1, r0, #3
100427b4:	0058      	lsls	r0, r3, #1
100427b6:	0d40      	lsrs	r0, r0, #21
100427b8:	4684      	mov	ip, r0
100427ba:	468a      	mov	sl, r1
100427bc:	000f      	movs	r7, r1
100427be:	0319      	lsls	r1, r3, #12
100427c0:	0f50      	lsrs	r0, r2, #29
100427c2:	0a49      	lsrs	r1, r1, #9
100427c4:	4301      	orrs	r1, r0
100427c6:	48c6      	ldr	r0, [pc, #792]	; (10042ae0 <__aeabi_dsub+0x344>)
100427c8:	0d76      	lsrs	r6, r6, #21
100427ca:	46a8      	mov	r8, r5
100427cc:	0fdb      	lsrs	r3, r3, #31
100427ce:	00d2      	lsls	r2, r2, #3
100427d0:	4584      	cmp	ip, r0
100427d2:	d100      	bne.n	100427d6 <__aeabi_dsub+0x3a>
100427d4:	e0d8      	b.n	10042988 <__aeabi_dsub+0x1ec>
100427d6:	2001      	movs	r0, #1
100427d8:	4043      	eors	r3, r0
100427da:	42ab      	cmp	r3, r5
100427dc:	d100      	bne.n	100427e0 <__aeabi_dsub+0x44>
100427de:	e0a6      	b.n	1004292e <__aeabi_dsub+0x192>
100427e0:	4660      	mov	r0, ip
100427e2:	1a35      	subs	r5, r6, r0
100427e4:	2d00      	cmp	r5, #0
100427e6:	dc00      	bgt.n	100427ea <__aeabi_dsub+0x4e>
100427e8:	e105      	b.n	100429f6 <__aeabi_dsub+0x25a>
100427ea:	2800      	cmp	r0, #0
100427ec:	d110      	bne.n	10042810 <__aeabi_dsub+0x74>
100427ee:	000b      	movs	r3, r1
100427f0:	4313      	orrs	r3, r2
100427f2:	d100      	bne.n	100427f6 <__aeabi_dsub+0x5a>
100427f4:	e0d7      	b.n	100429a6 <__aeabi_dsub+0x20a>
100427f6:	1e6b      	subs	r3, r5, #1
100427f8:	2b00      	cmp	r3, #0
100427fa:	d000      	beq.n	100427fe <__aeabi_dsub+0x62>
100427fc:	e14b      	b.n	10042a96 <__aeabi_dsub+0x2fa>
100427fe:	4653      	mov	r3, sl
10042800:	1a9f      	subs	r7, r3, r2
10042802:	45ba      	cmp	sl, r7
10042804:	4180      	sbcs	r0, r0
10042806:	1a64      	subs	r4, r4, r1
10042808:	4240      	negs	r0, r0
1004280a:	1a24      	subs	r4, r4, r0
1004280c:	2601      	movs	r6, #1
1004280e:	e01e      	b.n	1004284e <__aeabi_dsub+0xb2>
10042810:	4bb3      	ldr	r3, [pc, #716]	; (10042ae0 <__aeabi_dsub+0x344>)
10042812:	429e      	cmp	r6, r3
10042814:	d048      	beq.n	100428a8 <__aeabi_dsub+0x10c>
10042816:	2380      	movs	r3, #128	; 0x80
10042818:	041b      	lsls	r3, r3, #16
1004281a:	4319      	orrs	r1, r3
1004281c:	2d38      	cmp	r5, #56	; 0x38
1004281e:	dd00      	ble.n	10042822 <__aeabi_dsub+0x86>
10042820:	e119      	b.n	10042a56 <__aeabi_dsub+0x2ba>
10042822:	2d1f      	cmp	r5, #31
10042824:	dd00      	ble.n	10042828 <__aeabi_dsub+0x8c>
10042826:	e14c      	b.n	10042ac2 <__aeabi_dsub+0x326>
10042828:	2320      	movs	r3, #32
1004282a:	000f      	movs	r7, r1
1004282c:	1b5b      	subs	r3, r3, r5
1004282e:	0010      	movs	r0, r2
10042830:	409a      	lsls	r2, r3
10042832:	409f      	lsls	r7, r3
10042834:	40e8      	lsrs	r0, r5
10042836:	1e53      	subs	r3, r2, #1
10042838:	419a      	sbcs	r2, r3
1004283a:	40e9      	lsrs	r1, r5
1004283c:	4307      	orrs	r7, r0
1004283e:	4317      	orrs	r7, r2
10042840:	4653      	mov	r3, sl
10042842:	1bdf      	subs	r7, r3, r7
10042844:	1a61      	subs	r1, r4, r1
10042846:	45ba      	cmp	sl, r7
10042848:	41a4      	sbcs	r4, r4
1004284a:	4264      	negs	r4, r4
1004284c:	1b0c      	subs	r4, r1, r4
1004284e:	0223      	lsls	r3, r4, #8
10042850:	d400      	bmi.n	10042854 <__aeabi_dsub+0xb8>
10042852:	e0c5      	b.n	100429e0 <__aeabi_dsub+0x244>
10042854:	0264      	lsls	r4, r4, #9
10042856:	0a65      	lsrs	r5, r4, #9
10042858:	2d00      	cmp	r5, #0
1004285a:	d100      	bne.n	1004285e <__aeabi_dsub+0xc2>
1004285c:	e0f6      	b.n	10042a4c <__aeabi_dsub+0x2b0>
1004285e:	0028      	movs	r0, r5
10042860:	f000 fc24 	bl	100430ac <__clzsi2>
10042864:	0003      	movs	r3, r0
10042866:	3b08      	subs	r3, #8
10042868:	2b1f      	cmp	r3, #31
1004286a:	dd00      	ble.n	1004286e <__aeabi_dsub+0xd2>
1004286c:	e0e9      	b.n	10042a42 <__aeabi_dsub+0x2a6>
1004286e:	2220      	movs	r2, #32
10042870:	003c      	movs	r4, r7
10042872:	1ad2      	subs	r2, r2, r3
10042874:	409d      	lsls	r5, r3
10042876:	40d4      	lsrs	r4, r2
10042878:	409f      	lsls	r7, r3
1004287a:	4325      	orrs	r5, r4
1004287c:	429e      	cmp	r6, r3
1004287e:	dd00      	ble.n	10042882 <__aeabi_dsub+0xe6>
10042880:	e0db      	b.n	10042a3a <__aeabi_dsub+0x29e>
10042882:	1b9e      	subs	r6, r3, r6
10042884:	1c73      	adds	r3, r6, #1
10042886:	2b1f      	cmp	r3, #31
10042888:	dd00      	ble.n	1004288c <__aeabi_dsub+0xf0>
1004288a:	e10a      	b.n	10042aa2 <__aeabi_dsub+0x306>
1004288c:	2220      	movs	r2, #32
1004288e:	0038      	movs	r0, r7
10042890:	1ad2      	subs	r2, r2, r3
10042892:	0029      	movs	r1, r5
10042894:	4097      	lsls	r7, r2
10042896:	002c      	movs	r4, r5
10042898:	4091      	lsls	r1, r2
1004289a:	40d8      	lsrs	r0, r3
1004289c:	1e7a      	subs	r2, r7, #1
1004289e:	4197      	sbcs	r7, r2
100428a0:	40dc      	lsrs	r4, r3
100428a2:	2600      	movs	r6, #0
100428a4:	4301      	orrs	r1, r0
100428a6:	430f      	orrs	r7, r1
100428a8:	077b      	lsls	r3, r7, #29
100428aa:	d009      	beq.n	100428c0 <__aeabi_dsub+0x124>
100428ac:	230f      	movs	r3, #15
100428ae:	403b      	ands	r3, r7
100428b0:	2b04      	cmp	r3, #4
100428b2:	d005      	beq.n	100428c0 <__aeabi_dsub+0x124>
100428b4:	1d3b      	adds	r3, r7, #4
100428b6:	42bb      	cmp	r3, r7
100428b8:	41bf      	sbcs	r7, r7
100428ba:	427f      	negs	r7, r7
100428bc:	19e4      	adds	r4, r4, r7
100428be:	001f      	movs	r7, r3
100428c0:	0223      	lsls	r3, r4, #8
100428c2:	d525      	bpl.n	10042910 <__aeabi_dsub+0x174>
100428c4:	4b86      	ldr	r3, [pc, #536]	; (10042ae0 <__aeabi_dsub+0x344>)
100428c6:	3601      	adds	r6, #1
100428c8:	429e      	cmp	r6, r3
100428ca:	d100      	bne.n	100428ce <__aeabi_dsub+0x132>
100428cc:	e0af      	b.n	10042a2e <__aeabi_dsub+0x292>
100428ce:	4b85      	ldr	r3, [pc, #532]	; (10042ae4 <__aeabi_dsub+0x348>)
100428d0:	2501      	movs	r5, #1
100428d2:	401c      	ands	r4, r3
100428d4:	4643      	mov	r3, r8
100428d6:	0762      	lsls	r2, r4, #29
100428d8:	08ff      	lsrs	r7, r7, #3
100428da:	0264      	lsls	r4, r4, #9
100428dc:	0576      	lsls	r6, r6, #21
100428de:	4317      	orrs	r7, r2
100428e0:	0b24      	lsrs	r4, r4, #12
100428e2:	0d76      	lsrs	r6, r6, #21
100428e4:	401d      	ands	r5, r3
100428e6:	2100      	movs	r1, #0
100428e8:	0324      	lsls	r4, r4, #12
100428ea:	0b23      	lsrs	r3, r4, #12
100428ec:	0d0c      	lsrs	r4, r1, #20
100428ee:	4a7e      	ldr	r2, [pc, #504]	; (10042ae8 <__aeabi_dsub+0x34c>)
100428f0:	0524      	lsls	r4, r4, #20
100428f2:	431c      	orrs	r4, r3
100428f4:	4014      	ands	r4, r2
100428f6:	0533      	lsls	r3, r6, #20
100428f8:	4323      	orrs	r3, r4
100428fa:	005b      	lsls	r3, r3, #1
100428fc:	07ed      	lsls	r5, r5, #31
100428fe:	085b      	lsrs	r3, r3, #1
10042900:	432b      	orrs	r3, r5
10042902:	0038      	movs	r0, r7
10042904:	0019      	movs	r1, r3
10042906:	bc1c      	pop	{r2, r3, r4}
10042908:	4690      	mov	r8, r2
1004290a:	4699      	mov	r9, r3
1004290c:	46a2      	mov	sl, r4
1004290e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10042910:	2501      	movs	r5, #1
10042912:	4643      	mov	r3, r8
10042914:	0762      	lsls	r2, r4, #29
10042916:	08ff      	lsrs	r7, r7, #3
10042918:	4317      	orrs	r7, r2
1004291a:	08e4      	lsrs	r4, r4, #3
1004291c:	401d      	ands	r5, r3
1004291e:	4b70      	ldr	r3, [pc, #448]	; (10042ae0 <__aeabi_dsub+0x344>)
10042920:	429e      	cmp	r6, r3
10042922:	d036      	beq.n	10042992 <__aeabi_dsub+0x1f6>
10042924:	0324      	lsls	r4, r4, #12
10042926:	0576      	lsls	r6, r6, #21
10042928:	0b24      	lsrs	r4, r4, #12
1004292a:	0d76      	lsrs	r6, r6, #21
1004292c:	e7db      	b.n	100428e6 <__aeabi_dsub+0x14a>
1004292e:	4663      	mov	r3, ip
10042930:	1af3      	subs	r3, r6, r3
10042932:	2b00      	cmp	r3, #0
10042934:	dc00      	bgt.n	10042938 <__aeabi_dsub+0x19c>
10042936:	e094      	b.n	10042a62 <__aeabi_dsub+0x2c6>
10042938:	4660      	mov	r0, ip
1004293a:	2800      	cmp	r0, #0
1004293c:	d035      	beq.n	100429aa <__aeabi_dsub+0x20e>
1004293e:	4868      	ldr	r0, [pc, #416]	; (10042ae0 <__aeabi_dsub+0x344>)
10042940:	4286      	cmp	r6, r0
10042942:	d0b1      	beq.n	100428a8 <__aeabi_dsub+0x10c>
10042944:	2780      	movs	r7, #128	; 0x80
10042946:	043f      	lsls	r7, r7, #16
10042948:	4339      	orrs	r1, r7
1004294a:	2b38      	cmp	r3, #56	; 0x38
1004294c:	dc00      	bgt.n	10042950 <__aeabi_dsub+0x1b4>
1004294e:	e0fd      	b.n	10042b4c <__aeabi_dsub+0x3b0>
10042950:	430a      	orrs	r2, r1
10042952:	0017      	movs	r7, r2
10042954:	2100      	movs	r1, #0
10042956:	1e7a      	subs	r2, r7, #1
10042958:	4197      	sbcs	r7, r2
1004295a:	4457      	add	r7, sl
1004295c:	4557      	cmp	r7, sl
1004295e:	4180      	sbcs	r0, r0
10042960:	1909      	adds	r1, r1, r4
10042962:	4244      	negs	r4, r0
10042964:	190c      	adds	r4, r1, r4
10042966:	0223      	lsls	r3, r4, #8
10042968:	d53a      	bpl.n	100429e0 <__aeabi_dsub+0x244>
1004296a:	4b5d      	ldr	r3, [pc, #372]	; (10042ae0 <__aeabi_dsub+0x344>)
1004296c:	3601      	adds	r6, #1
1004296e:	429e      	cmp	r6, r3
10042970:	d100      	bne.n	10042974 <__aeabi_dsub+0x1d8>
10042972:	e14b      	b.n	10042c0c <__aeabi_dsub+0x470>
10042974:	2201      	movs	r2, #1
10042976:	4b5b      	ldr	r3, [pc, #364]	; (10042ae4 <__aeabi_dsub+0x348>)
10042978:	401c      	ands	r4, r3
1004297a:	087b      	lsrs	r3, r7, #1
1004297c:	4017      	ands	r7, r2
1004297e:	431f      	orrs	r7, r3
10042980:	07e2      	lsls	r2, r4, #31
10042982:	4317      	orrs	r7, r2
10042984:	0864      	lsrs	r4, r4, #1
10042986:	e78f      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042988:	0008      	movs	r0, r1
1004298a:	4310      	orrs	r0, r2
1004298c:	d000      	beq.n	10042990 <__aeabi_dsub+0x1f4>
1004298e:	e724      	b.n	100427da <__aeabi_dsub+0x3e>
10042990:	e721      	b.n	100427d6 <__aeabi_dsub+0x3a>
10042992:	0023      	movs	r3, r4
10042994:	433b      	orrs	r3, r7
10042996:	d100      	bne.n	1004299a <__aeabi_dsub+0x1fe>
10042998:	e1b9      	b.n	10042d0e <__aeabi_dsub+0x572>
1004299a:	2280      	movs	r2, #128	; 0x80
1004299c:	0312      	lsls	r2, r2, #12
1004299e:	4314      	orrs	r4, r2
100429a0:	0324      	lsls	r4, r4, #12
100429a2:	0b24      	lsrs	r4, r4, #12
100429a4:	e79f      	b.n	100428e6 <__aeabi_dsub+0x14a>
100429a6:	002e      	movs	r6, r5
100429a8:	e77e      	b.n	100428a8 <__aeabi_dsub+0x10c>
100429aa:	0008      	movs	r0, r1
100429ac:	4310      	orrs	r0, r2
100429ae:	d100      	bne.n	100429b2 <__aeabi_dsub+0x216>
100429b0:	e0ca      	b.n	10042b48 <__aeabi_dsub+0x3ac>
100429b2:	1e58      	subs	r0, r3, #1
100429b4:	4684      	mov	ip, r0
100429b6:	2800      	cmp	r0, #0
100429b8:	d000      	beq.n	100429bc <__aeabi_dsub+0x220>
100429ba:	e0e7      	b.n	10042b8c <__aeabi_dsub+0x3f0>
100429bc:	4452      	add	r2, sl
100429be:	4552      	cmp	r2, sl
100429c0:	4180      	sbcs	r0, r0
100429c2:	1864      	adds	r4, r4, r1
100429c4:	4240      	negs	r0, r0
100429c6:	1824      	adds	r4, r4, r0
100429c8:	0017      	movs	r7, r2
100429ca:	2601      	movs	r6, #1
100429cc:	0223      	lsls	r3, r4, #8
100429ce:	d507      	bpl.n	100429e0 <__aeabi_dsub+0x244>
100429d0:	2602      	movs	r6, #2
100429d2:	e7cf      	b.n	10042974 <__aeabi_dsub+0x1d8>
100429d4:	4664      	mov	r4, ip
100429d6:	432c      	orrs	r4, r5
100429d8:	d100      	bne.n	100429dc <__aeabi_dsub+0x240>
100429da:	e1b3      	b.n	10042d44 <__aeabi_dsub+0x5a8>
100429dc:	002c      	movs	r4, r5
100429de:	4667      	mov	r7, ip
100429e0:	077b      	lsls	r3, r7, #29
100429e2:	d000      	beq.n	100429e6 <__aeabi_dsub+0x24a>
100429e4:	e762      	b.n	100428ac <__aeabi_dsub+0x110>
100429e6:	0763      	lsls	r3, r4, #29
100429e8:	08ff      	lsrs	r7, r7, #3
100429ea:	431f      	orrs	r7, r3
100429ec:	2501      	movs	r5, #1
100429ee:	4643      	mov	r3, r8
100429f0:	08e4      	lsrs	r4, r4, #3
100429f2:	401d      	ands	r5, r3
100429f4:	e793      	b.n	1004291e <__aeabi_dsub+0x182>
100429f6:	2d00      	cmp	r5, #0
100429f8:	d178      	bne.n	10042aec <__aeabi_dsub+0x350>
100429fa:	1c75      	adds	r5, r6, #1
100429fc:	056d      	lsls	r5, r5, #21
100429fe:	0d6d      	lsrs	r5, r5, #21
10042a00:	2d01      	cmp	r5, #1
10042a02:	dc00      	bgt.n	10042a06 <__aeabi_dsub+0x26a>
10042a04:	e0f2      	b.n	10042bec <__aeabi_dsub+0x450>
10042a06:	4650      	mov	r0, sl
10042a08:	1a80      	subs	r0, r0, r2
10042a0a:	4582      	cmp	sl, r0
10042a0c:	41bf      	sbcs	r7, r7
10042a0e:	1a65      	subs	r5, r4, r1
10042a10:	427f      	negs	r7, r7
10042a12:	1bed      	subs	r5, r5, r7
10042a14:	4684      	mov	ip, r0
10042a16:	0228      	lsls	r0, r5, #8
10042a18:	d400      	bmi.n	10042a1c <__aeabi_dsub+0x280>
10042a1a:	e08c      	b.n	10042b36 <__aeabi_dsub+0x39a>
10042a1c:	4650      	mov	r0, sl
10042a1e:	1a17      	subs	r7, r2, r0
10042a20:	42ba      	cmp	r2, r7
10042a22:	4192      	sbcs	r2, r2
10042a24:	1b0c      	subs	r4, r1, r4
10042a26:	4255      	negs	r5, r2
10042a28:	1b65      	subs	r5, r4, r5
10042a2a:	4698      	mov	r8, r3
10042a2c:	e714      	b.n	10042858 <__aeabi_dsub+0xbc>
10042a2e:	2501      	movs	r5, #1
10042a30:	4643      	mov	r3, r8
10042a32:	2400      	movs	r4, #0
10042a34:	401d      	ands	r5, r3
10042a36:	2700      	movs	r7, #0
10042a38:	e755      	b.n	100428e6 <__aeabi_dsub+0x14a>
10042a3a:	4c2a      	ldr	r4, [pc, #168]	; (10042ae4 <__aeabi_dsub+0x348>)
10042a3c:	1af6      	subs	r6, r6, r3
10042a3e:	402c      	ands	r4, r5
10042a40:	e732      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042a42:	003d      	movs	r5, r7
10042a44:	3828      	subs	r0, #40	; 0x28
10042a46:	4085      	lsls	r5, r0
10042a48:	2700      	movs	r7, #0
10042a4a:	e717      	b.n	1004287c <__aeabi_dsub+0xe0>
10042a4c:	0038      	movs	r0, r7
10042a4e:	f000 fb2d 	bl	100430ac <__clzsi2>
10042a52:	3020      	adds	r0, #32
10042a54:	e706      	b.n	10042864 <__aeabi_dsub+0xc8>
10042a56:	430a      	orrs	r2, r1
10042a58:	0017      	movs	r7, r2
10042a5a:	2100      	movs	r1, #0
10042a5c:	1e7a      	subs	r2, r7, #1
10042a5e:	4197      	sbcs	r7, r2
10042a60:	e6ee      	b.n	10042840 <__aeabi_dsub+0xa4>
10042a62:	2b00      	cmp	r3, #0
10042a64:	d000      	beq.n	10042a68 <__aeabi_dsub+0x2cc>
10042a66:	e0e5      	b.n	10042c34 <__aeabi_dsub+0x498>
10042a68:	1c73      	adds	r3, r6, #1
10042a6a:	469c      	mov	ip, r3
10042a6c:	055b      	lsls	r3, r3, #21
10042a6e:	0d5b      	lsrs	r3, r3, #21
10042a70:	2b01      	cmp	r3, #1
10042a72:	dc00      	bgt.n	10042a76 <__aeabi_dsub+0x2da>
10042a74:	e09f      	b.n	10042bb6 <__aeabi_dsub+0x41a>
10042a76:	4b1a      	ldr	r3, [pc, #104]	; (10042ae0 <__aeabi_dsub+0x344>)
10042a78:	459c      	cmp	ip, r3
10042a7a:	d100      	bne.n	10042a7e <__aeabi_dsub+0x2e2>
10042a7c:	e0c5      	b.n	10042c0a <__aeabi_dsub+0x46e>
10042a7e:	4452      	add	r2, sl
10042a80:	4552      	cmp	r2, sl
10042a82:	4180      	sbcs	r0, r0
10042a84:	1864      	adds	r4, r4, r1
10042a86:	4240      	negs	r0, r0
10042a88:	1824      	adds	r4, r4, r0
10042a8a:	07e7      	lsls	r7, r4, #31
10042a8c:	0852      	lsrs	r2, r2, #1
10042a8e:	4317      	orrs	r7, r2
10042a90:	0864      	lsrs	r4, r4, #1
10042a92:	4666      	mov	r6, ip
10042a94:	e708      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042a96:	4812      	ldr	r0, [pc, #72]	; (10042ae0 <__aeabi_dsub+0x344>)
10042a98:	4285      	cmp	r5, r0
10042a9a:	d100      	bne.n	10042a9e <__aeabi_dsub+0x302>
10042a9c:	e085      	b.n	10042baa <__aeabi_dsub+0x40e>
10042a9e:	001d      	movs	r5, r3
10042aa0:	e6bc      	b.n	1004281c <__aeabi_dsub+0x80>
10042aa2:	0029      	movs	r1, r5
10042aa4:	3e1f      	subs	r6, #31
10042aa6:	40f1      	lsrs	r1, r6
10042aa8:	2b20      	cmp	r3, #32
10042aaa:	d100      	bne.n	10042aae <__aeabi_dsub+0x312>
10042aac:	e07f      	b.n	10042bae <__aeabi_dsub+0x412>
10042aae:	2240      	movs	r2, #64	; 0x40
10042ab0:	1ad3      	subs	r3, r2, r3
10042ab2:	409d      	lsls	r5, r3
10042ab4:	432f      	orrs	r7, r5
10042ab6:	1e7d      	subs	r5, r7, #1
10042ab8:	41af      	sbcs	r7, r5
10042aba:	2400      	movs	r4, #0
10042abc:	430f      	orrs	r7, r1
10042abe:	2600      	movs	r6, #0
10042ac0:	e78e      	b.n	100429e0 <__aeabi_dsub+0x244>
10042ac2:	002b      	movs	r3, r5
10042ac4:	000f      	movs	r7, r1
10042ac6:	3b20      	subs	r3, #32
10042ac8:	40df      	lsrs	r7, r3
10042aca:	2d20      	cmp	r5, #32
10042acc:	d071      	beq.n	10042bb2 <__aeabi_dsub+0x416>
10042ace:	2340      	movs	r3, #64	; 0x40
10042ad0:	1b5d      	subs	r5, r3, r5
10042ad2:	40a9      	lsls	r1, r5
10042ad4:	430a      	orrs	r2, r1
10042ad6:	1e51      	subs	r1, r2, #1
10042ad8:	418a      	sbcs	r2, r1
10042ada:	2100      	movs	r1, #0
10042adc:	4317      	orrs	r7, r2
10042ade:	e6af      	b.n	10042840 <__aeabi_dsub+0xa4>
10042ae0:	000007ff 	.word	0x000007ff
10042ae4:	ff7fffff 	.word	0xff7fffff
10042ae8:	800fffff 	.word	0x800fffff
10042aec:	2e00      	cmp	r6, #0
10042aee:	d03e      	beq.n	10042b6e <__aeabi_dsub+0x3d2>
10042af0:	4eb3      	ldr	r6, [pc, #716]	; (10042dc0 <__aeabi_dsub+0x624>)
10042af2:	45b4      	cmp	ip, r6
10042af4:	d045      	beq.n	10042b82 <__aeabi_dsub+0x3e6>
10042af6:	2680      	movs	r6, #128	; 0x80
10042af8:	0436      	lsls	r6, r6, #16
10042afa:	426d      	negs	r5, r5
10042afc:	4334      	orrs	r4, r6
10042afe:	2d38      	cmp	r5, #56	; 0x38
10042b00:	dd00      	ble.n	10042b04 <__aeabi_dsub+0x368>
10042b02:	e0a8      	b.n	10042c56 <__aeabi_dsub+0x4ba>
10042b04:	2d1f      	cmp	r5, #31
10042b06:	dd00      	ble.n	10042b0a <__aeabi_dsub+0x36e>
10042b08:	e11f      	b.n	10042d4a <__aeabi_dsub+0x5ae>
10042b0a:	2620      	movs	r6, #32
10042b0c:	0027      	movs	r7, r4
10042b0e:	4650      	mov	r0, sl
10042b10:	1b76      	subs	r6, r6, r5
10042b12:	40b7      	lsls	r7, r6
10042b14:	40e8      	lsrs	r0, r5
10042b16:	4307      	orrs	r7, r0
10042b18:	4650      	mov	r0, sl
10042b1a:	40b0      	lsls	r0, r6
10042b1c:	1e46      	subs	r6, r0, #1
10042b1e:	41b0      	sbcs	r0, r6
10042b20:	40ec      	lsrs	r4, r5
10042b22:	4338      	orrs	r0, r7
10042b24:	1a17      	subs	r7, r2, r0
10042b26:	42ba      	cmp	r2, r7
10042b28:	4192      	sbcs	r2, r2
10042b2a:	1b0c      	subs	r4, r1, r4
10042b2c:	4252      	negs	r2, r2
10042b2e:	1aa4      	subs	r4, r4, r2
10042b30:	4666      	mov	r6, ip
10042b32:	4698      	mov	r8, r3
10042b34:	e68b      	b.n	1004284e <__aeabi_dsub+0xb2>
10042b36:	4664      	mov	r4, ip
10042b38:	4667      	mov	r7, ip
10042b3a:	432c      	orrs	r4, r5
10042b3c:	d000      	beq.n	10042b40 <__aeabi_dsub+0x3a4>
10042b3e:	e68b      	b.n	10042858 <__aeabi_dsub+0xbc>
10042b40:	2500      	movs	r5, #0
10042b42:	2600      	movs	r6, #0
10042b44:	2700      	movs	r7, #0
10042b46:	e6ea      	b.n	1004291e <__aeabi_dsub+0x182>
10042b48:	001e      	movs	r6, r3
10042b4a:	e6ad      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042b4c:	2b1f      	cmp	r3, #31
10042b4e:	dc60      	bgt.n	10042c12 <__aeabi_dsub+0x476>
10042b50:	2720      	movs	r7, #32
10042b52:	1af8      	subs	r0, r7, r3
10042b54:	000f      	movs	r7, r1
10042b56:	4684      	mov	ip, r0
10042b58:	4087      	lsls	r7, r0
10042b5a:	0010      	movs	r0, r2
10042b5c:	40d8      	lsrs	r0, r3
10042b5e:	4307      	orrs	r7, r0
10042b60:	4660      	mov	r0, ip
10042b62:	4082      	lsls	r2, r0
10042b64:	1e50      	subs	r0, r2, #1
10042b66:	4182      	sbcs	r2, r0
10042b68:	40d9      	lsrs	r1, r3
10042b6a:	4317      	orrs	r7, r2
10042b6c:	e6f5      	b.n	1004295a <__aeabi_dsub+0x1be>
10042b6e:	0026      	movs	r6, r4
10042b70:	4650      	mov	r0, sl
10042b72:	4306      	orrs	r6, r0
10042b74:	d005      	beq.n	10042b82 <__aeabi_dsub+0x3e6>
10042b76:	43ed      	mvns	r5, r5
10042b78:	2d00      	cmp	r5, #0
10042b7a:	d0d3      	beq.n	10042b24 <__aeabi_dsub+0x388>
10042b7c:	4e90      	ldr	r6, [pc, #576]	; (10042dc0 <__aeabi_dsub+0x624>)
10042b7e:	45b4      	cmp	ip, r6
10042b80:	d1bd      	bne.n	10042afe <__aeabi_dsub+0x362>
10042b82:	000c      	movs	r4, r1
10042b84:	0017      	movs	r7, r2
10042b86:	4666      	mov	r6, ip
10042b88:	4698      	mov	r8, r3
10042b8a:	e68d      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042b8c:	488c      	ldr	r0, [pc, #560]	; (10042dc0 <__aeabi_dsub+0x624>)
10042b8e:	4283      	cmp	r3, r0
10042b90:	d00b      	beq.n	10042baa <__aeabi_dsub+0x40e>
10042b92:	4663      	mov	r3, ip
10042b94:	e6d9      	b.n	1004294a <__aeabi_dsub+0x1ae>
10042b96:	2d00      	cmp	r5, #0
10042b98:	d000      	beq.n	10042b9c <__aeabi_dsub+0x400>
10042b9a:	e096      	b.n	10042cca <__aeabi_dsub+0x52e>
10042b9c:	0008      	movs	r0, r1
10042b9e:	4310      	orrs	r0, r2
10042ba0:	d100      	bne.n	10042ba4 <__aeabi_dsub+0x408>
10042ba2:	e0e2      	b.n	10042d6a <__aeabi_dsub+0x5ce>
10042ba4:	000c      	movs	r4, r1
10042ba6:	0017      	movs	r7, r2
10042ba8:	4698      	mov	r8, r3
10042baa:	4e85      	ldr	r6, [pc, #532]	; (10042dc0 <__aeabi_dsub+0x624>)
10042bac:	e67c      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042bae:	2500      	movs	r5, #0
10042bb0:	e780      	b.n	10042ab4 <__aeabi_dsub+0x318>
10042bb2:	2100      	movs	r1, #0
10042bb4:	e78e      	b.n	10042ad4 <__aeabi_dsub+0x338>
10042bb6:	0023      	movs	r3, r4
10042bb8:	4650      	mov	r0, sl
10042bba:	4303      	orrs	r3, r0
10042bbc:	2e00      	cmp	r6, #0
10042bbe:	d000      	beq.n	10042bc2 <__aeabi_dsub+0x426>
10042bc0:	e0a8      	b.n	10042d14 <__aeabi_dsub+0x578>
10042bc2:	2b00      	cmp	r3, #0
10042bc4:	d100      	bne.n	10042bc8 <__aeabi_dsub+0x42c>
10042bc6:	e0de      	b.n	10042d86 <__aeabi_dsub+0x5ea>
10042bc8:	000b      	movs	r3, r1
10042bca:	4313      	orrs	r3, r2
10042bcc:	d100      	bne.n	10042bd0 <__aeabi_dsub+0x434>
10042bce:	e66b      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042bd0:	4452      	add	r2, sl
10042bd2:	4552      	cmp	r2, sl
10042bd4:	4180      	sbcs	r0, r0
10042bd6:	1864      	adds	r4, r4, r1
10042bd8:	4240      	negs	r0, r0
10042bda:	1824      	adds	r4, r4, r0
10042bdc:	0017      	movs	r7, r2
10042bde:	0223      	lsls	r3, r4, #8
10042be0:	d400      	bmi.n	10042be4 <__aeabi_dsub+0x448>
10042be2:	e6fd      	b.n	100429e0 <__aeabi_dsub+0x244>
10042be4:	4b77      	ldr	r3, [pc, #476]	; (10042dc4 <__aeabi_dsub+0x628>)
10042be6:	4666      	mov	r6, ip
10042be8:	401c      	ands	r4, r3
10042bea:	e65d      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042bec:	0025      	movs	r5, r4
10042bee:	4650      	mov	r0, sl
10042bf0:	4305      	orrs	r5, r0
10042bf2:	2e00      	cmp	r6, #0
10042bf4:	d1cf      	bne.n	10042b96 <__aeabi_dsub+0x3fa>
10042bf6:	2d00      	cmp	r5, #0
10042bf8:	d14f      	bne.n	10042c9a <__aeabi_dsub+0x4fe>
10042bfa:	000c      	movs	r4, r1
10042bfc:	4314      	orrs	r4, r2
10042bfe:	d100      	bne.n	10042c02 <__aeabi_dsub+0x466>
10042c00:	e0a0      	b.n	10042d44 <__aeabi_dsub+0x5a8>
10042c02:	000c      	movs	r4, r1
10042c04:	0017      	movs	r7, r2
10042c06:	4698      	mov	r8, r3
10042c08:	e64e      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042c0a:	4666      	mov	r6, ip
10042c0c:	2400      	movs	r4, #0
10042c0e:	2700      	movs	r7, #0
10042c10:	e685      	b.n	1004291e <__aeabi_dsub+0x182>
10042c12:	001f      	movs	r7, r3
10042c14:	0008      	movs	r0, r1
10042c16:	3f20      	subs	r7, #32
10042c18:	40f8      	lsrs	r0, r7
10042c1a:	0007      	movs	r7, r0
10042c1c:	2b20      	cmp	r3, #32
10042c1e:	d100      	bne.n	10042c22 <__aeabi_dsub+0x486>
10042c20:	e08e      	b.n	10042d40 <__aeabi_dsub+0x5a4>
10042c22:	2040      	movs	r0, #64	; 0x40
10042c24:	1ac3      	subs	r3, r0, r3
10042c26:	4099      	lsls	r1, r3
10042c28:	430a      	orrs	r2, r1
10042c2a:	1e51      	subs	r1, r2, #1
10042c2c:	418a      	sbcs	r2, r1
10042c2e:	2100      	movs	r1, #0
10042c30:	4317      	orrs	r7, r2
10042c32:	e692      	b.n	1004295a <__aeabi_dsub+0x1be>
10042c34:	2e00      	cmp	r6, #0
10042c36:	d114      	bne.n	10042c62 <__aeabi_dsub+0x4c6>
10042c38:	0026      	movs	r6, r4
10042c3a:	4650      	mov	r0, sl
10042c3c:	4306      	orrs	r6, r0
10042c3e:	d062      	beq.n	10042d06 <__aeabi_dsub+0x56a>
10042c40:	43db      	mvns	r3, r3
10042c42:	2b00      	cmp	r3, #0
10042c44:	d15c      	bne.n	10042d00 <__aeabi_dsub+0x564>
10042c46:	1887      	adds	r7, r0, r2
10042c48:	4297      	cmp	r7, r2
10042c4a:	4192      	sbcs	r2, r2
10042c4c:	1864      	adds	r4, r4, r1
10042c4e:	4252      	negs	r2, r2
10042c50:	18a4      	adds	r4, r4, r2
10042c52:	4666      	mov	r6, ip
10042c54:	e687      	b.n	10042966 <__aeabi_dsub+0x1ca>
10042c56:	4650      	mov	r0, sl
10042c58:	4320      	orrs	r0, r4
10042c5a:	1e44      	subs	r4, r0, #1
10042c5c:	41a0      	sbcs	r0, r4
10042c5e:	2400      	movs	r4, #0
10042c60:	e760      	b.n	10042b24 <__aeabi_dsub+0x388>
10042c62:	4e57      	ldr	r6, [pc, #348]	; (10042dc0 <__aeabi_dsub+0x624>)
10042c64:	45b4      	cmp	ip, r6
10042c66:	d04e      	beq.n	10042d06 <__aeabi_dsub+0x56a>
10042c68:	2680      	movs	r6, #128	; 0x80
10042c6a:	0436      	lsls	r6, r6, #16
10042c6c:	425b      	negs	r3, r3
10042c6e:	4334      	orrs	r4, r6
10042c70:	2b38      	cmp	r3, #56	; 0x38
10042c72:	dd00      	ble.n	10042c76 <__aeabi_dsub+0x4da>
10042c74:	e07f      	b.n	10042d76 <__aeabi_dsub+0x5da>
10042c76:	2b1f      	cmp	r3, #31
10042c78:	dd00      	ble.n	10042c7c <__aeabi_dsub+0x4e0>
10042c7a:	e08b      	b.n	10042d94 <__aeabi_dsub+0x5f8>
10042c7c:	2620      	movs	r6, #32
10042c7e:	0027      	movs	r7, r4
10042c80:	4650      	mov	r0, sl
10042c82:	1af6      	subs	r6, r6, r3
10042c84:	40b7      	lsls	r7, r6
10042c86:	40d8      	lsrs	r0, r3
10042c88:	4307      	orrs	r7, r0
10042c8a:	4650      	mov	r0, sl
10042c8c:	40b0      	lsls	r0, r6
10042c8e:	1e46      	subs	r6, r0, #1
10042c90:	41b0      	sbcs	r0, r6
10042c92:	4307      	orrs	r7, r0
10042c94:	40dc      	lsrs	r4, r3
10042c96:	18bf      	adds	r7, r7, r2
10042c98:	e7d6      	b.n	10042c48 <__aeabi_dsub+0x4ac>
10042c9a:	000d      	movs	r5, r1
10042c9c:	4315      	orrs	r5, r2
10042c9e:	d100      	bne.n	10042ca2 <__aeabi_dsub+0x506>
10042ca0:	e602      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042ca2:	4650      	mov	r0, sl
10042ca4:	1a80      	subs	r0, r0, r2
10042ca6:	4582      	cmp	sl, r0
10042ca8:	41bf      	sbcs	r7, r7
10042caa:	1a65      	subs	r5, r4, r1
10042cac:	427f      	negs	r7, r7
10042cae:	1bed      	subs	r5, r5, r7
10042cb0:	4684      	mov	ip, r0
10042cb2:	0228      	lsls	r0, r5, #8
10042cb4:	d400      	bmi.n	10042cb8 <__aeabi_dsub+0x51c>
10042cb6:	e68d      	b.n	100429d4 <__aeabi_dsub+0x238>
10042cb8:	4650      	mov	r0, sl
10042cba:	1a17      	subs	r7, r2, r0
10042cbc:	42ba      	cmp	r2, r7
10042cbe:	4192      	sbcs	r2, r2
10042cc0:	1b0c      	subs	r4, r1, r4
10042cc2:	4252      	negs	r2, r2
10042cc4:	1aa4      	subs	r4, r4, r2
10042cc6:	4698      	mov	r8, r3
10042cc8:	e5ee      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042cca:	000d      	movs	r5, r1
10042ccc:	4315      	orrs	r5, r2
10042cce:	d100      	bne.n	10042cd2 <__aeabi_dsub+0x536>
10042cd0:	e76b      	b.n	10042baa <__aeabi_dsub+0x40e>
10042cd2:	4650      	mov	r0, sl
10042cd4:	0767      	lsls	r7, r4, #29
10042cd6:	08c0      	lsrs	r0, r0, #3
10042cd8:	4307      	orrs	r7, r0
10042cda:	2080      	movs	r0, #128	; 0x80
10042cdc:	08e4      	lsrs	r4, r4, #3
10042cde:	0300      	lsls	r0, r0, #12
10042ce0:	4204      	tst	r4, r0
10042ce2:	d007      	beq.n	10042cf4 <__aeabi_dsub+0x558>
10042ce4:	08cd      	lsrs	r5, r1, #3
10042ce6:	4205      	tst	r5, r0
10042ce8:	d104      	bne.n	10042cf4 <__aeabi_dsub+0x558>
10042cea:	002c      	movs	r4, r5
10042cec:	4698      	mov	r8, r3
10042cee:	08d7      	lsrs	r7, r2, #3
10042cf0:	0749      	lsls	r1, r1, #29
10042cf2:	430f      	orrs	r7, r1
10042cf4:	0f7b      	lsrs	r3, r7, #29
10042cf6:	00e4      	lsls	r4, r4, #3
10042cf8:	431c      	orrs	r4, r3
10042cfa:	00ff      	lsls	r7, r7, #3
10042cfc:	4e30      	ldr	r6, [pc, #192]	; (10042dc0 <__aeabi_dsub+0x624>)
10042cfe:	e5d3      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042d00:	4e2f      	ldr	r6, [pc, #188]	; (10042dc0 <__aeabi_dsub+0x624>)
10042d02:	45b4      	cmp	ip, r6
10042d04:	d1b4      	bne.n	10042c70 <__aeabi_dsub+0x4d4>
10042d06:	000c      	movs	r4, r1
10042d08:	0017      	movs	r7, r2
10042d0a:	4666      	mov	r6, ip
10042d0c:	e5cc      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042d0e:	2700      	movs	r7, #0
10042d10:	2400      	movs	r4, #0
10042d12:	e5e8      	b.n	100428e6 <__aeabi_dsub+0x14a>
10042d14:	2b00      	cmp	r3, #0
10042d16:	d039      	beq.n	10042d8c <__aeabi_dsub+0x5f0>
10042d18:	000b      	movs	r3, r1
10042d1a:	4313      	orrs	r3, r2
10042d1c:	d100      	bne.n	10042d20 <__aeabi_dsub+0x584>
10042d1e:	e744      	b.n	10042baa <__aeabi_dsub+0x40e>
10042d20:	08c0      	lsrs	r0, r0, #3
10042d22:	0767      	lsls	r7, r4, #29
10042d24:	4307      	orrs	r7, r0
10042d26:	2080      	movs	r0, #128	; 0x80
10042d28:	08e4      	lsrs	r4, r4, #3
10042d2a:	0300      	lsls	r0, r0, #12
10042d2c:	4204      	tst	r4, r0
10042d2e:	d0e1      	beq.n	10042cf4 <__aeabi_dsub+0x558>
10042d30:	08cb      	lsrs	r3, r1, #3
10042d32:	4203      	tst	r3, r0
10042d34:	d1de      	bne.n	10042cf4 <__aeabi_dsub+0x558>
10042d36:	08d7      	lsrs	r7, r2, #3
10042d38:	0749      	lsls	r1, r1, #29
10042d3a:	430f      	orrs	r7, r1
10042d3c:	001c      	movs	r4, r3
10042d3e:	e7d9      	b.n	10042cf4 <__aeabi_dsub+0x558>
10042d40:	2100      	movs	r1, #0
10042d42:	e771      	b.n	10042c28 <__aeabi_dsub+0x48c>
10042d44:	2500      	movs	r5, #0
10042d46:	2700      	movs	r7, #0
10042d48:	e5e9      	b.n	1004291e <__aeabi_dsub+0x182>
10042d4a:	002e      	movs	r6, r5
10042d4c:	0027      	movs	r7, r4
10042d4e:	3e20      	subs	r6, #32
10042d50:	40f7      	lsrs	r7, r6
10042d52:	2d20      	cmp	r5, #32
10042d54:	d02f      	beq.n	10042db6 <__aeabi_dsub+0x61a>
10042d56:	2640      	movs	r6, #64	; 0x40
10042d58:	1b75      	subs	r5, r6, r5
10042d5a:	40ac      	lsls	r4, r5
10042d5c:	4650      	mov	r0, sl
10042d5e:	4320      	orrs	r0, r4
10042d60:	1e44      	subs	r4, r0, #1
10042d62:	41a0      	sbcs	r0, r4
10042d64:	2400      	movs	r4, #0
10042d66:	4338      	orrs	r0, r7
10042d68:	e6dc      	b.n	10042b24 <__aeabi_dsub+0x388>
10042d6a:	2480      	movs	r4, #128	; 0x80
10042d6c:	2500      	movs	r5, #0
10042d6e:	0324      	lsls	r4, r4, #12
10042d70:	4e13      	ldr	r6, [pc, #76]	; (10042dc0 <__aeabi_dsub+0x624>)
10042d72:	2700      	movs	r7, #0
10042d74:	e5d3      	b.n	1004291e <__aeabi_dsub+0x182>
10042d76:	4650      	mov	r0, sl
10042d78:	4320      	orrs	r0, r4
10042d7a:	0007      	movs	r7, r0
10042d7c:	1e78      	subs	r0, r7, #1
10042d7e:	4187      	sbcs	r7, r0
10042d80:	2400      	movs	r4, #0
10042d82:	18bf      	adds	r7, r7, r2
10042d84:	e760      	b.n	10042c48 <__aeabi_dsub+0x4ac>
10042d86:	000c      	movs	r4, r1
10042d88:	0017      	movs	r7, r2
10042d8a:	e58d      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042d8c:	000c      	movs	r4, r1
10042d8e:	0017      	movs	r7, r2
10042d90:	4e0b      	ldr	r6, [pc, #44]	; (10042dc0 <__aeabi_dsub+0x624>)
10042d92:	e589      	b.n	100428a8 <__aeabi_dsub+0x10c>
10042d94:	001e      	movs	r6, r3
10042d96:	0027      	movs	r7, r4
10042d98:	3e20      	subs	r6, #32
10042d9a:	40f7      	lsrs	r7, r6
10042d9c:	2b20      	cmp	r3, #32
10042d9e:	d00c      	beq.n	10042dba <__aeabi_dsub+0x61e>
10042da0:	2640      	movs	r6, #64	; 0x40
10042da2:	1af3      	subs	r3, r6, r3
10042da4:	409c      	lsls	r4, r3
10042da6:	4650      	mov	r0, sl
10042da8:	4320      	orrs	r0, r4
10042daa:	1e44      	subs	r4, r0, #1
10042dac:	41a0      	sbcs	r0, r4
10042dae:	4307      	orrs	r7, r0
10042db0:	2400      	movs	r4, #0
10042db2:	18bf      	adds	r7, r7, r2
10042db4:	e748      	b.n	10042c48 <__aeabi_dsub+0x4ac>
10042db6:	2400      	movs	r4, #0
10042db8:	e7d0      	b.n	10042d5c <__aeabi_dsub+0x5c0>
10042dba:	2400      	movs	r4, #0
10042dbc:	e7f3      	b.n	10042da6 <__aeabi_dsub+0x60a>
10042dbe:	46c0      	nop			; (mov r8, r8)
10042dc0:	000007ff 	.word	0x000007ff
10042dc4:	ff7fffff 	.word	0xff7fffff

10042dc8 <__aeabi_dcmpun>:
10042dc8:	b570      	push	{r4, r5, r6, lr}
10042dca:	4e0e      	ldr	r6, [pc, #56]	; (10042e04 <__aeabi_dcmpun+0x3c>)
10042dcc:	030d      	lsls	r5, r1, #12
10042dce:	031c      	lsls	r4, r3, #12
10042dd0:	0049      	lsls	r1, r1, #1
10042dd2:	005b      	lsls	r3, r3, #1
10042dd4:	0b2d      	lsrs	r5, r5, #12
10042dd6:	0d49      	lsrs	r1, r1, #21
10042dd8:	0b24      	lsrs	r4, r4, #12
10042dda:	0d5b      	lsrs	r3, r3, #21
10042ddc:	42b1      	cmp	r1, r6
10042dde:	d004      	beq.n	10042dea <__aeabi_dcmpun+0x22>
10042de0:	4908      	ldr	r1, [pc, #32]	; (10042e04 <__aeabi_dcmpun+0x3c>)
10042de2:	2000      	movs	r0, #0
10042de4:	428b      	cmp	r3, r1
10042de6:	d008      	beq.n	10042dfa <__aeabi_dcmpun+0x32>
10042de8:	bd70      	pop	{r4, r5, r6, pc}
10042dea:	4305      	orrs	r5, r0
10042dec:	2001      	movs	r0, #1
10042dee:	2d00      	cmp	r5, #0
10042df0:	d1fa      	bne.n	10042de8 <__aeabi_dcmpun+0x20>
10042df2:	4904      	ldr	r1, [pc, #16]	; (10042e04 <__aeabi_dcmpun+0x3c>)
10042df4:	2000      	movs	r0, #0
10042df6:	428b      	cmp	r3, r1
10042df8:	d1f6      	bne.n	10042de8 <__aeabi_dcmpun+0x20>
10042dfa:	4314      	orrs	r4, r2
10042dfc:	0020      	movs	r0, r4
10042dfe:	1e44      	subs	r4, r0, #1
10042e00:	41a0      	sbcs	r0, r4
10042e02:	e7f1      	b.n	10042de8 <__aeabi_dcmpun+0x20>
10042e04:	000007ff 	.word	0x000007ff

10042e08 <__aeabi_d2iz>:
10042e08:	b530      	push	{r4, r5, lr}
10042e0a:	4d13      	ldr	r5, [pc, #76]	; (10042e58 <__aeabi_d2iz+0x50>)
10042e0c:	030a      	lsls	r2, r1, #12
10042e0e:	004b      	lsls	r3, r1, #1
10042e10:	0b12      	lsrs	r2, r2, #12
10042e12:	0d5b      	lsrs	r3, r3, #21
10042e14:	0fc9      	lsrs	r1, r1, #31
10042e16:	2400      	movs	r4, #0
10042e18:	42ab      	cmp	r3, r5
10042e1a:	dd10      	ble.n	10042e3e <__aeabi_d2iz+0x36>
10042e1c:	4c0f      	ldr	r4, [pc, #60]	; (10042e5c <__aeabi_d2iz+0x54>)
10042e1e:	42a3      	cmp	r3, r4
10042e20:	dc0f      	bgt.n	10042e42 <__aeabi_d2iz+0x3a>
10042e22:	2480      	movs	r4, #128	; 0x80
10042e24:	4d0e      	ldr	r5, [pc, #56]	; (10042e60 <__aeabi_d2iz+0x58>)
10042e26:	0364      	lsls	r4, r4, #13
10042e28:	4322      	orrs	r2, r4
10042e2a:	1aed      	subs	r5, r5, r3
10042e2c:	2d1f      	cmp	r5, #31
10042e2e:	dd0b      	ble.n	10042e48 <__aeabi_d2iz+0x40>
10042e30:	480c      	ldr	r0, [pc, #48]	; (10042e64 <__aeabi_d2iz+0x5c>)
10042e32:	1ac3      	subs	r3, r0, r3
10042e34:	40da      	lsrs	r2, r3
10042e36:	4254      	negs	r4, r2
10042e38:	2900      	cmp	r1, #0
10042e3a:	d100      	bne.n	10042e3e <__aeabi_d2iz+0x36>
10042e3c:	0014      	movs	r4, r2
10042e3e:	0020      	movs	r0, r4
10042e40:	bd30      	pop	{r4, r5, pc}
10042e42:	4b09      	ldr	r3, [pc, #36]	; (10042e68 <__aeabi_d2iz+0x60>)
10042e44:	18cc      	adds	r4, r1, r3
10042e46:	e7fa      	b.n	10042e3e <__aeabi_d2iz+0x36>
10042e48:	4c08      	ldr	r4, [pc, #32]	; (10042e6c <__aeabi_d2iz+0x64>)
10042e4a:	40e8      	lsrs	r0, r5
10042e4c:	46a4      	mov	ip, r4
10042e4e:	4463      	add	r3, ip
10042e50:	409a      	lsls	r2, r3
10042e52:	4302      	orrs	r2, r0
10042e54:	e7ef      	b.n	10042e36 <__aeabi_d2iz+0x2e>
10042e56:	46c0      	nop			; (mov r8, r8)
10042e58:	000003fe 	.word	0x000003fe
10042e5c:	0000041d 	.word	0x0000041d
10042e60:	00000433 	.word	0x00000433
10042e64:	00000413 	.word	0x00000413
10042e68:	7fffffff 	.word	0x7fffffff
10042e6c:	fffffbed 	.word	0xfffffbed

10042e70 <__aeabi_i2d>:
10042e70:	b570      	push	{r4, r5, r6, lr}
10042e72:	2800      	cmp	r0, #0
10042e74:	d030      	beq.n	10042ed8 <__aeabi_i2d+0x68>
10042e76:	17c3      	asrs	r3, r0, #31
10042e78:	18c4      	adds	r4, r0, r3
10042e7a:	405c      	eors	r4, r3
10042e7c:	0fc5      	lsrs	r5, r0, #31
10042e7e:	0020      	movs	r0, r4
10042e80:	f000 f914 	bl	100430ac <__clzsi2>
10042e84:	4b17      	ldr	r3, [pc, #92]	; (10042ee4 <__aeabi_i2d+0x74>)
10042e86:	4a18      	ldr	r2, [pc, #96]	; (10042ee8 <__aeabi_i2d+0x78>)
10042e88:	1a1b      	subs	r3, r3, r0
10042e8a:	1ad2      	subs	r2, r2, r3
10042e8c:	2a1f      	cmp	r2, #31
10042e8e:	dd18      	ble.n	10042ec2 <__aeabi_i2d+0x52>
10042e90:	4a16      	ldr	r2, [pc, #88]	; (10042eec <__aeabi_i2d+0x7c>)
10042e92:	1ad2      	subs	r2, r2, r3
10042e94:	4094      	lsls	r4, r2
10042e96:	2200      	movs	r2, #0
10042e98:	0324      	lsls	r4, r4, #12
10042e9a:	055b      	lsls	r3, r3, #21
10042e9c:	0b24      	lsrs	r4, r4, #12
10042e9e:	0d5b      	lsrs	r3, r3, #21
10042ea0:	2100      	movs	r1, #0
10042ea2:	0010      	movs	r0, r2
10042ea4:	0324      	lsls	r4, r4, #12
10042ea6:	0d0a      	lsrs	r2, r1, #20
10042ea8:	0b24      	lsrs	r4, r4, #12
10042eaa:	0512      	lsls	r2, r2, #20
10042eac:	4322      	orrs	r2, r4
10042eae:	4c10      	ldr	r4, [pc, #64]	; (10042ef0 <__aeabi_i2d+0x80>)
10042eb0:	051b      	lsls	r3, r3, #20
10042eb2:	4022      	ands	r2, r4
10042eb4:	4313      	orrs	r3, r2
10042eb6:	005b      	lsls	r3, r3, #1
10042eb8:	07ed      	lsls	r5, r5, #31
10042eba:	085b      	lsrs	r3, r3, #1
10042ebc:	432b      	orrs	r3, r5
10042ebe:	0019      	movs	r1, r3
10042ec0:	bd70      	pop	{r4, r5, r6, pc}
10042ec2:	0021      	movs	r1, r4
10042ec4:	4091      	lsls	r1, r2
10042ec6:	000a      	movs	r2, r1
10042ec8:	210b      	movs	r1, #11
10042eca:	1a08      	subs	r0, r1, r0
10042ecc:	40c4      	lsrs	r4, r0
10042ece:	055b      	lsls	r3, r3, #21
10042ed0:	0324      	lsls	r4, r4, #12
10042ed2:	0b24      	lsrs	r4, r4, #12
10042ed4:	0d5b      	lsrs	r3, r3, #21
10042ed6:	e7e3      	b.n	10042ea0 <__aeabi_i2d+0x30>
10042ed8:	2500      	movs	r5, #0
10042eda:	2300      	movs	r3, #0
10042edc:	2400      	movs	r4, #0
10042ede:	2200      	movs	r2, #0
10042ee0:	e7de      	b.n	10042ea0 <__aeabi_i2d+0x30>
10042ee2:	46c0      	nop			; (mov r8, r8)
10042ee4:	0000041e 	.word	0x0000041e
10042ee8:	00000433 	.word	0x00000433
10042eec:	00000413 	.word	0x00000413
10042ef0:	800fffff 	.word	0x800fffff

10042ef4 <__aeabi_f2d>:
10042ef4:	0041      	lsls	r1, r0, #1
10042ef6:	0e09      	lsrs	r1, r1, #24
10042ef8:	1c4b      	adds	r3, r1, #1
10042efa:	b570      	push	{r4, r5, r6, lr}
10042efc:	b2db      	uxtb	r3, r3
10042efe:	0246      	lsls	r6, r0, #9
10042f00:	0a75      	lsrs	r5, r6, #9
10042f02:	0fc4      	lsrs	r4, r0, #31
10042f04:	2b01      	cmp	r3, #1
10042f06:	dd14      	ble.n	10042f32 <__aeabi_f2d+0x3e>
10042f08:	23e0      	movs	r3, #224	; 0xe0
10042f0a:	009b      	lsls	r3, r3, #2
10042f0c:	076d      	lsls	r5, r5, #29
10042f0e:	0b36      	lsrs	r6, r6, #12
10042f10:	18cb      	adds	r3, r1, r3
10042f12:	2100      	movs	r1, #0
10042f14:	0d0a      	lsrs	r2, r1, #20
10042f16:	0028      	movs	r0, r5
10042f18:	0512      	lsls	r2, r2, #20
10042f1a:	4d1c      	ldr	r5, [pc, #112]	; (10042f8c <__aeabi_f2d+0x98>)
10042f1c:	4332      	orrs	r2, r6
10042f1e:	055b      	lsls	r3, r3, #21
10042f20:	402a      	ands	r2, r5
10042f22:	085b      	lsrs	r3, r3, #1
10042f24:	4313      	orrs	r3, r2
10042f26:	005b      	lsls	r3, r3, #1
10042f28:	07e4      	lsls	r4, r4, #31
10042f2a:	085b      	lsrs	r3, r3, #1
10042f2c:	4323      	orrs	r3, r4
10042f2e:	0019      	movs	r1, r3
10042f30:	bd70      	pop	{r4, r5, r6, pc}
10042f32:	2900      	cmp	r1, #0
10042f34:	d114      	bne.n	10042f60 <__aeabi_f2d+0x6c>
10042f36:	2d00      	cmp	r5, #0
10042f38:	d01e      	beq.n	10042f78 <__aeabi_f2d+0x84>
10042f3a:	0028      	movs	r0, r5
10042f3c:	f000 f8b6 	bl	100430ac <__clzsi2>
10042f40:	280a      	cmp	r0, #10
10042f42:	dc1c      	bgt.n	10042f7e <__aeabi_f2d+0x8a>
10042f44:	230b      	movs	r3, #11
10042f46:	002a      	movs	r2, r5
10042f48:	1a1b      	subs	r3, r3, r0
10042f4a:	40da      	lsrs	r2, r3
10042f4c:	0003      	movs	r3, r0
10042f4e:	3315      	adds	r3, #21
10042f50:	409d      	lsls	r5, r3
10042f52:	4b0f      	ldr	r3, [pc, #60]	; (10042f90 <__aeabi_f2d+0x9c>)
10042f54:	0312      	lsls	r2, r2, #12
10042f56:	1a1b      	subs	r3, r3, r0
10042f58:	055b      	lsls	r3, r3, #21
10042f5a:	0b16      	lsrs	r6, r2, #12
10042f5c:	0d5b      	lsrs	r3, r3, #21
10042f5e:	e7d8      	b.n	10042f12 <__aeabi_f2d+0x1e>
10042f60:	2d00      	cmp	r5, #0
10042f62:	d006      	beq.n	10042f72 <__aeabi_f2d+0x7e>
10042f64:	0b32      	lsrs	r2, r6, #12
10042f66:	2680      	movs	r6, #128	; 0x80
10042f68:	0336      	lsls	r6, r6, #12
10042f6a:	076d      	lsls	r5, r5, #29
10042f6c:	4316      	orrs	r6, r2
10042f6e:	4b09      	ldr	r3, [pc, #36]	; (10042f94 <__aeabi_f2d+0xa0>)
10042f70:	e7cf      	b.n	10042f12 <__aeabi_f2d+0x1e>
10042f72:	4b08      	ldr	r3, [pc, #32]	; (10042f94 <__aeabi_f2d+0xa0>)
10042f74:	2600      	movs	r6, #0
10042f76:	e7cc      	b.n	10042f12 <__aeabi_f2d+0x1e>
10042f78:	2300      	movs	r3, #0
10042f7a:	2600      	movs	r6, #0
10042f7c:	e7c9      	b.n	10042f12 <__aeabi_f2d+0x1e>
10042f7e:	0003      	movs	r3, r0
10042f80:	002a      	movs	r2, r5
10042f82:	3b0b      	subs	r3, #11
10042f84:	409a      	lsls	r2, r3
10042f86:	2500      	movs	r5, #0
10042f88:	e7e3      	b.n	10042f52 <__aeabi_f2d+0x5e>
10042f8a:	46c0      	nop			; (mov r8, r8)
10042f8c:	800fffff 	.word	0x800fffff
10042f90:	00000389 	.word	0x00000389
10042f94:	000007ff 	.word	0x000007ff

10042f98 <__aeabi_d2f>:
10042f98:	b5f0      	push	{r4, r5, r6, r7, lr}
10042f9a:	004c      	lsls	r4, r1, #1
10042f9c:	0d64      	lsrs	r4, r4, #21
10042f9e:	030b      	lsls	r3, r1, #12
10042fa0:	1c62      	adds	r2, r4, #1
10042fa2:	0f45      	lsrs	r5, r0, #29
10042fa4:	0a5b      	lsrs	r3, r3, #9
10042fa6:	0552      	lsls	r2, r2, #21
10042fa8:	432b      	orrs	r3, r5
10042faa:	0fc9      	lsrs	r1, r1, #31
10042fac:	00c5      	lsls	r5, r0, #3
10042fae:	0d52      	lsrs	r2, r2, #21
10042fb0:	2a01      	cmp	r2, #1
10042fb2:	dd28      	ble.n	10043006 <__aeabi_d2f+0x6e>
10042fb4:	4a3a      	ldr	r2, [pc, #232]	; (100430a0 <__aeabi_d2f+0x108>)
10042fb6:	18a6      	adds	r6, r4, r2
10042fb8:	2efe      	cmp	r6, #254	; 0xfe
10042fba:	dc1b      	bgt.n	10042ff4 <__aeabi_d2f+0x5c>
10042fbc:	2e00      	cmp	r6, #0
10042fbe:	dd3e      	ble.n	1004303e <__aeabi_d2f+0xa6>
10042fc0:	0180      	lsls	r0, r0, #6
10042fc2:	0002      	movs	r2, r0
10042fc4:	1e50      	subs	r0, r2, #1
10042fc6:	4182      	sbcs	r2, r0
10042fc8:	0f6d      	lsrs	r5, r5, #29
10042fca:	432a      	orrs	r2, r5
10042fcc:	00db      	lsls	r3, r3, #3
10042fce:	4313      	orrs	r3, r2
10042fd0:	075a      	lsls	r2, r3, #29
10042fd2:	d004      	beq.n	10042fde <__aeabi_d2f+0x46>
10042fd4:	220f      	movs	r2, #15
10042fd6:	401a      	ands	r2, r3
10042fd8:	2a04      	cmp	r2, #4
10042fda:	d000      	beq.n	10042fde <__aeabi_d2f+0x46>
10042fdc:	3304      	adds	r3, #4
10042fde:	2280      	movs	r2, #128	; 0x80
10042fe0:	04d2      	lsls	r2, r2, #19
10042fe2:	401a      	ands	r2, r3
10042fe4:	d05a      	beq.n	1004309c <__aeabi_d2f+0x104>
10042fe6:	3601      	adds	r6, #1
10042fe8:	2eff      	cmp	r6, #255	; 0xff
10042fea:	d003      	beq.n	10042ff4 <__aeabi_d2f+0x5c>
10042fec:	019b      	lsls	r3, r3, #6
10042fee:	0a5b      	lsrs	r3, r3, #9
10042ff0:	b2f4      	uxtb	r4, r6
10042ff2:	e001      	b.n	10042ff8 <__aeabi_d2f+0x60>
10042ff4:	24ff      	movs	r4, #255	; 0xff
10042ff6:	2300      	movs	r3, #0
10042ff8:	0258      	lsls	r0, r3, #9
10042ffa:	05e4      	lsls	r4, r4, #23
10042ffc:	0a40      	lsrs	r0, r0, #9
10042ffe:	07c9      	lsls	r1, r1, #31
10043000:	4320      	orrs	r0, r4
10043002:	4308      	orrs	r0, r1
10043004:	bdf0      	pop	{r4, r5, r6, r7, pc}
10043006:	2c00      	cmp	r4, #0
10043008:	d007      	beq.n	1004301a <__aeabi_d2f+0x82>
1004300a:	431d      	orrs	r5, r3
1004300c:	d0f2      	beq.n	10042ff4 <__aeabi_d2f+0x5c>
1004300e:	2080      	movs	r0, #128	; 0x80
10043010:	00db      	lsls	r3, r3, #3
10043012:	0480      	lsls	r0, r0, #18
10043014:	4303      	orrs	r3, r0
10043016:	26ff      	movs	r6, #255	; 0xff
10043018:	e7da      	b.n	10042fd0 <__aeabi_d2f+0x38>
1004301a:	432b      	orrs	r3, r5
1004301c:	d003      	beq.n	10043026 <__aeabi_d2f+0x8e>
1004301e:	2305      	movs	r3, #5
10043020:	08db      	lsrs	r3, r3, #3
10043022:	2cff      	cmp	r4, #255	; 0xff
10043024:	d003      	beq.n	1004302e <__aeabi_d2f+0x96>
10043026:	025b      	lsls	r3, r3, #9
10043028:	0a5b      	lsrs	r3, r3, #9
1004302a:	b2e4      	uxtb	r4, r4
1004302c:	e7e4      	b.n	10042ff8 <__aeabi_d2f+0x60>
1004302e:	2b00      	cmp	r3, #0
10043030:	d032      	beq.n	10043098 <__aeabi_d2f+0x100>
10043032:	2080      	movs	r0, #128	; 0x80
10043034:	03c0      	lsls	r0, r0, #15
10043036:	4303      	orrs	r3, r0
10043038:	025b      	lsls	r3, r3, #9
1004303a:	0a5b      	lsrs	r3, r3, #9
1004303c:	e7dc      	b.n	10042ff8 <__aeabi_d2f+0x60>
1004303e:	0032      	movs	r2, r6
10043040:	3217      	adds	r2, #23
10043042:	db14      	blt.n	1004306e <__aeabi_d2f+0xd6>
10043044:	2280      	movs	r2, #128	; 0x80
10043046:	271e      	movs	r7, #30
10043048:	0412      	lsls	r2, r2, #16
1004304a:	4313      	orrs	r3, r2
1004304c:	1bbf      	subs	r7, r7, r6
1004304e:	2f1f      	cmp	r7, #31
10043050:	dc0f      	bgt.n	10043072 <__aeabi_d2f+0xda>
10043052:	4a14      	ldr	r2, [pc, #80]	; (100430a4 <__aeabi_d2f+0x10c>)
10043054:	4694      	mov	ip, r2
10043056:	4464      	add	r4, ip
10043058:	002a      	movs	r2, r5
1004305a:	40a5      	lsls	r5, r4
1004305c:	002e      	movs	r6, r5
1004305e:	40a3      	lsls	r3, r4
10043060:	1e75      	subs	r5, r6, #1
10043062:	41ae      	sbcs	r6, r5
10043064:	40fa      	lsrs	r2, r7
10043066:	4333      	orrs	r3, r6
10043068:	4313      	orrs	r3, r2
1004306a:	2600      	movs	r6, #0
1004306c:	e7b0      	b.n	10042fd0 <__aeabi_d2f+0x38>
1004306e:	2400      	movs	r4, #0
10043070:	e7d5      	b.n	1004301e <__aeabi_d2f+0x86>
10043072:	2202      	movs	r2, #2
10043074:	4252      	negs	r2, r2
10043076:	1b96      	subs	r6, r2, r6
10043078:	001a      	movs	r2, r3
1004307a:	40f2      	lsrs	r2, r6
1004307c:	2f20      	cmp	r7, #32
1004307e:	d009      	beq.n	10043094 <__aeabi_d2f+0xfc>
10043080:	4809      	ldr	r0, [pc, #36]	; (100430a8 <__aeabi_d2f+0x110>)
10043082:	4684      	mov	ip, r0
10043084:	4464      	add	r4, ip
10043086:	40a3      	lsls	r3, r4
10043088:	432b      	orrs	r3, r5
1004308a:	1e5d      	subs	r5, r3, #1
1004308c:	41ab      	sbcs	r3, r5
1004308e:	2600      	movs	r6, #0
10043090:	4313      	orrs	r3, r2
10043092:	e79d      	b.n	10042fd0 <__aeabi_d2f+0x38>
10043094:	2300      	movs	r3, #0
10043096:	e7f7      	b.n	10043088 <__aeabi_d2f+0xf0>
10043098:	2300      	movs	r3, #0
1004309a:	e7ad      	b.n	10042ff8 <__aeabi_d2f+0x60>
1004309c:	0034      	movs	r4, r6
1004309e:	e7bf      	b.n	10043020 <__aeabi_d2f+0x88>
100430a0:	fffffc80 	.word	0xfffffc80
100430a4:	fffffc82 	.word	0xfffffc82
100430a8:	fffffca2 	.word	0xfffffca2

100430ac <__clzsi2>:
100430ac:	211c      	movs	r1, #28
100430ae:	2301      	movs	r3, #1
100430b0:	041b      	lsls	r3, r3, #16
100430b2:	4298      	cmp	r0, r3
100430b4:	d301      	bcc.n	100430ba <__clzsi2+0xe>
100430b6:	0c00      	lsrs	r0, r0, #16
100430b8:	3910      	subs	r1, #16
100430ba:	0a1b      	lsrs	r3, r3, #8
100430bc:	4298      	cmp	r0, r3
100430be:	d301      	bcc.n	100430c4 <__clzsi2+0x18>
100430c0:	0a00      	lsrs	r0, r0, #8
100430c2:	3908      	subs	r1, #8
100430c4:	091b      	lsrs	r3, r3, #4
100430c6:	4298      	cmp	r0, r3
100430c8:	d301      	bcc.n	100430ce <__clzsi2+0x22>
100430ca:	0900      	lsrs	r0, r0, #4
100430cc:	3904      	subs	r1, #4
100430ce:	a202      	add	r2, pc, #8	; (adr r2, 100430d8 <__clzsi2+0x2c>)
100430d0:	5c10      	ldrb	r0, [r2, r0]
100430d2:	1840      	adds	r0, r0, r1
100430d4:	4770      	bx	lr
100430d6:	46c0      	nop			; (mov r8, r8)
100430d8:	02020304 	.word	0x02020304
100430dc:	01010101 	.word	0x01010101
	...

100430e8 <SysCount_Handler>:
const tClockTime CLOCK_SECOND = 1000;

/*---------------------------------------------------------------------------*/
void SysCount_Handler(void) 
{
  sys_tick_count++;
100430e8:	4a02      	ldr	r2, [pc, #8]	; (100430f4 <SysCount_Handler+0xc>)
100430ea:	6813      	ldr	r3, [r2, #0]
100430ec:	3301      	adds	r3, #1
100430ee:	6013      	str	r3, [r2, #0]
}
100430f0:	4770      	bx	lr
100430f2:	46c0      	nop			; (mov r8, r8)
100430f4:	20000300 	.word	0x20000300

100430f8 <Clock_Init>:
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
100430f8:	21c0      	movs	r1, #192	; 0xc0
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if (ticks > SysTick_LOAD_RELOAD_Msk)  return (1);            /* Reload value impossible */

  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
100430fa:	4a07      	ldr	r2, [pc, #28]	; (10043118 <Clock_Init+0x20>)
100430fc:	4b07      	ldr	r3, [pc, #28]	; (1004311c <Clock_Init+0x24>)
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
100430fe:	4808      	ldr	r0, [pc, #32]	; (10043120 <Clock_Init+0x28>)
  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
10043100:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
10043102:	6a03      	ldr	r3, [r0, #32]
10043104:	0609      	lsls	r1, r1, #24
10043106:	021b      	lsls	r3, r3, #8
10043108:	0a1b      	lsrs	r3, r3, #8
1004310a:	430b      	orrs	r3, r1
1004310c:	6203      	str	r3, [r0, #32]
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
1004310e:	2300      	movs	r3, #0
10043110:	6093      	str	r3, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
10043112:	3307      	adds	r3, #7
10043114:	6013      	str	r3, [r2, #0]

void Clock_Init(void)
{
  /** Configure SysTick to generate Interrupt with 1ms period */
  SysTick_Config(SYSCLK_FREQ/1000 - 1);  
}
10043116:	4770      	bx	lr
10043118:	e000e010 	.word	0xe000e010
1004311c:	00007cfe 	.word	0x00007cfe
10043120:	e000ed00 	.word	0xe000ed00

10043124 <Clock_Wait>:

/*---------------------------------------------------------------------------*/

tClockTime Clock_Time(void)
{
  return sys_tick_count;
10043124:	4a03      	ldr	r2, [pc, #12]	; (10043134 <Clock_Wait+0x10>)
10043126:	6811      	ldr	r1, [r2, #0]
10043128:	6813      	ldr	r3, [r2, #0]
void Clock_Wait(uint32_t i)
{
  tClockTime start;

  start = Clock_Time();
  while(Clock_Time() - start < (tClockTime)i);
1004312a:	1a5b      	subs	r3, r3, r1
1004312c:	4283      	cmp	r3, r0
1004312e:	d3fb      	bcc.n	10043128 <Clock_Wait+0x4>
}
10043130:	4770      	bx	lr
10043132:	46c0      	nop			; (mov r8, r8)
10043134:	20000300 	.word	0x20000300

10043138 <HAL_GetPartInfo>:
void HAL_GetPartInfo(PartInfoType *partInfo)
{
  volatile uint32_t *ptr = (volatile uint32_t *)(CKGEN_SOC_BASE + 0x28);
  volatile uint32_t *ptr_2n = (volatile uint32_t *)(BLUENRG2N_ID_BASE); 

  partInfo->die_major    = CKGEN_SOC->DIE_ID_b.VERSION;
10043138:	4a12      	ldr	r2, [pc, #72]	; (10043184 <HAL_GetPartInfo+0x4c>)
1004313a:	69d3      	ldr	r3, [r2, #28]
1004313c:	061b      	lsls	r3, r3, #24
1004313e:	0f1b      	lsrs	r3, r3, #28
10043140:	7043      	strb	r3, [r0, #1]
10043142:	b2d9      	uxtb	r1, r3
  partInfo->die_cut      = CKGEN_SOC->DIE_ID_b.REV;
10043144:	69d3      	ldr	r3, [r2, #28]

  partInfo->jtag_id_code = *ptr;
  if (partInfo->jtag_id_code == BLUENRG2_IDCODE) {
10043146:	4a10      	ldr	r2, [pc, #64]	; (10043188 <HAL_GetPartInfo+0x50>)
  partInfo->die_cut      = CKGEN_SOC->DIE_ID_b.REV;
10043148:	071b      	lsls	r3, r3, #28
1004314a:	0f1b      	lsrs	r3, r3, #28
1004314c:	7083      	strb	r3, [r0, #2]
  partInfo->jtag_id_code = *ptr;
1004314e:	4b0f      	ldr	r3, [pc, #60]	; (1004318c <HAL_GetPartInfo+0x54>)
10043150:	681b      	ldr	r3, [r3, #0]
10043152:	6043      	str	r3, [r0, #4]
  if (partInfo->jtag_id_code == BLUENRG2_IDCODE) {
10043154:	4293      	cmp	r3, r2
10043156:	d112      	bne.n	1004317e <HAL_GetPartInfo+0x46>
    
    if  (*ptr_2n == BLUENRG2N_IDCODE) 
10043158:	4b0d      	ldr	r3, [pc, #52]	; (10043190 <HAL_GetPartInfo+0x58>)
1004315a:	681a      	ldr	r2, [r3, #0]
1004315c:	4b0d      	ldr	r3, [pc, #52]	; (10043194 <HAL_GetPartInfo+0x5c>)
1004315e:	429a      	cmp	r2, r3
10043160:	d10b      	bne.n	1004317a <HAL_GetPartInfo+0x42>
    {
      /* BlueNRG-2N id */
      partInfo->die_id = DIE_SW_ID_BLUENRG2N;
10043162:	2304      	movs	r3, #4
      /* BlueNRG-2 id is conventionally 2 */
      partInfo->die_id = DIE_ID_BLUENRG2;
    }
  } else {
    /* BlueNRG-1 id is conventionally 1 */
    partInfo->die_id = DIE_ID_BLUENRG1;
10043164:	7003      	strb	r3, [r0, #0]
 }

  /* Patch for early samples */
  if (partInfo->die_major == 0)
10043166:	2900      	cmp	r1, #0
10043168:	d101      	bne.n	1004316e <HAL_GetPartInfo+0x36>
    partInfo->die_major = 1;
1004316a:	2301      	movs	r3, #1
1004316c:	7043      	strb	r3, [r0, #1]

  partInfo->flash_size = (FLASH->SIZE + 1) * 4;
1004316e:	4b0a      	ldr	r3, [pc, #40]	; (10043198 <HAL_GetPartInfo+0x60>)
10043170:	8a9b      	ldrh	r3, [r3, #20]
10043172:	3301      	adds	r3, #1
10043174:	009b      	lsls	r3, r3, #2
10043176:	6083      	str	r3, [r0, #8]
}
10043178:	4770      	bx	lr
      partInfo->die_id = DIE_ID_BLUENRG2;
1004317a:	2302      	movs	r3, #2
1004317c:	e7f2      	b.n	10043164 <HAL_GetPartInfo+0x2c>
    partInfo->die_id = DIE_ID_BLUENRG1;
1004317e:	2301      	movs	r3, #1
10043180:	e7f0      	b.n	10043164 <HAL_GetPartInfo+0x2c>
10043182:	46c0      	nop			; (mov r8, r8)
10043184:	40900000 	.word	0x40900000
10043188:	0200a041 	.word	0x0200a041
1004318c:	40900028 	.word	0x40900028
10043190:	10000028 	.word	0x10000028
10043194:	f200a044 	.word	0xf200a044
10043198:	40100000 	.word	0x40100000

1004319c <BLEPLAT_get_part_info>:

/**
 * @brief Get Device ID, Version and Revision numbers
 */
void BLEPLAT_get_part_info(uint8_t *device_id, uint8_t *major_cut, uint8_t *minor_cut)
{
1004319c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004319e:	0007      	movs	r7, r0
100431a0:	b085      	sub	sp, #20
   PartInfoType partInfo;
   
   /* get partInfo */
   HAL_GetPartInfo(&partInfo);
100431a2:	ac01      	add	r4, sp, #4
{
100431a4:	000e      	movs	r6, r1
   HAL_GetPartInfo(&partInfo);
100431a6:	0020      	movs	r0, r4
{
100431a8:	0015      	movs	r5, r2
   HAL_GetPartInfo(&partInfo);
100431aa:	f7ff ffc5 	bl	10043138 <HAL_GetPartInfo>
  
  /* Set device ID */
  *device_id  = partInfo.die_id;
100431ae:	7823      	ldrb	r3, [r4, #0]
100431b0:	703b      	strb	r3, [r7, #0]
  
  /* Set major cut  */
  *major_cut = partInfo.die_major; 
100431b2:	7863      	ldrb	r3, [r4, #1]
100431b4:	7033      	strb	r3, [r6, #0]
 
  /* Set minor cut */
  *minor_cut = partInfo.die_cut;
100431b6:	78a3      	ldrb	r3, [r4, #2]
100431b8:	702b      	strb	r3, [r5, #0]
}
100431ba:	b005      	add	sp, #20
100431bc:	bdf0      	pop	{r4, r5, r6, r7, pc}

100431be <Osal_MemCpy>:
 * Osal_MemCpy
 * 
 */
 
void* Osal_MemCpy(void *dest,const void *src,unsigned int size)
{
100431be:	b510      	push	{r4, lr}
    return(memcpy(dest,src,size)); 
100431c0:	f004 ffff 	bl	100481c2 <memcpy>
}
100431c4:	bd10      	pop	{r4, pc}

100431c6 <Osal_MemSet>:
 * Osal_MemSet
 * 
 */
 
void* Osal_MemSet(void *ptr, int value,unsigned int size)
{
100431c6:	b510      	push	{r4, lr}
    return(memset(ptr,value,size));
100431c8:	f005 f816 	bl	100481f8 <memset>
}
100431cc:	bd10      	pop	{r4, pc}

100431ce <Osal_MemCmp>:
/**
 * Osal_MemCmp
 * 
 */
int Osal_MemCmp(void *s1,void *s2,unsigned int size)
{
100431ce:	b510      	push	{r4, lr}
    return(memcmp(s1,s2,size));
100431d0:	f004 ffe8 	bl	100481a4 <memcmp>
}
100431d4:	bd10      	pop	{r4, pc}

100431d6 <HAL_VTIMER_TimerSleepCheck>:
  return SLEEPMODE_NOTIMER;
}
WEAK_FUNCTION(SleepModes HAL_VTIMER_TimerSleepCheck(SleepModes sleepMode))
{
  return SLEEPMODE_NOTIMER;
}
100431d6:	2003      	movs	r0, #3
100431d8:	4770      	bx	lr
	...

100431dc <BlueNRG_Sleep>:
}

uint8_t BlueNRG_Sleep(SleepModes sleepMode, 
                      uint8_t gpioWakeBitMask, 
                      uint8_t gpioWakeLevelMask)
{
100431dc:	b5f0      	push	{r4, r5, r6, r7, lr}
100431de:	4c20      	ldr	r4, [pc, #128]	; (10043260 <BlueNRG_Sleep+0x84>)
100431e0:	0016      	movs	r6, r2
100431e2:	44a5      	add	sp, r4
100431e4:	910e      	str	r1, [sp, #56]	; 0x38
100431e6:	0004      	movs	r4, r0
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
100431e8:	f3ef 8310 	mrs	r3, PRIMASK
100431ec:	9307      	str	r3, [sp, #28]
  __ASM volatile ("cpsid i");
100431ee:	b672      	cpsid	i
  
  /* Mask all the interrupt */
  ATOMIC_SECTION_BEGIN();

  /* Flag to signal if a wakeup from standby or sleep occurred */
  wakeupFromSleepFlag = 0; 
100431f0:	2200      	movs	r2, #0
100431f2:	4b1c      	ldr	r3, [pc, #112]	; (10043264 <BlueNRG_Sleep+0x88>)
100431f4:	701a      	strb	r2, [r3, #0]

  ble_sleepMode = (SleepModes)BlueNRG_Stack_Perform_Deep_Sleep_Check();
100431f6:	f014 fd51 	bl	10057c9c <BlueNRG_Stack_Perform_Deep_Sleep_Check>
100431fa:	0007      	movs	r7, r0
  timer_sleepMode = HAL_VTIMER_TimerSleepCheck(sleepMode);
100431fc:	0020      	movs	r0, r4
100431fe:	f7ff ffea 	bl	100431d6 <HAL_VTIMER_TimerSleepCheck>
10043202:	0005      	movs	r5, r0
  app_sleepMode = App_SleepMode_Check(sleepMode);
10043204:	0020      	movs	r0, r4
10043206:	f002 fe8b 	bl	10045f20 <App_SleepMode_Check>
  sleepMode_allowed = (SleepModes)MIN(app_sleepMode, sleepMode);
  sleepMode_allowed = (SleepModes)MIN(timer_sleepMode, sleepMode_allowed);
  sleepMode_allowed = (SleepModes)MIN(ble_sleepMode, sleepMode_allowed);
1004320a:	1c3b      	adds	r3, r7, #0
1004320c:	42af      	cmp	r7, r5
1004320e:	d900      	bls.n	10043212 <BlueNRG_Sleep+0x36>
10043210:	1c2b      	adds	r3, r5, #0
10043212:	b2da      	uxtb	r2, r3
10043214:	42a2      	cmp	r2, r4
10043216:	d900      	bls.n	1004321a <BlueNRG_Sleep+0x3e>
10043218:	1c23      	adds	r3, r4, #0
1004321a:	b2d9      	uxtb	r1, r3
1004321c:	b2c2      	uxtb	r2, r0
1004321e:	4291      	cmp	r1, r2
10043220:	d900      	bls.n	10043224 <BlueNRG_Sleep+0x48>
10043222:	1c03      	adds	r3, r0, #0
10043224:	b2db      	uxtb	r3, r3

#ifdef DEBUG_SLEEP_MODE
  sleepMode_selected[sleepMode_allowed]++;
10043226:	4a10      	ldr	r2, [pc, #64]	; (10043268 <BlueNRG_Sleep+0x8c>)
10043228:	0099      	lsls	r1, r3, #2
  sleepMode_allowed = (SleepModes)MIN(ble_sleepMode, sleepMode_allowed);
1004322a:	9301      	str	r3, [sp, #4]
  sleepMode_selected[sleepMode_allowed]++;
1004322c:	588b      	ldr	r3, [r1, r2]
1004322e:	3301      	adds	r3, #1
10043230:	508b      	str	r3, [r1, r2]
#endif

  if (sleepMode_allowed == SLEEPMODE_RUNNING) {
10043232:	9b01      	ldr	r3, [sp, #4]
10043234:	2b00      	cmp	r3, #0
10043236:	d107      	bne.n	10043248 <BlueNRG_Sleep+0x6c>

    \param [in]    priMask  Priority Mask
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) );
10043238:	9b07      	ldr	r3, [sp, #28]
1004323a:	f383 8810 	msr	PRIMASK, r3
  BlueNRG_InternalSleep(sleepMode_allowed, gpioWakeBitMask);
  
  ATOMIC_SECTION_END();
  
  return SUCCESS;
}
1004323e:	2000      	movs	r0, #0
10043240:	23a9      	movs	r3, #169	; 0xa9
10043242:	009b      	lsls	r3, r3, #2
10043244:	449d      	add	sp, r3
10043246:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (sleepMode_allowed == SLEEPMODE_CPU_HALT) {
10043248:	9b01      	ldr	r3, [sp, #4]
1004324a:	2b01      	cmp	r3, #1
1004324c:	d110      	bne.n	10043270 <BlueNRG_Sleep+0x94>
    WDG->CR = 0;
1004324e:	2100      	movs	r1, #0
    uint32_t WDG_CR_saved = WDG->CR;
10043250:	4b06      	ldr	r3, [pc, #24]	; (1004326c <BlueNRG_Sleep+0x90>)
10043252:	7a1a      	ldrb	r2, [r3, #8]
    WDG->CR = 0;
10043254:	7219      	strb	r1, [r3, #8]
    uint32_t WDG_CR_saved = WDG->CR;
10043256:	b2d2      	uxtb	r2, r2
    Wait For Interrupt is a hint instruction that suspends execution
    until one of a number of events occurs.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __WFI(void)
{
  __ASM volatile ("wfi");
10043258:	bf30      	wfi
    WDG->CR= WDG_CR_saved;
1004325a:	721a      	strb	r2, [r3, #8]
1004325c:	e7ec      	b.n	10043238 <BlueNRG_Sleep+0x5c>
1004325e:	46c0      	nop			; (mov r8, r8)
10043260:	fffffd5c 	.word	0xfffffd5c
10043264:	2000000c 	.word	0x2000000c
10043268:	20000304 	.word	0x20000304
1004326c:	40700000 	.word	0x40700000
  SYSTEM_CTRL->WKP_IO_IE = gpioWakeBitMask;
10043270:	2238      	movs	r2, #56	; 0x38
10043272:	466b      	mov	r3, sp
  SYSTEM_CTRL->WKP_IO_IS = gpioWakeLevelMask;
10043274:	4ce1      	ldr	r4, [pc, #900]	; (100435fc <BlueNRG_Sleep+0x420>)
  SYSTEM_CTRL->WKP_IO_IE = gpioWakeBitMask;
10043276:	189b      	adds	r3, r3, r2
  SYSTEM_CTRL->WKP_IO_IS = gpioWakeLevelMask;
10043278:	7026      	strb	r6, [r4, #0]
  SYSTEM_CTRL->WKP_IO_IE = gpioWakeBitMask;
1004327a:	781b      	ldrb	r3, [r3, #0]
  HAL_GetPartInfo(&partInfo);
1004327c:	a87d      	add	r0, sp, #500	; 0x1f4
  SYSTEM_CTRL->WKP_IO_IE = gpioWakeBitMask;
1004327e:	7123      	strb	r3, [r4, #4]
  HAL_GetPartInfo(&partInfo);
10043280:	f7ff ff5a 	bl	10043138 <HAL_GetPartInfo>
  SYS_Ctrl_saved = SYSTEM_CTRL->CTRL;
10043284:	7a23      	ldrb	r3, [r4, #8]
  FLASH_CONFIG_saved = FLASH->CONFIG;
10043286:	49de      	ldr	r1, [pc, #888]	; (10043600 <BlueNRG_Sleep+0x424>)
  SYS_Ctrl_saved = SYSTEM_CTRL->CTRL;
10043288:	b2db      	uxtb	r3, r3
1004328a:	930b      	str	r3, [sp, #44]	; 0x2c
  FLASH_CONFIG_saved = FLASH->CONFIG;
1004328c:	888b      	ldrh	r3, [r1, #4]
  NVIC_ISER_saved = NVIC->ISER[0];
1004328e:	4add      	ldr	r2, [pc, #884]	; (10043604 <BlueNRG_Sleep+0x428>)
  FLASH_CONFIG_saved = FLASH->CONFIG;
10043290:	b29b      	uxth	r3, r3
10043292:	9310      	str	r3, [sp, #64]	; 0x40
  NVIC_ISER_saved = NVIC->ISER[0];
10043294:	6813      	ldr	r3, [r2, #0]
10043296:	915c      	str	r1, [sp, #368]	; 0x170
10043298:	9311      	str	r3, [sp, #68]	; 0x44
1004329a:	2300      	movs	r3, #0
1004329c:	9409      	str	r4, [sp, #36]	; 0x24
1004329e:	9206      	str	r2, [sp, #24]
  	NVIC_IPR_saved[i] = NVIC->IP[i];
100432a0:	a980      	add	r1, sp, #512	; 0x200
100432a2:	001a      	movs	r2, r3
100432a4:	9806      	ldr	r0, [sp, #24]
100432a6:	32c0      	adds	r2, #192	; 0xc0
100432a8:	0092      	lsls	r2, r2, #2
100432aa:	5880      	ldr	r0, [r0, r2]
100432ac:	009a      	lsls	r2, r3, #2
100432ae:	3301      	adds	r3, #1
100432b0:	5050      	str	r0, [r2, r1]
  for (i=0; i<8; i++) {
100432b2:	2b08      	cmp	r3, #8
100432b4:	d1f5      	bne.n	100432a2 <BlueNRG_Sleep+0xc6>
  PENDSV_SYSTICK_IPR_saved = *(volatile uint32_t *)SHPR3_REG;
100432b6:	4cd4      	ldr	r4, [pc, #848]	; (10043608 <BlueNRG_Sleep+0x42c>)
  CLOCK_EN_saved = CKGEN_SOC->CLOCK_EN;
100432b8:	48d4      	ldr	r0, [pc, #848]	; (1004360c <BlueNRG_Sleep+0x430>)
  PENDSV_SYSTICK_IPR_saved = *(volatile uint32_t *)SHPR3_REG;
100432ba:	6823      	ldr	r3, [r4, #0]
  UART_TIMEOUT_saved = UART->TIMEOUT;
100432bc:	49d4      	ldr	r1, [pc, #848]	; (10043610 <BlueNRG_Sleep+0x434>)
  PENDSV_SYSTICK_IPR_saved = *(volatile uint32_t *)SHPR3_REG;
100432be:	9312      	str	r3, [sp, #72]	; 0x48
  CLOCK_EN_saved = CKGEN_SOC->CLOCK_EN;
100432c0:	6a03      	ldr	r3, [r0, #32]
  UART_XON1_saved = UART->XON1;
100432c2:	4fd4      	ldr	r7, [pc, #848]	; (10043614 <BlueNRG_Sleep+0x438>)
  CLOCK_EN_saved = CKGEN_SOC->CLOCK_EN;
100432c4:	9313      	str	r3, [sp, #76]	; 0x4c
  GPIO_DATA_saved = GPIO->DATA;
100432c6:	2380      	movs	r3, #128	; 0x80
100432c8:	05db      	lsls	r3, r3, #23
100432ca:	681a      	ldr	r2, [r3, #0]
  UART_XON2_saved = UART->XON2;
100432cc:	4ed2      	ldr	r6, [pc, #840]	; (10043618 <BlueNRG_Sleep+0x43c>)
  GPIO_DATA_saved = GPIO->DATA;
100432ce:	9214      	str	r2, [sp, #80]	; 0x50
  GPIO_OEN_saved = GPIO->OEN;
100432d0:	685a      	ldr	r2, [r3, #4]
  UART_XOFF1_saved = UART->XOFF1;
100432d2:	4dd2      	ldr	r5, [pc, #840]	; (1004361c <BlueNRG_Sleep+0x440>)
  GPIO_OEN_saved = GPIO->OEN;
100432d4:	9215      	str	r2, [sp, #84]	; 0x54
  GPIO_PE_saved = GPIO->PE;
100432d6:	689a      	ldr	r2, [r3, #8]
100432d8:	9216      	str	r2, [sp, #88]	; 0x58
  GPIO_DS_saved = GPIO->DS;
100432da:	68da      	ldr	r2, [r3, #12]
100432dc:	9217      	str	r2, [sp, #92]	; 0x5c
  GPIO_IS_saved = GPIO->IS;
100432de:	691a      	ldr	r2, [r3, #16]
100432e0:	9218      	str	r2, [sp, #96]	; 0x60
  GPIO_IBE_saved = GPIO->IBE;
100432e2:	695a      	ldr	r2, [r3, #20]
100432e4:	9219      	str	r2, [sp, #100]	; 0x64
  GPIO_IEV_saved = GPIO->IEV;
100432e6:	699a      	ldr	r2, [r3, #24]
100432e8:	921a      	str	r2, [sp, #104]	; 0x68
  GPIO_IE_saved = GPIO->IE;
100432ea:	69da      	ldr	r2, [r3, #28]
100432ec:	920c      	str	r2, [sp, #48]	; 0x30
  GPIO_MODE0_saved = GPIO->MODE0;
100432ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
100432f0:	921b      	str	r2, [sp, #108]	; 0x6c
  GPIO_MODE1_saved = GPIO->MODE1;
100432f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
100432f4:	921c      	str	r2, [sp, #112]	; 0x70
  GPIO_MODE2_saved = GPIO->MODE2;
100432f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
100432f8:	921d      	str	r2, [sp, #116]	; 0x74
  GPIO_MODE3_saved = GPIO->MODE3;
100432fa:	8f1a      	ldrh	r2, [r3, #56]	; 0x38
100432fc:	b292      	uxth	r2, r2
100432fe:	921e      	str	r2, [sp, #120]	; 0x78
  GPIO_IOSEL_MFTX_saved = GPIO->MFTX;
10043300:	6c5b      	ldr	r3, [r3, #68]	; 0x44
  SPI_CR0_saved = SPI->CR0; 
10043302:	4ac7      	ldr	r2, [pc, #796]	; (10043620 <BlueNRG_Sleep+0x444>)
  GPIO_IOSEL_MFTX_saved = GPIO->MFTX;
10043304:	931f      	str	r3, [sp, #124]	; 0x7c
  UART_TIMEOUT_saved = UART->TIMEOUT;
10043306:	68cb      	ldr	r3, [r1, #12]
10043308:	9320      	str	r3, [sp, #128]	; 0x80
  UART_LCRH_RX_saved = UART->LCRH_RX;
1004330a:	7f0b      	ldrb	r3, [r1, #28]
1004330c:	b2db      	uxtb	r3, r3
1004330e:	9321      	str	r3, [sp, #132]	; 0x84
  UART_IBRD_saved = UART->IBRD;
10043310:	8c8b      	ldrh	r3, [r1, #36]	; 0x24
10043312:	b29b      	uxth	r3, r3
10043314:	9322      	str	r3, [sp, #136]	; 0x88
  UART_FBRD_saved = UART->FBRD;
10043316:	4bc3      	ldr	r3, [pc, #780]	; (10043624 <BlueNRG_Sleep+0x448>)
10043318:	781b      	ldrb	r3, [r3, #0]
1004331a:	b2db      	uxtb	r3, r3
1004331c:	9323      	str	r3, [sp, #140]	; 0x8c
  UART_LCRH_TX_saved =  UART->LCRH_TX;
1004331e:	4bc2      	ldr	r3, [pc, #776]	; (10043628 <BlueNRG_Sleep+0x44c>)
10043320:	781b      	ldrb	r3, [r3, #0]
10043322:	b2db      	uxtb	r3, r3
10043324:	9324      	str	r3, [sp, #144]	; 0x90
  UART_CR_saved = UART->CR;
10043326:	6b0b      	ldr	r3, [r1, #48]	; 0x30
10043328:	9325      	str	r3, [sp, #148]	; 0x94
  UART_IFLS_saved = UART->IFLS;
1004332a:	4bc0      	ldr	r3, [pc, #768]	; (1004362c <BlueNRG_Sleep+0x450>)
1004332c:	781b      	ldrb	r3, [r3, #0]
1004332e:	b2db      	uxtb	r3, r3
10043330:	9326      	str	r3, [sp, #152]	; 0x98
  UART_IMSC_saved = UART->IMSC;
10043332:	8f0b      	ldrh	r3, [r1, #56]	; 0x38
10043334:	b29b      	uxth	r3, r3
10043336:	9327      	str	r3, [sp, #156]	; 0x9c
  UART_DMACR_saved = UART->DMACR;
10043338:	4bbd      	ldr	r3, [pc, #756]	; (10043630 <BlueNRG_Sleep+0x454>)
1004333a:	781b      	ldrb	r3, [r3, #0]
1004333c:	b2db      	uxtb	r3, r3
1004333e:	9328      	str	r3, [sp, #160]	; 0xa0
  UART_XFCR_saved = UART->XFCR;
10043340:	4bbc      	ldr	r3, [pc, #752]	; (10043634 <BlueNRG_Sleep+0x458>)
10043342:	469c      	mov	ip, r3
10043344:	781b      	ldrb	r3, [r3, #0]
10043346:	b2db      	uxtb	r3, r3
10043348:	9329      	str	r3, [sp, #164]	; 0xa4
  UART_XON1_saved = UART->XON1;
1004334a:	783b      	ldrb	r3, [r7, #0]
1004334c:	b2db      	uxtb	r3, r3
1004334e:	932a      	str	r3, [sp, #168]	; 0xa8
  UART_XON2_saved = UART->XON2;
10043350:	7833      	ldrb	r3, [r6, #0]
10043352:	b2db      	uxtb	r3, r3
10043354:	932b      	str	r3, [sp, #172]	; 0xac
  UART_XOFF1_saved = UART->XOFF1;
10043356:	782b      	ldrb	r3, [r5, #0]
10043358:	b2db      	uxtb	r3, r3
1004335a:	932c      	str	r3, [sp, #176]	; 0xb0
  UART_XOFF2_saved = UART->XOFF2;
1004335c:	4bb6      	ldr	r3, [pc, #728]	; (10043638 <BlueNRG_Sleep+0x45c>)
1004335e:	781b      	ldrb	r3, [r3, #0]
10043360:	b2db      	uxtb	r3, r3
10043362:	932d      	str	r3, [sp, #180]	; 0xb4
  SPI_CR0_saved = SPI->CR0; 
10043364:	6813      	ldr	r3, [r2, #0]
10043366:	932e      	str	r3, [sp, #184]	; 0xb8
  SPI_CR1_saved = SPI->CR1;
10043368:	6853      	ldr	r3, [r2, #4]
1004336a:	932f      	str	r3, [sp, #188]	; 0xbc
  SPI_CPSR_saved = SPI->CPSR;
1004336c:	7c13      	ldrb	r3, [r2, #16]
1004336e:	b2db      	uxtb	r3, r3
10043370:	9330      	str	r3, [sp, #192]	; 0xc0
  SPI_IMSC_saved = SPI->IMSC;
10043372:	7d13      	ldrb	r3, [r2, #20]
10043374:	b2db      	uxtb	r3, r3
10043376:	9331      	str	r3, [sp, #196]	; 0xc4
  SPI_DMACR_saved = SPI->DMACR;
10043378:	4bb0      	ldr	r3, [pc, #704]	; (1004363c <BlueNRG_Sleep+0x460>)
1004337a:	7fdb      	ldrb	r3, [r3, #31]
1004337c:	b2db      	uxtb	r3, r3
1004337e:	9332      	str	r3, [sp, #200]	; 0xc8
  SPI_RXFRM_saved = SPI->RXFRM;
10043380:	8d13      	ldrh	r3, [r2, #40]	; 0x28
10043382:	b29b      	uxth	r3, r3
10043384:	9333      	str	r3, [sp, #204]	; 0xcc
  SPI_CHN_saved = SPI->CHN;
10043386:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
10043388:	9334      	str	r3, [sp, #208]	; 0xd0
  SPI_WDTXF_saved = SPI->WDTXF;
1004338a:	8e13      	ldrh	r3, [r2, #48]	; 0x30
1004338c:	9105      	str	r1, [sp, #20]
1004338e:	49a5      	ldr	r1, [pc, #660]	; (10043624 <BlueNRG_Sleep+0x448>)
10043390:	b29b      	uxth	r3, r3
10043392:	915e      	str	r1, [sp, #376]	; 0x178
10043394:	49a4      	ldr	r1, [pc, #656]	; (10043628 <BlueNRG_Sleep+0x44c>)
10043396:	9335      	str	r3, [sp, #212]	; 0xd4
10043398:	915f      	str	r1, [sp, #380]	; 0x17c
1004339a:	49a4      	ldr	r1, [pc, #656]	; (1004362c <BlueNRG_Sleep+0x450>)
1004339c:	2300      	movs	r3, #0
1004339e:	9160      	str	r1, [sp, #384]	; 0x180
100433a0:	49a3      	ldr	r1, [pc, #652]	; (10043630 <BlueNRG_Sleep+0x454>)
100433a2:	9202      	str	r2, [sp, #8]
100433a4:	9161      	str	r1, [sp, #388]	; 0x184
100433a6:	4661      	mov	r1, ip
100433a8:	4aa4      	ldr	r2, [pc, #656]	; (1004363c <BlueNRG_Sleep+0x460>)
100433aa:	9162      	str	r1, [sp, #392]	; 0x188
100433ac:	49a2      	ldr	r1, [pc, #648]	; (10043638 <BlueNRG_Sleep+0x45c>)
100433ae:	945d      	str	r4, [sp, #372]	; 0x174
100433b0:	9763      	str	r7, [sp, #396]	; 0x18c
100433b2:	9664      	str	r6, [sp, #400]	; 0x190
100433b4:	9565      	str	r5, [sp, #404]	; 0x194
100433b6:	900f      	str	r0, [sp, #60]	; 0x3c
100433b8:	9166      	str	r1, [sp, #408]	; 0x198
100433ba:	9267      	str	r2, [sp, #412]	; 0x19c
    I2C_CR_saved[i] = I2Cx->CR;
100433bc:	af69      	add	r7, sp, #420	; 0x1a4
    I2C_SCR_saved[i] = I2Cx->SCR;
100433be:	ae6b      	add	r6, sp, #428	; 0x1ac
    I2C_TFTR_saved[i] = I2Cx->TFTR;
100433c0:	ad6d      	add	r5, sp, #436	; 0x1b4
    I2C_RFTR_saved[i] = I2Cx->RFTR;
100433c2:	ac6f      	add	r4, sp, #444	; 0x1bc
100433c4:	4a9e      	ldr	r2, [pc, #632]	; (10043640 <BlueNRG_Sleep+0x464>)
100433c6:	189a      	adds	r2, r3, r2
100433c8:	0492      	lsls	r2, r2, #18
    I2C_CR_saved[i] = I2Cx->CR;
100433ca:	6811      	ldr	r1, [r2, #0]
100433cc:	51d9      	str	r1, [r3, r7]
    I2C_SCR_saved[i] = I2Cx->SCR;
100433ce:	6851      	ldr	r1, [r2, #4]
100433d0:	5199      	str	r1, [r3, r6]
    I2C_TFTR_saved[i] = I2Cx->TFTR;
100433d2:	8b91      	ldrh	r1, [r2, #28]
100433d4:	50e9      	str	r1, [r5, r3]
    I2C_RFTR_saved[i] = I2Cx->RFTR;
100433d6:	8c11      	ldrh	r1, [r2, #32]
100433d8:	50e1      	str	r1, [r4, r3]
    I2C_DMAR_saved[i] = I2Cx->DMAR;
100433da:	8c90      	ldrh	r0, [r2, #36]	; 0x24
100433dc:	a971      	add	r1, sp, #452	; 0x1c4
100433de:	50c8      	str	r0, [r1, r3]
    I2C_BRCR_saved[i] = I2Cx->BRCR;
100433e0:	8d10      	ldrh	r0, [r2, #40]	; 0x28
100433e2:	a973      	add	r1, sp, #460	; 0x1cc
100433e4:	50c8      	str	r0, [r1, r3]
    I2C_IMSCR_saved[i] = I2Cx->IMSCR;
100433e6:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
100433e8:	a975      	add	r1, sp, #468	; 0x1d4
100433ea:	5058      	str	r0, [r3, r1]
    I2C_THDDAT_saved[i] = I2Cx->THDDAT;
100433ec:	0011      	movs	r1, r2
100433ee:	314c      	adds	r1, #76	; 0x4c
100433f0:	8808      	ldrh	r0, [r1, #0]
100433f2:	a977      	add	r1, sp, #476	; 0x1dc
100433f4:	50c8      	str	r0, [r1, r3]
    I2C_THDSTA_FST_STD_saved[i] = I2Cx->THDSTA_FST_STD;
100433f6:	6d10      	ldr	r0, [r2, #80]	; 0x50
100433f8:	a979      	add	r1, sp, #484	; 0x1e4
100433fa:	5058      	str	r0, [r3, r1]
    I2C_TSUSTA_FST_STD_saved[i] = I2Cx->TSUSTA_FST_STD;
100433fc:	6d91      	ldr	r1, [r2, #88]	; 0x58
100433fe:	aa7b      	add	r2, sp, #492	; 0x1ec
10043400:	5099      	str	r1, [r3, r2]
10043402:	3304      	adds	r3, #4
  for (i=0; i<2; i++) {
10043404:	2b08      	cmp	r3, #8
10043406:	d1dd      	bne.n	100433c4 <BlueNRG_Sleep+0x1e8>
  RNG_CR_saved = RNG->CR;
10043408:	23b0      	movs	r3, #176	; 0xb0
1004340a:	061b      	lsls	r3, r3, #24
1004340c:	681b      	ldr	r3, [r3, #0]
  RTC_CWDMR_saved = RTC->CWDMR;
1004340e:	4c8d      	ldr	r4, [pc, #564]	; (10043644 <BlueNRG_Sleep+0x468>)
  RNG_CR_saved = RNG->CR;
10043410:	9336      	str	r3, [sp, #216]	; 0xd8
  RTC_CWDMR_saved = RTC->CWDMR;
10043412:	6863      	ldr	r3, [r4, #4]
  T1CRA_saved = MFT1->TNCRA;
10043414:	4a8c      	ldr	r2, [pc, #560]	; (10043648 <BlueNRG_Sleep+0x46c>)
  RTC_CWDMR_saved = RTC->CWDMR;
10043416:	9337      	str	r3, [sp, #220]	; 0xdc
  RTC_CWDLR_saved = RTC->CWDLR;
10043418:	68a3      	ldr	r3, [r4, #8]
  SYST_CSR_saved = SysTick->CTRL;
1004341a:	4e8c      	ldr	r6, [pc, #560]	; (1004364c <BlueNRG_Sleep+0x470>)
  RTC_CWDLR_saved = RTC->CWDLR;
1004341c:	9338      	str	r3, [sp, #224]	; 0xe0
  RTC_CWYMR_saved = RTC->CWYMR;
1004341e:	8a23      	ldrh	r3, [r4, #16]
  WDG_LR_saved = WDG->LR;
10043420:	4d8b      	ldr	r5, [pc, #556]	; (10043650 <BlueNRG_Sleep+0x474>)
  RTC_CWYMR_saved = RTC->CWYMR;
10043422:	b29b      	uxth	r3, r3
10043424:	9339      	str	r3, [sp, #228]	; 0xe4
  RTC_CWYLR_saved = RTC->CWYLR;
10043426:	8aa3      	ldrh	r3, [r4, #20]
10043428:	b29b      	uxth	r3, r3
1004342a:	933a      	str	r3, [sp, #232]	; 0xe8
  RTC_CTCR_saved = RTC->CTCR;
1004342c:	69a3      	ldr	r3, [r4, #24]
1004342e:	933b      	str	r3, [sp, #236]	; 0xec
  RTC_IMSC_saved = RTC->IMSC;
10043430:	7f23      	ldrb	r3, [r4, #28]
10043432:	b2db      	uxtb	r3, r3
10043434:	933c      	str	r3, [sp, #240]	; 0xf0
  RTC_TCR_saved = RTC->TCR;
10043436:	8e23      	ldrh	r3, [r4, #48]	; 0x30
10043438:	b29b      	uxth	r3, r3
1004343a:	933d      	str	r3, [sp, #244]	; 0xf4
  RTC_TLR1_saved = RTC->TLR1;
1004343c:	6b63      	ldr	r3, [r4, #52]	; 0x34
1004343e:	933e      	str	r3, [sp, #248]	; 0xf8
  RTC_TLR2_saved = RTC->TLR2;
10043440:	6ba3      	ldr	r3, [r4, #56]	; 0x38
10043442:	933f      	str	r3, [sp, #252]	; 0xfc
  RTC_TPR1_saved = RTC->TPR1;
10043444:	6be3      	ldr	r3, [r4, #60]	; 0x3c
10043446:	9340      	str	r3, [sp, #256]	; 0x100
  RTC_TPR2_saved = RTC->TPR2;
10043448:	6c23      	ldr	r3, [r4, #64]	; 0x40
1004344a:	9341      	str	r3, [sp, #260]	; 0x104
  RTC_TPR3_saved = RTC->TPR3;
1004344c:	6c63      	ldr	r3, [r4, #68]	; 0x44
1004344e:	9342      	str	r3, [sp, #264]	; 0x108
  RTC_TPR4_saved = RTC->TPR4; 
10043450:	6ca3      	ldr	r3, [r4, #72]	; 0x48
10043452:	9343      	str	r3, [sp, #268]	; 0x10c
  T1CRA_saved = MFT1->TNCRA;
10043454:	8893      	ldrh	r3, [r2, #4]
10043456:	b29b      	uxth	r3, r3
10043458:	9344      	str	r3, [sp, #272]	; 0x110
  T1CRB_saved = MFT1->TNCRB;
1004345a:	8913      	ldrh	r3, [r2, #8]
1004345c:	b29b      	uxth	r3, r3
1004345e:	9345      	str	r3, [sp, #276]	; 0x114
  T1PRSC_saved = MFT1->TNPRSC;
10043460:	7c13      	ldrb	r3, [r2, #16]
10043462:	b2db      	uxtb	r3, r3
10043464:	9346      	str	r3, [sp, #280]	; 0x118
  T1CKC_saved = MFT1->TNCKC;
10043466:	7d13      	ldrb	r3, [r2, #20]
10043468:	b2db      	uxtb	r3, r3
1004346a:	9347      	str	r3, [sp, #284]	; 0x11c
  T1MCTRL_saved = MFT1->TNMCTRL;
1004346c:	8b13      	ldrh	r3, [r2, #24]
1004346e:	b29b      	uxth	r3, r3
10043470:	9348      	str	r3, [sp, #288]	; 0x120
  T1ICTRL_saved = MFT1->TNICTRL;
10043472:	7f13      	ldrb	r3, [r2, #28]
10043474:	b2db      	uxtb	r3, r3
10043476:	9349      	str	r3, [sp, #292]	; 0x124
  T2CRA_saved = MFT2->TNCRA;
10043478:	4b76      	ldr	r3, [pc, #472]	; (10043654 <BlueNRG_Sleep+0x478>)
1004347a:	8899      	ldrh	r1, [r3, #4]
1004347c:	b289      	uxth	r1, r1
1004347e:	914a      	str	r1, [sp, #296]	; 0x128
  T2CRB_saved = MFT2->TNCRB;
10043480:	8919      	ldrh	r1, [r3, #8]
10043482:	b289      	uxth	r1, r1
10043484:	914b      	str	r1, [sp, #300]	; 0x12c
  T2PRSC_saved = MFT2->TNPRSC;
10043486:	7c19      	ldrb	r1, [r3, #16]
10043488:	b2c9      	uxtb	r1, r1
1004348a:	914c      	str	r1, [sp, #304]	; 0x130
  T2CKC_saved = MFT2->TNCKC;
1004348c:	7d19      	ldrb	r1, [r3, #20]
1004348e:	b2c9      	uxtb	r1, r1
10043490:	914d      	str	r1, [sp, #308]	; 0x134
  T2MCTRL_saved = MFT2->TNMCTRL;
10043492:	8b19      	ldrh	r1, [r3, #24]
10043494:	b289      	uxth	r1, r1
10043496:	914e      	str	r1, [sp, #312]	; 0x138
  T2ICTRL_saved = MFT2->TNICTRL;
10043498:	7f19      	ldrb	r1, [r3, #28]
1004349a:	b2c9      	uxtb	r1, r1
1004349c:	914f      	str	r1, [sp, #316]	; 0x13c
  SYST_CSR_saved = SysTick->CTRL;
1004349e:	6831      	ldr	r1, [r6, #0]
100434a0:	9150      	str	r1, [sp, #320]	; 0x140
  SYST_RVR_saved = SysTick->LOAD;
100434a2:	6871      	ldr	r1, [r6, #4]
100434a4:	9151      	str	r1, [sp, #324]	; 0x144
  WDG_LR_saved = WDG->LR;
100434a6:	6829      	ldr	r1, [r5, #0]
100434a8:	9152      	str	r1, [sp, #328]	; 0x148
  WDG_CR_saved = WDG->CR;
100434aa:	7a28      	ldrb	r0, [r5, #8]
100434ac:	b2c1      	uxtb	r1, r0
  if(WDG->LOCK == 0) {
100434ae:	20c0      	movs	r0, #192	; 0xc0
  WDG_CR_saved = WDG->CR;
100434b0:	9153      	str	r1, [sp, #332]	; 0x14c
  if(WDG->LOCK == 0) {
100434b2:	0100      	lsls	r0, r0, #4
100434b4:	5828      	ldr	r0, [r5, r0]
100434b6:	9304      	str	r3, [sp, #16]
100434b8:	950a      	str	r5, [sp, #40]	; 0x28
100434ba:	9203      	str	r2, [sp, #12]
    WDG_LOCK_saved = 0;
100434bc:	2300      	movs	r3, #0
  if(WDG->LOCK == 0) {
100434be:	2800      	cmp	r0, #0
100434c0:	d100      	bne.n	100434c4 <BlueNRG_Sleep+0x2e8>
    WDG_LOCK_saved = 0x1ACCE551;
100434c2:	4b65      	ldr	r3, [pc, #404]	; (10043658 <BlueNRG_Sleep+0x47c>)
100434c4:	2205      	movs	r2, #5
100434c6:	930d      	str	r3, [sp, #52]	; 0x34
100434c8:	4694      	mov	ip, r2
    WDG_LOCK_saved = 0;
100434ca:	2300      	movs	r3, #0
    DMA_CNDTR_saved[i] = DMAx->CNDTR;
100434cc:	ad90      	add	r5, sp, #576	; 0x240
    DMA_CCR_saved[i] = DMAx->CCR;
100434ce:	a888      	add	r0, sp, #544	; 0x220
    DMA_CPAR_saved[i] = DMAx->CPAR;
100434d0:	a998      	add	r1, sp, #608	; 0x260
100434d2:	4662      	mov	r2, ip
100434d4:	435a      	muls	r2, r3
100434d6:	4f61      	ldr	r7, [pc, #388]	; (1004365c <BlueNRG_Sleep+0x480>)
100434d8:	19d2      	adds	r2, r2, r7
    DMA_CNDTR_saved[i] = DMAx->CNDTR;
100434da:	6857      	ldr	r7, [r2, #4]
100434dc:	515f      	str	r7, [r3, r5]
    DMA_CCR_saved[i] = DMAx->CCR;
100434de:	6817      	ldr	r7, [r2, #0]
100434e0:	501f      	str	r7, [r3, r0]
    DMA_CPAR_saved[i] = DMAx->CPAR;
100434e2:	6897      	ldr	r7, [r2, #8]
100434e4:	505f      	str	r7, [r3, r1]
    DMA_CMAR[i] = DMAx->CMAR;
100434e6:	68d7      	ldr	r7, [r2, #12]
100434e8:	aaa0      	add	r2, sp, #640	; 0x280
100434ea:	509f      	str	r7, [r3, r2]
100434ec:	3304      	adds	r3, #4
  for (i=0; i<8; i++) {
100434ee:	2b20      	cmp	r3, #32
100434f0:	d1ef      	bne.n	100434d2 <BlueNRG_Sleep+0x2f6>
  ADC_CONF_saved = ADC->CONF;
100434f2:	2381      	movs	r3, #129	; 0x81
100434f4:	05db      	lsls	r3, r3, #23
100434f6:	685a      	ldr	r2, [r3, #4]
100434f8:	9254      	str	r2, [sp, #336]	; 0x150
  ADC_IRQMASK_saved = ADC->IRQMASK;
100434fa:	7b1a      	ldrb	r2, [r3, #12]
100434fc:	b2d2      	uxtb	r2, r2
100434fe:	9255      	str	r2, [sp, #340]	; 0x154
  ADC_OFFSET_MSB_saved = ADC->OFFSET_MSB;
10043500:	8b5a      	ldrh	r2, [r3, #26]
10043502:	b292      	uxth	r2, r2
10043504:	9256      	str	r2, [sp, #344]	; 0x158
  ADC_OFFSET_LSB_saved = ADC->OFFSET_LSB;
10043506:	8b1a      	ldrh	r2, [r3, #24]
10043508:	b292      	uxth	r2, r2
1004350a:	9257      	str	r2, [sp, #348]	; 0x15c
  ADC_THRESHOLD_HI_saved = ADC->THRESHOLD_HI;
1004350c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
1004350e:	9258      	str	r2, [sp, #352]	; 0x160
  ADC_THRESHOLD_LO_saved = ADC->THRESHOLD_LO;
10043510:	6a9a      	ldr	r2, [r3, #40]	; 0x28
  ADC_CTRL_saved = ADC->CTRL;
10043512:	881b      	ldrh	r3, [r3, #0]
  ADC_THRESHOLD_LO_saved = ADC->THRESHOLD_LO;
10043514:	9259      	str	r2, [sp, #356]	; 0x164
  ADC_CTRL_saved = ADC->CTRL;
10043516:	b29b      	uxth	r3, r3
10043518:	935a      	str	r3, [sp, #360]	; 0x168
  PKA_IEN_saved = PKA->IEN;
1004351a:	23c0      	movs	r3, #192	; 0xc0
1004351c:	061b      	lsls	r3, r3, #24
1004351e:	689b      	ldr	r3, [r3, #8]
10043520:	935b      	str	r3, [sp, #364]	; 0x16c
  if (sleepMode == SLEEPMODE_NOTIMER) {
10043522:	9b01      	ldr	r3, [sp, #4]
10043524:	2b03      	cmp	r3, #3
10043526:	d106      	bne.n	10043536 <BlueNRG_Sleep+0x35a>
    BLUE_CTRL->TIMEOUT |= LOW_POWER_STANDBY<<28;
10043528:	2290      	movs	r2, #144	; 0x90
1004352a:	23c0      	movs	r3, #192	; 0xc0
1004352c:	05d2      	lsls	r2, r2, #23
1004352e:	6851      	ldr	r1, [r2, #4]
10043530:	059b      	lsls	r3, r3, #22
10043532:	430b      	orrs	r3, r1
10043534:	6053      	str	r3, [r2, #4]
  ptr = __vector_table[0].__ptr ;
10043536:	4b4a      	ldr	r3, [pc, #296]	; (10043660 <BlueNRG_Sleep+0x484>)
    cStackPreamble[i] = *ptr;
10043538:	4a4a      	ldr	r2, [pc, #296]	; (10043664 <BlueNRG_Sleep+0x488>)
  ptr = __vector_table[0].__ptr ;
1004353a:	681b      	ldr	r3, [r3, #0]
  ptr -= CSTACK_PREAMBLE_NUMBER;
1004353c:	001d      	movs	r5, r3
  ptr = __vector_table[0].__ptr ;
1004353e:	9308      	str	r3, [sp, #32]
  ptr -= CSTACK_PREAMBLE_NUMBER;
10043540:	2300      	movs	r3, #0
10043542:	3d50      	subs	r5, #80	; 0x50
10043544:	18e9      	adds	r1, r5, r3
    cStackPreamble[i] = *ptr;
10043546:	6809      	ldr	r1, [r1, #0]
10043548:	50d1      	str	r1, [r2, r3]
1004354a:	3304      	adds	r3, #4
  } while (i < CSTACK_PREAMBLE_NUMBER); 
1004354c:	2b50      	cmp	r3, #80	; 0x50
1004354e:	d1f9      	bne.n	10043544 <BlueNRG_Sleep+0x368>
10043550:	4b45      	ldr	r3, [pc, #276]	; (10043668 <BlueNRG_Sleep+0x48c>)
10043552:	9a08      	ldr	r2, [sp, #32]
10043554:	601a      	str	r2, [r3, #0]
  ioEnabled = SYSTEM_CTRL->WKP_IO_IE;
10043556:	9b09      	ldr	r3, [sp, #36]	; 0x24
10043558:	7918      	ldrb	r0, [r3, #4]
  ioLevel = SYSTEM_CTRL->WKP_IO_IS;
1004355a:	781a      	ldrb	r2, [r3, #0]
  ioValue = (~((GPIO->DATA>>9) ^ ioLevel)) & ioEnabled;
1004355c:	2380      	movs	r3, #128	; 0x80
1004355e:	05db      	lsls	r3, r3, #23
10043560:	681b      	ldr	r3, [r3, #0]
10043562:	0a5b      	lsrs	r3, r3, #9
10043564:	4053      	eors	r3, r2
10043566:	4398      	bics	r0, r3
  if (ioValue){
10043568:	d000      	beq.n	1004356c <BlueNRG_Sleep+0x390>
1004356a:	e665      	b.n	10043238 <BlueNRG_Sleep+0x5c>
  if (((partInfo.die_major<<4)|(partInfo.die_cut)) >= WA_DEVICE_VERSION) {
1004356c:	aa7d      	add	r2, sp, #500	; 0x1f4
1004356e:	7853      	ldrb	r3, [r2, #1]
10043570:	7892      	ldrb	r2, [r2, #2]
10043572:	011b      	lsls	r3, r3, #4
10043574:	4313      	orrs	r3, r2
10043576:	2b11      	cmp	r3, #17
10043578:	dd03      	ble.n	10043582 <BlueNRG_Sleep+0x3a6>
    flash_sw_lock = FLASH_LOCK_WORD;
1004357a:	4b3c      	ldr	r3, [pc, #240]	; (1004366c <BlueNRG_Sleep+0x490>)
1004357c:	6018      	str	r0, [r3, #0]
    SET_BORconfigStatus(FALSE);
1004357e:	f001 fb5d 	bl	10044c3c <SET_BORconfigStatus>
  rfTimeout = BLUE_CTRL->TIMEOUT;
10043582:	2390      	movs	r3, #144	; 0x90
10043584:	05db      	lsls	r3, r3, #23
10043586:	685a      	ldr	r2, [r3, #4]
10043588:	4b39      	ldr	r3, [pc, #228]	; (10043670 <BlueNRG_Sleep+0x494>)
  SystemSleepCmd(ENABLE);
1004358a:	2001      	movs	r0, #1
  rfTimeout = BLUE_CTRL->TIMEOUT;
1004358c:	601a      	str	r2, [r3, #0]
  SystemSleepCmd(ENABLE);
1004358e:	f000 ff61 	bl	10044454 <SystemSleepCmd>
  CS_contextSave();
10043592:	f7fc fd95 	bl	100400c0 <CS_contextSave>
  SystemSleepCmd(DISABLE);
10043596:	2000      	movs	r0, #0
10043598:	f000 ff5c 	bl	10044454 <SystemSleepCmd>
  if (!wakeupFromSleepFlag) {
1004359c:	4b35      	ldr	r3, [pc, #212]	; (10043674 <BlueNRG_Sleep+0x498>)
1004359e:	781b      	ldrb	r3, [r3, #0]
100435a0:	2b00      	cmp	r3, #0
100435a2:	d000      	beq.n	100435a6 <BlueNRG_Sleep+0x3ca>
100435a4:	e0a2      	b.n	100436ec <BlueNRG_Sleep+0x510>
    if((NVIC->ISPR[0]&(1<<BLUE_CTRL_IRQn)) == 0) { //At this stage the Blue Control Interrupt shall not be pending.
100435a6:	4934      	ldr	r1, [pc, #208]	; (10043678 <BlueNRG_Sleep+0x49c>)
100435a8:	684b      	ldr	r3, [r1, #4]
100435aa:	065b      	lsls	r3, r3, #25
100435ac:	d476      	bmi.n	1004369c <BlueNRG_Sleep+0x4c0>
      if ((savedSHCSR != SCB->SHCSR)  ||                                                                //Verified if a SVCall Interrupt is pending
100435ae:	4b33      	ldr	r3, [pc, #204]	; (1004367c <BlueNRG_Sleep+0x4a0>)
100435b0:	4833      	ldr	r0, [pc, #204]	; (10043680 <BlueNRG_Sleep+0x4a4>)
      nvicPendingMask = savedNVIC_ISPR ^ NVIC->ISPR[0];
100435b2:	684a      	ldr	r2, [r1, #4]
      if ((savedSHCSR != SCB->SHCSR)  ||                                                                //Verified if a SVCall Interrupt is pending
100435b4:	6800      	ldr	r0, [r0, #0]
100435b6:	6a5c      	ldr	r4, [r3, #36]	; 0x24
100435b8:	4284      	cmp	r4, r0
100435ba:	d116      	bne.n	100435ea <BlueNRG_Sleep+0x40e>
      nvicPendingMask = savedNVIC_ISPR ^ NVIC->ISPR[0];
100435bc:	4831      	ldr	r0, [pc, #196]	; (10043684 <BlueNRG_Sleep+0x4a8>)
          ((savedNVIC_ISPR != NVIC->ISPR[0]) && (nvicPendingMask & NVIC->ISER[0]))  ||                  //Verified if a NVIC Interrupt is pending
100435be:	6849      	ldr	r1, [r1, #4]
      nvicPendingMask = savedNVIC_ISPR ^ NVIC->ISPR[0];
100435c0:	6800      	ldr	r0, [r0, #0]
      if ((savedSHCSR != SCB->SHCSR)  ||                                                                //Verified if a SVCall Interrupt is pending
100435c2:	4288      	cmp	r0, r1
100435c4:	d004      	beq.n	100435d0 <BlueNRG_Sleep+0x3f4>
          ((savedNVIC_ISPR != NVIC->ISPR[0]) && (nvicPendingMask & NVIC->ISER[0]))  ||                  //Verified if a NVIC Interrupt is pending
100435c6:	9906      	ldr	r1, [sp, #24]
      nvicPendingMask = savedNVIC_ISPR ^ NVIC->ISPR[0];
100435c8:	4042      	eors	r2, r0
          ((savedNVIC_ISPR != NVIC->ISPR[0]) && (nvicPendingMask & NVIC->ISER[0]))  ||                  //Verified if a NVIC Interrupt is pending
100435ca:	6809      	ldr	r1, [r1, #0]
100435cc:	4211      	tst	r1, r2
100435ce:	d10c      	bne.n	100435ea <BlueNRG_Sleep+0x40e>
          ((savedICSR & 0x10000000) != (SCB->ICSR & 0x10000000)) ||                                   // Verified if a PendSV interrupt is pending
100435d0:	4a2d      	ldr	r2, [pc, #180]	; (10043688 <BlueNRG_Sleep+0x4ac>)
100435d2:	6859      	ldr	r1, [r3, #4]
100435d4:	6812      	ldr	r2, [r2, #0]
100435d6:	4051      	eors	r1, r2
          ((savedNVIC_ISPR != NVIC->ISPR[0]) && (nvicPendingMask & NVIC->ISER[0]))  ||                  //Verified if a NVIC Interrupt is pending
100435d8:	00c9      	lsls	r1, r1, #3
100435da:	d406      	bmi.n	100435ea <BlueNRG_Sleep+0x40e>
          (((savedICSR & 0x4000000) != (SCB->ICSR & 0x4000000)) && (SysTick->CTRL & 0x02))) {       // Verified if a SysTick interrupt is pending
100435dc:	685b      	ldr	r3, [r3, #4]
100435de:	405a      	eors	r2, r3
          ((savedICSR & 0x10000000) != (SCB->ICSR & 0x10000000)) ||                                   // Verified if a PendSV interrupt is pending
100435e0:	0153      	lsls	r3, r2, #5
100435e2:	d55b      	bpl.n	1004369c <BlueNRG_Sleep+0x4c0>
          (((savedICSR & 0x4000000) != (SCB->ICSR & 0x4000000)) && (SysTick->CTRL & 0x02))) {       // Verified if a SysTick interrupt is pending
100435e4:	6833      	ldr	r3, [r6, #0]
100435e6:	079b      	lsls	r3, r3, #30
100435e8:	d558      	bpl.n	1004369c <BlueNRG_Sleep+0x4c0>
        savedCurrentTime = (*(volatile uint32_t *)BLUE_CURRENT_TIME_REG) >> 4;
100435ea:	4a28      	ldr	r2, [pc, #160]	; (1004368c <BlueNRG_Sleep+0x4b0>)
        if (0xFFFFF >= (savedCurrentTime+3)) { //Check if the counter are wrapping
100435ec:	4828      	ldr	r0, [pc, #160]	; (10043690 <BlueNRG_Sleep+0x4b4>)
        savedCurrentTime = (*(volatile uint32_t *)BLUE_CURRENT_TIME_REG) >> 4;
100435ee:	6813      	ldr	r3, [r2, #0]
100435f0:	091b      	lsrs	r3, r3, #4
        if (0xFFFFF >= (savedCurrentTime+3)) { //Check if the counter are wrapping
100435f2:	1cd9      	adds	r1, r3, #3
100435f4:	4281      	cmp	r1, r0
100435f6:	d869      	bhi.n	100436cc <BlueNRG_Sleep+0x4f0>
100435f8:	e04c      	b.n	10043694 <BlueNRG_Sleep+0x4b8>
100435fa:	46c0      	nop			; (mov r8, r8)
100435fc:	40200000 	.word	0x40200000
10043600:	40100000 	.word	0x40100000
10043604:	e000e100 	.word	0xe000e100
10043608:	e000ed20 	.word	0xe000ed20
1004360c:	40900000 	.word	0x40900000
10043610:	40300000 	.word	0x40300000
10043614:	40300054 	.word	0x40300054
10043618:	40300058 	.word	0x40300058
1004361c:	4030005c 	.word	0x4030005c
10043620:	40400000 	.word	0x40400000
10043624:	40300028 	.word	0x40300028
10043628:	4030002c 	.word	0x4030002c
1004362c:	40300034 	.word	0x40300034
10043630:	40300048 	.word	0x40300048
10043634:	40300050 	.word	0x40300050
10043638:	40300060 	.word	0x40300060
1004363c:	40400005 	.word	0x40400005
10043640:	00001028 	.word	0x00001028
10043644:	40f00000 	.word	0x40f00000
10043648:	40d00000 	.word	0x40d00000
1004364c:	e000e010 	.word	0xe000e010
10043650:	40700000 	.word	0x40700000
10043654:	40e00000 	.word	0x40e00000
10043658:	1acce551 	.word	0x1acce551
1004365c:	a0000008 	.word	0xa0000008
10043660:	10040000 	.word	0x10040000
10043664:	20000754 	.word	0x20000754
10043668:	20000750 	.word	0x20000750
1004366c:	20000014 	.word	0x20000014
10043670:	20000018 	.word	0x20000018
10043674:	2000000c 	.word	0x2000000c
10043678:	e000e1fc 	.word	0xe000e1fc
1004367c:	e000ed00 	.word	0xe000ed00
10043680:	2000084c 	.word	0x2000084c
10043684:	20000854 	.word	0x20000854
10043688:	20000850 	.word	0x20000850
1004368c:	48000010 	.word	0x48000010
10043690:	000fffff 	.word	0x000fffff
          while ((savedCurrentTime+3) > ((*(volatile uint32_t *)BLUE_CURRENT_TIME_REG) >> 4)); //Not Wrap
10043694:	6813      	ldr	r3, [r2, #0]
10043696:	091b      	lsrs	r3, r3, #4
10043698:	4299      	cmp	r1, r3
1004369a:	d8fb      	bhi.n	10043694 <BlueNRG_Sleep+0x4b8>
    if (((partInfo.die_major<<4)|(partInfo.die_cut)) >= WA_DEVICE_VERSION) {
1004369c:	aa7d      	add	r2, sp, #500	; 0x1f4
1004369e:	7853      	ldrb	r3, [r2, #1]
100436a0:	7892      	ldrb	r2, [r2, #2]
100436a2:	011b      	lsls	r3, r3, #4
100436a4:	4313      	orrs	r3, r2
100436a6:	2b11      	cmp	r3, #17
100436a8:	dd05      	ble.n	100436b6 <BlueNRG_Sleep+0x4da>
      SET_BORconfigStatus(TRUE);
100436aa:	2001      	movs	r0, #1
100436ac:	f001 fac6 	bl	10044c3c <SET_BORconfigStatus>
      flash_sw_lock = FLASH_UNLOCK_WORD;
100436b0:	4a0a      	ldr	r2, [pc, #40]	; (100436dc <BlueNRG_Sleep+0x500>)
100436b2:	4b0b      	ldr	r3, [pc, #44]	; (100436e0 <BlueNRG_Sleep+0x504>)
100436b4:	601a      	str	r2, [r3, #0]
    if (sleepMode == SLEEPMODE_NOTIMER) {
100436b6:	9b01      	ldr	r3, [sp, #4]
100436b8:	2b03      	cmp	r3, #3
100436ba:	d000      	beq.n	100436be <BlueNRG_Sleep+0x4e2>
100436bc:	e5bc      	b.n	10043238 <BlueNRG_Sleep+0x5c>
      BLUE_CTRL->TIMEOUT &= ~(LOW_POWER_STANDBY<<28);
100436be:	2290      	movs	r2, #144	; 0x90
100436c0:	05d2      	lsls	r2, r2, #23
100436c2:	6853      	ldr	r3, [r2, #4]
100436c4:	4907      	ldr	r1, [pc, #28]	; (100436e4 <BlueNRG_Sleep+0x508>)
100436c6:	400b      	ands	r3, r1
100436c8:	6053      	str	r3, [r2, #4]
100436ca:	e5b5      	b.n	10043238 <BlueNRG_Sleep+0x5c>
          while (((*(volatile uint32_t *)BLUE_CURRENT_TIME_REG) >> 4) != (savedCurrentTime + 3 - 0xFFFFF)); //Wrap
100436cc:	4906      	ldr	r1, [pc, #24]	; (100436e8 <BlueNRG_Sleep+0x50c>)
100436ce:	185b      	adds	r3, r3, r1
100436d0:	6811      	ldr	r1, [r2, #0]
100436d2:	0909      	lsrs	r1, r1, #4
100436d4:	4299      	cmp	r1, r3
100436d6:	d1fb      	bne.n	100436d0 <BlueNRG_Sleep+0x4f4>
100436d8:	e7e0      	b.n	1004369c <BlueNRG_Sleep+0x4c0>
100436da:	46c0      	nop			; (mov r8, r8)
100436dc:	fcecbccc 	.word	0xfcecbccc
100436e0:	20000014 	.word	0x20000014
100436e4:	cfffffff 	.word	0xcfffffff
100436e8:	fff00004 	.word	0xfff00004
    CKGEN_BLE->CLK32K_IT = 1;
100436ec:	2301      	movs	r3, #1
100436ee:	4fe4      	ldr	r7, [pc, #912]	; (10043a80 <BlueNRG_Sleep+0x8a4>)
      *ptr = cStackPreamble[i];
100436f0:	49e4      	ldr	r1, [pc, #912]	; (10043a84 <BlueNRG_Sleep+0x8a8>)
    CKGEN_BLE->CLK32K_IT = 1;
100436f2:	833b      	strh	r3, [r7, #24]
    CKGEN_BLE->CLK32K_COUNT = 0;
100436f4:	2300      	movs	r3, #0
100436f6:	81bb      	strh	r3, [r7, #12]
    CKGEN_BLE->CLK32K_PERIOD = 0;
100436f8:	613b      	str	r3, [r7, #16]
      *ptr = cStackPreamble[i];
100436fa:	58c8      	ldr	r0, [r1, r3]
100436fc:	18ea      	adds	r2, r5, r3
100436fe:	3304      	adds	r3, #4
10043700:	6010      	str	r0, [r2, #0]
    } while (i < CSTACK_PREAMBLE_NUMBER); 
10043702:	2b50      	cmp	r3, #80	; 0x50
10043704:	d1f9      	bne.n	100436fa <BlueNRG_Sleep+0x51e>
10043706:	9a08      	ldr	r2, [sp, #32]
10043708:	4bdf      	ldr	r3, [pc, #892]	; (10043a88 <BlueNRG_Sleep+0x8ac>)
    FLASH->CONFIG = FLASH_CONFIG_saved;
1004370a:	2140      	movs	r1, #64	; 0x40
1004370c:	601a      	str	r2, [r3, #0]
1004370e:	466a      	mov	r2, sp
10043710:	1852      	adds	r2, r2, r1
10043712:	9b5c      	ldr	r3, [sp, #368]	; 0x170
10043714:	8812      	ldrh	r2, [r2, #0]
    	NVIC->IP[i] = NVIC_IPR_saved[i];
10043716:	a880      	add	r0, sp, #512	; 0x200
    FLASH->CONFIG = FLASH_CONFIG_saved;
10043718:	809a      	strh	r2, [r3, #4]
    NVIC->ISER[0] = NVIC_ISER_saved;
1004371a:	9b06      	ldr	r3, [sp, #24]
1004371c:	9a11      	ldr	r2, [sp, #68]	; 0x44
1004371e:	601a      	str	r2, [r3, #0]
10043720:	2300      	movs	r3, #0
    	NVIC->IP[i] = NVIC_IPR_saved[i];
10043722:	009a      	lsls	r2, r3, #2
10043724:	5811      	ldr	r1, [r2, r0]
10043726:	001a      	movs	r2, r3
10043728:	9d06      	ldr	r5, [sp, #24]
1004372a:	32c0      	adds	r2, #192	; 0xc0
1004372c:	0092      	lsls	r2, r2, #2
1004372e:	3301      	adds	r3, #1
10043730:	50a9      	str	r1, [r5, r2]
    for (i=0; i<8; i++) {
10043732:	2b08      	cmp	r3, #8
10043734:	d1f5      	bne.n	10043722 <BlueNRG_Sleep+0x546>
    *(volatile uint32_t *)SHPR3_REG = PENDSV_SYSTICK_IPR_saved;
10043736:	9b5d      	ldr	r3, [sp, #372]	; 0x174
10043738:	9a12      	ldr	r2, [sp, #72]	; 0x48
    GPIO->MODE3 = GPIO_MODE3_saved;
1004373a:	2178      	movs	r1, #120	; 0x78
    *(volatile uint32_t *)SHPR3_REG = PENDSV_SYSTICK_IPR_saved;
1004373c:	601a      	str	r2, [r3, #0]
    CKGEN_SOC->CLOCK_EN = CLOCK_EN_saved;
1004373e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10043740:	9a13      	ldr	r2, [sp, #76]	; 0x4c
      I2Cx->RFTR = I2C_RFTR_saved[i];
10043742:	ad6f      	add	r5, sp, #444	; 0x1bc
    CKGEN_SOC->CLOCK_EN = CLOCK_EN_saved;
10043744:	621a      	str	r2, [r3, #32]
    GPIO->DATA = GPIO_DATA_saved;
10043746:	2380      	movs	r3, #128	; 0x80
10043748:	9a14      	ldr	r2, [sp, #80]	; 0x50
1004374a:	05db      	lsls	r3, r3, #23
1004374c:	601a      	str	r2, [r3, #0]
    GPIO->OEN = GPIO_OEN_saved;
1004374e:	9a15      	ldr	r2, [sp, #84]	; 0x54
10043750:	605a      	str	r2, [r3, #4]
    GPIO->PE = GPIO_PE_saved;
10043752:	9a16      	ldr	r2, [sp, #88]	; 0x58
10043754:	609a      	str	r2, [r3, #8]
    GPIO->DS = GPIO_DS_saved;
10043756:	9a17      	ldr	r2, [sp, #92]	; 0x5c
10043758:	60da      	str	r2, [r3, #12]
    GPIO->IEV = GPIO_IEV_saved;
1004375a:	9a1a      	ldr	r2, [sp, #104]	; 0x68
1004375c:	619a      	str	r2, [r3, #24]
    GPIO->IBE = GPIO_IBE_saved;
1004375e:	9a19      	ldr	r2, [sp, #100]	; 0x64
10043760:	615a      	str	r2, [r3, #20]
    GPIO->IS = GPIO_IS_saved;
10043762:	9a18      	ldr	r2, [sp, #96]	; 0x60
10043764:	611a      	str	r2, [r3, #16]
    GPIO->IC = GPIO_IE_saved; 
10043766:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10043768:	629a      	str	r2, [r3, #40]	; 0x28
    GPIO->IE = GPIO_IE_saved;
1004376a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1004376c:	61da      	str	r2, [r3, #28]
    GPIO->MODE0 = GPIO_MODE0_saved;
1004376e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
10043770:	62da      	str	r2, [r3, #44]	; 0x2c
    GPIO->MODE1 = GPIO_MODE1_saved;
10043772:	9a1c      	ldr	r2, [sp, #112]	; 0x70
10043774:	631a      	str	r2, [r3, #48]	; 0x30
    GPIO->MODE2 = GPIO_MODE2_saved;
10043776:	9a1d      	ldr	r2, [sp, #116]	; 0x74
10043778:	635a      	str	r2, [r3, #52]	; 0x34
    GPIO->MODE3 = GPIO_MODE3_saved;
1004377a:	466a      	mov	r2, sp
1004377c:	1852      	adds	r2, r2, r1
1004377e:	8812      	ldrh	r2, [r2, #0]
    UART->LCRH_RX = UART_LCRH_RX_saved;
10043780:	310c      	adds	r1, #12
    GPIO->MODE3 = GPIO_MODE3_saved;
10043782:	871a      	strh	r2, [r3, #56]	; 0x38
    GPIO->MFTX = GPIO_IOSEL_MFTX_saved;
10043784:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
10043786:	645a      	str	r2, [r3, #68]	; 0x44
    UART->TIMEOUT = UART_TIMEOUT_saved;
10043788:	9b05      	ldr	r3, [sp, #20]
1004378a:	9a20      	ldr	r2, [sp, #128]	; 0x80
1004378c:	60da      	str	r2, [r3, #12]
    UART->LCRH_RX = UART_LCRH_RX_saved;
1004378e:	466a      	mov	r2, sp
10043790:	1852      	adds	r2, r2, r1
10043792:	9b05      	ldr	r3, [sp, #20]
10043794:	7812      	ldrb	r2, [r2, #0]
    UART->IBRD = UART_IBRD_saved;
10043796:	3104      	adds	r1, #4
    UART->LCRH_RX = UART_LCRH_RX_saved;
10043798:	771a      	strb	r2, [r3, #28]
    UART->IBRD = UART_IBRD_saved;
1004379a:	466a      	mov	r2, sp
1004379c:	1852      	adds	r2, r2, r1
1004379e:	9b05      	ldr	r3, [sp, #20]
100437a0:	8812      	ldrh	r2, [r2, #0]
    UART->FBRD = UART_FBRD_saved;
100437a2:	3104      	adds	r1, #4
    UART->IBRD = UART_IBRD_saved;
100437a4:	849a      	strh	r2, [r3, #36]	; 0x24
    UART->FBRD = UART_FBRD_saved;
100437a6:	466a      	mov	r2, sp
100437a8:	1852      	adds	r2, r2, r1
100437aa:	9b5e      	ldr	r3, [sp, #376]	; 0x178
100437ac:	7812      	ldrb	r2, [r2, #0]
    UART->LCRH_TX = UART_LCRH_TX_saved;
100437ae:	3104      	adds	r1, #4
    UART->FBRD = UART_FBRD_saved;
100437b0:	701a      	strb	r2, [r3, #0]
    UART->LCRH_TX = UART_LCRH_TX_saved;
100437b2:	466a      	mov	r2, sp
100437b4:	1852      	adds	r2, r2, r1
100437b6:	9b5f      	ldr	r3, [sp, #380]	; 0x17c
100437b8:	7812      	ldrb	r2, [r2, #0]
    UART->IFLS = UART_IFLS_saved;
100437ba:	3108      	adds	r1, #8
    UART->LCRH_TX = UART_LCRH_TX_saved;
100437bc:	701a      	strb	r2, [r3, #0]
    UART->CR = UART_CR_saved;
100437be:	9b05      	ldr	r3, [sp, #20]
100437c0:	9a25      	ldr	r2, [sp, #148]	; 0x94
100437c2:	631a      	str	r2, [r3, #48]	; 0x30
    UART->IFLS = UART_IFLS_saved;
100437c4:	466a      	mov	r2, sp
100437c6:	1852      	adds	r2, r2, r1
100437c8:	9b60      	ldr	r3, [sp, #384]	; 0x180
100437ca:	7812      	ldrb	r2, [r2, #0]
    UART->IMSC = UART_IMSC_saved;
100437cc:	3104      	adds	r1, #4
    UART->IFLS = UART_IFLS_saved;
100437ce:	701a      	strb	r2, [r3, #0]
    UART->IMSC = UART_IMSC_saved;
100437d0:	466a      	mov	r2, sp
100437d2:	1852      	adds	r2, r2, r1
100437d4:	9b05      	ldr	r3, [sp, #20]
100437d6:	8812      	ldrh	r2, [r2, #0]
    UART->DMACR = UART_DMACR_saved;
100437d8:	3104      	adds	r1, #4
    UART->IMSC = UART_IMSC_saved;
100437da:	871a      	strh	r2, [r3, #56]	; 0x38
    UART->DMACR = UART_DMACR_saved;
100437dc:	466a      	mov	r2, sp
100437de:	1852      	adds	r2, r2, r1
100437e0:	9b61      	ldr	r3, [sp, #388]	; 0x184
100437e2:	7812      	ldrb	r2, [r2, #0]
    UART->XFCR = UART_XFCR_saved;
100437e4:	3104      	adds	r1, #4
    UART->DMACR = UART_DMACR_saved;
100437e6:	701a      	strb	r2, [r3, #0]
    UART->XFCR = UART_XFCR_saved;
100437e8:	466a      	mov	r2, sp
100437ea:	1852      	adds	r2, r2, r1
100437ec:	7812      	ldrb	r2, [r2, #0]
100437ee:	9b62      	ldr	r3, [sp, #392]	; 0x188
    UART->XON1 = UART_XON1_saved;
100437f0:	3104      	adds	r1, #4
    UART->XFCR = UART_XFCR_saved;
100437f2:	701a      	strb	r2, [r3, #0]
    UART->XON1 = UART_XON1_saved;
100437f4:	466a      	mov	r2, sp
100437f6:	1852      	adds	r2, r2, r1
100437f8:	9b63      	ldr	r3, [sp, #396]	; 0x18c
100437fa:	7812      	ldrb	r2, [r2, #0]
    UART->XON2 = UART_XON2_saved;
100437fc:	3104      	adds	r1, #4
    UART->XON1 = UART_XON1_saved;
100437fe:	701a      	strb	r2, [r3, #0]
    UART->XON2 = UART_XON2_saved;
10043800:	466a      	mov	r2, sp
10043802:	1852      	adds	r2, r2, r1
10043804:	9b64      	ldr	r3, [sp, #400]	; 0x190
10043806:	7812      	ldrb	r2, [r2, #0]
    UART->XOFF1 = UART_XOFF1_saved;
10043808:	3104      	adds	r1, #4
    UART->XON2 = UART_XON2_saved;
1004380a:	701a      	strb	r2, [r3, #0]
    UART->XOFF1 = UART_XOFF1_saved;
1004380c:	466a      	mov	r2, sp
1004380e:	1852      	adds	r2, r2, r1
10043810:	9b65      	ldr	r3, [sp, #404]	; 0x194
10043812:	7812      	ldrb	r2, [r2, #0]
    UART->XOFF2 = UART_XOFF2_saved;
10043814:	3104      	adds	r1, #4
    UART->XOFF1 = UART_XOFF1_saved;
10043816:	701a      	strb	r2, [r3, #0]
    UART->XOFF2 = UART_XOFF2_saved;
10043818:	466a      	mov	r2, sp
1004381a:	1852      	adds	r2, r2, r1
1004381c:	9b66      	ldr	r3, [sp, #408]	; 0x198
1004381e:	7812      	ldrb	r2, [r2, #0]
    SPI->CPSR = SPI_CPSR_saved;
10043820:	310c      	adds	r1, #12
    UART->XOFF2 = UART_XOFF2_saved;
10043822:	701a      	strb	r2, [r3, #0]
    SPI->CR0 = SPI_CR0_saved; 
10043824:	9b02      	ldr	r3, [sp, #8]
10043826:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
10043828:	601a      	str	r2, [r3, #0]
    SPI->CR1 = SPI_CR1_saved;
1004382a:	9b02      	ldr	r3, [sp, #8]
1004382c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
1004382e:	605a      	str	r2, [r3, #4]
    SPI->CPSR = SPI_CPSR_saved;
10043830:	466a      	mov	r2, sp
10043832:	1852      	adds	r2, r2, r1
10043834:	9b02      	ldr	r3, [sp, #8]
10043836:	7812      	ldrb	r2, [r2, #0]
    SPI->IMSC = SPI_IMSC_saved;
10043838:	3104      	adds	r1, #4
    SPI->CPSR = SPI_CPSR_saved;
1004383a:	741a      	strb	r2, [r3, #16]
    SPI->IMSC = SPI_IMSC_saved;
1004383c:	466a      	mov	r2, sp
1004383e:	1852      	adds	r2, r2, r1
10043840:	9b02      	ldr	r3, [sp, #8]
10043842:	7812      	ldrb	r2, [r2, #0]
    SPI->DMACR = SPI_DMACR_saved;
10043844:	3104      	adds	r1, #4
    SPI->IMSC = SPI_IMSC_saved;
10043846:	751a      	strb	r2, [r3, #20]
    SPI->DMACR = SPI_DMACR_saved;
10043848:	466a      	mov	r2, sp
1004384a:	1852      	adds	r2, r2, r1
1004384c:	9b67      	ldr	r3, [sp, #412]	; 0x19c
1004384e:	7812      	ldrb	r2, [r2, #0]
    SPI->RXFRM = SPI_RXFRM_saved;
10043850:	3104      	adds	r1, #4
    SPI->DMACR = SPI_DMACR_saved;
10043852:	77da      	strb	r2, [r3, #31]
    SPI->RXFRM = SPI_RXFRM_saved;
10043854:	466a      	mov	r2, sp
10043856:	1852      	adds	r2, r2, r1
10043858:	9b02      	ldr	r3, [sp, #8]
1004385a:	8812      	ldrh	r2, [r2, #0]
    SPI->WDTXF = SPI_WDTXF_saved;
1004385c:	3108      	adds	r1, #8
    SPI->RXFRM = SPI_RXFRM_saved;
1004385e:	851a      	strh	r2, [r3, #40]	; 0x28
    SPI->CHN = SPI_CHN_saved;
10043860:	9b02      	ldr	r3, [sp, #8]
10043862:	9a34      	ldr	r2, [sp, #208]	; 0xd0
10043864:	62da      	str	r2, [r3, #44]	; 0x2c
    SPI->WDTXF = SPI_WDTXF_saved;
10043866:	466a      	mov	r2, sp
10043868:	1852      	adds	r2, r2, r1
1004386a:	9b02      	ldr	r3, [sp, #8]
1004386c:	8812      	ldrh	r2, [r2, #0]
1004386e:	861a      	strh	r2, [r3, #48]	; 0x30
      I2Cx->CR = I2C_CR_saved[i];
10043870:	aa69      	add	r2, sp, #420	; 0x1a4
    SPI->WDTXF = SPI_WDTXF_saved;
10043872:	2300      	movs	r3, #0
      I2Cx->CR = I2C_CR_saved[i];
10043874:	4694      	mov	ip, r2
10043876:	4661      	mov	r1, ip
      I2Cx->SCR = I2C_SCR_saved[i];
10043878:	200c      	movs	r0, #12
1004387a:	4a84      	ldr	r2, [pc, #528]	; (10043a8c <BlueNRG_Sleep+0x8b0>)
      I2Cx->CR = I2C_CR_saved[i];
1004387c:	5859      	ldr	r1, [r3, r1]
1004387e:	189a      	adds	r2, r3, r2
10043880:	0492      	lsls	r2, r2, #18
10043882:	6011      	str	r1, [r2, #0]
      I2Cx->SCR = I2C_SCR_saved[i];
10043884:	a968      	add	r1, sp, #416	; 0x1a0
10043886:	1809      	adds	r1, r1, r0
10043888:	58c9      	ldr	r1, [r1, r3]
      I2Cx->TFTR = I2C_TFTR_saved[i];
1004388a:	3008      	adds	r0, #8
      I2Cx->SCR = I2C_SCR_saved[i];
1004388c:	6051      	str	r1, [r2, #4]
1004388e:	9102      	str	r1, [sp, #8]
      I2Cx->TFTR = I2C_TFTR_saved[i];
10043890:	a968      	add	r1, sp, #416	; 0x1a0
10043892:	1809      	adds	r1, r1, r0
10043894:	5ac9      	ldrh	r1, [r1, r3]
10043896:	8391      	strh	r1, [r2, #28]
      I2Cx->RFTR = I2C_RFTR_saved[i];
10043898:	5b59      	ldrh	r1, [r3, r5]
1004389a:	8411      	strh	r1, [r2, #32]
      I2Cx->DMAR = I2C_DMAR_saved[i];
1004389c:	a971      	add	r1, sp, #452	; 0x1c4
1004389e:	5859      	ldr	r1, [r3, r1]
100438a0:	b289      	uxth	r1, r1
100438a2:	8491      	strh	r1, [r2, #36]	; 0x24
      I2Cx->BRCR = I2C_BRCR_saved[i];
100438a4:	a973      	add	r1, sp, #460	; 0x1cc
100438a6:	5859      	ldr	r1, [r3, r1]
100438a8:	b289      	uxth	r1, r1
100438aa:	8511      	strh	r1, [r2, #40]	; 0x28
      I2Cx->IMSCR = I2C_IMSCR_saved[i];
100438ac:	a975      	add	r1, sp, #468	; 0x1d4
100438ae:	5859      	ldr	r1, [r3, r1]
100438b0:	62d1      	str	r1, [r2, #44]	; 0x2c
      I2Cx->THDDAT = I2C_THDDAT_saved[i];
100438b2:	a977      	add	r1, sp, #476	; 0x1dc
100438b4:	5859      	ldr	r1, [r3, r1]
100438b6:	b288      	uxth	r0, r1
100438b8:	0011      	movs	r1, r2
100438ba:	314c      	adds	r1, #76	; 0x4c
100438bc:	8008      	strh	r0, [r1, #0]
      I2Cx->THDSTA_FST_STD = I2C_THDSTA_FST_STD_saved[i];
100438be:	a979      	add	r1, sp, #484	; 0x1e4
100438c0:	5859      	ldr	r1, [r3, r1]
100438c2:	6511      	str	r1, [r2, #80]	; 0x50
      I2Cx->TSUSTA_FST_STD = I2C_TSUSTA_FST_STD_saved[i];
100438c4:	a97b      	add	r1, sp, #492	; 0x1ec
100438c6:	5859      	ldr	r1, [r3, r1]
100438c8:	3304      	adds	r3, #4
100438ca:	6591      	str	r1, [r2, #88]	; 0x58
    for (i=0; i<2; i++) {
100438cc:	2b08      	cmp	r3, #8
100438ce:	d1d2      	bne.n	10043876 <BlueNRG_Sleep+0x69a>
    RNG->CR = RNG_CR_saved;  
100438d0:	23b0      	movs	r3, #176	; 0xb0
100438d2:	9a36      	ldr	r2, [sp, #216]	; 0xd8
100438d4:	061b      	lsls	r3, r3, #24
100438d6:	601a      	str	r2, [r3, #0]
    SysTick->LOAD = SYST_RVR_saved;
100438d8:	9b51      	ldr	r3, [sp, #324]	; 0x144
    SysTick->CTRL = SYST_CSR_saved;
100438da:	9a50      	ldr	r2, [sp, #320]	; 0x140
    SysTick->LOAD = SYST_RVR_saved;
100438dc:	6073      	str	r3, [r6, #4]
    SysTick->VAL = 0;
100438de:	2300      	movs	r3, #0
100438e0:	60b3      	str	r3, [r6, #8]
    SysTick->CTRL = SYST_CSR_saved;
100438e2:	6032      	str	r2, [r6, #0]
    RTC->CWDMR = RTC_CWDMR_saved;
100438e4:	9a37      	ldr	r2, [sp, #220]	; 0xdc
    RTC->CWYMR = RTC_CWYMR_saved;
100438e6:	21e4      	movs	r1, #228	; 0xe4
    RTC->CWDMR = RTC_CWDMR_saved;
100438e8:	6062      	str	r2, [r4, #4]
    RTC->CWDLR = RTC_CWDLR_saved;
100438ea:	9a38      	ldr	r2, [sp, #224]	; 0xe0
    MFT1->TNCRA = T1CRA_saved;
100438ec:	2088      	movs	r0, #136	; 0x88
    RTC->CWDLR = RTC_CWDLR_saved;
100438ee:	60a2      	str	r2, [r4, #8]
    RTC->CWYMR = RTC_CWYMR_saved;
100438f0:	466a      	mov	r2, sp
100438f2:	1852      	adds	r2, r2, r1
100438f4:	8812      	ldrh	r2, [r2, #0]
    RTC->CWYLR = RTC_CWYLR_saved;
100438f6:	3104      	adds	r1, #4
    RTC->CWYMR = RTC_CWYMR_saved;
100438f8:	8222      	strh	r2, [r4, #16]
    RTC->CWYLR = RTC_CWYLR_saved;
100438fa:	466a      	mov	r2, sp
100438fc:	1852      	adds	r2, r2, r1
100438fe:	8812      	ldrh	r2, [r2, #0]
    RTC->IMSC = RTC_IMSC_saved;
10043900:	3108      	adds	r1, #8
    RTC->CWYLR = RTC_CWYLR_saved;
10043902:	82a2      	strh	r2, [r4, #20]
    RTC->CTCR = RTC_CTCR_saved;
10043904:	9a3b      	ldr	r2, [sp, #236]	; 0xec
    MFT1->TNCRA = T1CRA_saved;
10043906:	0040      	lsls	r0, r0, #1
    RTC->CTCR = RTC_CTCR_saved;
10043908:	61a2      	str	r2, [r4, #24]
    RTC->IMSC = RTC_IMSC_saved;
1004390a:	466a      	mov	r2, sp
1004390c:	1852      	adds	r2, r2, r1
1004390e:	7812      	ldrb	r2, [r2, #0]
    RTC->TCR = RTC_TCR_saved; /* Enable moved at the end of RTC configuration */
10043910:	3104      	adds	r1, #4
    RTC->IMSC = RTC_IMSC_saved;
10043912:	7722      	strb	r2, [r4, #28]
    RTC->TLR1 = RTC_TLR1_saved;
10043914:	9a3e      	ldr	r2, [sp, #248]	; 0xf8
10043916:	2605      	movs	r6, #5
10043918:	6362      	str	r2, [r4, #52]	; 0x34
    RTC->TLR2 = RTC_TLR2_saved;
1004391a:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
      DMAx->CNDTR = DMA_CNDTR_saved[i];
1004391c:	ad90      	add	r5, sp, #576	; 0x240
    RTC->TLR2 = RTC_TLR2_saved;
1004391e:	63a2      	str	r2, [r4, #56]	; 0x38
    RTC->TPR1 = RTC_TPR1_saved;
10043920:	9a40      	ldr	r2, [sp, #256]	; 0x100
10043922:	63e2      	str	r2, [r4, #60]	; 0x3c
    RTC->TPR2 = RTC_TPR2_saved;
10043924:	9a41      	ldr	r2, [sp, #260]	; 0x104
10043926:	6422      	str	r2, [r4, #64]	; 0x40
    RTC->TPR3 = RTC_TPR3_saved;
10043928:	9a42      	ldr	r2, [sp, #264]	; 0x108
1004392a:	6462      	str	r2, [r4, #68]	; 0x44
    RTC->TPR4 = RTC_TPR4_saved; 
1004392c:	9a43      	ldr	r2, [sp, #268]	; 0x10c
1004392e:	64a2      	str	r2, [r4, #72]	; 0x48
    RTC->TCR = RTC_TCR_saved; /* Enable moved at the end of RTC configuration */
10043930:	466a      	mov	r2, sp
10043932:	1852      	adds	r2, r2, r1
    MFT1->TNCRA = T1CRA_saved;
10043934:	4669      	mov	r1, sp
    RTC->TCR = RTC_TCR_saved; /* Enable moved at the end of RTC configuration */
10043936:	8812      	ldrh	r2, [r2, #0]
    MFT1->TNCRA = T1CRA_saved;
10043938:	1809      	adds	r1, r1, r0
    RTC->TCR = RTC_TCR_saved; /* Enable moved at the end of RTC configuration */
1004393a:	8622      	strh	r2, [r4, #48]	; 0x30
    MFT1->TNCRA = T1CRA_saved;
1004393c:	9a03      	ldr	r2, [sp, #12]
1004393e:	8809      	ldrh	r1, [r1, #0]
    MFT1->TNCRB = T1CRB_saved;
10043940:	3004      	adds	r0, #4
    MFT1->TNCRA = T1CRA_saved;
10043942:	8091      	strh	r1, [r2, #4]
    MFT1->TNCRB = T1CRB_saved;
10043944:	4669      	mov	r1, sp
10043946:	1809      	adds	r1, r1, r0
10043948:	9a03      	ldr	r2, [sp, #12]
1004394a:	8809      	ldrh	r1, [r1, #0]
    MFT1->TNPRSC = T1PRSC_saved;
1004394c:	3004      	adds	r0, #4
    MFT1->TNCRB = T1CRB_saved;
1004394e:	8111      	strh	r1, [r2, #8]
    MFT1->TNPRSC = T1PRSC_saved;
10043950:	4669      	mov	r1, sp
10043952:	1809      	adds	r1, r1, r0
10043954:	9a03      	ldr	r2, [sp, #12]
10043956:	7809      	ldrb	r1, [r1, #0]
    MFT1->TNCKC = T1CKC_saved;
10043958:	3004      	adds	r0, #4
    MFT1->TNPRSC = T1PRSC_saved;
1004395a:	7411      	strb	r1, [r2, #16]
    MFT1->TNCKC = T1CKC_saved;
1004395c:	4669      	mov	r1, sp
1004395e:	1809      	adds	r1, r1, r0
10043960:	9a03      	ldr	r2, [sp, #12]
10043962:	7809      	ldrb	r1, [r1, #0]
    MFT1->TNICTRL = T1ICTRL_saved;
10043964:	2492      	movs	r4, #146	; 0x92
    MFT1->TNCKC = T1CKC_saved;
10043966:	7511      	strb	r1, [r2, #20]
    MFT1->TNMCTRL = T1MCTRL_saved & ~((uint32_t)(1<<6));
10043968:	2140      	movs	r1, #64	; 0x40
1004396a:	9a48      	ldr	r2, [sp, #288]	; 0x120
1004396c:	9803      	ldr	r0, [sp, #12]
1004396e:	438a      	bics	r2, r1
10043970:	8302      	strh	r2, [r0, #24]
    MFT1->TNICTRL = T1ICTRL_saved;
10043972:	4668      	mov	r0, sp
10043974:	0064      	lsls	r4, r4, #1
10043976:	1900      	adds	r0, r0, r4
10043978:	9a03      	ldr	r2, [sp, #12]
1004397a:	7800      	ldrb	r0, [r0, #0]
    MFT2->TNCRA = T2CRA_saved;
1004397c:	3404      	adds	r4, #4
    MFT1->TNICTRL = T1ICTRL_saved;
1004397e:	7710      	strb	r0, [r2, #28]
    MFT2->TNCRA = T2CRA_saved;
10043980:	4668      	mov	r0, sp
10043982:	1900      	adds	r0, r0, r4
10043984:	9a04      	ldr	r2, [sp, #16]
10043986:	8800      	ldrh	r0, [r0, #0]
    MFT2->TNCRB = T2CRB_saved;
10043988:	3404      	adds	r4, #4
    MFT2->TNCRA = T2CRA_saved;
1004398a:	8090      	strh	r0, [r2, #4]
    MFT2->TNCRB = T2CRB_saved;
1004398c:	4668      	mov	r0, sp
1004398e:	1900      	adds	r0, r0, r4
10043990:	9a04      	ldr	r2, [sp, #16]
10043992:	8800      	ldrh	r0, [r0, #0]
    MFT2->TNPRSC = T2PRSC_saved;
10043994:	3404      	adds	r4, #4
    MFT2->TNCRB = T2CRB_saved;
10043996:	8110      	strh	r0, [r2, #8]
    MFT2->TNPRSC = T2PRSC_saved;
10043998:	4668      	mov	r0, sp
1004399a:	1900      	adds	r0, r0, r4
1004399c:	9a04      	ldr	r2, [sp, #16]
1004399e:	7800      	ldrb	r0, [r0, #0]
    MFT2->TNCKC = T2CKC_saved;
100439a0:	3404      	adds	r4, #4
    MFT2->TNPRSC = T2PRSC_saved;
100439a2:	7410      	strb	r0, [r2, #16]
    MFT2->TNCKC = T2CKC_saved;
100439a4:	4668      	mov	r0, sp
100439a6:	1900      	adds	r0, r0, r4
100439a8:	9a04      	ldr	r2, [sp, #16]
100439aa:	7800      	ldrb	r0, [r0, #0]
      DMAx->CCR = DMA_CCR_saved[i] ;
100439ac:	ac88      	add	r4, sp, #544	; 0x220
    MFT2->TNCKC = T2CKC_saved;
100439ae:	7510      	strb	r0, [r2, #20]
    MFT2->TNMCTRL = T2MCTRL_saved & ~((uint32_t)(1<<6));
100439b0:	9a4e      	ldr	r2, [sp, #312]	; 0x138
    MFT2->TNICTRL = T2ICTRL_saved;
100439b2:	209e      	movs	r0, #158	; 0x9e
    MFT2->TNMCTRL = T2MCTRL_saved & ~((uint32_t)(1<<6));
100439b4:	438a      	bics	r2, r1
100439b6:	9904      	ldr	r1, [sp, #16]
    MFT2->TNICTRL = T2ICTRL_saved;
100439b8:	0040      	lsls	r0, r0, #1
    MFT2->TNMCTRL = T2MCTRL_saved & ~((uint32_t)(1<<6));
100439ba:	830a      	strh	r2, [r1, #24]
    MFT2->TNICTRL = T2ICTRL_saved;
100439bc:	4669      	mov	r1, sp
100439be:	1809      	adds	r1, r1, r0
100439c0:	9a04      	ldr	r2, [sp, #16]
100439c2:	7809      	ldrb	r1, [r1, #0]
    WDG->CR = WDG_CR_saved;
100439c4:	3010      	adds	r0, #16
    MFT2->TNICTRL = T2ICTRL_saved;
100439c6:	7711      	strb	r1, [r2, #28]
    WDG->LR = WDG_LR_saved;
100439c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100439ca:	9952      	ldr	r1, [sp, #328]	; 0x148
100439cc:	6011      	str	r1, [r2, #0]
    WDG->CR = WDG_CR_saved;
100439ce:	4669      	mov	r1, sp
100439d0:	1809      	adds	r1, r1, r0
100439d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100439d4:	7809      	ldrb	r1, [r1, #0]
100439d6:	7211      	strb	r1, [r2, #8]
    WDG->LOCK = WDG_LOCK_saved;
100439d8:	22c0      	movs	r2, #192	; 0xc0
100439da:	980d      	ldr	r0, [sp, #52]	; 0x34
100439dc:	990a      	ldr	r1, [sp, #40]	; 0x28
100439de:	0112      	lsls	r2, r2, #4
100439e0:	5088      	str	r0, [r1, r2]
      DMAx->CPAR = DMA_CPAR_saved[i];
100439e2:	a898      	add	r0, sp, #608	; 0x260
100439e4:	0032      	movs	r2, r6
100439e6:	435a      	muls	r2, r3
100439e8:	4929      	ldr	r1, [pc, #164]	; (10043a90 <BlueNRG_Sleep+0x8b4>)
100439ea:	1852      	adds	r2, r2, r1
      DMAx->CNDTR = DMA_CNDTR_saved[i];
100439ec:	5959      	ldr	r1, [r3, r5]
100439ee:	6051      	str	r1, [r2, #4]
      DMAx->CCR = DMA_CCR_saved[i] ;
100439f0:	5919      	ldr	r1, [r3, r4]
100439f2:	6011      	str	r1, [r2, #0]
      DMAx->CPAR = DMA_CPAR_saved[i];
100439f4:	5819      	ldr	r1, [r3, r0]
100439f6:	6091      	str	r1, [r2, #8]
      DMAx->CMAR = DMA_CMAR[i];
100439f8:	a9a0      	add	r1, sp, #640	; 0x280
100439fa:	5859      	ldr	r1, [r3, r1]
100439fc:	3304      	adds	r3, #4
100439fe:	60d1      	str	r1, [r2, #12]
    for (i=0; i<8; i++) {
10043a00:	2b20      	cmp	r3, #32
10043a02:	d1ef      	bne.n	100439e4 <BlueNRG_Sleep+0x808>
    ADC->CONF = ADC_CONF_saved;
10043a04:	2381      	movs	r3, #129	; 0x81
10043a06:	9a54      	ldr	r2, [sp, #336]	; 0x150
10043a08:	05db      	lsls	r3, r3, #23
    ADC->IRQMASK = ADC_IRQMASK_saved;
10043a0a:	21aa      	movs	r1, #170	; 0xaa
    ADC->CONF = ADC_CONF_saved;
10043a0c:	605a      	str	r2, [r3, #4]
    ADC->IRQMASK = ADC_IRQMASK_saved;
10043a0e:	466a      	mov	r2, sp
10043a10:	0049      	lsls	r1, r1, #1
10043a12:	1852      	adds	r2, r2, r1
10043a14:	7812      	ldrb	r2, [r2, #0]
    ADC->OFFSET_MSB = ADC_OFFSET_MSB_saved;
10043a16:	3104      	adds	r1, #4
    ADC->IRQMASK = ADC_IRQMASK_saved;
10043a18:	731a      	strb	r2, [r3, #12]
    ADC->OFFSET_MSB = ADC_OFFSET_MSB_saved;
10043a1a:	466a      	mov	r2, sp
10043a1c:	1852      	adds	r2, r2, r1
10043a1e:	8812      	ldrh	r2, [r2, #0]
    ADC->OFFSET_LSB = ADC_OFFSET_LSB_saved;
10043a20:	3104      	adds	r1, #4
    ADC->OFFSET_MSB = ADC_OFFSET_MSB_saved;
10043a22:	835a      	strh	r2, [r3, #26]
    ADC->OFFSET_LSB = ADC_OFFSET_LSB_saved;
10043a24:	466a      	mov	r2, sp
10043a26:	1852      	adds	r2, r2, r1
10043a28:	8812      	ldrh	r2, [r2, #0]
    ADC->CTRL = ADC_CTRL_saved;
10043a2a:	310c      	adds	r1, #12
    ADC->OFFSET_LSB = ADC_OFFSET_LSB_saved;
10043a2c:	831a      	strh	r2, [r3, #24]
    ADC->THRESHOLD_HI = ADC_THRESHOLD_HI_saved;
10043a2e:	9a58      	ldr	r2, [sp, #352]	; 0x160
10043a30:	625a      	str	r2, [r3, #36]	; 0x24
    ADC->THRESHOLD_LO = ADC_THRESHOLD_LO_saved;
10043a32:	9a59      	ldr	r2, [sp, #356]	; 0x164
10043a34:	629a      	str	r2, [r3, #40]	; 0x28
    ADC->CTRL = ADC_CTRL_saved;
10043a36:	466a      	mov	r2, sp
10043a38:	1852      	adds	r2, r2, r1
10043a3a:	8812      	ldrh	r2, [r2, #0]
10043a3c:	801a      	strh	r2, [r3, #0]
    PKA->IEN = PKA_IEN_saved;
10043a3e:	23c0      	movs	r3, #192	; 0xc0
10043a40:	9a5b      	ldr	r2, [sp, #364]	; 0x16c
10043a42:	061b      	lsls	r3, r3, #24
10043a44:	609a      	str	r2, [r3, #8]
    if ((CKGEN_SOC->REASON_RST == 0) && gpioWakeBitMask) {
10043a46:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10043a48:	7a1b      	ldrb	r3, [r3, #8]
10043a4a:	2b00      	cmp	r3, #0
10043a4c:	d143      	bne.n	10043ad6 <BlueNRG_Sleep+0x8fa>
10043a4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10043a50:	2b00      	cmp	r3, #0
10043a52:	d040      	beq.n	10043ad6 <BlueNRG_Sleep+0x8fa>
      if ((((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO9) == WAKENED_FROM_IO9) && (GPIO->IE & GPIO_Pin_9))   ||
10043a54:	2209      	movs	r2, #9
10043a56:	893b      	ldrh	r3, [r7, #8]
10043a58:	4013      	ands	r3, r2
10043a5a:	4293      	cmp	r3, r2
10043a5c:	d104      	bne.n	10043a68 <BlueNRG_Sleep+0x88c>
10043a5e:	2380      	movs	r3, #128	; 0x80
10043a60:	05db      	lsls	r3, r3, #23
10043a62:	69db      	ldr	r3, [r3, #28]
10043a64:	059b      	lsls	r3, r3, #22
10043a66:	d433      	bmi.n	10043ad0 <BlueNRG_Sleep+0x8f4>
10043a68:	2211      	movs	r2, #17
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO10) == WAKENED_FROM_IO10) && (GPIO->IE & GPIO_Pin_10)) ||
10043a6a:	893b      	ldrh	r3, [r7, #8]
      if ((((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO9) == WAKENED_FROM_IO9) && (GPIO->IE & GPIO_Pin_9))   ||
10043a6c:	4013      	ands	r3, r2
10043a6e:	4293      	cmp	r3, r2
10043a70:	d110      	bne.n	10043a94 <BlueNRG_Sleep+0x8b8>
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO10) == WAKENED_FROM_IO10) && (GPIO->IE & GPIO_Pin_10)) ||
10043a72:	2380      	movs	r3, #128	; 0x80
10043a74:	05db      	lsls	r3, r3, #23
10043a76:	69db      	ldr	r3, [r3, #28]
10043a78:	055b      	lsls	r3, r3, #21
10043a7a:	d429      	bmi.n	10043ad0 <BlueNRG_Sleep+0x8f4>
10043a7c:	e00a      	b.n	10043a94 <BlueNRG_Sleep+0x8b8>
10043a7e:	46c0      	nop			; (mov r8, r8)
10043a80:	48100000 	.word	0x48100000
10043a84:	20000754 	.word	0x20000754
10043a88:	20000750 	.word	0x20000750
10043a8c:	00001028 	.word	0x00001028
10043a90:	a0000008 	.word	0xa0000008
10043a94:	2221      	movs	r2, #33	; 0x21
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO11) == WAKENED_FROM_IO11) && (GPIO->IE & GPIO_Pin_11)) ||
10043a96:	893b      	ldrh	r3, [r7, #8]
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO10) == WAKENED_FROM_IO10) && (GPIO->IE & GPIO_Pin_10)) ||
10043a98:	4013      	ands	r3, r2
10043a9a:	4293      	cmp	r3, r2
10043a9c:	d104      	bne.n	10043aa8 <BlueNRG_Sleep+0x8cc>
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO11) == WAKENED_FROM_IO11) && (GPIO->IE & GPIO_Pin_11)) ||
10043a9e:	2380      	movs	r3, #128	; 0x80
10043aa0:	05db      	lsls	r3, r3, #23
10043aa2:	69db      	ldr	r3, [r3, #28]
10043aa4:	051b      	lsls	r3, r3, #20
10043aa6:	d413      	bmi.n	10043ad0 <BlueNRG_Sleep+0x8f4>
10043aa8:	2241      	movs	r2, #65	; 0x41
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO12) == WAKENED_FROM_IO12) && (GPIO->IE & GPIO_Pin_12)) ||
10043aaa:	893b      	ldrh	r3, [r7, #8]
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO11) == WAKENED_FROM_IO11) && (GPIO->IE & GPIO_Pin_11)) ||
10043aac:	4013      	ands	r3, r2
10043aae:	4293      	cmp	r3, r2
10043ab0:	d104      	bne.n	10043abc <BlueNRG_Sleep+0x8e0>
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO12) == WAKENED_FROM_IO12) && (GPIO->IE & GPIO_Pin_12)) ||
10043ab2:	2380      	movs	r3, #128	; 0x80
10043ab4:	05db      	lsls	r3, r3, #23
10043ab6:	69db      	ldr	r3, [r3, #28]
10043ab8:	04db      	lsls	r3, r3, #19
10043aba:	d409      	bmi.n	10043ad0 <BlueNRG_Sleep+0x8f4>
10043abc:	2281      	movs	r2, #129	; 0x81
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO13) == WAKENED_FROM_IO13) && (GPIO->IE & GPIO_Pin_13))) {
10043abe:	893b      	ldrh	r3, [r7, #8]
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO12) == WAKENED_FROM_IO12) && (GPIO->IE & GPIO_Pin_12)) ||
10043ac0:	4013      	ands	r3, r2
10043ac2:	4293      	cmp	r3, r2
10043ac4:	d107      	bne.n	10043ad6 <BlueNRG_Sleep+0x8fa>
          (((CKGEN_BLE->REASON_RST & WAKENED_FROM_IO13) == WAKENED_FROM_IO13) && (GPIO->IE & GPIO_Pin_13))) {
10043ac6:	2380      	movs	r3, #128	; 0x80
10043ac8:	05db      	lsls	r3, r3, #23
10043aca:	69db      	ldr	r3, [r3, #28]
10043acc:	049b      	lsls	r3, r3, #18
10043ace:	d502      	bpl.n	10043ad6 <BlueNRG_Sleep+0x8fa>
        NVIC->ISPR[0] = 1<<GPIO_IRQn;
10043ad0:	2201      	movs	r2, #1
10043ad2:	4b21      	ldr	r3, [pc, #132]	; (10043b58 <BlueNRG_Sleep+0x97c>)
10043ad4:	605a      	str	r2, [r3, #4]
    if (sleepMode == SLEEPMODE_NOTIMER) {
10043ad6:	9b01      	ldr	r3, [sp, #4]
10043ad8:	2b03      	cmp	r3, #3
10043ada:	d105      	bne.n	10043ae8 <BlueNRG_Sleep+0x90c>
      BLUE_CTRL->TIMEOUT &= ~(LOW_POWER_STANDBY<<28);
10043adc:	2290      	movs	r2, #144	; 0x90
10043ade:	05d2      	lsls	r2, r2, #23
10043ae0:	6853      	ldr	r3, [r2, #4]
10043ae2:	491e      	ldr	r1, [pc, #120]	; (10043b5c <BlueNRG_Sleep+0x980>)
10043ae4:	400b      	ands	r3, r1
10043ae6:	6053      	str	r3, [r2, #4]
    SYSTEM_CTRL->CTRL = SYS_Ctrl_saved;
10043ae8:	466a      	mov	r2, sp
10043aea:	212c      	movs	r1, #44	; 0x2c
10043aec:	1852      	adds	r2, r2, r1
10043aee:	9b09      	ldr	r3, [sp, #36]	; 0x24
10043af0:	7812      	ldrb	r2, [r2, #0]
10043af2:	721a      	strb	r2, [r3, #8]
    if (sleepMode == SLEEPMODE_NOTIMER) {
10043af4:	9b01      	ldr	r3, [sp, #4]
10043af6:	2b03      	cmp	r3, #3
10043af8:	d12b      	bne.n	10043b52 <BlueNRG_Sleep+0x976>
      DeviceConfiguration(FALSE, TRUE);
10043afa:	2000      	movs	r0, #0
10043afc:	392b      	subs	r1, #43	; 0x2b
      DeviceConfiguration(FALSE, FALSE);
10043afe:	f001 f965 	bl	10044dcc <DeviceConfiguration>
    if (SYS_Ctrl_saved & 1) {
10043b02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10043b04:	07db      	lsls	r3, r3, #31
10043b06:	d401      	bmi.n	10043b0c <BlueNRG_Sleep+0x930>
10043b08:	f7ff fb96 	bl	10043238 <BlueNRG_Sleep+0x5c>
  reset_reason = SysCtrl_GetWakeupResetReason();
10043b0c:	f000 fb6a 	bl	100441e4 <SysCtrl_GetWakeupResetReason>
10043b10:	ab68      	add	r3, sp, #416	; 0x1a0
10043b12:	8058      	strh	r0, [r3, #2]
10043b14:	3302      	adds	r3, #2
  if (!((reset_reason &  RESET_BLE_WAKEUP_FROM_TIMER1) || ((__blue_RAM.BlueGlobVar.Config & 8U) == 0))) { //    ((*(volatile uint32_t*)0x200000C0 & 8U) == 0U))) {
10043b16:	881b      	ldrh	r3, [r3, #0]
10043b18:	055b      	lsls	r3, r3, #21
10043b1a:	d415      	bmi.n	10043b48 <BlueNRG_Sleep+0x96c>
10043b1c:	4b10      	ldr	r3, [pc, #64]	; (10043b60 <BlueNRG_Sleep+0x984>)
10043b1e:	881b      	ldrh	r3, [r3, #0]
10043b20:	071b      	lsls	r3, r3, #28
10043b22:	d511      	bpl.n	10043b48 <BlueNRG_Sleep+0x96c>
    currTimeTHR = BLUE_CTRL->CURRENT_TIME;
10043b24:	2290      	movs	r2, #144	; 0x90
    time_diff = abs(TIME24_DIFF(rfTimeout, currTimeTHR));
10043b26:	4b0f      	ldr	r3, [pc, #60]	; (10043b64 <BlueNRG_Sleep+0x988>)
    currTimeTHR = BLUE_CTRL->CURRENT_TIME;
10043b28:	05d2      	lsls	r2, r2, #23
10043b2a:	6911      	ldr	r1, [r2, #16]
    time_diff = abs(TIME24_DIFF(rfTimeout, currTimeTHR));
10043b2c:	681b      	ldr	r3, [r3, #0]
10043b2e:	1a5b      	subs	r3, r3, r1
10043b30:	021b      	lsls	r3, r3, #8
10043b32:	121b      	asrs	r3, r3, #8
10043b34:	17d9      	asrs	r1, r3, #31
10043b36:	185b      	adds	r3, r3, r1
10043b38:	404b      	eors	r3, r1
    if (time_diff <= 32) { 
10043b3a:	2b20      	cmp	r3, #32
10043b3c:	dc04      	bgt.n	10043b48 <BlueNRG_Sleep+0x96c>
      currTimeTHR = BLUE_CTRL->CURRENT_TIME + 45;
10043b3e:	6913      	ldr	r3, [r2, #16]
10043b40:	332d      	adds	r3, #45	; 0x2d
      while (BLUE_CTRL->CURRENT_TIME <= currTimeTHR);
10043b42:	6911      	ldr	r1, [r2, #16]
10043b44:	428b      	cmp	r3, r1
10043b46:	d2fc      	bcs.n	10043b42 <BlueNRG_Sleep+0x966>
  AHBUPCONV->COMMAND = 0x15;
10043b48:	2215      	movs	r2, #21
10043b4a:	4b07      	ldr	r3, [pc, #28]	; (10043b68 <BlueNRG_Sleep+0x98c>)
10043b4c:	701a      	strb	r2, [r3, #0]
10043b4e:	f7ff fb73 	bl	10043238 <BlueNRG_Sleep+0x5c>
      DeviceConfiguration(FALSE, FALSE);
10043b52:	2100      	movs	r1, #0
10043b54:	0008      	movs	r0, r1
10043b56:	e7d2      	b.n	10043afe <BlueNRG_Sleep+0x922>
10043b58:	e000e1fc 	.word	0xe000e1fc
10043b5c:	cfffffff 	.word	0xcfffffff
10043b60:	200000c0 	.word	0x200000c0
10043b64:	20000018 	.word	0x20000018
10043b68:	40c00000 	.word	0x40c00000

10043b6c <ADC_ConvertDifferentialVoltage>:
* @brief  Convert raw ADC value in converted differential voltage value.
* @param  raw_value: ADC raw value
* @retval float: converted differential voltage value
*/
float ADC_ConvertDifferentialVoltage(int16_t raw_value, uint8_t attenuation)
{
10043b6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  float pga, raw_value_f, divider;
  
  if( ADC->CONF_b.SKIP == 1) {
10043b6e:	2781      	movs	r7, #129	; 0x81
10043b70:	05ff      	lsls	r7, r7, #23
10043b72:	687b      	ldr	r3, [r7, #4]
{
10043b74:	0005      	movs	r5, r0
  if( ADC->CONF_b.SKIP == 1) {
10043b76:	035b      	lsls	r3, r3, #13
10043b78:	d429      	bmi.n	10043bce <ADC_ConvertDifferentialVoltage+0x62>
    divider = ADC_FS_OSR_32_64_SKIP;
  }
  else {
    divider = ADC_FS_OSR_32_64;
10043b7a:	4c17      	ldr	r4, [pc, #92]	; (10043bd8 <ADC_ConvertDifferentialVoltage+0x6c>)
  }
  
  pga = (float)attenuation;
10043b7c:	0008      	movs	r0, r1
10043b7e:	f7fd fc03 	bl	10041388 <__aeabi_ui2f>
10043b82:	1c06      	adds	r6, r0, #0
  raw_value_f = (float)raw_value;
10043b84:	0028      	movs	r0, r5
10043b86:	f7fd fbaf 	bl	100412e8 <__aeabi_i2f>
  
  if(ADC->CONF_b.OSR == ADC_OSR_100 || ADC->CONF_b.OSR == ADC_OSR_200) {
10043b8a:	687b      	ldr	r3, [r7, #4]
  raw_value_f = (float)raw_value;
10043b8c:	1c05      	adds	r5, r0, #0
  if(ADC->CONF_b.OSR == ADC_OSR_100 || ADC->CONF_b.OSR == ADC_OSR_200) {
10043b8e:	061b      	lsls	r3, r3, #24
10043b90:	0f9b      	lsrs	r3, r3, #30
10043b92:	2b01      	cmp	r3, #1
10043b94:	d003      	beq.n	10043b9e <ADC_ConvertDifferentialVoltage+0x32>
10043b96:	687b      	ldr	r3, [r7, #4]
10043b98:	061b      	lsls	r3, r3, #24
10043b9a:	0f9b      	lsrs	r3, r3, #30
10043b9c:	d105      	bne.n	10043baa <ADC_ConvertDifferentialVoltage+0x3e>
    if( ADC->CONF_b.SKIP == 1) {
10043b9e:	2381      	movs	r3, #129	; 0x81
10043ba0:	05db      	lsls	r3, r3, #23
10043ba2:	685b      	ldr	r3, [r3, #4]
10043ba4:	035b      	lsls	r3, r3, #13
10043ba6:	d415      	bmi.n	10043bd4 <ADC_ConvertDifferentialVoltage+0x68>
      divider = ADC_FS_OSR_100_200_SKIP;
    }
    else {
      divider = ADC_FS_OSR_100_200;
10043ba8:	4c0c      	ldr	r4, [pc, #48]	; (10043bdc <ADC_ConvertDifferentialVoltage+0x70>)
    }
  }
  
  return ((1 + pga) * (raw_value_f / divider) * ADC_VREF);
10043baa:	21fe      	movs	r1, #254	; 0xfe
10043bac:	1c30      	adds	r0, r6, #0
10043bae:	0589      	lsls	r1, r1, #22
10043bb0:	f7fc fd3c 	bl	1004062c <__aeabi_fadd>
10043bb4:	1c21      	adds	r1, r4, #0
10043bb6:	1c06      	adds	r6, r0, #0
10043bb8:	1c28      	adds	r0, r5, #0
10043bba:	f7fc fec9 	bl	10040950 <__aeabi_fdiv>
10043bbe:	1c01      	adds	r1, r0, #0
10043bc0:	1c30      	adds	r0, r6, #0
10043bc2:	f7fd f8b5 	bl	10040d30 <__aeabi_fmul>
10043bc6:	4906      	ldr	r1, [pc, #24]	; (10043be0 <ADC_ConvertDifferentialVoltage+0x74>)
10043bc8:	f7fd f8b2 	bl	10040d30 <__aeabi_fmul>
}
10043bcc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    divider = ADC_FS_OSR_32_64_SKIP;
10043bce:	248e      	movs	r4, #142	; 0x8e
10043bd0:	05e4      	lsls	r4, r4, #23
10043bd2:	e7d3      	b.n	10043b7c <ADC_ConvertDifferentialVoltage+0x10>
      divider = ADC_FS_OSR_100_200_SKIP;
10043bd4:	4c03      	ldr	r4, [pc, #12]	; (10043be4 <ADC_ConvertDifferentialVoltage+0x78>)
10043bd6:	e7e8      	b.n	10043baa <ADC_ConvertDifferentialVoltage+0x3e>
10043bd8:	470a7200 	.word	0x470a7200
10043bdc:	47212c00 	.word	0x47212c00
10043be0:	4019999a 	.word	0x4019999a
10043be4:	47150300 	.word	0x47150300

10043be8 <ADC_ConvertSingleEndedVoltage>:
* @param  channel: the selected single channel type
* @param  vRef: the configured reference voltage
* @retval float: converted single ended voltage value
*/
float ADC_ConvertSingleEndedVoltage(int16_t raw_value, uint8_t channel, uint8_t vRef, uint8_t attenuation)
{
10043be8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  float pga, raw_value_f, divider;
  
  if( ADC->CONF_b.SKIP == 1) {
10043bea:	2581      	movs	r5, #129	; 0x81
{
10043bec:	9101      	str	r1, [sp, #4]
  if( ADC->CONF_b.SKIP == 1) {
10043bee:	05ed      	lsls	r5, r5, #23
10043bf0:	686a      	ldr	r2, [r5, #4]
{
10043bf2:	0007      	movs	r7, r0
  if( ADC->CONF_b.SKIP == 1) {
10043bf4:	0352      	lsls	r2, r2, #13
10043bf6:	d437      	bmi.n	10043c68 <ADC_ConvertSingleEndedVoltage+0x80>
    divider = ADC_FS_OSR_32_64_SKIP;
  }
  else {
    divider = ADC_FS_OSR_32_64;
10043bf8:	4c25      	ldr	r4, [pc, #148]	; (10043c90 <ADC_ConvertSingleEndedVoltage+0xa8>)
  }
  
  pga = (float)attenuation;
10043bfa:	0018      	movs	r0, r3
10043bfc:	f7fd fbc4 	bl	10041388 <__aeabi_ui2f>
10043c00:	1c06      	adds	r6, r0, #0
  raw_value_f = (float)raw_value;
10043c02:	0038      	movs	r0, r7
10043c04:	f7fd fb70 	bl	100412e8 <__aeabi_i2f>
  
  if(ADC->CONF_b.OSR == ADC_OSR_100 || ADC->CONF_b.OSR == ADC_OSR_200) {
10043c08:	686b      	ldr	r3, [r5, #4]
10043c0a:	061b      	lsls	r3, r3, #24
10043c0c:	0f9b      	lsrs	r3, r3, #30
10043c0e:	2b01      	cmp	r3, #1
10043c10:	d003      	beq.n	10043c1a <ADC_ConvertSingleEndedVoltage+0x32>
10043c12:	686b      	ldr	r3, [r5, #4]
10043c14:	061b      	lsls	r3, r3, #24
10043c16:	0f9b      	lsrs	r3, r3, #30
10043c18:	d105      	bne.n	10043c26 <ADC_ConvertSingleEndedVoltage+0x3e>
    if( ADC->CONF_b.SKIP == 1) {
10043c1a:	2381      	movs	r3, #129	; 0x81
10043c1c:	05db      	lsls	r3, r3, #23
10043c1e:	685b      	ldr	r3, [r3, #4]
10043c20:	035b      	lsls	r3, r3, #13
10043c22:	d424      	bmi.n	10043c6e <ADC_ConvertSingleEndedVoltage+0x86>
      divider = ADC_FS_OSR_100_200_SKIP;
    }
    else {
      divider = ADC_FS_OSR_100_200;
10043c24:	4c1b      	ldr	r4, [pc, #108]	; (10043c94 <ADC_ConvertSingleEndedVoltage+0xac>)
    }
  }
  
  if(channel == ADC_Input_AdcPin1) 
10043c26:	9b01      	ldr	r3, [sp, #4]
    return  ((1 + pga) * (0.6 + ((raw_value_f/divider) * ADC_VREF)));
10043c28:	1c21      	adds	r1, r4, #0
  if(channel == ADC_Input_AdcPin1) 
10043c2a:	2b02      	cmp	r3, #2
10043c2c:	d121      	bne.n	10043c72 <ADC_ConvertSingleEndedVoltage+0x8a>
    return  ((1 + pga) * (0.6 + ((raw_value_f/divider) * ADC_VREF)));
10043c2e:	f7fc fe8f 	bl	10040950 <__aeabi_fdiv>
10043c32:	4919      	ldr	r1, [pc, #100]	; (10043c98 <ADC_ConvertSingleEndedVoltage+0xb0>)
10043c34:	f7fd f87c 	bl	10040d30 <__aeabi_fmul>
10043c38:	f7ff f95c 	bl	10042ef4 <__aeabi_f2d>
10043c3c:	4a17      	ldr	r2, [pc, #92]	; (10043c9c <ADC_ConvertSingleEndedVoltage+0xb4>)
10043c3e:	4b18      	ldr	r3, [pc, #96]	; (10043ca0 <ADC_ConvertSingleEndedVoltage+0xb8>)
10043c40:	f7fd fbe8 	bl	10041414 <__aeabi_dadd>
  else
    return  ((1 + pga) * (0.6 - ((raw_value_f/divider) * ADC_VREF)));
10043c44:	000d      	movs	r5, r1
10043c46:	21fe      	movs	r1, #254	; 0xfe
10043c48:	0004      	movs	r4, r0
10043c4a:	0589      	lsls	r1, r1, #22
10043c4c:	1c30      	adds	r0, r6, #0
10043c4e:	f7fc fced 	bl	1004062c <__aeabi_fadd>
10043c52:	f7ff f94f 	bl	10042ef4 <__aeabi_f2d>
10043c56:	0002      	movs	r2, r0
10043c58:	000b      	movs	r3, r1
10043c5a:	0020      	movs	r0, r4
10043c5c:	0029      	movs	r1, r5
10043c5e:	f7fe fb1d 	bl	1004229c <__aeabi_dmul>
10043c62:	f7ff f999 	bl	10042f98 <__aeabi_d2f>
}
10043c66:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    divider = ADC_FS_OSR_32_64_SKIP;
10043c68:	248e      	movs	r4, #142	; 0x8e
10043c6a:	05e4      	lsls	r4, r4, #23
10043c6c:	e7c5      	b.n	10043bfa <ADC_ConvertSingleEndedVoltage+0x12>
      divider = ADC_FS_OSR_100_200_SKIP;
10043c6e:	4c0d      	ldr	r4, [pc, #52]	; (10043ca4 <ADC_ConvertSingleEndedVoltage+0xbc>)
10043c70:	e7d9      	b.n	10043c26 <ADC_ConvertSingleEndedVoltage+0x3e>
    return  ((1 + pga) * (0.6 - ((raw_value_f/divider) * ADC_VREF)));
10043c72:	f7fc fe6d 	bl	10040950 <__aeabi_fdiv>
10043c76:	4908      	ldr	r1, [pc, #32]	; (10043c98 <ADC_ConvertSingleEndedVoltage+0xb0>)
10043c78:	f7fd f85a 	bl	10040d30 <__aeabi_fmul>
10043c7c:	f7ff f93a 	bl	10042ef4 <__aeabi_f2d>
10043c80:	0002      	movs	r2, r0
10043c82:	000b      	movs	r3, r1
10043c84:	4805      	ldr	r0, [pc, #20]	; (10043c9c <ADC_ConvertSingleEndedVoltage+0xb4>)
10043c86:	4906      	ldr	r1, [pc, #24]	; (10043ca0 <ADC_ConvertSingleEndedVoltage+0xb8>)
10043c88:	f7fe fd88 	bl	1004279c <__aeabi_dsub>
10043c8c:	e7da      	b.n	10043c44 <ADC_ConvertSingleEndedVoltage+0x5c>
10043c8e:	46c0      	nop			; (mov r8, r8)
10043c90:	470a7200 	.word	0x470a7200
10043c94:	47212c00 	.word	0x47212c00
10043c98:	4019999a 	.word	0x4019999a
10043c9c:	33333333 	.word	0x33333333
10043ca0:	3fe33333 	.word	0x3fe33333
10043ca4:	47150300 	.word	0x47150300

10043ca8 <ADC_ConvertBatterySensor>:
* @param  raw_value ADC raw value
* @param  vRef: the configured reference voltage
* @retval float: converted battery level
*/
float ADC_ConvertBatterySensor(int16_t raw_value, uint8_t vRef) /* testare al variare di vref */
{
10043ca8:	b510      	push	{r4, lr}
  return (ADC_KBATT * (ADC_ConvertSingleEndedVoltage(raw_value, ADC_Input_AdcPin2, ADC_ReferenceVoltage_0V6, ADC_Attenuation_0dB)));
10043caa:	2300      	movs	r3, #0
10043cac:	2202      	movs	r2, #2
10043cae:	2101      	movs	r1, #1
10043cb0:	f7ff ff9a 	bl	10043be8 <ADC_ConvertSingleEndedVoltage>
10043cb4:	4901      	ldr	r1, [pc, #4]	; (10043cbc <ADC_ConvertBatterySensor+0x14>)
10043cb6:	f7fd f83b 	bl	10040d30 <__aeabi_fmul>
}
10043cba:	bd10      	pop	{r4, pc}
10043cbc:	408b851f 	.word	0x408b851f

10043cc0 <ADC_ConvertTemperatureSensor>:
* @param  raw_value ADC raw value
* @param  vRef: the configured reference voltage
* @retval float: converted temperature level in Celsius degrees
*/
float ADC_ConvertTemperatureSensor(int16_t raw_value, uint8_t vRef, uint8_t attenuation)
{
10043cc0:	b510      	push	{r4, lr}
  return  ((ADC_KTEMP * (ADC_ConvertSingleEndedVoltage(raw_value, ADC_Input_AdcPin2, ADC_ReferenceVoltage_0V6, ADC_Attenuation_0dB))) - ADC_CTEMP);
10043cc2:	2300      	movs	r3, #0
10043cc4:	2202      	movs	r2, #2
10043cc6:	2101      	movs	r1, #1
10043cc8:	f7ff ff8e 	bl	10043be8 <ADC_ConvertSingleEndedVoltage>
10043ccc:	4903      	ldr	r1, [pc, #12]	; (10043cdc <ADC_ConvertTemperatureSensor+0x1c>)
10043cce:	f7fd f82f 	bl	10040d30 <__aeabi_fmul>
10043cd2:	4903      	ldr	r1, [pc, #12]	; (10043ce0 <ADC_ConvertTemperatureSensor+0x20>)
10043cd4:	f7fd f94c 	bl	10040f70 <__aeabi_fsub>
}
10043cd8:	bd10      	pop	{r4, pc}
10043cda:	46c0      	nop			; (mov r8, r8)
10043cdc:	43c88000 	.word	0x43c88000
10043ce0:	43858000 	.word	0x43858000

10043ce4 <ADC_Init>:
  assert_param(IS_ADC_CONVERSIONMODE(ADC_InitStruct->ADC_ConversionMode)); 
  assert_param(IS_ADC_ATTENUATION(ADC_InitStruct->ADC_Attenuation));    
  assert_param(IS_ADC_REFERENCEVOLTAGE(ADC_InitStruct->ADC_ReferenceVoltage)); 
  
  /* Set the decimation rate */
  ADC->CONF_b.OSR = ADC_InitStruct->ADC_OSR;
10043ce4:	2381      	movs	r3, #129	; 0x81
{
10043ce6:	b510      	push	{r4, lr}
  ADC->CONF_b.OSR = ADC_InitStruct->ADC_OSR;
10043ce8:	2403      	movs	r4, #3
10043cea:	05db      	lsls	r3, r3, #23
10043cec:	7801      	ldrb	r1, [r0, #0]
10043cee:	685a      	ldr	r2, [r3, #4]
10043cf0:	4021      	ands	r1, r4
10043cf2:	34bd      	adds	r4, #189	; 0xbd
10043cf4:	0189      	lsls	r1, r1, #6
10043cf6:	43a2      	bics	r2, r4
10043cf8:	430a      	orrs	r2, r1
10043cfa:	605a      	str	r2, [r3, #4]
  
  /* Select the input source */
  if(ADC_InitStruct->ADC_Input == ADC_Input_Microphone) {
10043cfc:	7842      	ldrb	r2, [r0, #1]
    ADC->CONF_b.MIC_SEL = SET;
10043cfe:	6859      	ldr	r1, [r3, #4]
  if(ADC_InitStruct->ADC_Input == ADC_Input_Microphone) {
10043d00:	2a0f      	cmp	r2, #15
10043d02:	d122      	bne.n	10043d4a <ADC_Init+0x66>
    ADC->CONF_b.MIC_SEL = SET;
10043d04:	2280      	movs	r2, #128	; 0x80
10043d06:	03d2      	lsls	r2, r2, #15
  }
  else {
    ADC->CONF_b.MIC_SEL = RESET;      
    ADC->CONF_b.CHSEL = ADC_InitStruct->ADC_Input;
10043d08:	430a      	orrs	r2, r1
10043d0a:	605a      	str	r2, [r3, #4]
  }
  
  /* Set the reference voltage */
  ADC->CONF_b.REFSEL = ADC_InitStruct->ADC_ReferenceVoltage;
10043d0c:	2381      	movs	r3, #129	; 0x81
10043d0e:	2403      	movs	r4, #3
10043d10:	7901      	ldrb	r1, [r0, #4]
10043d12:	05db      	lsls	r3, r3, #23
10043d14:	685a      	ldr	r2, [r3, #4]
10043d16:	4021      	ands	r1, r4
10043d18:	342d      	adds	r4, #45	; 0x2d
10043d1a:	0109      	lsls	r1, r1, #4
10043d1c:	43a2      	bics	r2, r4
10043d1e:	430a      	orrs	r2, r1
10043d20:	605a      	str	r2, [r3, #4]
  
  /* Set the conversion mode */
  if(ADC_InitStruct->ADC_ConversionMode == ADC_ConversionMode_Continuous) {
10043d22:	7882      	ldrb	r2, [r0, #2]
10043d24:	2a08      	cmp	r2, #8
10043d26:	d11a      	bne.n	10043d5e <ADC_Init+0x7a>
    ADC->CONF_b.CONT = SET;
10043d28:	2280      	movs	r2, #128	; 0x80
10043d2a:	6859      	ldr	r1, [r3, #4]
10043d2c:	0112      	lsls	r2, r2, #4
10043d2e:	430a      	orrs	r2, r1
  }
  else {
    ADC->CONF_b.CONT = RESET;
10043d30:	605a      	str	r2, [r3, #4]
  }
  
  /* Set the attenuation */
  ADC->CONF_b.PGASEL = ADC_InitStruct->ADC_Attenuation;
10043d32:	2181      	movs	r1, #129	; 0x81
10043d34:	78c2      	ldrb	r2, [r0, #3]
10043d36:	2003      	movs	r0, #3
10043d38:	05c9      	lsls	r1, r1, #23
10043d3a:	684b      	ldr	r3, [r1, #4]
10043d3c:	4002      	ands	r2, r0
10043d3e:	480a      	ldr	r0, [pc, #40]	; (10043d68 <ADC_Init+0x84>)
10043d40:	0212      	lsls	r2, r2, #8
10043d42:	4003      	ands	r3, r0
10043d44:	4313      	orrs	r3, r2
10043d46:	604b      	str	r3, [r1, #4]
  
}
10043d48:	bd10      	pop	{r4, pc}
    ADC->CONF_b.MIC_SEL = RESET;      
10043d4a:	4c08      	ldr	r4, [pc, #32]	; (10043d6c <ADC_Init+0x88>)
10043d4c:	4021      	ands	r1, r4
    ADC->CONF_b.CHSEL = ADC_InitStruct->ADC_Input;
10043d4e:	2407      	movs	r4, #7
    ADC->CONF_b.MIC_SEL = RESET;      
10043d50:	6059      	str	r1, [r3, #4]
    ADC->CONF_b.CHSEL = ADC_InitStruct->ADC_Input;
10043d52:	6859      	ldr	r1, [r3, #4]
10043d54:	4022      	ands	r2, r4
10043d56:	1924      	adds	r4, r4, r4
10043d58:	0052      	lsls	r2, r2, #1
10043d5a:	43a1      	bics	r1, r4
10043d5c:	e7d4      	b.n	10043d08 <ADC_Init+0x24>
    ADC->CONF_b.CONT = RESET;
10043d5e:	685a      	ldr	r2, [r3, #4]
10043d60:	4903      	ldr	r1, [pc, #12]	; (10043d70 <ADC_Init+0x8c>)
10043d62:	400a      	ands	r2, r1
10043d64:	e7e4      	b.n	10043d30 <ADC_Init+0x4c>
10043d66:	46c0      	nop			; (mov r8, r8)
10043d68:	fffffcff 	.word	0xfffffcff
10043d6c:	ffbfffff 	.word	0xffbfffff
10043d70:	fffff7ff 	.word	0xfffff7ff

10043d74 <ADC_Cmd>:
* @param  NewState: functional state @ref FunctionalState
*         This parameter can be: ENABLE or DISABLE.
* @retval None
*/
void ADC_Cmd(FunctionalState NewState)
{
10043d74:	2381      	movs	r3, #129	; 0x81
10043d76:	05db      	lsls	r3, r3, #23
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState)); 
  
  if(NewState==ENABLE) {
10043d78:	2801      	cmp	r0, #1
10043d7a:	d10f      	bne.n	10043d9c <ADC_Cmd+0x28>
    if(ADC->CONF_b.MIC_SEL) {
10043d7c:	685a      	ldr	r2, [r3, #4]
      ADC->CTRL_b.MIC_ON = SET;
10043d7e:	8819      	ldrh	r1, [r3, #0]
    if(ADC->CONF_b.MIC_SEL) {
10043d80:	0252      	lsls	r2, r2, #9
10043d82:	d504      	bpl.n	10043d8e <ADC_Cmd+0x1a>
      ADC->CTRL_b.MIC_ON = SET;
10043d84:	2280      	movs	r2, #128	; 0x80
10043d86:	0052      	lsls	r2, r2, #1
      ADC->CTRL_b.SWSTART = SET;
      ADC->CTRL_b.ON = SET;
    }
  }
  else {
    ADC->CTRL_b.STOP = SET;
10043d88:	430a      	orrs	r2, r1
10043d8a:	801a      	strh	r2, [r3, #0]
  }
}
10043d8c:	e005      	b.n	10043d9a <ADC_Cmd+0x26>
      ADC->CTRL_b.SWSTART = SET;
10043d8e:	2204      	movs	r2, #4
10043d90:	430a      	orrs	r2, r1
10043d92:	801a      	strh	r2, [r3, #0]
      ADC->CTRL_b.ON = SET;
10043d94:	881a      	ldrh	r2, [r3, #0]
10043d96:	4310      	orrs	r0, r2
10043d98:	8018      	strh	r0, [r3, #0]
}
10043d9a:	4770      	bx	lr
    ADC->CTRL_b.STOP = SET;
10043d9c:	8819      	ldrh	r1, [r3, #0]
10043d9e:	2210      	movs	r2, #16
10043da0:	e7f2      	b.n	10043d88 <ADC_Cmd+0x14>

10043da2 <ADC_SelectInput>:
void ADC_SelectInput(uint8_t AdcInput)               
{
  /* Check the parameter */
  assert_param(IS_ADC_INPUT(AdcInput));
  
  ADC->CONF_b.CHSEL = AdcInput;
10043da2:	2207      	movs	r2, #7
10043da4:	2181      	movs	r1, #129	; 0x81
10043da6:	4002      	ands	r2, r0
10043da8:	200e      	movs	r0, #14
10043daa:	05c9      	lsls	r1, r1, #23
10043dac:	684b      	ldr	r3, [r1, #4]
10043dae:	0052      	lsls	r2, r2, #1
10043db0:	4383      	bics	r3, r0
10043db2:	0018      	movs	r0, r3
10043db4:	4310      	orrs	r0, r2
10043db6:	6048      	str	r0, [r1, #4]
}
10043db8:	4770      	bx	lr

10043dba <ADC_Calibration>:
* @param  NewState: functional state @ref FunctionalState
*         This parameter can be: ENABLE or DISABLE.
* @retval None
*/
void ADC_Calibration(FunctionalState NewState)
{
10043dba:	2381      	movs	r3, #129	; 0x81
10043dbc:	05db      	lsls	r3, r3, #23
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState)); 
  
  if(NewState==ENABLE) {
    ADC->CTRL_b.CALEN = SET;
10043dbe:	8819      	ldrh	r1, [r3, #0]
  if(NewState==ENABLE) {
10043dc0:	2801      	cmp	r0, #1
10043dc2:	d103      	bne.n	10043dcc <ADC_Calibration+0x12>
    ADC->CTRL_b.CALEN = SET;
10043dc4:	2202      	movs	r2, #2
10043dc6:	430a      	orrs	r2, r1
  }
  else {
    ADC->CTRL_b.RSTCALEN = SET;
    ADC->CTRL_b.CALEN = RESET;
10043dc8:	801a      	strh	r2, [r3, #0]
  }
  
}
10043dca:	4770      	bx	lr
    ADC->CTRL_b.RSTCALEN = SET;
10043dcc:	2240      	movs	r2, #64	; 0x40
10043dce:	430a      	orrs	r2, r1
    ADC->CTRL_b.CALEN = RESET;
10043dd0:	2102      	movs	r1, #2
    ADC->CTRL_b.RSTCALEN = SET;
10043dd2:	801a      	strh	r2, [r3, #0]
    ADC->CTRL_b.CALEN = RESET;
10043dd4:	881a      	ldrh	r2, [r3, #0]
10043dd6:	438a      	bics	r2, r1
10043dd8:	e7f6      	b.n	10043dc8 <ADC_Calibration+0xe>

10043dda <ADC_AutoOffsetUpdate>:
* @param  NewState: functional state @ref FunctionalState
*         This parameter can be: ENABLE or DISABLE.
* @retval None
*/
void ADC_AutoOffsetUpdate(FunctionalState NewState)
{
10043dda:	2381      	movs	r3, #129	; 0x81
10043ddc:	05db      	lsls	r3, r3, #23
10043dde:	2280      	movs	r2, #128	; 0x80
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState)); 
  
  if(NewState==ENABLE) {
    ADC->CTRL_b.AUTO_OFFSET = SET;
10043de0:	8819      	ldrh	r1, [r3, #0]
  if(NewState==ENABLE) {
10043de2:	2801      	cmp	r0, #1
10043de4:	d102      	bne.n	10043dec <ADC_AutoOffsetUpdate+0x12>
    ADC->CTRL_b.AUTO_OFFSET = SET;
10043de6:	430a      	orrs	r2, r1
10043de8:	801a      	strh	r2, [r3, #0]
  }
  else {
    ADC->CTRL_b.AUTO_OFFSET = RESET;
  }
}
10043dea:	4770      	bx	lr
    ADC->CTRL_b.AUTO_OFFSET = RESET;
10043dec:	4391      	bics	r1, r2
10043dee:	8019      	strh	r1, [r3, #0]
}
10043df0:	e7fb      	b.n	10043dea <ADC_AutoOffsetUpdate+0x10>

10043df2 <ADC_GetFlagStatus>:
  
  /* Check the parameters */
  assert_param(IS_ADC_GET_FLAG(ADC_Flag));
  
  /* Check the status of the specified SPI flag */
  if (READ_BIT(ADC->IRQRAW, ADC_Flag) != (uint16_t)RESET) {
10043df2:	2381      	movs	r3, #129	; 0x81
10043df4:	05db      	lsls	r3, r3, #23
10043df6:	7c1b      	ldrb	r3, [r3, #16]
10043df8:	4018      	ands	r0, r3
10043dfa:	1e43      	subs	r3, r0, #1
10043dfc:	4198      	sbcs	r0, r3
  else {
    /* SPI_FLAG is reset */
    status = RESET;
  }
  
  return status;  
10043dfe:	b2c0      	uxtb	r0, r0
}
10043e00:	4770      	bx	lr

10043e02 <ADC_GetRawData>:
uint16_t ADC_GetRawData(void)
{
  uint16_t value;
  
  /* Conversion done with filter bypassed */
  if(ADC->CONF_b.SKIP == 0) {
10043e02:	2381      	movs	r3, #129	; 0x81
10043e04:	05db      	lsls	r3, r3, #23
10043e06:	685a      	ldr	r2, [r3, #4]
10043e08:	0352      	lsls	r2, r2, #13
10043e0a:	d402      	bmi.n	10043e12 <ADC_GetRawData+0x10>
    value = READ_REG(ADC->DATA_CONV_MSB);
10043e0c:	8ad8      	ldrh	r0, [r3, #22]
  }
  /* Conversion done with filter not bypassed */
  else {
    value = READ_REG(ADC->DATA_CONV_LSB);
10043e0e:	b280      	uxth	r0, r0
  }
  
  return value;
}
10043e10:	4770      	bx	lr
    value = READ_REG(ADC->DATA_CONV_LSB);
10043e12:	8a98      	ldrh	r0, [r3, #20]
10043e14:	e7fb      	b.n	10043e0e <ADC_GetRawData+0xc>

10043e16 <ADC_GetConvertedData>:
{
10043e16:	b570      	push	{r4, r5, r6, lr}
10043e18:	0004      	movs	r4, r0
10043e1a:	000d      	movs	r5, r1
  raw_value = (int16_t)ADC_GetRawData();
10043e1c:	f7ff fff1 	bl	10043e02 <ADC_GetRawData>
  pga_reg = ADC->CONF_b.PGASEL;
10043e20:	2381      	movs	r3, #129	; 0x81
10043e22:	05db      	lsls	r3, r3, #23
10043e24:	685b      	ldr	r3, [r3, #4]
  raw_value = (int16_t)ADC_GetRawData();
10043e26:	b200      	sxth	r0, r0
  pga_reg = ADC->CONF_b.PGASEL;
10043e28:	059b      	lsls	r3, r3, #22
10043e2a:	0f9b      	lsrs	r3, r3, #30
  if(DataType==ADC_Input_AdcPin1) {
10043e2c:	2c02      	cmp	r4, #2
10043e2e:	d104      	bne.n	10043e3a <ADC_GetConvertedData+0x24>
    return ADC_ConvertSingleEndedVoltage(raw_value, (uint8_t)ADC_Input_AdcPin2, Vref, pga_reg);
10043e30:	002a      	movs	r2, r5
10043e32:	0021      	movs	r1, r4
10043e34:	f7ff fed8 	bl	10043be8 <ADC_ConvertSingleEndedVoltage>
}
10043e38:	bd70      	pop	{r4, r5, r6, pc}
  else if(DataType==ADC_Input_AdcPin2) {
10043e3a:	2c01      	cmp	r4, #1
10043e3c:	d0f8      	beq.n	10043e30 <ADC_GetConvertedData+0x1a>
  else if(DataType==ADC_Input_AdcPin12 || DataType==ADC_Input_Internal0V60V6 || DataType==ADC_Input_Internal1V20V0) {
10043e3e:	2c03      	cmp	r4, #3
10043e40:	d002      	beq.n	10043e48 <ADC_GetConvertedData+0x32>
10043e42:	1fa2      	subs	r2, r4, #6
10043e44:	2a01      	cmp	r2, #1
10043e46:	d803      	bhi.n	10043e50 <ADC_GetConvertedData+0x3a>
    return ADC_ConvertDifferentialVoltage(raw_value, pga_reg);
10043e48:	0019      	movs	r1, r3
10043e4a:	f7ff fe8f 	bl	10043b6c <ADC_ConvertDifferentialVoltage>
10043e4e:	e7f3      	b.n	10043e38 <ADC_GetConvertedData+0x22>
  else if(DataType==ADC_Input_BattSensor) {
10043e50:	2c05      	cmp	r4, #5
10043e52:	d103      	bne.n	10043e5c <ADC_GetConvertedData+0x46>
    return ADC_ConvertBatterySensor(raw_value, Vref);
10043e54:	0029      	movs	r1, r5
10043e56:	f7ff ff27 	bl	10043ca8 <ADC_ConvertBatterySensor>
10043e5a:	e7ed      	b.n	10043e38 <ADC_GetConvertedData+0x22>
  else if(DataType==ADC_Input_TempSensor) {
10043e5c:	2c04      	cmp	r4, #4
10043e5e:	d104      	bne.n	10043e6a <ADC_GetConvertedData+0x54>
    return ADC_ConvertTemperatureSensor(raw_value, Vref, pga_reg);
10043e60:	001a      	movs	r2, r3
10043e62:	0029      	movs	r1, r5
10043e64:	f7ff ff2c 	bl	10043cc0 <ADC_ConvertTemperatureSensor>
10043e68:	e7e6      	b.n	10043e38 <ADC_GetConvertedData+0x22>
  return raw_value;
10043e6a:	f7fd fa3d 	bl	100412e8 <__aeabi_i2f>
10043e6e:	e7e3      	b.n	10043e38 <ADC_GetConvertedData+0x22>

10043e70 <FLASH_ReadWord>:
*/
uint32_t FLASH_ReadWord(uint32_t Address)
{
  assert_param(IS_FLASH_ADDRESS(Address));
	
  return (*((volatile uint32_t*)(Address)));
10043e70:	6800      	ldr	r0, [r0, #0]
}
10043e72:	4770      	bx	lr

10043e74 <FLASH_ReadByte>:
*/
uint8_t FLASH_ReadByte(uint32_t Address)
{
  assert_param(IS_FLASH_ADDRESS(Address));
	
  return (*((volatile uint8_t*)(Address)));
10043e74:	7800      	ldrb	r0, [r0, #0]
10043e76:	b2c0      	uxtb	r0, r0
}
10043e78:	4770      	bx	lr
	...

10043e7c <FLASH_WaitCmdDone>:
* @retval None
*/
void FLASH_WaitCmdDone(void)
{
  /* Waits for Command Done */
  while(FLASH->IRQRAW_b.CMDDONE != SET);
10043e7c:	4a02      	ldr	r2, [pc, #8]	; (10043e88 <FLASH_WaitCmdDone+0xc>)
10043e7e:	8a13      	ldrh	r3, [r2, #16]
10043e80:	07db      	lsls	r3, r3, #31
10043e82:	d5fc      	bpl.n	10043e7e <FLASH_WaitCmdDone+0x2>
}
10043e84:	4770      	bx	lr
10043e86:	46c0      	nop			; (mov r8, r8)
10043e88:	40100000 	.word	0x40100000

10043e8c <FLASH_ErasePage>:
  if (flash_sw_lock != FLASH_UNLOCK_WORD)
10043e8c:	4b08      	ldr	r3, [pc, #32]	; (10043eb0 <FLASH_ErasePage+0x24>)
{
10043e8e:	b510      	push	{r4, lr}
  if (flash_sw_lock != FLASH_UNLOCK_WORD)
10043e90:	681a      	ldr	r2, [r3, #0]
10043e92:	4b08      	ldr	r3, [pc, #32]	; (10043eb4 <FLASH_ErasePage+0x28>)
10043e94:	429a      	cmp	r2, r3
10043e96:	d109      	bne.n	10043eac <FLASH_ErasePage+0x20>
  FLASH->IRQSTAT = 0x3F;
10043e98:	223f      	movs	r2, #63	; 0x3f
10043e9a:	4b07      	ldr	r3, [pc, #28]	; (10043eb8 <FLASH_ErasePage+0x2c>)
  FLASH->ADDRESS = pageAddress;
10043e9c:	0640      	lsls	r0, r0, #25
  FLASH->IRQSTAT = 0x3F;
10043e9e:	811a      	strh	r2, [r3, #8]
  FLASH->ADDRESS = pageAddress;
10043ea0:	0c00      	lsrs	r0, r0, #16
  FLASH->COMMAND = FLASH_ERASE;
10043ea2:	3a2e      	subs	r2, #46	; 0x2e
  FLASH->ADDRESS = pageAddress;
10043ea4:	6198      	str	r0, [r3, #24]
  FLASH->COMMAND = FLASH_ERASE;
10043ea6:	801a      	strh	r2, [r3, #0]
  FLASH_WaitCmdDone();
10043ea8:	f7ff ffe8 	bl	10043e7c <FLASH_WaitCmdDone>
}
10043eac:	bd10      	pop	{r4, pc}
10043eae:	46c0      	nop			; (mov r8, r8)
10043eb0:	20000014 	.word	0x20000014
10043eb4:	fcecbccc 	.word	0xfcecbccc
10043eb8:	40100000 	.word	0x40100000

10043ebc <FLASH_ProgramWord>:
  if (flash_sw_lock != FLASH_UNLOCK_WORD)
10043ebc:	4b08      	ldr	r3, [pc, #32]	; (10043ee0 <FLASH_ProgramWord+0x24>)
{
10043ebe:	b510      	push	{r4, lr}
  if (flash_sw_lock != FLASH_UNLOCK_WORD)
10043ec0:	681a      	ldr	r2, [r3, #0]
10043ec2:	4b08      	ldr	r3, [pc, #32]	; (10043ee4 <FLASH_ProgramWord+0x28>)
10043ec4:	429a      	cmp	r2, r3
10043ec6:	d109      	bne.n	10043edc <FLASH_ProgramWord+0x20>
  FLASH->IRQSTAT = 0x3F;
10043ec8:	223f      	movs	r2, #63	; 0x3f
10043eca:	4b07      	ldr	r3, [pc, #28]	; (10043ee8 <FLASH_ProgramWord+0x2c>)
  FLASH->ADDRESS = Address>>2;
10043ecc:	0880      	lsrs	r0, r0, #2
  FLASH->IRQSTAT = 0x3F;
10043ece:	811a      	strh	r2, [r3, #8]
  FLASH->COMMAND = FLASH_WRITE;
10043ed0:	3a0c      	subs	r2, #12
  FLASH->ADDRESS = Address>>2;
10043ed2:	6198      	str	r0, [r3, #24]
  FLASH->DATA0 = Data;
10043ed4:	6419      	str	r1, [r3, #64]	; 0x40
  FLASH->COMMAND = FLASH_WRITE;
10043ed6:	801a      	strh	r2, [r3, #0]
  FLASH_WaitCmdDone();
10043ed8:	f7ff ffd0 	bl	10043e7c <FLASH_WaitCmdDone>
}
10043edc:	bd10      	pop	{r4, pc}
10043ede:	46c0      	nop			; (mov r8, r8)
10043ee0:	20000014 	.word	0x20000014
10043ee4:	fcecbccc 	.word	0xfcecbccc
10043ee8:	40100000 	.word	0x40100000

10043eec <GPIO_Init>:
* @param  GPIO_InitStruct: pointer to a @ref GPIO_InitType structure that
*         contains the configuration information for the specified GPIO peripheral.
* @retval None
*/
void GPIO_Init(GPIO_InitType* GPIO_InitStruct)
{
10043eec:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10043eee:	9001      	str	r0, [sp, #4]
  
  /* IO12 and IO13 cannot be programmed in output mode */
  assert_param( ((GPIO_InitStruct->GPIO_Pin & GPIO_Pin_12) != GPIO_Pin_12) || (GPIO_InitStruct->GPIO_Mode != GPIO_Output));
  assert_param( ((GPIO_InitStruct->GPIO_Pin & GPIO_Pin_13) != GPIO_Pin_13) || (GPIO_InitStruct->GPIO_Mode != GPIO_Output));
  
  gpio_mode = GPIO_InitStruct->GPIO_Mode;
10043ef0:	7901      	ldrb	r1, [r0, #4]
10043ef2:	6804      	ldr	r4, [r0, #0]
  
  /* Configure the IO mode */
  if(GPIO_InitStruct->GPIO_Mode == GPIO_Input) {
10043ef4:	2900      	cmp	r1, #0
10043ef6:	d131      	bne.n	10043f5c <GPIO_Init+0x70>
    CLEAR_BIT(GPIO->OEN, GPIO_InitStruct->GPIO_Pin);
10043ef8:	2280      	movs	r2, #128	; 0x80
10043efa:	05d2      	lsls	r2, r2, #23
10043efc:	6853      	ldr	r3, [r2, #4]
10043efe:	43a3      	bics	r3, r4
10043f00:	6053      	str	r3, [r2, #4]
    gpio_mode = GPIO_Input;
    SET_BIT(GPIO->OEN, GPIO_InitStruct->GPIO_Pin);
  }
  
  for(uint8_t i = 0; i < GPIO_PIN_COUNT; i++) {
    tmp = (uint8_t)((GPIO_InitStruct->GPIO_Pin>>i) & 0x01);
10043f02:	9b01      	ldr	r3, [sp, #4]
10043f04:	2520      	movs	r5, #32
10043f06:	681e      	ldr	r6, [r3, #0]
10043f08:	2380      	movs	r3, #128	; 0x80
10043f0a:	2200      	movs	r2, #0
10043f0c:	426d      	negs	r5, r5
10043f0e:	05db      	lsls	r3, r3, #23
10043f10:	0034      	movs	r4, r6
    if(tmp!=0) {
10043f12:	2001      	movs	r0, #1
    tmp = (uint8_t)((GPIO_InitStruct->GPIO_Pin>>i) & 0x01);
10043f14:	40d4      	lsrs	r4, r2
    if(tmp!=0) {
10043f16:	4204      	tst	r4, r0
10043f18:	d00b      	beq.n	10043f32 <GPIO_Init+0x46>
10043f1a:	b2d4      	uxtb	r4, r2

      if(i < 8) {
10043f1c:	2a07      	cmp	r2, #7
10043f1e:	d826      	bhi.n	10043f6e <GPIO_Init+0x82>
10043f20:	0097      	lsls	r7, r2, #2
        MODIFY_REG(GPIO->MODE0, (0xF<<(i*4)), (gpio_mode << (i*4)) );
10043f22:	300e      	adds	r0, #14
10043f24:	40b8      	lsls	r0, r7
10043f26:	6adc      	ldr	r4, [r3, #44]	; 0x2c
10043f28:	4384      	bics	r4, r0
10043f2a:	0008      	movs	r0, r1
10043f2c:	40b8      	lsls	r0, r7
10043f2e:	4304      	orrs	r4, r0
10043f30:	62dc      	str	r4, [r3, #44]	; 0x2c
10043f32:	3201      	adds	r2, #1
10043f34:	3504      	adds	r5, #4
  for(uint8_t i = 0; i < GPIO_PIN_COUNT; i++) {
10043f36:	2a1a      	cmp	r2, #26
10043f38:	d1ea      	bne.n	10043f10 <GPIO_Init+0x24>
#endif
    }
  }

  /* Set the current mode */
  if(GPIO_InitStruct->GPIO_HighPwr == ENABLE) {
10043f3a:	9b01      	ldr	r3, [sp, #4]
10043f3c:	795a      	ldrb	r2, [r3, #5]
10043f3e:	2380      	movs	r3, #128	; 0x80
10043f40:	05db      	lsls	r3, r3, #23
10043f42:	2a01      	cmp	r2, #1
10043f44:	d13a      	bne.n	10043fbc <GPIO_Init+0xd0>
    SET_BIT(GPIO->DS, GPIO_InitStruct->GPIO_Pin);
10043f46:	68da      	ldr	r2, [r3, #12]
10043f48:	4332      	orrs	r2, r6
  }
  else {
    CLEAR_BIT(GPIO->DS, GPIO_InitStruct->GPIO_Pin);
10043f4a:	60da      	str	r2, [r3, #12]
  }

  /* Set the pull on IO */
  if(GPIO_InitStruct->GPIO_Pull == ENABLE) {
10043f4c:	9a01      	ldr	r2, [sp, #4]
10043f4e:	7992      	ldrb	r2, [r2, #6]
10043f50:	2a01      	cmp	r2, #1
10043f52:	d136      	bne.n	10043fc2 <GPIO_Init+0xd6>
    SET_BIT(GPIO->PE, GPIO_InitStruct->GPIO_Pin);
10043f54:	689a      	ldr	r2, [r3, #8]
10043f56:	4316      	orrs	r6, r2
10043f58:	609e      	str	r6, [r3, #8]
  }
  else {
    CLEAR_BIT(GPIO->PE, GPIO_InitStruct->GPIO_Pin);
  }

}
10043f5a:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
  else if(GPIO_InitStruct->GPIO_Mode == GPIO_Output) {
10043f5c:	2906      	cmp	r1, #6
10043f5e:	d1d0      	bne.n	10043f02 <GPIO_Init+0x16>
    SET_BIT(GPIO->OEN, GPIO_InitStruct->GPIO_Pin);
10043f60:	2280      	movs	r2, #128	; 0x80
10043f62:	05d2      	lsls	r2, r2, #23
10043f64:	6853      	ldr	r3, [r2, #4]
    gpio_mode = GPIO_Input;
10043f66:	2100      	movs	r1, #0
    SET_BIT(GPIO->OEN, GPIO_InitStruct->GPIO_Pin);
10043f68:	4323      	orrs	r3, r4
10043f6a:	6053      	str	r3, [r2, #4]
10043f6c:	e7c9      	b.n	10043f02 <GPIO_Init+0x16>
      else if((i > 7) && (i < 16)) {
10043f6e:	0027      	movs	r7, r4
10043f70:	3f08      	subs	r7, #8
10043f72:	2f07      	cmp	r7, #7
10043f74:	d808      	bhi.n	10043f88 <GPIO_Init+0x9c>
        MODIFY_REG(GPIO->MODE1, (0xF<<((i-8)*4)), (gpio_mode << ((i-8)*4)) );
10043f76:	270f      	movs	r7, #15
10043f78:	40af      	lsls	r7, r5
10043f7a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
10043f7c:	43bc      	bics	r4, r7
10043f7e:	000f      	movs	r7, r1
10043f80:	40af      	lsls	r7, r5
10043f82:	433c      	orrs	r4, r7
10043f84:	631c      	str	r4, [r3, #48]	; 0x30
10043f86:	e7d4      	b.n	10043f32 <GPIO_Init+0x46>
      else if((i > 15) && (i < 24)) {
10043f88:	3c10      	subs	r4, #16
10043f8a:	2c07      	cmp	r4, #7
10043f8c:	d80a      	bhi.n	10043fa4 <GPIO_Init+0xb8>
10043f8e:	002f      	movs	r7, r5
        MODIFY_REG(GPIO->MODE2, (0xF<<((i-16)*4)), (gpio_mode << ((i-16)*4)) );
10043f90:	200f      	movs	r0, #15
10043f92:	3f20      	subs	r7, #32
10043f94:	40b8      	lsls	r0, r7
10043f96:	6b5c      	ldr	r4, [r3, #52]	; 0x34
10043f98:	4384      	bics	r4, r0
10043f9a:	0008      	movs	r0, r1
10043f9c:	40b8      	lsls	r0, r7
10043f9e:	4304      	orrs	r4, r0
10043fa0:	635c      	str	r4, [r3, #52]	; 0x34
10043fa2:	e7c6      	b.n	10043f32 <GPIO_Init+0x46>
10043fa4:	002f      	movs	r7, r5
        MODIFY_REG(GPIO->MODE3, (0xF<<((i-24)*4)), (gpio_mode << ((i-24)*4)) );
10043fa6:	200f      	movs	r0, #15
10043fa8:	3f40      	subs	r7, #64	; 0x40
10043faa:	40b8      	lsls	r0, r7
10043fac:	8f1c      	ldrh	r4, [r3, #56]	; 0x38
10043fae:	4384      	bics	r4, r0
10043fb0:	0008      	movs	r0, r1
10043fb2:	40b8      	lsls	r0, r7
10043fb4:	4304      	orrs	r4, r0
10043fb6:	b2a4      	uxth	r4, r4
10043fb8:	871c      	strh	r4, [r3, #56]	; 0x38
10043fba:	e7ba      	b.n	10043f32 <GPIO_Init+0x46>
    CLEAR_BIT(GPIO->DS, GPIO_InitStruct->GPIO_Pin);
10043fbc:	68da      	ldr	r2, [r3, #12]
10043fbe:	43b2      	bics	r2, r6
10043fc0:	e7c3      	b.n	10043f4a <GPIO_Init+0x5e>
    CLEAR_BIT(GPIO->PE, GPIO_InitStruct->GPIO_Pin);
10043fc2:	689a      	ldr	r2, [r3, #8]
10043fc4:	43b2      	bics	r2, r6
10043fc6:	609a      	str	r2, [r3, #8]
}
10043fc8:	e7c7      	b.n	10043f5a <GPIO_Init+0x6e>

10043fca <GPIO_StructInit>:
* @retval None
*/
void GPIO_StructInit(GPIO_InitType* GPIO_InitStruct)
{
  /* Reset GPIO init structure parameters values */
  GPIO_InitStruct->GPIO_Pin  = 0x00000000;
10043fca:	2300      	movs	r3, #0
10043fcc:	6003      	str	r3, [r0, #0]
  GPIO_InitStruct->GPIO_Mode = GPIO_Input;
10043fce:	7103      	strb	r3, [r0, #4]
  GPIO_InitStruct->GPIO_Pull = DISABLE;
10043fd0:	7183      	strb	r3, [r0, #6]
  GPIO_InitStruct->GPIO_HighPwr = DISABLE;
10043fd2:	7143      	strb	r3, [r0, #5]
}
10043fd4:	4770      	bx	lr

10043fd6 <GPIO_ReadBit>:
BitAction GPIO_ReadBit(uint32_t GPIO_Pin)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin)); 
  
  if(READ_BIT(GPIO->DATA, GPIO_Pin)) {
10043fd6:	2380      	movs	r3, #128	; 0x80
10043fd8:	05db      	lsls	r3, r3, #23
10043fda:	681b      	ldr	r3, [r3, #0]
10043fdc:	4018      	ands	r0, r3
10043fde:	1e43      	subs	r3, r0, #1
10043fe0:	4198      	sbcs	r0, r3
10043fe2:	b2c0      	uxtb	r0, r0
    return Bit_SET;
  }
  else {
    return Bit_RESET;
  }
}
10043fe4:	4770      	bx	lr

10043fe6 <GPIO_SetBits>:
void GPIO_SetBits(uint32_t GPIO_Pins)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PINS(GPIO_Pins));
  
  WRITE_REG(GPIO->DATS, GPIO_Pins);
10043fe6:	2380      	movs	r3, #128	; 0x80
10043fe8:	05db      	lsls	r3, r3, #23
10043fea:	63d8      	str	r0, [r3, #60]	; 0x3c
}
10043fec:	4770      	bx	lr

10043fee <GPIO_ResetBits>:
void GPIO_ResetBits(uint32_t GPIO_Pins)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PINS(GPIO_Pins));
  
  WRITE_REG(GPIO->DATC, GPIO_Pins);
10043fee:	2380      	movs	r3, #128	; 0x80
10043ff0:	05db      	lsls	r3, r3, #23
10043ff2:	6418      	str	r0, [r3, #64]	; 0x40
}
10043ff4:	4770      	bx	lr

10043ff6 <GPIO_WriteBit>:
* @param  BitVal: specifies the value to be written to the selected bit.
*         This parameter can be any value of @ref BitAction.
* @retval None
*/
void GPIO_WriteBit(uint32_t GPIO_Pins, BitAction BitVal)
{
10043ff6:	2380      	movs	r3, #128	; 0x80
10043ff8:	05db      	lsls	r3, r3, #23
  /* Check the parameters */
  assert_param(IS_GPIO_PINS(GPIO_Pins));
  assert_param(IS_GPIO_BIT_ACTION(BitVal)); 
  
  if (BitVal == Bit_SET) {
10043ffa:	2901      	cmp	r1, #1
10043ffc:	d101      	bne.n	10044002 <GPIO_WriteBit+0xc>
    WRITE_REG(GPIO->DATS, GPIO_Pins);
10043ffe:	63d8      	str	r0, [r3, #60]	; 0x3c
  }
  else {
    WRITE_REG(GPIO->DATC, GPIO_Pins);
  }
}
10044000:	4770      	bx	lr
    WRITE_REG(GPIO->DATC, GPIO_Pins);
10044002:	6418      	str	r0, [r3, #64]	; 0x40
}
10044004:	e7fc      	b.n	10044000 <GPIO_WriteBit+0xa>

10044006 <GPIO_ToggleBits>:
void GPIO_ToggleBits(uint32_t GPIO_Pins)
{  
  /* Check the parameters */  
  assert_param(IS_GPIO_PINS(GPIO_Pins));
  
  GPIO->DATA ^= GPIO_Pins;
10044006:	2280      	movs	r2, #128	; 0x80
10044008:	05d2      	lsls	r2, r2, #23
1004400a:	6813      	ldr	r3, [r2, #0]
1004400c:	4058      	eors	r0, r3
1004400e:	6010      	str	r0, [r2, #0]
}
10044010:	4770      	bx	lr

10044012 <GPIO_ClearITPendingBit>:
void GPIO_ClearITPendingBit(uint32_t GPIO_Pins)
{
  /* Check the parameters */
  assert_param(IS_GPIO_PINS(GPIO_Pins));

  WRITE_REG(GPIO->IC, GPIO_Pins);
10044012:	2380      	movs	r3, #128	; 0x80
10044014:	05db      	lsls	r3, r3, #23
10044016:	6298      	str	r0, [r3, #40]	; 0x28
}
10044018:	4770      	bx	lr

1004401a <GPIO_GetITPendingBit>:
FlagStatus GPIO_GetITPendingBit(uint32_t GPIO_Pin)
{  
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  if(READ_BIT(GPIO->MIS, GPIO_Pin) != (uint32_t)RESET) {
1004401a:	2380      	movs	r3, #128	; 0x80
1004401c:	05db      	lsls	r3, r3, #23
1004401e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
10044020:	4018      	ands	r0, r3
10044022:	1e43      	subs	r3, r0, #1
10044024:	4198      	sbcs	r0, r3
10044026:	b2c0      	uxtb	r0, r0
    return SET;
  }
  else {
    return RESET;
  }
}
10044028:	4770      	bx	lr

1004402a <PKA_Reset>:
* @retval None
*/
void PKA_Reset(void)
{
  /* Set Bit SFT_RST of CSR */
  PKA->CSR_b.SFT_RST = SET;
1004402a:	23c0      	movs	r3, #192	; 0xc0
1004402c:	2180      	movs	r1, #128	; 0x80
1004402e:	061b      	lsls	r3, r3, #24
10044030:	681a      	ldr	r2, [r3, #0]
10044032:	430a      	orrs	r2, r1
10044034:	601a      	str	r2, [r3, #0]
  
  /* the Bit SFT_RST must be reset after set */
  PKA->CSR_b.SFT_RST = RESET;
10044036:	681a      	ldr	r2, [r3, #0]
10044038:	438a      	bics	r2, r1
1004403a:	601a      	str	r2, [r3, #0]
}
1004403c:	4770      	bx	lr
	...

10044040 <SPI_SetBaudrate>:
  assert_param(IS_SPI_BAUDRATE(Baudrate));
  
  /* bit rate is: 16MHz / (CPSDVR * (1+SCR))
  and CPSDVR must be an even number from 2-254.
  We calculate (1/2 * CPSDVR) * (1+SCR) */
  c = SPI_CLOCK / (2 * Baudrate);
10044040:	0041      	lsls	r1, r0, #1
{
10044042:	b510      	push	{r4, lr}
  c = SPI_CLOCK / (2 * Baudrate);
10044044:	480d      	ldr	r0, [pc, #52]	; (1004407c <SPI_SetBaudrate+0x3c>)
10044046:	f7fc f893 	bl	10040170 <__udivsi3>
  
  /* if the bit rate is possible */
  if ((c >= MIN_DIVIDER) && (c <= MAX_DIVIDER)) {
1004404a:	4b0d      	ldr	r3, [pc, #52]	; (10044080 <SPI_SetBaudrate+0x40>)
1004404c:	1e42      	subs	r2, r0, #1
1004404e:	429a      	cmp	r2, r3
10044050:	d811      	bhi.n	10044076 <SPI_SetBaudrate+0x36>
10044052:	2302      	movs	r3, #2
    /* adjust the ratio CPSDVR / (SCR+1) */
    while (c > MAX_SCR) {
10044054:	28ff      	cmp	r0, #255	; 0xff
10044056:	d80a      	bhi.n	1004406e <SPI_SetBaudrate+0x2e>
      cpsr <<= 1;
      c >>= 1;
    }    
    scr = c - 1;    
10044058:	3801      	subs	r0, #1
1004405a:	b2c0      	uxtb	r0, r0
  }
  /* set dividers */
  SPI->CPSR = cpsr;
1004405c:	4a09      	ldr	r2, [pc, #36]	; (10044084 <SPI_SetBaudrate+0x44>)
  SPI->CR0_b.SCR = scr;    
1004405e:	490a      	ldr	r1, [pc, #40]	; (10044088 <SPI_SetBaudrate+0x48>)
  SPI->CPSR = cpsr;
10044060:	7413      	strb	r3, [r2, #16]
  SPI->CR0_b.SCR = scr;    
10044062:	6813      	ldr	r3, [r2, #0]
10044064:	0200      	lsls	r0, r0, #8
10044066:	400b      	ands	r3, r1
10044068:	4318      	orrs	r0, r3
1004406a:	6010      	str	r0, [r2, #0]
}
1004406c:	bd10      	pop	{r4, pc}
      cpsr <<= 1;
1004406e:	005b      	lsls	r3, r3, #1
10044070:	b2db      	uxtb	r3, r3
      c >>= 1;
10044072:	0840      	lsrs	r0, r0, #1
10044074:	e7ee      	b.n	10044054 <SPI_SetBaudrate+0x14>
  uint8_t cpsr = 2;
10044076:	2302      	movs	r3, #2
  uint8_t scr = 1;
10044078:	2001      	movs	r0, #1
1004407a:	e7ef      	b.n	1004405c <SPI_SetBaudrate+0x1c>
1004407c:	00f42400 	.word	0x00f42400
10044080:	0000fdff 	.word	0x0000fdff
10044084:	40400000 	.word	0x40400000
10044088:	ffff00ff 	.word	0xffff00ff

1004408c <SPI_Init>:
* @param  SPI_InitStruct: pointer to a @ref SPI_InitType structure that
*         contains the configuration information for the specified SPI peripheral.
* @retval None
*/
void SPI_Init(SPI_InitType* SPI_InitStruct)
{
1004408c:	b570      	push	{r4, r5, r6, lr}
1004408e:	0004      	movs	r4, r0
  
  /* Set the specified baud rate */
  SPI_SetBaudrate(SPI_InitStruct->SPI_BaudRate);
  
  /* Set SPI mode */
  SPI->CR1_b.MS = SPI_InitStruct->SPI_Mode;
10044090:	2601      	movs	r6, #1
  SPI_SetBaudrate(SPI_InitStruct->SPI_BaudRate);
10044092:	6840      	ldr	r0, [r0, #4]
10044094:	f7ff ffd4 	bl	10044040 <SPI_SetBaudrate>
  SPI->CR1_b.MS = SPI_InitStruct->SPI_Mode;
10044098:	2004      	movs	r0, #4
1004409a:	4b10      	ldr	r3, [pc, #64]	; (100440dc <SPI_Init+0x50>)
1004409c:	7821      	ldrb	r1, [r4, #0]
1004409e:	685a      	ldr	r2, [r3, #4]
100440a0:	4031      	ands	r1, r6
100440a2:	0089      	lsls	r1, r1, #2
100440a4:	4382      	bics	r2, r0
100440a6:	430a      	orrs	r2, r1
100440a8:	605a      	str	r2, [r3, #4]
  
  /* Set CPOL */
  SPI->CR0_b.SPO = SPI_InitStruct->SPI_CPOL;
100440aa:	2240      	movs	r2, #64	; 0x40
100440ac:	78a5      	ldrb	r5, [r4, #2]
100440ae:	6818      	ldr	r0, [r3, #0]
100440b0:	4035      	ands	r5, r6
100440b2:	01ad      	lsls	r5, r5, #6
100440b4:	4390      	bics	r0, r2
100440b6:	4328      	orrs	r0, r5
100440b8:	6018      	str	r0, [r3, #0]
  
  /* Set CPHA */
  SPI->CR0_b.SPH = SPI_InitStruct->SPI_CPHA;
100440ba:	2080      	movs	r0, #128	; 0x80
100440bc:	78e1      	ldrb	r1, [r4, #3]
100440be:	681a      	ldr	r2, [r3, #0]
100440c0:	4031      	ands	r1, r6
100440c2:	01c9      	lsls	r1, r1, #7
100440c4:	4382      	bics	r2, r0
100440c6:	430a      	orrs	r2, r1
100440c8:	601a      	str	r2, [r3, #0]
  
  /* Set datasize */
  SPI->CR0_b.DSS = SPI_InitStruct->SPI_DataSize;
100440ca:	7861      	ldrb	r1, [r4, #1]
100440cc:	681a      	ldr	r2, [r3, #0]
100440ce:	3861      	subs	r0, #97	; 0x61
100440d0:	4001      	ands	r1, r0
100440d2:	4382      	bics	r2, r0
100440d4:	430a      	orrs	r2, r1
100440d6:	601a      	str	r2, [r3, #0]
}
100440d8:	bd70      	pop	{r4, r5, r6, pc}
100440da:	46c0      	nop			; (mov r8, r8)
100440dc:	40400000 	.word	0x40400000

100440e0 <SPI_StructInit>:
* @retval None
*/
void SPI_StructInit(SPI_InitType* SPI_InitStruct)
{
  /* Initialize the SPI_Mode member */
  SPI_InitStruct->SPI_Mode = SPI_Mode_Slave;
100440e0:	2301      	movs	r3, #1
100440e2:	7003      	strb	r3, [r0, #0]
  
  /* Initialize the SPI_DataSize member */
  SPI_InitStruct->SPI_DataSize = SPI_DataSize_8b;
100440e4:	3306      	adds	r3, #6
100440e6:	7043      	strb	r3, [r0, #1]
  
  /* Initialize the SPI_CPOL member */
  SPI_InitStruct->SPI_CPOL = SPI_CPOL_Low;
100440e8:	2300      	movs	r3, #0
100440ea:	7083      	strb	r3, [r0, #2]
  
  /* Initialize the SPI_CPHA member */
  SPI_InitStruct->SPI_CPHA = SPI_CPHA_1Edge;
100440ec:	70c3      	strb	r3, [r0, #3]
  
  /* Initialize the SPI_BaudRate member */
  SPI_InitStruct->SPI_BaudRate = 1000000;
100440ee:	4b01      	ldr	r3, [pc, #4]	; (100440f4 <SPI_StructInit+0x14>)
100440f0:	6043      	str	r3, [r0, #4]
}
100440f2:	4770      	bx	lr
100440f4:	000f4240 	.word	0x000f4240

100440f8 <SPI_Cmd>:
* @param  NewState: functional state @ref FunctionalState
*         This parameter can be: ENABLE or DISABLE.
* @retval None
*/
void SPI_Cmd(FunctionalState NewState)
{
100440f8:	4b05      	ldr	r3, [pc, #20]	; (10044110 <SPI_Cmd+0x18>)
100440fa:	2202      	movs	r2, #2
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE) {
    /* Enable the selected SPI peripheral */
    SPI->CR1_b.SSE = SET;
100440fc:	6859      	ldr	r1, [r3, #4]
  if (NewState != DISABLE) {
100440fe:	2800      	cmp	r0, #0
10044100:	d002      	beq.n	10044108 <SPI_Cmd+0x10>
    SPI->CR1_b.SSE = SET;
10044102:	430a      	orrs	r2, r1
10044104:	605a      	str	r2, [r3, #4]
  }
  else {
    /* Disable the selected SPI peripheral */
    SPI->CR1_b.SSE = RESET;
  }
}
10044106:	4770      	bx	lr
    SPI->CR1_b.SSE = RESET;
10044108:	4391      	bics	r1, r2
1004410a:	6059      	str	r1, [r3, #4]
}
1004410c:	e7fb      	b.n	10044106 <SPI_Cmd+0xe>
1004410e:	46c0      	nop			; (mov r8, r8)
10044110:	40400000 	.word	0x40400000

10044114 <SPI_SendData>:
* @retval None
*/
void SPI_SendData(uint32_t Data)
{
  /* Write in the DR register the data to be sent */
  SPI->DR = Data;
10044114:	4b01      	ldr	r3, [pc, #4]	; (1004411c <SPI_SendData+0x8>)
10044116:	6098      	str	r0, [r3, #8]
}
10044118:	4770      	bx	lr
1004411a:	46c0      	nop			; (mov r8, r8)
1004411c:	40400000 	.word	0x40400000

10044120 <SPI_ReceiveData>:
* @retval The value of the received data.
*/
uint32_t SPI_ReceiveData(void)
{
  /* Return the data in the DR register */
  return SPI->DR;
10044120:	4b01      	ldr	r3, [pc, #4]	; (10044128 <SPI_ReceiveData+0x8>)
10044122:	6898      	ldr	r0, [r3, #8]
}
10044124:	4770      	bx	lr
10044126:	46c0      	nop			; (mov r8, r8)
10044128:	40400000 	.word	0x40400000

1004412c <SPI_DataSizeConfig>:
*         @arg SPI_DataSize_5b: Set data frame format to 5bit
*         @arg SPI_DataSize_4b: Set data frame format to 4bit
* @retval None
*/
void SPI_DataSizeConfig(uint16_t SPI_DataSize)
{
1004412c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_SPI_DATASIZE(SPI_DataSize));
  
  /* set the datasize */  
  SPI->CR0_b.DSS = SPI_DataSize;
1004412e:	241f      	movs	r4, #31
10044130:	4904      	ldr	r1, [pc, #16]	; (10044144 <SPI_DataSizeConfig+0x18>)
10044132:	0002      	movs	r2, r0
10044134:	680b      	ldr	r3, [r1, #0]
10044136:	4022      	ands	r2, r4
10044138:	43a3      	bics	r3, r4
1004413a:	0018      	movs	r0, r3
1004413c:	4310      	orrs	r0, r2
1004413e:	6008      	str	r0, [r1, #0]
}
10044140:	bd10      	pop	{r4, pc}
10044142:	46c0      	nop			; (mov r8, r8)
10044144:	40400000 	.word	0x40400000

10044148 <SPI_GetFlagStatus>:
{
  /* Check the parameters */
  assert_param(IS_SPI_GET_FLAG(SPI_FLAG));
  
  /* Check the status of the specified SPI flag */
  if (READ_BIT(SPI->SR, SPI_FLAG) != (uint16_t)RESET) {
10044148:	4b03      	ldr	r3, [pc, #12]	; (10044158 <SPI_GetFlagStatus+0x10>)
1004414a:	7b1b      	ldrb	r3, [r3, #12]
1004414c:	4018      	ands	r0, r3
1004414e:	1e43      	subs	r3, r0, #1
10044150:	4198      	sbcs	r0, r3
10044152:	b2c0      	uxtb	r0, r0
  else {
    /* SPI_FLAG is reset */
    return RESET;
  }
  
}
10044154:	4770      	bx	lr
10044156:	46c0      	nop			; (mov r8, r8)
10044158:	40400000 	.word	0x40400000

1004415c <SPI_ClearRXFIFO>:
*					SPI peripherial clocks have to be enabled first before the use.
* @param  None
* @retval None
*/
void SPI_ClearRXFIFO(void)
{
1004415c:	b510      	push	{r4, lr}
  /* Flush the data from SPI RX FIFO */
  while(SET == SPI_GetFlagStatus(SPI_FLAG_RNE) ) {
1004415e:	2004      	movs	r0, #4
10044160:	f7ff fff2 	bl	10044148 <SPI_GetFlagStatus>
10044164:	2801      	cmp	r0, #1
10044166:	d000      	beq.n	1004416a <SPI_ClearRXFIFO+0xe>
    SPI_ReceiveData();
  }	
}
10044168:	bd10      	pop	{r4, pc}
  return SPI->DR;
1004416a:	4b01      	ldr	r3, [pc, #4]	; (10044170 <SPI_ClearRXFIFO+0x14>)
1004416c:	689b      	ldr	r3, [r3, #8]
1004416e:	e7f6      	b.n	1004415e <SPI_ClearRXFIFO+0x2>
10044170:	40400000 	.word	0x40400000

10044174 <SPI_ClearTXFIFO>:
void SPI_ClearTXFIFO(void)
{
  uint32_t tmp;

  /* Enable read from the TX FIFO */
  SPI->ITCR_b.SWAPFIFO = SET;
10044174:	2202      	movs	r2, #2
10044176:	4b08      	ldr	r3, [pc, #32]	; (10044198 <SPI_ClearTXFIFO+0x24>)
  
  /* Flush the data from the TX FIFO till it is not empty. */
  while(0 == SPI->SR_b.TFE) {
    tmp |= SPI->TDR;
10044178:	4808      	ldr	r0, [pc, #32]	; (1004419c <SPI_ClearTXFIFO+0x28>)
  SPI->ITCR_b.SWAPFIFO = SET;
1004417a:	7819      	ldrb	r1, [r3, #0]
1004417c:	430a      	orrs	r2, r1
  while(0 == SPI->SR_b.TFE) {
1004417e:	4908      	ldr	r1, [pc, #32]	; (100441a0 <SPI_ClearTXFIFO+0x2c>)
  SPI->ITCR_b.SWAPFIFO = SET;
10044180:	701a      	strb	r2, [r3, #0]
  while(0 == SPI->SR_b.TFE) {
10044182:	7b0a      	ldrb	r2, [r1, #12]
10044184:	07d2      	lsls	r2, r2, #31
10044186:	d504      	bpl.n	10044192 <SPI_ClearTXFIFO+0x1e>
  }
  
  /* Disable the read from the TX FIFO */
  SPI->ITCR_b.SWAPFIFO = RESET;
10044188:	2102      	movs	r1, #2
1004418a:	781a      	ldrb	r2, [r3, #0]
1004418c:	438a      	bics	r2, r1
1004418e:	701a      	strb	r2, [r3, #0]

}
10044190:	4770      	bx	lr
    tmp |= SPI->TDR;
10044192:	6802      	ldr	r2, [r0, #0]
10044194:	e7f5      	b.n	10044182 <SPI_ClearTXFIFO+0xe>
10044196:	46c0      	nop			; (mov r8, r8)
10044198:	40400080 	.word	0x40400080
1004419c:	4040008c 	.word	0x4040008c
100441a0:	40400000 	.word	0x40400000

100441a4 <SPI_SetMasterCommunicationMode>:
{
  /* Check the parameters */
  assert_param(IS_SPI_COM_MODE(Mode));
  
  /* Set the communication mode */
  SPI->CR0_b.SPIM = Mode;
100441a4:	2203      	movs	r2, #3
100441a6:	4904      	ldr	r1, [pc, #16]	; (100441b8 <SPI_SetMasterCommunicationMode+0x14>)
100441a8:	4002      	ands	r2, r0
100441aa:	680b      	ldr	r3, [r1, #0]
100441ac:	4803      	ldr	r0, [pc, #12]	; (100441bc <SPI_SetMasterCommunicationMode+0x18>)
100441ae:	05d2      	lsls	r2, r2, #23
100441b0:	4018      	ands	r0, r3
100441b2:	4310      	orrs	r0, r2
100441b4:	6008      	str	r0, [r1, #0]
}
100441b6:	4770      	bx	lr
100441b8:	40400000 	.word	0x40400000
100441bc:	fe7fffff 	.word	0xfe7fffff

100441c0 <SPI_SetDummyCharacter>:
* @retval None
*/
void SPI_SetDummyCharacter(uint32_t NullCharacter)
{
  /* Set the dummy character */
  SPI->CHN = NullCharacter;
100441c0:	4b01      	ldr	r3, [pc, #4]	; (100441c8 <SPI_SetDummyCharacter+0x8>)
100441c2:	62d8      	str	r0, [r3, #44]	; 0x2c
}
100441c4:	4770      	bx	lr
100441c6:	46c0      	nop			; (mov r8, r8)
100441c8:	40400000 	.word	0x40400000

100441cc <SysCtrl_PeripheralClockCmd>:
  * @param NewState: New state of the peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void SysCtrl_PeripheralClockCmd(uint32_t PeriphClock, FunctionalState NewState)
{
100441cc:	4b04      	ldr	r3, [pc, #16]	; (100441e0 <SysCtrl_PeripheralClockCmd+0x14>)
  /* Check the parameters */
  assert_param(IS_CLOCK_PERIPH(PeriphClock));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState == ENABLE) {
    SET_BIT(CKGEN_SOC->CLOCK_EN, PeriphClock);
100441ce:	6a1a      	ldr	r2, [r3, #32]
  if (NewState == ENABLE) {
100441d0:	2901      	cmp	r1, #1
100441d2:	d102      	bne.n	100441da <SysCtrl_PeripheralClockCmd+0xe>
    SET_BIT(CKGEN_SOC->CLOCK_EN, PeriphClock);
100441d4:	4310      	orrs	r0, r2
100441d6:	6218      	str	r0, [r3, #32]
  }
  else {
    CLEAR_BIT(CKGEN_SOC->CLOCK_EN, PeriphClock);
  }
}
100441d8:	4770      	bx	lr
    CLEAR_BIT(CKGEN_SOC->CLOCK_EN, PeriphClock);
100441da:	4382      	bics	r2, r0
100441dc:	621a      	str	r2, [r3, #32]
}
100441de:	e7fb      	b.n	100441d8 <SysCtrl_PeripheralClockCmd+0xc>
100441e0:	40900000 	.word	0x40900000

100441e4 <SysCtrl_GetWakeupResetReason>:
uint16_t SysCtrl_GetWakeupResetReason(void)
{
  uint32_t tmpSoc, tmpBle;
  uint16_t wakeup_src;
  
  tmpSoc = CKGEN_SOC->REASON_RST;
100441e4:	4b27      	ldr	r3, [pc, #156]	; (10044284 <SysCtrl_GetWakeupResetReason+0xa0>)
100441e6:	7a1a      	ldrb	r2, [r3, #8]
  tmpBle = CKGEN_BLE->REASON_RST;
100441e8:	4b27      	ldr	r3, [pc, #156]	; (10044288 <SysCtrl_GetWakeupResetReason+0xa4>)
  tmpSoc = CKGEN_SOC->REASON_RST;
100441ea:	b2d2      	uxtb	r2, r2
  tmpBle = CKGEN_BLE->REASON_RST;
100441ec:	891b      	ldrh	r3, [r3, #8]
100441ee:	b29b      	uxth	r3, r3

  wakeup_src = RESET_NONE;

  if ((tmpSoc == 0) &&
100441f0:	2a00      	cmp	r2, #0
100441f2:	d13c      	bne.n	1004426e <SysCtrl_GetWakeupResetReason+0x8a>
100441f4:	2009      	movs	r0, #9
100441f6:	4018      	ands	r0, r3
  wakeup_src = RESET_NONE;
100441f8:	3809      	subs	r0, #9
100441fa:	4242      	negs	r2, r0
100441fc:	4150      	adcs	r0, r2
      ((tmpBle & BLE_REASON_FROM_IO9) == BLE_REASON_FROM_IO9)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO9;
  }
  if ((tmpSoc == 0) &&
100441fe:	2211      	movs	r2, #17
  wakeup_src = RESET_NONE;
10044200:	0140      	lsls	r0, r0, #5
  if ((tmpSoc == 0) &&
10044202:	401a      	ands	r2, r3
10044204:	2a11      	cmp	r2, #17
10044206:	d101      	bne.n	1004420c <SysCtrl_GetWakeupResetReason+0x28>
      ((tmpBle & BLE_REASON_FROM_IO10) == BLE_REASON_FROM_IO10)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO10;
10044208:	322f      	adds	r2, #47	; 0x2f
1004420a:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
1004420c:	2221      	movs	r2, #33	; 0x21
1004420e:	401a      	ands	r2, r3
10044210:	2a21      	cmp	r2, #33	; 0x21
10044212:	d101      	bne.n	10044218 <SysCtrl_GetWakeupResetReason+0x34>
      ((tmpBle & BLE_REASON_FROM_IO11) == BLE_REASON_FROM_IO11)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO11;
10044214:	2280      	movs	r2, #128	; 0x80
10044216:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
10044218:	2241      	movs	r2, #65	; 0x41
1004421a:	401a      	ands	r2, r3
1004421c:	2a41      	cmp	r2, #65	; 0x41
1004421e:	d102      	bne.n	10044226 <SysCtrl_GetWakeupResetReason+0x42>
      ((tmpBle & BLE_REASON_FROM_IO12) == BLE_REASON_FROM_IO12)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO12;
10044220:	2280      	movs	r2, #128	; 0x80
10044222:	0052      	lsls	r2, r2, #1
10044224:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
10044226:	2281      	movs	r2, #129	; 0x81
10044228:	401a      	ands	r2, r3
1004422a:	2a81      	cmp	r2, #129	; 0x81
1004422c:	d102      	bne.n	10044234 <SysCtrl_GetWakeupResetReason+0x50>
      ((tmpBle & BLE_REASON_FROM_IO13) == BLE_REASON_FROM_IO13)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_IO13;
1004422e:	2280      	movs	r2, #128	; 0x80
10044230:	0092      	lsls	r2, r2, #2
10044232:	4310      	orrs	r0, r2
  }

  if ((tmpSoc == 0) &&
10044234:	2202      	movs	r2, #2
10044236:	0019      	movs	r1, r3
10044238:	32ff      	adds	r2, #255	; 0xff
1004423a:	4011      	ands	r1, r2
1004423c:	4291      	cmp	r1, r2
1004423e:	d102      	bne.n	10044246 <SysCtrl_GetWakeupResetReason+0x62>
      ((tmpBle & BLE_REASON_FROM_TIMER1) == BLE_REASON_FROM_TIMER1)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_TIMER1;
10044240:	2280      	movs	r2, #128	; 0x80
10044242:	00d2      	lsls	r2, r2, #3
10044244:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
10044246:	0019      	movs	r1, r3
10044248:	4a10      	ldr	r2, [pc, #64]	; (1004428c <SysCtrl_GetWakeupResetReason+0xa8>)
1004424a:	4011      	ands	r1, r2
1004424c:	4291      	cmp	r1, r2
1004424e:	d102      	bne.n	10044256 <SysCtrl_GetWakeupResetReason+0x72>
      ((tmpBle & BLE_REASON_FROM_TIMER2) == BLE_REASON_FROM_TIMER2)) {
    wakeup_src |= RESET_BLE_WAKEUP_FROM_TIMER2;
10044250:	2280      	movs	r2, #128	; 0x80
10044252:	0112      	lsls	r2, r2, #4
10044254:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
10044256:	2205      	movs	r2, #5
10044258:	401a      	ands	r2, r3
1004425a:	2a05      	cmp	r2, #5
1004425c:	d101      	bne.n	10044262 <SysCtrl_GetWakeupResetReason+0x7e>
      ((tmpBle & BLE_REASON_POR_RST) == BLE_REASON_POR_RST)) {
    wakeup_src |= RESET_BLE_POR;
1004425e:	2210      	movs	r2, #16
10044260:	4310      	orrs	r0, r2
  }
  if ((tmpSoc == 0) &&
10044262:	43db      	mvns	r3, r3
10044264:	079b      	lsls	r3, r3, #30
10044266:	d101      	bne.n	1004426c <SysCtrl_GetWakeupResetReason+0x88>
      ((tmpBle & BLE_REASON_BOR_RST) == BLE_REASON_BOR_RST)) {
    wakeup_src |= RESET_BLE_BOR;
10044268:	2308      	movs	r3, #8
1004426a:	4318      	orrs	r0, r3
  if((tmpSoc == SOC_REASON_LOCKUP)) {
    wakeup_src |= RESET_LOCKUP;
  }

  return wakeup_src;
}
1004426c:	4770      	bx	lr
    wakeup_src |= RESET_SYSREQ;
1004426e:	2001      	movs	r0, #1
  if (tmpSoc == SOC_REASON_SYSREQ) {
10044270:	2a02      	cmp	r2, #2
10044272:	d0fb      	beq.n	1004426c <SysCtrl_GetWakeupResetReason+0x88>
    wakeup_src |= RESET_WDG;
10044274:	1800      	adds	r0, r0, r0
  if (tmpSoc == SOC_REASON_WDG) {
10044276:	2a04      	cmp	r2, #4
10044278:	d0f8      	beq.n	1004426c <SysCtrl_GetWakeupResetReason+0x88>
  wakeup_src = RESET_NONE;
1004427a:	3a08      	subs	r2, #8
1004427c:	4250      	negs	r0, r2
1004427e:	4150      	adcs	r0, r2
10044280:	0080      	lsls	r0, r0, #2
10044282:	e7f3      	b.n	1004426c <SysCtrl_GetWakeupResetReason+0x88>
10044284:	40900000 	.word	0x40900000
10044288:	48100000 	.word	0x48100000
1004428c:	00000401 	.word	0x00000401

10044290 <UART_Cmd>:
  * @param  NewState: functional state @ref FunctionalState
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void UART_Cmd(FunctionalState NewState)
{
10044290:	4b05      	ldr	r3, [pc, #20]	; (100442a8 <UART_Cmd+0x18>)
10044292:	2201      	movs	r2, #1
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE) {
    /* Enable the selected UART by setting the UARTEN bit in the UARTCR register */
    UART->CR_b.EN = SET;
10044294:	6b19      	ldr	r1, [r3, #48]	; 0x30
  if (NewState != DISABLE) {
10044296:	2800      	cmp	r0, #0
10044298:	d002      	beq.n	100442a0 <UART_Cmd+0x10>
    UART->CR_b.EN = SET;
1004429a:	430a      	orrs	r2, r1
1004429c:	631a      	str	r2, [r3, #48]	; 0x30
  }
  else {
    /* Disable the selected UART by clearing the UARTEN bit in the UARTCR register */
    UART->CR_b.EN = RESET;
  }
}
1004429e:	4770      	bx	lr
    UART->CR_b.EN = RESET;
100442a0:	4391      	bics	r1, r2
100442a2:	6319      	str	r1, [r3, #48]	; 0x30
}
100442a4:	e7fb      	b.n	1004429e <UART_Cmd+0xe>
100442a6:	46c0      	nop			; (mov r8, r8)
100442a8:	40300000 	.word	0x40300000

100442ac <UART_Init>:
  * @param  UART_InitStruct: pointer to a @ref UART_InitType structure
  *         that contains the configuration information for the specified UART.
  * @retval None
  */
void UART_Init(UART_InitType* UART_InitStruct)
{
100442ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_UART_HW_FLOW_CONTROL(UART_InitStruct->UART_HardwareFlowControl));
  assert_param(IS_FUNCTIONAL_STATE(UART_InitStruct->UART_FifoEnable));
  
  /*---------------------------- UART BaudRate Configuration -----------------------*/
  
  if (UART->CR_b.OVSFACT == 0)
100442ae:	4c4a      	ldr	r4, [pc, #296]	; (100443d8 <UART_Init+0x12c>)
{
100442b0:	0005      	movs	r5, r0
  if (UART->CR_b.OVSFACT == 0)
100442b2:	6b23      	ldr	r3, [r4, #48]	; 0x30
100442b4:	6801      	ldr	r1, [r0, #0]
100442b6:	071b      	lsls	r3, r3, #28
100442b8:	d500      	bpl.n	100442bc <UART_Init+0x10>
100442ba:	e06d      	b.n	10044398 <UART_Init+0xec>
    divider = (UART_CLOCK<<7) / (UART_CLOCK_CYCLE16 * UART_InitStruct->UART_BaudRate);
100442bc:	0109      	lsls	r1, r1, #4
  else
    divider = (UART_CLOCK<<7) / (UART_CLOCK_CYCLE8 * UART_InitStruct->UART_BaudRate);
100442be:	4847      	ldr	r0, [pc, #284]	; (100443dc <UART_Init+0x130>)
100442c0:	f7fb ff56 	bl	10040170 <__udivsi3>
  
  ibrd = divider >> 7;
100442c4:	09c3      	lsrs	r3, r0, #7
100442c6:	b29a      	uxth	r2, r3
  UART->IBRD = ibrd;
100442c8:	84a2      	strh	r2, [r4, #36]	; 0x24
  fbrd = ((divider - (ibrd <<7) + 1) >> 1);
100442ca:	4a45      	ldr	r2, [pc, #276]	; (100443e0 <UART_Init+0x134>)
100442cc:	01db      	lsls	r3, r3, #7
100442ce:	3001      	adds	r0, #1
100442d0:	4013      	ands	r3, r2
100442d2:	1ac0      	subs	r0, r0, r3
100442d4:	0840      	lsrs	r0, r0, #1
100442d6:	b280      	uxth	r0, r0
  if (fbrd > 0x3f) {
100442d8:	283f      	cmp	r0, #63	; 0x3f
100442da:	d902      	bls.n	100442e2 <UART_Init+0x36>
    ibrd++;
    fbrd = (fbrd - 0x3F) & 0x3F;
100442dc:	233f      	movs	r3, #63	; 0x3f
100442de:	383f      	subs	r0, #63	; 0x3f
100442e0:	4018      	ands	r0, r3
  }
  UART->FBRD = fbrd;
  
  /*---------------------------- UART Word Length Configuration -----------------------*/
  UART->LCRH_TX_b.WLEN_TX = UART_InitStruct->UART_WordLengthTransmit;
100442e2:	2703      	movs	r7, #3
100442e4:	2660      	movs	r6, #96	; 0x60
  UART->FBRD = fbrd;
100442e6:	4b3f      	ldr	r3, [pc, #252]	; (100443e4 <UART_Init+0x138>)
100442e8:	b2c0      	uxtb	r0, r0
100442ea:	7018      	strb	r0, [r3, #0]
  UART->LCRH_TX_b.WLEN_TX = UART_InitStruct->UART_WordLengthTransmit;
100442ec:	4b3e      	ldr	r3, [pc, #248]	; (100443e8 <UART_Init+0x13c>)
100442ee:	792a      	ldrb	r2, [r5, #4]
100442f0:	7818      	ldrb	r0, [r3, #0]
100442f2:	403a      	ands	r2, r7
100442f4:	0152      	lsls	r2, r2, #5
100442f6:	43b0      	bics	r0, r6
100442f8:	4310      	orrs	r0, r2
100442fa:	7018      	strb	r0, [r3, #0]
  UART->LCRH_RX_b.WLEN_RX = UART_InitStruct->UART_WordLengthReceive;
  
  /*---------------------------- UART Stop Bits Configuration -----------------------*/
  UART->LCRH_TX_b.STP2_TX = UART_InitStruct->UART_StopBits;
100442fc:	2001      	movs	r0, #1
  UART->LCRH_RX_b.WLEN_RX = UART_InitStruct->UART_WordLengthReceive;
100442fe:	7969      	ldrb	r1, [r5, #5]
10044300:	7f22      	ldrb	r2, [r4, #28]
10044302:	4039      	ands	r1, r7
10044304:	0149      	lsls	r1, r1, #5
10044306:	43b2      	bics	r2, r6
10044308:	430a      	orrs	r2, r1
1004430a:	7722      	strb	r2, [r4, #28]
  UART->LCRH_TX_b.STP2_TX = UART_InitStruct->UART_StopBits;
1004430c:	79aa      	ldrb	r2, [r5, #6]
1004430e:	7819      	ldrb	r1, [r3, #0]
10044310:	4002      	ands	r2, r0
10044312:	40ba      	lsls	r2, r7
10044314:	3007      	adds	r0, #7
10044316:	4381      	bics	r1, r0
10044318:	4311      	orrs	r1, r2
1004431a:	7019      	strb	r1, [r3, #0]
  UART->LCRH_RX_b.STP2_RX = UART_InitStruct->UART_StopBits;
1004431c:	7f21      	ldrb	r1, [r4, #28]
1004431e:	4381      	bics	r1, r0
10044320:	430a      	orrs	r2, r1
10044322:	7722      	strb	r2, [r4, #28]
  
  /*---------------------------- UART Parity Configuration -----------------------*/
  if(UART_InitStruct->UART_Parity == UART_Parity_No) {
10044324:	79ea      	ldrb	r2, [r5, #7]
10044326:	2a00      	cmp	r2, #0
10044328:	d138      	bne.n	1004439c <UART_Init+0xf0>
    UART->LCRH_TX_b.PEN_TX = RESET;
1004432a:	2102      	movs	r1, #2
1004432c:	781a      	ldrb	r2, [r3, #0]
1004432e:	438a      	bics	r2, r1
10044330:	701a      	strb	r2, [r3, #0]
    UART->LCRH_RX_b.PEN_RX = RESET;
10044332:	7f22      	ldrb	r2, [r4, #28]
10044334:	438a      	bics	r2, r1
    UART->LCRH_RX_b.PEN_RX = SET;
    UART->LCRH_RX_b.EPS_RX = SET;    
  }

  /*---------------------------- UART Mode Configuration -----------------------*/
  UART->CR_b.RXE = UART_InitStruct->UART_Mode&1;
10044336:	2001      	movs	r0, #1
    UART->LCRH_RX_b.EPS_RX = SET;    
10044338:	7722      	strb	r2, [r4, #28]
  UART->CR_b.RXE = UART_InitStruct->UART_Mode&1;
1004433a:	7a2a      	ldrb	r2, [r5, #8]
1004433c:	6b21      	ldr	r1, [r4, #48]	; 0x30
1004433e:	0016      	movs	r6, r2
  UART->CR_b.TXE = (UART_InitStruct->UART_Mode>>1)&1;
10044340:	40c2      	lsrs	r2, r0
  UART->CR_b.RXE = UART_InitStruct->UART_Mode&1;
10044342:	4f2a      	ldr	r7, [pc, #168]	; (100443ec <UART_Init+0x140>)
10044344:	4006      	ands	r6, r0
10044346:	0276      	lsls	r6, r6, #9
10044348:	4039      	ands	r1, r7
1004434a:	4331      	orrs	r1, r6
1004434c:	6321      	str	r1, [r4, #48]	; 0x30
  UART->CR_b.TXE = (UART_InitStruct->UART_Mode>>1)&1;
1004434e:	6b21      	ldr	r1, [r4, #48]	; 0x30
10044350:	4e27      	ldr	r6, [pc, #156]	; (100443f0 <UART_Init+0x144>)
10044352:	4002      	ands	r2, r0
10044354:	4031      	ands	r1, r6
10044356:	0212      	lsls	r2, r2, #8
10044358:	430a      	orrs	r2, r1
1004435a:	6322      	str	r2, [r4, #48]	; 0x30

  /*---------------------------- UART Hardware flow control Configuration -----------------------*/
  UART->CR_b.RTSEN = UART_InitStruct->UART_HardwareFlowControl&1;
1004435c:	7a69      	ldrb	r1, [r5, #9]
1004435e:	6b22      	ldr	r2, [r4, #48]	; 0x30
10044360:	000e      	movs	r6, r1
  UART->CR_b.CTSEN = (UART_InitStruct->UART_HardwareFlowControl>>1)&1;
10044362:	40c1      	lsrs	r1, r0
  UART->CR_b.RTSEN = UART_InitStruct->UART_HardwareFlowControl&1;
10044364:	4f23      	ldr	r7, [pc, #140]	; (100443f4 <UART_Init+0x148>)
10044366:	4006      	ands	r6, r0
10044368:	403a      	ands	r2, r7
1004436a:	03b6      	lsls	r6, r6, #14
1004436c:	4332      	orrs	r2, r6
1004436e:	6322      	str	r2, [r4, #48]	; 0x30
  UART->CR_b.CTSEN = (UART_InitStruct->UART_HardwareFlowControl>>1)&1;
10044370:	6b22      	ldr	r2, [r4, #48]	; 0x30
10044372:	4e21      	ldr	r6, [pc, #132]	; (100443f8 <UART_Init+0x14c>)
10044374:	4001      	ands	r1, r0
10044376:	4032      	ands	r2, r6
10044378:	03c9      	lsls	r1, r1, #15
1004437a:	4311      	orrs	r1, r2
1004437c:	6321      	str	r1, [r4, #48]	; 0x30

  /*---------------------------- UART Fifo Configuration -----------------------*/
  UART->LCRH_TX_b.FEN_TX = (uint8_t)UART_InitStruct->UART_FifoEnable;
1004437e:	7aaa      	ldrb	r2, [r5, #10]
10044380:	7819      	ldrb	r1, [r3, #0]
10044382:	4002      	ands	r2, r0
10044384:	300f      	adds	r0, #15
10044386:	0112      	lsls	r2, r2, #4
10044388:	4381      	bics	r1, r0
1004438a:	4311      	orrs	r1, r2
1004438c:	7019      	strb	r1, [r3, #0]
  UART->LCRH_RX_b.FEN_RX = (uint8_t)UART_InitStruct->UART_FifoEnable;
1004438e:	7f23      	ldrb	r3, [r4, #28]
10044390:	4383      	bics	r3, r0
10044392:	431a      	orrs	r2, r3
10044394:	7722      	strb	r2, [r4, #28]

}
10044396:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    divider = (UART_CLOCK<<7) / (UART_CLOCK_CYCLE8 * UART_InitStruct->UART_BaudRate);
10044398:	00c9      	lsls	r1, r1, #3
1004439a:	e790      	b.n	100442be <UART_Init+0x12>
  else if(UART_InitStruct->UART_Parity == UART_Parity_Odd) {
1004439c:	2a02      	cmp	r2, #2
1004439e:	d10c      	bne.n	100443ba <UART_Init+0x10e>
    UART->LCRH_TX_b.EPS_TX = RESET;
100443a0:	2004      	movs	r0, #4
    UART->LCRH_TX_b.PEN_TX = SET;
100443a2:	7819      	ldrb	r1, [r3, #0]
100443a4:	4311      	orrs	r1, r2
100443a6:	7019      	strb	r1, [r3, #0]
    UART->LCRH_TX_b.EPS_TX = RESET;
100443a8:	7819      	ldrb	r1, [r3, #0]
100443aa:	4381      	bics	r1, r0
100443ac:	7019      	strb	r1, [r3, #0]
    UART->LCRH_RX_b.PEN_RX = SET;
100443ae:	7f21      	ldrb	r1, [r4, #28]
100443b0:	430a      	orrs	r2, r1
100443b2:	7722      	strb	r2, [r4, #28]
    UART->LCRH_RX_b.EPS_RX = RESET;
100443b4:	7f22      	ldrb	r2, [r4, #28]
100443b6:	4382      	bics	r2, r0
100443b8:	e7bd      	b.n	10044336 <UART_Init+0x8a>
    UART->LCRH_TX_b.PEN_TX = SET;
100443ba:	2102      	movs	r1, #2
100443bc:	781a      	ldrb	r2, [r3, #0]
100443be:	430a      	orrs	r2, r1
100443c0:	701a      	strb	r2, [r3, #0]
    UART->LCRH_TX_b.EPS_TX = SET;    
100443c2:	2204      	movs	r2, #4
100443c4:	7818      	ldrb	r0, [r3, #0]
100443c6:	4310      	orrs	r0, r2
100443c8:	7018      	strb	r0, [r3, #0]
    UART->LCRH_RX_b.PEN_RX = SET;
100443ca:	7f20      	ldrb	r0, [r4, #28]
100443cc:	4301      	orrs	r1, r0
100443ce:	7721      	strb	r1, [r4, #28]
    UART->LCRH_RX_b.EPS_RX = SET;    
100443d0:	7f21      	ldrb	r1, [r4, #28]
100443d2:	430a      	orrs	r2, r1
100443d4:	e7af      	b.n	10044336 <UART_Init+0x8a>
100443d6:	46c0      	nop			; (mov r8, r8)
100443d8:	40300000 	.word	0x40300000
100443dc:	7a120000 	.word	0x7a120000
100443e0:	007fff80 	.word	0x007fff80
100443e4:	40300028 	.word	0x40300028
100443e8:	4030002c 	.word	0x4030002c
100443ec:	fffffdff 	.word	0xfffffdff
100443f0:	fffffeff 	.word	0xfffffeff
100443f4:	ffffbfff 	.word	0xffffbfff
100443f8:	ffff7fff 	.word	0xffff7fff

100443fc <UART_ReceiveData>:
uint16_t UART_ReceiveData(void)
{
  /* Check the parameters */
  
  /* Receive Data */
  return (uint16_t)(UART->DR & 0x00FF);
100443fc:	4b01      	ldr	r3, [pc, #4]	; (10044404 <UART_ReceiveData+0x8>)
100443fe:	8818      	ldrh	r0, [r3, #0]
10044400:	b2c0      	uxtb	r0, r0
}
10044402:	4770      	bx	lr
10044404:	40300000 	.word	0x40300000

10044408 <UART_GetFlagStatus>:
  *     @arg UART_FLAG_OE:    Overrun error.
* @retval FlagStatus: functional state @ref FlagStatus
*         This parameter can be: SET or RESET.
  */
FlagStatus UART_GetFlagStatus(uint32_t UART_FLAG)
{
10044408:	4b05      	ldr	r3, [pc, #20]	; (10044420 <UART_GetFlagStatus+0x18>)
  /* Check the parameters */
  assert_param(IS_UART_FLAG(UART_FLAG));
  
  if (UART_FLAG & 0x80000000) {
1004440a:	2800      	cmp	r0, #0
1004440c:	da05      	bge.n	1004441a <UART_GetFlagStatus+0x12>
    if (UART->RSR & UART_FLAG) {
1004440e:	685b      	ldr	r3, [r3, #4]
    else {
      return RESET;
    }
  }
  else {
    if (UART->FR & UART_FLAG) {
10044410:	4018      	ands	r0, r3
10044412:	1e43      	subs	r3, r0, #1
10044414:	4198      	sbcs	r0, r3
      return SET;
10044416:	b2c0      	uxtb	r0, r0
    else {
      return RESET;
    }  
  }
  
}
10044418:	4770      	bx	lr
    if (UART->FR & UART_FLAG) {
1004441a:	8b1b      	ldrh	r3, [r3, #24]
1004441c:	e7f8      	b.n	10044410 <UART_GetFlagStatus+0x8>
1004441e:	46c0      	nop			; (mov r8, r8)
10044420:	40300000 	.word	0x40300000

10044424 <UART_GetITStatus>:
ITStatus UART_GetITStatus(uint16_t UART_IT)
{
  /* Check the parameters */
  assert_param(IS_UART_CONFIG_IT(UART_IT));
   
  if ((UART->RIS & UART_IT) != (uint16_t)RESET) {
10044424:	4b03      	ldr	r3, [pc, #12]	; (10044434 <UART_GetITStatus+0x10>)
10044426:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
10044428:	4018      	ands	r0, r3
1004442a:	1e43      	subs	r3, r0, #1
1004442c:	4198      	sbcs	r0, r3
1004442e:	b2c0      	uxtb	r0, r0
    return SET;
  }
  else {
    return RESET;
  }  
}
10044430:	4770      	bx	lr
10044432:	46c0      	nop			; (mov r8, r8)
10044434:	40300000 	.word	0x40300000

10044438 <UART_RxFifoIrqLevelConfig>:
void UART_RxFifoIrqLevelConfig(uint8_t UART_RxFifo_Level)
{
    /* Check the parameters */
  assert_param(IS_FIFO_LEV(UART_RxFifo_Level));

  UART->IFLS_b.RXIFLSEL = UART_RxFifo_Level;
10044438:	2207      	movs	r2, #7
1004443a:	4002      	ands	r2, r0
1004443c:	2038      	movs	r0, #56	; 0x38
1004443e:	4904      	ldr	r1, [pc, #16]	; (10044450 <UART_RxFifoIrqLevelConfig+0x18>)
10044440:	00d2      	lsls	r2, r2, #3
10044442:	780b      	ldrb	r3, [r1, #0]
10044444:	4383      	bics	r3, r0
10044446:	0018      	movs	r0, r3
10044448:	4310      	orrs	r0, r2
1004444a:	7008      	strb	r0, [r1, #0]
}
1004444c:	4770      	bx	lr
1004444e:	46c0      	nop			; (mov r8, r8)
10044450:	40300034 	.word	0x40300034

10044454 <SystemSleepCmd>:
  * @param  NewState: functional state @ref FunctionalState
  *         This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void SystemSleepCmd(FunctionalState NewState)
{
10044454:	4b05      	ldr	r3, [pc, #20]	; (1004446c <SystemSleepCmd+0x18>)
10044456:	2204      	movs	r2, #4
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE) {
    /** Enable Sleep/Stop mode entry on system level */
    SCB->SCR |= 1<<SCB_SCR_SLEEPDEEP_Pos;
10044458:	6919      	ldr	r1, [r3, #16]
  if (NewState != DISABLE) {
1004445a:	2800      	cmp	r0, #0
1004445c:	d002      	beq.n	10044464 <SystemSleepCmd+0x10>
    SCB->SCR |= 1<<SCB_SCR_SLEEPDEEP_Pos;
1004445e:	430a      	orrs	r2, r1
10044460:	611a      	str	r2, [r3, #16]
  }
  else {
    /** Disable Sleep/Stop mode entry on system level */
    SCB->SCR &= ~(1<<SCB_SCR_SLEEPDEEP_Pos);
  }
}
10044462:	4770      	bx	lr
    SCB->SCR &= ~(1<<SCB_SCR_SLEEPDEEP_Pos);
10044464:	4391      	bics	r1, r2
10044466:	6119      	str	r1, [r3, #16]
}
10044468:	e7fb      	b.n	10044462 <SystemSleepCmd+0xe>
1004446a:	46c0      	nop			; (mov r8, r8)
1004446c:	e000ed00 	.word	0xe000ed00

10044470 <Get_ButtonGpioPin>:
 * @{
 */

/* Buttons IRQ Pin */
uint32_t Get_ButtonGpioPin(SdkEvalButton xButton)
{
10044470:	b510      	push	{r4, lr}
10044472:	4c09      	ldr	r4, [pc, #36]	; (10044498 <Get_ButtonGpioPin+0x28>)
  uint32_t button_pin;
  switch (xButton)
10044474:	2800      	cmp	r0, #0
10044476:	d001      	beq.n	1004447c <Get_ButtonGpioPin+0xc>
10044478:	2801      	cmp	r0, #1
1004447a:	d005      	beq.n	10044488 <Get_ButtonGpioPin+0x18>
      break;
    case(BUTTON_2):
      button_pin = PUSH_BUTTON2_PIN;
      break;
    default:
      button_pin = PUSH_BUTTON1_PIN;
1004447c:	f000 f88c 	bl	10044598 <SdkEvalGetVersion>
10044480:	3801      	subs	r0, #1
10044482:	00c0      	lsls	r0, r0, #3
10044484:	5820      	ldr	r0, [r4, r0]
      break;
  }
  return (button_pin);
10044486:	e005      	b.n	10044494 <Get_ButtonGpioPin+0x24>
      button_pin = PUSH_BUTTON2_PIN;
10044488:	f000 f886 	bl	10044598 <SdkEvalGetVersion>
1004448c:	3801      	subs	r0, #1
1004448e:	00c0      	lsls	r0, r0, #3
10044490:	1820      	adds	r0, r4, r0
10044492:	6840      	ldr	r0, [r0, #4]
}
10044494:	bd10      	pop	{r4, pc}
10044496:	46c0      	nop			; (mov r8, r8)
10044498:	10058400 	.word	0x10058400

1004449c <SdkEvalComUartInit>:
 * @param  baudrate UART baudrate
 * @retval None
 */

void SdkEvalComUartInit(uint32_t baudrate)
{
1004449c:	b570      	push	{r4, r5, r6, lr}
  UART_InitType UART_InitStructure;
  
  /* GPIO Periph clock enable */
  SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_UART | CLOCK_PERIPH_GPIO, ENABLE);
1004449e:	2101      	movs	r1, #1
{
100444a0:	b086      	sub	sp, #24
100444a2:	0006      	movs	r6, r0
  SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_UART | CLOCK_PERIPH_GPIO, ENABLE);
100444a4:	2009      	movs	r0, #9
100444a6:	f7ff fe91 	bl	100441cc <SysCtrl_PeripheralClockCmd>
  
  GPIO_InitType GPIO_InitStructure;
  
  /* Configure GPIO_Pin_8 and GPIO_Pin_11 as UART_TXD and UART_RXD*/
  GPIO_InitStructure.GPIO_Pin = SDK_EVAL_UART_TX_PIN;
100444aa:	f000 f875 	bl	10044598 <SdkEvalGetVersion>
100444ae:	4b1c      	ldr	r3, [pc, #112]	; (10044520 <SdkEvalComUartInit+0x84>)
100444b0:	3801      	subs	r0, #1
100444b2:	0080      	lsls	r0, r0, #2
100444b4:	58c3      	ldr	r3, [r0, r3]
  GPIO_InitStructure.GPIO_Mode = SDK_EVAL_UART_TX_MODE;
  GPIO_InitStructure.GPIO_Pull = DISABLE;
100444b6:	2400      	movs	r4, #0
  GPIO_InitStructure.GPIO_Pin = SDK_EVAL_UART_TX_PIN;
100444b8:	9301      	str	r3, [sp, #4]
  GPIO_InitStructure.GPIO_Mode = SDK_EVAL_UART_TX_MODE;
100444ba:	f000 f86d 	bl	10044598 <SdkEvalGetVersion>
100444be:	4b19      	ldr	r3, [pc, #100]	; (10044524 <SdkEvalComUartInit+0x88>)
100444c0:	3801      	subs	r0, #1
100444c2:	0080      	lsls	r0, r0, #2
  GPIO_InitStructure.GPIO_Pin = SDK_EVAL_UART_TX_PIN;
100444c4:	ad01      	add	r5, sp, #4
  GPIO_InitStructure.GPIO_Mode = SDK_EVAL_UART_TX_MODE;
100444c6:	58c3      	ldr	r3, [r0, r3]
  GPIO_InitStructure.GPIO_HighPwr = DISABLE;
  GPIO_Init(&GPIO_InitStructure);
100444c8:	0028      	movs	r0, r5
  GPIO_InitStructure.GPIO_Mode = SDK_EVAL_UART_TX_MODE;
100444ca:	712b      	strb	r3, [r5, #4]
  GPIO_InitStructure.GPIO_Pull = DISABLE;
100444cc:	71ac      	strb	r4, [r5, #6]
  GPIO_InitStructure.GPIO_HighPwr = DISABLE;
100444ce:	716c      	strb	r4, [r5, #5]
  GPIO_Init(&GPIO_InitStructure);
100444d0:	f7ff fd0c 	bl	10043eec <GPIO_Init>

  GPIO_InitStructure.GPIO_Pin = SDK_EVAL_UART_RX_PIN;
100444d4:	f000 f860 	bl	10044598 <SdkEvalGetVersion>
100444d8:	4b13      	ldr	r3, [pc, #76]	; (10044528 <SdkEvalComUartInit+0x8c>)
100444da:	3801      	subs	r0, #1
100444dc:	0080      	lsls	r0, r0, #2
100444de:	58c3      	ldr	r3, [r0, r3]
100444e0:	9301      	str	r3, [sp, #4]
  GPIO_InitStructure.GPIO_Mode = SDK_EVAL_UART_RX_MODE;
100444e2:	f000 f859 	bl	10044598 <SdkEvalGetVersion>
100444e6:	4b11      	ldr	r3, [pc, #68]	; (1004452c <SdkEvalComUartInit+0x90>)
100444e8:	3801      	subs	r0, #1
100444ea:	0080      	lsls	r0, r0, #2
100444ec:	58c3      	ldr	r3, [r0, r3]
  GPIO_Init(&GPIO_InitStructure);
100444ee:	0028      	movs	r0, r5
  GPIO_InitStructure.GPIO_Mode = SDK_EVAL_UART_RX_MODE;
100444f0:	712b      	strb	r3, [r5, #4]
  GPIO_Init(&GPIO_InitStructure);
100444f2:	f7ff fcfb 	bl	10043eec <GPIO_Init>
  UART_InitStructure.UART_WordLengthReceive = UART_WordLength_8b;
  UART_InitStructure.UART_StopBits = UART_StopBits_1;
  UART_InitStructure.UART_Parity = UART_Parity_No;
  UART_InitStructure.UART_HardwareFlowControl = UART_HardwareFlowControl_None;
  UART_InitStructure.UART_Mode = UART_Mode_Rx | UART_Mode_Tx;
  UART_InitStructure.UART_FifoEnable = ENABLE;
100444f6:	2501      	movs	r5, #1
  UART_InitStructure.UART_WordLengthTransmit = UART_WordLength_8b;
100444f8:	2303      	movs	r3, #3
  UART_InitStructure.UART_BaudRate = baudrate;
100444fa:	a803      	add	r0, sp, #12
  UART_InitStructure.UART_WordLengthTransmit = UART_WordLength_8b;
100444fc:	7103      	strb	r3, [r0, #4]
  UART_InitStructure.UART_WordLengthReceive = UART_WordLength_8b;
100444fe:	7143      	strb	r3, [r0, #5]
  UART_InitStructure.UART_Mode = UART_Mode_Rx | UART_Mode_Tx;
10044500:	7203      	strb	r3, [r0, #8]
  UART_InitStructure.UART_StopBits = UART_StopBits_1;
10044502:	7184      	strb	r4, [r0, #6]
  UART_InitStructure.UART_Parity = UART_Parity_No;
10044504:	71c4      	strb	r4, [r0, #7]
  UART_InitStructure.UART_HardwareFlowControl = UART_HardwareFlowControl_None;
10044506:	7244      	strb	r4, [r0, #9]
  UART_InitStructure.UART_FifoEnable = ENABLE;
10044508:	7285      	strb	r5, [r0, #10]
  UART_InitStructure.UART_BaudRate = baudrate;
1004450a:	9603      	str	r6, [sp, #12]
  UART_Init(&UART_InitStructure);
1004450c:	f7ff fece 	bl	100442ac <UART_Init>
  
  /* Interrupt as soon as data is received. */
  UART_RxFifoIrqLevelConfig(FIFO_LEV_1_64);
10044510:	0020      	movs	r0, r4
10044512:	f7ff ff91 	bl	10044438 <UART_RxFifoIrqLevelConfig>

  /* Enable UART */
  UART_Cmd(ENABLE);
10044516:	0028      	movs	r0, r5
10044518:	f7ff feba 	bl	10044290 <UART_Cmd>
  
}
1004451c:	b006      	add	sp, #24
1004451e:	bd70      	pop	{r4, r5, r6, pc}
10044520:	100583fc 	.word	0x100583fc
10044524:	100583f8 	.word	0x100583f8
10044528:	100583f4 	.word	0x100583f4
1004452c:	100583f0 	.word	0x100583f0

10044530 <SdkEvalComIOReceiveData>:
 * @param  data_size number of received data 
 * @retval None
 */
void SdkEvalComIOReceiveData(uint8_t * rx_data, uint16_t data_size)
{
  if(IO_Receive_Data.IO_user_application)
10044530:	4b03      	ldr	r3, [pc, #12]	; (10044540 <SdkEvalComIOReceiveData+0x10>)
{
10044532:	b510      	push	{r4, lr}
  if(IO_Receive_Data.IO_user_application)
10044534:	681b      	ldr	r3, [r3, #0]
10044536:	2b00      	cmp	r3, #0
10044538:	d000      	beq.n	1004453c <SdkEvalComIOReceiveData+0xc>
    IO_Receive_Data.IO_user_application(rx_data,data_size);
1004453a:	4798      	blx	r3
}
1004453c:	bd10      	pop	{r4, pc}
1004453e:	46c0      	nop			; (mov r8, r8)
10044540:	20000314 	.word	0x20000314

10044544 <SdkEvalComIOUartIrqHandler>:
{
10044544:	b507      	push	{r0, r1, r2, lr}
  if(UART_GetITStatus(UART_IT_RX) != RESET)   {
10044546:	2010      	movs	r0, #16
10044548:	f7ff ff6c 	bl	10044424 <UART_GetITStatus>
1004454c:	2800      	cmp	r0, #0
1004454e:	d109      	bne.n	10044564 <SdkEvalComIOUartIrqHandler+0x20>
}
10044550:	bd07      	pop	{r0, r1, r2, pc}
      read_data = (uint8_t) (UART_ReceiveData() & 0xFF);
10044552:	f7ff ff53 	bl	100443fc <UART_ReceiveData>
10044556:	466b      	mov	r3, sp
10044558:	71d8      	strb	r0, [r3, #7]
1004455a:	3307      	adds	r3, #7
      SdkEvalComIOReceiveData(&read_data,1);
1004455c:	2101      	movs	r1, #1
1004455e:	0018      	movs	r0, r3
10044560:	f7ff ffe6 	bl	10044530 <SdkEvalComIOReceiveData>
    while(!UART_GetFlagStatus(UART_FLAG_RXFE)) {
10044564:	2010      	movs	r0, #16
10044566:	f7ff ff4f 	bl	10044408 <UART_GetFlagStatus>
1004456a:	2800      	cmp	r0, #0
1004456c:	d0f1      	beq.n	10044552 <SdkEvalComIOUartIrqHandler+0xe>
1004456e:	e7ef      	b.n	10044550 <SdkEvalComIOUartIrqHandler+0xc>

10044570 <__aeabi_memcpy>:
10044570:	b510      	push	{r4, lr}
10044572:	f003 fe26 	bl	100481c2 <memcpy>
10044576:	bd10      	pop	{r4, pc}

10044578 <__aeabi_memcpy4>:
{
  memcpy(dest, src, n);
}

void __aeabi_memcpy4(void *dest, const void *src, size_t n)
{
10044578:	b510      	push	{r4, lr}
  memcpy(dest, src, n);
1004457a:	f003 fe22 	bl	100481c2 <memcpy>
}
1004457e:	bd10      	pop	{r4, pc}

10044580 <__aeabi_memclr4>:
{
    memset(dest, 0, n);
}

void __aeabi_memclr4(void *dest, size_t n)
{
10044580:	b510      	push	{r4, lr}
10044582:	000a      	movs	r2, r1
    memset(dest, 0, n);
10044584:	2100      	movs	r1, #0
10044586:	f003 fe37 	bl	100481f8 <memset>
}
1004458a:	bd10      	pop	{r4, pc}

1004458c <SdkEvalIdentification>:
void SdkEvalIdentification(void)
{
#if USER_DEFINED_PLATFORM == STEVAL_IDB007VX

  /* Try to understand if it is possible to have information about the board */
  s_SdkEvalVersion = ID_STEVAL_IDB007V1;    
1004458c:	2201      	movs	r2, #1
1004458e:	4b01      	ldr	r3, [pc, #4]	; (10044594 <SdkEvalIdentification+0x8>)
10044590:	701a      	strb	r2, [r3, #0]
    s_SdkEvalVersion = ID_STEVAL_IDB007V1;
#elif USER_DEFINED_PLATFORM == USER_EVAL_PLATFORM
    s_SdkEvalVersion = ID_STEVAL_IDB007V1;      /* user code */
#endif
  
} /* end SdkEvalIdentification() */
10044592:	4770      	bx	lr
10044594:	20000318 	.word	0x20000318

10044598 <SdkEvalGetVersion>:
 * @param  None.
 * @retval None.
 */
uint8_t SdkEvalGetVersion(void)
{  
    return s_SdkEvalVersion; 
10044598:	4b01      	ldr	r3, [pc, #4]	; (100445a0 <SdkEvalGetVersion+0x8>)
1004459a:	7818      	ldrb	r0, [r3, #0]
1004459c:	b2c0      	uxtb	r0, r0
} /* end SdkEvalGetVersion() */
1004459e:	4770      	bx	lr
100445a0:	20000318 	.word	0x20000318

100445a4 <Get_LedGpioPin>:
 *         @arg LED2
 *         @arg LED3
 * @retval led_pin: IO pin name associated to that LED
 */
uint32_t Get_LedGpioPin(SdkEvalLed xLed)
{
100445a4:	b510      	push	{r4, lr}
100445a6:	4c0f      	ldr	r4, [pc, #60]	; (100445e4 <Get_LedGpioPin+0x40>)
  uint32_t led_pin;
  switch (xLed)
100445a8:	2801      	cmp	r0, #1
100445aa:	d00a      	beq.n	100445c2 <Get_LedGpioPin+0x1e>
100445ac:	2800      	cmp	r0, #0
100445ae:	d001      	beq.n	100445b4 <Get_LedGpioPin+0x10>
100445b0:	2802      	cmp	r0, #2
100445b2:	d00e      	beq.n	100445d2 <Get_LedGpioPin+0x2e>
      break;
    case(LED3):
      led_pin = SDK_EVAL_LED3_PIN;
      break;
    default:
      led_pin = SDK_EVAL_LED1_PIN;
100445b4:	f7ff fff0 	bl	10044598 <SdkEvalGetVersion>
100445b8:	1e43      	subs	r3, r0, #1
100445ba:	200c      	movs	r0, #12
100445bc:	4358      	muls	r0, r3
100445be:	5820      	ldr	r0, [r4, r0]
      break;
  }
  return (led_pin);
100445c0:	e006      	b.n	100445d0 <Get_LedGpioPin+0x2c>
      led_pin = SDK_EVAL_LED2_PIN;
100445c2:	f7ff ffe9 	bl	10044598 <SdkEvalGetVersion>
100445c6:	1e43      	subs	r3, r0, #1
100445c8:	200c      	movs	r0, #12
100445ca:	4358      	muls	r0, r3
100445cc:	1820      	adds	r0, r4, r0
100445ce:	6840      	ldr	r0, [r0, #4]
}
100445d0:	bd10      	pop	{r4, pc}
      led_pin = SDK_EVAL_LED3_PIN;
100445d2:	f7ff ffe1 	bl	10044598 <SdkEvalGetVersion>
100445d6:	1e43      	subs	r3, r0, #1
100445d8:	200c      	movs	r0, #12
100445da:	4358      	muls	r0, r3
100445dc:	1820      	adds	r0, r4, r0
100445de:	6880      	ldr	r0, [r0, #8]
      break;
100445e0:	e7f6      	b.n	100445d0 <Get_LedGpioPin+0x2c>
100445e2:	46c0      	nop			; (mov r8, r8)
100445e4:	10058408 	.word	0x10058408

100445e8 <_GetAvailWriteSpace>:
  unsigned r;
  //
  // Avoid warnings regarding volatile access order.  It's not a problem
  // in this case, but dampen compiler enthusiasm.
  //
  RdOff = pRing->RdOff;
100445e8:	6903      	ldr	r3, [r0, #16]
  WrOff = pRing->WrOff;
100445ea:	68c2      	ldr	r2, [r0, #12]
  if (RdOff <= WrOff) {
100445ec:	4293      	cmp	r3, r2
100445ee:	d801      	bhi.n	100445f4 <_GetAvailWriteSpace+0xc>
    r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
100445f0:	6880      	ldr	r0, [r0, #8]
100445f2:	181b      	adds	r3, r3, r0
  } else {
    r = RdOff - WrOff - 1u;
100445f4:	3b01      	subs	r3, #1
100445f6:	1a98      	subs	r0, r3, r2
  }
  return r;
}
100445f8:	4770      	bx	lr

100445fa <_WriteNoCheck>:
static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
100445fa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  Rem = pRing->SizeOfBuffer - WrOff;
100445fc:	6883      	ldr	r3, [r0, #8]
  WrOff = pRing->WrOff;
100445fe:	68c7      	ldr	r7, [r0, #12]
static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
10044600:	0005      	movs	r5, r0
10044602:	6840      	ldr	r0, [r0, #4]
10044604:	9101      	str	r1, [sp, #4]
10044606:	0014      	movs	r4, r2
  Rem = pRing->SizeOfBuffer - WrOff;
10044608:	1bde      	subs	r6, r3, r7
    SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
1004460a:	19c0      	adds	r0, r0, r7
  if (Rem > NumBytes) {
1004460c:	4296      	cmp	r6, r2
1004460e:	d904      	bls.n	1004461a <_WriteNoCheck+0x20>
    SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytes);
10044610:	f003 fdd7 	bl	100481c2 <memcpy>
    pRing->WrOff = WrOff + NumBytes;
10044614:	193c      	adds	r4, r7, r4
    pRing->WrOff = NumBytesAtOnce;
10044616:	60ec      	str	r4, [r5, #12]
}
10044618:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
    SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pData, NumBytesAtOnce);
1004461a:	0032      	movs	r2, r6
1004461c:	9901      	ldr	r1, [sp, #4]
1004461e:	f003 fdd0 	bl	100481c2 <memcpy>
    SEGGER_RTT_MEMCPY(pRing->pBuffer, pData + Rem, NumBytesAtOnce);
10044622:	9b01      	ldr	r3, [sp, #4]
    NumBytesAtOnce = NumBytes - Rem;
10044624:	1ba4      	subs	r4, r4, r6
    SEGGER_RTT_MEMCPY(pRing->pBuffer, pData + Rem, NumBytesAtOnce);
10044626:	1999      	adds	r1, r3, r6
10044628:	0022      	movs	r2, r4
1004462a:	6868      	ldr	r0, [r5, #4]
1004462c:	f003 fdc9 	bl	100481c2 <memcpy>
10044630:	e7f1      	b.n	10044616 <_WriteNoCheck+0x1c>

10044632 <_WriteBlocking>:
  NumBytesWritten = 0u;
10044632:	2300      	movs	r3, #0
static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes) {
10044634:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10044636:	0006      	movs	r6, r0
10044638:	0017      	movs	r7, r2
  WrOff = pRing->WrOff;
1004463a:	68c5      	ldr	r5, [r0, #12]
static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes) {
1004463c:	9101      	str	r1, [sp, #4]
  NumBytesWritten = 0u;
1004463e:	9300      	str	r3, [sp, #0]
    RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the meantime
10044640:	6933      	ldr	r3, [r6, #16]
10044642:	68b4      	ldr	r4, [r6, #8]
    if (RdOff > WrOff) {
10044644:	429d      	cmp	r5, r3
10044646:	d21f      	bcs.n	10044688 <_WriteBlocking+0x56>
      NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
10044648:	3b01      	subs	r3, #1
1004464a:	1b5b      	subs	r3, r3, r5
    NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes that can be written until buffer wrap-around
1004464c:	1b64      	subs	r4, r4, r5
    NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
1004464e:	42bc      	cmp	r4, r7
10044650:	d900      	bls.n	10044654 <_WriteBlocking+0x22>
10044652:	003c      	movs	r4, r7
10044654:	429c      	cmp	r4, r3
10044656:	d900      	bls.n	1004465a <_WriteBlocking+0x28>
10044658:	001c      	movs	r4, r3
    SEGGER_RTT_MEMCPY(pRing->pBuffer + WrOff, pBuffer, NumBytesToWrite);
1004465a:	6873      	ldr	r3, [r6, #4]
1004465c:	0022      	movs	r2, r4
1004465e:	1958      	adds	r0, r3, r5
10044660:	9901      	ldr	r1, [sp, #4]
10044662:	f003 fdae 	bl	100481c2 <memcpy>
    NumBytesWritten += NumBytesToWrite;
10044666:	9b00      	ldr	r3, [sp, #0]
    WrOff           += NumBytesToWrite;
10044668:	192d      	adds	r5, r5, r4
    NumBytesWritten += NumBytesToWrite;
1004466a:	191b      	adds	r3, r3, r4
1004466c:	9300      	str	r3, [sp, #0]
    pBuffer         += NumBytesToWrite;
1004466e:	9b01      	ldr	r3, [sp, #4]
    NumBytes        -= NumBytesToWrite;
10044670:	1b3f      	subs	r7, r7, r4
    pBuffer         += NumBytesToWrite;
10044672:	191b      	adds	r3, r3, r4
10044674:	9301      	str	r3, [sp, #4]
    if (WrOff == pRing->SizeOfBuffer) {
10044676:	68b3      	ldr	r3, [r6, #8]
10044678:	429d      	cmp	r5, r3
1004467a:	d100      	bne.n	1004467e <_WriteBlocking+0x4c>
      WrOff = 0u;
1004467c:	2500      	movs	r5, #0
    pRing->WrOff = WrOff;
1004467e:	60f5      	str	r5, [r6, #12]
  } while (NumBytes);
10044680:	2f00      	cmp	r7, #0
10044682:	d1dd      	bne.n	10044640 <_WriteBlocking+0xe>
}
10044684:	9800      	ldr	r0, [sp, #0]
10044686:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
      NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
10044688:	191b      	adds	r3, r3, r4
1004468a:	e7dd      	b.n	10044648 <_WriteBlocking+0x16>

1004468c <_DoInit>:
  p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
1004468c:	2303      	movs	r3, #3
static void _DoInit(void) {
1004468e:	b510      	push	{r4, lr}
  p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
10044690:	4c10      	ldr	r4, [pc, #64]	; (100446d4 <_DoInit+0x48>)
  p->aUp[0].sName         = "Terminal";
10044692:	4a11      	ldr	r2, [pc, #68]	; (100446d8 <_DoInit+0x4c>)
  p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
10044694:	6123      	str	r3, [r4, #16]
  p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
10044696:	6163      	str	r3, [r4, #20]
  p->aUp[0].pBuffer       = _acUpBuffer;
10044698:	4b10      	ldr	r3, [pc, #64]	; (100446dc <_DoInit+0x50>)
  p->aUp[0].sName         = "Terminal";
1004469a:	61a2      	str	r2, [r4, #24]
  p->aUp[0].pBuffer       = _acUpBuffer;
1004469c:	61e3      	str	r3, [r4, #28]
  p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
1004469e:	2380      	movs	r3, #128	; 0x80
  p->aDown[0].sName         = "Terminal";
100446a0:	6622      	str	r2, [r4, #96]	; 0x60
  p->aDown[0].pBuffer       = _acDownBuffer;
100446a2:	4a0f      	ldr	r2, [pc, #60]	; (100446e0 <_DoInit+0x54>)
  p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
100446a4:	00db      	lsls	r3, r3, #3
100446a6:	6223      	str	r3, [r4, #32]
  p->aDown[0].pBuffer       = _acDownBuffer;
100446a8:	6662      	str	r2, [r4, #100]	; 0x64
  p->aUp[0].RdOff         = 0u;
100446aa:	2300      	movs	r3, #0
  p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
100446ac:	2210      	movs	r2, #16
  p->aUp[0].RdOff         = 0u;
100446ae:	62a3      	str	r3, [r4, #40]	; 0x28
  p->aUp[0].WrOff         = 0u;
100446b0:	6263      	str	r3, [r4, #36]	; 0x24
  p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
100446b2:	62e3      	str	r3, [r4, #44]	; 0x2c
  p->aDown[0].RdOff         = 0u;
100446b4:	6723      	str	r3, [r4, #112]	; 0x70
  p->aDown[0].WrOff         = 0u;
100446b6:	66e3      	str	r3, [r4, #108]	; 0x6c
  p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
100446b8:	6763      	str	r3, [r4, #116]	; 0x74
  p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
100446ba:	66a2      	str	r2, [r4, #104]	; 0x68
  strcpy(&p->acID[7], "RTT");
100446bc:	4909      	ldr	r1, [pc, #36]	; (100446e4 <_DoInit+0x58>)
100446be:	480a      	ldr	r0, [pc, #40]	; (100446e8 <_DoInit+0x5c>)
100446c0:	f003 fda2 	bl	10048208 <strcpy>
  strcpy(&p->acID[0], "SEGGER");
100446c4:	4909      	ldr	r1, [pc, #36]	; (100446ec <_DoInit+0x60>)
100446c6:	0020      	movs	r0, r4
100446c8:	f003 fd9e 	bl	10048208 <strcpy>
  p->acID[6] = ' ';
100446cc:	2320      	movs	r3, #32
100446ce:	71a3      	strb	r3, [r4, #6]
}
100446d0:	bd10      	pop	{r4, pc}
100446d2:	46c0      	nop			; (mov r8, r8)
100446d4:	200007a4 	.word	0x200007a4
100446d8:	10058414 	.word	0x10058414
100446dc:	20000329 	.word	0x20000329
100446e0:	20000319 	.word	0x20000319
100446e4:	1005841d 	.word	0x1005841d
100446e8:	200007ab 	.word	0x200007ab
100446ec:	10058421 	.word	0x10058421

100446f0 <SEGGER_RTT_WriteNoLock>:
*    (1) Data is stored according to buffer flags.
*    (2) For performance reasons this function does not call Init()
*        and may only be called after RTT has been initialized.
*        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
*/
unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
100446f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100446f2:	0016      	movs	r6, r2

  pData = (const char *)pBuffer;
  //
  // Get "to-host" ring buffer.
  //
  pRing = &_SEGGER_RTT.aUp[BufferIndex];
100446f4:	2218      	movs	r2, #24
100446f6:	1c45      	adds	r5, r0, #1
100446f8:	4355      	muls	r5, r2
  //
  // How we output depends upon the mode...
  //
  switch (pRing->Flags) {
100446fa:	4342      	muls	r2, r0
  pRing = &_SEGGER_RTT.aUp[BufferIndex];
100446fc:	4b16      	ldr	r3, [pc, #88]	; (10044758 <SEGGER_RTT_WriteNoLock+0x68>)
unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
100446fe:	000f      	movs	r7, r1
  pRing = &_SEGGER_RTT.aUp[BufferIndex];
10044700:	18ed      	adds	r5, r5, r3
  switch (pRing->Flags) {
10044702:	189b      	adds	r3, r3, r2
10044704:	6adc      	ldr	r4, [r3, #44]	; 0x2c
10044706:	2c01      	cmp	r4, #1
10044708:	d012      	beq.n	10044730 <SEGGER_RTT_WriteNoLock+0x40>
1004470a:	2c00      	cmp	r4, #0
1004470c:	d003      	beq.n	10044716 <SEGGER_RTT_WriteNoLock+0x26>
1004470e:	2c02      	cmp	r4, #2
10044710:	d01b      	beq.n	1004474a <SEGGER_RTT_WriteNoLock+0x5a>
    // If we are in blocking mode, output everything.
    //
    Status = _WriteBlocking(pRing, pData, NumBytes);
    break;
  default:
    Status = 0u;
10044712:	2400      	movs	r4, #0
    break;
  }
  //
  // Finish up.
  //
  return Status;
10044714:	e00a      	b.n	1004472c <SEGGER_RTT_WriteNoLock+0x3c>
    Avail = _GetAvailWriteSpace(pRing);
10044716:	0028      	movs	r0, r5
10044718:	f7ff ff66 	bl	100445e8 <_GetAvailWriteSpace>
    if (Avail < NumBytes) {
1004471c:	42b0      	cmp	r0, r6
1004471e:	d305      	bcc.n	1004472c <SEGGER_RTT_WriteNoLock+0x3c>
      _WriteNoCheck(pRing, pData, NumBytes);
10044720:	0032      	movs	r2, r6
10044722:	0039      	movs	r1, r7
10044724:	0028      	movs	r0, r5
10044726:	f7ff ff68 	bl	100445fa <_WriteNoCheck>
1004472a:	0034      	movs	r4, r6
}
1004472c:	0020      	movs	r0, r4
1004472e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    Avail = _GetAvailWriteSpace(pRing);
10044730:	0028      	movs	r0, r5
10044732:	f7ff ff59 	bl	100445e8 <_GetAvailWriteSpace>
    Status = Avail < NumBytes ? Avail : NumBytes;
10044736:	0034      	movs	r4, r6
10044738:	4286      	cmp	r6, r0
1004473a:	d900      	bls.n	1004473e <SEGGER_RTT_WriteNoLock+0x4e>
1004473c:	0004      	movs	r4, r0
    _WriteNoCheck(pRing, pData, Status);
1004473e:	0022      	movs	r2, r4
10044740:	0039      	movs	r1, r7
10044742:	0028      	movs	r0, r5
10044744:	f7ff ff59 	bl	100445fa <_WriteNoCheck>
    break;
10044748:	e7f0      	b.n	1004472c <SEGGER_RTT_WriteNoLock+0x3c>
    Status = _WriteBlocking(pRing, pData, NumBytes);
1004474a:	0032      	movs	r2, r6
1004474c:	0028      	movs	r0, r5
1004474e:	f7ff ff70 	bl	10044632 <_WriteBlocking>
10044752:	0004      	movs	r4, r0
    break;
10044754:	e7ea      	b.n	1004472c <SEGGER_RTT_WriteNoLock+0x3c>
10044756:	46c0      	nop			; (mov r8, r8)
10044758:	200007a4 	.word	0x200007a4

1004475c <SEGGER_RTT_Write>:
*    Number of bytes which have been stored in the "Up"-buffer.
*
*  Notes
*    (1) Data is stored according to buffer flags.
*/
unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
1004475c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  unsigned Status;
  //
  INIT();
1004475e:	4b0b      	ldr	r3, [pc, #44]	; (1004478c <SEGGER_RTT_Write+0x30>)
unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
10044760:	0005      	movs	r5, r0
  INIT();
10044762:	781b      	ldrb	r3, [r3, #0]
unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
10044764:	000e      	movs	r6, r1
10044766:	0017      	movs	r7, r2
  INIT();
10044768:	2b00      	cmp	r3, #0
1004476a:	d101      	bne.n	10044770 <SEGGER_RTT_Write+0x14>
1004476c:	f7ff ff8e 	bl	1004468c <_DoInit>
  SEGGER_RTT_LOCK();
10044770:	f3ef 8410 	mrs	r4, PRIMASK
10044774:	2101      	movs	r1, #1
10044776:	f381 8810 	msr	PRIMASK, r1
  //
  // Call the non-locking write function
  //
  Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);
1004477a:	003a      	movs	r2, r7
1004477c:	0031      	movs	r1, r6
1004477e:	0028      	movs	r0, r5
10044780:	f7ff ffb6 	bl	100446f0 <SEGGER_RTT_WriteNoLock>
  //
  // Finish up.
  //
  SEGGER_RTT_UNLOCK();
10044784:	f384 8810 	msr	PRIMASK, r4
  //
  return Status;
}
10044788:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004478a:	46c0      	nop			; (mov r8, r8)
1004478c:	200007a4 	.word	0x200007a4

10044790 <SEGGER_RTT_ConfigUpBuffer>:
*  Additional information
*    Buffer 0 is configured on compile-time.
*    May only be called once per buffer.
*    Buffer name and flags can be reconfigured using the appropriate functions.
*/
int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags) {
10044790:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  int r;

  INIT();
10044792:	4c16      	ldr	r4, [pc, #88]	; (100447ec <SEGGER_RTT_ConfigUpBuffer+0x5c>)
int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags) {
10044794:	9301      	str	r3, [sp, #4]
  INIT();
10044796:	7823      	ldrb	r3, [r4, #0]
int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags) {
10044798:	0005      	movs	r5, r0
1004479a:	000f      	movs	r7, r1
1004479c:	0016      	movs	r6, r2
  INIT();
1004479e:	2b00      	cmp	r3, #0
100447a0:	d101      	bne.n	100447a6 <SEGGER_RTT_ConfigUpBuffer+0x16>
100447a2:	f7ff ff73 	bl	1004468c <_DoInit>
  if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
100447a6:	6923      	ldr	r3, [r4, #16]
100447a8:	42ab      	cmp	r3, r5
100447aa:	d91c      	bls.n	100447e6 <SEGGER_RTT_ConfigUpBuffer+0x56>
    SEGGER_RTT_LOCK();
100447ac:	f3ef 8210 	mrs	r2, PRIMASK
100447b0:	2101      	movs	r1, #1
100447b2:	f381 8810 	msr	PRIMASK, r1
    if (BufferIndex > 0u) {
100447b6:	2d00      	cmp	r5, #0
100447b8:	d00c      	beq.n	100447d4 <SEGGER_RTT_ConfigUpBuffer+0x44>
      _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
100447ba:	2318      	movs	r3, #24
100447bc:	1c69      	adds	r1, r5, #1
100447be:	4359      	muls	r1, r3
      _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
      _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
100447c0:	436b      	muls	r3, r5
      _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
100447c2:	5067      	str	r7, [r4, r1]
      _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
100447c4:	1861      	adds	r1, r4, r1
100447c6:	604e      	str	r6, [r1, #4]
      _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
100447c8:	9901      	ldr	r1, [sp, #4]
100447ca:	18e3      	adds	r3, r4, r3
100447cc:	6219      	str	r1, [r3, #32]
      _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
100447ce:	2100      	movs	r1, #0
100447d0:	6299      	str	r1, [r3, #40]	; 0x28
      _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
100447d2:	6259      	str	r1, [r3, #36]	; 0x24
    }
    _SEGGER_RTT.aUp[BufferIndex].Flags          = Flags;
100447d4:	2318      	movs	r3, #24
100447d6:	435d      	muls	r5, r3
100447d8:	9b08      	ldr	r3, [sp, #32]
100447da:	1964      	adds	r4, r4, r5
100447dc:	62e3      	str	r3, [r4, #44]	; 0x2c
    SEGGER_RTT_UNLOCK();
100447de:	f382 8810 	msr	PRIMASK, r2
    r =  0;
100447e2:	2000      	movs	r0, #0
  } else {
    r = -1;
  }
  return r;
}
100447e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    r = -1;
100447e6:	2001      	movs	r0, #1
100447e8:	4240      	negs	r0, r0
  return r;
100447ea:	e7fb      	b.n	100447e4 <SEGGER_RTT_ConfigUpBuffer+0x54>
100447ec:	200007a4 	.word	0x200007a4

100447f0 <SEGGER_RTT_Init>:
*  Function description
*    Initializes the RTT Control Block.
*    Should be used in RAM targets, at start of the application.
*
*/
void SEGGER_RTT_Init (void) {
100447f0:	b510      	push	{r4, lr}
  _DoInit();
100447f2:	f7ff ff4b 	bl	1004468c <_DoInit>
}
100447f6:	bd10      	pop	{r4, pc}

100447f8 <_StoreChar>:
*       _StoreChar
*/
static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
  unsigned Cnt;

  Cnt = p->Cnt;
100447f8:	6882      	ldr	r2, [r0, #8]
static void _StoreChar(SEGGER_RTT_PRINTF_DESC * p, char c) {
100447fa:	b510      	push	{r4, lr}
100447fc:	0004      	movs	r4, r0
  if ((Cnt + 1u) <= p->BufferSize) {
100447fe:	6840      	ldr	r0, [r0, #4]
10044800:	1c53      	adds	r3, r2, #1
10044802:	4283      	cmp	r3, r0
10044804:	d805      	bhi.n	10044812 <_StoreChar+0x1a>
    *(p->pBuffer + Cnt) = c;
10044806:	6820      	ldr	r0, [r4, #0]
10044808:	5481      	strb	r1, [r0, r2]
    p->Cnt = Cnt + 1u;
1004480a:	60a3      	str	r3, [r4, #8]
    p->ReturnValue++;
1004480c:	68e3      	ldr	r3, [r4, #12]
1004480e:	3301      	adds	r3, #1
10044810:	60e3      	str	r3, [r4, #12]
  }
  //
  // Write part of string, when the buffer is full
  //
  if (p->Cnt == p->BufferSize) {
10044812:	68a2      	ldr	r2, [r4, #8]
10044814:	6863      	ldr	r3, [r4, #4]
10044816:	429a      	cmp	r2, r3
10044818:	d109      	bne.n	1004482e <_StoreChar+0x36>
    if (SEGGER_RTT_Write(p->RTTBufferIndex, p->pBuffer, p->Cnt) != p->Cnt) {
1004481a:	6821      	ldr	r1, [r4, #0]
1004481c:	6920      	ldr	r0, [r4, #16]
1004481e:	f7ff ff9d 	bl	1004475c <SEGGER_RTT_Write>
10044822:	68a3      	ldr	r3, [r4, #8]
10044824:	4298      	cmp	r0, r3
10044826:	d003      	beq.n	10044830 <_StoreChar+0x38>
      p->ReturnValue = -1;
10044828:	2301      	movs	r3, #1
1004482a:	425b      	negs	r3, r3
1004482c:	60e3      	str	r3, [r4, #12]
    } else {
      p->Cnt = 0u;
    }
  }
}
1004482e:	bd10      	pop	{r4, pc}
      p->Cnt = 0u;
10044830:	2300      	movs	r3, #0
10044832:	60a3      	str	r3, [r4, #8]
}
10044834:	e7fb      	b.n	1004482e <_StoreChar+0x36>
	...

10044838 <_PrintUnsigned>:

/*********************************************************************
*
*       _PrintUnsigned
*/
static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigned NumDigits, unsigned FieldWidth, unsigned FormatFlags) {
10044838:	b5f0      	push	{r4, r5, r6, r7, lr}
1004483a:	0004      	movs	r4, r0
1004483c:	001d      	movs	r5, r3
  unsigned Digit;
  unsigned Number;
  unsigned Width;
  char c;

  Number = v;
1004483e:	0008      	movs	r0, r1
  Digit = 1u;
  //
  // Get actual field width
  //
  Width = 1u;
10044840:	2601      	movs	r6, #1
static void _PrintUnsigned(SEGGER_RTT_PRINTF_DESC * pBufferDesc, unsigned v, unsigned Base, unsigned NumDigits, unsigned FieldWidth, unsigned FormatFlags) {
10044842:	b085      	sub	sp, #20
10044844:	9f0a      	ldr	r7, [sp, #40]	; 0x28
10044846:	9100      	str	r1, [sp, #0]
10044848:	9201      	str	r2, [sp, #4]
  while (Number >= Base) {
1004484a:	9b01      	ldr	r3, [sp, #4]
1004484c:	4298      	cmp	r0, r3
1004484e:	d21a      	bcs.n	10044886 <_PrintUnsigned+0x4e>
10044850:	9602      	str	r6, [sp, #8]
10044852:	42ae      	cmp	r6, r5
10044854:	d200      	bcs.n	10044858 <_PrintUnsigned+0x20>
10044856:	9502      	str	r5, [sp, #8]
    Width = NumDigits;
  }
  //
  // Print leading chars if necessary
  //
  if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) {
10044858:	2301      	movs	r3, #1
1004485a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1004485c:	401a      	ands	r2, r3
1004485e:	9203      	str	r2, [sp, #12]
10044860:	d10c      	bne.n	1004487c <_PrintUnsigned+0x44>
    if (FieldWidth != 0u) {
10044862:	2f00      	cmp	r7, #0
10044864:	d00a      	beq.n	1004487c <_PrintUnsigned+0x44>
      if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
10044866:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
        c = '0';
      } else {
        c = ' ';
10044868:	2620      	movs	r6, #32
      if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
1004486a:	079b      	lsls	r3, r3, #30
1004486c:	d503      	bpl.n	10044876 <_PrintUnsigned+0x3e>
        c = '0';
1004486e:	3610      	adds	r6, #16
      if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && (NumDigits == 0u)) {
10044870:	2d00      	cmp	r5, #0
10044872:	d000      	beq.n	10044876 <_PrintUnsigned+0x3e>
        c = ' ';
10044874:	3e10      	subs	r6, #16
      }
      while ((FieldWidth != 0u) && (Width < FieldWidth)) {
10044876:	9b02      	ldr	r3, [sp, #8]
10044878:	42bb      	cmp	r3, r7
1004487a:	d309      	bcc.n	10044890 <_PrintUnsigned+0x58>
          break;
        }
      }
    }
  }
  if (pBufferDesc->ReturnValue >= 0) {
1004487c:	68e3      	ldr	r3, [r4, #12]
1004487e:	2b00      	cmp	r3, #0
10044880:	da10      	bge.n	100448a4 <_PrintUnsigned+0x6c>
          }
        }
      }
    }
  }
}
10044882:	b005      	add	sp, #20
10044884:	bdf0      	pop	{r4, r5, r6, r7, pc}
    Number = (Number / Base);
10044886:	9901      	ldr	r1, [sp, #4]
10044888:	f7fb fc72 	bl	10040170 <__udivsi3>
    Width++;
1004488c:	3601      	adds	r6, #1
1004488e:	e7dc      	b.n	1004484a <_PrintUnsigned+0x12>
        _StoreChar(pBufferDesc, c);
10044890:	0031      	movs	r1, r6
10044892:	0020      	movs	r0, r4
10044894:	f7ff ffb0 	bl	100447f8 <_StoreChar>
        if (pBufferDesc->ReturnValue < 0) {
10044898:	68e3      	ldr	r3, [r4, #12]
        FieldWidth--;
1004489a:	3f01      	subs	r7, #1
        if (pBufferDesc->ReturnValue < 0) {
1004489c:	2b00      	cmp	r3, #0
1004489e:	dbed      	blt.n	1004487c <_PrintUnsigned+0x44>
      while ((FieldWidth != 0u) && (Width < FieldWidth)) {
100448a0:	2f00      	cmp	r7, #0
100448a2:	d1e8      	bne.n	10044876 <_PrintUnsigned+0x3e>
        c = ' ';
100448a4:	2601      	movs	r6, #1
      if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure we loop at least that often, before checking anything else (> 1 check avoids problems with NumDigits being signed / unsigned)
100448a6:	2d01      	cmp	r5, #1
100448a8:	d903      	bls.n	100448b2 <_PrintUnsigned+0x7a>
        NumDigits--;
100448aa:	3d01      	subs	r5, #1
      Digit *= Base;
100448ac:	9b01      	ldr	r3, [sp, #4]
100448ae:	435e      	muls	r6, r3
      if (NumDigits > 1u) {       // User specified a min number of digits to print? => Make sure we loop at least that often, before checking anything else (> 1 check avoids problems with NumDigits being signed / unsigned)
100448b0:	e7f9      	b.n	100448a6 <_PrintUnsigned+0x6e>
        Div = v / Digit;
100448b2:	0031      	movs	r1, r6
100448b4:	9800      	ldr	r0, [sp, #0]
100448b6:	f7fb fc5b 	bl	10040170 <__udivsi3>
        if (Div < Base) {        // Is our divider big enough to extract the highest digit from value? => Done
100448ba:	9b01      	ldr	r3, [sp, #4]
100448bc:	4283      	cmp	r3, r0
100448be:	d9f5      	bls.n	100448ac <_PrintUnsigned+0x74>
      Div = v / Digit;
100448c0:	9800      	ldr	r0, [sp, #0]
100448c2:	0031      	movs	r1, r6
100448c4:	f7fb fc54 	bl	10040170 <__udivsi3>
100448c8:	0031      	movs	r1, r6
100448ca:	0005      	movs	r5, r0
100448cc:	9800      	ldr	r0, [sp, #0]
100448ce:	f7fb fcd5 	bl	1004027c <__aeabi_uidivmod>
      _StoreChar(pBufferDesc, _aV2C[Div]);
100448d2:	4b10      	ldr	r3, [pc, #64]	; (10044914 <_PrintUnsigned+0xdc>)
100448d4:	9100      	str	r1, [sp, #0]
100448d6:	0020      	movs	r0, r4
100448d8:	5d59      	ldrb	r1, [r3, r5]
100448da:	f7ff ff8d 	bl	100447f8 <_StoreChar>
      if (pBufferDesc->ReturnValue < 0) {
100448de:	68e3      	ldr	r3, [r4, #12]
100448e0:	2b00      	cmp	r3, #0
100448e2:	db05      	blt.n	100448f0 <_PrintUnsigned+0xb8>
      Digit /= Base;
100448e4:	0030      	movs	r0, r6
100448e6:	9901      	ldr	r1, [sp, #4]
100448e8:	f7fb fc42 	bl	10040170 <__udivsi3>
100448ec:	1e06      	subs	r6, r0, #0
    } while (Digit);
100448ee:	d1e7      	bne.n	100448c0 <_PrintUnsigned+0x88>
    if ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == FORMAT_FLAG_LEFT_JUSTIFY) {
100448f0:	9b03      	ldr	r3, [sp, #12]
100448f2:	2b00      	cmp	r3, #0
100448f4:	d0c5      	beq.n	10044882 <_PrintUnsigned+0x4a>
        while ((FieldWidth != 0u) && (Width < FieldWidth)) {
100448f6:	2f00      	cmp	r7, #0
100448f8:	d0c3      	beq.n	10044882 <_PrintUnsigned+0x4a>
100448fa:	9b02      	ldr	r3, [sp, #8]
100448fc:	42bb      	cmp	r3, r7
100448fe:	d2c0      	bcs.n	10044882 <_PrintUnsigned+0x4a>
          _StoreChar(pBufferDesc, ' ');
10044900:	2120      	movs	r1, #32
10044902:	0020      	movs	r0, r4
10044904:	f7ff ff78 	bl	100447f8 <_StoreChar>
          if (pBufferDesc->ReturnValue < 0) {
10044908:	68e3      	ldr	r3, [r4, #12]
          FieldWidth--;
1004490a:	3f01      	subs	r7, #1
          if (pBufferDesc->ReturnValue < 0) {
1004490c:	2b00      	cmp	r3, #0
1004490e:	daf2      	bge.n	100448f6 <_PrintUnsigned+0xbe>
10044910:	e7b7      	b.n	10044882 <_PrintUnsigned+0x4a>
10044912:	46c0      	nop			; (mov r8, r8)
10044914:	10058428 	.word	0x10058428

10044918 <SEGGER_RTT_vprintf>:
*
*  Return values
*    >= 0:  Number of bytes which have been stored in the "Up"-buffer.
*     < 0:  Error
*/
int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
10044918:	b5f0      	push	{r4, r5, r6, r7, lr}
1004491a:	b09f      	sub	sp, #124	; 0x7c
  unsigned NumDigits;
  unsigned FormatFlags;
  unsigned FieldWidth;
  char acBuffer[SEGGER_RTT_PRINTF_BUFFER_SIZE];

  BufferDesc.pBuffer        = acBuffer;
1004491c:	ab0e      	add	r3, sp, #56	; 0x38
1004491e:	9309      	str	r3, [sp, #36]	; 0x24
  BufferDesc.BufferSize     = SEGGER_RTT_PRINTF_BUFFER_SIZE;
10044920:	2340      	movs	r3, #64	; 0x40
10044922:	930a      	str	r3, [sp, #40]	; 0x28
  BufferDesc.Cnt            = 0u;
10044924:	2300      	movs	r3, #0
int SEGGER_RTT_vprintf(unsigned BufferIndex, const char * sFormat, va_list * pParamList) {
10044926:	0015      	movs	r5, r2
10044928:	9007      	str	r0, [sp, #28]
  BufferDesc.Cnt            = 0u;
1004492a:	930b      	str	r3, [sp, #44]	; 0x2c
  BufferDesc.RTTBufferIndex = BufferIndex;
1004492c:	900d      	str	r0, [sp, #52]	; 0x34
  BufferDesc.ReturnValue    = 0;
1004492e:	930c      	str	r3, [sp, #48]	; 0x30

  do {
    c = *sFormat;
10044930:	780b      	ldrb	r3, [r1, #0]
    sFormat++;
10044932:	1c4c      	adds	r4, r1, #1
    if (c == 0u) {
10044934:	2b00      	cmp	r3, #0
10044936:	d107      	bne.n	10044948 <SEGGER_RTT_vprintf+0x30>
    } else {
      _StoreChar(&BufferDesc, c);
    }
  } while (BufferDesc.ReturnValue >= 0);

  if (BufferDesc.ReturnValue > 0) {
10044938:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1004493a:	9303      	str	r3, [sp, #12]
1004493c:	2b00      	cmp	r3, #0
1004493e:	dd00      	ble.n	10044942 <SEGGER_RTT_vprintf+0x2a>
10044940:	e104      	b.n	10044b4c <SEGGER_RTT_vprintf+0x234>
    if (BufferDesc.Cnt != 0u) {
      SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
    }
    BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
  }
  return BufferDesc.ReturnValue;
10044942:	980c      	ldr	r0, [sp, #48]	; 0x30
}
10044944:	b01f      	add	sp, #124	; 0x7c
10044946:	bdf0      	pop	{r4, r5, r6, r7, pc}
    if (c == '%') {
10044948:	2b25      	cmp	r3, #37	; 0x25
1004494a:	d000      	beq.n	1004494e <SEGGER_RTT_vprintf+0x36>
1004494c:	e0f8      	b.n	10044b40 <SEGGER_RTT_vprintf+0x228>
1004494e:	2700      	movs	r7, #0
        case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
10044950:	2002      	movs	r0, #2
        case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
10044952:	2208      	movs	r2, #8
10044954:	3102      	adds	r1, #2
10044956:	1e4e      	subs	r6, r1, #1
        switch (c) {
10044958:	7833      	ldrb	r3, [r6, #0]
1004495a:	2b2b      	cmp	r3, #43	; 0x2b
1004495c:	d018      	beq.n	10044990 <SEGGER_RTT_vprintf+0x78>
1004495e:	d80d      	bhi.n	1004497c <SEGGER_RTT_vprintf+0x64>
10044960:	2b23      	cmp	r3, #35	; 0x23
10044962:	d017      	beq.n	10044994 <SEGGER_RTT_vprintf+0x7c>
10044964:	2400      	movs	r4, #0
        FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
10044966:	220a      	movs	r2, #10
        c = *sFormat;
10044968:	7833      	ldrb	r3, [r6, #0]
        if ((c < '0') || (c > '9')) {
1004496a:	0019      	movs	r1, r3
1004496c:	3930      	subs	r1, #48	; 0x30
1004496e:	2909      	cmp	r1, #9
10044970:	d812      	bhi.n	10044998 <SEGGER_RTT_vprintf+0x80>
        FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
10044972:	4354      	muls	r4, r2
10044974:	3c30      	subs	r4, #48	; 0x30
        sFormat++;
10044976:	3601      	adds	r6, #1
        FieldWidth = (FieldWidth * 10u) + ((unsigned)c - '0');
10044978:	191c      	adds	r4, r3, r4
        c = *sFormat;
1004497a:	e7f5      	b.n	10044968 <SEGGER_RTT_vprintf+0x50>
        switch (c) {
1004497c:	2b2d      	cmp	r3, #45	; 0x2d
1004497e:	d004      	beq.n	1004498a <SEGGER_RTT_vprintf+0x72>
10044980:	2b30      	cmp	r3, #48	; 0x30
10044982:	d1ef      	bne.n	10044964 <SEGGER_RTT_vprintf+0x4c>
        case '0': FormatFlags |= FORMAT_FLAG_PAD_ZERO;     sFormat++; break;
10044984:	4307      	orrs	r7, r0
10044986:	3101      	adds	r1, #1
10044988:	e7e5      	b.n	10044956 <SEGGER_RTT_vprintf+0x3e>
        case '-': FormatFlags |= FORMAT_FLAG_LEFT_JUSTIFY; sFormat++; break;
1004498a:	2301      	movs	r3, #1
        case '+': FormatFlags |= FORMAT_FLAG_PRINT_SIGN;   sFormat++; break;
1004498c:	431f      	orrs	r7, r3
1004498e:	e7fa      	b.n	10044986 <SEGGER_RTT_vprintf+0x6e>
10044990:	2304      	movs	r3, #4
10044992:	e7fb      	b.n	1004498c <SEGGER_RTT_vprintf+0x74>
        case '#': FormatFlags |= FORMAT_FLAG_ALTERNATE;    sFormat++; break;
10044994:	4317      	orrs	r7, r2
10044996:	e7f6      	b.n	10044986 <SEGGER_RTT_vprintf+0x6e>
      NumDigits = 0u;
10044998:	2200      	movs	r2, #0
1004499a:	9203      	str	r2, [sp, #12]
      if (c == '.') {
1004499c:	2b2e      	cmp	r3, #46	; 0x2e
1004499e:	d10d      	bne.n	100449bc <SEGGER_RTT_vprintf+0xa4>
          NumDigits = NumDigits * 10u + ((unsigned)c - '0');
100449a0:	210a      	movs	r1, #10
        sFormat++;
100449a2:	3601      	adds	r6, #1
          c = *sFormat;
100449a4:	7832      	ldrb	r2, [r6, #0]
          if ((c < '0') || (c > '9')) {
100449a6:	0013      	movs	r3, r2
100449a8:	3b30      	subs	r3, #48	; 0x30
100449aa:	2b09      	cmp	r3, #9
100449ac:	d806      	bhi.n	100449bc <SEGGER_RTT_vprintf+0xa4>
          NumDigits = NumDigits * 10u + ((unsigned)c - '0');
100449ae:	9b03      	ldr	r3, [sp, #12]
          sFormat++;
100449b0:	3601      	adds	r6, #1
          NumDigits = NumDigits * 10u + ((unsigned)c - '0');
100449b2:	434b      	muls	r3, r1
100449b4:	3b30      	subs	r3, #48	; 0x30
100449b6:	18d3      	adds	r3, r2, r3
100449b8:	9303      	str	r3, [sp, #12]
          c = *sFormat;
100449ba:	e7f3      	b.n	100449a4 <SEGGER_RTT_vprintf+0x8c>
      c = *sFormat;
100449bc:	7831      	ldrb	r1, [r6, #0]
        if ((c == 'l') || (c == 'h')) {
100449be:	2204      	movs	r2, #4
100449c0:	000b      	movs	r3, r1
100449c2:	4393      	bics	r3, r2
100449c4:	2b68      	cmp	r3, #104	; 0x68
100449c6:	d101      	bne.n	100449cc <SEGGER_RTT_vprintf+0xb4>
          sFormat++;
100449c8:	3601      	adds	r6, #1
100449ca:	e7f7      	b.n	100449bc <SEGGER_RTT_vprintf+0xa4>
      switch (c) {
100449cc:	2964      	cmp	r1, #100	; 0x64
100449ce:	d028      	beq.n	10044a22 <SEGGER_RTT_vprintf+0x10a>
100449d0:	d809      	bhi.n	100449e6 <SEGGER_RTT_vprintf+0xce>
100449d2:	2958      	cmp	r1, #88	; 0x58
100449d4:	d017      	beq.n	10044a06 <SEGGER_RTT_vprintf+0xee>
100449d6:	2963      	cmp	r1, #99	; 0x63
100449d8:	d01d      	beq.n	10044a16 <SEGGER_RTT_vprintf+0xfe>
100449da:	2925      	cmp	r1, #37	; 0x25
100449dc:	d10a      	bne.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
        _StoreChar(&BufferDesc, '%');
100449de:	a809      	add	r0, sp, #36	; 0x24
100449e0:	f7ff ff0a 	bl	100447f8 <_StoreChar>
        break;
100449e4:	e006      	b.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
      switch (c) {
100449e6:	2973      	cmp	r1, #115	; 0x73
100449e8:	d100      	bne.n	100449ec <SEGGER_RTT_vprintf+0xd4>
100449ea:	e090      	b.n	10044b0e <SEGGER_RTT_vprintf+0x1f6>
100449ec:	d807      	bhi.n	100449fe <SEGGER_RTT_vprintf+0xe6>
100449ee:	2970      	cmp	r1, #112	; 0x70
100449f0:	d100      	bne.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
100449f2:	e09d      	b.n	10044b30 <SEGGER_RTT_vprintf+0x218>
      sFormat++;
100449f4:	1c71      	adds	r1, r6, #1
  } while (BufferDesc.ReturnValue >= 0);
100449f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100449f8:	2b00      	cmp	r3, #0
100449fa:	da99      	bge.n	10044930 <SEGGER_RTT_vprintf+0x18>
100449fc:	e79c      	b.n	10044938 <SEGGER_RTT_vprintf+0x20>
      switch (c) {
100449fe:	2975      	cmp	r1, #117	; 0x75
10044a00:	d07c      	beq.n	10044afc <SEGGER_RTT_vprintf+0x1e4>
10044a02:	2978      	cmp	r1, #120	; 0x78
10044a04:	d1f6      	bne.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
        v = va_arg(*pParamList, int);
10044a06:	6829      	ldr	r1, [r5, #0]
        _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
10044a08:	9701      	str	r7, [sp, #4]
        v = va_arg(*pParamList, int);
10044a0a:	1d0b      	adds	r3, r1, #4
10044a0c:	602b      	str	r3, [r5, #0]
        _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, NumDigits, FieldWidth, FormatFlags);
10044a0e:	9b03      	ldr	r3, [sp, #12]
10044a10:	9400      	str	r4, [sp, #0]
        _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
10044a12:	2210      	movs	r2, #16
10044a14:	e079      	b.n	10044b0a <SEGGER_RTT_vprintf+0x1f2>
        v = va_arg(*pParamList, int);
10044a16:	682b      	ldr	r3, [r5, #0]
        c0 = (char)v;
10044a18:	6819      	ldr	r1, [r3, #0]
        v = va_arg(*pParamList, int);
10044a1a:	1d1a      	adds	r2, r3, #4
10044a1c:	602a      	str	r2, [r5, #0]
        _StoreChar(&BufferDesc, c0);
10044a1e:	b2c9      	uxtb	r1, r1
10044a20:	e7dd      	b.n	100449de <SEGGER_RTT_vprintf+0xc6>
        v = va_arg(*pParamList, int);
10044a22:	682b      	ldr	r3, [r5, #0]
10044a24:	1d1a      	adds	r2, r3, #4
10044a26:	681b      	ldr	r3, [r3, #0]
10044a28:	602a      	str	r2, [r5, #0]
  Number = (v < 0) ? -v : v;
10044a2a:	17da      	asrs	r2, r3, #31
10044a2c:	1898      	adds	r0, r3, r2
        v = va_arg(*pParamList, int);
10044a2e:	9304      	str	r3, [sp, #16]
  Width = 1u;
10044a30:	2301      	movs	r3, #1
  Number = (v < 0) ? -v : v;
10044a32:	4050      	eors	r0, r2
    Width++;
10044a34:	9305      	str	r3, [sp, #20]
  while (Number >= (int)Base) {
10044a36:	2809      	cmp	r0, #9
10044a38:	dc47      	bgt.n	10044aca <SEGGER_RTT_vprintf+0x1b2>
10044a3a:	9b03      	ldr	r3, [sp, #12]
10044a3c:	9a05      	ldr	r2, [sp, #20]
10044a3e:	9306      	str	r3, [sp, #24]
10044a40:	4293      	cmp	r3, r2
10044a42:	d200      	bcs.n	10044a46 <SEGGER_RTT_vprintf+0x12e>
10044a44:	9206      	str	r2, [sp, #24]
  if ((FieldWidth > 0u) && ((v < 0) || ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN))) {
10044a46:	2c00      	cmp	r4, #0
10044a48:	d006      	beq.n	10044a58 <SEGGER_RTT_vprintf+0x140>
10044a4a:	9b04      	ldr	r3, [sp, #16]
10044a4c:	2b00      	cmp	r3, #0
10044a4e:	db02      	blt.n	10044a56 <SEGGER_RTT_vprintf+0x13e>
10044a50:	2304      	movs	r3, #4
10044a52:	421f      	tst	r7, r3
10044a54:	d000      	beq.n	10044a58 <SEGGER_RTT_vprintf+0x140>
    FieldWidth--;
10044a56:	3c01      	subs	r4, #1
  if ((((FormatFlags & FORMAT_FLAG_PAD_ZERO) == 0u) || (NumDigits != 0u)) && ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u)) {
10044a58:	07bb      	lsls	r3, r7, #30
10044a5a:	d502      	bpl.n	10044a62 <SEGGER_RTT_vprintf+0x14a>
10044a5c:	9b03      	ldr	r3, [sp, #12]
10044a5e:	2b00      	cmp	r3, #0
10044a60:	d004      	beq.n	10044a6c <SEGGER_RTT_vprintf+0x154>
10044a62:	2301      	movs	r3, #1
10044a64:	421f      	tst	r7, r3
10044a66:	d101      	bne.n	10044a6c <SEGGER_RTT_vprintf+0x154>
    if (FieldWidth != 0u) {
10044a68:	2c00      	cmp	r4, #0
10044a6a:	d13e      	bne.n	10044aea <SEGGER_RTT_vprintf+0x1d2>
  if (pBufferDesc->ReturnValue >= 0) {
10044a6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10044a6e:	2b00      	cmp	r3, #0
10044a70:	dbc0      	blt.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
    if (v < 0) {
10044a72:	9b04      	ldr	r3, [sp, #16]
10044a74:	2b00      	cmp	r3, #0
10044a76:	da3c      	bge.n	10044af2 <SEGGER_RTT_vprintf+0x1da>
      _StoreChar(pBufferDesc, '-');
10044a78:	212d      	movs	r1, #45	; 0x2d
      v = -v;
10044a7a:	425b      	negs	r3, r3
10044a7c:	9304      	str	r3, [sp, #16]
      _StoreChar(pBufferDesc, '+');
10044a7e:	a809      	add	r0, sp, #36	; 0x24
10044a80:	f7ff feba 	bl	100447f8 <_StoreChar>
    if (pBufferDesc->ReturnValue >= 0) {
10044a84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10044a86:	2b00      	cmp	r3, #0
10044a88:	dbb4      	blt.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
      if (((FormatFlags & FORMAT_FLAG_PAD_ZERO) == FORMAT_FLAG_PAD_ZERO) && ((FormatFlags & FORMAT_FLAG_LEFT_JUSTIFY) == 0u) && (NumDigits == 0u)) {
10044a8a:	2303      	movs	r3, #3
10044a8c:	403b      	ands	r3, r7
10044a8e:	2b02      	cmp	r3, #2
10044a90:	d10f      	bne.n	10044ab2 <SEGGER_RTT_vprintf+0x19a>
10044a92:	9b03      	ldr	r3, [sp, #12]
10044a94:	2b00      	cmp	r3, #0
10044a96:	d10c      	bne.n	10044ab2 <SEGGER_RTT_vprintf+0x19a>
          while ((FieldWidth != 0u) && (Width < FieldWidth)) {
10044a98:	2c00      	cmp	r4, #0
10044a9a:	d068      	beq.n	10044b6e <SEGGER_RTT_vprintf+0x256>
10044a9c:	9b06      	ldr	r3, [sp, #24]
10044a9e:	42a3      	cmp	r3, r4
10044aa0:	d207      	bcs.n	10044ab2 <SEGGER_RTT_vprintf+0x19a>
            _StoreChar(pBufferDesc, '0');
10044aa2:	2130      	movs	r1, #48	; 0x30
10044aa4:	a809      	add	r0, sp, #36	; 0x24
10044aa6:	f7ff fea7 	bl	100447f8 <_StoreChar>
            if (pBufferDesc->ReturnValue < 0) {
10044aaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
            FieldWidth--;
10044aac:	3c01      	subs	r4, #1
            if (pBufferDesc->ReturnValue < 0) {
10044aae:	2b00      	cmp	r3, #0
10044ab0:	daf2      	bge.n	10044a98 <SEGGER_RTT_vprintf+0x180>
      if (pBufferDesc->ReturnValue >= 0) {
10044ab2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10044ab4:	2b00      	cmp	r3, #0
10044ab6:	db9d      	blt.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
        _PrintUnsigned(pBufferDesc, (unsigned)v, Base, NumDigits, FieldWidth, FormatFlags);
10044ab8:	220a      	movs	r2, #10
10044aba:	9b03      	ldr	r3, [sp, #12]
10044abc:	9904      	ldr	r1, [sp, #16]
10044abe:	9701      	str	r7, [sp, #4]
10044ac0:	9400      	str	r4, [sp, #0]
        _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
10044ac2:	a809      	add	r0, sp, #36	; 0x24
10044ac4:	f7ff feb8 	bl	10044838 <_PrintUnsigned>
        break;
10044ac8:	e794      	b.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
    Number = (Number / (int)Base);
10044aca:	210a      	movs	r1, #10
10044acc:	f7fb fbda 	bl	10040284 <__divsi3>
    Width++;
10044ad0:	9b05      	ldr	r3, [sp, #20]
10044ad2:	3301      	adds	r3, #1
10044ad4:	e7ae      	b.n	10044a34 <SEGGER_RTT_vprintf+0x11c>
        _StoreChar(pBufferDesc, ' ');
10044ad6:	2120      	movs	r1, #32
10044ad8:	a809      	add	r0, sp, #36	; 0x24
10044ada:	f7ff fe8d 	bl	100447f8 <_StoreChar>
        if (pBufferDesc->ReturnValue < 0) {
10044ade:	9b0c      	ldr	r3, [sp, #48]	; 0x30
        FieldWidth--;
10044ae0:	3c01      	subs	r4, #1
        if (pBufferDesc->ReturnValue < 0) {
10044ae2:	2b00      	cmp	r3, #0
10044ae4:	dbc2      	blt.n	10044a6c <SEGGER_RTT_vprintf+0x154>
      while ((FieldWidth != 0u) && (Width < FieldWidth)) {
10044ae6:	2c00      	cmp	r4, #0
10044ae8:	d0c3      	beq.n	10044a72 <SEGGER_RTT_vprintf+0x15a>
10044aea:	9b06      	ldr	r3, [sp, #24]
10044aec:	42a3      	cmp	r3, r4
10044aee:	d3f2      	bcc.n	10044ad6 <SEGGER_RTT_vprintf+0x1be>
10044af0:	e7bc      	b.n	10044a6c <SEGGER_RTT_vprintf+0x154>
    } else if ((FormatFlags & FORMAT_FLAG_PRINT_SIGN) == FORMAT_FLAG_PRINT_SIGN) {
10044af2:	2304      	movs	r3, #4
10044af4:	421f      	tst	r7, r3
10044af6:	d0c5      	beq.n	10044a84 <SEGGER_RTT_vprintf+0x16c>
      _StoreChar(pBufferDesc, '+');
10044af8:	212b      	movs	r1, #43	; 0x2b
10044afa:	e7c0      	b.n	10044a7e <SEGGER_RTT_vprintf+0x166>
        _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
10044afc:	220a      	movs	r2, #10
        v = va_arg(*pParamList, int);
10044afe:	6829      	ldr	r1, [r5, #0]
        _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
10044b00:	9701      	str	r7, [sp, #4]
        v = va_arg(*pParamList, int);
10044b02:	1d0b      	adds	r3, r1, #4
10044b04:	602b      	str	r3, [r5, #0]
        _PrintUnsigned(&BufferDesc, (unsigned)v, 10u, NumDigits, FieldWidth, FormatFlags);
10044b06:	9b03      	ldr	r3, [sp, #12]
10044b08:	9400      	str	r4, [sp, #0]
        _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
10044b0a:	6809      	ldr	r1, [r1, #0]
10044b0c:	e7d9      	b.n	10044ac2 <SEGGER_RTT_vprintf+0x1aa>
          const char * s = va_arg(*pParamList, const char *);
10044b0e:	682b      	ldr	r3, [r5, #0]
10044b10:	1d1a      	adds	r2, r3, #4
10044b12:	602a      	str	r2, [r5, #0]
10044b14:	681c      	ldr	r4, [r3, #0]
            c = *s;
10044b16:	7821      	ldrb	r1, [r4, #0]
            s++;
10044b18:	3401      	adds	r4, #1
            if (c == '\0') {
10044b1a:	2900      	cmp	r1, #0
10044b1c:	d100      	bne.n	10044b20 <SEGGER_RTT_vprintf+0x208>
10044b1e:	e769      	b.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
           _StoreChar(&BufferDesc, c);
10044b20:	a809      	add	r0, sp, #36	; 0x24
10044b22:	f7ff fe69 	bl	100447f8 <_StoreChar>
          } while (BufferDesc.ReturnValue >= 0);
10044b26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10044b28:	9303      	str	r3, [sp, #12]
10044b2a:	2b00      	cmp	r3, #0
10044b2c:	daf3      	bge.n	10044b16 <SEGGER_RTT_vprintf+0x1fe>
10044b2e:	e761      	b.n	100449f4 <SEGGER_RTT_vprintf+0xdc>
        v = va_arg(*pParamList, int);
10044b30:	6829      	ldr	r1, [r5, #0]
10044b32:	1d0b      	adds	r3, r1, #4
10044b34:	602b      	str	r3, [r5, #0]
        _PrintUnsigned(&BufferDesc, (unsigned)v, 16u, 8u, 8u, 0u);
10044b36:	2300      	movs	r3, #0
10044b38:	9301      	str	r3, [sp, #4]
10044b3a:	3308      	adds	r3, #8
10044b3c:	9300      	str	r3, [sp, #0]
10044b3e:	e768      	b.n	10044a12 <SEGGER_RTT_vprintf+0xfa>
      _StoreChar(&BufferDesc, c);
10044b40:	0019      	movs	r1, r3
10044b42:	a809      	add	r0, sp, #36	; 0x24
10044b44:	f7ff fe58 	bl	100447f8 <_StoreChar>
    sFormat++;
10044b48:	0021      	movs	r1, r4
10044b4a:	e754      	b.n	100449f6 <SEGGER_RTT_vprintf+0xde>
    if (BufferDesc.Cnt != 0u) {
10044b4c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10044b4e:	2a00      	cmp	r2, #0
10044b50:	d003      	beq.n	10044b5a <SEGGER_RTT_vprintf+0x242>
      SEGGER_RTT_Write(BufferIndex, acBuffer, BufferDesc.Cnt);
10044b52:	a90e      	add	r1, sp, #56	; 0x38
10044b54:	9807      	ldr	r0, [sp, #28]
10044b56:	f7ff fe01 	bl	1004475c <SEGGER_RTT_Write>
    BufferDesc.ReturnValue += (int)BufferDesc.Cnt;
10044b5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10044b5c:	9303      	str	r3, [sp, #12]
10044b5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10044b60:	9304      	str	r3, [sp, #16]
10044b62:	9a04      	ldr	r2, [sp, #16]
10044b64:	9b03      	ldr	r3, [sp, #12]
10044b66:	4694      	mov	ip, r2
10044b68:	4463      	add	r3, ip
10044b6a:	930c      	str	r3, [sp, #48]	; 0x30
10044b6c:	e6e9      	b.n	10044942 <SEGGER_RTT_vprintf+0x2a>
  Width = 1u;
10044b6e:	2400      	movs	r4, #0
10044b70:	e7a2      	b.n	10044ab8 <SEGGER_RTT_vprintf+0x1a0>

10044b72 <SEGGER_RTT_printf>:
*          u: Print the argument as an unsigned integer
*          x: Print the argument as an hexadecimal integer
*          s: Print the string pointed to by the argument
*          p: Print the argument as an 8-digit hexadecimal integer. (Argument shall be a pointer to void.)
*/
int SEGGER_RTT_printf(unsigned BufferIndex, const char * sFormat, ...) {
10044b72:	b40e      	push	{r1, r2, r3}
10044b74:	b503      	push	{r0, r1, lr}
10044b76:	ab03      	add	r3, sp, #12
10044b78:	cb02      	ldmia	r3!, {r1}
  int r;
  va_list ParamList;

  va_start(ParamList, sFormat);
  r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
10044b7a:	aa01      	add	r2, sp, #4
  va_start(ParamList, sFormat);
10044b7c:	9301      	str	r3, [sp, #4]
  r = SEGGER_RTT_vprintf(BufferIndex, sFormat, &ParamList);
10044b7e:	f7ff fecb 	bl	10044918 <SEGGER_RTT_vprintf>
  va_end(ParamList);
  return r;
}
10044b82:	b002      	add	sp, #8
10044b84:	bc08      	pop	{r3}
10044b86:	b003      	add	sp, #12
10044b88:	4718      	bx	r3

10044b8a <PKA_Handler>:
WEAK_FUNCTION(void WDG_Handler(void) {});
WEAK_FUNCTION(void ADC_Handler(void) {});
WEAK_FUNCTION(void I2C2_Handler(void) {});
WEAK_FUNCTION(void I2C1_Handler(void) {});
WEAK_FUNCTION(void DMA_Handler(void) {});
WEAK_FUNCTION(void PKA_Handler(void) {});
10044b8a:	4770      	bx	lr

10044b8c <DMA_Handler>:
10044b8c:	4770      	bx	lr

10044b8e <PendSV_Handler>:
10044b8e:	4770      	bx	lr

10044b90 <NVM_Handler>:
10044b90:	4770      	bx	lr

10044b92 <SPI_Handler>:
10044b92:	4770      	bx	lr

10044b94 <MFT1A_Handler>:
10044b94:	4770      	bx	lr

10044b96 <MFT1B_Handler>:
10044b96:	4770      	bx	lr

10044b98 <MFT2A_Handler>:
10044b98:	4770      	bx	lr

10044b9a <MFT2B_Handler>:
10044b9a:	4770      	bx	lr

10044b9c <RTC_Handler>:
10044b9c:	4770      	bx	lr

10044b9e <WDG_Handler>:
10044b9e:	4770      	bx	lr

10044ba0 <ADC_Handler>:
10044ba0:	4770      	bx	lr

10044ba2 <I2C2_Handler>:
10044ba2:	4770      	bx	lr

10044ba4 <I2C1_Handler>:
10044ba4:	4770      	bx	lr
	...

10044ba8 <Set_RF_FrontEnd>:
}

/* Configure RF FrontEnd */
void Set_RF_FrontEnd(void)
{
  uint8_t i=0;
10044ba8:	2200      	movs	r2, #0
{
10044baa:	b510      	push	{r4, lr}

  /* Hot table already populated, search the first free location */
  while (hot_table_radio_config[i] != 0)
10044bac:	4b10      	ldr	r3, [pc, #64]	; (10044bf0 <Set_RF_FrontEnd+0x48>)
10044bae:	5c99      	ldrb	r1, [r3, r2]
10044bb0:	b2c9      	uxtb	r1, r1
10044bb2:	2900      	cmp	r1, #0
10044bb4:	d117      	bne.n	10044be6 <Set_RF_FrontEnd+0x3e>
    i += (hot_table_radio_config[i] + 1);

  if ((i+3) < HOT_TABLE_RADIO_SIZE) {
10044bb6:	2a1c      	cmp	r2, #28
10044bb8:	dc14      	bgt.n	10044be4 <Set_RF_FrontEnd+0x3c>
    /* Hot table configuraiton used only for smart power management */
    hot_table_radio_config[i]   = NUMBER_CONFIG_BYTE;
10044bba:	2002      	movs	r0, #2
    hot_table_radio_config[i+1] = MOD_ANA_ENG_REG;
10044bbc:	2421      	movs	r4, #33	; 0x21
    hot_table_radio_config[i]   = NUMBER_CONFIG_BYTE;
10044bbe:	5498      	strb	r0, [r3, r2]
    hot_table_radio_config[i+1] = MOD_ANA_ENG_REG;
10044bc0:	1c50      	adds	r0, r2, #1
10044bc2:	541c      	strb	r4, [r3, r0]
    hot_table_radio_config[i+2] = CENTRAL_FREQ_MOD;
10044bc4:	1c90      	adds	r0, r2, #2
10044bc6:	3c19      	subs	r4, #25
10044bc8:	541c      	strb	r4, [r3, r0]
    hot_table_radio_config[i+3] = END_CONFIG;
10044bca:	1cd0      	adds	r0, r2, #3
10044bcc:	5419      	strb	r1, [r3, r0]

    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)(&hot_table_radio_config[i]) & 0x0000FFFFU);
10044bce:	189b      	adds	r3, r3, r2
10044bd0:	2280      	movs	r2, #128	; 0x80
10044bd2:	2190      	movs	r1, #144	; 0x90
10044bd4:	b29b      	uxth	r3, r3
10044bd6:	0252      	lsls	r2, r2, #9
10044bd8:	4313      	orrs	r3, r2
10044bda:	05c9      	lsls	r1, r1, #23
10044bdc:	60cb      	str	r3, [r1, #12]
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
10044bde:	68cb      	ldr	r3, [r1, #12]
10044be0:	4213      	tst	r3, r2
10044be2:	d1fc      	bne.n	10044bde <Set_RF_FrontEnd+0x36>
  }
}
10044be4:	bd10      	pop	{r4, pc}
    i += (hot_table_radio_config[i] + 1);
10044be6:	5c99      	ldrb	r1, [r3, r2]
10044be8:	3101      	adds	r1, #1
10044bea:	1852      	adds	r2, r2, r1
10044bec:	b2d2      	uxtb	r2, r2
10044bee:	e7de      	b.n	10044bae <Set_RF_FrontEnd+0x6>
10044bf0:	20000729 	.word	0x20000729

10044bf4 <BOR_ConfigSave>:

/* Function to store the BOR configuration and to populate the hot radio configuration table */
void BOR_ConfigSave(uint8_t pmu_ana_user_conf)
{
  uint8_t i=0;
10044bf4:	2300      	movs	r3, #0
{
10044bf6:	b530      	push	{r4, r5, lr}

  /* Hot table already populated, search the first free location */
  while (hot_table_radio_config[i] != 0)
10044bf8:	4a0e      	ldr	r2, [pc, #56]	; (10044c34 <BOR_ConfigSave+0x40>)
10044bfa:	5cd1      	ldrb	r1, [r2, r3]
10044bfc:	b2c9      	uxtb	r1, r1
10044bfe:	2900      	cmp	r1, #0
10044c00:	d113      	bne.n	10044c2a <BOR_ConfigSave+0x36>
    i += (hot_table_radio_config[i] + 1);

  if ((i+3) < HOT_TABLE_RADIO_SIZE) {
10044c02:	2b1c      	cmp	r3, #28
10044c04:	dc08      	bgt.n	10044c18 <BOR_ConfigSave+0x24>
    /* BOR configuration storage inside hot table used only for smart power managment */
    hot_table_radio_config[i]   = NUMBER_CONFIG_BYTE;
10044c06:	2402      	movs	r4, #2
    hot_table_radio_config[i+1] = PMU_ANA_USER_REG;
10044c08:	2535      	movs	r5, #53	; 0x35
    hot_table_radio_config[i]   = NUMBER_CONFIG_BYTE;
10044c0a:	54d4      	strb	r4, [r2, r3]
    hot_table_radio_config[i+1] = PMU_ANA_USER_REG;
10044c0c:	1c5c      	adds	r4, r3, #1
10044c0e:	5515      	strb	r5, [r2, r4]
    hot_table_radio_config[i+2] = pmu_ana_user_conf;
10044c10:	1c9c      	adds	r4, r3, #2
    hot_table_radio_config[i+3] = END_CONFIG;
10044c12:	3303      	adds	r3, #3
    hot_table_radio_config[i+2] = pmu_ana_user_conf;
10044c14:	5510      	strb	r0, [r2, r4]
    hot_table_radio_config[i+3] = END_CONFIG;
10044c16:	54d1      	strb	r1, [r2, r3]
  }
    
  /* BOR configuration storage used only for smart power managment */
  BOR_config[0] = NUMBER_CONFIG_BYTE;
10044c18:	2202      	movs	r2, #2
10044c1a:	4b07      	ldr	r3, [pc, #28]	; (10044c38 <BOR_ConfigSave+0x44>)
10044c1c:	701a      	strb	r2, [r3, #0]
  BOR_config[1] = PMU_ANA_USER_REG;
10044c1e:	3233      	adds	r2, #51	; 0x33
10044c20:	705a      	strb	r2, [r3, #1]
  BOR_config[2] = pmu_ana_user_conf;
  BOR_config[3] = END_CONFIG;
10044c22:	2200      	movs	r2, #0
  BOR_config[2] = pmu_ana_user_conf;
10044c24:	7098      	strb	r0, [r3, #2]
  BOR_config[3] = END_CONFIG;
10044c26:	70da      	strb	r2, [r3, #3]
}
10044c28:	bd30      	pop	{r4, r5, pc}
    i += (hot_table_radio_config[i] + 1);
10044c2a:	5cd1      	ldrb	r1, [r2, r3]
10044c2c:	3101      	adds	r1, #1
10044c2e:	185b      	adds	r3, r3, r1
10044c30:	b2db      	uxtb	r3, r3
10044c32:	e7e2      	b.n	10044bfa <BOR_ConfigSave+0x6>
10044c34:	20000729 	.word	0x20000729
10044c38:	20000a00 	.word	0x20000a00

10044c3c <SET_BORconfigStatus>:

/* Function to access the BLUE SPI registers to disable and restore the BOR configuration */
void SET_BORconfigStatus(uint8_t enabled)
{
10044c3c:	b510      	push	{r4, lr}
10044c3e:	4b10      	ldr	r3, [pc, #64]	; (10044c80 <SET_BORconfigStatus+0x44>)
  uint8_t pmu_ana_conf;
  
  if (enabled) {
10044c40:	2800      	cmp	r0, #0
10044c42:	d00a      	beq.n	10044c5a <SET_BORconfigStatus+0x1e>
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
10044c44:	2280      	movs	r2, #128	; 0x80
10044c46:	2190      	movs	r1, #144	; 0x90
10044c48:	b29b      	uxth	r3, r3
10044c4a:	0252      	lsls	r2, r2, #9
10044c4c:	4313      	orrs	r3, r2
10044c4e:	05c9      	lsls	r1, r1, #23
10044c50:	60cb      	str	r3, [r1, #12]
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
10044c52:	68cb      	ldr	r3, [r1, #12]
10044c54:	4213      	tst	r3, r2
10044c56:	d1fc      	bne.n	10044c52 <SET_BORconfigStatus+0x16>
    BOR_config[2] &= ~(1<<2);
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
    BOR_config[2] = pmu_ana_conf;
  }
}
10044c58:	bd10      	pop	{r4, pc}
    BOR_config[2] &= ~(1<<2);
10044c5a:	2104      	movs	r1, #4
    pmu_ana_conf = BOR_config[2];
10044c5c:	7898      	ldrb	r0, [r3, #2]
    BOR_config[2] &= ~(1<<2);
10044c5e:	789a      	ldrb	r2, [r3, #2]
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
10044c60:	b29c      	uxth	r4, r3
    BOR_config[2] &= ~(1<<2);
10044c62:	438a      	bics	r2, r1
10044c64:	709a      	strb	r2, [r3, #2]
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
10044c66:	2280      	movs	r2, #128	; 0x80
10044c68:	2190      	movs	r1, #144	; 0x90
10044c6a:	0252      	lsls	r2, r2, #9
10044c6c:	4314      	orrs	r4, r2
10044c6e:	05c9      	lsls	r1, r1, #23
    pmu_ana_conf = BOR_config[2];
10044c70:	b2c0      	uxtb	r0, r0
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)BOR_config & 0x0000FFFFU);
10044c72:	60cc      	str	r4, [r1, #12]
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
10044c74:	68cc      	ldr	r4, [r1, #12]
10044c76:	4214      	tst	r4, r2
10044c78:	d1fc      	bne.n	10044c74 <SET_BORconfigStatus+0x38>
    BOR_config[2] = pmu_ana_conf;
10044c7a:	7098      	strb	r0, [r3, #2]
}
10044c7c:	e7ec      	b.n	10044c58 <SET_BORconfigStatus+0x1c>
10044c7e:	46c0      	nop			; (mov r8, r8)
10044c80:	20000a00 	.word	0x20000a00

10044c84 <__low_level_init>:
  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10044c84:	2301      	movs	r3, #1
{
10044c86:	b530      	push	{r4, r5, lr}
  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10044c88:	4a26      	ldr	r2, [pc, #152]	; (10044d24 <__low_level_init+0xa0>)
  flash_sw_lock = FLASH_LOCK_WORD;
10044c8a:	2403      	movs	r4, #3
  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10044c8c:	7a11      	ldrb	r1, [r2, #8]
{
10044c8e:	b085      	sub	sp, #20
  SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10044c90:	430b      	orrs	r3, r1
10044c92:	7213      	strb	r3, [r2, #8]
  flash_sw_lock = FLASH_LOCK_WORD;
10044c94:	2200      	movs	r2, #0
10044c96:	4b24      	ldr	r3, [pc, #144]	; (10044d28 <__low_level_init+0xa4>)
10044c98:	601a      	str	r2, [r3, #0]
    reset_reason = SysCtrl_GetWakeupResetReason();
10044c9a:	f7ff faa3 	bl	100441e4 <SysCtrl_GetWakeupResetReason>
10044c9e:	466b      	mov	r3, sp
10044ca0:	3302      	adds	r3, #2
10044ca2:	8018      	strh	r0, [r3, #0]
    if (reset_reason != RESET_NONE)
10044ca4:	881a      	ldrh	r2, [r3, #0]
10044ca6:	2a00      	cmp	r2, #0
10044ca8:	d103      	bne.n	10044cb2 <__low_level_init+0x2e>
10044caa:	3c01      	subs	r4, #1
10044cac:	b2e4      	uxtb	r4, r4
  for (i=0; i<3;  i++) {
10044cae:	2c00      	cmp	r4, #0
10044cb0:	d1f3      	bne.n	10044c9a <__low_level_init+0x16>
  if (reset_reason >= RESET_BLE_WAKEUP_FROM_IO9) { 
10044cb2:	881a      	ldrh	r2, [r3, #0]
10044cb4:	2a1f      	cmp	r2, #31
10044cb6:	d932      	bls.n	10044d1e <__low_level_init+0x9a>
    nextRF_transaction(reset_reason);
10044cb8:	881b      	ldrh	r3, [r3, #0]
  int32_t time_diff = -1;
  PartInfoType Device_partInfo;
  uint8_t load_hot_table = 1;

  /* Wakeup from radio transaction. So, nothing to do */
  if (reset_reason &  RESET_BLE_WAKEUP_FROM_TIMER1) {
10044cba:	055b      	lsls	r3, r3, #21
10044cbc:	d410      	bmi.n	10044ce0 <__low_level_init+0x5c>
    return;
  }

  /* Verify device version */
  HAL_GetPartInfo(&Device_partInfo);
10044cbe:	ac01      	add	r4, sp, #4
10044cc0:	0020      	movs	r0, r4
10044cc2:	f7fe fa39 	bl	10043138 <HAL_GetPartInfo>
  if (((Device_partInfo.die_major<<4)|(Device_partInfo.die_cut)) < WA_DEVICE_VERSION) {
10044cc6:	7862      	ldrb	r2, [r4, #1]
10044cc8:	78a3      	ldrb	r3, [r4, #2]
10044cca:	0112      	lsls	r2, r2, #4
10044ccc:	431a      	orrs	r2, r3
    load_hot_table = 0;
  }
    
  /* Verify if the BLE radio is NOT active */
  if((*(volatile uint32_t*)0x200000C0 & 8U) == 0U) {
10044cce:	4b17      	ldr	r3, [pc, #92]	; (10044d2c <__low_level_init+0xa8>)
10044cd0:	681b      	ldr	r3, [r3, #0]
10044cd2:	071b      	lsls	r3, r3, #28
10044cd4:	d411      	bmi.n	10044cfa <__low_level_init+0x76>
    if (load_hot_table)
10044cd6:	2a11      	cmp	r2, #17
10044cd8:	dd02      	ble.n	10044ce0 <__low_level_init+0x5c>
      SET_BORconfigStatus(TRUE);
10044cda:	2001      	movs	r0, #1
10044cdc:	f7ff ffae 	bl	10044c3c <SET_BORconfigStatus>
    wakeupFromSleepFlag = 1; /* A wakeup from Standby or Sleep occurred */
10044ce0:	2201      	movs	r2, #1
10044ce2:	4b13      	ldr	r3, [pc, #76]	; (10044d30 <__low_level_init+0xac>)
10044ce4:	701a      	strb	r2, [r3, #0]
    CS_contextRestore();     /* Restore the context */
10044ce6:	f7fb fa14 	bl	10040112 <CS_contextRestore>
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
10044cea:	f3bf 8f4f 	dsb	sy
  SCB->AIRCR  = ((0x5FA << SCB_AIRCR_VECTKEY_Pos)      |
10044cee:	4a11      	ldr	r2, [pc, #68]	; (10044d34 <__low_level_init+0xb0>)
10044cf0:	4b11      	ldr	r3, [pc, #68]	; (10044d38 <__low_level_init+0xb4>)
10044cf2:	60da      	str	r2, [r3, #12]
10044cf4:	f3bf 8f4f 	dsb	sy
10044cf8:	e7fe      	b.n	10044cf8 <__low_level_init+0x74>
    return;
  }
  
  /* Check if the next transaction is enough in the future */
  currTimeTHR = BLUE_CTRL->CURRENT_TIME + TIMEOUT_THRESHOLD;
10044cfa:	2590      	movs	r5, #144	; 0x90
  time_diff = TIME24_DIFF(rfTimeout, currTimeTHR);
10044cfc:	4c0f      	ldr	r4, [pc, #60]	; (10044d3c <__low_level_init+0xb8>)
  currTimeTHR = BLUE_CTRL->CURRENT_TIME + TIMEOUT_THRESHOLD;
10044cfe:	05ed      	lsls	r5, r5, #23
10044d00:	6928      	ldr	r0, [r5, #16]
  time_diff = TIME24_DIFF(rfTimeout, currTimeTHR);
10044d02:	6823      	ldr	r3, [r4, #0]
10044d04:	3b28      	subs	r3, #40	; 0x28
10044d06:	1a1b      	subs	r3, r3, r0
10044d08:	021b      	lsls	r3, r3, #8
  if (time_diff > 0) {
10044d0a:	2b00      	cmp	r3, #0
10044d0c:	dde8      	ble.n	10044ce0 <__low_level_init+0x5c>
    /* There is enough time to load the hot table */
    if (load_hot_table)
10044d0e:	2a11      	cmp	r2, #17
10044d10:	dd02      	ble.n	10044d18 <__low_level_init+0x94>
      SET_BORconfigStatus(TRUE);
10044d12:	2001      	movs	r0, #1
10044d14:	f7ff ff92 	bl	10044c3c <SET_BORconfigStatus>
    /* Restore the Timeout register content after wakeup */
    BLUE_CTRL->TIMEOUT = rfTimeout;    
10044d18:	6823      	ldr	r3, [r4, #0]
10044d1a:	606b      	str	r3, [r5, #4]
10044d1c:	e7e0      	b.n	10044ce0 <__low_level_init+0x5c>
}
10044d1e:	2001      	movs	r0, #1
10044d20:	b005      	add	sp, #20
10044d22:	bd30      	pop	{r4, r5, pc}
10044d24:	40200000 	.word	0x40200000
10044d28:	20000014 	.word	0x20000014
10044d2c:	200000c0 	.word	0x200000c0
10044d30:	2000000c 	.word	0x2000000c
10044d34:	05fa0004 	.word	0x05fa0004
10044d38:	e000ed00 	.word	0xe000ed00
10044d3c:	20000018 	.word	0x20000018

10044d40 <RESET_HANDLER>:
{
10044d40:	b570      	push	{r4, r5, r6, lr}
  if(__low_level_init()==1)	{
10044d42:	f7ff ff9f 	bl	10044c84 <__low_level_init>
10044d46:	2801      	cmp	r0, #1
10044d48:	d117      	bne.n	10044d7a <RESET_HANDLER+0x3a>
10044d4a:	2300      	movs	r3, #0
    for(pulDest = &_sdata; pulDest < &_edata; )
10044d4c:	4814      	ldr	r0, [pc, #80]	; (10044da0 <RESET_HANDLER+0x60>)
10044d4e:	4915      	ldr	r1, [pc, #84]	; (10044da4 <RESET_HANDLER+0x64>)
      *(pulDest++) = *(pulSrc++);
10044d50:	4c15      	ldr	r4, [pc, #84]	; (10044da8 <RESET_HANDLER+0x68>)
    for(pulDest = &_sdata; pulDest < &_edata; )
10044d52:	181a      	adds	r2, r3, r0
10044d54:	428a      	cmp	r2, r1
10044d56:	d316      	bcc.n	10044d86 <RESET_HANDLER+0x46>
10044d58:	2300      	movs	r3, #0
    for(pulDest = &_sdata2; pulDest < &_edata2; )
10044d5a:	4814      	ldr	r0, [pc, #80]	; (10044dac <RESET_HANDLER+0x6c>)
10044d5c:	4914      	ldr	r1, [pc, #80]	; (10044db0 <RESET_HANDLER+0x70>)
      *(pulDest++) = *(pulSrc++);
10044d5e:	4c15      	ldr	r4, [pc, #84]	; (10044db4 <RESET_HANDLER+0x74>)
    for(pulDest = &_sdata2; pulDest < &_edata2; )
10044d60:	181a      	adds	r2, r3, r0
10044d62:	428a      	cmp	r2, r1
10044d64:	d313      	bcc.n	10044d8e <RESET_HANDLER+0x4e>
      *(pulDest++) = 0;
10044d66:	2100      	movs	r1, #0
10044d68:	4b13      	ldr	r3, [pc, #76]	; (10044db8 <RESET_HANDLER+0x78>)
    for(pulDest = &_sbssblue; pulDest < &_ebssblue; )
10044d6a:	4a14      	ldr	r2, [pc, #80]	; (10044dbc <RESET_HANDLER+0x7c>)
10044d6c:	4293      	cmp	r3, r2
10044d6e:	d312      	bcc.n	10044d96 <RESET_HANDLER+0x56>
      *(pulDest++) = 0;
10044d70:	2100      	movs	r1, #0
10044d72:	4b13      	ldr	r3, [pc, #76]	; (10044dc0 <RESET_HANDLER+0x80>)
    for(pulDest = &_sbss; pulDest < &_ebss; )
10044d74:	4a13      	ldr	r2, [pc, #76]	; (10044dc4 <RESET_HANDLER+0x84>)
10044d76:	4293      	cmp	r3, r2
10044d78:	d30f      	bcc.n	10044d9a <RESET_HANDLER+0x5a>
  __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) );
10044d7a:	4b13      	ldr	r3, [pc, #76]	; (10044dc8 <RESET_HANDLER+0x88>)
10044d7c:	f383 8808 	msr	MSP, r3
  main();
10044d80:	f002 fdc0 	bl	10047904 <main>
}
10044d84:	bd70      	pop	{r4, r5, r6, pc}
      *(pulDest++) = *(pulSrc++);
10044d86:	58e5      	ldr	r5, [r4, r3]
10044d88:	3304      	adds	r3, #4
10044d8a:	6015      	str	r5, [r2, #0]
10044d8c:	e7e1      	b.n	10044d52 <RESET_HANDLER+0x12>
      *(pulDest++) = *(pulSrc++);
10044d8e:	58e5      	ldr	r5, [r4, r3]
10044d90:	3304      	adds	r3, #4
10044d92:	6015      	str	r5, [r2, #0]
10044d94:	e7e4      	b.n	10044d60 <RESET_HANDLER+0x20>
      *(pulDest++) = 0;
10044d96:	c302      	stmia	r3!, {r1}
10044d98:	e7e8      	b.n	10044d6c <RESET_HANDLER+0x2c>
      *(pulDest++) = 0;
10044d9a:	c302      	stmia	r3!, {r1}
10044d9c:	e7eb      	b.n	10044d76 <RESET_HANDLER+0x36>
10044d9e:	46c0      	nop			; (mov r8, r8)
10044da0:	20000944 	.word	0x20000944
10044da4:	20000a00 	.word	0x20000a00
10044da8:	100590c8 	.word	0x100590c8
10044dac:	20000008 	.word	0x20000008
10044db0:	20000034 	.word	0x20000034
10044db4:	1005909c 	.word	0x1005909c
10044db8:	200000c0 	.word	0x200000c0
10044dbc:	200002cc 	.word	0x200002cc
10044dc0:	200002cc 	.word	0x200002cc
10044dc4:	20000944 	.word	0x20000944
10044dc8:	20006000 	.word	0x20006000

10044dcc <DeviceConfiguration>:
  
}
#endif

void DeviceConfiguration(BOOL coldStart, BOOL waitLS_Ready)
{
10044dcc:	b570      	push	{r4, r5, r6, lr}
10044dce:	b08a      	sub	sp, #40	; 0x28
  uint32_t current_time;
  uint32_t Trimm_config;
  uint8_t pmu_ana_user;
  PartInfoType Device_partInfo;
  volatile uint8_t cold_start_config[] = COLD_START_CONFIGURATION;
10044dd0:	ac03      	add	r4, sp, #12
{
10044dd2:	0005      	movs	r5, r0
10044dd4:	000e      	movs	r6, r1
  volatile uint8_t cold_start_config[] = COLD_START_CONFIGURATION;
10044dd6:	2219      	movs	r2, #25
10044dd8:	4943      	ldr	r1, [pc, #268]	; (10044ee8 <DeviceConfiguration+0x11c>)
10044dda:	0020      	movs	r0, r4
10044ddc:	f003 f9f1 	bl	100481c2 <memcpy>

  /* Get partInfo */
  HAL_GetPartInfo(&Device_partInfo);
10044de0:	4668      	mov	r0, sp
10044de2:	f7fe f9a9 	bl	10043138 <HAL_GetPartInfo>
  
  if (coldStart) {    
10044de6:	2d00      	cmp	r5, #0
10044de8:	d060      	beq.n	10044eac <DeviceConfiguration+0xe0>
    /* High Speed Crystal Configuration */
#if (HS_SPEED_XTAL == HS_SPEED_XTAL_32MHZ)
    cold_start_config[14] = HIGH_FREQ_32M;
10044dea:	2344      	movs	r3, #68	; 0x44
    /* Set 32MHz_SEL bit in the System controller register */
    SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10044dec:	4a3f      	ldr	r2, [pc, #252]	; (10044eec <DeviceConfiguration+0x120>)
    cold_start_config[14] = HIGH_FREQ_32M;
10044dee:	73a3      	strb	r3, [r4, #14]
    SYSTEM_CTRL->CTRL_b.MHZ32_SEL = 1;
10044df0:	7a11      	ldrb	r1, [r2, #8]
10044df2:	3b43      	subs	r3, #67	; 0x43
10044df4:	430b      	orrs	r3, r1
10044df6:	7213      	strb	r3, [r2, #8]
#error "No definition for High Speed Crystal"
#endif

    /* SMPS configuration */
#if (SMPS_INDUCTOR == SMPS_INDUCTOR_10uH)
    cold_start_config[11] = SMPS_ON;
10044df8:	234c      	movs	r3, #76	; 0x4c
10044dfa:	72e3      	strb	r3, [r4, #11]
    cold_start_config[8] = SMPS_10uH_RM1;
10044dfc:	3b2c      	subs	r3, #44	; 0x2c
10044dfe:	7223      	strb	r3, [r4, #8]
    cold_start_config[17] = SMPS_10uH_PMU;
10044e00:	3392      	adds	r3, #146	; 0x92
10044e02:	7463      	strb	r3, [r4, #17]
#warning "No definition for SMPS Configuration"
#endif
  
    /* Low Speed Crystal Source */
#if (LS_SOURCE == LS_SOURCE_EXTERNAL_32KHZ)
    cold_start_config[20] = LOW_FREQ_XO;
10044e04:	3b57      	subs	r3, #87	; 0x57
10044e06:	7523      	strb	r3, [r4, #20]
#else
#warning "No definition for Low Speed Crystal Source"
#endif

    /* Setup RCO32K trimming value in PMU_ANA_USER_REG  */
    Trimm_config = *(volatile uint32_t*)RCO32K_TRIMMING_FLASH_ADDR;
10044e08:	4b39      	ldr	r3, [pc, #228]	; (10044ef0 <DeviceConfiguration+0x124>)
    if ((Trimm_config >> 16) == CHECK_BYTES) {
10044e0a:	4a3a      	ldr	r2, [pc, #232]	; (10044ef4 <DeviceConfiguration+0x128>)
    Trimm_config = *(volatile uint32_t*)RCO32K_TRIMMING_FLASH_ADDR;
10044e0c:	681b      	ldr	r3, [r3, #0]
    if ((Trimm_config >> 16) == CHECK_BYTES) {
10044e0e:	0c19      	lsrs	r1, r3, #16
10044e10:	4291      	cmp	r1, r2
10044e12:	d108      	bne.n	10044e26 <DeviceConfiguration+0x5a>
      cold_start_config[23] &= ~0x70;                  // Clear the register content bit 4-5-6
10044e14:	2070      	movs	r0, #112	; 0x70
10044e16:	7de1      	ldrb	r1, [r4, #23]
      cold_start_config[23] |= (Trimm_config&0x7)<<4;  // Store the RCO32K trimming value in bit 4-5-6
10044e18:	011b      	lsls	r3, r3, #4
      cold_start_config[23] &= ~0x70;                  // Clear the register content bit 4-5-6
10044e1a:	4381      	bics	r1, r0
10044e1c:	75e1      	strb	r1, [r4, #23]
      cold_start_config[23] |= (Trimm_config&0x7)<<4;  // Store the RCO32K trimming value in bit 4-5-6
10044e1e:	7de1      	ldrb	r1, [r4, #23]
10044e20:	4003      	ands	r3, r0
10044e22:	430b      	orrs	r3, r1
10044e24:	75e3      	strb	r3, [r4, #23]
    }
 
    /* Setup LDO1V2 trimming value in ATB1_ANA_ENG_REG  */
    Trimm_config = *(volatile uint32_t*)LDO1V2_TRIMMING_FLASH_ADDR;
10044e26:	4b34      	ldr	r3, [pc, #208]	; (10044ef8 <DeviceConfiguration+0x12c>)
10044e28:	681b      	ldr	r3, [r3, #0]
    if ((Trimm_config >> 16) == CHECK_BYTES) {
10044e2a:	0c19      	lsrs	r1, r3, #16
10044e2c:	4291      	cmp	r1, r2
10044e2e:	d108      	bne.n	10044e42 <DeviceConfiguration+0x76>
      cold_start_config[5] &= ~0x30;                 // Clear the register content of bit 4 and 5
10044e30:	2030      	movs	r0, #48	; 0x30
10044e32:	7961      	ldrb	r1, [r4, #5]
      cold_start_config[5] |= (Trimm_config&0x3)<<4; // Store the LDO1V2 trimming value in bit 4 and 5
10044e34:	011b      	lsls	r3, r3, #4
      cold_start_config[5] &= ~0x30;                 // Clear the register content of bit 4 and 5
10044e36:	4381      	bics	r1, r0
10044e38:	7161      	strb	r1, [r4, #5]
      cold_start_config[5] |= (Trimm_config&0x3)<<4; // Store the LDO1V2 trimming value in bit 4 and 5
10044e3a:	7961      	ldrb	r1, [r4, #5]
10044e3c:	4003      	ands	r3, r0
10044e3e:	430b      	orrs	r3, r1
10044e40:	7163      	strb	r3, [r4, #5]
    }

    /* Setup Battery Level Detector Threshold value in PMU_ANA_USER_REG  */
    Trimm_config = *(volatile uint32_t*)SET_BLD_LVL_TRIMMING_FLASH_ADDR;
10044e42:	4b2e      	ldr	r3, [pc, #184]	; (10044efc <DeviceConfiguration+0x130>)
10044e44:	681b      	ldr	r3, [r3, #0]
    if ((Trimm_config >> 16) == CHECK_BYTES) {
10044e46:	0c19      	lsrs	r1, r3, #16
10044e48:	4291      	cmp	r1, r2
10044e4a:	d107      	bne.n	10044e5c <DeviceConfiguration+0x90>
      cold_start_config[23] &= ~0x03;              // Clear the register content of bit 0 and 1
10044e4c:	2103      	movs	r1, #3
10044e4e:	7de2      	ldrb	r2, [r4, #23]
      cold_start_config[23] |= (Trimm_config&0x3); // Store the BLD_LVL trimming value in bit 0 and 1
10044e50:	400b      	ands	r3, r1
      cold_start_config[23] &= ~0x03;              // Clear the register content of bit 0 and 1
10044e52:	438a      	bics	r2, r1
10044e54:	75e2      	strb	r2, [r4, #23]
      cold_start_config[23] |= (Trimm_config&0x3); // Store the BLD_LVL trimming value in bit 0 and 1
10044e56:	7de2      	ldrb	r2, [r4, #23]
10044e58:	4313      	orrs	r3, r2
10044e5a:	75e3      	strb	r3, [r4, #23]
    }

    /* BOR configuration. Note: this setup shall be executed after the SMPS configuration*/
#if (BOR_CONFIG == BOR_ON)
    /* Clear the 3 bit of the CLOCK_LOW_ENG_REG register */
    cold_start_config[11] &= ~(1<<2);
10044e5c:	2204      	movs	r2, #4
10044e5e:	7ae3      	ldrb	r3, [r4, #11]
    if (((Device_partInfo.die_major<<4)|(Device_partInfo.die_cut)) >= WA_DEVICE_VERSION) {
10044e60:	4669      	mov	r1, sp
    cold_start_config[11] &= ~(1<<2);
10044e62:	4393      	bics	r3, r2
10044e64:	72e3      	strb	r3, [r4, #11]
    if (((Device_partInfo.die_major<<4)|(Device_partInfo.die_cut)) >= WA_DEVICE_VERSION) {
10044e66:	466b      	mov	r3, sp
10044e68:	785b      	ldrb	r3, [r3, #1]
10044e6a:	7889      	ldrb	r1, [r1, #2]
10044e6c:	4093      	lsls	r3, r2
10044e6e:	430b      	orrs	r3, r1
10044e70:	2b11      	cmp	r3, #17
10044e72:	dd06      	ble.n	10044e82 <DeviceConfiguration+0xb6>
      /* Set the 3 bit of the PMU_ANA_USER register */
      cold_start_config[23] |= (1<<2);    
10044e74:	7de3      	ldrb	r3, [r4, #23]
10044e76:	431a      	orrs	r2, r3
10044e78:	75e2      	strb	r2, [r4, #23]
      pmu_ana_user = cold_start_config[23];
10044e7a:	7de0      	ldrb	r0, [r4, #23]
10044e7c:	b2c0      	uxtb	r0, r0
      BOR_ConfigSave(pmu_ana_user);
10044e7e:	f7ff feb9 	bl	10044bf4 <BOR_ConfigSave>
#else
#error "No definition for BOR Configuration"
#endif

    /* Cold start configuration device */
    BLUE_CTRL->RADIO_CONFIG = 0x10000U | (uint16_t)((uint32_t)cold_start_config & 0x0000FFFFU);
10044e82:	2380      	movs	r3, #128	; 0x80
10044e84:	2290      	movs	r2, #144	; 0x90
10044e86:	0424      	lsls	r4, r4, #16
10044e88:	0c24      	lsrs	r4, r4, #16
10044e8a:	025b      	lsls	r3, r3, #9
10044e8c:	431c      	orrs	r4, r3
10044e8e:	05d2      	lsls	r2, r2, #23
10044e90:	60d4      	str	r4, [r2, #12]
    while ((BLUE_CTRL->RADIO_CONFIG & 0x10000) != 0);
10044e92:	68d1      	ldr	r1, [r2, #12]
10044e94:	4219      	tst	r1, r3
10044e96:	d1fc      	bne.n	10044e92 <DeviceConfiguration+0xc6>

    /* Configure RF FrontEnd */
    if (((Device_partInfo.die_major<<4)|(Device_partInfo.die_cut)) >= WA_DEVICE_VERSION) {
10044e98:	466b      	mov	r3, sp
10044e9a:	466a      	mov	r2, sp
10044e9c:	785b      	ldrb	r3, [r3, #1]
10044e9e:	7892      	ldrb	r2, [r2, #2]
10044ea0:	011b      	lsls	r3, r3, #4
10044ea2:	4313      	orrs	r3, r2
10044ea4:	2b11      	cmp	r3, #17
10044ea6:	dd01      	ble.n	10044eac <DeviceConfiguration+0xe0>
      Set_RF_FrontEnd();
10044ea8:	f7ff fe7e 	bl	10044ba8 <Set_RF_FrontEnd>
  /* Wait until HS is ready. The slow clock period 
  * measurement is done automatically each time the
  * device enters in active2 state and the HS is ready.
  * The interrupt signals that a measurement is done.
  */
  while(CKGEN_BLE->CLK32K_IT == 0);
10044eac:	4b14      	ldr	r3, [pc, #80]	; (10044f00 <DeviceConfiguration+0x134>)
10044eae:	8b1a      	ldrh	r2, [r3, #24]
10044eb0:	2a00      	cmp	r2, #0
10044eb2:	d0fc      	beq.n	10044eae <DeviceConfiguration+0xe2>
  CKGEN_BLE->CLK32K_IT = 1;
10044eb4:	2201      	movs	r2, #1
10044eb6:	831a      	strh	r2, [r3, #24]
  CKGEN_BLE->CLK32K_COUNT = 23; //Restore the window length for slow clock measurement.
10044eb8:	3216      	adds	r2, #22
10044eba:	819a      	strh	r2, [r3, #12]
  CKGEN_BLE->CLK32K_PERIOD = 0;
10044ebc:	2200      	movs	r2, #0
10044ebe:	611a      	str	r2, [r3, #16]
  
  
  /* Wait until the RO or 32KHz is ready */
  if (waitLS_Ready) {
10044ec0:	4296      	cmp	r6, r2
10044ec2:	d007      	beq.n	10044ed4 <DeviceConfiguration+0x108>
    current_time = BLUE_CTRL->CURRENT_TIME;
10044ec4:	2390      	movs	r3, #144	; 0x90
    while(((BLUE_CTRL->CURRENT_TIME)&0x10) == (current_time&0x10));
10044ec6:	2110      	movs	r1, #16
    current_time = BLUE_CTRL->CURRENT_TIME;
10044ec8:	05db      	lsls	r3, r3, #23
10044eca:	6918      	ldr	r0, [r3, #16]
    while(((BLUE_CTRL->CURRENT_TIME)&0x10) == (current_time&0x10));
10044ecc:	691a      	ldr	r2, [r3, #16]
10044ece:	4042      	eors	r2, r0
10044ed0:	420a      	tst	r2, r1
10044ed2:	d0fb      	beq.n	10044ecc <DeviceConfiguration+0x100>
    /* Wait the LS stabilization */
    Wait_LS_Stabilization();
#endif
  }

  if (coldStart) {
10044ed4:	2d00      	cmp	r5, #0
10044ed6:	d002      	beq.n	10044ede <DeviceConfiguration+0x112>
#if (HS_SPEED_XTAL == HS_SPEED_XTAL_32MHZ)
#ifndef FORCE_CORE_TO_16MHZ
    /* AHB up converter command register write*/
    AHBUPCONV->COMMAND = 0x15;
10044ed8:	2215      	movs	r2, #21
10044eda:	4b0a      	ldr	r3, [pc, #40]	; (10044f04 <DeviceConfiguration+0x138>)
10044edc:	701a      	strb	r2, [r3, #0]
#endif
#endif
  }
  
  /* Unlock the Flash */
  flash_sw_lock = FLASH_UNLOCK_WORD;
10044ede:	4a0a      	ldr	r2, [pc, #40]	; (10044f08 <DeviceConfiguration+0x13c>)
10044ee0:	4b0a      	ldr	r3, [pc, #40]	; (10044f0c <DeviceConfiguration+0x140>)
10044ee2:	601a      	str	r2, [r3, #0]
}
10044ee4:	b00a      	add	sp, #40	; 0x28
10044ee6:	bd70      	pop	{r4, r5, r6, pc}
10044ee8:	1005821c 	.word	0x1005821c
10044eec:	40200000 	.word	0x40200000
10044ef0:	100007e8 	.word	0x100007e8
10044ef4:	0000aa55 	.word	0x0000aa55
10044ef8:	100007e4 	.word	0x100007e4
10044efc:	100007b0 	.word	0x100007b0
10044f00:	48100000 	.word	0x48100000
10044f04:	40c00000 	.word	0x40c00000
10044f08:	fcecbccc 	.word	0xfcecbccc
10044f0c:	20000014 	.word	0x20000014

10044f10 <SystemInit>:

void SystemInit(void)
{
  /* Remap the vector table */
  FLASH->CONFIG = FLASH_PREMAP_MAIN;
10044f10:	2208      	movs	r2, #8
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
10044f12:	21c0      	movs	r1, #192	; 0xc0
{
10044f14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  FLASH->CONFIG = FLASH_PREMAP_MAIN;
10044f16:	4b3f      	ldr	r3, [pc, #252]	; (10045014 <SystemInit+0x104>)
10044f18:	4d3f      	ldr	r5, [pc, #252]	; (10045018 <SystemInit+0x108>)
10044f1a:	809a      	strh	r2, [r3, #4]
10044f1c:	4a3f      	ldr	r2, [pc, #252]	; (1004501c <SystemInit+0x10c>)
10044f1e:	0409      	lsls	r1, r1, #16
10044f20:	6a13      	ldr	r3, [r2, #32]
    NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
10044f22:	20ff      	movs	r0, #255	; 0xff
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
10044f24:	402b      	ands	r3, r5
10044f26:	430b      	orrs	r3, r1
10044f28:	21c0      	movs	r1, #192	; 0xc0
10044f2a:	6213      	str	r3, [r2, #32]
10044f2c:	6a13      	ldr	r3, [r2, #32]
10044f2e:	0609      	lsls	r1, r1, #24
10044f30:	021b      	lsls	r3, r3, #8
10044f32:	0a1b      	lsrs	r3, r3, #8
10044f34:	430b      	orrs	r3, r1
10044f36:	6213      	str	r3, [r2, #32]
    NVIC->IP[_IP_IDX(IRQn)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
10044f38:	22c0      	movs	r2, #192	; 0xc0
10044f3a:	0092      	lsls	r2, r2, #2
10044f3c:	4694      	mov	ip, r2
10044f3e:	4b38      	ldr	r3, [pc, #224]	; (10045020 <SystemInit+0x110>)
10044f40:	4664      	mov	r4, ip
10044f42:	589a      	ldr	r2, [r3, r2]
10044f44:	4e37      	ldr	r6, [pc, #220]	; (10045024 <SystemInit+0x114>)
10044f46:	4382      	bics	r2, r0
10044f48:	383f      	subs	r0, #63	; 0x3f
10044f4a:	4302      	orrs	r2, r0
10044f4c:	4660      	mov	r0, ip
10044f4e:	501a      	str	r2, [r3, r0]
10044f50:	581a      	ldr	r2, [r3, r0]
10044f52:	20c0      	movs	r0, #192	; 0xc0
10044f54:	4032      	ands	r2, r6
10044f56:	0200      	lsls	r0, r0, #8
10044f58:	4302      	orrs	r2, r0
10044f5a:	511a      	str	r2, [r3, r4]
10044f5c:	22c1      	movs	r2, #193	; 0xc1
10044f5e:	27ff      	movs	r7, #255	; 0xff
10044f60:	0092      	lsls	r2, r2, #2
10044f62:	589c      	ldr	r4, [r3, r2]
10044f64:	43bc      	bics	r4, r7
10044f66:	3f3f      	subs	r7, #63	; 0x3f
10044f68:	433c      	orrs	r4, r7
10044f6a:	509c      	str	r4, [r3, r2]
10044f6c:	589c      	ldr	r4, [r3, r2]
10044f6e:	373f      	adds	r7, #63	; 0x3f
10044f70:	4034      	ands	r4, r6
10044f72:	4304      	orrs	r4, r0
10044f74:	509c      	str	r4, [r3, r2]
10044f76:	589c      	ldr	r4, [r3, r2]
10044f78:	402c      	ands	r4, r5
10044f7a:	509c      	str	r4, [r3, r2]
10044f7c:	589c      	ldr	r4, [r3, r2]
10044f7e:	0224      	lsls	r4, r4, #8
10044f80:	0a24      	lsrs	r4, r4, #8
10044f82:	430c      	orrs	r4, r1
10044f84:	509c      	str	r4, [r3, r2]
10044f86:	3208      	adds	r2, #8
10044f88:	4694      	mov	ip, r2
10044f8a:	4664      	mov	r4, ip
10044f8c:	589a      	ldr	r2, [r3, r2]
10044f8e:	4032      	ands	r2, r6
10044f90:	4302      	orrs	r2, r0
10044f92:	511a      	str	r2, [r3, r4]
10044f94:	591a      	ldr	r2, [r3, r4]
10044f96:	24c0      	movs	r4, #192	; 0xc0
10044f98:	402a      	ands	r2, r5
10044f9a:	0424      	lsls	r4, r4, #16
10044f9c:	4322      	orrs	r2, r4
10044f9e:	4664      	mov	r4, ip
10044fa0:	511a      	str	r2, [r3, r4]
10044fa2:	591a      	ldr	r2, [r3, r4]
10044fa4:	0212      	lsls	r2, r2, #8
10044fa6:	0a12      	lsrs	r2, r2, #8
10044fa8:	430a      	orrs	r2, r1
10044faa:	511a      	str	r2, [r3, r4]
10044fac:	22c4      	movs	r2, #196	; 0xc4
10044fae:	0092      	lsls	r2, r2, #2
10044fb0:	4694      	mov	ip, r2
10044fb2:	4664      	mov	r4, ip
10044fb4:	589a      	ldr	r2, [r3, r2]
10044fb6:	4032      	ands	r2, r6
10044fb8:	4302      	orrs	r2, r0
10044fba:	511a      	str	r2, [r3, r4]
10044fbc:	591a      	ldr	r2, [r3, r4]
10044fbe:	24c0      	movs	r4, #192	; 0xc0
10044fc0:	402a      	ands	r2, r5
10044fc2:	0424      	lsls	r4, r4, #16
10044fc4:	4322      	orrs	r2, r4
10044fc6:	4664      	mov	r4, ip
10044fc8:	511a      	str	r2, [r3, r4]
10044fca:	591a      	ldr	r2, [r3, r4]
10044fcc:	0212      	lsls	r2, r2, #8
10044fce:	0a12      	lsrs	r2, r2, #8
10044fd0:	430a      	orrs	r2, r1
10044fd2:	511a      	str	r2, [r3, r4]
10044fd4:	22c5      	movs	r2, #197	; 0xc5
10044fd6:	0092      	lsls	r2, r2, #2
10044fd8:	589c      	ldr	r4, [r3, r2]
10044fda:	43bc      	bics	r4, r7
10044fdc:	0027      	movs	r7, r4
10044fde:	24c0      	movs	r4, #192	; 0xc0
10044fe0:	4327      	orrs	r7, r4
10044fe2:	24c0      	movs	r4, #192	; 0xc0
10044fe4:	509f      	str	r7, [r3, r2]
10044fe6:	589f      	ldr	r7, [r3, r2]
10044fe8:	0424      	lsls	r4, r4, #16
10044fea:	403e      	ands	r6, r7
10044fec:	4330      	orrs	r0, r6
10044fee:	5098      	str	r0, [r3, r2]
10044ff0:	5898      	ldr	r0, [r3, r2]
10044ff2:	4005      	ands	r5, r0
10044ff4:	432c      	orrs	r4, r5
10044ff6:	509c      	str	r4, [r3, r2]
10044ff8:	5898      	ldr	r0, [r3, r2]
10044ffa:	0200      	lsls	r0, r0, #8
10044ffc:	0a00      	lsrs	r0, r0, #8
10044ffe:	4301      	orrs	r1, r0
10045000:	5099      	str	r1, [r3, r2]
  NVIC_SetPriority(RTC_IRQn,       LOW_PRIORITY);
  NVIC_SetPriority(PKA_IRQn,       LOW_PRIORITY);
  NVIC_SetPriority(DMA_IRQn,       LOW_PRIORITY);

  /* Device Configuration */
  DeviceConfiguration(TRUE, TRUE);
10045002:	2101      	movs	r1, #1
10045004:	0008      	movs	r0, r1
10045006:	f7ff fee1 	bl	10044dcc <DeviceConfiguration>
  /* Disable all the peripherals clock except NVM, SYSCTR, PKA and RNG */
  CKGEN_SOC->CLOCK_EN = 0xE0066;
1004500a:	4a07      	ldr	r2, [pc, #28]	; (10045028 <SystemInit+0x118>)
1004500c:	4b07      	ldr	r3, [pc, #28]	; (1004502c <SystemInit+0x11c>)
1004500e:	621a      	str	r2, [r3, #32]
  __ASM volatile ("cpsie i");
10045010:	b662      	cpsie	i
  __enable_irq();
}
10045012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10045014:	40100000 	.word	0x40100000
10045018:	ff00ffff 	.word	0xff00ffff
1004501c:	e000ed00 	.word	0xe000ed00
10045020:	e000e100 	.word	0xe000e100
10045024:	ffff00ff 	.word	0xffff00ff
10045028:	000e0066 	.word	0x000e0066
1004502c:	40900000 	.word	0x40900000

10045030 <NMI_Handler>:
10045030:	4770      	bx	lr

10045032 <HardFault_Handler>:

/**
  * @brief  This function handles Hard Fault exception.
  */
void HardFault_Handler(void)
{
10045032:	e7fe      	b.n	10045032 <HardFault_Handler>

10045034 <SVC_Handler>:
/**
  * @brief  This function handles SVCall exception.
  */
void SVC_Handler(void)
{
}
10045034:	4770      	bx	lr

10045036 <SysTick_Handler>:

/**
  * @brief  This function handles SysTick Handler.
  */
void SysTick_Handler(void)
{
10045036:	b510      	push	{r4, lr}
	SysCount_Handler();
10045038:	f7fe f856 	bl	100430e8 <SysCount_Handler>
}
1004503c:	bd10      	pop	{r4, pc}

1004503e <GPIO_Handler>:

void GPIO_Handler(void)
{
1004503e:	b510      	push	{r4, lr}
//    }
//
//  }
//#endif

  if (GPIO_GetITPendingBit(Get_ButtonGpioPin(BUTTON_1)) == SET){
10045040:	2000      	movs	r0, #0
10045042:	f7ff fa15 	bl	10044470 <Get_ButtonGpioPin>
10045046:	f7fe ffe8 	bl	1004401a <GPIO_GetITPendingBit>
1004504a:	0004      	movs	r4, r0
1004504c:	2801      	cmp	r0, #1
1004504e:	d109      	bne.n	10045064 <GPIO_Handler+0x26>
	  GPIO_ClearITPendingBit(Get_ButtonGpioPin(BUTTON_1));
10045050:	2000      	movs	r0, #0
10045052:	f7ff fa0d 	bl	10044470 <Get_ButtonGpioPin>
10045056:	f7fe ffdc 	bl	10044012 <GPIO_ClearITPendingBit>
	  GPIO_ToggleBits(Get_LedGpioPin(LED2));
1004505a:	0020      	movs	r0, r4
1004505c:	f7ff faa2 	bl	100445a4 <Get_LedGpioPin>
10045060:	f7fe ffd1 	bl	10044006 <GPIO_ToggleBits>
  }
}
10045064:	bd10      	pop	{r4, pc}

10045066 <UART_Handler>:
* @brief  This function handles UART interrupt request.
* @param  None
* @retval None
*/
void UART_Handler(void)
{  
10045066:	b510      	push	{r4, lr}
	SdkEvalComIOUartIrqHandler();
10045068:	f7ff fa6c 	bl	10044544 <SdkEvalComIOUartIrqHandler>
}
1004506c:	bd10      	pop	{r4, pc}

1004506e <Blue_Handler>:

void Blue_Handler(void)
{
1004506e:	b510      	push	{r4, lr}
   // Call RAL_Isr
   RAL_Isr();
10045070:	f008 fb08 	bl	1004d684 <RAL_Isr>
}
10045074:	bd10      	pop	{r4, pc}
	...

10045078 <Add_Sensor_Service>:
* Description    : Add the Sensor services.
* Input          : None
* Return         : Status.
*******************************************************************************/
tBleStatus Add_Sensor_Service(void)
{
10045078:	b5f0      	push	{r4, r5, r6, r7, lr}
	tBleStatus ret;

	/* Battery Service Characteristic */
	uint16_t uuid16 = BattServiceUUID;
1004507a:	241e      	movs	r4, #30
{
1004507c:	b089      	sub	sp, #36	; 0x24
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
1004507e:	4d0b      	ldr	r5, [pc, #44]	; (100450ac <Add_Sensor_Service+0x34>)
	uint16_t uuid16 = BattServiceUUID;
10045080:	4b0b      	ldr	r3, [pc, #44]	; (100450b0 <Add_Sensor_Service+0x38>)
10045082:	446c      	add	r4, sp
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
10045084:	2202      	movs	r2, #2
10045086:	0021      	movs	r1, r4
10045088:	0028      	movs	r0, r5
	uint16_t uuid16 = BattServiceUUID;
1004508a:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
1004508c:	f7fe f897 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16,&service_uuid, PRIMARY_SERVICE, 5 , &battSensServiceHandle);
10045090:	2201      	movs	r2, #1
10045092:	4b08      	ldr	r3, [pc, #32]	; (100450b4 <Add_Sensor_Service+0x3c>)
10045094:	0029      	movs	r1, r5
10045096:	9300      	str	r3, [sp, #0]
10045098:	0010      	movs	r0, r2
1004509a:	2305      	movs	r3, #5
1004509c:	f004 fc4d 	bl	1004993a <aci_gatt_add_service>
100450a0:	1e06      	subs	r6, r0, #0
	//SEGGER_RTT_printf(0,"here1:%04x\n",ret);
	if (ret != BLE_STATUS_SUCCESS)
100450a2:	d009      	beq.n	100450b8 <Add_Sensor_Service+0x40>
		return BLE_STATUS_ERROR;
100450a4:	2447      	movs	r4, #71	; 0x47
	if (ret != BLE_STATUS_SUCCESS)
		return BLE_STATUS_ERROR;

	SEGGER_RTT_printf(0,"Finished adding all services\n");
	return BLE_STATUS_SUCCESS;
}
100450a6:	0020      	movs	r0, r4
100450a8:	b009      	add	sp, #36	; 0x24
100450aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
100450ac:	200008b4 	.word	0x200008b4
100450b0:	0000180f 	.word	0x0000180f
100450b4:	20000866 	.word	0x20000866
	uuid16 = BattValCharUUID;
100450b8:	23a8      	movs	r3, #168	; 0xa8
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100450ba:	4fe7      	ldr	r7, [pc, #924]	; (10045458 <Add_Sensor_Service+0x3e0>)
	uuid16 = BattValCharUUID;
100450bc:	019b      	lsls	r3, r3, #6
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100450be:	2202      	movs	r2, #2
100450c0:	0021      	movs	r1, r4
100450c2:	0038      	movs	r0, r7
	uuid16 = BattValCharUUID;
100450c4:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100450c6:	f7fe f87a 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(battSensServiceHandle, UUID_TYPE_16, &char_uuid, 2, CHAR_PROP_READ, ATTR_PERMISSION_NONE, GATT_NOTIFY_READ_REQ_AND_WAIT_FOR_APPL_RESP,
100450ca:	4be4      	ldr	r3, [pc, #912]	; (1004545c <Add_Sensor_Service+0x3e4>)
100450cc:	003a      	movs	r2, r7
100450ce:	8818      	ldrh	r0, [r3, #0]
100450d0:	4be3      	ldr	r3, [pc, #908]	; (10045460 <Add_Sensor_Service+0x3e8>)
100450d2:	9604      	str	r6, [sp, #16]
100450d4:	9305      	str	r3, [sp, #20]
100450d6:	2310      	movs	r3, #16
100450d8:	9303      	str	r3, [sp, #12]
100450da:	3b0c      	subs	r3, #12
100450dc:	9302      	str	r3, [sp, #8]
100450de:	3b02      	subs	r3, #2
100450e0:	9601      	str	r6, [sp, #4]
100450e2:	9300      	str	r3, [sp, #0]
100450e4:	2101      	movs	r1, #1
100450e6:	f004 fc09 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
100450ea:	2800      	cmp	r0, #0
100450ec:	d1da      	bne.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = LEDServiceUUID;
100450ee:	23c8      	movs	r3, #200	; 0xc8
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100450f0:	2202      	movs	r2, #2
	uuid16 = LEDServiceUUID;
100450f2:	015b      	lsls	r3, r3, #5
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100450f4:	0021      	movs	r1, r4
100450f6:	0028      	movs	r0, r5
	uuid16 = LEDServiceUUID;
100450f8:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100450fa:	f7fe f860 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 5, &LEDServiceHandle);
100450fe:	2201      	movs	r2, #1
10045100:	4bd8      	ldr	r3, [pc, #864]	; (10045464 <Add_Sensor_Service+0x3ec>)
10045102:	0029      	movs	r1, r5
10045104:	9300      	str	r3, [sp, #0]
10045106:	0010      	movs	r0, r2
10045108:	2305      	movs	r3, #5
1004510a:	f004 fc16 	bl	1004993a <aci_gatt_add_service>
1004510e:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
10045110:	d1c8      	bne.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = LEDCharUUID;
10045112:	23ac      	movs	r3, #172	; 0xac
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045114:	2202      	movs	r2, #2
	uuid16 = LEDCharUUID;
10045116:	019b      	lsls	r3, r3, #6
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045118:	0021      	movs	r1, r4
1004511a:	0038      	movs	r0, r7
	uuid16 = LEDCharUUID;
1004511c:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004511e:	f7fe f84e 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(LEDServiceHandle, UUID_TYPE_16, &char_uuid, 2,  CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
10045122:	4bd0      	ldr	r3, [pc, #832]	; (10045464 <Add_Sensor_Service+0x3ec>)
10045124:	003a      	movs	r2, r7
10045126:	8818      	ldrh	r0, [r3, #0]
10045128:	4bcf      	ldr	r3, [pc, #828]	; (10045468 <Add_Sensor_Service+0x3f0>)
1004512a:	9604      	str	r6, [sp, #16]
1004512c:	9305      	str	r3, [sp, #20]
1004512e:	2310      	movs	r3, #16
10045130:	9303      	str	r3, [sp, #12]
10045132:	3b0b      	subs	r3, #11
10045134:	9302      	str	r3, [sp, #8]
10045136:	3305      	adds	r3, #5
10045138:	9300      	str	r3, [sp, #0]
1004513a:	9601      	str	r6, [sp, #4]
1004513c:	3b08      	subs	r3, #8
1004513e:	2101      	movs	r1, #1
10045140:	f004 fbdc 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
10045144:	2800      	cmp	r0, #0
10045146:	d1ad      	bne.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = PressureServiceUUID;
10045148:	4bc8      	ldr	r3, [pc, #800]	; (1004546c <Add_Sensor_Service+0x3f4>)
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
1004514a:	2202      	movs	r2, #2
1004514c:	0021      	movs	r1, r4
1004514e:	0028      	movs	r0, r5
	uuid16 = PressureServiceUUID;
10045150:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
10045152:	f7fe f834 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 5, &pressureServiceHandle);
10045156:	2201      	movs	r2, #1
10045158:	4bc5      	ldr	r3, [pc, #788]	; (10045470 <Add_Sensor_Service+0x3f8>)
1004515a:	0029      	movs	r1, r5
1004515c:	9300      	str	r3, [sp, #0]
1004515e:	0010      	movs	r0, r2
10045160:	2305      	movs	r3, #5
10045162:	f004 fbea 	bl	1004993a <aci_gatt_add_service>
10045166:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
10045168:	d000      	beq.n	1004516c <Add_Sensor_Service+0xf4>
1004516a:	e79b      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = SensorCharUUID;
1004516c:	4bc1      	ldr	r3, [pc, #772]	; (10045474 <Add_Sensor_Service+0x3fc>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004516e:	2202      	movs	r2, #2
10045170:	0021      	movs	r1, r4
10045172:	0038      	movs	r0, r7
	uuid16 = SensorCharUUID;
10045174:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045176:	f7fe f822 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(pressureServiceHandle, UUID_TYPE_16, &char_uuid, 16, CHAR_PROP_READ|CHAR_PROP_NOTIFY, ATTR_PERMISSION_NONE,
1004517a:	4bbd      	ldr	r3, [pc, #756]	; (10045470 <Add_Sensor_Service+0x3f8>)
1004517c:	003a      	movs	r2, r7
1004517e:	8818      	ldrh	r0, [r3, #0]
10045180:	4bbd      	ldr	r3, [pc, #756]	; (10045478 <Add_Sensor_Service+0x400>)
10045182:	9604      	str	r6, [sp, #16]
10045184:	9305      	str	r3, [sp, #20]
10045186:	2310      	movs	r3, #16
10045188:	9303      	str	r3, [sp, #12]
1004518a:	3b0b      	subs	r3, #11
1004518c:	9302      	str	r3, [sp, #8]
1004518e:	330d      	adds	r3, #13
10045190:	9300      	str	r3, [sp, #0]
10045192:	9601      	str	r6, [sp, #4]
10045194:	3b02      	subs	r3, #2
10045196:	2101      	movs	r1, #1
10045198:	f004 fbb0 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
1004519c:	2800      	cmp	r0, #0
1004519e:	d000      	beq.n	100451a2 <Add_Sensor_Service+0x12a>
100451a0:	e780      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = ControlServiceUUID;
100451a2:	4bb6      	ldr	r3, [pc, #728]	; (1004547c <Add_Sensor_Service+0x404>)
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100451a4:	2202      	movs	r2, #2
100451a6:	0021      	movs	r1, r4
100451a8:	0028      	movs	r0, r5
	uuid16 = ControlServiceUUID;
100451aa:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100451ac:	f7fe f807 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 15, &controlServiceHandle);
100451b0:	2201      	movs	r2, #1
100451b2:	4eb3      	ldr	r6, [pc, #716]	; (10045480 <Add_Sensor_Service+0x408>)
100451b4:	0029      	movs	r1, r5
100451b6:	9600      	str	r6, [sp, #0]
100451b8:	230f      	movs	r3, #15
100451ba:	0010      	movs	r0, r2
100451bc:	f004 fbbd 	bl	1004993a <aci_gatt_add_service>
100451c0:	1e05      	subs	r5, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
100451c2:	d000      	beq.n	100451c6 <Add_Sensor_Service+0x14e>
100451c4:	e76e      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = ValveSmallCharUUID;
100451c6:	4baf      	ldr	r3, [pc, #700]	; (10045484 <Add_Sensor_Service+0x40c>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100451c8:	2202      	movs	r2, #2
100451ca:	0021      	movs	r1, r4
100451cc:	0038      	movs	r0, r7
	uuid16 = ValveSmallCharUUID;
100451ce:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100451d0:	f7fd fff5 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(controlServiceHandle, UUID_TYPE_16, &char_uuid, 2, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
100451d4:	4bac      	ldr	r3, [pc, #688]	; (10045488 <Add_Sensor_Service+0x410>)
100451d6:	8830      	ldrh	r0, [r6, #0]
100451d8:	9305      	str	r3, [sp, #20]
100451da:	2310      	movs	r3, #16
100451dc:	9303      	str	r3, [sp, #12]
100451de:	3b0b      	subs	r3, #11
100451e0:	9302      	str	r3, [sp, #8]
100451e2:	3305      	adds	r3, #5
100451e4:	9504      	str	r5, [sp, #16]
100451e6:	9501      	str	r5, [sp, #4]
100451e8:	9300      	str	r3, [sp, #0]
100451ea:	003a      	movs	r2, r7
100451ec:	3b08      	subs	r3, #8
100451ee:	2101      	movs	r1, #1
100451f0:	f004 fb84 	bl	100498fc <aci_gatt_add_char>
100451f4:	1e05      	subs	r5, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
100451f6:	d000      	beq.n	100451fa <Add_Sensor_Service+0x182>
100451f8:	e754      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = ValveLargeCharUUID;
100451fa:	4ba4      	ldr	r3, [pc, #656]	; (1004548c <Add_Sensor_Service+0x414>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100451fc:	2202      	movs	r2, #2
100451fe:	0021      	movs	r1, r4
10045200:	0038      	movs	r0, r7
	uuid16 = ValveLargeCharUUID;
10045202:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045204:	f7fd ffdb 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(controlServiceHandle, UUID_TYPE_16, &char_uuid, 1, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
10045208:	4ba1      	ldr	r3, [pc, #644]	; (10045490 <Add_Sensor_Service+0x418>)
1004520a:	8830      	ldrh	r0, [r6, #0]
1004520c:	9305      	str	r3, [sp, #20]
1004520e:	2310      	movs	r3, #16
10045210:	9303      	str	r3, [sp, #12]
10045212:	3b0b      	subs	r3, #11
10045214:	9302      	str	r3, [sp, #8]
10045216:	3305      	adds	r3, #5
10045218:	9300      	str	r3, [sp, #0]
1004521a:	3b09      	subs	r3, #9
1004521c:	9504      	str	r5, [sp, #16]
1004521e:	9501      	str	r5, [sp, #4]
10045220:	003a      	movs	r2, r7
10045222:	0019      	movs	r1, r3
10045224:	f004 fb6a 	bl	100498fc <aci_gatt_add_char>
10045228:	1e05      	subs	r5, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
1004522a:	d000      	beq.n	1004522e <Add_Sensor_Service+0x1b6>
1004522c:	e73a      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = PumpCharUUID;
1004522e:	4b99      	ldr	r3, [pc, #612]	; (10045494 <Add_Sensor_Service+0x41c>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045230:	2202      	movs	r2, #2
10045232:	0021      	movs	r1, r4
10045234:	0038      	movs	r0, r7
	uuid16 = PumpCharUUID;
10045236:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045238:	f7fd ffc1 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(controlServiceHandle, UUID_TYPE_16, &char_uuid, 1, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
1004523c:	4b96      	ldr	r3, [pc, #600]	; (10045498 <Add_Sensor_Service+0x420>)
1004523e:	8830      	ldrh	r0, [r6, #0]
10045240:	9305      	str	r3, [sp, #20]
10045242:	2310      	movs	r3, #16
10045244:	9303      	str	r3, [sp, #12]
10045246:	3b0b      	subs	r3, #11
10045248:	9302      	str	r3, [sp, #8]
1004524a:	3305      	adds	r3, #5
1004524c:	9300      	str	r3, [sp, #0]
1004524e:	3b09      	subs	r3, #9
10045250:	9504      	str	r5, [sp, #16]
10045252:	9501      	str	r5, [sp, #4]
10045254:	003a      	movs	r2, r7
10045256:	0019      	movs	r1, r3
10045258:	f004 fb50 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
1004525c:	2800      	cmp	r0, #0
1004525e:	d000      	beq.n	10045262 <Add_Sensor_Service+0x1ea>
10045260:	e720      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045262:	4f7d      	ldr	r7, [pc, #500]	; (10045458 <Add_Sensor_Service+0x3e0>)
	uuid16 = BagControlCharUUID;
10045264:	351e      	adds	r5, #30
10045266:	4b8d      	ldr	r3, [pc, #564]	; (1004549c <Add_Sensor_Service+0x424>)
10045268:	446d      	add	r5, sp
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004526a:	2202      	movs	r2, #2
1004526c:	0029      	movs	r1, r5
1004526e:	0038      	movs	r0, r7
	uuid16 = BagControlCharUUID;
10045270:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045272:	f7fd ffa4 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(controlServiceHandle, UUID_TYPE_16, &char_uuid, 3, CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
10045276:	4b82      	ldr	r3, [pc, #520]	; (10045480 <Add_Sensor_Service+0x408>)
10045278:	2210      	movs	r2, #16
1004527a:	8818      	ldrh	r0, [r3, #0]
1004527c:	4b88      	ldr	r3, [pc, #544]	; (100454a0 <Add_Sensor_Service+0x428>)
1004527e:	2401      	movs	r4, #1
10045280:	9305      	str	r3, [sp, #20]
10045282:	2300      	movs	r3, #0
10045284:	9304      	str	r3, [sp, #16]
10045286:	9301      	str	r3, [sp, #4]
10045288:	3308      	adds	r3, #8
1004528a:	9203      	str	r2, [sp, #12]
1004528c:	9300      	str	r3, [sp, #0]
1004528e:	9402      	str	r4, [sp, #8]
10045290:	3b05      	subs	r3, #5
10045292:	003a      	movs	r2, r7
10045294:	0021      	movs	r1, r4
10045296:	f004 fb31 	bl	100498fc <aci_gatt_add_char>
1004529a:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
1004529c:	d000      	beq.n	100452a0 <Add_Sensor_Service+0x228>
1004529e:	e701      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = BagRedistributeCharUUID;
100452a0:	4b80      	ldr	r3, [pc, #512]	; (100454a4 <Add_Sensor_Service+0x42c>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100452a2:	2202      	movs	r2, #2
100452a4:	0029      	movs	r1, r5
100452a6:	0038      	movs	r0, r7
	uuid16 = BagRedistributeCharUUID;
100452a8:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100452aa:	f7fd ff88 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(controlServiceHandle, UUID_TYPE_16, &char_uuid, 5, CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
100452ae:	4b74      	ldr	r3, [pc, #464]	; (10045480 <Add_Sensor_Service+0x408>)
100452b0:	003a      	movs	r2, r7
100452b2:	8818      	ldrh	r0, [r3, #0]
100452b4:	4b7c      	ldr	r3, [pc, #496]	; (100454a8 <Add_Sensor_Service+0x430>)
100452b6:	9604      	str	r6, [sp, #16]
100452b8:	9305      	str	r3, [sp, #20]
100452ba:	2310      	movs	r3, #16
100452bc:	9303      	str	r3, [sp, #12]
100452be:	3b08      	subs	r3, #8
100452c0:	9601      	str	r6, [sp, #4]
100452c2:	9300      	str	r3, [sp, #0]
100452c4:	9402      	str	r4, [sp, #8]
100452c6:	3b03      	subs	r3, #3
100452c8:	0021      	movs	r1, r4
100452ca:	f004 fb17 	bl	100498fc <aci_gatt_add_char>
100452ce:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
100452d0:	d000      	beq.n	100452d4 <Add_Sensor_Service+0x25c>
100452d2:	e6e7      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = InitializeBagsCharUUID;
100452d4:	4b75      	ldr	r3, [pc, #468]	; (100454ac <Add_Sensor_Service+0x434>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100452d6:	2202      	movs	r2, #2
100452d8:	0029      	movs	r1, r5
100452da:	0038      	movs	r0, r7
	uuid16 = InitializeBagsCharUUID;
100452dc:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100452de:	f7fd ff6e 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(controlServiceHandle, UUID_TYPE_16, &char_uuid, 2, CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
100452e2:	4b67      	ldr	r3, [pc, #412]	; (10045480 <Add_Sensor_Service+0x408>)
100452e4:	003a      	movs	r2, r7
100452e6:	8818      	ldrh	r0, [r3, #0]
100452e8:	4b71      	ldr	r3, [pc, #452]	; (100454b0 <Add_Sensor_Service+0x438>)
100452ea:	9604      	str	r6, [sp, #16]
100452ec:	9305      	str	r3, [sp, #20]
100452ee:	2310      	movs	r3, #16
100452f0:	9303      	str	r3, [sp, #12]
100452f2:	3b08      	subs	r3, #8
100452f4:	9601      	str	r6, [sp, #4]
100452f6:	9300      	str	r3, [sp, #0]
100452f8:	9402      	str	r4, [sp, #8]
100452fa:	3b06      	subs	r3, #6
100452fc:	0021      	movs	r1, r4
100452fe:	f004 fafd 	bl	100498fc <aci_gatt_add_char>
10045302:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
10045304:	d000      	beq.n	10045308 <Add_Sensor_Service+0x290>
10045306:	e6cd      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = ReleaseBagsCharUUID;
10045308:	4b6a      	ldr	r3, [pc, #424]	; (100454b4 <Add_Sensor_Service+0x43c>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004530a:	2202      	movs	r2, #2
1004530c:	0029      	movs	r1, r5
1004530e:	0038      	movs	r0, r7
	uuid16 = ReleaseBagsCharUUID;
10045310:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045312:	f7fd ff54 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(controlServiceHandle, UUID_TYPE_16, &char_uuid, 1, CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
10045316:	4b5a      	ldr	r3, [pc, #360]	; (10045480 <Add_Sensor_Service+0x408>)
10045318:	003a      	movs	r2, r7
1004531a:	8818      	ldrh	r0, [r3, #0]
1004531c:	4b66      	ldr	r3, [pc, #408]	; (100454b8 <Add_Sensor_Service+0x440>)
1004531e:	9604      	str	r6, [sp, #16]
10045320:	9305      	str	r3, [sp, #20]
10045322:	2310      	movs	r3, #16
10045324:	9303      	str	r3, [sp, #12]
10045326:	3b08      	subs	r3, #8
10045328:	9300      	str	r3, [sp, #0]
1004532a:	9402      	str	r4, [sp, #8]
1004532c:	9601      	str	r6, [sp, #4]
1004532e:	0023      	movs	r3, r4
10045330:	0021      	movs	r1, r4
10045332:	f004 fae3 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
10045336:	2800      	cmp	r0, #0
10045338:	d000      	beq.n	1004533c <Add_Sensor_Service+0x2c4>
1004533a:	e6b3      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = LTMServiceUUID;
1004533c:	4b5f      	ldr	r3, [pc, #380]	; (100454bc <Add_Sensor_Service+0x444>)
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
1004533e:	2202      	movs	r2, #2
10045340:	0029      	movs	r1, r5
10045342:	485f      	ldr	r0, [pc, #380]	; (100454c0 <Add_Sensor_Service+0x448>)
	uuid16 = LTMServiceUUID;
10045344:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
10045346:	f7fd ff3a 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 7, &longTermServiceHandle);
1004534a:	4b5e      	ldr	r3, [pc, #376]	; (100454c4 <Add_Sensor_Service+0x44c>)
1004534c:	0022      	movs	r2, r4
1004534e:	9300      	str	r3, [sp, #0]
10045350:	495b      	ldr	r1, [pc, #364]	; (100454c0 <Add_Sensor_Service+0x448>)
10045352:	2307      	movs	r3, #7
10045354:	0020      	movs	r0, r4
10045356:	f004 faf0 	bl	1004993a <aci_gatt_add_service>
1004535a:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
1004535c:	d000      	beq.n	10045360 <Add_Sensor_Service+0x2e8>
1004535e:	e6a1      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = LTMModeCharUUID;
10045360:	4b59      	ldr	r3, [pc, #356]	; (100454c8 <Add_Sensor_Service+0x450>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045362:	2202      	movs	r2, #2
10045364:	0029      	movs	r1, r5
10045366:	0038      	movs	r0, r7
	uuid16 = LTMModeCharUUID;
10045368:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004536a:	f7fd ff28 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(longTermServiceHandle, UUID_TYPE_16, &char_uuid, 1 , CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
1004536e:	4b55      	ldr	r3, [pc, #340]	; (100454c4 <Add_Sensor_Service+0x44c>)
10045370:	003a      	movs	r2, r7
10045372:	8818      	ldrh	r0, [r3, #0]
10045374:	4b55      	ldr	r3, [pc, #340]	; (100454cc <Add_Sensor_Service+0x454>)
10045376:	9604      	str	r6, [sp, #16]
10045378:	9305      	str	r3, [sp, #20]
1004537a:	2310      	movs	r3, #16
1004537c:	9303      	str	r3, [sp, #12]
1004537e:	3b0b      	subs	r3, #11
10045380:	9302      	str	r3, [sp, #8]
10045382:	3305      	adds	r3, #5
10045384:	9300      	str	r3, [sp, #0]
10045386:	9601      	str	r6, [sp, #4]
10045388:	0023      	movs	r3, r4
1004538a:	0021      	movs	r1, r4
1004538c:	f004 fab6 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
10045390:	2800      	cmp	r0, #0
10045392:	d000      	beq.n	10045396 <Add_Sensor_Service+0x31e>
10045394:	e686      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = DataDownloaderServiceUUID;
10045396:	4b4e      	ldr	r3, [pc, #312]	; (100454d0 <Add_Sensor_Service+0x458>)
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
10045398:	2202      	movs	r2, #2
1004539a:	0029      	movs	r1, r5
1004539c:	4848      	ldr	r0, [pc, #288]	; (100454c0 <Add_Sensor_Service+0x448>)
	uuid16 = DataDownloaderServiceUUID;
1004539e:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100453a0:	f7fd ff0d 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 10, &dataDownloadServiceHandle);
100453a4:	4b4b      	ldr	r3, [pc, #300]	; (100454d4 <Add_Sensor_Service+0x45c>)
100453a6:	0022      	movs	r2, r4
100453a8:	9300      	str	r3, [sp, #0]
100453aa:	4945      	ldr	r1, [pc, #276]	; (100454c0 <Add_Sensor_Service+0x448>)
100453ac:	230a      	movs	r3, #10
100453ae:	0020      	movs	r0, r4
100453b0:	f004 fac3 	bl	1004993a <aci_gatt_add_service>
100453b4:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
100453b6:	d000      	beq.n	100453ba <Add_Sensor_Service+0x342>
100453b8:	e674      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = DataDownloaderCharUUID;
100453ba:	23ad      	movs	r3, #173	; 0xad
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100453bc:	2202      	movs	r2, #2
	uuid16 = DataDownloaderCharUUID;
100453be:	019b      	lsls	r3, r3, #6
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100453c0:	0029      	movs	r1, r5
100453c2:	0038      	movs	r0, r7
	uuid16 = DataDownloaderCharUUID;
100453c4:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100453c6:	f7fd fefa 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(dataDownloadServiceHandle, UUID_TYPE_16, &char_uuid, 216 , CHAR_PROP_NOTIFY|CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
100453ca:	4b42      	ldr	r3, [pc, #264]	; (100454d4 <Add_Sensor_Service+0x45c>)
100453cc:	003a      	movs	r2, r7
100453ce:	8818      	ldrh	r0, [r3, #0]
100453d0:	4b41      	ldr	r3, [pc, #260]	; (100454d8 <Add_Sensor_Service+0x460>)
100453d2:	9404      	str	r4, [sp, #16]
100453d4:	9305      	str	r3, [sp, #20]
100453d6:	2310      	movs	r3, #16
100453d8:	9303      	str	r3, [sp, #12]
100453da:	3b0b      	subs	r3, #11
100453dc:	9302      	str	r3, [sp, #8]
100453de:	3315      	adds	r3, #21
100453e0:	9300      	str	r3, [sp, #0]
100453e2:	9601      	str	r6, [sp, #4]
100453e4:	33be      	adds	r3, #190	; 0xbe
100453e6:	0021      	movs	r1, r4
100453e8:	f004 fa88 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
100453ec:	2800      	cmp	r0, #0
100453ee:	d000      	beq.n	100453f2 <Add_Sensor_Service+0x37a>
100453f0:	e658      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = SettingsServiceUUID;
100453f2:	4b3a      	ldr	r3, [pc, #232]	; (100454dc <Add_Sensor_Service+0x464>)
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100453f4:	2202      	movs	r2, #2
100453f6:	0029      	movs	r1, r5
100453f8:	4831      	ldr	r0, [pc, #196]	; (100454c0 <Add_Sensor_Service+0x448>)
	uuid16 = SettingsServiceUUID;
100453fa:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100453fc:	f7fd fedf 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 13, &settingsServiceHandle);
10045400:	4b37      	ldr	r3, [pc, #220]	; (100454e0 <Add_Sensor_Service+0x468>)
10045402:	0022      	movs	r2, r4
10045404:	9300      	str	r3, [sp, #0]
10045406:	492e      	ldr	r1, [pc, #184]	; (100454c0 <Add_Sensor_Service+0x448>)
10045408:	230d      	movs	r3, #13
1004540a:	0020      	movs	r0, r4
1004540c:	f004 fa95 	bl	1004993a <aci_gatt_add_service>
10045410:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
10045412:	d000      	beq.n	10045416 <Add_Sensor_Service+0x39e>
10045414:	e646      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = LowerBoundPressureCharUUID;
10045416:	4b33      	ldr	r3, [pc, #204]	; (100454e4 <Add_Sensor_Service+0x46c>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045418:	2202      	movs	r2, #2
1004541a:	0029      	movs	r1, r5
1004541c:	0038      	movs	r0, r7
	uuid16 = LowerBoundPressureCharUUID;
1004541e:	802b      	strh	r3, [r5, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045420:	f7fd fecd 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(settingsServiceHandle, UUID_TYPE_16, &char_uuid, 2, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
10045424:	4b2e      	ldr	r3, [pc, #184]	; (100454e0 <Add_Sensor_Service+0x468>)
10045426:	003a      	movs	r2, r7
10045428:	8818      	ldrh	r0, [r3, #0]
1004542a:	4b2f      	ldr	r3, [pc, #188]	; (100454e8 <Add_Sensor_Service+0x470>)
1004542c:	9604      	str	r6, [sp, #16]
1004542e:	9305      	str	r3, [sp, #20]
10045430:	2310      	movs	r3, #16
10045432:	9303      	str	r3, [sp, #12]
10045434:	3b0b      	subs	r3, #11
10045436:	9302      	str	r3, [sp, #8]
10045438:	3305      	adds	r3, #5
1004543a:	9300      	str	r3, [sp, #0]
1004543c:	9601      	str	r6, [sp, #4]
1004543e:	3b08      	subs	r3, #8
10045440:	0021      	movs	r1, r4
10045442:	f004 fa5b 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
10045446:	2800      	cmp	r0, #0
10045448:	d000      	beq.n	1004544c <Add_Sensor_Service+0x3d4>
1004544a:	e62b      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004544c:	4d02      	ldr	r5, [pc, #8]	; (10045458 <Add_Sensor_Service+0x3e0>)
	uuid16 = UpperBoundPressureCharUUID;
1004544e:	341d      	adds	r4, #29
10045450:	4b26      	ldr	r3, [pc, #152]	; (100454ec <Add_Sensor_Service+0x474>)
10045452:	446c      	add	r4, sp
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045454:	2202      	movs	r2, #2
10045456:	e04b      	b.n	100454f0 <Add_Sensor_Service+0x478>
10045458:	2000086e 	.word	0x2000086e
1004545c:	20000866 	.word	0x20000866
10045460:	20000884 	.word	0x20000884
10045464:	2000086a 	.word	0x2000086a
10045468:	2000087e 	.word	0x2000087e
1004546c:	00001901 	.word	0x00001901
10045470:	20000858 	.word	0x20000858
10045474:	00002b10 	.word	0x00002b10
10045478:	2000088e 	.word	0x2000088e
1004547c:	00001902 	.word	0x00001902
10045480:	2000088c 	.word	0x2000088c
10045484:	00002b20 	.word	0x00002b20
10045488:	20000896 	.word	0x20000896
1004548c:	00002b21 	.word	0x00002b21
10045490:	20000880 	.word	0x20000880
10045494:	00002b22 	.word	0x00002b22
10045498:	20000860 	.word	0x20000860
1004549c:	00002b23 	.word	0x00002b23
100454a0:	20000888 	.word	0x20000888
100454a4:	00002b24 	.word	0x00002b24
100454a8:	2000089e 	.word	0x2000089e
100454ac:	00002b25 	.word	0x00002b25
100454b0:	2000089a 	.word	0x2000089a
100454b4:	00002b26 	.word	0x00002b26
100454b8:	200008a0 	.word	0x200008a0
100454bc:	00001903 	.word	0x00001903
100454c0:	200008b4 	.word	0x200008b4
100454c4:	20000868 	.word	0x20000868
100454c8:	00002b30 	.word	0x00002b30
100454cc:	20000894 	.word	0x20000894
100454d0:	00001904 	.word	0x00001904
100454d4:	2000085e 	.word	0x2000085e
100454d8:	20000892 	.word	0x20000892
100454dc:	00001905 	.word	0x00001905
100454e0:	20000862 	.word	0x20000862
100454e4:	00002b50 	.word	0x00002b50
100454e8:	20000864 	.word	0x20000864
100454ec:	00002b51 	.word	0x00002b51
100454f0:	0021      	movs	r1, r4
100454f2:	0028      	movs	r0, r5
	uuid16 = UpperBoundPressureCharUUID;
100454f4:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100454f6:	f7fd fe62 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(settingsServiceHandle, UUID_TYPE_16, &char_uuid, 2, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
100454fa:	4b78      	ldr	r3, [pc, #480]	; (100456dc <Add_Sensor_Service+0x664>)
100454fc:	4e78      	ldr	r6, [pc, #480]	; (100456e0 <Add_Sensor_Service+0x668>)
100454fe:	2210      	movs	r2, #16
10045500:	8830      	ldrh	r0, [r6, #0]
10045502:	9305      	str	r3, [sp, #20]
10045504:	2300      	movs	r3, #0
10045506:	9203      	str	r2, [sp, #12]
10045508:	9304      	str	r3, [sp, #16]
1004550a:	3a0b      	subs	r2, #11
1004550c:	9301      	str	r3, [sp, #4]
1004550e:	330a      	adds	r3, #10
10045510:	9202      	str	r2, [sp, #8]
10045512:	9300      	str	r3, [sp, #0]
10045514:	002a      	movs	r2, r5
10045516:	3b08      	subs	r3, #8
10045518:	2101      	movs	r1, #1
1004551a:	f004 f9ef 	bl	100498fc <aci_gatt_add_char>
1004551e:	1e07      	subs	r7, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
10045520:	d000      	beq.n	10045524 <Add_Sensor_Service+0x4ac>
10045522:	e5bf      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = TargetPressureCharUUID;
10045524:	4b6f      	ldr	r3, [pc, #444]	; (100456e4 <Add_Sensor_Service+0x66c>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045526:	2202      	movs	r2, #2
10045528:	0021      	movs	r1, r4
1004552a:	0028      	movs	r0, r5
	uuid16 = TargetPressureCharUUID;
1004552c:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004552e:	f7fd fe46 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(settingsServiceHandle, UUID_TYPE_16, &char_uuid, 2, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
10045532:	4b6d      	ldr	r3, [pc, #436]	; (100456e8 <Add_Sensor_Service+0x670>)
10045534:	8830      	ldrh	r0, [r6, #0]
10045536:	9305      	str	r3, [sp, #20]
10045538:	2310      	movs	r3, #16
1004553a:	9303      	str	r3, [sp, #12]
1004553c:	3b0b      	subs	r3, #11
1004553e:	9302      	str	r3, [sp, #8]
10045540:	3305      	adds	r3, #5
10045542:	9704      	str	r7, [sp, #16]
10045544:	9701      	str	r7, [sp, #4]
10045546:	9300      	str	r3, [sp, #0]
10045548:	002a      	movs	r2, r5
1004554a:	3b08      	subs	r3, #8
1004554c:	2101      	movs	r1, #1
1004554e:	f004 f9d5 	bl	100498fc <aci_gatt_add_char>
10045552:	1e07      	subs	r7, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
10045554:	d000      	beq.n	10045558 <Add_Sensor_Service+0x4e0>
10045556:	e5a5      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = SamplingPeriodCharUUID;
10045558:	4b64      	ldr	r3, [pc, #400]	; (100456ec <Add_Sensor_Service+0x674>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004555a:	2202      	movs	r2, #2
1004555c:	0021      	movs	r1, r4
1004555e:	0028      	movs	r0, r5
	uuid16 = SamplingPeriodCharUUID;
10045560:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045562:	f7fd fe2c 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(settingsServiceHandle, UUID_TYPE_16, &char_uuid, 1, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
10045566:	4b62      	ldr	r3, [pc, #392]	; (100456f0 <Add_Sensor_Service+0x678>)
10045568:	8830      	ldrh	r0, [r6, #0]
1004556a:	9305      	str	r3, [sp, #20]
1004556c:	2310      	movs	r3, #16
1004556e:	9303      	str	r3, [sp, #12]
10045570:	3b0b      	subs	r3, #11
10045572:	9302      	str	r3, [sp, #8]
10045574:	3305      	adds	r3, #5
10045576:	9300      	str	r3, [sp, #0]
10045578:	3b09      	subs	r3, #9
1004557a:	9704      	str	r7, [sp, #16]
1004557c:	9701      	str	r7, [sp, #4]
1004557e:	002a      	movs	r2, r5
10045580:	0019      	movs	r1, r3
10045582:	f004 f9bb 	bl	100498fc <aci_gatt_add_char>
10045586:	1e07      	subs	r7, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
10045588:	d000      	beq.n	1004558c <Add_Sensor_Service+0x514>
1004558a:	e58b      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = NumSamplesCharUUID;
1004558c:	4b59      	ldr	r3, [pc, #356]	; (100456f4 <Add_Sensor_Service+0x67c>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004558e:	2202      	movs	r2, #2
10045590:	0021      	movs	r1, r4
10045592:	0028      	movs	r0, r5
	uuid16 = NumSamplesCharUUID;
10045594:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045596:	f7fd fe12 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(settingsServiceHandle, UUID_TYPE_16, &char_uuid, 1, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
1004559a:	4b57      	ldr	r3, [pc, #348]	; (100456f8 <Add_Sensor_Service+0x680>)
1004559c:	8830      	ldrh	r0, [r6, #0]
1004559e:	9305      	str	r3, [sp, #20]
100455a0:	2310      	movs	r3, #16
100455a2:	9303      	str	r3, [sp, #12]
100455a4:	3b0b      	subs	r3, #11
100455a6:	9302      	str	r3, [sp, #8]
100455a8:	3305      	adds	r3, #5
100455aa:	9300      	str	r3, [sp, #0]
100455ac:	3b09      	subs	r3, #9
100455ae:	9704      	str	r7, [sp, #16]
100455b0:	9701      	str	r7, [sp, #4]
100455b2:	002a      	movs	r2, r5
100455b4:	0019      	movs	r1, r3
100455b6:	f004 f9a1 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
100455ba:	2800      	cmp	r0, #0
100455bc:	d000      	beq.n	100455c0 <Add_Sensor_Service+0x548>
100455be:	e571      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100455c0:	4f4e      	ldr	r7, [pc, #312]	; (100456fc <Add_Sensor_Service+0x684>)
	uuid16 = ModeServiceUUID;
100455c2:	4b4f      	ldr	r3, [pc, #316]	; (10045700 <Add_Sensor_Service+0x688>)
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100455c4:	2202      	movs	r2, #2
100455c6:	0021      	movs	r1, r4
100455c8:	0038      	movs	r0, r7
	uuid16 = ModeServiceUUID;
100455ca:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
100455cc:	f7fd fdf7 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 3, &modeServiceHandle);
100455d0:	2201      	movs	r2, #1
100455d2:	4b4c      	ldr	r3, [pc, #304]	; (10045704 <Add_Sensor_Service+0x68c>)
100455d4:	0039      	movs	r1, r7
100455d6:	9300      	str	r3, [sp, #0]
100455d8:	0010      	movs	r0, r2
100455da:	2303      	movs	r3, #3
100455dc:	f004 f9ad 	bl	1004993a <aci_gatt_add_service>
100455e0:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
100455e2:	d000      	beq.n	100455e6 <Add_Sensor_Service+0x56e>
100455e4:	e55e      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = ModeCharUUID;
100455e6:	4b48      	ldr	r3, [pc, #288]	; (10045708 <Add_Sensor_Service+0x690>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100455e8:	2202      	movs	r2, #2
100455ea:	0021      	movs	r1, r4
100455ec:	0028      	movs	r0, r5
	uuid16 = ModeCharUUID;
100455ee:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100455f0:	f7fd fde5 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(modeServiceHandle, UUID_TYPE_16, &char_uuid, 1, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
100455f4:	4b43      	ldr	r3, [pc, #268]	; (10045704 <Add_Sensor_Service+0x68c>)
100455f6:	002a      	movs	r2, r5
100455f8:	8818      	ldrh	r0, [r3, #0]
100455fa:	4b44      	ldr	r3, [pc, #272]	; (1004570c <Add_Sensor_Service+0x694>)
100455fc:	9604      	str	r6, [sp, #16]
100455fe:	9305      	str	r3, [sp, #20]
10045600:	2310      	movs	r3, #16
10045602:	9303      	str	r3, [sp, #12]
10045604:	3b0b      	subs	r3, #11
10045606:	9302      	str	r3, [sp, #8]
10045608:	3305      	adds	r3, #5
1004560a:	9300      	str	r3, [sp, #0]
1004560c:	3b09      	subs	r3, #9
1004560e:	9601      	str	r6, [sp, #4]
10045610:	0019      	movs	r1, r3
10045612:	f004 f973 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
10045616:	2800      	cmp	r0, #0
10045618:	d000      	beq.n	1004561c <Add_Sensor_Service+0x5a4>
1004561a:	e543      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = DeviceInfoServiceUUID;
1004561c:	4b3c      	ldr	r3, [pc, #240]	; (10045710 <Add_Sensor_Service+0x698>)
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
1004561e:	2202      	movs	r2, #2
10045620:	0021      	movs	r1, r4
10045622:	0038      	movs	r0, r7
	uuid16 = DeviceInfoServiceUUID;
10045624:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
10045626:	f7fd fdca 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 3, &deviceInfoServiceHandle);
1004562a:	2201      	movs	r2, #1
1004562c:	4b39      	ldr	r3, [pc, #228]	; (10045714 <Add_Sensor_Service+0x69c>)
1004562e:	0039      	movs	r1, r7
10045630:	9300      	str	r3, [sp, #0]
10045632:	0010      	movs	r0, r2
10045634:	2303      	movs	r3, #3
10045636:	f004 f980 	bl	1004993a <aci_gatt_add_service>
1004563a:	1e06      	subs	r6, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
1004563c:	d000      	beq.n	10045640 <Add_Sensor_Service+0x5c8>
1004563e:	e531      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = DeviceInfoCharUUID;
10045640:	4b35      	ldr	r3, [pc, #212]	; (10045718 <Add_Sensor_Service+0x6a0>)
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
10045642:	2202      	movs	r2, #2
10045644:	0021      	movs	r1, r4
10045646:	0028      	movs	r0, r5
	uuid16 = DeviceInfoCharUUID;
10045648:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004564a:	f7fd fdb8 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(deviceInfoServiceHandle, UUID_TYPE_16, &char_uuid, 3, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
1004564e:	4b31      	ldr	r3, [pc, #196]	; (10045714 <Add_Sensor_Service+0x69c>)
10045650:	002a      	movs	r2, r5
10045652:	8818      	ldrh	r0, [r3, #0]
10045654:	4b31      	ldr	r3, [pc, #196]	; (1004571c <Add_Sensor_Service+0x6a4>)
10045656:	9604      	str	r6, [sp, #16]
10045658:	9305      	str	r3, [sp, #20]
1004565a:	2310      	movs	r3, #16
1004565c:	9303      	str	r3, [sp, #12]
1004565e:	3b0b      	subs	r3, #11
10045660:	9302      	str	r3, [sp, #8]
10045662:	3305      	adds	r3, #5
10045664:	9300      	str	r3, [sp, #0]
10045666:	9601      	str	r6, [sp, #4]
10045668:	3b07      	subs	r3, #7
1004566a:	2101      	movs	r1, #1
1004566c:	f004 f946 	bl	100498fc <aci_gatt_add_char>
	if (ret != BLE_STATUS_SUCCESS)
10045670:	2800      	cmp	r0, #0
10045672:	d000      	beq.n	10045676 <Add_Sensor_Service+0x5fe>
10045674:	e516      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = DateTimeServiceUUID;
10045676:	4b2a      	ldr	r3, [pc, #168]	; (10045720 <Add_Sensor_Service+0x6a8>)
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
10045678:	2202      	movs	r2, #2
1004567a:	0021      	movs	r1, r4
1004567c:	0038      	movs	r0, r7
	uuid16 = DateTimeServiceUUID;
1004567e:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&service_uuid.Service_UUID_16, &uuid16, 2);
10045680:	f7fd fd9d 	bl	100431be <Osal_MemCpy>
	ret = aci_gatt_add_service(UUID_TYPE_16, &service_uuid, PRIMARY_SERVICE, 3, &dateTimeServiceHandle);
10045684:	2201      	movs	r2, #1
10045686:	4e27      	ldr	r6, [pc, #156]	; (10045724 <Add_Sensor_Service+0x6ac>)
10045688:	0039      	movs	r1, r7
1004568a:	9600      	str	r6, [sp, #0]
1004568c:	2303      	movs	r3, #3
1004568e:	0010      	movs	r0, r2
10045690:	f004 f953 	bl	1004993a <aci_gatt_add_service>
10045694:	1e07      	subs	r7, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
10045696:	d000      	beq.n	1004569a <Add_Sensor_Service+0x622>
10045698:	e504      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	uuid16 = DateTimeCharUUID;
1004569a:	23ae      	movs	r3, #174	; 0xae
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
1004569c:	0021      	movs	r1, r4
	uuid16 = DateTimeCharUUID;
1004569e:	019b      	lsls	r3, r3, #6
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100456a0:	2202      	movs	r2, #2
100456a2:	0028      	movs	r0, r5
	uuid16 = DateTimeCharUUID;
100456a4:	8023      	strh	r3, [r4, #0]
	Osal_MemCpy(&char_uuid.Char_UUID_16, &uuid16, 2);
100456a6:	f7fd fd8a 	bl	100431be <Osal_MemCpy>
	ret =  aci_gatt_add_char(dateTimeServiceHandle, UUID_TYPE_16, &char_uuid, 5, CHAR_PROP_READ|CHAR_PROP_WRITE, ATTR_PERMISSION_NONE,
100456aa:	4b1f      	ldr	r3, [pc, #124]	; (10045728 <Add_Sensor_Service+0x6b0>)
100456ac:	8830      	ldrh	r0, [r6, #0]
100456ae:	9305      	str	r3, [sp, #20]
100456b0:	2310      	movs	r3, #16
100456b2:	9303      	str	r3, [sp, #12]
100456b4:	3b0b      	subs	r3, #11
100456b6:	9302      	str	r3, [sp, #8]
100456b8:	3305      	adds	r3, #5
100456ba:	9300      	str	r3, [sp, #0]
100456bc:	9704      	str	r7, [sp, #16]
100456be:	9701      	str	r7, [sp, #4]
100456c0:	3b05      	subs	r3, #5
100456c2:	002a      	movs	r2, r5
100456c4:	2101      	movs	r1, #1
100456c6:	f004 f919 	bl	100498fc <aci_gatt_add_char>
100456ca:	1e04      	subs	r4, r0, #0
	if (ret != BLE_STATUS_SUCCESS)
100456cc:	d000      	beq.n	100456d0 <Add_Sensor_Service+0x658>
100456ce:	e4e9      	b.n	100450a4 <Add_Sensor_Service+0x2c>
	SEGGER_RTT_printf(0,"Finished adding all services\n");
100456d0:	4916      	ldr	r1, [pc, #88]	; (1004572c <Add_Sensor_Service+0x6b4>)
100456d2:	2000      	movs	r0, #0
100456d4:	f7ff fa4d 	bl	10044b72 <SEGGER_RTT_printf>
	return BLE_STATUS_SUCCESS;
100456d8:	e4e5      	b.n	100450a6 <Add_Sensor_Service+0x2e>
100456da:	46c0      	nop			; (mov r8, r8)
100456dc:	2000085c 	.word	0x2000085c
100456e0:	20000862 	.word	0x20000862
100456e4:	00002b52 	.word	0x00002b52
100456e8:	2000085a 	.word	0x2000085a
100456ec:	00002b53 	.word	0x00002b53
100456f0:	2000088a 	.word	0x2000088a
100456f4:	00002b54 	.word	0x00002b54
100456f8:	2000089c 	.word	0x2000089c
100456fc:	200008b4 	.word	0x200008b4
10045700:	00001906 	.word	0x00001906
10045704:	20000882 	.word	0x20000882
10045708:	00002b60 	.word	0x00002b60
1004570c:	2000086c 	.word	0x2000086c
10045710:	00001907 	.word	0x00001907
10045714:	20000890 	.word	0x20000890
10045718:	00002b70 	.word	0x00002b70
1004571c:	20000886 	.word	0x20000886
10045720:	00001908 	.word	0x00001908
10045724:	20000898 	.word	0x20000898
10045728:	200008b2 	.word	0x200008b2
1004572c:	10058438 	.word	0x10058438

10045730 <Read_Batt>:
* Description    : Read battery characteristic value
* Input          : None
* Return         : Status.
*******************************************************************************/
tBleStatus Read_Batt()
{
10045730:	b510      	push	{r4, lr}
	tBleStatus ret;
	uint16_t value = ADC_Value(ADC_Input_AdcPin2);
10045732:	2001      	movs	r0, #1
{
10045734:	b086      	sub	sp, #24
	uint16_t value = ADC_Value(ADC_Input_AdcPin2);
10045736:	f000 fc1d 	bl	10045f74 <ADC_Value>
1004573a:	2316      	movs	r3, #22

	ret = aci_gatt_update_char_value_ext(connection_handle, battSensServiceHandle, battValCharHandle, NO_NOTIFICATION, 2, DEFAULT_OFFSET, 2, (uint8_t*)&value);
1004573c:	4a09      	ldr	r2, [pc, #36]	; (10045764 <Read_Batt+0x34>)
	uint16_t value = ADC_Value(ADC_Input_AdcPin2);
1004573e:	446b      	add	r3, sp
10045740:	8018      	strh	r0, [r3, #0]
	ret = aci_gatt_update_char_value_ext(connection_handle, battSensServiceHandle, battValCharHandle, NO_NOTIFICATION, 2, DEFAULT_OFFSET, 2, (uint8_t*)&value);
10045742:	4909      	ldr	r1, [pc, #36]	; (10045768 <Read_Batt+0x38>)
10045744:	8810      	ldrh	r0, [r2, #0]
10045746:	4a09      	ldr	r2, [pc, #36]	; (1004576c <Read_Batt+0x3c>)
10045748:	8809      	ldrh	r1, [r1, #0]
1004574a:	8812      	ldrh	r2, [r2, #0]
1004574c:	2402      	movs	r4, #2
1004574e:	9303      	str	r3, [sp, #12]
10045750:	2300      	movs	r3, #0
10045752:	9402      	str	r4, [sp, #8]
10045754:	9301      	str	r3, [sp, #4]
10045756:	9400      	str	r4, [sp, #0]
10045758:	b280      	uxth	r0, r0
1004575a:	f004 f913 	bl	10049984 <aci_gatt_update_char_value_ext>
	return ret;
}
1004575e:	b006      	add	sp, #24
10045760:	bd10      	pop	{r4, pc}
10045762:	46c0      	nop			; (mov r8, r8)
10045764:	2000090a 	.word	0x2000090a
10045768:	20000866 	.word	0x20000866
1004576c:	20000884 	.word	0x20000884

10045770 <Read_Pressure>:
* Description    : Read pressure characteristic value
* Input          : None
* Return         : Status.
*******************************************************************************/
tBleStatus Read_Pressure()
{
10045770:	b530      	push	{r4, r5, lr}
10045772:	b085      	sub	sp, #20
	tBleStatus ret;

	Read_ADC();
10045774:	f000 fe56 	bl	10046424 <Read_ADC>

	for (int i=0; i<2; i++) SEGGER_RTT_printf(0, "Sensor %d: %d\n", i, CurrentPressures[i]); //TODO: Remove
10045778:	2200      	movs	r2, #0
1004577a:	4c10      	ldr	r4, [pc, #64]	; (100457bc <Read_Pressure+0x4c>)
1004577c:	4d10      	ldr	r5, [pc, #64]	; (100457c0 <Read_Pressure+0x50>)
1004577e:	8823      	ldrh	r3, [r4, #0]
10045780:	0029      	movs	r1, r5
10045782:	b29b      	uxth	r3, r3
10045784:	0010      	movs	r0, r2
10045786:	f7ff f9f4 	bl	10044b72 <SEGGER_RTT_printf>
1004578a:	8863      	ldrh	r3, [r4, #2]
1004578c:	0029      	movs	r1, r5
1004578e:	b29b      	uxth	r3, r3
10045790:	2201      	movs	r2, #1
10045792:	2000      	movs	r0, #0
10045794:	f7ff f9ed 	bl	10044b72 <SEGGER_RTT_printf>

	ret = aci_gatt_update_char_value_ext(connection_handle, pressureServiceHandle, pressureValCharHandle, NO_NOTIFICATION, 16, DEFAULT_OFFSET, 16, CurrentPressures);
10045798:	4b0a      	ldr	r3, [pc, #40]	; (100457c4 <Read_Pressure+0x54>)
1004579a:	8818      	ldrh	r0, [r3, #0]
1004579c:	4b0a      	ldr	r3, [pc, #40]	; (100457c8 <Read_Pressure+0x58>)
1004579e:	b280      	uxth	r0, r0
100457a0:	881a      	ldrh	r2, [r3, #0]
100457a2:	4b0a      	ldr	r3, [pc, #40]	; (100457cc <Read_Pressure+0x5c>)
100457a4:	8819      	ldrh	r1, [r3, #0]
100457a6:	9403      	str	r4, [sp, #12]
100457a8:	2300      	movs	r3, #0
100457aa:	2410      	movs	r4, #16
100457ac:	9301      	str	r3, [sp, #4]
100457ae:	9402      	str	r4, [sp, #8]
100457b0:	9400      	str	r4, [sp, #0]
100457b2:	f004 f8e7 	bl	10049984 <aci_gatt_update_char_value_ext>
	return ret;
}
100457b6:	b005      	add	sp, #20
100457b8:	bd30      	pop	{r4, r5, pc}
100457ba:	46c0      	nop			; (mov r8, r8)
100457bc:	20000926 	.word	0x20000926
100457c0:	1005845e 	.word	0x1005845e
100457c4:	2000090a 	.word	0x2000090a
100457c8:	2000088e 	.word	0x2000088e
100457cc:	20000858 	.word	0x20000858

100457d0 <Notify_Pressure>:
* Description    : Notify pressure characteristic value
* Input          : None
* Return         : Status.
*******************************************************************************/
tBleStatus Notify_Pressure()
{
100457d0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	tBleStatus ret;

	Read_ADC();
100457d2:	f000 fe27 	bl	10046424 <Read_ADC>

	//for (int i=0; i<8; i++) SEGGER_RTT_printf(0,"Pressure %d: %d mmHg\n", i, CurrentPressures[i]);

	ret = aci_gatt_update_char_value_ext(connection_handle, pressureServiceHandle, pressureValCharHandle, NOTIFICATION, 16, DEFAULT_OFFSET, 16, CurrentPressures);
100457d6:	4b09      	ldr	r3, [pc, #36]	; (100457fc <Notify_Pressure+0x2c>)
100457d8:	2400      	movs	r4, #0
100457da:	8818      	ldrh	r0, [r3, #0]
100457dc:	4b08      	ldr	r3, [pc, #32]	; (10045800 <Notify_Pressure+0x30>)
100457de:	b280      	uxth	r0, r0
100457e0:	881a      	ldrh	r2, [r3, #0]
100457e2:	4b08      	ldr	r3, [pc, #32]	; (10045804 <Notify_Pressure+0x34>)
100457e4:	8819      	ldrh	r1, [r3, #0]
100457e6:	4b08      	ldr	r3, [pc, #32]	; (10045808 <Notify_Pressure+0x38>)
100457e8:	9401      	str	r4, [sp, #4]
100457ea:	9303      	str	r3, [sp, #12]
100457ec:	2310      	movs	r3, #16
100457ee:	9302      	str	r3, [sp, #8]
100457f0:	9300      	str	r3, [sp, #0]
100457f2:	3b0f      	subs	r3, #15
100457f4:	f004 f8c6 	bl	10049984 <aci_gatt_update_char_value_ext>
	return ret;
}
100457f8:	b004      	add	sp, #16
100457fa:	bd10      	pop	{r4, pc}
100457fc:	2000090a 	.word	0x2000090a
10045800:	2000088e 	.word	0x2000088e
10045804:	20000858 	.word	0x20000858
10045808:	20000926 	.word	0x20000926

1004580c <Notify_Download_Val>:
* Description    : Update memory records characteristic value
* Input          : memory data
* Return         : Status.
*******************************************************************************/
tBleStatus Notify_Download_Val(uint8_t* data, uint8_t size)
{
1004580c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
1004580e:	0004      	movs	r4, r0

	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, dataDownloadServiceHandle,
10045810:	4a08      	ldr	r2, [pc, #32]	; (10045834 <Notify_Download_Val+0x28>)
{
10045812:	000b      	movs	r3, r1
	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, dataDownloadServiceHandle,
10045814:	8810      	ldrh	r0, [r2, #0]
10045816:	4908      	ldr	r1, [pc, #32]	; (10045838 <Notify_Download_Val+0x2c>)
10045818:	4a08      	ldr	r2, [pc, #32]	; (1004583c <Notify_Download_Val+0x30>)
1004581a:	8809      	ldrh	r1, [r1, #0]
1004581c:	8812      	ldrh	r2, [r2, #0]
1004581e:	9403      	str	r4, [sp, #12]
10045820:	2400      	movs	r4, #0
10045822:	9302      	str	r3, [sp, #8]
10045824:	9300      	str	r3, [sp, #0]
10045826:	9401      	str	r4, [sp, #4]
10045828:	2301      	movs	r3, #1
1004582a:	b280      	uxth	r0, r0
1004582c:	f004 f8aa 	bl	10049984 <aci_gatt_update_char_value_ext>
			dataDownloadValCharHandle, NOTIFICATION, size, DEFAULT_OFFSET, size, data);
	return ret;
}
10045830:	b004      	add	sp, #16
10045832:	bd10      	pop	{r4, pc}
10045834:	2000090a 	.word	0x2000090a
10045838:	2000085e 	.word	0x2000085e
1004583c:	20000892 	.word	0x20000892

10045840 <Read_Control_SmallValves>:
* Description    : Read the state of the small valves
* Input          : None.
* Return         : Status.
*******************************************************************************/
tBleStatus Read_Control_SmallValves()
{
10045840:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, controlServiceHandle, valveSmallCharHandle, NO_NOTIFICATION, 1, DEFAULT_OFFSET, 1, (uint8_t*)&currentState);
10045842:	4b09      	ldr	r3, [pc, #36]	; (10045868 <Read_Control_SmallValves+0x28>)
10045844:	2401      	movs	r4, #1
10045846:	8818      	ldrh	r0, [r3, #0]
10045848:	4b08      	ldr	r3, [pc, #32]	; (1004586c <Read_Control_SmallValves+0x2c>)
1004584a:	b280      	uxth	r0, r0
1004584c:	881a      	ldrh	r2, [r3, #0]
1004584e:	4b08      	ldr	r3, [pc, #32]	; (10045870 <Read_Control_SmallValves+0x30>)
10045850:	8819      	ldrh	r1, [r3, #0]
10045852:	4b08      	ldr	r3, [pc, #32]	; (10045874 <Read_Control_SmallValves+0x34>)
10045854:	9402      	str	r4, [sp, #8]
10045856:	9303      	str	r3, [sp, #12]
10045858:	2300      	movs	r3, #0
1004585a:	9400      	str	r4, [sp, #0]
1004585c:	9301      	str	r3, [sp, #4]
1004585e:	f004 f891 	bl	10049984 <aci_gatt_update_char_value_ext>

	return ret;
}
10045862:	b004      	add	sp, #16
10045864:	bd10      	pop	{r4, pc}
10045866:	46c0      	nop			; (mov r8, r8)
10045868:	2000090a 	.word	0x2000090a
1004586c:	20000896 	.word	0x20000896
10045870:	2000088c 	.word	0x2000088c
10045874:	200008ec 	.word	0x200008ec

10045878 <Read_Control_BigValve>:
*******************************************************************************/
tBleStatus Read_Control_BigValve()
{
	uint8_t state;

	if (GPIO_ReadBit(ValveControl) == Bit_SET) {
10045878:	2080      	movs	r0, #128	; 0x80
{
1004587a:	b510      	push	{r4, lr}
	if (GPIO_ReadBit(ValveControl) == Bit_SET) {
1004587c:	03c0      	lsls	r0, r0, #15
{
1004587e:	b086      	sub	sp, #24
	if (GPIO_ReadBit(ValveControl) == Bit_SET) {
10045880:	f7fe fba9 	bl	10043fd6 <GPIO_ReadBit>
10045884:	2317      	movs	r3, #23
10045886:	446b      	add	r3, sp
10045888:	2801      	cmp	r0, #1
1004588a:	d111      	bne.n	100458b0 <Read_Control_BigValve+0x38>
		state = 0x01;
1004588c:	7018      	strb	r0, [r3, #0]
	} else {
		state = 0x00;
	}

	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, controlServiceHandle, valveLargeCharHandle, NO_NOTIFICATION, 1, DEFAULT_OFFSET, 1, (uint8_t*)&state);
1004588e:	4a0a      	ldr	r2, [pc, #40]	; (100458b8 <Read_Control_BigValve+0x40>)
10045890:	490a      	ldr	r1, [pc, #40]	; (100458bc <Read_Control_BigValve+0x44>)
10045892:	8810      	ldrh	r0, [r2, #0]
10045894:	4a0a      	ldr	r2, [pc, #40]	; (100458c0 <Read_Control_BigValve+0x48>)
10045896:	8809      	ldrh	r1, [r1, #0]
10045898:	8812      	ldrh	r2, [r2, #0]
1004589a:	2401      	movs	r4, #1
1004589c:	9303      	str	r3, [sp, #12]
1004589e:	2300      	movs	r3, #0
100458a0:	9402      	str	r4, [sp, #8]
100458a2:	9301      	str	r3, [sp, #4]
100458a4:	9400      	str	r4, [sp, #0]
100458a6:	b280      	uxth	r0, r0
100458a8:	f004 f86c 	bl	10049984 <aci_gatt_update_char_value_ext>

	return ret;
}
100458ac:	b006      	add	sp, #24
100458ae:	bd10      	pop	{r4, pc}
		state = 0x00;
100458b0:	2200      	movs	r2, #0
100458b2:	701a      	strb	r2, [r3, #0]
100458b4:	e7eb      	b.n	1004588e <Read_Control_BigValve+0x16>
100458b6:	46c0      	nop			; (mov r8, r8)
100458b8:	2000090a 	.word	0x2000090a
100458bc:	2000088c 	.word	0x2000088c
100458c0:	20000880 	.word	0x20000880

100458c4 <Read_Control_Pump>:
*******************************************************************************/
tBleStatus Read_Control_Pump()
{
	uint8_t state;

	if (GPIO_ReadBit(PVControl) == Bit_SET) {
100458c4:	2080      	movs	r0, #128	; 0x80
{
100458c6:	b510      	push	{r4, lr}
	if (GPIO_ReadBit(PVControl) == Bit_SET) {
100458c8:	0400      	lsls	r0, r0, #16
{
100458ca:	b086      	sub	sp, #24
	if (GPIO_ReadBit(PVControl) == Bit_SET) {
100458cc:	f7fe fb83 	bl	10043fd6 <GPIO_ReadBit>
100458d0:	2317      	movs	r3, #23
100458d2:	446b      	add	r3, sp
100458d4:	2801      	cmp	r0, #1
100458d6:	d111      	bne.n	100458fc <Read_Control_Pump+0x38>
		state = 0x01;
100458d8:	7018      	strb	r0, [r3, #0]
	} else {
		state = 0x00;
	}

	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, controlServiceHandle, pumpCharHandle, NO_NOTIFICATION, 1, DEFAULT_OFFSET, 1, (uint8_t*)&state);
100458da:	4a0a      	ldr	r2, [pc, #40]	; (10045904 <Read_Control_Pump+0x40>)
100458dc:	490a      	ldr	r1, [pc, #40]	; (10045908 <Read_Control_Pump+0x44>)
100458de:	8810      	ldrh	r0, [r2, #0]
100458e0:	4a0a      	ldr	r2, [pc, #40]	; (1004590c <Read_Control_Pump+0x48>)
100458e2:	8809      	ldrh	r1, [r1, #0]
100458e4:	8812      	ldrh	r2, [r2, #0]
100458e6:	2401      	movs	r4, #1
100458e8:	9303      	str	r3, [sp, #12]
100458ea:	2300      	movs	r3, #0
100458ec:	9402      	str	r4, [sp, #8]
100458ee:	9301      	str	r3, [sp, #4]
100458f0:	9400      	str	r4, [sp, #0]
100458f2:	b280      	uxth	r0, r0
100458f4:	f004 f846 	bl	10049984 <aci_gatt_update_char_value_ext>

	return ret;
}
100458f8:	b006      	add	sp, #24
100458fa:	bd10      	pop	{r4, pc}
		state = 0x00;
100458fc:	2200      	movs	r2, #0
100458fe:	701a      	strb	r2, [r3, #0]
10045900:	e7eb      	b.n	100458da <Read_Control_Pump+0x16>
10045902:	46c0      	nop			; (mov r8, r8)
10045904:	2000090a 	.word	0x2000090a
10045908:	2000088c 	.word	0x2000088c
1004590c:	20000860 	.word	0x20000860

10045910 <Read_Device_Time>:
* Description    : Read date and time values of last header
* Input          : None.
* Return         : Status.
*******************************************************************************/
tBleStatus Read_Device_Time()
{
10045910:	b510      	push	{r4, lr}
	uint8_t data[5];
	data[0] = year;
10045912:	4b11      	ldr	r3, [pc, #68]	; (10045958 <Read_Device_Time+0x48>)
{
10045914:	b086      	sub	sp, #24
	data[0] = year;
10045916:	781a      	ldrb	r2, [r3, #0]
10045918:	ab04      	add	r3, sp, #16
1004591a:	701a      	strb	r2, [r3, #0]
	data[1] = month;
1004591c:	4a0f      	ldr	r2, [pc, #60]	; (1004595c <Read_Device_Time+0x4c>)
	data[2] = day;
	data[3] = hour;
	data[4] = minute;

	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, deviceInfoServiceHandle, deviceInfoCharHandle, NO_NOTIFICATION,6, DEFAULT_OFFSET, 5, data);
1004591e:	4910      	ldr	r1, [pc, #64]	; (10045960 <Read_Device_Time+0x50>)
	data[1] = month;
10045920:	7812      	ldrb	r2, [r2, #0]
	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, deviceInfoServiceHandle, deviceInfoCharHandle, NO_NOTIFICATION,6, DEFAULT_OFFSET, 5, data);
10045922:	8809      	ldrh	r1, [r1, #0]
	data[1] = month;
10045924:	705a      	strb	r2, [r3, #1]
	data[2] = day;
10045926:	4a0f      	ldr	r2, [pc, #60]	; (10045964 <Read_Device_Time+0x54>)
	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, deviceInfoServiceHandle, deviceInfoCharHandle, NO_NOTIFICATION,6, DEFAULT_OFFSET, 5, data);
10045928:	2406      	movs	r4, #6
	data[2] = day;
1004592a:	7812      	ldrb	r2, [r2, #0]
1004592c:	709a      	strb	r2, [r3, #2]
	data[3] = hour;
1004592e:	4a0e      	ldr	r2, [pc, #56]	; (10045968 <Read_Device_Time+0x58>)
10045930:	7812      	ldrb	r2, [r2, #0]
10045932:	70da      	strb	r2, [r3, #3]
	data[4] = minute;
10045934:	4a0d      	ldr	r2, [pc, #52]	; (1004596c <Read_Device_Time+0x5c>)
10045936:	7812      	ldrb	r2, [r2, #0]
10045938:	711a      	strb	r2, [r3, #4]
	tBleStatus ret = aci_gatt_update_char_value_ext(connection_handle, deviceInfoServiceHandle, deviceInfoCharHandle, NO_NOTIFICATION,6, DEFAULT_OFFSET, 5, data);
1004593a:	4a0d      	ldr	r2, [pc, #52]	; (10045970 <Read_Device_Time+0x60>)
1004593c:	8810      	ldrh	r0, [r2, #0]
1004593e:	4a0d      	ldr	r2, [pc, #52]	; (10045974 <Read_Device_Time+0x64>)
10045940:	b280      	uxth	r0, r0
10045942:	8812      	ldrh	r2, [r2, #0]
10045944:	9303      	str	r3, [sp, #12]
10045946:	2305      	movs	r3, #5
10045948:	9302      	str	r3, [sp, #8]
1004594a:	2300      	movs	r3, #0
1004594c:	9400      	str	r4, [sp, #0]
1004594e:	9301      	str	r3, [sp, #4]
10045950:	f004 f818 	bl	10049984 <aci_gatt_update_char_value_ext>
	return ret;
}
10045954:	b006      	add	sp, #24
10045956:	bd10      	pop	{r4, pc}
10045958:	20000916 	.word	0x20000916
1004595c:	200008f4 	.word	0x200008f4
10045960:	20000890 	.word	0x20000890
10045964:	20000917 	.word	0x20000917
10045968:	20000909 	.word	0x20000909
1004596c:	200008fa 	.word	0x200008fa
10045970:	2000090a 	.word	0x2000090a
10045974:	20000886 	.word	0x20000886

10045978 <External_Memory_Clear>:
* Function Name  : External_Memory_Clear
* Description    : Erase memory
* Input          : None.
* Return         : None.
*******************************************************************************/
void External_Memory_Clear(){
10045978:	b510      	push	{r4, lr}
1004597a:	b086      	sub	sp, #24
	// Clear memory
	SPI_WriteEnable_Memory();
1004597c:	f000 fc2a 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_BulkErase_Memory();
10045980:	f000 fc7a 	bl	10046278 <SPI_BulkErase_Memory>

	uint8_t confirm = 1;
10045984:	2317      	movs	r3, #23
10045986:	2401      	movs	r4, #1
	aci_gatt_update_char_value_ext(connection_handle,dataDownloadServiceHandle,dataDownloadValCharHandle, NO_NOTIFICATION,1, DEFAULT_OFFSET, 1, (uint8_t*)&confirm);
10045988:	4a08      	ldr	r2, [pc, #32]	; (100459ac <External_Memory_Clear+0x34>)
1004598a:	4909      	ldr	r1, [pc, #36]	; (100459b0 <External_Memory_Clear+0x38>)
1004598c:	8810      	ldrh	r0, [r2, #0]
1004598e:	4a09      	ldr	r2, [pc, #36]	; (100459b4 <External_Memory_Clear+0x3c>)
	uint8_t confirm = 1;
10045990:	446b      	add	r3, sp
10045992:	701c      	strb	r4, [r3, #0]
	aci_gatt_update_char_value_ext(connection_handle,dataDownloadServiceHandle,dataDownloadValCharHandle, NO_NOTIFICATION,1, DEFAULT_OFFSET, 1, (uint8_t*)&confirm);
10045994:	8812      	ldrh	r2, [r2, #0]
10045996:	8809      	ldrh	r1, [r1, #0]
10045998:	9303      	str	r3, [sp, #12]
1004599a:	2300      	movs	r3, #0
1004599c:	9402      	str	r4, [sp, #8]
1004599e:	9301      	str	r3, [sp, #4]
100459a0:	9400      	str	r4, [sp, #0]
100459a2:	b280      	uxth	r0, r0
100459a4:	f003 ffee 	bl	10049984 <aci_gatt_update_char_value_ext>
}
100459a8:	b006      	add	sp, #24
100459aa:	bd10      	pop	{r4, pc}
100459ac:	2000090a 	.word	0x2000090a
100459b0:	2000085e 	.word	0x2000085e
100459b4:	20000892 	.word	0x20000892

100459b8 <Read_Request_CB>:
// Return         : None.
//*******************************************************************************
void Read_Request_CB(uint16_t handle)
{
	tBleStatus ret;
	if (connection_handle!=0){
100459b8:	4b2d      	ldr	r3, [pc, #180]	; (10045a70 <Read_Request_CB+0xb8>)
{
100459ba:	b510      	push	{r4, lr}
	if (connection_handle!=0){
100459bc:	881a      	ldrh	r2, [r3, #0]
{
100459be:	0004      	movs	r4, r0
	if (connection_handle!=0){
100459c0:	2a00      	cmp	r2, #0
100459c2:	d10b      	bne.n	100459dc <Read_Request_CB+0x24>
		ret = aci_gatt_allow_read(connection_handle);
	  if (ret != BLE_STATUS_SUCCESS)
		return;
	}

	if (handle == battValCharHandle+1) {
100459c4:	4b2b      	ldr	r3, [pc, #172]	; (10045a74 <Read_Request_CB+0xbc>)
100459c6:	881b      	ldrh	r3, [r3, #0]
100459c8:	3301      	adds	r3, #1
100459ca:	429c      	cmp	r4, r3
100459cc:	d10d      	bne.n	100459ea <Read_Request_CB+0x32>
		ret = Read_Batt();
100459ce:	f7ff feaf 	bl	10045730 <Read_Batt>
		SEGGER_RTT_printf(0, "Read battery\n");
100459d2:	4929      	ldr	r1, [pc, #164]	; (10045a78 <Read_Request_CB+0xc0>)
		External_Memory_Clear();
		SEGGER_RTT_printf(0, "Read - Memory clear\n");
	}
	else if (handle == dateTimeCharHandle+1) {
		Read_Device_Time();
		SEGGER_RTT_printf(0, "Read last updated date & time\n");
100459d4:	2000      	movs	r0, #0
100459d6:	f7ff f8cc 	bl	10044b72 <SEGGER_RTT_printf>
100459da:	e005      	b.n	100459e8 <Read_Request_CB+0x30>
		ret = aci_gatt_allow_read(connection_handle);
100459dc:	8818      	ldrh	r0, [r3, #0]
100459de:	b280      	uxth	r0, r0
100459e0:	f003 ffc6 	bl	10049970 <aci_gatt_allow_read>
	  if (ret != BLE_STATUS_SUCCESS)
100459e4:	2800      	cmp	r0, #0
100459e6:	d0ed      	beq.n	100459c4 <Read_Request_CB+0xc>
	}

}
100459e8:	bd10      	pop	{r4, pc}
	else if (handle == pressureValCharHandle+1){
100459ea:	4b24      	ldr	r3, [pc, #144]	; (10045a7c <Read_Request_CB+0xc4>)
100459ec:	881b      	ldrh	r3, [r3, #0]
100459ee:	3301      	adds	r3, #1
100459f0:	429c      	cmp	r4, r3
100459f2:	d103      	bne.n	100459fc <Read_Request_CB+0x44>
		ret = Read_Pressure();
100459f4:	f7ff febc 	bl	10045770 <Read_Pressure>
		SEGGER_RTT_printf(0, "Read pressure\n");
100459f8:	4921      	ldr	r1, [pc, #132]	; (10045a80 <Read_Request_CB+0xc8>)
100459fa:	e7eb      	b.n	100459d4 <Read_Request_CB+0x1c>
	else if (handle == valveSmallCharHandle+1) {
100459fc:	4b21      	ldr	r3, [pc, #132]	; (10045a84 <Read_Request_CB+0xcc>)
100459fe:	881b      	ldrh	r3, [r3, #0]
10045a00:	3301      	adds	r3, #1
10045a02:	429c      	cmp	r4, r3
10045a04:	d103      	bne.n	10045a0e <Read_Request_CB+0x56>
		ret = Read_Control_SmallValves();
10045a06:	f7ff ff1b 	bl	10045840 <Read_Control_SmallValves>
		SEGGER_RTT_printf(0, "Read small valves\n");
10045a0a:	491f      	ldr	r1, [pc, #124]	; (10045a88 <Read_Request_CB+0xd0>)
10045a0c:	e7e2      	b.n	100459d4 <Read_Request_CB+0x1c>
	else if (handle == valveLargeCharHandle+1) {
10045a0e:	4b1f      	ldr	r3, [pc, #124]	; (10045a8c <Read_Request_CB+0xd4>)
10045a10:	881b      	ldrh	r3, [r3, #0]
10045a12:	3301      	adds	r3, #1
10045a14:	429c      	cmp	r4, r3
10045a16:	d103      	bne.n	10045a20 <Read_Request_CB+0x68>
		ret = Read_Control_BigValve();
10045a18:	f7ff ff2e 	bl	10045878 <Read_Control_BigValve>
		SEGGER_RTT_printf(0, "Read big valves\n");
10045a1c:	491c      	ldr	r1, [pc, #112]	; (10045a90 <Read_Request_CB+0xd8>)
10045a1e:	e7d9      	b.n	100459d4 <Read_Request_CB+0x1c>
	else if (handle == pumpCharHandle+1) {
10045a20:	4b1c      	ldr	r3, [pc, #112]	; (10045a94 <Read_Request_CB+0xdc>)
10045a22:	881b      	ldrh	r3, [r3, #0]
10045a24:	3301      	adds	r3, #1
10045a26:	429c      	cmp	r4, r3
10045a28:	d103      	bne.n	10045a32 <Read_Request_CB+0x7a>
		ret = Read_Control_Pump();
10045a2a:	f7ff ff4b 	bl	100458c4 <Read_Control_Pump>
		SEGGER_RTT_printf(0, "Read pump\n");
10045a2e:	491a      	ldr	r1, [pc, #104]	; (10045a98 <Read_Request_CB+0xe0>)
10045a30:	e7d0      	b.n	100459d4 <Read_Request_CB+0x1c>
	else if (handle == longTermModeHandle+1) {
10045a32:	4b1a      	ldr	r3, [pc, #104]	; (10045a9c <Read_Request_CB+0xe4>)
10045a34:	881b      	ldrh	r3, [r3, #0]
10045a36:	3301      	adds	r3, #1
10045a38:	429c      	cmp	r4, r3
10045a3a:	d103      	bne.n	10045a44 <Read_Request_CB+0x8c>
		ret = disconnectedMode;
10045a3c:	4b18      	ldr	r3, [pc, #96]	; (10045aa0 <Read_Request_CB+0xe8>)
		SEGGER_RTT_printf(0, "Read LTM\n");
10045a3e:	4919      	ldr	r1, [pc, #100]	; (10045aa4 <Read_Request_CB+0xec>)
		ret = disconnectedMode;
10045a40:	781b      	ldrb	r3, [r3, #0]
10045a42:	e7c7      	b.n	100459d4 <Read_Request_CB+0x1c>
	else if (handle == dataDownloadValCharHandle+1) {
10045a44:	4b18      	ldr	r3, [pc, #96]	; (10045aa8 <Read_Request_CB+0xf0>)
10045a46:	881b      	ldrh	r3, [r3, #0]
10045a48:	3301      	adds	r3, #1
10045a4a:	429c      	cmp	r4, r3
10045a4c:	d107      	bne.n	10045a5e <Read_Request_CB+0xa6>
		SEGGER_RTT_printf(0, "Clearing memory...\n");
10045a4e:	4917      	ldr	r1, [pc, #92]	; (10045aac <Read_Request_CB+0xf4>)
10045a50:	2000      	movs	r0, #0
10045a52:	f7ff f88e 	bl	10044b72 <SEGGER_RTT_printf>
		External_Memory_Clear();
10045a56:	f7ff ff8f 	bl	10045978 <External_Memory_Clear>
		SEGGER_RTT_printf(0, "Read - Memory clear\n");
10045a5a:	4915      	ldr	r1, [pc, #84]	; (10045ab0 <Read_Request_CB+0xf8>)
10045a5c:	e7ba      	b.n	100459d4 <Read_Request_CB+0x1c>
	else if (handle == dateTimeCharHandle+1) {
10045a5e:	4b15      	ldr	r3, [pc, #84]	; (10045ab4 <Read_Request_CB+0xfc>)
10045a60:	881b      	ldrh	r3, [r3, #0]
10045a62:	3301      	adds	r3, #1
10045a64:	429c      	cmp	r4, r3
10045a66:	d1bf      	bne.n	100459e8 <Read_Request_CB+0x30>
		Read_Device_Time();
10045a68:	f7ff ff52 	bl	10045910 <Read_Device_Time>
		SEGGER_RTT_printf(0, "Read last updated date & time\n");
10045a6c:	4912      	ldr	r1, [pc, #72]	; (10045ab8 <Read_Request_CB+0x100>)
10045a6e:	e7b1      	b.n	100459d4 <Read_Request_CB+0x1c>
10045a70:	2000090a 	.word	0x2000090a
10045a74:	20000884 	.word	0x20000884
10045a78:	1005846d 	.word	0x1005846d
10045a7c:	2000088e 	.word	0x2000088e
10045a80:	1005847b 	.word	0x1005847b
10045a84:	20000896 	.word	0x20000896
10045a88:	1005848a 	.word	0x1005848a
10045a8c:	20000880 	.word	0x20000880
10045a90:	1005849d 	.word	0x1005849d
10045a94:	20000860 	.word	0x20000860
10045a98:	100584ae 	.word	0x100584ae
10045a9c:	20000894 	.word	0x20000894
10045aa0:	2000090c 	.word	0x2000090c
10045aa4:	100584b9 	.word	0x100584b9
10045aa8:	20000892 	.word	0x20000892
10045aac:	100584c3 	.word	0x100584c3
10045ab0:	100584d7 	.word	0x100584d7
10045ab4:	200008b2 	.word	0x200008b2
10045ab8:	100584ec 	.word	0x100584ec

10045abc <Write_Request_CB>:
// Function Name  : Write_Request_CB.
// Description    : Callback of write requests.
// Input          : Handle of the characteristic to update. Data to be write and their length.
// Return         : None.
//*******************************************************************************
void Write_Request_CB(uint16_t handle, uint16_t data_length, uint8_t *att_data) {
10045abc:	b5f0      	push	{r4, r5, r6, r7, lr}

	// A notification is issued
	if (handle == pressureValCharHandle+2) {
10045abe:	4bab      	ldr	r3, [pc, #684]	; (10045d6c <Write_Request_CB+0x2b0>)
void Write_Request_CB(uint16_t handle, uint16_t data_length, uint8_t *att_data) {
10045ac0:	b085      	sub	sp, #20
	if (handle == pressureValCharHandle+2) {
10045ac2:	881b      	ldrh	r3, [r3, #0]
void Write_Request_CB(uint16_t handle, uint16_t data_length, uint8_t *att_data) {
10045ac4:	0014      	movs	r4, r2
	if (handle == pressureValCharHandle+2) {
10045ac6:	3302      	adds	r3, #2
10045ac8:	4298      	cmp	r0, r3
10045aca:	d109      	bne.n	10045ae0 <Write_Request_CB+0x24>
		//if(data_length == 2) { //make sure it is enable/disable notification
			if (att_data[0]==ENABLE){
10045acc:	7813      	ldrb	r3, [r2, #0]
10045ace:	2b01      	cmp	r3, #1
10045ad0:	d102      	bne.n	10045ad8 <Write_Request_CB+0x1c>
				isPressureReaderNotificationEnabled = TRUE;
			}
			else if (att_data[0]==DISABLE){
				isPressureReaderNotificationEnabled = FALSE;
10045ad2:	4aa7      	ldr	r2, [pc, #668]	; (10045d70 <Write_Request_CB+0x2b4>)
10045ad4:	7013      	strb	r3, [r2, #0]
10045ad6:	e001      	b.n	10045adc <Write_Request_CB+0x20>
			else if (att_data[0]==DISABLE){
10045ad8:	2b00      	cmp	r3, #0
10045ada:	d0fa      	beq.n	10045ad2 <Write_Request_CB+0x16>

		SEGGER_RTT_printf(0, "Date set: %d/%d/%d %d:%d\n", day, month, year+2000, hour, minute);

		//BLE_Misc_Test();
	}
}
10045adc:	b005      	add	sp, #20
10045ade:	bdf0      	pop	{r4, r5, r6, r7, pc}
	else if (handle == dataDownloadValCharHandle+2){
10045ae0:	4ba4      	ldr	r3, [pc, #656]	; (10045d74 <Write_Request_CB+0x2b8>)
10045ae2:	881b      	ldrh	r3, [r3, #0]
10045ae4:	3302      	adds	r3, #2
10045ae6:	4298      	cmp	r0, r3
10045ae8:	d114      	bne.n	10045b14 <Write_Request_CB+0x58>
			if (att_data[0]==ENABLE){
10045aea:	7813      	ldrb	r3, [r2, #0]
10045aec:	2b01      	cmp	r3, #1
10045aee:	d10c      	bne.n	10045b0a <Write_Request_CB+0x4e>
				isPressureReaderNotificationEnabled = FALSE;
10045af0:	2200      	movs	r2, #0
10045af2:	499f      	ldr	r1, [pc, #636]	; (10045d70 <Write_Request_CB+0x2b4>)
10045af4:	700a      	strb	r2, [r1, #0]
				isDownloadNotificationEnabled = TRUE;
10045af6:	49a0      	ldr	r1, [pc, #640]	; (10045d78 <Write_Request_CB+0x2bc>)
10045af8:	700b      	strb	r3, [r1, #0]
				address = 0;
10045afa:	4ba0      	ldr	r3, [pc, #640]	; (10045d7c <Write_Request_CB+0x2c0>)
10045afc:	601a      	str	r2, [r3, #0]
			SEGGER_RTT_printf(0, "DataDownload notification of: %x\n", att_data[0]);
10045afe:	7822      	ldrb	r2, [r4, #0]
10045b00:	499f      	ldr	r1, [pc, #636]	; (10045d80 <Write_Request_CB+0x2c4>)
		SEGGER_RTT_printf(0, "Toggled large valve: %x\n", att_data[0]);
10045b02:	2000      	movs	r0, #0
10045b04:	f7ff f835 	bl	10044b72 <SEGGER_RTT_printf>
10045b08:	e7e8      	b.n	10045adc <Write_Request_CB+0x20>
			else if (att_data[0]==DISABLE)
10045b0a:	2b00      	cmp	r3, #0
10045b0c:	d1f7      	bne.n	10045afe <Write_Request_CB+0x42>
				isDownloadNotificationEnabled = FALSE;
10045b0e:	4a9a      	ldr	r2, [pc, #616]	; (10045d78 <Write_Request_CB+0x2bc>)
10045b10:	7013      	strb	r3, [r2, #0]
10045b12:	e7f4      	b.n	10045afe <Write_Request_CB+0x42>
	else if (handle == LEDValCharHandle+1) {
10045b14:	4b9b      	ldr	r3, [pc, #620]	; (10045d84 <Write_Request_CB+0x2c8>)
10045b16:	881b      	ldrh	r3, [r3, #0]
10045b18:	3301      	adds	r3, #1
10045b1a:	4298      	cmp	r0, r3
10045b1c:	d11b      	bne.n	10045b56 <Write_Request_CB+0x9a>
		if (att_data[0] == 0) { // Red LED
10045b1e:	7813      	ldrb	r3, [r2, #0]
10045b20:	7850      	ldrb	r0, [r2, #1]
10045b22:	2b00      	cmp	r3, #0
10045b24:	d10d      	bne.n	10045b42 <Write_Request_CB+0x86>
			if (att_data[1] == 0) // Off
10045b26:	2800      	cmp	r0, #0
10045b28:	d102      	bne.n	10045b30 <Write_Request_CB+0x74>
				LEDs_Set_Red(TRUE);
10045b2a:	f000 fc21 	bl	10046370 <LEDs_Set_Red>
10045b2e:	e001      	b.n	10045b34 <Write_Request_CB+0x78>
			else if (att_data[1] == 1) // On
10045b30:	2801      	cmp	r0, #1
10045b32:	d0fa      	beq.n	10045b2a <Write_Request_CB+0x6e>
		SEGGER_RTT_printf(0, "LED state changed to LED #%d, state %d\n", att_data[0], att_data[1]);
10045b34:	7863      	ldrb	r3, [r4, #1]
10045b36:	7822      	ldrb	r2, [r4, #0]
10045b38:	4993      	ldr	r1, [pc, #588]	; (10045d88 <Write_Request_CB+0x2cc>)
		SEGGER_RTT_printf(0, "Valve state changed to: Valve %x, State %x\n", att_data[0], att_data[1]);
10045b3a:	2000      	movs	r0, #0
10045b3c:	f7ff f819 	bl	10044b72 <SEGGER_RTT_printf>
10045b40:	e7cc      	b.n	10045adc <Write_Request_CB+0x20>
		else if (att_data[0] == 1) { // Blue LED
10045b42:	2b01      	cmp	r3, #1
10045b44:	d1f6      	bne.n	10045b34 <Write_Request_CB+0x78>
			if (att_data[1] == 0) // Off
10045b46:	2800      	cmp	r0, #0
10045b48:	d102      	bne.n	10045b50 <Write_Request_CB+0x94>
				LEDs_Set_Blue(TRUE);
10045b4a:	f000 fc04 	bl	10046356 <LEDs_Set_Blue>
10045b4e:	e7f1      	b.n	10045b34 <Write_Request_CB+0x78>
			else if (att_data[1] == 1) // On
10045b50:	2801      	cmp	r0, #1
10045b52:	d1ef      	bne.n	10045b34 <Write_Request_CB+0x78>
10045b54:	e7f9      	b.n	10045b4a <Write_Request_CB+0x8e>
	else if (handle == valveSmallCharHandle+1) {
10045b56:	4b8d      	ldr	r3, [pc, #564]	; (10045d8c <Write_Request_CB+0x2d0>)
10045b58:	881b      	ldrh	r3, [r3, #0]
10045b5a:	3301      	adds	r3, #1
10045b5c:	4298      	cmp	r0, r3
10045b5e:	d112      	bne.n	10045b86 <Write_Request_CB+0xca>
		} else if (att_data[1] == 1){
10045b60:	7850      	ldrb	r0, [r2, #1]
		switch (att_data[0]) { // To make data work with my function
10045b62:	7812      	ldrb	r2, [r2, #0]
		} else if (att_data[1] == 1){
10045b64:	3801      	subs	r0, #1
10045b66:	4243      	negs	r3, r0
10045b68:	4158      	adcs	r0, r3
10045b6a:	4240      	negs	r0, r0
10045b6c:	b2c0      	uxtb	r0, r0
		switch (att_data[0]) { // To make data work with my function
10045b6e:	2300      	movs	r3, #0
10045b70:	2a07      	cmp	r2, #7
10045b72:	d801      	bhi.n	10045b78 <Write_Request_CB+0xbc>
10045b74:	4b86      	ldr	r3, [pc, #536]	; (10045d90 <Write_Request_CB+0x2d4>)
10045b76:	5c9b      	ldrb	r3, [r3, r2]
		Adjust_Valve_State(valve_number & valve_state);
10045b78:	4018      	ands	r0, r3
10045b7a:	f000 fd3d 	bl	100465f8 <Adjust_Valve_State>
		SEGGER_RTT_printf(0, "Valve state changed to: Valve %x, State %x\n", att_data[0], att_data[1]);
10045b7e:	7863      	ldrb	r3, [r4, #1]
10045b80:	7822      	ldrb	r2, [r4, #0]
10045b82:	4984      	ldr	r1, [pc, #528]	; (10045d94 <Write_Request_CB+0x2d8>)
10045b84:	e7d9      	b.n	10045b3a <Write_Request_CB+0x7e>
	else if (handle == valveLargeCharHandle+1) {
10045b86:	4b84      	ldr	r3, [pc, #528]	; (10045d98 <Write_Request_CB+0x2dc>)
10045b88:	881b      	ldrh	r3, [r3, #0]
10045b8a:	3301      	adds	r3, #1
10045b8c:	4298      	cmp	r0, r3
10045b8e:	d10c      	bne.n	10045baa <Write_Request_CB+0xee>
		if (att_data[0] == 1)
10045b90:	7813      	ldrb	r3, [r2, #0]
10045b92:	2b01      	cmp	r3, #1
10045b94:	d104      	bne.n	10045ba0 <Write_Request_CB+0xe4>
			Open_Valve_Large();
10045b96:	f000 fd79 	bl	1004668c <Open_Valve_Large>
		SEGGER_RTT_printf(0, "Toggled large valve: %x\n", att_data[0]);
10045b9a:	7822      	ldrb	r2, [r4, #0]
10045b9c:	497f      	ldr	r1, [pc, #508]	; (10045d9c <Write_Request_CB+0x2e0>)
10045b9e:	e7b0      	b.n	10045b02 <Write_Request_CB+0x46>
		else if (att_data[0] == 0)
10045ba0:	2b00      	cmp	r3, #0
10045ba2:	d1fa      	bne.n	10045b9a <Write_Request_CB+0xde>
			Close_Valve_Large();
10045ba4:	f000 fd78 	bl	10046698 <Close_Valve_Large>
10045ba8:	e7f7      	b.n	10045b9a <Write_Request_CB+0xde>
	else if (handle == pumpCharHandle+1) {
10045baa:	4b7d      	ldr	r3, [pc, #500]	; (10045da0 <Write_Request_CB+0x2e4>)
10045bac:	881b      	ldrh	r3, [r3, #0]
10045bae:	3301      	adds	r3, #1
10045bb0:	4298      	cmp	r0, r3
10045bb2:	d10c      	bne.n	10045bce <Write_Request_CB+0x112>
		if (att_data[0] == 1)
10045bb4:	7813      	ldrb	r3, [r2, #0]
10045bb6:	2b01      	cmp	r3, #1
10045bb8:	d104      	bne.n	10045bc4 <Write_Request_CB+0x108>
			Pump_On();
10045bba:	f000 fda7 	bl	1004670c <Pump_On>
		SEGGER_RTT_printf(0, "Toggled pump: %x\n", att_data[0]);
10045bbe:	7822      	ldrb	r2, [r4, #0]
10045bc0:	4978      	ldr	r1, [pc, #480]	; (10045da4 <Write_Request_CB+0x2e8>)
10045bc2:	e79e      	b.n	10045b02 <Write_Request_CB+0x46>
		else if (att_data[0] == 0)
10045bc4:	2b00      	cmp	r3, #0
10045bc6:	d1fa      	bne.n	10045bbe <Write_Request_CB+0x102>
			Pump_Off();
10045bc8:	f000 fda6 	bl	10046718 <Pump_Off>
10045bcc:	e7f7      	b.n	10045bbe <Write_Request_CB+0x102>
	else if (handle == bagControlCharHandle+1) {
10045bce:	4b76      	ldr	r3, [pc, #472]	; (10045da8 <Write_Request_CB+0x2ec>)
10045bd0:	881b      	ldrh	r3, [r3, #0]
10045bd2:	3301      	adds	r3, #1
10045bd4:	4298      	cmp	r0, r3
10045bd6:	d120      	bne.n	10045c1a <Write_Request_CB+0x15e>
		uint16_t pressure = (att_data[1] << 8) | att_data[2];
10045bd8:	7855      	ldrb	r5, [r2, #1]
10045bda:	7893      	ldrb	r3, [r2, #2]
10045bdc:	022d      	lsls	r5, r5, #8
10045bde:	431d      	orrs	r5, r3
		SEGGER_RTT_printf(0, "Air bag control. bag: %x; value: %d mmHg\n",
10045be0:	7812      	ldrb	r2, [r2, #0]
10045be2:	002b      	movs	r3, r5
10045be4:	4971      	ldr	r1, [pc, #452]	; (10045dac <Write_Request_CB+0x2f0>)
10045be6:	2000      	movs	r0, #0
10045be8:	f7fe ffc3 	bl	10044b72 <SEGGER_RTT_printf>
		if (pressure > CurrentPressures[att_data[0]-1])
10045bec:	7820      	ldrb	r0, [r4, #0]
10045bee:	4a70      	ldr	r2, [pc, #448]	; (10045db0 <Write_Request_CB+0x2f4>)
10045bf0:	1e43      	subs	r3, r0, #1
10045bf2:	005b      	lsls	r3, r3, #1
10045bf4:	5a99      	ldrh	r1, [r3, r2]
10045bf6:	428d      	cmp	r5, r1
10045bf8:	d905      	bls.n	10045c06 <Write_Request_CB+0x14a>
			Pressurize_Air_Bag(att_data[0], pressure, 1);
10045bfa:	22fe      	movs	r2, #254	; 0xfe
10045bfc:	0029      	movs	r1, r5
10045bfe:	0592      	lsls	r2, r2, #22
10045c00:	f000 fd90 	bl	10046724 <Pressurize_Air_Bag>
10045c04:	e76a      	b.n	10045adc <Write_Request_CB+0x20>
		else if (pressure < CurrentPressures[att_data[0]-1])
10045c06:	5a9b      	ldrh	r3, [r3, r2]
10045c08:	429d      	cmp	r5, r3
10045c0a:	d300      	bcc.n	10045c0e <Write_Request_CB+0x152>
10045c0c:	e766      	b.n	10045adc <Write_Request_CB+0x20>
			Depressurize_Air_Bag(att_data[0], pressure, 1);
10045c0e:	22fe      	movs	r2, #254	; 0xfe
10045c10:	0029      	movs	r1, r5
10045c12:	0592      	lsls	r2, r2, #22
10045c14:	f000 fe58 	bl	100468c8 <Depressurize_Air_Bag>
10045c18:	e760      	b.n	10045adc <Write_Request_CB+0x20>
	else if (handle == bagRedistributeCharHandle+1) {
10045c1a:	4b66      	ldr	r3, [pc, #408]	; (10045db4 <Write_Request_CB+0x2f8>)
10045c1c:	881b      	ldrh	r3, [r3, #0]
10045c1e:	3301      	adds	r3, #1
10045c20:	4298      	cmp	r0, r3
10045c22:	d110      	bne.n	10045c46 <Write_Request_CB+0x18a>
		uint16_t pressure = (att_data[2] << 8) | att_data[3];
10045c24:	7895      	ldrb	r5, [r2, #2]
10045c26:	78d3      	ldrb	r3, [r2, #3]
10045c28:	022d      	lsls	r5, r5, #8
10045c2a:	431d      	orrs	r5, r3
		SEGGER_RTT_printf(0, "Redistributing pressure from bag %d to %d; Target: %d mmHg\n",
10045c2c:	4962      	ldr	r1, [pc, #392]	; (10045db8 <Write_Request_CB+0x2fc>)
10045c2e:	7853      	ldrb	r3, [r2, #1]
10045c30:	2000      	movs	r0, #0
10045c32:	7812      	ldrb	r2, [r2, #0]
10045c34:	9500      	str	r5, [sp, #0]
10045c36:	f7fe ff9c 	bl	10044b72 <SEGGER_RTT_printf>
		Redistribute_Pressure(att_data[0], att_data[1], pressure);
10045c3a:	7861      	ldrb	r1, [r4, #1]
10045c3c:	7820      	ldrb	r0, [r4, #0]
10045c3e:	002a      	movs	r2, r5
10045c40:	f000 febe 	bl	100469c0 <Redistribute_Pressure>
10045c44:	e74a      	b.n	10045adc <Write_Request_CB+0x20>
	else if (handle == initializeBagsCharHandle+1) {
10045c46:	4b5d      	ldr	r3, [pc, #372]	; (10045dbc <Write_Request_CB+0x300>)
10045c48:	881b      	ldrh	r3, [r3, #0]
10045c4a:	3301      	adds	r3, #1
10045c4c:	4298      	cmp	r0, r3
10045c4e:	d10c      	bne.n	10045c6a <Write_Request_CB+0x1ae>
		uint16_t pressure = (att_data[0] << 8) | att_data[1];
10045c50:	7813      	ldrb	r3, [r2, #0]
10045c52:	7854      	ldrb	r4, [r2, #1]
10045c54:	021b      	lsls	r3, r3, #8
10045c56:	431c      	orrs	r4, r3
		SEGGER_RTT_printf(0, "Initializing air bags. Target: %d mmHg\n", pressure);
10045c58:	0022      	movs	r2, r4
10045c5a:	4959      	ldr	r1, [pc, #356]	; (10045dc0 <Write_Request_CB+0x304>)
10045c5c:	2000      	movs	r0, #0
10045c5e:	f7fe ff88 	bl	10044b72 <SEGGER_RTT_printf>
		Initialize_AirBags(pressure);
10045c62:	0020      	movs	r0, r4
10045c64:	f001 fc22 	bl	100474ac <Initialize_AirBags>
10045c68:	e738      	b.n	10045adc <Write_Request_CB+0x20>
	else if (handle == releaseBagsCharHandle+1) {
10045c6a:	4b56      	ldr	r3, [pc, #344]	; (10045dc4 <Write_Request_CB+0x308>)
10045c6c:	881b      	ldrh	r3, [r3, #0]
10045c6e:	3301      	adds	r3, #1
10045c70:	4298      	cmp	r0, r3
10045c72:	d106      	bne.n	10045c82 <Write_Request_CB+0x1c6>
		SEGGER_RTT_printf(0, "Releasing air from all air bags\n");
10045c74:	4954      	ldr	r1, [pc, #336]	; (10045dc8 <Write_Request_CB+0x30c>)
10045c76:	2000      	movs	r0, #0
10045c78:	f7fe ff7b 	bl	10044b72 <SEGGER_RTT_printf>
		Release_AirBags();
10045c7c:	f000 ff52 	bl	10046b24 <Release_AirBags>
10045c80:	e72c      	b.n	10045adc <Write_Request_CB+0x20>
	else if (handle == longTermModeHandle+1) {
10045c82:	4b52      	ldr	r3, [pc, #328]	; (10045dcc <Write_Request_CB+0x310>)
10045c84:	881b      	ldrh	r3, [r3, #0]
10045c86:	3301      	adds	r3, #1
10045c88:	4298      	cmp	r0, r3
10045c8a:	d116      	bne.n	10045cba <Write_Request_CB+0x1fe>
		if (att_data[0] == 1) {
10045c8c:	7813      	ldrb	r3, [r2, #0]
10045c8e:	2b01      	cmp	r3, #1
10045c90:	d10a      	bne.n	10045ca8 <Write_Request_CB+0x1ec>
			if (disconnectedMode == FALSE) {
10045c92:	4b4f      	ldr	r3, [pc, #316]	; (10045dd0 <Write_Request_CB+0x314>)
10045c94:	781b      	ldrb	r3, [r3, #0]
10045c96:	2b00      	cmp	r3, #0
10045c98:	d101      	bne.n	10045c9e <Write_Request_CB+0x1e2>
				DeInitialize();
10045c9a:	f001 fcfb 	bl	10047694 <DeInitialize>
		SEGGER_RTT_printf(0, "Toggled LTM\n");
10045c9e:	494d      	ldr	r1, [pc, #308]	; (10045dd4 <Write_Request_CB+0x318>)
10045ca0:	2000      	movs	r0, #0
10045ca2:	f7fe ff66 	bl	10044b72 <SEGGER_RTT_printf>
10045ca6:	e719      	b.n	10045adc <Write_Request_CB+0x20>
		} else if (att_data[0] == 0) {
10045ca8:	2b00      	cmp	r3, #0
10045caa:	d1f8      	bne.n	10045c9e <Write_Request_CB+0x1e2>
			if (disconnectedMode == TRUE) {
10045cac:	4b48      	ldr	r3, [pc, #288]	; (10045dd0 <Write_Request_CB+0x314>)
10045cae:	781b      	ldrb	r3, [r3, #0]
10045cb0:	2b01      	cmp	r3, #1
10045cb2:	d1f4      	bne.n	10045c9e <Write_Request_CB+0x1e2>
				ReInitialize();
10045cb4:	f001 fe40 	bl	10047938 <ReInitialize>
10045cb8:	e7f1      	b.n	10045c9e <Write_Request_CB+0x1e2>
	else if (handle == lowerBoundPressureCharHandle + 1) {
10045cba:	4b47      	ldr	r3, [pc, #284]	; (10045dd8 <Write_Request_CB+0x31c>)
10045cbc:	881b      	ldrh	r3, [r3, #0]
10045cbe:	3301      	adds	r3, #1
10045cc0:	4298      	cmp	r0, r3
10045cc2:	d10d      	bne.n	10045ce0 <Write_Request_CB+0x224>
		lowerBoundPressure = (att_data[0] << 8) | att_data[1];
10045cc4:	7812      	ldrb	r2, [r2, #0]
10045cc6:	7863      	ldrb	r3, [r4, #1]
10045cc8:	0212      	lsls	r2, r2, #8
10045cca:	4c44      	ldr	r4, [pc, #272]	; (10045ddc <Write_Request_CB+0x320>)
10045ccc:	4313      	orrs	r3, r2
10045cce:	8023      	strh	r3, [r4, #0]
		WriteLP_IntFlash(lowerBoundPressure);
10045cd0:	8820      	ldrh	r0, [r4, #0]
10045cd2:	b280      	uxth	r0, r0
10045cd4:	f001 f9b8 	bl	10047048 <WriteLP_IntFlash>
		SEGGER_RTT_printf(0, "Lower Bound Pressure set: %d mmHg\n", lowerBoundPressure);
10045cd8:	8822      	ldrh	r2, [r4, #0]
10045cda:	4941      	ldr	r1, [pc, #260]	; (10045de0 <Write_Request_CB+0x324>)
10045cdc:	b292      	uxth	r2, r2
10045cde:	e710      	b.n	10045b02 <Write_Request_CB+0x46>
	else if (handle == upperBoundPressureCharHandle + 1) {
10045ce0:	4b40      	ldr	r3, [pc, #256]	; (10045de4 <Write_Request_CB+0x328>)
10045ce2:	881b      	ldrh	r3, [r3, #0]
10045ce4:	3301      	adds	r3, #1
10045ce6:	4298      	cmp	r0, r3
10045ce8:	d10d      	bne.n	10045d06 <Write_Request_CB+0x24a>
		upperBoundPressure = (att_data[0] << 8) | att_data[1];
10045cea:	7812      	ldrb	r2, [r2, #0]
10045cec:	7863      	ldrb	r3, [r4, #1]
10045cee:	0212      	lsls	r2, r2, #8
10045cf0:	4c3d      	ldr	r4, [pc, #244]	; (10045de8 <Write_Request_CB+0x32c>)
10045cf2:	4313      	orrs	r3, r2
10045cf4:	8023      	strh	r3, [r4, #0]
		WriteUP_IntFlash(upperBoundPressure);
10045cf6:	8820      	ldrh	r0, [r4, #0]
10045cf8:	b280      	uxth	r0, r0
10045cfa:	f001 f9c1 	bl	10047080 <WriteUP_IntFlash>
		SEGGER_RTT_printf(0, "Upper Bound Pressure set: %d mmHg\n", upperBoundPressure);
10045cfe:	8822      	ldrh	r2, [r4, #0]
10045d00:	493a      	ldr	r1, [pc, #232]	; (10045dec <Write_Request_CB+0x330>)
10045d02:	b292      	uxth	r2, r2
10045d04:	e6fd      	b.n	10045b02 <Write_Request_CB+0x46>
	else if (handle == targetPressureCharHandle + 1) {
10045d06:	4b3a      	ldr	r3, [pc, #232]	; (10045df0 <Write_Request_CB+0x334>)
10045d08:	881b      	ldrh	r3, [r3, #0]
10045d0a:	3301      	adds	r3, #1
10045d0c:	4298      	cmp	r0, r3
10045d0e:	d10d      	bne.n	10045d2c <Write_Request_CB+0x270>
		targetPressure = (att_data[0] << 8) | att_data[1];
10045d10:	7812      	ldrb	r2, [r2, #0]
10045d12:	7863      	ldrb	r3, [r4, #1]
10045d14:	0212      	lsls	r2, r2, #8
10045d16:	4c37      	ldr	r4, [pc, #220]	; (10045df4 <Write_Request_CB+0x338>)
10045d18:	4313      	orrs	r3, r2
10045d1a:	8023      	strh	r3, [r4, #0]
		WriteTP_IntFlash(targetPressure);
10045d1c:	8820      	ldrh	r0, [r4, #0]
10045d1e:	b280      	uxth	r0, r0
10045d20:	f001 f9ca 	bl	100470b8 <WriteTP_IntFlash>
		SEGGER_RTT_printf(0, "Target Pressure set: %d mmHg\n", targetPressure);
10045d24:	8822      	ldrh	r2, [r4, #0]
10045d26:	4934      	ldr	r1, [pc, #208]	; (10045df8 <Write_Request_CB+0x33c>)
10045d28:	b292      	uxth	r2, r2
10045d2a:	e6ea      	b.n	10045b02 <Write_Request_CB+0x46>
	else if (handle == samplingPeriodCharHandle + 1) {
10045d2c:	4b33      	ldr	r3, [pc, #204]	; (10045dfc <Write_Request_CB+0x340>)
10045d2e:	881b      	ldrh	r3, [r3, #0]
10045d30:	3301      	adds	r3, #1
10045d32:	4298      	cmp	r0, r3
10045d34:	d10a      	bne.n	10045d4c <Write_Request_CB+0x290>
		samplingPeriod = att_data[0];
10045d36:	4c32      	ldr	r4, [pc, #200]	; (10045e00 <Write_Request_CB+0x344>)
10045d38:	7813      	ldrb	r3, [r2, #0]
10045d3a:	7023      	strb	r3, [r4, #0]
		WriteSP_IntFlash(samplingPeriod);
10045d3c:	7820      	ldrb	r0, [r4, #0]
10045d3e:	b2c0      	uxtb	r0, r0
10045d40:	f001 f9d6 	bl	100470f0 <WriteSP_IntFlash>
		SEGGER_RTT_printf(0, "Sampling Period set: %d minutes\n", samplingPeriod);
10045d44:	7822      	ldrb	r2, [r4, #0]
10045d46:	492f      	ldr	r1, [pc, #188]	; (10045e04 <Write_Request_CB+0x348>)
10045d48:	b2d2      	uxtb	r2, r2
10045d4a:	e6da      	b.n	10045b02 <Write_Request_CB+0x46>
	else if (handle == numSamplesCharHandle + 1) {
10045d4c:	4b2e      	ldr	r3, [pc, #184]	; (10045e08 <Write_Request_CB+0x34c>)
10045d4e:	881b      	ldrh	r3, [r3, #0]
10045d50:	3301      	adds	r3, #1
10045d52:	4298      	cmp	r0, r3
10045d54:	d15e      	bne.n	10045e14 <Write_Request_CB+0x358>
		numberOfSamples = att_data[0];
10045d56:	4c2d      	ldr	r4, [pc, #180]	; (10045e0c <Write_Request_CB+0x350>)
10045d58:	7813      	ldrb	r3, [r2, #0]
10045d5a:	7023      	strb	r3, [r4, #0]
		WriteNS_IntFlash(numberOfSamples);
10045d5c:	7820      	ldrb	r0, [r4, #0]
10045d5e:	b2c0      	uxtb	r0, r0
10045d60:	f001 f9da 	bl	10047118 <WriteNS_IntFlash>
		SEGGER_RTT_printf(0, "Number of samples set: %d\n", numberOfSamples);
10045d64:	7822      	ldrb	r2, [r4, #0]
10045d66:	492a      	ldr	r1, [pc, #168]	; (10045e10 <Write_Request_CB+0x354>)
10045d68:	b2d2      	uxtb	r2, r2
10045d6a:	e6ca      	b.n	10045b02 <Write_Request_CB+0x46>
10045d6c:	2000088e 	.word	0x2000088e
10045d70:	200008f5 	.word	0x200008f5
10045d74:	20000892 	.word	0x20000892
10045d78:	20000920 	.word	0x20000920
10045d7c:	200008c8 	.word	0x200008c8
10045d80:	1005850b 	.word	0x1005850b
10045d84:	2000087e 	.word	0x2000087e
10045d88:	1005852d 	.word	0x1005852d
10045d8c:	20000896 	.word	0x20000896
10045d90:	10058456 	.word	0x10058456
10045d94:	10058555 	.word	0x10058555
10045d98:	20000880 	.word	0x20000880
10045d9c:	10058581 	.word	0x10058581
10045da0:	20000860 	.word	0x20000860
10045da4:	1005859a 	.word	0x1005859a
10045da8:	20000888 	.word	0x20000888
10045dac:	100585ac 	.word	0x100585ac
10045db0:	20000926 	.word	0x20000926
10045db4:	2000089e 	.word	0x2000089e
10045db8:	100585d6 	.word	0x100585d6
10045dbc:	2000089a 	.word	0x2000089a
10045dc0:	10058612 	.word	0x10058612
10045dc4:	200008a0 	.word	0x200008a0
10045dc8:	1005863a 	.word	0x1005863a
10045dcc:	20000894 	.word	0x20000894
10045dd0:	2000090c 	.word	0x2000090c
10045dd4:	1005865b 	.word	0x1005865b
10045dd8:	20000864 	.word	0x20000864
10045ddc:	200008f8 	.word	0x200008f8
10045de0:	10058668 	.word	0x10058668
10045de4:	2000085c 	.word	0x2000085c
10045de8:	20000936 	.word	0x20000936
10045dec:	1005868b 	.word	0x1005868b
10045df0:	2000085a 	.word	0x2000085a
10045df4:	20000914 	.word	0x20000914
10045df8:	100586ae 	.word	0x100586ae
10045dfc:	2000088a 	.word	0x2000088a
10045e00:	20000908 	.word	0x20000908
10045e04:	100586cc 	.word	0x100586cc
10045e08:	2000089c 	.word	0x2000089c
10045e0c:	20000941 	.word	0x20000941
10045e10:	100586ed 	.word	0x100586ed
	else if (handle == modeCharHandle + 1) {
10045e14:	4b34      	ldr	r3, [pc, #208]	; (10045ee8 <Write_Request_CB+0x42c>)
10045e16:	881b      	ldrh	r3, [r3, #0]
10045e18:	3301      	adds	r3, #1
10045e1a:	4298      	cmp	r0, r3
10045e1c:	d120      	bne.n	10045e60 <Write_Request_CB+0x3a4>
		cushionMode = att_data[0];
10045e1e:	7813      	ldrb	r3, [r2, #0]
10045e20:	4c32      	ldr	r4, [pc, #200]	; (10045eec <Write_Request_CB+0x430>)
10045e22:	7023      	strb	r3, [r4, #0]
		WriteMode_IntFlash(cushionMode);
10045e24:	7820      	ldrb	r0, [r4, #0]
10045e26:	b2c0      	uxtb	r0, r0
10045e28:	f001 f98a 	bl	10047140 <WriteMode_IntFlash>
		SEGGER_RTT_printf(0, "Mode set: %d\n", cushionMode);
10045e2c:	7822      	ldrb	r2, [r4, #0]
10045e2e:	4930      	ldr	r1, [pc, #192]	; (10045ef0 <Write_Request_CB+0x434>)
10045e30:	b2d2      	uxtb	r2, r2
10045e32:	2000      	movs	r0, #0
10045e34:	f7fe fe9d 	bl	10044b72 <SEGGER_RTT_printf>
		if (cushionMode == 0) { // Autonomous (patient) mode
10045e38:	7823      	ldrb	r3, [r4, #0]
10045e3a:	2b00      	cmp	r3, #0
10045e3c:	d102      	bne.n	10045e44 <Write_Request_CB+0x388>
			DeInitialize();
10045e3e:	f001 fc29 	bl	10047694 <DeInitialize>
10045e42:	e64b      	b.n	10045adc <Write_Request_CB+0x20>
		} else if (cushionMode == 1) { // Non-autonomous (clinician / developer) mode
10045e44:	7824      	ldrb	r4, [r4, #0]
10045e46:	b2e4      	uxtb	r4, r4
10045e48:	2c01      	cmp	r4, #1
10045e4a:	d000      	beq.n	10045e4e <Write_Request_CB+0x392>
10045e4c:	e646      	b.n	10045adc <Write_Request_CB+0x20>
			ReInitialize();
10045e4e:	f001 fd73 	bl	10047938 <ReInitialize>
			LEDs_Set_Blue(TRUE);
10045e52:	0020      	movs	r0, r4
10045e54:	f000 fa7f 	bl	10046356 <LEDs_Set_Blue>
			LEDs_Set_Red(FALSE);
10045e58:	2000      	movs	r0, #0
10045e5a:	f000 fa89 	bl	10046370 <LEDs_Set_Red>
10045e5e:	e63d      	b.n	10045adc <Write_Request_CB+0x20>
	else if (handle == deviceInfoCharHandle+1) {
10045e60:	4b24      	ldr	r3, [pc, #144]	; (10045ef4 <Write_Request_CB+0x438>)
10045e62:	881b      	ldrh	r3, [r3, #0]
10045e64:	3301      	adds	r3, #1
10045e66:	4298      	cmp	r0, r3
10045e68:	d10b      	bne.n	10045e82 <Write_Request_CB+0x3c6>
		WriteDeviceNum_IntFlash(att_data);
10045e6a:	0010      	movs	r0, r2
10045e6c:	f001 f828 	bl	10046ec0 <WriteDeviceNum_IntFlash>
		SEGGER_RTT_printf(0, "Set device ID: %d %d %d\n", att_data[0], att_data[1], att_data[2]);
10045e70:	78a1      	ldrb	r1, [r4, #2]
10045e72:	7863      	ldrb	r3, [r4, #1]
10045e74:	7822      	ldrb	r2, [r4, #0]
10045e76:	2000      	movs	r0, #0
10045e78:	9100      	str	r1, [sp, #0]
10045e7a:	491f      	ldr	r1, [pc, #124]	; (10045ef8 <Write_Request_CB+0x43c>)
10045e7c:	f7fe fe79 	bl	10044b72 <SEGGER_RTT_printf>
10045e80:	e62c      	b.n	10045adc <Write_Request_CB+0x20>
	else if (handle == dateTimeCharHandle+1) {
10045e82:	4b1e      	ldr	r3, [pc, #120]	; (10045efc <Write_Request_CB+0x440>)
10045e84:	881b      	ldrh	r3, [r3, #0]
10045e86:	3301      	adds	r3, #1
10045e88:	4298      	cmp	r0, r3
10045e8a:	d000      	beq.n	10045e8e <Write_Request_CB+0x3d2>
10045e8c:	e626      	b.n	10045adc <Write_Request_CB+0x20>
		year 	= att_data[0]; // Year from 2000
10045e8e:	7813      	ldrb	r3, [r2, #0]
10045e90:	4d1b      	ldr	r5, [pc, #108]	; (10045f00 <Write_Request_CB+0x444>)
		month 	= att_data[1];
10045e92:	4e1c      	ldr	r6, [pc, #112]	; (10045f04 <Write_Request_CB+0x448>)
		year 	= att_data[0]; // Year from 2000
10045e94:	702b      	strb	r3, [r5, #0]
		month 	= att_data[1];
10045e96:	7853      	ldrb	r3, [r2, #1]
		day 	= att_data[2];
10045e98:	4f1b      	ldr	r7, [pc, #108]	; (10045f08 <Write_Request_CB+0x44c>)
		month 	= att_data[1];
10045e9a:	7033      	strb	r3, [r6, #0]
		day 	= att_data[2];
10045e9c:	7893      	ldrb	r3, [r2, #2]
10045e9e:	703b      	strb	r3, [r7, #0]
		hour 	= att_data[3];
10045ea0:	78d3      	ldrb	r3, [r2, #3]
10045ea2:	4a1a      	ldr	r2, [pc, #104]	; (10045f0c <Write_Request_CB+0x450>)
10045ea4:	7013      	strb	r3, [r2, #0]
		minute 	= att_data[4];
10045ea6:	7923      	ldrb	r3, [r4, #4]
		second = 0; // Start it exactly on the minute
10045ea8:	2400      	movs	r4, #0
		minute 	= att_data[4];
10045eaa:	4a19      	ldr	r2, [pc, #100]	; (10045f10 <Write_Request_CB+0x454>)
10045eac:	7013      	strb	r3, [r2, #0]
		second = 0; // Start it exactly on the minute
10045eae:	4b19      	ldr	r3, [pc, #100]	; (10045f14 <Write_Request_CB+0x458>)
10045eb0:	701c      	strb	r4, [r3, #0]
		startTimeTicks = HAL_VTimerGetCurrentTime_sysT32();
10045eb2:	f006 fe75 	bl	1004cba0 <HAL_VTimerGetCurrentTime_sysT32>
10045eb6:	4b18      	ldr	r3, [pc, #96]	; (10045f18 <Write_Request_CB+0x45c>)
10045eb8:	6018      	str	r0, [r3, #0]
		WriteHeader_Memory();
10045eba:	f000 fe6d 	bl	10046b98 <WriteHeader_Memory>
		SEGGER_RTT_printf(0, "Date set: %d/%d/%d %d:%d\n", day, month, year+2000, hour, minute);
10045ebe:	4813      	ldr	r0, [pc, #76]	; (10045f0c <Write_Request_CB+0x450>)
10045ec0:	783a      	ldrb	r2, [r7, #0]
10045ec2:	7833      	ldrb	r3, [r6, #0]
10045ec4:	7829      	ldrb	r1, [r5, #0]
10045ec6:	7800      	ldrb	r0, [r0, #0]
10045ec8:	4d11      	ldr	r5, [pc, #68]	; (10045f10 <Write_Request_CB+0x454>)
10045eca:	b2d2      	uxtb	r2, r2
10045ecc:	782d      	ldrb	r5, [r5, #0]
10045ece:	9001      	str	r0, [sp, #4]
10045ed0:	20fa      	movs	r0, #250	; 0xfa
10045ed2:	00c0      	lsls	r0, r0, #3
10045ed4:	1809      	adds	r1, r1, r0
10045ed6:	9100      	str	r1, [sp, #0]
10045ed8:	b2db      	uxtb	r3, r3
10045eda:	9502      	str	r5, [sp, #8]
10045edc:	490f      	ldr	r1, [pc, #60]	; (10045f1c <Write_Request_CB+0x460>)
10045ede:	0020      	movs	r0, r4
10045ee0:	f7fe fe47 	bl	10044b72 <SEGGER_RTT_printf>
}
10045ee4:	e5fa      	b.n	10045adc <Write_Request_CB+0x20>
10045ee6:	46c0      	nop			; (mov r8, r8)
10045ee8:	2000086c 	.word	0x2000086c
10045eec:	200008f7 	.word	0x200008f7
10045ef0:	10058708 	.word	0x10058708
10045ef4:	20000886 	.word	0x20000886
10045ef8:	10058716 	.word	0x10058716
10045efc:	200008b2 	.word	0x200008b2
10045f00:	20000916 	.word	0x20000916
10045f04:	200008f4 	.word	0x200008f4
10045f08:	20000917 	.word	0x20000917
10045f0c:	20000909 	.word	0x20000909
10045f10:	200008fa 	.word	0x200008fa
10045f14:	200008f6 	.word	0x200008f6
10045f18:	200008f0 	.word	0x200008f0
10045f1c:	1005872f 	.word	0x1005872f

10045f20 <App_SleepMode_Check>:
// Note: SLEEPMODE_CPU_HALT is used for disconnectedMode, between air bag readjustments in autonomous mode,
//  or if Bluetooth connection has not been made while not in autonomous mode
//  SLEEPMODE_NOTIMER is used when battery level is low and device is put in very low power mode
SleepModes App_SleepMode_Check(SleepModes sleepMode)
{
	if (longTermMode) return SLEEPMODE_NOTIMER;
10045f20:	4b05      	ldr	r3, [pc, #20]	; (10045f38 <App_SleepMode_Check+0x18>)
10045f22:	2003      	movs	r0, #3
10045f24:	781b      	ldrb	r3, [r3, #0]
10045f26:	2b00      	cmp	r3, #0
10045f28:	d104      	bne.n	10045f34 <App_SleepMode_Check+0x14>
	if (disconnectedMode) return SLEEPMODE_CPU_HALT;
10045f2a:	4b04      	ldr	r3, [pc, #16]	; (10045f3c <App_SleepMode_Check+0x1c>)
10045f2c:	7818      	ldrb	r0, [r3, #0]
10045f2e:	1e43      	subs	r3, r0, #1
10045f30:	4198      	sbcs	r0, r3
	if (longTermMode) return SLEEPMODE_NOTIMER;
10045f32:	b2c0      	uxtb	r0, r0
	return SLEEPMODE_RUNNING;
}
10045f34:	4770      	bx	lr
10045f36:	46c0      	nop			; (mov r8, r8)
10045f38:	20000940 	.word	0x20000940
10045f3c:	2000090c 	.word	0x2000090c

10045f40 <Batt_ADC_Configuration>:
// Description    : Configures the ADC to read battery voltage
// Input          : None
// Return         : None
//*****************************************************************************
void Batt_ADC_Configuration(void) {
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_ADC, ENABLE);
10045f40:	2080      	movs	r0, #128	; 0x80
void Batt_ADC_Configuration(void) {
10045f42:	b510      	push	{r4, lr}
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_ADC, ENABLE);
10045f44:	2101      	movs	r1, #1
10045f46:	0040      	lsls	r0, r0, #1
10045f48:	f7fe f940 	bl	100441cc <SysCtrl_PeripheralClockCmd>

	/* Configure ADC */
	sensorADC.ADC_OSR = ADC_OSR_200;
10045f4c:	2300      	movs	r3, #0
	sensorADC.ADC_Input = ADC_Input_AdcPin2;
10045f4e:	2401      	movs	r4, #1
	sensorADC.ADC_OSR = ADC_OSR_200;
10045f50:	4807      	ldr	r0, [pc, #28]	; (10045f70 <Batt_ADC_Configuration+0x30>)
10045f52:	7003      	strb	r3, [r0, #0]
	sensorADC.ADC_ConversionMode = ADC_ConversionMode_Single;
10045f54:	7083      	strb	r3, [r0, #2]
	sensorADC.ADC_ReferenceVoltage = ADC_ReferenceVoltage_0V6;
10045f56:	3302      	adds	r3, #2
10045f58:	7103      	strb	r3, [r0, #4]
	sensorADC.ADC_Attenuation = ADC_Attenuation_9dB54;
10045f5a:	70c3      	strb	r3, [r0, #3]
	sensorADC.ADC_Input = ADC_Input_AdcPin2;
10045f5c:	7044      	strb	r4, [r0, #1]

	ADC_Init(&sensorADC);
10045f5e:	f7fd fec1 	bl	10043ce4 <ADC_Init>

	/* Enable auto offset correction */
	ADC_AutoOffsetUpdate(ENABLE);
10045f62:	0020      	movs	r0, r4
10045f64:	f7fd ff39 	bl	10043dda <ADC_AutoOffsetUpdate>
	ADC_Calibration(ENABLE);
10045f68:	0020      	movs	r0, r4
10045f6a:	f7fd ff26 	bl	10043dba <ADC_Calibration>
}
10045f6e:	bd10      	pop	{r4, pc}
10045f70:	20000921 	.word	0x20000921

10045f74 <ADC_Value>:
// Function Name  : ADC_Raw_Value
// Description    : Reads the ADC 8 times and returns an average reading
// Input          : input: Pin to read the voltage value
// Return         : ADC value * 1000
//*****************************************************************************
uint16_t ADC_Value(uint8_t input) {
10045f74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10045f76:	0007      	movs	r7, r0
	uint8_t counter = 0;
	float adc_value = 0;
10045f78:	2600      	movs	r6, #0
	uint8_t counter = 0;
10045f7a:	2400      	movs	r4, #0
	while(counter < 16){
		if (ADC->CONF_b.CHSEL == input){
			if(ADC_GetFlagStatus(ADC_FLAG_EOC)) {
				/* Read converted data */
				 //uint16_t raw_data = ADC_GetRawData();
				 float converted_data = ADC_GetConvertedData(ADC_Input_AdcPin2, ADC_ReferenceVoltage_0V6);
10045f7c:	2501      	movs	r5, #1
		if (ADC->CONF_b.CHSEL == input){
10045f7e:	2381      	movs	r3, #129	; 0x81
10045f80:	05db      	lsls	r3, r3, #23
10045f82:	685b      	ldr	r3, [r3, #4]
10045f84:	071b      	lsls	r3, r3, #28
10045f86:	0f5b      	lsrs	r3, r3, #29
10045f88:	42bb      	cmp	r3, r7
10045f8a:	d10f      	bne.n	10045fac <ADC_Value+0x38>
			if(ADC_GetFlagStatus(ADC_FLAG_EOC)) {
10045f8c:	2004      	movs	r0, #4
10045f8e:	f7fd ff30 	bl	10043df2 <ADC_GetFlagStatus>
10045f92:	2800      	cmp	r0, #0
10045f94:	d00a      	beq.n	10045fac <ADC_Value+0x38>
				 float converted_data = ADC_GetConvertedData(ADC_Input_AdcPin2, ADC_ReferenceVoltage_0V6);
10045f96:	2102      	movs	r1, #2
10045f98:	0028      	movs	r0, r5
10045f9a:	f7fd ff3c 	bl	10043e16 <ADC_GetConvertedData>
10045f9e:	1c01      	adds	r1, r0, #0
				 //SEGGER_RTT_printf(0,"Raw value: 0x%x\n", raw_data);

				 adc_value += converted_data;
10045fa0:	1c30      	adds	r0, r6, #0
10045fa2:	f7fa fb43 	bl	1004062c <__aeabi_fadd>
				 counter++;
10045fa6:	3401      	adds	r4, #1
				 adc_value += converted_data;
10045fa8:	1c06      	adds	r6, r0, #0
				 counter++;
10045faa:	b2e4      	uxtb	r4, r4
			}
		}
		sensorADC.ADC_Input = input;
10045fac:	4b10      	ldr	r3, [pc, #64]	; (10045ff0 <ADC_Value+0x7c>)
		/* Enable auto offset correction */
		ADC_AutoOffsetUpdate(ENABLE);
10045fae:	0028      	movs	r0, r5
		sensorADC.ADC_Input = input;
10045fb0:	705f      	strb	r7, [r3, #1]
		ADC_AutoOffsetUpdate(ENABLE);
10045fb2:	f7fd ff12 	bl	10043dda <ADC_AutoOffsetUpdate>
		ADC_Calibration(ENABLE);
10045fb6:	0028      	movs	r0, r5
10045fb8:	f7fd feff 	bl	10043dba <ADC_Calibration>
		ADC_SelectInput(input);
10045fbc:	0038      	movs	r0, r7
10045fbe:	f7fd fef0 	bl	10043da2 <ADC_SelectInput>
		ADC_Cmd(ENABLE);
10045fc2:	0028      	movs	r0, r5
10045fc4:	f7fd fed6 	bl	10043d74 <ADC_Cmd>
	while(counter < 16){
10045fc8:	2c0f      	cmp	r4, #15
10045fca:	d9d8      	bls.n	10045f7e <ADC_Value+0xa>
	}
	adc_value_whole = ((uint16_t)(adc_value*1000))>>4;
10045fcc:	4909      	ldr	r1, [pc, #36]	; (10045ff4 <ADC_Value+0x80>)
10045fce:	1c30      	adds	r0, r6, #0
10045fd0:	f7fa feae 	bl	10040d30 <__aeabi_fmul>
10045fd4:	f7fa faba 	bl	1004054c <__aeabi_f2uiz>
	adc_value_whole *= 3; // Real battery voltage passes through voltage divider
10045fd8:	2403      	movs	r4, #3
	adc_value_whole = ((uint16_t)(adc_value*1000))>>4;
10045fda:	b280      	uxth	r0, r0
10045fdc:	0900      	lsrs	r0, r0, #4
	adc_value_whole *= 3; // Real battery voltage passes through voltage divider
10045fde:	4344      	muls	r4, r0

	SEGGER_RTT_printf(0,"Battery value: %d\n", adc_value_whole);
10045fe0:	4905      	ldr	r1, [pc, #20]	; (10045ff8 <ADC_Value+0x84>)
10045fe2:	0022      	movs	r2, r4
10045fe4:	2000      	movs	r0, #0
10045fe6:	f7fe fdc4 	bl	10044b72 <SEGGER_RTT_printf>
	return adc_value_whole;
}
10045fea:	0020      	movs	r0, r4
10045fec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10045fee:	46c0      	nop			; (mov r8, r8)
10045ff0:	20000921 	.word	0x20000921
10045ff4:	447a0000 	.word	0x447a0000
10045ff8:	10058749 	.word	0x10058749

10045ffc <GPIO_On>:
// Function Name  : GPIO_On
// Description    : Turns on a GPIO
// Input          : myLED: The pin to turn on
// Return         : None
//*****************************************************************************
void GPIO_On(uint32_t myLED) {
10045ffc:	b510      	push	{r4, lr}
	GPIO_WriteBit(myLED, Bit_SET);
10045ffe:	2101      	movs	r1, #1
10046000:	f7fd fff9 	bl	10043ff6 <GPIO_WriteBit>
}
10046004:	bd10      	pop	{r4, pc}

10046006 <GPIO_Off>:
// Function Name  : GPIO_Off
// Description    : Turns off a GPIO
// Input          : myLED: The pin to turn off
// Return         : None
//*****************************************************************************
void GPIO_Off(uint32_t myLED) {
10046006:	b510      	push	{r4, lr}
	GPIO_WriteBit(myLED, Bit_RESET);
10046008:	2100      	movs	r1, #0
1004600a:	f7fd fff4 	bl	10043ff6 <GPIO_WriteBit>
}
1004600e:	bd10      	pop	{r4, pc}

10046010 <InitGPIO>:
void InitGPIO(uint32_t myLED) {
10046010:	b513      	push	{r0, r1, r4, lr}
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_GPIO, ENABLE);
10046012:	2101      	movs	r1, #1
void InitGPIO(uint32_t myLED) {
10046014:	0004      	movs	r4, r0
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_GPIO, ENABLE);
10046016:	0008      	movs	r0, r1
10046018:	f7fe f8d8 	bl	100441cc <SysCtrl_PeripheralClockCmd>
	GPIO_InitStructure.GPIO_Mode = GPIO_Output;
1004601c:	466a      	mov	r2, sp
1004601e:	2306      	movs	r3, #6
	GPIO_Init(&GPIO_InitStructure);
10046020:	4668      	mov	r0, sp
	GPIO_InitStructure.GPIO_Mode = GPIO_Output;
10046022:	7113      	strb	r3, [r2, #4]
	GPIO_InitStructure.GPIO_Pull = ENABLE;
10046024:	3b05      	subs	r3, #5
10046026:	7193      	strb	r3, [r2, #6]
	GPIO_InitStructure.GPIO_HighPwr = ENABLE;
10046028:	7153      	strb	r3, [r2, #5]
	GPIO_InitStructure.GPIO_Pin = myLED;
1004602a:	9400      	str	r4, [sp, #0]
	GPIO_Init(&GPIO_InitStructure);
1004602c:	f7fd ff5e 	bl	10043eec <GPIO_Init>
	GPIO_Off(myLED);
10046030:	0020      	movs	r0, r4
10046032:	f7ff ffe8 	bl	10046006 <GPIO_Off>
}
10046036:	bd13      	pop	{r0, r1, r4, pc}

10046038 <SPI_Master_Configuration>:
// Function Name  : SPI_Master_Configuration
// Description    : Configures the SPI bus for master communication
// Input          : None
// Return         : None
//*****************************************************************************
void SPI_Master_Configuration(void) {
10046038:	b5f0      	push	{r4, r5, r6, r7, lr}
1004603a:	b085      	sub	sp, #20
	SPI_InitType SPI_InitStructure;
	GPIO_InitType GPIO_InitStructure;

	/* Enable SPI and GPIO clocks */
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_GPIO | CLOCK_PERIPH_SPI, ENABLE);
1004603c:	2101      	movs	r1, #1

	/* Configure SPI pins */
	GPIO_StructInit(&GPIO_InitStructure);
1004603e:	ac02      	add	r4, sp, #8
	SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_GPIO | CLOCK_PERIPH_SPI, ENABLE);
10046040:	2011      	movs	r0, #17
10046042:	f7fe f8c3 	bl	100441cc <SysCtrl_PeripheralClockCmd>
	GPIO_StructInit(&GPIO_InitStructure);
10046046:	0020      	movs	r0, r4
10046048:	f7fd ffbf 	bl	10043fca <GPIO_StructInit>
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
1004604c:	2304      	movs	r3, #4
1004604e:	9302      	str	r3, [sp, #8]
	GPIO_InitStructure.GPIO_Mode = SDK_EVAL_SPI_PERIPH_OUT_MODE;
10046050:	f7fe faa2 	bl	10044598 <SdkEvalGetVersion>
	GPIO_InitStructure.GPIO_Pull = ENABLE;
10046054:	2501      	movs	r5, #1
	GPIO_InitStructure.GPIO_HighPwr = DISABLE;
10046056:	2600      	movs	r6, #0
	GPIO_InitStructure.GPIO_Mode = SDK_EVAL_SPI_PERIPH_OUT_MODE;
10046058:	4b2a      	ldr	r3, [pc, #168]	; (10046104 <SPI_Master_Configuration+0xcc>)
1004605a:	3801      	subs	r0, #1
1004605c:	0080      	lsls	r0, r0, #2
1004605e:	58c3      	ldr	r3, [r0, r3]
	GPIO_Init(&GPIO_InitStructure);
10046060:	0020      	movs	r0, r4
	GPIO_InitStructure.GPIO_Mode = SDK_EVAL_SPI_PERIPH_OUT_MODE;
10046062:	7123      	strb	r3, [r4, #4]
	GPIO_InitStructure.GPIO_Pull = ENABLE;
10046064:	71a5      	strb	r5, [r4, #6]
	GPIO_InitStructure.GPIO_HighPwr = DISABLE;
10046066:	7166      	strb	r6, [r4, #5]
	GPIO_Init(&GPIO_InitStructure);
10046068:	f7fd ff40 	bl	10043eec <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
1004606c:	2308      	movs	r3, #8
1004606e:	9302      	str	r3, [sp, #8]
	GPIO_InitStructure.GPIO_Mode = SDK_EVAL_SPI_PERIPH_IN_MODE;
10046070:	f7fe fa92 	bl	10044598 <SdkEvalGetVersion>
10046074:	4b24      	ldr	r3, [pc, #144]	; (10046108 <SPI_Master_Configuration+0xd0>)
10046076:	3801      	subs	r0, #1
10046078:	0080      	lsls	r0, r0, #2
1004607a:	58c3      	ldr	r3, [r0, r3]
	GPIO_Init(&GPIO_InitStructure);
1004607c:	0020      	movs	r0, r4
	GPIO_InitStructure.GPIO_Mode = SDK_EVAL_SPI_PERIPH_IN_MODE;
1004607e:	7123      	strb	r3, [r4, #4]
	GPIO_Init(&GPIO_InitStructure);
10046080:	f7fd ff34 	bl	10043eec <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
10046084:	9502      	str	r5, [sp, #8]
	GPIO_InitStructure.GPIO_Mode = SDK_EVAL_SPI_PERIPH_SCLK_MODE;
10046086:	f7fe fa87 	bl	10044598 <SdkEvalGetVersion>
1004608a:	4b20      	ldr	r3, [pc, #128]	; (1004610c <SPI_Master_Configuration+0xd4>)
1004608c:	3801      	subs	r0, #1
1004608e:	0080      	lsls	r0, r0, #2
10046090:	58c3      	ldr	r3, [r0, r3]
	GPIO_Init(&GPIO_InitStructure);
10046092:	0020      	movs	r0, r4
	GPIO_InitStructure.GPIO_Mode = SDK_EVAL_SPI_PERIPH_SCLK_MODE;
10046094:	7123      	strb	r3, [r4, #4]

	GPIO_InitStructure.GPIO_Pin = SPI_CS_Memory;
10046096:	2702      	movs	r7, #2
	GPIO_Init(&GPIO_InitStructure);
10046098:	f7fd ff28 	bl	10043eec <GPIO_Init>
	GPIO_InitStructure.GPIO_Mode = GPIO_Output;
1004609c:	2306      	movs	r3, #6
	GPIO_InitStructure.GPIO_HighPwr = ENABLE;
	GPIO_Init(&GPIO_InitStructure);
1004609e:	0020      	movs	r0, r4
	GPIO_InitStructure.GPIO_Mode = GPIO_Output;
100460a0:	7123      	strb	r3, [r4, #4]
	GPIO_InitStructure.GPIO_Pin = SPI_CS_Memory;
100460a2:	9702      	str	r7, [sp, #8]
	GPIO_InitStructure.GPIO_HighPwr = ENABLE;
100460a4:	7165      	strb	r5, [r4, #5]
	GPIO_Init(&GPIO_InitStructure);
100460a6:	f7fd ff21 	bl	10043eec <GPIO_Init>
	GPIO_SetBits(SPI_CS_Memory);
100460aa:	0038      	movs	r0, r7

	GPIO_InitStructure.GPIO_Pin = SPI_CS_ADC;
100460ac:	2780      	movs	r7, #128	; 0x80
	GPIO_SetBits(SPI_CS_Memory);
100460ae:	f7fd ff9a 	bl	10043fe6 <GPIO_SetBits>
	GPIO_InitStructure.GPIO_Mode = GPIO_Output;
100460b2:	2306      	movs	r3, #6
	GPIO_InitStructure.GPIO_Pin = SPI_CS_ADC;
100460b4:	02bf      	lsls	r7, r7, #10
	GPIO_InitStructure.GPIO_HighPwr = ENABLE;
	GPIO_Init(&GPIO_InitStructure);
100460b6:	0020      	movs	r0, r4
	GPIO_InitStructure.GPIO_Mode = GPIO_Output;
100460b8:	7123      	strb	r3, [r4, #4]
	GPIO_InitStructure.GPIO_Pin = SPI_CS_ADC;
100460ba:	9702      	str	r7, [sp, #8]
	GPIO_InitStructure.GPIO_HighPwr = ENABLE;
100460bc:	7165      	strb	r5, [r4, #5]
	GPIO_Init(&GPIO_InitStructure);
100460be:	f7fd ff15 	bl	10043eec <GPIO_Init>
	GPIO_SetBits(SPI_CS_ADC);
100460c2:	0038      	movs	r0, r7
100460c4:	f7fd ff8f 	bl	10043fe6 <GPIO_SetBits>

	/* Configure SPI in master mode */
	SPI_StructInit(&SPI_InitStructure);
100460c8:	4668      	mov	r0, sp
100460ca:	f7fe f809 	bl	100440e0 <SPI_StructInit>
	SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
100460ce:	466b      	mov	r3, sp
	SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b ;
100460d0:	466a      	mov	r2, sp
	SPI_InitStructure.SPI_Mode = SPI_Mode_Master;
100460d2:	701e      	strb	r6, [r3, #0]
	SPI_InitStructure.SPI_DataSize = SPI_DataSize_8b ;
100460d4:	2307      	movs	r3, #7
100460d6:	7053      	strb	r3, [r2, #1]
	SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
	SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
	SPI_InitStructure.SPI_BaudRate = SPI_BAUDRATE;
100460d8:	4b0d      	ldr	r3, [pc, #52]	; (10046110 <SPI_Master_Configuration+0xd8>)
	SPI_Init(&SPI_InitStructure);
100460da:	4668      	mov	r0, sp
	SPI_InitStructure.SPI_CPOL = SPI_CPOL_Low;
100460dc:	7096      	strb	r6, [r2, #2]
	SPI_InitStructure.SPI_CPHA = SPI_CPHA_1Edge;
100460de:	70d6      	strb	r6, [r2, #3]
	SPI_InitStructure.SPI_BaudRate = SPI_BAUDRATE;
100460e0:	9301      	str	r3, [sp, #4]
	SPI_Init(&SPI_InitStructure);
100460e2:	f7fd ffd3 	bl	1004408c <SPI_Init>

	/* Clear RX and TX FIFO */
	SPI_ClearTXFIFO();
100460e6:	f7fe f845 	bl	10044174 <SPI_ClearTXFIFO>
	SPI_ClearRXFIFO();
100460ea:	f7fe f837 	bl	1004415c <SPI_ClearRXFIFO>

	/* Set null character */
	SPI_SetDummyCharacter(0xFF);
100460ee:	20ff      	movs	r0, #255	; 0xff
100460f0:	f7fe f866 	bl	100441c0 <SPI_SetDummyCharacter>

	/* Set communication mode */
	SPI_SetMasterCommunicationMode(SPI_FULL_DUPLEX_MODE);
100460f4:	0030      	movs	r0, r6
100460f6:	f7fe f855 	bl	100441a4 <SPI_SetMasterCommunicationMode>

	/* Enable SPI functionality */
	SPI_Cmd(ENABLE);
100460fa:	0028      	movs	r0, r5
100460fc:	f7fd fffc 	bl	100440f8 <SPI_Cmd>
}
10046100:	b005      	add	sp, #20
10046102:	bdf0      	pop	{r4, r5, r6, r7, pc}
10046104:	100583e8 	.word	0x100583e8
10046108:	100583e4 	.word	0x100583e4
1004610c:	100583ec 	.word	0x100583ec
10046110:	000f4240 	.word	0x000f4240

10046114 <SPI_Read_ADC_Value>:
// Function Name  : SPI_Read_ADC_Value
// Description    : Read from the SPI enabled ADC value
// Input          : None
// Return         : data
//*****************************************************************************
uint16_t SPI_Read_ADC_Value() {
10046114:	b510      	push	{r4, lr}

	SPI_DataSizeConfig(SPI_DataSize_12b); // ADC output is 12 bits
10046116:	200b      	movs	r0, #11
10046118:	f7fe f808 	bl	1004412c <SPI_DataSizeConfig>

	SPI_SendData(0x00);
1004611c:	2000      	movs	r0, #0
1004611e:	f7fd fff9 	bl	10044114 <SPI_SendData>

	GPIO_ResetBits(SPI_CS_ADC);
10046122:	2080      	movs	r0, #128	; 0x80
10046124:	0280      	lsls	r0, r0, #10
10046126:	f7fd ff62 	bl	10043fee <GPIO_ResetBits>

	while(RESET == SPI_GetFlagStatus(SPI_FLAG_RNE));
1004612a:	2004      	movs	r0, #4
1004612c:	f7fe f80c 	bl	10044148 <SPI_GetFlagStatus>
10046130:	2800      	cmp	r0, #0
10046132:	d0fa      	beq.n	1004612a <SPI_Read_ADC_Value+0x16>

	uint16_t data = SPI_ReceiveData();
10046134:	f7fd fff4 	bl	10044120 <SPI_ReceiveData>
10046138:	b284      	uxth	r4, r0

	while (SET == SPI_GetFlagStatus(SPI_FLAG_BSY));
1004613a:	2010      	movs	r0, #16
1004613c:	f7fe f804 	bl	10044148 <SPI_GetFlagStatus>
10046140:	2801      	cmp	r0, #1
10046142:	d0fa      	beq.n	1004613a <SPI_Read_ADC_Value+0x26>

	GPIO_SetBits(SPI_CS_ADC);
10046144:	2080      	movs	r0, #128	; 0x80
10046146:	0280      	lsls	r0, r0, #10
10046148:	f7fd ff4d 	bl	10043fe6 <GPIO_SetBits>

	SPI_DataSizeConfig(SPI_DataSize_8b); // Return data size to 8 bits
1004614c:	2007      	movs	r0, #7
1004614e:	f7fd ffed 	bl	1004412c <SPI_DataSizeConfig>

	return data;
}
10046152:	0020      	movs	r0, r4
10046154:	bd10      	pop	{r4, pc}

10046156 <SPI_SendByte>:
// Function Name  : SPI_SendByte
// Description    : Sends a single byte on the SPI bus
// Input          : byte: the information to be sent
// Return         : None
//*****************************************************************************
void SPI_SendByte(uint8_t byte) {
10046156:	b510      	push	{r4, lr}
10046158:	0004      	movs	r4, r0
	while(RESET == SPI_GetFlagStatus(SPI_FLAG_TFE));
1004615a:	2001      	movs	r0, #1
1004615c:	f7fd fff4 	bl	10044148 <SPI_GetFlagStatus>
10046160:	2800      	cmp	r0, #0
10046162:	d0fa      	beq.n	1004615a <SPI_SendByte+0x4>
	SPI_SendData(byte);
10046164:	0020      	movs	r0, r4
10046166:	f7fd ffd5 	bl	10044114 <SPI_SendData>
	while(RESET == SPI_GetFlagStatus(SPI_FLAG_RNE));
1004616a:	2004      	movs	r0, #4
1004616c:	f7fd ffec 	bl	10044148 <SPI_GetFlagStatus>
10046170:	2800      	cmp	r0, #0
10046172:	d0fa      	beq.n	1004616a <SPI_SendByte+0x14>
	SPI_ReceiveData();
10046174:	f7fd ffd4 	bl	10044120 <SPI_ReceiveData>
	while (SET == SPI_GetFlagStatus(SPI_FLAG_BSY));
10046178:	2010      	movs	r0, #16
1004617a:	f7fd ffe5 	bl	10044148 <SPI_GetFlagStatus>
1004617e:	2801      	cmp	r0, #1
10046180:	d0fa      	beq.n	10046178 <SPI_SendByte+0x22>
}
10046182:	bd10      	pop	{r4, pc}

10046184 <SPI_Read_Memory>:
uint8_t SPI_Read_Memory(uint32_t address) {
10046184:	b510      	push	{r4, lr}
10046186:	0004      	movs	r4, r0
	GPIO_ResetBits(SPI_CS_Memory);
10046188:	2002      	movs	r0, #2
1004618a:	f7fd ff30 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0x03);
1004618e:	2003      	movs	r0, #3
10046190:	f7ff ffe1 	bl	10046156 <SPI_SendByte>
	SPI_SendByte((uint8_t) (address >> 16));
10046194:	0c20      	lsrs	r0, r4, #16
10046196:	b2c0      	uxtb	r0, r0
10046198:	f7ff ffdd 	bl	10046156 <SPI_SendByte>
	SPI_SendByte((uint8_t) (address >> 8));
1004619c:	0a20      	lsrs	r0, r4, #8
1004619e:	b2c0      	uxtb	r0, r0
100461a0:	f7ff ffd9 	bl	10046156 <SPI_SendByte>
	SPI_SendByte((uint8_t) (address >> 0));
100461a4:	b2e0      	uxtb	r0, r4
100461a6:	f7ff ffd6 	bl	10046156 <SPI_SendByte>
	SPI_SendData(0x00);
100461aa:	2000      	movs	r0, #0
100461ac:	f7fd ffb2 	bl	10044114 <SPI_SendData>
	while(RESET == SPI_GetFlagStatus(SPI_FLAG_RNE));
100461b0:	2004      	movs	r0, #4
100461b2:	f7fd ffc9 	bl	10044148 <SPI_GetFlagStatus>
100461b6:	2800      	cmp	r0, #0
100461b8:	d0fa      	beq.n	100461b0 <SPI_Read_Memory+0x2c>
	uint8_t data = SPI_ReceiveData();
100461ba:	f7fd ffb1 	bl	10044120 <SPI_ReceiveData>
100461be:	b2c4      	uxtb	r4, r0
	while (SET == SPI_GetFlagStatus(SPI_FLAG_BSY));
100461c0:	2010      	movs	r0, #16
100461c2:	f7fd ffc1 	bl	10044148 <SPI_GetFlagStatus>
100461c6:	2801      	cmp	r0, #1
100461c8:	d0fa      	beq.n	100461c0 <SPI_Read_Memory+0x3c>
	GPIO_SetBits(SPI_CS_Memory);
100461ca:	2002      	movs	r0, #2
100461cc:	f7fd ff0b 	bl	10043fe6 <GPIO_SetBits>
}
100461d0:	0020      	movs	r0, r4
100461d2:	bd10      	pop	{r4, pc}

100461d4 <SPI_WriteEnable_Memory>:
void SPI_WriteEnable_Memory() {
100461d4:	b510      	push	{r4, lr}
	GPIO_ResetBits(SPI_CS_Memory);
100461d6:	2002      	movs	r0, #2
100461d8:	f7fd ff09 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0x06); // write enable
100461dc:	2006      	movs	r0, #6
100461de:	f7ff ffba 	bl	10046156 <SPI_SendByte>
	GPIO_SetBits(SPI_CS_Memory);
100461e2:	2002      	movs	r0, #2
100461e4:	f7fd feff 	bl	10043fe6 <GPIO_SetBits>
}
100461e8:	bd10      	pop	{r4, pc}

100461ea <SPI_ReadRegister_Memory>:
uint8_t SPI_ReadRegister_Memory(){
100461ea:	b510      	push	{r4, lr}
	GPIO_ResetBits(SPI_CS_Memory);
100461ec:	2002      	movs	r0, #2
100461ee:	f7fd fefe 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0x05); // Read status register command
100461f2:	2005      	movs	r0, #5
100461f4:	f7ff ffaf 	bl	10046156 <SPI_SendByte>
	SPI_SendData(0x00);
100461f8:	2000      	movs	r0, #0
100461fa:	f7fd ff8b 	bl	10044114 <SPI_SendData>
	while(RESET == SPI_GetFlagStatus(SPI_FLAG_RNE));
100461fe:	2004      	movs	r0, #4
10046200:	f7fd ffa2 	bl	10044148 <SPI_GetFlagStatus>
10046204:	2800      	cmp	r0, #0
10046206:	d0fa      	beq.n	100461fe <SPI_ReadRegister_Memory+0x14>
	uint8_t data = SPI_ReceiveData();
10046208:	f7fd ff8a 	bl	10044120 <SPI_ReceiveData>
1004620c:	b2c4      	uxtb	r4, r0
	while (SET == SPI_GetFlagStatus(SPI_FLAG_BSY));
1004620e:	2010      	movs	r0, #16
10046210:	f7fd ff9a 	bl	10044148 <SPI_GetFlagStatus>
10046214:	2801      	cmp	r0, #1
10046216:	d0fa      	beq.n	1004620e <SPI_ReadRegister_Memory+0x24>
	GPIO_SetBits(SPI_CS_Memory);
10046218:	2002      	movs	r0, #2
1004621a:	f7fd fee4 	bl	10043fe6 <GPIO_SetBits>
}
1004621e:	0020      	movs	r0, r4
10046220:	bd10      	pop	{r4, pc}
	...

10046224 <SPI_Write_Memory>:
void SPI_Write_Memory(uint32_t address, uint8_t byte, BOOL incrementAddress) {
10046224:	b570      	push	{r4, r5, r6, lr}
10046226:	0004      	movs	r4, r0
10046228:	000e      	movs	r6, r1
	GPIO_ResetBits(SPI_CS_Memory);
1004622a:	2002      	movs	r0, #2
void SPI_Write_Memory(uint32_t address, uint8_t byte, BOOL incrementAddress) {
1004622c:	0015      	movs	r5, r2
	GPIO_ResetBits(SPI_CS_Memory);
1004622e:	f7fd fede 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0x02); // write command
10046232:	2002      	movs	r0, #2
10046234:	f7ff ff8f 	bl	10046156 <SPI_SendByte>
	SPI_SendByte((uint8_t) (address >> 16));
10046238:	0c20      	lsrs	r0, r4, #16
1004623a:	b2c0      	uxtb	r0, r0
1004623c:	f7ff ff8b 	bl	10046156 <SPI_SendByte>
	SPI_SendByte((uint8_t) (address >> 8));
10046240:	0a20      	lsrs	r0, r4, #8
10046242:	b2c0      	uxtb	r0, r0
10046244:	f7ff ff87 	bl	10046156 <SPI_SendByte>
	SPI_SendByte((uint8_t) (address >> 0));
10046248:	b2e0      	uxtb	r0, r4
1004624a:	f7ff ff84 	bl	10046156 <SPI_SendByte>
	SPI_SendByte(byte);
1004624e:	0030      	movs	r0, r6
10046250:	f7ff ff81 	bl	10046156 <SPI_SendByte>
	GPIO_SetBits(SPI_CS_Memory);
10046254:	2002      	movs	r0, #2
10046256:	f7fd fec6 	bl	10043fe6 <GPIO_SetBits>
	while(SPI_ReadRegister_Memory() & 0x01); // stall until write in progress bit de-asserts
1004625a:	2401      	movs	r4, #1
1004625c:	f7ff ffc5 	bl	100461ea <SPI_ReadRegister_Memory>
10046260:	4220      	tst	r0, r4
10046262:	d1fb      	bne.n	1004625c <SPI_Write_Memory+0x38>
	if (incrementAddress) currentAddress += 1;
10046264:	2d00      	cmp	r5, #0
10046266:	d003      	beq.n	10046270 <SPI_Write_Memory+0x4c>
10046268:	4a02      	ldr	r2, [pc, #8]	; (10046274 <SPI_Write_Memory+0x50>)
1004626a:	6813      	ldr	r3, [r2, #0]
1004626c:	3301      	adds	r3, #1
1004626e:	6013      	str	r3, [r2, #0]
}
10046270:	bd70      	pop	{r4, r5, r6, pc}
10046272:	46c0      	nop			; (mov r8, r8)
10046274:	200008fc 	.word	0x200008fc

10046278 <SPI_BulkErase_Memory>:
void SPI_BulkErase_Memory(){
10046278:	b510      	push	{r4, lr}
	GPIO_ResetBits(SPI_CS_Memory);
1004627a:	2002      	movs	r0, #2
1004627c:	f7fd feb7 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0xc7); // bulk erase command
10046280:	20c7      	movs	r0, #199	; 0xc7
10046282:	f7ff ff68 	bl	10046156 <SPI_SendByte>
	GPIO_SetBits(SPI_CS_Memory);
10046286:	2002      	movs	r0, #2
10046288:	f7fd fead 	bl	10043fe6 <GPIO_SetBits>
	while(SPI_ReadRegister_Memory() & 0x01); // stall until write in progress bit de-asserts
1004628c:	2401      	movs	r4, #1
1004628e:	f7ff ffac 	bl	100461ea <SPI_ReadRegister_Memory>
10046292:	4020      	ands	r0, r4
10046294:	d1fb      	bne.n	1004628e <SPI_BulkErase_Memory+0x16>
	currentAddress = 0;
10046296:	4b01      	ldr	r3, [pc, #4]	; (1004629c <SPI_BulkErase_Memory+0x24>)
10046298:	6018      	str	r0, [r3, #0]
}
1004629a:	bd10      	pop	{r4, pc}
1004629c:	200008fc 	.word	0x200008fc

100462a0 <SPI_DeepPowerDown_Memory>:
void SPI_DeepPowerDown_Memory(){
100462a0:	b510      	push	{r4, lr}
	GPIO_ResetBits(SPI_CS_Memory);
100462a2:	2002      	movs	r0, #2
100462a4:	f7fd fea3 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0xb9); // deep power down command
100462a8:	20b9      	movs	r0, #185	; 0xb9
100462aa:	f7ff ff54 	bl	10046156 <SPI_SendByte>
	GPIO_SetBits(SPI_CS_Memory);
100462ae:	2002      	movs	r0, #2
100462b0:	f7fd fe99 	bl	10043fe6 <GPIO_SetBits>
}
100462b4:	bd10      	pop	{r4, pc}

100462b6 <SPI_DeepPowerRelease_Memory>:
void SPI_DeepPowerRelease_Memory(){
100462b6:	b510      	push	{r4, lr}
	GPIO_ResetBits(SPI_CS_Memory);
100462b8:	2002      	movs	r0, #2
100462ba:	f7fd fe98 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0xab); // release from deep power down command
100462be:	20ab      	movs	r0, #171	; 0xab
100462c0:	f7ff ff49 	bl	10046156 <SPI_SendByte>
	GPIO_SetBits(SPI_CS_Memory);
100462c4:	2002      	movs	r0, #2
100462c6:	f7fd fe8e 	bl	10043fe6 <GPIO_SetBits>
	Clock_Wait(1); // Wait for release to complete
100462ca:	2001      	movs	r0, #1
100462cc:	f7fc ff2a 	bl	10043124 <Clock_Wait>
}
100462d0:	bd10      	pop	{r4, pc}

100462d2 <SPI_Write_ADC_Register>:
void SPI_Write_ADC_Register(uint8_t address, uint8_t byte) {
100462d2:	b570      	push	{r4, r5, r6, lr}
	GPIO_ResetBits(SPI_CS_ADC);
100462d4:	2480      	movs	r4, #128	; 0x80
void SPI_Write_ADC_Register(uint8_t address, uint8_t byte) {
100462d6:	0006      	movs	r6, r0
100462d8:	000d      	movs	r5, r1
	GPIO_ResetBits(SPI_CS_ADC);
100462da:	02a4      	lsls	r4, r4, #10
100462dc:	0020      	movs	r0, r4
100462de:	f7fd fe86 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0x08); // write command
100462e2:	2008      	movs	r0, #8
100462e4:	f7ff ff37 	bl	10046156 <SPI_SendByte>
	SPI_SendByte(address);
100462e8:	0030      	movs	r0, r6
100462ea:	f7ff ff34 	bl	10046156 <SPI_SendByte>
	SPI_SendByte(byte);
100462ee:	0028      	movs	r0, r5
100462f0:	f7ff ff31 	bl	10046156 <SPI_SendByte>
	GPIO_SetBits(SPI_CS_ADC);
100462f4:	0020      	movs	r0, r4
100462f6:	f7fd fe76 	bl	10043fe6 <GPIO_SetBits>
}
100462fa:	bd70      	pop	{r4, r5, r6, pc}

100462fc <SPI_Read_ADC_Register>:
uint8_t SPI_Read_ADC_Register(uint8_t address) {
100462fc:	b510      	push	{r4, lr}
100462fe:	0004      	movs	r4, r0
	GPIO_ResetBits(SPI_CS_ADC);
10046300:	2080      	movs	r0, #128	; 0x80
10046302:	0280      	lsls	r0, r0, #10
10046304:	f7fd fe73 	bl	10043fee <GPIO_ResetBits>
	SPI_SendByte(0x10); // read command
10046308:	2010      	movs	r0, #16
1004630a:	f7ff ff24 	bl	10046156 <SPI_SendByte>
	SPI_SendByte(address);
1004630e:	0020      	movs	r0, r4
10046310:	f7ff ff21 	bl	10046156 <SPI_SendByte>
	SPI_SendByte(0x00);
10046314:	2000      	movs	r0, #0
10046316:	f7ff ff1e 	bl	10046156 <SPI_SendByte>
	SPI_SendData(0x00);
1004631a:	2000      	movs	r0, #0
1004631c:	f7fd fefa 	bl	10044114 <SPI_SendData>
	GPIO_SetBits(SPI_CS_ADC);
10046320:	2080      	movs	r0, #128	; 0x80
10046322:	0280      	lsls	r0, r0, #10
10046324:	f7fd fe5f 	bl	10043fe6 <GPIO_SetBits>
	GPIO_ResetBits(SPI_CS_ADC);
10046328:	2080      	movs	r0, #128	; 0x80
1004632a:	0280      	lsls	r0, r0, #10
1004632c:	f7fd fe5f 	bl	10043fee <GPIO_ResetBits>
	while(RESET == SPI_GetFlagStatus(SPI_FLAG_RNE));
10046330:	2004      	movs	r0, #4
10046332:	f7fd ff09 	bl	10044148 <SPI_GetFlagStatus>
10046336:	2800      	cmp	r0, #0
10046338:	d0fa      	beq.n	10046330 <SPI_Read_ADC_Register+0x34>
	uint8_t data = SPI_ReceiveData();
1004633a:	f7fd fef1 	bl	10044120 <SPI_ReceiveData>
1004633e:	b2c4      	uxtb	r4, r0
	while (SET == SPI_GetFlagStatus(SPI_FLAG_BSY));
10046340:	2010      	movs	r0, #16
10046342:	f7fd ff01 	bl	10044148 <SPI_GetFlagStatus>
10046346:	2801      	cmp	r0, #1
10046348:	d0fa      	beq.n	10046340 <SPI_Read_ADC_Register+0x44>
	GPIO_SetBits(SPI_CS_ADC);
1004634a:	2080      	movs	r0, #128	; 0x80
1004634c:	0280      	lsls	r0, r0, #10
1004634e:	f7fd fe4a 	bl	10043fe6 <GPIO_SetBits>
}
10046352:	0020      	movs	r0, r4
10046354:	bd10      	pop	{r4, pc}

10046356 <LEDs_Set_Blue>:
// Function Name  : LEDs_Set_Blue
// Description    : Turn blue LED on
// Input          : Bool representing LED on/off
// Return         : None
//*****************************************************************************
void LEDs_Set_Blue(BOOL LED_Blue){
10046356:	b510      	push	{r4, lr}
	if (LED_Blue == TRUE){
10046358:	2801      	cmp	r0, #1
1004635a:	d104      	bne.n	10046366 <LEDs_Set_Blue+0x10>
		GPIO_On(BLUE_LED);
1004635c:	2080      	movs	r0, #128	; 0x80
1004635e:	0480      	lsls	r0, r0, #18
10046360:	f7ff fe4c 	bl	10045ffc <GPIO_On>
	} else {
		GPIO_Off(BLUE_LED);
	}
}
10046364:	bd10      	pop	{r4, pc}
		GPIO_Off(BLUE_LED);
10046366:	2080      	movs	r0, #128	; 0x80
10046368:	0480      	lsls	r0, r0, #18
1004636a:	f7ff fe4c 	bl	10046006 <GPIO_Off>
}
1004636e:	e7f9      	b.n	10046364 <LEDs_Set_Blue+0xe>

10046370 <LEDs_Set_Red>:
// Function Name  : LEDs_Set_Red
// Description    : Turn red LED on
// Input          : Bool representing LED on/off
// Return         : None
//*****************************************************************************
void LEDs_Set_Red(BOOL LED_Red){
10046370:	b510      	push	{r4, lr}
	if (LED_Red == TRUE){
10046372:	2801      	cmp	r0, #1
10046374:	d103      	bne.n	1004637e <LEDs_Set_Red+0xe>
		GPIO_On(RED_LED);
10046376:	300f      	adds	r0, #15
10046378:	f7ff fe40 	bl	10045ffc <GPIO_On>
	} else {
		GPIO_Off(RED_LED);
	}
}
1004637c:	bd10      	pop	{r4, pc}
		GPIO_Off(RED_LED);
1004637e:	2010      	movs	r0, #16
10046380:	f7ff fe41 	bl	10046006 <GPIO_Off>
}
10046384:	e7fa      	b.n	1004637c <LEDs_Set_Red+0xc>

10046386 <LEDs_Flash>:
// Function Name  : LEDs_Flash
// Description    : Toggle blue or red LED's
// Input          : Bool representing which LED to toggle
// Return         : None
//*****************************************************************************
void LEDs_Flash(BOOL LED_Blue, BOOL LED_Red){
10046386:	b510      	push	{r4, lr}

	if (LED_Blue == TRUE && LED_Red == TRUE){
10046388:	2801      	cmp	r0, #1
1004638a:	d118      	bne.n	100463be <LEDs_Flash+0x38>
		GPIO_On(BLUE_LED);
1004638c:	2080      	movs	r0, #128	; 0x80
1004638e:	0480      	lsls	r0, r0, #18
	if (LED_Blue == TRUE && LED_Red == TRUE){
10046390:	2901      	cmp	r1, #1
10046392:	d11e      	bne.n	100463d2 <LEDs_Flash+0x4c>
		GPIO_On(BLUE_LED);
10046394:	f7ff fe32 	bl	10045ffc <GPIO_On>
		GPIO_On(RED_LED);
10046398:	2010      	movs	r0, #16
1004639a:	f7ff fe2f 	bl	10045ffc <GPIO_On>
		Clock_Wait(1000);
1004639e:	20fa      	movs	r0, #250	; 0xfa
100463a0:	0080      	lsls	r0, r0, #2
100463a2:	f7fc febf 	bl	10043124 <Clock_Wait>
		GPIO_Off(BLUE_LED);
100463a6:	2080      	movs	r0, #128	; 0x80
100463a8:	0480      	lsls	r0, r0, #18
100463aa:	f7ff fe2c 	bl	10046006 <GPIO_Off>
		GPIO_Off(RED_LED);
		Clock_Wait(1000);
	} else if (LED_Red == TRUE){
		GPIO_On(RED_LED);
		Clock_Wait(1000);
		GPIO_Off(RED_LED);
100463ae:	2010      	movs	r0, #16
		Clock_Wait(1000);
	} else if (LED_Blue == TRUE){
		GPIO_On(BLUE_LED);
		Clock_Wait(1000);
		GPIO_Off(BLUE_LED);
100463b0:	f7ff fe29 	bl	10046006 <GPIO_Off>
		Clock_Wait(1000);
100463b4:	20fa      	movs	r0, #250	; 0xfa
100463b6:	0080      	lsls	r0, r0, #2
100463b8:	f7fc feb4 	bl	10043124 <Clock_Wait>
	} else {
		GPIO_Off(BLUE_LED);
		GPIO_Off(RED_LED);
	}
}
100463bc:	bd10      	pop	{r4, pc}
	} else if (LED_Red == TRUE){
100463be:	2901      	cmp	r1, #1
100463c0:	d110      	bne.n	100463e4 <LEDs_Flash+0x5e>
		GPIO_On(RED_LED);
100463c2:	2010      	movs	r0, #16
100463c4:	f7ff fe1a 	bl	10045ffc <GPIO_On>
		Clock_Wait(1000);
100463c8:	20fa      	movs	r0, #250	; 0xfa
100463ca:	0080      	lsls	r0, r0, #2
100463cc:	f7fc feaa 	bl	10043124 <Clock_Wait>
100463d0:	e7ed      	b.n	100463ae <LEDs_Flash+0x28>
		GPIO_On(BLUE_LED);
100463d2:	f7ff fe13 	bl	10045ffc <GPIO_On>
		Clock_Wait(1000);
100463d6:	20fa      	movs	r0, #250	; 0xfa
100463d8:	0080      	lsls	r0, r0, #2
100463da:	f7fc fea3 	bl	10043124 <Clock_Wait>
		GPIO_Off(BLUE_LED);
100463de:	2080      	movs	r0, #128	; 0x80
100463e0:	0480      	lsls	r0, r0, #18
100463e2:	e7e5      	b.n	100463b0 <LEDs_Flash+0x2a>
		GPIO_Off(BLUE_LED);
100463e4:	2080      	movs	r0, #128	; 0x80
100463e6:	0480      	lsls	r0, r0, #18
100463e8:	f7ff fe0d 	bl	10046006 <GPIO_Off>
		GPIO_Off(RED_LED);
100463ec:	2010      	movs	r0, #16
100463ee:	f7ff fe0a 	bl	10046006 <GPIO_Off>
}
100463f2:	e7e3      	b.n	100463bc <LEDs_Flash+0x36>

100463f4 <ADC_Reset>:
// Input          : None
// Return         : None
//*****************************************************************************
void ADC_Reset(){

	SPI_Write_ADC_Register(0x1, 0x1); // Set GENERAL_CFG.RST (1st bit) to 1; Reset ADC
100463f4:	2101      	movs	r1, #1
void ADC_Reset(){
100463f6:	b510      	push	{r4, lr}
	SPI_Write_ADC_Register(0x1, 0x1); // Set GENERAL_CFG.RST (1st bit) to 1; Reset ADC
100463f8:	0008      	movs	r0, r1
100463fa:	f7ff ff6a 	bl	100462d2 <SPI_Write_ADC_Register>
    while(!(SPI_Read_ADC_Register(0x0) & 0x01)); // Read SYSTEM_STATUS.BOR (1st bit); Read until brown out reset indicator is set
100463fe:	2401      	movs	r4, #1
10046400:	2000      	movs	r0, #0
10046402:	f7ff ff7b 	bl	100462fc <SPI_Read_ADC_Register>
10046406:	4220      	tst	r0, r4
10046408:	d0fa      	beq.n	10046400 <ADC_Reset+0xc>
    SPI_Write_ADC_Register(0x0, 0x1); // Reset SYSTEM_STATUS.BOR
1004640a:	2101      	movs	r1, #1
1004640c:	2000      	movs	r0, #0
1004640e:	f7ff ff60 	bl	100462d2 <SPI_Write_ADC_Register>
    SPI_Write_ADC_Register(0x1, 0x4); // Set GENERAL_CFG.CH_RST (3rd bit) to 1; Force all channels to analog inputs
10046412:	2104      	movs	r1, #4
10046414:	2001      	movs	r0, #1
10046416:	f7ff ff5c 	bl	100462d2 <SPI_Write_ADC_Register>
    SPI_Write_ADC_Register(0x12, 0xFF); // Set AUTO_SEQ_CH_SEL to FF; Configure all input channels for auto-sequence mode
1004641a:	21ff      	movs	r1, #255	; 0xff
1004641c:	2012      	movs	r0, #18
1004641e:	f7ff ff58 	bl	100462d2 <SPI_Write_ADC_Register>
}
10046422:	bd10      	pop	{r4, pc}

10046424 <Read_ADC>:
// Function Name  : Read_ADC
// Description    : Reads all 8 pressure sensors
// Input          : None
// Return         : None
//*****************************************************************************
void Read_ADC() {
10046424:	b5f0      	push	{r4, r5, r6, r7, lr}
	int offset;

	// Set SEQUENCE_CFG.SEQ_MODE to 1 - auto sequence mode
	// and set SEQUENCE_CFG.SEQ_START to 1 - start channel sequencing in ascending order
	SPI_Write_ADC_Register(0x10, 0b00010001);
10046426:	2111      	movs	r1, #17
void Read_ADC() {
10046428:	b085      	sub	sp, #20
	SPI_Write_ADC_Register(0x10, 0b00010001);
1004642a:	2010      	movs	r0, #16
1004642c:	f7ff ff51 	bl	100462d2 <SPI_Write_ADC_Register>
	uint16_t output = SPI_Read_ADC_Value(); // Need to read it out once first for some reason. Perhaps to clear an internal buffer in ADC?

	// Read 8 times and average result
	for (int i = 0; i < 8;  i++) {
10046430:	2600      	movs	r6, #0
	uint16_t output = SPI_Read_ADC_Value(); // Need to read it out once first for some reason. Perhaps to clear an internal buffer in ADC?
10046432:	f7ff fe6f 	bl	10046114 <SPI_Read_ADC_Value>
void Read_ADC() {
10046436:	2700      	movs	r7, #0
10046438:	4d23      	ldr	r5, [pc, #140]	; (100464c8 <Read_ADC+0xa4>)
1004643a:	007c      	lsls	r4, r7, #1
		// Read 8 ADC channels to get sensor readings
		for (int j = 0; j < 8; j++) {
			if (i == 0) CurrentPressures[j] = 0; // Reset value
1004643c:	2e00      	cmp	r6, #0
1004643e:	d100      	bne.n	10046442 <Read_ADC+0x1e>
10046440:	532e      	strh	r6, [r5, r4]

			output = SPI_Read_ADC_Value();
10046442:	f7ff fe67 	bl	10046114 <SPI_Read_ADC_Value>
10046446:	9000      	str	r0, [sp, #0]
			Clock_Wait(1); // Wait for conversion
10046448:	2001      	movs	r0, #1
1004644a:	f7fc fe6b 	bl	10043124 <Clock_Wait>

			//CurrentPressures[j] += output;
			if (output < 462) output = 462;
			CurrentPressures[j] += (0.080626*output) - 37.191; // Experimentally determined equation to convert ADC value to mmHg
1004644e:	5b2b      	ldrh	r3, [r5, r4]
10046450:	9a00      	ldr	r2, [sp, #0]
10046452:	b29b      	uxth	r3, r3
10046454:	9303      	str	r3, [sp, #12]
10046456:	466b      	mov	r3, sp
10046458:	8818      	ldrh	r0, [r3, #0]
1004645a:	23e7      	movs	r3, #231	; 0xe7
1004645c:	005b      	lsls	r3, r3, #1
1004645e:	429a      	cmp	r2, r3
10046460:	d200      	bcs.n	10046464 <Read_ADC+0x40>
10046462:	1c18      	adds	r0, r3, #0
10046464:	b280      	uxth	r0, r0
10046466:	f7fc fd03 	bl	10042e70 <__aeabi_i2d>
1004646a:	4a18      	ldr	r2, [pc, #96]	; (100464cc <Read_ADC+0xa8>)
1004646c:	4b18      	ldr	r3, [pc, #96]	; (100464d0 <Read_ADC+0xac>)
1004646e:	f7fb ff15 	bl	1004229c <__aeabi_dmul>
10046472:	4a18      	ldr	r2, [pc, #96]	; (100464d4 <Read_ADC+0xb0>)
10046474:	4b18      	ldr	r3, [pc, #96]	; (100464d8 <Read_ADC+0xb4>)
10046476:	f7fc f991 	bl	1004279c <__aeabi_dsub>
1004647a:	9000      	str	r0, [sp, #0]
1004647c:	9101      	str	r1, [sp, #4]
1004647e:	9803      	ldr	r0, [sp, #12]
10046480:	f7fc fcf6 	bl	10042e70 <__aeabi_i2d>
10046484:	0002      	movs	r2, r0
10046486:	000b      	movs	r3, r1
10046488:	9800      	ldr	r0, [sp, #0]
1004648a:	9901      	ldr	r1, [sp, #4]
1004648c:	f7fa ffc2 	bl	10041414 <__aeabi_dadd>
10046490:	f7fa f874 	bl	1004057c <__aeabi_d2uiz>
			//SEGGER_RTT_printf(0, "ADC channel %d, round %d - value: %d\n", j, i, output);

			// Take sensor's offset from equation into account
			offset = 456 - (sensorOffsets[j] + 400);
10046494:	4b11      	ldr	r3, [pc, #68]	; (100464dc <Read_ADC+0xb8>)
			CurrentPressures[j] += (0.080626*output) - 37.191; // Experimentally determined equation to convert ADC value to mmHg
10046496:	b280      	uxth	r0, r0
10046498:	5328      	strh	r0, [r5, r4]
			offset = 456 - (sensorOffsets[j] + 400);
1004649a:	5dda      	ldrb	r2, [r3, r7]
			CurrentPressures[j] += offset;
1004649c:	5b2b      	ldrh	r3, [r5, r4]
			offset = 456 - (sensorOffsets[j] + 400);
1004649e:	1a9b      	subs	r3, r3, r2
			CurrentPressures[j] += offset;
100464a0:	3338      	adds	r3, #56	; 0x38
100464a2:	b29b      	uxth	r3, r3
100464a4:	532b      	strh	r3, [r5, r4]

			if (i == 7) CurrentPressures[j] = CurrentPressures[j] >> 3; // Average value
100464a6:	2e07      	cmp	r6, #7
100464a8:	d102      	bne.n	100464b0 <Read_ADC+0x8c>
100464aa:	5b2b      	ldrh	r3, [r5, r4]
100464ac:	08db      	lsrs	r3, r3, #3
100464ae:	532b      	strh	r3, [r5, r4]
		for (int j = 0; j < 8; j++) {
100464b0:	3701      	adds	r7, #1
100464b2:	2f08      	cmp	r7, #8
100464b4:	d1c0      	bne.n	10046438 <Read_ADC+0x14>
	for (int i = 0; i < 8;  i++) {
100464b6:	3601      	adds	r6, #1
100464b8:	2e08      	cmp	r6, #8
100464ba:	d1bc      	bne.n	10046436 <Read_ADC+0x12>
		}
	}

	SPI_Write_ADC_Register(0x10, 0x00); // Stop channel sequencing
100464bc:	2100      	movs	r1, #0
100464be:	2010      	movs	r0, #16
100464c0:	f7ff ff07 	bl	100462d2 <SPI_Write_ADC_Register>
}
100464c4:	b005      	add	sp, #20
100464c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100464c8:	20000926 	.word	0x20000926
100464cc:	d135115a 	.word	0xd135115a
100464d0:	3fb4a3e7 	.word	0x3fb4a3e7
100464d4:	b020c49c 	.word	0xb020c49c
100464d8:	40429872 	.word	0x40429872
100464dc:	20000918 	.word	0x20000918

100464e0 <Open_Valve_Small>:
// Description    : Opens one of the 8 small valves
// Input          : valve: the one to be open
// Return         : None
//*****************************************************************************
void Open_Valve_Small(uint8_t valve) {
	switch (valve) {
100464e0:	3801      	subs	r0, #1
void Open_Valve_Small(uint8_t valve) {
100464e2:	b510      	push	{r4, lr}
	switch (valve) {
100464e4:	2807      	cmp	r0, #7
100464e6:	d80e      	bhi.n	10046506 <Open_Valve_Small+0x26>
100464e8:	4c1f      	ldr	r4, [pc, #124]	; (10046568 <Open_Valve_Small+0x88>)
100464ea:	f7f9 fe37 	bl	1004015c <__gnu_thumb1_case_uqi>
100464ee:	0d04      	.short	0x0d04
100464f0:	27211b14 	.word	0x27211b14
100464f4:	352e      	.short	0x352e
		case 1: GPIO_On(Valve1); currentState |= 1; break;
100464f6:	2080      	movs	r0, #128	; 0x80
100464f8:	0040      	lsls	r0, r0, #1
100464fa:	f7ff fd7f 	bl	10045ffc <GPIO_On>
100464fe:	2301      	movs	r3, #1
10046500:	7822      	ldrb	r2, [r4, #0]
		case 3: GPIO_On(Valve3); currentState |= 4; break;
		case 4: GPIO_On(Valve4); currentState |= 8; break;
		case 5: GPIO_On(Valve5); currentState |= 16; break;
		case 6: GPIO_On(Valve6); currentState |= 32; break;
		case 7: GPIO_On(Valve7); currentState |= 64; break;
		case 8: GPIO_On(Valve8); currentState |= 128; break;
10046502:	4313      	orrs	r3, r2
10046504:	7023      	strb	r3, [r4, #0]
	}
}
10046506:	bd10      	pop	{r4, pc}
		case 2: GPIO_On(Valve2); currentState |= 2; break;
10046508:	2080      	movs	r0, #128	; 0x80
1004650a:	0100      	lsls	r0, r0, #4
1004650c:	f7ff fd76 	bl	10045ffc <GPIO_On>
10046510:	7822      	ldrb	r2, [r4, #0]
10046512:	2302      	movs	r3, #2
10046514:	e7f5      	b.n	10046502 <Open_Valve_Small+0x22>
		case 3: GPIO_On(Valve3); currentState |= 4; break;
10046516:	2080      	movs	r0, #128	; 0x80
10046518:	0380      	lsls	r0, r0, #14
1004651a:	f7ff fd6f 	bl	10045ffc <GPIO_On>
1004651e:	7822      	ldrb	r2, [r4, #0]
10046520:	2304      	movs	r3, #4
10046522:	e7ee      	b.n	10046502 <Open_Valve_Small+0x22>
		case 4: GPIO_On(Valve4); currentState |= 8; break;
10046524:	2040      	movs	r0, #64	; 0x40
10046526:	f7ff fd69 	bl	10045ffc <GPIO_On>
1004652a:	7822      	ldrb	r2, [r4, #0]
1004652c:	2308      	movs	r3, #8
1004652e:	e7e8      	b.n	10046502 <Open_Valve_Small+0x22>
		case 5: GPIO_On(Valve5); currentState |= 16; break;
10046530:	2020      	movs	r0, #32
10046532:	f7ff fd63 	bl	10045ffc <GPIO_On>
10046536:	7822      	ldrb	r2, [r4, #0]
10046538:	2310      	movs	r3, #16
1004653a:	e7e2      	b.n	10046502 <Open_Valve_Small+0x22>
		case 6: GPIO_On(Valve6); currentState |= 32; break;
1004653c:	2080      	movs	r0, #128	; 0x80
1004653e:	0340      	lsls	r0, r0, #13
10046540:	f7ff fd5c 	bl	10045ffc <GPIO_On>
10046544:	7822      	ldrb	r2, [r4, #0]
10046546:	2320      	movs	r3, #32
10046548:	e7db      	b.n	10046502 <Open_Valve_Small+0x22>
		case 7: GPIO_On(Valve7); currentState |= 64; break;
1004654a:	2080      	movs	r0, #128	; 0x80
1004654c:	0300      	lsls	r0, r0, #12
1004654e:	f7ff fd55 	bl	10045ffc <GPIO_On>
10046552:	7822      	ldrb	r2, [r4, #0]
10046554:	2340      	movs	r3, #64	; 0x40
10046556:	e7d4      	b.n	10046502 <Open_Valve_Small+0x22>
		case 8: GPIO_On(Valve8); currentState |= 128; break;
10046558:	2080      	movs	r0, #128	; 0x80
1004655a:	02c0      	lsls	r0, r0, #11
1004655c:	f7ff fd4e 	bl	10045ffc <GPIO_On>
10046560:	7823      	ldrb	r3, [r4, #0]
10046562:	2280      	movs	r2, #128	; 0x80
10046564:	e7cd      	b.n	10046502 <Open_Valve_Small+0x22>
10046566:	46c0      	nop			; (mov r8, r8)
10046568:	200008ec 	.word	0x200008ec

1004656c <Close_Valve_Small>:
// Description    : Closes one of the 8 small valves
// Input          : valve: the one to be closed
// Return         : None
//*****************************************************************************
void Close_Valve_Small(uint8_t valve) {
	switch (valve) {
1004656c:	3801      	subs	r0, #1
void Close_Valve_Small(uint8_t valve) {
1004656e:	b510      	push	{r4, lr}
	switch (valve) {
10046570:	2807      	cmp	r0, #7
10046572:	d80e      	bhi.n	10046592 <Close_Valve_Small+0x26>
10046574:	4c1f      	ldr	r4, [pc, #124]	; (100465f4 <Close_Valve_Small+0x88>)
10046576:	f7f9 fdf1 	bl	1004015c <__gnu_thumb1_case_uqi>
1004657a:	0d04      	.short	0x0d04
1004657c:	27211b14 	.word	0x27211b14
10046580:	352e      	.short	0x352e
		case 1: GPIO_Off(Valve1); currentState &= (~1); break;
10046582:	2080      	movs	r0, #128	; 0x80
10046584:	0040      	lsls	r0, r0, #1
10046586:	f7ff fd3e 	bl	10046006 <GPIO_Off>
1004658a:	2201      	movs	r2, #1
1004658c:	7823      	ldrb	r3, [r4, #0]
		case 2: GPIO_Off(Valve2); currentState &= (~2); break;
		case 3: GPIO_Off(Valve3); currentState &= (~4); break;
		case 4: GPIO_Off(Valve4); currentState &= (~8); break;
		case 5: GPIO_Off(Valve5); currentState &= (~16); break;
		case 6: GPIO_Off(Valve6); currentState &= (~32); break;
		case 7: GPIO_Off(Valve7); currentState &= (~64); break;
1004658e:	4393      	bics	r3, r2
		case 8: GPIO_Off(Valve8); currentState &= (~128); break;
10046590:	7023      	strb	r3, [r4, #0]
	}
}
10046592:	bd10      	pop	{r4, pc}
		case 2: GPIO_Off(Valve2); currentState &= (~2); break;
10046594:	2080      	movs	r0, #128	; 0x80
10046596:	0100      	lsls	r0, r0, #4
10046598:	f7ff fd35 	bl	10046006 <GPIO_Off>
1004659c:	7823      	ldrb	r3, [r4, #0]
1004659e:	2202      	movs	r2, #2
100465a0:	e7f5      	b.n	1004658e <Close_Valve_Small+0x22>
		case 3: GPIO_Off(Valve3); currentState &= (~4); break;
100465a2:	2080      	movs	r0, #128	; 0x80
100465a4:	0380      	lsls	r0, r0, #14
100465a6:	f7ff fd2e 	bl	10046006 <GPIO_Off>
100465aa:	7823      	ldrb	r3, [r4, #0]
100465ac:	2204      	movs	r2, #4
100465ae:	e7ee      	b.n	1004658e <Close_Valve_Small+0x22>
		case 4: GPIO_Off(Valve4); currentState &= (~8); break;
100465b0:	2040      	movs	r0, #64	; 0x40
100465b2:	f7ff fd28 	bl	10046006 <GPIO_Off>
100465b6:	7823      	ldrb	r3, [r4, #0]
100465b8:	2208      	movs	r2, #8
100465ba:	e7e8      	b.n	1004658e <Close_Valve_Small+0x22>
		case 5: GPIO_Off(Valve5); currentState &= (~16); break;
100465bc:	2020      	movs	r0, #32
100465be:	f7ff fd22 	bl	10046006 <GPIO_Off>
100465c2:	7823      	ldrb	r3, [r4, #0]
100465c4:	2210      	movs	r2, #16
100465c6:	e7e2      	b.n	1004658e <Close_Valve_Small+0x22>
		case 6: GPIO_Off(Valve6); currentState &= (~32); break;
100465c8:	2080      	movs	r0, #128	; 0x80
100465ca:	0340      	lsls	r0, r0, #13
100465cc:	f7ff fd1b 	bl	10046006 <GPIO_Off>
100465d0:	7823      	ldrb	r3, [r4, #0]
100465d2:	2220      	movs	r2, #32
100465d4:	e7db      	b.n	1004658e <Close_Valve_Small+0x22>
		case 7: GPIO_Off(Valve7); currentState &= (~64); break;
100465d6:	2080      	movs	r0, #128	; 0x80
100465d8:	0300      	lsls	r0, r0, #12
100465da:	f7ff fd14 	bl	10046006 <GPIO_Off>
100465de:	7823      	ldrb	r3, [r4, #0]
100465e0:	2240      	movs	r2, #64	; 0x40
100465e2:	e7d4      	b.n	1004658e <Close_Valve_Small+0x22>
		case 8: GPIO_Off(Valve8); currentState &= (~128); break;
100465e4:	2080      	movs	r0, #128	; 0x80
100465e6:	02c0      	lsls	r0, r0, #11
100465e8:	f7ff fd0d 	bl	10046006 <GPIO_Off>
100465ec:	227f      	movs	r2, #127	; 0x7f
100465ee:	7823      	ldrb	r3, [r4, #0]
100465f0:	4013      	ands	r3, r2
100465f2:	e7cd      	b.n	10046590 <Close_Valve_Small+0x24>
100465f4:	200008ec 	.word	0x200008ec

100465f8 <Adjust_Valve_State>:
// Function Name  : Adjust_Valve_State
// Description    : Change the small valve states based on the toggled bits passed in
// Input          : state: byte, with each bit representing state of valve
// Return         : None
//*****************************************************************************
void Adjust_Valve_State(uint8_t state){
100465f8:	b510      	push	{r4, lr}
100465fa:	0004      	movs	r4, r0
	if (state & 1) GPIO_On(Valve1); else GPIO_Off(Valve1);
100465fc:	2080      	movs	r0, #128	; 0x80
100465fe:	0040      	lsls	r0, r0, #1
10046600:	07e3      	lsls	r3, r4, #31
10046602:	d52b      	bpl.n	1004665c <Adjust_Valve_State+0x64>
10046604:	f7ff fcfa 	bl	10045ffc <GPIO_On>
	if (state & 2) GPIO_On(Valve2); else GPIO_Off(Valve2);
10046608:	2080      	movs	r0, #128	; 0x80
1004660a:	0100      	lsls	r0, r0, #4
1004660c:	07a3      	lsls	r3, r4, #30
1004660e:	d528      	bpl.n	10046662 <Adjust_Valve_State+0x6a>
10046610:	f7ff fcf4 	bl	10045ffc <GPIO_On>
	if (state & 4) GPIO_On(Valve3); else GPIO_Off(Valve3);
10046614:	2080      	movs	r0, #128	; 0x80
10046616:	0380      	lsls	r0, r0, #14
10046618:	0763      	lsls	r3, r4, #29
1004661a:	d525      	bpl.n	10046668 <Adjust_Valve_State+0x70>
1004661c:	f7ff fcee 	bl	10045ffc <GPIO_On>
	if (state & 8) GPIO_On(Valve4); else GPIO_Off(Valve4);
10046620:	2040      	movs	r0, #64	; 0x40
10046622:	0723      	lsls	r3, r4, #28
10046624:	d523      	bpl.n	1004666e <Adjust_Valve_State+0x76>
10046626:	f7ff fce9 	bl	10045ffc <GPIO_On>
	if (state & 16) GPIO_On(Valve5); else GPIO_Off(Valve5);
1004662a:	2020      	movs	r0, #32
1004662c:	06e3      	lsls	r3, r4, #27
1004662e:	d521      	bpl.n	10046674 <Adjust_Valve_State+0x7c>
10046630:	f7ff fce4 	bl	10045ffc <GPIO_On>
	if (state & 32) GPIO_On(Valve6); else GPIO_Off(Valve6);
10046634:	2080      	movs	r0, #128	; 0x80
10046636:	0340      	lsls	r0, r0, #13
10046638:	06a3      	lsls	r3, r4, #26
1004663a:	d51e      	bpl.n	1004667a <Adjust_Valve_State+0x82>
1004663c:	f7ff fcde 	bl	10045ffc <GPIO_On>
	if (state & 64) GPIO_On(Valve7); else GPIO_Off(Valve7);
10046640:	2080      	movs	r0, #128	; 0x80
10046642:	0300      	lsls	r0, r0, #12
10046644:	0663      	lsls	r3, r4, #25
10046646:	d51b      	bpl.n	10046680 <Adjust_Valve_State+0x88>
10046648:	f7ff fcd8 	bl	10045ffc <GPIO_On>
	if (state & 128) GPIO_On(Valve8); else GPIO_Off(Valve8);
1004664c:	2080      	movs	r0, #128	; 0x80
1004664e:	b264      	sxtb	r4, r4
10046650:	02c0      	lsls	r0, r0, #11
10046652:	2c00      	cmp	r4, #0
10046654:	da17      	bge.n	10046686 <Adjust_Valve_State+0x8e>
10046656:	f7ff fcd1 	bl	10045ffc <GPIO_On>
}
1004665a:	bd10      	pop	{r4, pc}
	if (state & 1) GPIO_On(Valve1); else GPIO_Off(Valve1);
1004665c:	f7ff fcd3 	bl	10046006 <GPIO_Off>
10046660:	e7d2      	b.n	10046608 <Adjust_Valve_State+0x10>
	if (state & 2) GPIO_On(Valve2); else GPIO_Off(Valve2);
10046662:	f7ff fcd0 	bl	10046006 <GPIO_Off>
10046666:	e7d5      	b.n	10046614 <Adjust_Valve_State+0x1c>
	if (state & 4) GPIO_On(Valve3); else GPIO_Off(Valve3);
10046668:	f7ff fccd 	bl	10046006 <GPIO_Off>
1004666c:	e7d8      	b.n	10046620 <Adjust_Valve_State+0x28>
	if (state & 8) GPIO_On(Valve4); else GPIO_Off(Valve4);
1004666e:	f7ff fcca 	bl	10046006 <GPIO_Off>
10046672:	e7da      	b.n	1004662a <Adjust_Valve_State+0x32>
	if (state & 16) GPIO_On(Valve5); else GPIO_Off(Valve5);
10046674:	f7ff fcc7 	bl	10046006 <GPIO_Off>
10046678:	e7dc      	b.n	10046634 <Adjust_Valve_State+0x3c>
	if (state & 32) GPIO_On(Valve6); else GPIO_Off(Valve6);
1004667a:	f7ff fcc4 	bl	10046006 <GPIO_Off>
1004667e:	e7df      	b.n	10046640 <Adjust_Valve_State+0x48>
	if (state & 64) GPIO_On(Valve7); else GPIO_Off(Valve7);
10046680:	f7ff fcc1 	bl	10046006 <GPIO_Off>
10046684:	e7e2      	b.n	1004664c <Adjust_Valve_State+0x54>
	if (state & 128) GPIO_On(Valve8); else GPIO_Off(Valve8);
10046686:	f7ff fcbe 	bl	10046006 <GPIO_Off>
}
1004668a:	e7e6      	b.n	1004665a <Adjust_Valve_State+0x62>

1004668c <Open_Valve_Large>:
// Description    : Opens the large valve controlling air to smaller valves
// Input          : None
// Return         : None
//*****************************************************************************
void Open_Valve_Large() {
	GPIO_On(ValveControl);
1004668c:	2080      	movs	r0, #128	; 0x80
void Open_Valve_Large() {
1004668e:	b510      	push	{r4, lr}
	GPIO_On(ValveControl);
10046690:	03c0      	lsls	r0, r0, #15
10046692:	f7ff fcb3 	bl	10045ffc <GPIO_On>
}
10046696:	bd10      	pop	{r4, pc}

10046698 <Close_Valve_Large>:
// Description    : Closes the large valve controlling air to smaller valves
// Input          : None
// Return         : None
//*****************************************************************************
void Close_Valve_Large() {
	GPIO_Off(ValveControl);
10046698:	2080      	movs	r0, #128	; 0x80
void Close_Valve_Large() {
1004669a:	b510      	push	{r4, lr}
	GPIO_Off(ValveControl);
1004669c:	03c0      	lsls	r0, r0, #15
1004669e:	f7ff fcb2 	bl	10046006 <GPIO_Off>
}
100466a2:	bd10      	pop	{r4, pc}

100466a4 <Open_Valve_Small_Final>:
// Function Name  : Open_Valve_Small_Final
// Description    : Opens the small valve controlling air to outside
// Input          : None
// Return         : None
//*****************************************************************************
void Open_Valve_Small_Final(){
100466a4:	b510      	push	{r4, lr}
	GPIO_On(ValveFinal);
100466a6:	2080      	movs	r0, #128	; 0x80
100466a8:	f7ff fca8 	bl	10045ffc <GPIO_On>
}
100466ac:	bd10      	pop	{r4, pc}

100466ae <Close_Valve_Small_Final>:
// Function Name  : Close_Valve_Small_Final
// Description    : Closes the small valve controlling air to outside
// Input          : None
// Return         : None
//*****************************************************************************
void Close_Valve_Small_Final() {
100466ae:	b510      	push	{r4, lr}
	GPIO_Off(ValveFinal);
100466b0:	2080      	movs	r0, #128	; 0x80
100466b2:	f7ff fca8 	bl	10046006 <GPIO_Off>
}
100466b6:	bd10      	pop	{r4, pc}

100466b8 <Close_Valve>:
// Description    : Closes all valves
// Input          : None
// Return         : None
//*****************************************************************************
void Close_Valve() {
	GPIO_Off(Valve1);
100466b8:	2080      	movs	r0, #128	; 0x80
void Close_Valve() {
100466ba:	b510      	push	{r4, lr}
	GPIO_Off(Valve1);
100466bc:	0040      	lsls	r0, r0, #1
100466be:	f7ff fca2 	bl	10046006 <GPIO_Off>
	GPIO_Off(Valve2);
100466c2:	2080      	movs	r0, #128	; 0x80
100466c4:	0100      	lsls	r0, r0, #4
100466c6:	f7ff fc9e 	bl	10046006 <GPIO_Off>
	GPIO_Off(Valve3);
100466ca:	2080      	movs	r0, #128	; 0x80
100466cc:	0380      	lsls	r0, r0, #14
100466ce:	f7ff fc9a 	bl	10046006 <GPIO_Off>
	GPIO_Off(Valve4);
100466d2:	2040      	movs	r0, #64	; 0x40
100466d4:	f7ff fc97 	bl	10046006 <GPIO_Off>
	GPIO_Off(Valve5);
100466d8:	2020      	movs	r0, #32
100466da:	f7ff fc94 	bl	10046006 <GPIO_Off>
	GPIO_Off(Valve6);
100466de:	2080      	movs	r0, #128	; 0x80
100466e0:	0340      	lsls	r0, r0, #13
100466e2:	f7ff fc90 	bl	10046006 <GPIO_Off>
	GPIO_Off(Valve7);
100466e6:	2080      	movs	r0, #128	; 0x80
100466e8:	0300      	lsls	r0, r0, #12
100466ea:	f7ff fc8c 	bl	10046006 <GPIO_Off>
	GPIO_Off(Valve8);
100466ee:	2080      	movs	r0, #128	; 0x80
100466f0:	02c0      	lsls	r0, r0, #11
100466f2:	f7ff fc88 	bl	10046006 <GPIO_Off>

	GPIO_Off(ValveControl);
100466f6:	2080      	movs	r0, #128	; 0x80
100466f8:	03c0      	lsls	r0, r0, #15
100466fa:	f7ff fc84 	bl	10046006 <GPIO_Off>

	currentState = 0;
100466fe:	2200      	movs	r2, #0
10046700:	4b01      	ldr	r3, [pc, #4]	; (10046708 <Close_Valve+0x50>)
10046702:	701a      	strb	r2, [r3, #0]
}
10046704:	bd10      	pop	{r4, pc}
10046706:	46c0      	nop			; (mov r8, r8)
10046708:	200008ec 	.word	0x200008ec

1004670c <Pump_On>:
// Description    : Turns on air pump
// Input          : None
// Return         : None
//*****************************************************************************
void Pump_On() {
	GPIO_On(PVControl);
1004670c:	2080      	movs	r0, #128	; 0x80
void Pump_On() {
1004670e:	b510      	push	{r4, lr}
	GPIO_On(PVControl);
10046710:	0400      	lsls	r0, r0, #16
10046712:	f7ff fc73 	bl	10045ffc <GPIO_On>
}
10046716:	bd10      	pop	{r4, pc}

10046718 <Pump_Off>:
// Description    : Turns off air pump
// Input          : None
// Return         : None
//*****************************************************************************
void Pump_Off() {
	GPIO_Off(PVControl);
10046718:	2080      	movs	r0, #128	; 0x80
void Pump_Off() {
1004671a:	b510      	push	{r4, lr}
	GPIO_Off(PVControl);
1004671c:	0400      	lsls	r0, r0, #16
1004671e:	f7ff fc72 	bl	10046006 <GPIO_Off>
}
10046722:	bd10      	pop	{r4, pc}

10046724 <Pressurize_Air_Bag>:
// Function Name  : Pressurize_Air_Bag
// Description    : Pressurize one of the air bags to a desired pressure using external air
// Input          : bag to be pressurized, desired mmHg to pressurize bag to, and a time multiplier
// Return         : None
//*****************************************************************************
void Pressurize_Air_Bag(uint8_t bag, uint16_t desiredPressure, float multiplier) {
10046724:	b5f0      	push	{r4, r5, r6, r7, lr}
10046726:	0005      	movs	r5, r0
10046728:	b08b      	sub	sp, #44	; 0x2c
	SEGGER_RTT_printf(0, "Pressurizing bag %d to %d mmHg, with multiplier %d\n", bag, desiredPressure, (uint16_t)(multiplier*100));
1004672a:	1c10      	adds	r0, r2, #0
void Pressurize_Air_Bag(uint8_t bag, uint16_t desiredPressure, float multiplier) {
1004672c:	000c      	movs	r4, r1
	SEGGER_RTT_printf(0, "Pressurizing bag %d to %d mmHg, with multiplier %d\n", bag, desiredPressure, (uint16_t)(multiplier*100));
1004672e:	4958      	ldr	r1, [pc, #352]	; (10046890 <Pressurize_Air_Bag+0x16c>)
void Pressurize_Air_Bag(uint8_t bag, uint16_t desiredPressure, float multiplier) {
10046730:	9205      	str	r2, [sp, #20]
	SEGGER_RTT_printf(0, "Pressurizing bag %d to %d mmHg, with multiplier %d\n", bag, desiredPressure, (uint16_t)(multiplier*100));
10046732:	f7fa fafd 	bl	10040d30 <__aeabi_fmul>
10046736:	f7f9 ff09 	bl	1004054c <__aeabi_f2uiz>
1004673a:	b280      	uxth	r0, r0
1004673c:	0023      	movs	r3, r4
1004673e:	002a      	movs	r2, r5
10046740:	4954      	ldr	r1, [pc, #336]	; (10046894 <Pressurize_Air_Bag+0x170>)
10046742:	9000      	str	r0, [sp, #0]
10046744:	2000      	movs	r0, #0
10046746:	f7fe fa14 	bl	10044b72 <SEGGER_RTT_printf>

	Close_Valve(); // Start with all valves closed
1004674a:	f7ff ffb5 	bl	100466b8 <Close_Valve>
	/*uint32_t startTime = HAL_VTimerGetCurrentTime_sysT32();
	uint32_t endTime = HAL_VTimerGetCurrentTime_sysT32();
	uint32_t timeDifference;*/

	// Find time to hold valves open and pump
	Read_ADC();
1004674e:	f7ff fe69 	bl	10046424 <Read_ADC>
	uint16_t initialPressure = CurrentPressures[bag-1]; //Starts from 0
10046752:	1e6b      	subs	r3, r5, #1
10046754:	4a50      	ldr	r2, [pc, #320]	; (10046898 <Pressurize_Air_Bag+0x174>)
10046756:	005b      	lsls	r3, r3, #1
10046758:	5a9b      	ldrh	r3, [r3, r2]
1004675a:	b29b      	uxth	r3, r3
1004675c:	9304      	str	r3, [sp, #16]
	if (initialPressure >= desiredPressure) return;
1004675e:	429c      	cmp	r4, r3
10046760:	d800      	bhi.n	10046764 <Pressurize_Air_Bag+0x40>
10046762:	e093      	b.n	1004688c <Pressurize_Air_Bag+0x168>
	float holdTime1 = 0.0001*pow((float)initialPressure, 3) - 0.0168*pow((float)initialPressure, 2) + 1.2474*initialPressure + 1.7436;  // Experimentally determined equation
10046764:	0018      	movs	r0, r3
10046766:	f7fa fe0f 	bl	10041388 <__aeabi_ui2f>
1004676a:	f7fc fbc3 	bl	10042ef4 <__aeabi_f2d>
1004676e:	2200      	movs	r2, #0
10046770:	4b4a      	ldr	r3, [pc, #296]	; (1004689c <Pressurize_Air_Bag+0x178>)
10046772:	9002      	str	r0, [sp, #8]
10046774:	9103      	str	r1, [sp, #12]
10046776:	f001 fdcf 	bl	10048318 <pow>
1004677a:	9006      	str	r0, [sp, #24]
1004677c:	9107      	str	r1, [sp, #28]
	float holdTime2 = 0.0001*pow((float)desiredPressure, 3) - 0.0168*pow((float)desiredPressure, 2) + 1.2474*desiredPressure + 1.7436;
1004677e:	0020      	movs	r0, r4
10046780:	f7fa fe02 	bl	10041388 <__aeabi_ui2f>
10046784:	f7fc fbb6 	bl	10042ef4 <__aeabi_f2d>
10046788:	2200      	movs	r2, #0
1004678a:	4b44      	ldr	r3, [pc, #272]	; (1004689c <Pressurize_Air_Bag+0x178>)
1004678c:	0006      	movs	r6, r0
1004678e:	000f      	movs	r7, r1
10046790:	f001 fdc2 	bl	10048318 <pow>
10046794:	4a42      	ldr	r2, [pc, #264]	; (100468a0 <Pressurize_Air_Bag+0x17c>)
10046796:	4b43      	ldr	r3, [pc, #268]	; (100468a4 <Pressurize_Air_Bag+0x180>)
10046798:	f7fb fd80 	bl	1004229c <__aeabi_dmul>
1004679c:	0032      	movs	r2, r6
1004679e:	9008      	str	r0, [sp, #32]
100467a0:	9109      	str	r1, [sp, #36]	; 0x24
100467a2:	003b      	movs	r3, r7
100467a4:	0030      	movs	r0, r6
100467a6:	0039      	movs	r1, r7
100467a8:	f7fb fd78 	bl	1004229c <__aeabi_dmul>
100467ac:	4a3e      	ldr	r2, [pc, #248]	; (100468a8 <Pressurize_Air_Bag+0x184>)
100467ae:	4b3f      	ldr	r3, [pc, #252]	; (100468ac <Pressurize_Air_Bag+0x188>)
100467b0:	f7fb fd74 	bl	1004229c <__aeabi_dmul>
100467b4:	0002      	movs	r2, r0
100467b6:	000b      	movs	r3, r1
100467b8:	9808      	ldr	r0, [sp, #32]
100467ba:	9909      	ldr	r1, [sp, #36]	; 0x24
100467bc:	f7fb ffee 	bl	1004279c <__aeabi_dsub>
100467c0:	0006      	movs	r6, r0
100467c2:	0020      	movs	r0, r4
100467c4:	000f      	movs	r7, r1
100467c6:	f7fc fb53 	bl	10042e70 <__aeabi_i2d>
100467ca:	4a39      	ldr	r2, [pc, #228]	; (100468b0 <Pressurize_Air_Bag+0x18c>)
100467cc:	4b39      	ldr	r3, [pc, #228]	; (100468b4 <Pressurize_Air_Bag+0x190>)
100467ce:	f7fb fd65 	bl	1004229c <__aeabi_dmul>
100467d2:	0002      	movs	r2, r0
100467d4:	000b      	movs	r3, r1
100467d6:	0030      	movs	r0, r6
100467d8:	0039      	movs	r1, r7
100467da:	f7fa fe1b 	bl	10041414 <__aeabi_dadd>
100467de:	4a36      	ldr	r2, [pc, #216]	; (100468b8 <Pressurize_Air_Bag+0x194>)
100467e0:	4b36      	ldr	r3, [pc, #216]	; (100468bc <Pressurize_Air_Bag+0x198>)
100467e2:	f7fa fe17 	bl	10041414 <__aeabi_dadd>
100467e6:	f7fc fbd7 	bl	10042f98 <__aeabi_d2f>
	float holdTime1 = 0.0001*pow((float)initialPressure, 3) - 0.0168*pow((float)initialPressure, 2) + 1.2474*initialPressure + 1.7436;  // Experimentally determined equation
100467ea:	4a2d      	ldr	r2, [pc, #180]	; (100468a0 <Pressurize_Air_Bag+0x17c>)
	float holdTime2 = 0.0001*pow((float)desiredPressure, 3) - 0.0168*pow((float)desiredPressure, 2) + 1.2474*desiredPressure + 1.7436;
100467ec:	1c04      	adds	r4, r0, #0
	float holdTime1 = 0.0001*pow((float)initialPressure, 3) - 0.0168*pow((float)initialPressure, 2) + 1.2474*initialPressure + 1.7436;  // Experimentally determined equation
100467ee:	4b2d      	ldr	r3, [pc, #180]	; (100468a4 <Pressurize_Air_Bag+0x180>)
100467f0:	9806      	ldr	r0, [sp, #24]
100467f2:	9907      	ldr	r1, [sp, #28]
100467f4:	f7fb fd52 	bl	1004229c <__aeabi_dmul>
100467f8:	9a02      	ldr	r2, [sp, #8]
100467fa:	9b03      	ldr	r3, [sp, #12]
100467fc:	0006      	movs	r6, r0
100467fe:	000f      	movs	r7, r1
10046800:	0010      	movs	r0, r2
10046802:	0019      	movs	r1, r3
10046804:	f7fb fd4a 	bl	1004229c <__aeabi_dmul>
10046808:	4a27      	ldr	r2, [pc, #156]	; (100468a8 <Pressurize_Air_Bag+0x184>)
1004680a:	4b28      	ldr	r3, [pc, #160]	; (100468ac <Pressurize_Air_Bag+0x188>)
1004680c:	f7fb fd46 	bl	1004229c <__aeabi_dmul>
10046810:	0002      	movs	r2, r0
10046812:	000b      	movs	r3, r1
10046814:	0030      	movs	r0, r6
10046816:	0039      	movs	r1, r7
10046818:	f7fb ffc0 	bl	1004279c <__aeabi_dsub>
1004681c:	0006      	movs	r6, r0
1004681e:	9804      	ldr	r0, [sp, #16]
10046820:	000f      	movs	r7, r1
10046822:	f7fc fb25 	bl	10042e70 <__aeabi_i2d>
10046826:	4a22      	ldr	r2, [pc, #136]	; (100468b0 <Pressurize_Air_Bag+0x18c>)
10046828:	4b22      	ldr	r3, [pc, #136]	; (100468b4 <Pressurize_Air_Bag+0x190>)
1004682a:	f7fb fd37 	bl	1004229c <__aeabi_dmul>
1004682e:	0002      	movs	r2, r0
10046830:	000b      	movs	r3, r1
10046832:	0030      	movs	r0, r6
10046834:	0039      	movs	r1, r7
10046836:	f7fa fded 	bl	10041414 <__aeabi_dadd>
1004683a:	4b20      	ldr	r3, [pc, #128]	; (100468bc <Pressurize_Air_Bag+0x198>)
1004683c:	4a1e      	ldr	r2, [pc, #120]	; (100468b8 <Pressurize_Air_Bag+0x194>)
1004683e:	f7fa fde9 	bl	10041414 <__aeabi_dadd>
10046842:	f7fc fba9 	bl	10042f98 <__aeabi_d2f>
10046846:	1c01      	adds	r1, r0, #0
	float holdTime = (holdTime2 - holdTime1)*multiplier;
10046848:	1c20      	adds	r0, r4, #0
1004684a:	f7fa fb91 	bl	10040f70 <__aeabi_fsub>
1004684e:	9905      	ldr	r1, [sp, #20]
10046850:	f7fa fa6e 	bl	10040d30 <__aeabi_fmul>
	uint32_t holdTime_ms = (uint32_t)(holdTime*1000);
10046854:	491a      	ldr	r1, [pc, #104]	; (100468c0 <Pressurize_Air_Bag+0x19c>)
10046856:	f7fa fa6b 	bl	10040d30 <__aeabi_fmul>
1004685a:	f7f9 fe77 	bl	1004054c <__aeabi_f2uiz>
1004685e:	0004      	movs	r4, r0
	SEGGER_RTT_printf(0, "Pumping for %d ms\n", holdTime_ms);
10046860:	0002      	movs	r2, r0
10046862:	4918      	ldr	r1, [pc, #96]	; (100468c4 <Pressurize_Air_Bag+0x1a0>)
10046864:	2000      	movs	r0, #0
10046866:	f7fe f984 	bl	10044b72 <SEGGER_RTT_printf>

	// Pressurize for correct time period
	Open_Valve_Small(bag);
1004686a:	0028      	movs	r0, r5
1004686c:	f7ff fe38 	bl	100464e0 <Open_Valve_Small>
	Open_Valve_Large();
10046870:	f7ff ff0c 	bl	1004668c <Open_Valve_Large>
	Pump_On();
10046874:	f7ff ff4a 	bl	1004670c <Pump_On>

	Clock_Wait(holdTime_ms);
10046878:	0020      	movs	r0, r4
1004687a:	f7fc fc53 	bl	10043124 <Clock_Wait>

		//endTime = HAL_VTimerGetCurrentTime_sysT32();
		//timeDifference = abs(HAL_VTimerDiff_ms_sysT32(endTime,startTime));
	//} while (timeDifference < holdTime_ms);

	Pump_Off();
1004687e:	f7ff ff4b 	bl	10046718 <Pump_Off>
	Close_Valve_Large();
10046882:	f7ff ff09 	bl	10046698 <Close_Valve_Large>
	Close_Valve_Small(bag);
10046886:	0028      	movs	r0, r5
10046888:	f7ff fe70 	bl	1004656c <Close_Valve_Small>

}
1004688c:	b00b      	add	sp, #44	; 0x2c
1004688e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10046890:	42c80000 	.word	0x42c80000
10046894:	10058894 	.word	0x10058894
10046898:	20000926 	.word	0x20000926
1004689c:	40080000 	.word	0x40080000
100468a0:	eb1c432d 	.word	0xeb1c432d
100468a4:	3f1a36e2 	.word	0x3f1a36e2
100468a8:	ea4a8c15 	.word	0xea4a8c15
100468ac:	3f913404 	.word	0x3f913404
100468b0:	b3d07c85 	.word	0xb3d07c85
100468b4:	3ff3f559 	.word	0x3ff3f559
100468b8:	1d14e3bd 	.word	0x1d14e3bd
100468bc:	3ffbe5c9 	.word	0x3ffbe5c9
100468c0:	447a0000 	.word	0x447a0000
100468c4:	100588c8 	.word	0x100588c8

100468c8 <Depressurize_Air_Bag>:
// Function Name  : Depressurize_Air_Bag
// Description    : Depressurize one of the air bags to a desired pressure by letting air out
// Input          : bag to be depressurized, desired mmHg to depressurize bag to, and a time multiplier
// Return         : None
//*****************************************************************************
void Depressurize_Air_Bag(uint8_t bag, uint16_t desiredPressure, float multiplier) {
100468c8:	b5f0      	push	{r4, r5, r6, r7, lr}
100468ca:	0004      	movs	r4, r0
100468cc:	b085      	sub	sp, #20
	SEGGER_RTT_printf(0, "Depressurizing bag %d to %d mmHg, with multiplier %d\n", bag, desiredPressure, (uint16_t)(multiplier*100));
100468ce:	1c10      	adds	r0, r2, #0
void Depressurize_Air_Bag(uint8_t bag, uint16_t desiredPressure, float multiplier) {
100468d0:	000d      	movs	r5, r1
	SEGGER_RTT_printf(0, "Depressurizing bag %d to %d mmHg, with multiplier %d\n", bag, desiredPressure, (uint16_t)(multiplier*100));
100468d2:	4932      	ldr	r1, [pc, #200]	; (1004699c <Depressurize_Air_Bag+0xd4>)
void Depressurize_Air_Bag(uint8_t bag, uint16_t desiredPressure, float multiplier) {
100468d4:	9203      	str	r2, [sp, #12]
	SEGGER_RTT_printf(0, "Depressurizing bag %d to %d mmHg, with multiplier %d\n", bag, desiredPressure, (uint16_t)(multiplier*100));
100468d6:	f7fa fa2b 	bl	10040d30 <__aeabi_fmul>
100468da:	f7f9 fe37 	bl	1004054c <__aeabi_f2uiz>
100468de:	b280      	uxth	r0, r0
100468e0:	002b      	movs	r3, r5
100468e2:	0022      	movs	r2, r4
100468e4:	492e      	ldr	r1, [pc, #184]	; (100469a0 <Depressurize_Air_Bag+0xd8>)
100468e6:	9000      	str	r0, [sp, #0]
100468e8:	2000      	movs	r0, #0
100468ea:	f7fe f942 	bl	10044b72 <SEGGER_RTT_printf>

	Close_Valve(); // Start with all valves closed
100468ee:	f7ff fee3 	bl	100466b8 <Close_Valve>

	// Find time to hold valves open
	Read_ADC();
100468f2:	f7ff fd97 	bl	10046424 <Read_ADC>
	uint16_t initialPressure = CurrentPressures[bag-1]; // Starts from 0
100468f6:	1e63      	subs	r3, r4, #1
100468f8:	4a2a      	ldr	r2, [pc, #168]	; (100469a4 <Depressurize_Air_Bag+0xdc>)
100468fa:	005b      	lsls	r3, r3, #1
100468fc:	5a98      	ldrh	r0, [r3, r2]
100468fe:	b280      	uxth	r0, r0
	if (initialPressure <= desiredPressure) return;
10046900:	4285      	cmp	r5, r0
10046902:	d248      	bcs.n	10046996 <Depressurize_Air_Bag+0xce>
	float holdTime1 = -1.881*log((float)initialPressure) + 9.6359;  // Experimentally determined equation
10046904:	f7fa fd40 	bl	10041388 <__aeabi_ui2f>
10046908:	f7fc faf4 	bl	10042ef4 <__aeabi_f2d>
1004690c:	f001 fc84 	bl	10048218 <log>
10046910:	0006      	movs	r6, r0
	float holdTime2 = -1.881*log((float)desiredPressure) + 9.6359;  // Experimentally determined equation
10046912:	0028      	movs	r0, r5
	float holdTime1 = -1.881*log((float)initialPressure) + 9.6359;  // Experimentally determined equation
10046914:	000f      	movs	r7, r1
	float holdTime2 = -1.881*log((float)desiredPressure) + 9.6359;  // Experimentally determined equation
10046916:	f7fa fd37 	bl	10041388 <__aeabi_ui2f>
1004691a:	f7fc faeb 	bl	10042ef4 <__aeabi_f2d>
1004691e:	f001 fc7b 	bl	10048218 <log>
10046922:	4a21      	ldr	r2, [pc, #132]	; (100469a8 <Depressurize_Air_Bag+0xe0>)
10046924:	4b21      	ldr	r3, [pc, #132]	; (100469ac <Depressurize_Air_Bag+0xe4>)
10046926:	f7fb fcb9 	bl	1004229c <__aeabi_dmul>
1004692a:	4a21      	ldr	r2, [pc, #132]	; (100469b0 <Depressurize_Air_Bag+0xe8>)
1004692c:	4b21      	ldr	r3, [pc, #132]	; (100469b4 <Depressurize_Air_Bag+0xec>)
1004692e:	f7fa fd71 	bl	10041414 <__aeabi_dadd>
10046932:	f7fc fb31 	bl	10042f98 <__aeabi_d2f>
	float holdTime1 = -1.881*log((float)initialPressure) + 9.6359;  // Experimentally determined equation
10046936:	4a1c      	ldr	r2, [pc, #112]	; (100469a8 <Depressurize_Air_Bag+0xe0>)
	float holdTime2 = -1.881*log((float)desiredPressure) + 9.6359;  // Experimentally determined equation
10046938:	1c05      	adds	r5, r0, #0
	float holdTime1 = -1.881*log((float)initialPressure) + 9.6359;  // Experimentally determined equation
1004693a:	4b1c      	ldr	r3, [pc, #112]	; (100469ac <Depressurize_Air_Bag+0xe4>)
1004693c:	0030      	movs	r0, r6
1004693e:	0039      	movs	r1, r7
10046940:	f7fb fcac 	bl	1004229c <__aeabi_dmul>
10046944:	4b1b      	ldr	r3, [pc, #108]	; (100469b4 <Depressurize_Air_Bag+0xec>)
10046946:	4a1a      	ldr	r2, [pc, #104]	; (100469b0 <Depressurize_Air_Bag+0xe8>)
10046948:	f7fa fd64 	bl	10041414 <__aeabi_dadd>
1004694c:	f7fc fb24 	bl	10042f98 <__aeabi_d2f>
10046950:	1c01      	adds	r1, r0, #0
	float holdTime = (holdTime2 - holdTime1)*multiplier;
10046952:	1c28      	adds	r0, r5, #0
10046954:	f7fa fb0c 	bl	10040f70 <__aeabi_fsub>
10046958:	9903      	ldr	r1, [sp, #12]
1004695a:	f7fa f9e9 	bl	10040d30 <__aeabi_fmul>
	uint32_t holdTime_ms = (uint32_t)(holdTime*1000);
1004695e:	4916      	ldr	r1, [pc, #88]	; (100469b8 <Depressurize_Air_Bag+0xf0>)
10046960:	f7fa f9e6 	bl	10040d30 <__aeabi_fmul>
10046964:	f7f9 fdf2 	bl	1004054c <__aeabi_f2uiz>
10046968:	0005      	movs	r5, r0
	SEGGER_RTT_printf(0, "Releasing for %d ms\n", holdTime_ms);
1004696a:	0002      	movs	r2, r0
1004696c:	4913      	ldr	r1, [pc, #76]	; (100469bc <Depressurize_Air_Bag+0xf4>)
1004696e:	2000      	movs	r0, #0
10046970:	f7fe f8ff 	bl	10044b72 <SEGGER_RTT_printf>

	// Depressurize for correct time period
	Open_Valve_Small(bag);
10046974:	0020      	movs	r0, r4
10046976:	f7ff fdb3 	bl	100464e0 <Open_Valve_Small>
	Open_Valve_Large();
1004697a:	f7ff fe87 	bl	1004668c <Open_Valve_Large>
	Open_Valve_Small_Final();
1004697e:	f7ff fe91 	bl	100466a4 <Open_Valve_Small_Final>

	Clock_Wait(holdTime_ms);
10046982:	0028      	movs	r0, r5
10046984:	f7fc fbce 	bl	10043124 <Clock_Wait>

	Close_Valve_Small(bag);
10046988:	0020      	movs	r0, r4
1004698a:	f7ff fdef 	bl	1004656c <Close_Valve_Small>
	Close_Valve_Large();
1004698e:	f7ff fe83 	bl	10046698 <Close_Valve_Large>
	Close_Valve_Small_Final();
10046992:	f7ff fe8c 	bl	100466ae <Close_Valve_Small_Final>
}
10046996:	b005      	add	sp, #20
10046998:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004699a:	46c0      	nop			; (mov r8, r8)
1004699c:	42c80000 	.word	0x42c80000
100469a0:	100587a6 	.word	0x100587a6
100469a4:	20000926 	.word	0x20000926
100469a8:	74bc6a7f 	.word	0x74bc6a7f
100469ac:	bffe1893 	.word	0xbffe1893
100469b0:	af4f0d84 	.word	0xaf4f0d84
100469b4:	40234594 	.word	0x40234594
100469b8:	447a0000 	.word	0x447a0000
100469bc:	100587dc 	.word	0x100587dc

100469c0 <Redistribute_Pressure>:
// Function Name  : Redistribute_Pressure
// Description    : Redistribute pressure by allowing air to move from a high pressure bag to a low pressure bag or vice versa
// Input          : bags to redistribute air from, desired mmHg to pressurize/depressurize target bag to
// Return         : None
//*****************************************************************************
void Redistribute_Pressure(uint8_t targetBag, uint8_t otherBag, uint16_t desiredPressure) {
100469c0:	b5f0      	push	{r4, r5, r6, r7, lr}
100469c2:	b0a5      	sub	sp, #148	; 0x94
	SEGGER_RTT_printf(0, "Redistributing pressure from bag %d to target bag %d, with target pressure %d mmHg\n",
100469c4:	0003      	movs	r3, r0
void Redistribute_Pressure(uint8_t targetBag, uint8_t otherBag, uint16_t desiredPressure) {
100469c6:	0004      	movs	r4, r0
100469c8:	9102      	str	r1, [sp, #8]
100469ca:	0016      	movs	r6, r2
	SEGGER_RTT_printf(0, "Redistributing pressure from bag %d to target bag %d, with target pressure %d mmHg\n",
100469cc:	9200      	str	r2, [sp, #0]
100469ce:	2000      	movs	r0, #0
100469d0:	000a      	movs	r2, r1
100469d2:	494e      	ldr	r1, [pc, #312]	; (10046b0c <Redistribute_Pressure+0x14c>)
100469d4:	f7fe f8cd 	bl	10044b72 <SEGGER_RTT_printf>
	uint8_t usedCharacteristic[10];

	// Experimentally determined changes in pressure for high and low pressure bags
	//  when air is exchanged between them, for various pressure differentials
	// Each element is pressure change after valves have been open for 0.25 seconds (starting from 0s)
	uint8_t measuredPressureDifferentials[] = {100, 70, 50, 30, 20, 10, 5};
100469d8:	2364      	movs	r3, #100	; 0x64
100469da:	2246      	movs	r2, #70	; 0x46
100469dc:	ad04      	add	r5, sp, #16
100469de:	702b      	strb	r3, [r5, #0]
100469e0:	3b32      	subs	r3, #50	; 0x32
100469e2:	70ab      	strb	r3, [r5, #2]
100469e4:	3b14      	subs	r3, #20
100469e6:	70eb      	strb	r3, [r5, #3]
100469e8:	3b0a      	subs	r3, #10
100469ea:	712b      	strb	r3, [r5, #4]
100469ec:	3b0a      	subs	r3, #10
100469ee:	716b      	strb	r3, [r5, #5]
100469f0:	3b05      	subs	r3, #5
100469f2:	706a      	strb	r2, [r5, #1]
100469f4:	71ab      	strb	r3, [r5, #6]
	uint8_t relationships[][10] = {{0, 11, 20, 28, 34, 40, 44, 46, 48, 50},
100469f6:	4946      	ldr	r1, [pc, #280]	; (10046b10 <Redistribute_Pressure+0x150>)
100469f8:	a812      	add	r0, sp, #72	; 0x48
100469fa:	f001 fbe2 	bl	100481c2 <memcpy>
			{0, 5, 9, 12, 14, 15, 15, 15, 15, 15},
			{0, 4, 7, 9, 10, 10, 10, 10, 10, 10},
			{0, 3, 4, 5, 5, 5, 5, 5, 5, 5},
			{0, 2, 3, 3, 3, 3, 3, 3, 3, 3}};

	Read_ADC();
100469fe:	f7ff fd11 	bl	10046424 <Read_ADC>
	uint16_t pressureDifferential = abs(CurrentPressures[targetBag-1] - CurrentPressures[otherBag-1]);
10046a02:	9902      	ldr	r1, [sp, #8]
10046a04:	4a43      	ldr	r2, [pc, #268]	; (10046b14 <Redistribute_Pressure+0x154>)
10046a06:	1e63      	subs	r3, r4, #1
10046a08:	3901      	subs	r1, #1
10046a0a:	005b      	lsls	r3, r3, #1
10046a0c:	0049      	lsls	r1, r1, #1
10046a0e:	5a9f      	ldrh	r7, [r3, r2]
10046a10:	5a89      	ldrh	r1, [r1, r2]
	uint16_t desiredPressureDifferential = abs(CurrentPressures[targetBag-1] - desiredPressure);
10046a12:	5a9b      	ldrh	r3, [r3, r2]
	uint16_t pressureDifferential = abs(CurrentPressures[targetBag-1] - CurrentPressures[otherBag-1]);
10046a14:	1a7f      	subs	r7, r7, r1
	uint16_t desiredPressureDifferential = abs(CurrentPressures[targetBag-1] - desiredPressure);
10046a16:	1b9e      	subs	r6, r3, r6
10046a18:	17f2      	asrs	r2, r6, #31
	uint16_t pressureDifferential = abs(CurrentPressures[targetBag-1] - CurrentPressures[otherBag-1]);
10046a1a:	17f9      	asrs	r1, r7, #31
	uint16_t desiredPressureDifferential = abs(CurrentPressures[targetBag-1] - desiredPressure);
10046a1c:	18b3      	adds	r3, r6, r2
	uint16_t pressureDifferential = abs(CurrentPressures[targetBag-1] - CurrentPressures[otherBag-1]);
10046a1e:	187f      	adds	r7, r7, r1

	// Find closest characteristic to use
	uint16_t pressureCharDifference[] = {0, 0, 0, 0, 0, 0, 0};
10046a20:	ae09      	add	r6, sp, #36	; 0x24
	uint16_t desiredPressureDifferential = abs(CurrentPressures[targetBag-1] - desiredPressure);
10046a22:	4053      	eors	r3, r2
	uint16_t pressureDifferential = abs(CurrentPressures[targetBag-1] - CurrentPressures[otherBag-1]);
10046a24:	404f      	eors	r7, r1
	uint16_t pressureCharDifference[] = {0, 0, 0, 0, 0, 0, 0};
10046a26:	220e      	movs	r2, #14
10046a28:	2100      	movs	r1, #0
10046a2a:	0030      	movs	r0, r6
	uint16_t desiredPressureDifferential = abs(CurrentPressures[targetBag-1] - desiredPressure);
10046a2c:	9303      	str	r3, [sp, #12]
	uint16_t pressureCharDifference[] = {0, 0, 0, 0, 0, 0, 0};
10046a2e:	f001 fbe3 	bl	100481f8 <memset>
	for (int i=0; i<numCharacteristics; i++) pressureCharDifference[i] = abs(measuredPressureDifferentials[i] - pressureDifferential);
10046a32:	2300      	movs	r3, #0
10046a34:	5cea      	ldrb	r2, [r5, r3]
10046a36:	0059      	lsls	r1, r3, #1
10046a38:	1bd2      	subs	r2, r2, r7
10046a3a:	17d0      	asrs	r0, r2, #31
10046a3c:	1812      	adds	r2, r2, r0
10046a3e:	4042      	eors	r2, r0
10046a40:	3301      	adds	r3, #1
10046a42:	538a      	strh	r2, [r1, r6]
10046a44:	2b07      	cmp	r3, #7
10046a46:	d1f5      	bne.n	10046a34 <Redistribute_Pressure+0x74>
	smallestDifferential = pressureCharDifference[0];
	smallestDifferentialIndex = 0;
	for (int i=0; i<numCharacteristics; i++) {
10046a48:	2300      	movs	r3, #0
	smallestDifferential = pressureCharDifference[0];
10046a4a:	8832      	ldrh	r2, [r6, #0]
	smallestDifferentialIndex = 0;
10046a4c:	001e      	movs	r6, r3
		if (pressureCharDifference[i] < smallestDifferential) {
10046a4e:	a809      	add	r0, sp, #36	; 0x24
10046a50:	0059      	lsls	r1, r3, #1
10046a52:	5a09      	ldrh	r1, [r1, r0]
10046a54:	4291      	cmp	r1, r2
10046a56:	d201      	bcs.n	10046a5c <Redistribute_Pressure+0x9c>
			smallestDifferential = pressureCharDifference[i];
			smallestDifferentialIndex = i;
10046a58:	000a      	movs	r2, r1
10046a5a:	b29e      	uxth	r6, r3
	for (int i=0; i<numCharacteristics; i++) {
10046a5c:	3301      	adds	r3, #1
10046a5e:	2b07      	cmp	r3, #7
10046a60:	d1f6      	bne.n	10046a50 <Redistribute_Pressure+0x90>
		}
	}
	SEGGER_RTT_printf(0, "Using characteristic %d mmHg; ", measuredPressureDifferentials[smallestDifferentialIndex]);
10046a62:	5daa      	ldrb	r2, [r5, r6]
10046a64:	492c      	ldr	r1, [pc, #176]	; (10046b18 <Redistribute_Pressure+0x158>)
10046a66:	2000      	movs	r0, #0
10046a68:	f7fe f883 	bl	10044b72 <SEGGER_RTT_printf>
10046a6c:	230a      	movs	r3, #10
10046a6e:	435e      	muls	r6, r3
10046a70:	ab12      	add	r3, sp, #72	; 0x48
10046a72:	199e      	adds	r6, r3, r6
	for (int i=0; i<10; i++){ // Copying array
10046a74:	2300      	movs	r3, #0
		usedCharacteristic[i] = relationships[smallestDifferentialIndex][i];
10046a76:	af06      	add	r7, sp, #24
10046a78:	5cf2      	ldrb	r2, [r6, r3]
10046a7a:	55da      	strb	r2, [r3, r7]
	for (int i=0; i<10; i++){ // Copying array
10046a7c:	3301      	adds	r3, #1
10046a7e:	2b0a      	cmp	r3, #10
10046a80:	d1fa      	bne.n	10046a78 <Redistribute_Pressure+0xb8>
	}

	// Find desired time to keep valves open
	uint16_t pressureDifference[10] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
10046a82:	ad0d      	add	r5, sp, #52	; 0x34
10046a84:	2214      	movs	r2, #20
10046a86:	2100      	movs	r1, #0
10046a88:	0028      	movs	r0, r5
10046a8a:	f001 fbb5 	bl	100481f8 <memset>
	for (int i=0; i<10; i++) pressureDifference[i] = abs(usedCharacteristic[i] - desiredPressureDifferential);
10046a8e:	2300      	movs	r3, #0
10046a90:	5cfa      	ldrb	r2, [r7, r3]
10046a92:	9803      	ldr	r0, [sp, #12]
10046a94:	0059      	lsls	r1, r3, #1
10046a96:	1a12      	subs	r2, r2, r0
10046a98:	17d0      	asrs	r0, r2, #31
10046a9a:	1812      	adds	r2, r2, r0
10046a9c:	4042      	eors	r2, r0
10046a9e:	3301      	adds	r3, #1
10046aa0:	526a      	strh	r2, [r5, r1]
10046aa2:	2b0a      	cmp	r3, #10
10046aa4:	d1f4      	bne.n	10046a90 <Redistribute_Pressure+0xd0>
	smallestDifferential = pressureDifference[0];
	smallestDifferentialIndex = 0;
	for (int i=0; i<10; i++) {
10046aa6:	2300      	movs	r3, #0
	smallestDifferentialIndex = 0;
10046aa8:	001e      	movs	r6, r3
	smallestDifferential = pressureDifference[0];
10046aaa:	882a      	ldrh	r2, [r5, #0]
		if (pressureDifference[i] < smallestDifferential) {
10046aac:	0059      	lsls	r1, r3, #1
10046aae:	5a69      	ldrh	r1, [r5, r1]
10046ab0:	4291      	cmp	r1, r2
10046ab2:	d201      	bcs.n	10046ab8 <Redistribute_Pressure+0xf8>
			smallestDifferential = pressureDifference[i];
			smallestDifferentialIndex = i;
10046ab4:	000a      	movs	r2, r1
10046ab6:	b29e      	uxth	r6, r3
	for (int i=0; i<10; i++) {
10046ab8:	3301      	adds	r3, #1
10046aba:	2b0a      	cmp	r3, #10
10046abc:	d1f6      	bne.n	10046aac <Redistribute_Pressure+0xec>
		}
	}
	uint32_t holdTime = smallestDifferentialIndex*1000*0.25; // Time to keep valves open in ms
10046abe:	20fa      	movs	r0, #250	; 0xfa
10046ac0:	0080      	lsls	r0, r0, #2
10046ac2:	4370      	muls	r0, r6
10046ac4:	f7fc f9d4 	bl	10042e70 <__aeabi_i2d>
10046ac8:	2200      	movs	r2, #0
10046aca:	4b14      	ldr	r3, [pc, #80]	; (10046b1c <Redistribute_Pressure+0x15c>)
10046acc:	f7fb fbe6 	bl	1004229c <__aeabi_dmul>
10046ad0:	f7f9 fd54 	bl	1004057c <__aeabi_d2uiz>

	SEGGER_RTT_printf(0, "Hold time: %d ms; Aiming for %d mmHg change in pressure\n",
10046ad4:	5dbb      	ldrb	r3, [r7, r6]
	uint32_t holdTime = smallestDifferentialIndex*1000*0.25; // Time to keep valves open in ms
10046ad6:	0005      	movs	r5, r0
	SEGGER_RTT_printf(0, "Hold time: %d ms; Aiming for %d mmHg change in pressure\n",
10046ad8:	0002      	movs	r2, r0
10046ada:	4911      	ldr	r1, [pc, #68]	; (10046b20 <Redistribute_Pressure+0x160>)
10046adc:	2000      	movs	r0, #0
10046ade:	f7fe f848 	bl	10044b72 <SEGGER_RTT_printf>
			holdTime, usedCharacteristic[smallestDifferentialIndex]);

	// Peripheral Control
	Close_Valve(); // Start with all valves closed
10046ae2:	f7ff fde9 	bl	100466b8 <Close_Valve>

	// Exchange air for correct time period
	if (holdTime != 0) {
10046ae6:	2d00      	cmp	r5, #0
10046ae8:	d00e      	beq.n	10046b08 <Redistribute_Pressure+0x148>
		Open_Valve_Small(targetBag);
10046aea:	0020      	movs	r0, r4
10046aec:	f7ff fcf8 	bl	100464e0 <Open_Valve_Small>
		Open_Valve_Small(otherBag);
10046af0:	9802      	ldr	r0, [sp, #8]
10046af2:	f7ff fcf5 	bl	100464e0 <Open_Valve_Small>

		Clock_Wait(holdTime);
10046af6:	0028      	movs	r0, r5
10046af8:	f7fc fb14 	bl	10043124 <Clock_Wait>

		//Close valves
		Close_Valve_Small(targetBag);
10046afc:	0020      	movs	r0, r4
10046afe:	f7ff fd35 	bl	1004656c <Close_Valve_Small>
		Close_Valve_Small(otherBag);
10046b02:	9802      	ldr	r0, [sp, #8]
10046b04:	f7ff fd32 	bl	1004656c <Close_Valve_Small>
	}
}
10046b08:	b025      	add	sp, #148	; 0x94
10046b0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
10046b0c:	10058a08 	.word	0x10058a08
10046b10:	10058235 	.word	0x10058235
10046b14:	20000926 	.word	0x20000926
10046b18:	10058a5c 	.word	0x10058a5c
10046b1c:	3fd00000 	.word	0x3fd00000
10046b20:	10058a7b 	.word	0x10058a7b

10046b24 <Release_AirBags>:
// Function Name  : Release_AirBags
// Description    : Release air from all airbags
// Input          : None
// Return         : None
//*****************************************************************************
void Release_AirBags() {
10046b24:	b537      	push	{r0, r1, r2, r4, r5, lr}
	SEGGER_RTT_printf(0, "Releasing air from all bags\n");
10046b26:	4919      	ldr	r1, [pc, #100]	; (10046b8c <Release_AirBags+0x68>)
10046b28:	2000      	movs	r0, #0
10046b2a:	f7fe f822 	bl	10044b72 <SEGGER_RTT_printf>

	uint8_t currentBag;
	uint8_t bagOrder [8] = {2, 3, 5, 7, 8, 1, 4, 6}; // Order to release bags in // TODO: Change
10046b2e:	466a      	mov	r2, sp
10046b30:	2302      	movs	r3, #2
	uint8_t numBags = 5; // TODO: Change

	for (int i=0; i<numBags; i++) {
10046b32:	2400      	movs	r4, #0
	uint8_t bagOrder [8] = {2, 3, 5, 7, 8, 1, 4, 6}; // Order to release bags in // TODO: Change
10046b34:	7013      	strb	r3, [r2, #0]
10046b36:	3301      	adds	r3, #1
10046b38:	7053      	strb	r3, [r2, #1]
10046b3a:	3302      	adds	r3, #2
10046b3c:	7093      	strb	r3, [r2, #2]
10046b3e:	3302      	adds	r3, #2
10046b40:	70d3      	strb	r3, [r2, #3]
10046b42:	3301      	adds	r3, #1
10046b44:	7113      	strb	r3, [r2, #4]
10046b46:	3b07      	subs	r3, #7
10046b48:	7153      	strb	r3, [r2, #5]
10046b4a:	3303      	adds	r3, #3
10046b4c:	7193      	strb	r3, [r2, #6]
10046b4e:	3302      	adds	r3, #2
10046b50:	71d3      	strb	r3, [r2, #7]
		currentBag = bagOrder[i];
10046b52:	466b      	mov	r3, sp
10046b54:	5d1d      	ldrb	r5, [r3, r4]
		SEGGER_RTT_printf(0, "Releasing bag %d\n", currentBag);
10046b56:	490e      	ldr	r1, [pc, #56]	; (10046b90 <Release_AirBags+0x6c>)
10046b58:	002a      	movs	r2, r5
10046b5a:	2000      	movs	r0, #0
10046b5c:	f7fe f809 	bl	10044b72 <SEGGER_RTT_printf>
		// Depressurize for correct time period

		Open_Valve_Small(currentBag);
10046b60:	0028      	movs	r0, r5
10046b62:	f7ff fcbd 	bl	100464e0 <Open_Valve_Small>
		Open_Valve_Large();
10046b66:	f7ff fd91 	bl	1004668c <Open_Valve_Large>
		Open_Valve_Small_Final();
10046b6a:	f7ff fd9b 	bl	100466a4 <Open_Valve_Small_Final>

		Clock_Wait(20*1000); // 20 seconds is enough to depressurize from any pressure
10046b6e:	4809      	ldr	r0, [pc, #36]	; (10046b94 <Release_AirBags+0x70>)
10046b70:	f7fc fad8 	bl	10043124 <Clock_Wait>
	for (int i=0; i<numBags; i++) {
10046b74:	3401      	adds	r4, #1

		Close_Valve_Small(currentBag);
10046b76:	0028      	movs	r0, r5
10046b78:	f7ff fcf8 	bl	1004656c <Close_Valve_Small>
		Close_Valve_Large();
10046b7c:	f7ff fd8c 	bl	10046698 <Close_Valve_Large>
		Close_Valve_Small_Final();
10046b80:	f7ff fd95 	bl	100466ae <Close_Valve_Small_Final>
	for (int i=0; i<numBags; i++) {
10046b84:	2c05      	cmp	r4, #5
10046b86:	d1e4      	bne.n	10046b52 <Release_AirBags+0x2e>
	}
}
10046b88:	bd37      	pop	{r0, r1, r2, r4, r5, pc}
10046b8a:	46c0      	nop			; (mov r8, r8)
10046b8c:	10058ab4 	.word	0x10058ab4
10046b90:	10058ad1 	.word	0x10058ad1
10046b94:	00004e20 	.word	0x00004e20

10046b98 <WriteHeader_Memory>:
// Function Name  : WriteHeader_Memory
// Description    : Write date & time header to memory
// Input          : None
// Return         : None
//*****************************************************************************
void WriteHeader_Memory(){
10046b98:	b5f0      	push	{r4, r5, r6, r7, lr}
10046b9a:	b08b      	sub	sp, #44	; 0x2c
	// Get current time
	stopTimeTicks = HAL_VTimerGetCurrentTime_sysT32();
10046b9c:	f006 f800 	bl	1004cba0 <HAL_VTimerGetCurrentTime_sysT32>
10046ba0:	4b79      	ldr	r3, [pc, #484]	; (10046d88 <WriteHeader_Memory+0x1f0>)
	uint32_t diffMillis = abs(HAL_VTimerDiff_ms_sysT32(stopTimeTicks,startTimeTicks));
	uint8_t maxDays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
10046ba2:	ad07      	add	r5, sp, #28
	stopTimeTicks = HAL_VTimerGetCurrentTime_sysT32();
10046ba4:	6018      	str	r0, [r3, #0]
	uint32_t diffMillis = abs(HAL_VTimerDiff_ms_sysT32(stopTimeTicks,startTimeTicks));
10046ba6:	6818      	ldr	r0, [r3, #0]
10046ba8:	4b78      	ldr	r3, [pc, #480]	; (10046d8c <WriteHeader_Memory+0x1f4>)
10046baa:	6819      	ldr	r1, [r3, #0]
10046bac:	f005 fff2 	bl	1004cb94 <HAL_VTimerDiff_ms_sysT32>
	uint8_t maxDays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
10046bb0:	4977      	ldr	r1, [pc, #476]	; (10046d90 <WriteHeader_Memory+0x1f8>)
	uint32_t diffMillis = abs(HAL_VTimerDiff_ms_sysT32(stopTimeTicks,startTimeTicks));
10046bb2:	17c3      	asrs	r3, r0, #31
10046bb4:	18c7      	adds	r7, r0, r3
	uint8_t maxDays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
10046bb6:	220c      	movs	r2, #12
10046bb8:	3146      	adds	r1, #70	; 0x46
10046bba:	0028      	movs	r0, r5
	uint32_t diffMillis = abs(HAL_VTimerDiff_ms_sysT32(stopTimeTicks,startTimeTicks));
10046bbc:	405f      	eors	r7, r3
	uint8_t maxDays[12] = {31,28,31,30,31,30,31,31,30,31,30,31};
10046bbe:	f001 fb00 	bl	100481c2 <memcpy>
	if ((year % 4) == 0){
10046bc2:	4b74      	ldr	r3, [pc, #464]	; (10046d94 <WriteHeader_Memory+0x1fc>)
10046bc4:	781b      	ldrb	r3, [r3, #0]
10046bc6:	079b      	lsls	r3, r3, #30
10046bc8:	d101      	bne.n	10046bce <WriteHeader_Memory+0x36>
		maxDays[1] = 29;
10046bca:	231d      	movs	r3, #29
10046bcc:	706b      	strb	r3, [r5, #1]
	}

	// Need to consider overflow since real time recorder is only 8 bits number
	minute += diffMillis / (60*1000);
10046bce:	4972      	ldr	r1, [pc, #456]	; (10046d98 <WriteHeader_Memory+0x200>)
10046bd0:	0038      	movs	r0, r7
10046bd2:	f7f9 facd 	bl	10040170 <__udivsi3>
10046bd6:	4c71      	ldr	r4, [pc, #452]	; (10046d9c <WriteHeader_Memory+0x204>)
	diffMillis %= 60*1000;
10046bd8:	496f      	ldr	r1, [pc, #444]	; (10046d98 <WriteHeader_Memory+0x200>)
	minute += diffMillis / (60*1000);
10046bda:	7826      	ldrb	r6, [r4, #0]
10046bdc:	b2f6      	uxtb	r6, r6
10046bde:	1836      	adds	r6, r6, r0
10046be0:	b2f6      	uxtb	r6, r6
10046be2:	7026      	strb	r6, [r4, #0]

	//Now diffTicks is in seconds level
	second += diffMillis / 1000;
10046be4:	4e6e      	ldr	r6, [pc, #440]	; (10046da0 <WriteHeader_Memory+0x208>)
10046be6:	7830      	ldrb	r0, [r6, #0]
10046be8:	b2c3      	uxtb	r3, r0
	diffMillis %= 60*1000;
10046bea:	0038      	movs	r0, r7
	second += diffMillis / 1000;
10046bec:	9305      	str	r3, [sp, #20]
	diffMillis %= 60*1000;
10046bee:	f7f9 fb45 	bl	1004027c <__aeabi_uidivmod>
10046bf2:	0008      	movs	r0, r1
	second += diffMillis / 1000;
10046bf4:	21fa      	movs	r1, #250	; 0xfa
10046bf6:	0089      	lsls	r1, r1, #2
10046bf8:	f7f9 faba 	bl	10040170 <__udivsi3>
10046bfc:	9b05      	ldr	r3, [sp, #20]
10046bfe:	1818      	adds	r0, r3, r0
10046c00:	b2c0      	uxtb	r0, r0
10046c02:	7030      	strb	r0, [r6, #0]

	//Time incrementation start
	if (second >= 60){
10046c04:	7833      	ldrb	r3, [r6, #0]
10046c06:	2b3b      	cmp	r3, #59	; 0x3b
10046c08:	d910      	bls.n	10046c2c <WriteHeader_Memory+0x94>
		minute += second/60;
10046c0a:	7830      	ldrb	r0, [r6, #0]
10046c0c:	213c      	movs	r1, #60	; 0x3c
10046c0e:	b2c0      	uxtb	r0, r0
10046c10:	f7f9 faae 	bl	10040170 <__udivsi3>
10046c14:	7827      	ldrb	r7, [r4, #0]
		second %= 60;
10046c16:	213c      	movs	r1, #60	; 0x3c
		minute += second/60;
10046c18:	b2ff      	uxtb	r7, r7
10046c1a:	183f      	adds	r7, r7, r0
10046c1c:	b2ff      	uxtb	r7, r7
10046c1e:	7027      	strb	r7, [r4, #0]
		second %= 60;
10046c20:	7830      	ldrb	r0, [r6, #0]
10046c22:	b2c0      	uxtb	r0, r0
10046c24:	f7f9 fb2a 	bl	1004027c <__aeabi_uidivmod>
10046c28:	b2c9      	uxtb	r1, r1
10046c2a:	7031      	strb	r1, [r6, #0]
	}

	if (minute >= 60){
10046c2c:	7823      	ldrb	r3, [r4, #0]
10046c2e:	4e5d      	ldr	r6, [pc, #372]	; (10046da4 <WriteHeader_Memory+0x20c>)
10046c30:	2b3b      	cmp	r3, #59	; 0x3b
10046c32:	d910      	bls.n	10046c56 <WriteHeader_Memory+0xbe>
		hour += minute/60;
10046c34:	7820      	ldrb	r0, [r4, #0]
10046c36:	213c      	movs	r1, #60	; 0x3c
10046c38:	b2c0      	uxtb	r0, r0
10046c3a:	f7f9 fa99 	bl	10040170 <__udivsi3>
10046c3e:	7837      	ldrb	r7, [r6, #0]
		minute %= 60;
10046c40:	213c      	movs	r1, #60	; 0x3c
		hour += minute/60;
10046c42:	b2ff      	uxtb	r7, r7
10046c44:	183f      	adds	r7, r7, r0
10046c46:	b2ff      	uxtb	r7, r7
10046c48:	7037      	strb	r7, [r6, #0]
		minute %= 60;
10046c4a:	7820      	ldrb	r0, [r4, #0]
10046c4c:	b2c0      	uxtb	r0, r0
10046c4e:	f7f9 fb15 	bl	1004027c <__aeabi_uidivmod>
10046c52:	b2c9      	uxtb	r1, r1
10046c54:	7021      	strb	r1, [r4, #0]
	}

	if (hour >= 24){
10046c56:	7833      	ldrb	r3, [r6, #0]
10046c58:	4c53      	ldr	r4, [pc, #332]	; (10046da8 <WriteHeader_Memory+0x210>)
10046c5a:	2b17      	cmp	r3, #23
10046c5c:	d910      	bls.n	10046c80 <WriteHeader_Memory+0xe8>
		day += hour/24;
10046c5e:	7830      	ldrb	r0, [r6, #0]
10046c60:	2118      	movs	r1, #24
10046c62:	b2c0      	uxtb	r0, r0
10046c64:	f7f9 fa84 	bl	10040170 <__udivsi3>
10046c68:	7827      	ldrb	r7, [r4, #0]
		hour %= 24;
10046c6a:	2118      	movs	r1, #24
		day += hour/24;
10046c6c:	b2ff      	uxtb	r7, r7
10046c6e:	183f      	adds	r7, r7, r0
10046c70:	b2ff      	uxtb	r7, r7
10046c72:	7027      	strb	r7, [r4, #0]
		hour %= 24;
10046c74:	7830      	ldrb	r0, [r6, #0]
10046c76:	b2c0      	uxtb	r0, r0
10046c78:	f7f9 fb00 	bl	1004027c <__aeabi_uidivmod>
10046c7c:	b2c9      	uxtb	r1, r1
10046c7e:	7031      	strb	r1, [r6, #0]
	}

	if (month == 0){
10046c80:	4b4a      	ldr	r3, [pc, #296]	; (10046dac <WriteHeader_Memory+0x214>)
10046c82:	781a      	ldrb	r2, [r3, #0]
10046c84:	2a00      	cmp	r2, #0
10046c86:	d101      	bne.n	10046c8c <WriteHeader_Memory+0xf4>
		month = 1;
10046c88:	3201      	adds	r2, #1
10046c8a:	701a      	strb	r2, [r3, #0]
	}

	if (day > maxDays[month-1]){
10046c8c:	7819      	ldrb	r1, [r3, #0]
10046c8e:	7822      	ldrb	r2, [r4, #0]
10046c90:	186d      	adds	r5, r5, r1
10046c92:	3d01      	subs	r5, #1
10046c94:	7829      	ldrb	r1, [r5, #0]
10046c96:	4291      	cmp	r1, r2
10046c98:	d205      	bcs.n	10046ca6 <WriteHeader_Memory+0x10e>
		month += 1;
10046c9a:	781a      	ldrb	r2, [r3, #0]
10046c9c:	3201      	adds	r2, #1
10046c9e:	b2d2      	uxtb	r2, r2
10046ca0:	701a      	strb	r2, [r3, #0]
		day = 1;
10046ca2:	2201      	movs	r2, #1
10046ca4:	7022      	strb	r2, [r4, #0]
	}

	if (month>12){
10046ca6:	781a      	ldrb	r2, [r3, #0]
10046ca8:	2a0c      	cmp	r2, #12
10046caa:	d907      	bls.n	10046cbc <WriteHeader_Memory+0x124>
		year += 1;
10046cac:	4a39      	ldr	r2, [pc, #228]	; (10046d94 <WriteHeader_Memory+0x1fc>)
10046cae:	4939      	ldr	r1, [pc, #228]	; (10046d94 <WriteHeader_Memory+0x1fc>)
10046cb0:	7812      	ldrb	r2, [r2, #0]
10046cb2:	3201      	adds	r2, #1
10046cb4:	b2d2      	uxtb	r2, r2
10046cb6:	700a      	strb	r2, [r1, #0]
		month = 1;
10046cb8:	2201      	movs	r2, #1
10046cba:	701a      	strb	r2, [r3, #0]
	}

	// Header starts with ABCDEF
	SPI_WriteEnable_Memory();
10046cbc:	f7ff fa8a 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, 0xAB, TRUE);
10046cc0:	4c3b      	ldr	r4, [pc, #236]	; (10046db0 <WriteHeader_Memory+0x218>)
10046cc2:	2201      	movs	r2, #1
10046cc4:	6820      	ldr	r0, [r4, #0]
10046cc6:	21ab      	movs	r1, #171	; 0xab
10046cc8:	f7ff faac 	bl	10046224 <SPI_Write_Memory>
	SPI_WriteEnable_Memory();
10046ccc:	f7ff fa82 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, 0xCD, TRUE);
10046cd0:	6820      	ldr	r0, [r4, #0]
10046cd2:	2201      	movs	r2, #1
10046cd4:	21cd      	movs	r1, #205	; 0xcd
10046cd6:	f7ff faa5 	bl	10046224 <SPI_Write_Memory>
	SPI_WriteEnable_Memory();
10046cda:	f7ff fa7b 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, 0xEF, TRUE);
10046cde:	6820      	ldr	r0, [r4, #0]
10046ce0:	2201      	movs	r2, #1
10046ce2:	21ef      	movs	r1, #239	; 0xef
10046ce4:	f7ff fa9e 	bl	10046224 <SPI_Write_Memory>

	// Write date & time data
	SPI_WriteEnable_Memory();
10046ce8:	f7ff fa74 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, year, TRUE);
10046cec:	4d29      	ldr	r5, [pc, #164]	; (10046d94 <WriteHeader_Memory+0x1fc>)
10046cee:	6820      	ldr	r0, [r4, #0]
10046cf0:	7829      	ldrb	r1, [r5, #0]
10046cf2:	2201      	movs	r2, #1
10046cf4:	b2c9      	uxtb	r1, r1
10046cf6:	f7ff fa95 	bl	10046224 <SPI_Write_Memory>
	SPI_WriteEnable_Memory();
10046cfa:	f7ff fa6b 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, month, TRUE);
10046cfe:	4e2b      	ldr	r6, [pc, #172]	; (10046dac <WriteHeader_Memory+0x214>)
10046d00:	6820      	ldr	r0, [r4, #0]
10046d02:	7831      	ldrb	r1, [r6, #0]
10046d04:	2201      	movs	r2, #1
10046d06:	b2c9      	uxtb	r1, r1
10046d08:	f7ff fa8c 	bl	10046224 <SPI_Write_Memory>
	SPI_WriteEnable_Memory();
10046d0c:	f7ff fa62 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, day, TRUE);
10046d10:	4f25      	ldr	r7, [pc, #148]	; (10046da8 <WriteHeader_Memory+0x210>)
10046d12:	6820      	ldr	r0, [r4, #0]
10046d14:	7839      	ldrb	r1, [r7, #0]
10046d16:	2201      	movs	r2, #1
10046d18:	b2c9      	uxtb	r1, r1
10046d1a:	f7ff fa83 	bl	10046224 <SPI_Write_Memory>
	SPI_WriteEnable_Memory();
10046d1e:	f7ff fa59 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, hour, TRUE);
10046d22:	4b20      	ldr	r3, [pc, #128]	; (10046da4 <WriteHeader_Memory+0x20c>)
10046d24:	6820      	ldr	r0, [r4, #0]
10046d26:	7819      	ldrb	r1, [r3, #0]
10046d28:	2201      	movs	r2, #1
10046d2a:	b2c9      	uxtb	r1, r1
10046d2c:	f7ff fa7a 	bl	10046224 <SPI_Write_Memory>
	SPI_WriteEnable_Memory();
10046d30:	f7ff fa50 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, minute, TRUE);
10046d34:	4b19      	ldr	r3, [pc, #100]	; (10046d9c <WriteHeader_Memory+0x204>)
10046d36:	6820      	ldr	r0, [r4, #0]
10046d38:	7819      	ldrb	r1, [r3, #0]
10046d3a:	2201      	movs	r2, #1
10046d3c:	b2c9      	uxtb	r1, r1
10046d3e:	f7ff fa71 	bl	10046224 <SPI_Write_Memory>

	// Reserve byte to make header length 9 bytes
	SPI_WriteEnable_Memory();
10046d42:	f7ff fa47 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, 0x00, TRUE);
10046d46:	2201      	movs	r2, #1
10046d48:	2100      	movs	r1, #0
10046d4a:	6820      	ldr	r0, [r4, #0]
10046d4c:	f7ff fa6a 	bl	10046224 <SPI_Write_Memory>

	// Will now measure time from this new header
	startTimeTicks = HAL_VTimerGetCurrentTime_sysT32();
10046d50:	f005 ff26 	bl	1004cba0 <HAL_VTimerGetCurrentTime_sysT32>
10046d54:	4b0d      	ldr	r3, [pc, #52]	; (10046d8c <WriteHeader_Memory+0x1f4>)

	SEGGER_RTT_printf(0, "Header wrote: %d/%d/%d %d:%d; ending at memory location %d\n", day, month, year+2000, hour, minute, currentAddress);
10046d56:	6824      	ldr	r4, [r4, #0]
	startTimeTicks = HAL_VTimerGetCurrentTime_sysT32();
10046d58:	6018      	str	r0, [r3, #0]
	SEGGER_RTT_printf(0, "Header wrote: %d/%d/%d %d:%d; ending at memory location %d\n", day, month, year+2000, hour, minute, currentAddress);
10046d5a:	4812      	ldr	r0, [pc, #72]	; (10046da4 <WriteHeader_Memory+0x20c>)
10046d5c:	783a      	ldrb	r2, [r7, #0]
10046d5e:	7833      	ldrb	r3, [r6, #0]
10046d60:	7829      	ldrb	r1, [r5, #0]
10046d62:	7800      	ldrb	r0, [r0, #0]
10046d64:	4d0d      	ldr	r5, [pc, #52]	; (10046d9c <WriteHeader_Memory+0x204>)
10046d66:	b2d2      	uxtb	r2, r2
10046d68:	782d      	ldrb	r5, [r5, #0]
10046d6a:	9001      	str	r0, [sp, #4]
10046d6c:	20fa      	movs	r0, #250	; 0xfa
10046d6e:	00c0      	lsls	r0, r0, #3
10046d70:	1809      	adds	r1, r1, r0
10046d72:	9100      	str	r1, [sp, #0]
10046d74:	b2db      	uxtb	r3, r3
10046d76:	9403      	str	r4, [sp, #12]
10046d78:	9502      	str	r5, [sp, #8]
10046d7a:	490e      	ldr	r1, [pc, #56]	; (10046db4 <WriteHeader_Memory+0x21c>)
10046d7c:	2000      	movs	r0, #0
10046d7e:	f7fd fef8 	bl	10044b72 <SEGGER_RTT_printf>
}
10046d82:	b00b      	add	sp, #44	; 0x2c
10046d84:	bdf0      	pop	{r4, r5, r6, r7, pc}
10046d86:	46c0      	nop			; (mov r8, r8)
10046d88:	200008c4 	.word	0x200008c4
10046d8c:	200008f0 	.word	0x200008f0
10046d90:	10058235 	.word	0x10058235
10046d94:	20000916 	.word	0x20000916
10046d98:	0000ea60 	.word	0x0000ea60
10046d9c:	200008fa 	.word	0x200008fa
10046da0:	200008f6 	.word	0x200008f6
10046da4:	20000909 	.word	0x20000909
10046da8:	20000917 	.word	0x20000917
10046dac:	200008f4 	.word	0x200008f4
10046db0:	200008fc 	.word	0x200008fc
10046db4:	10058ae3 	.word	0x10058ae3

10046db8 <WritePressures_Memory>:
// Function Name  : WritePressures_Memory
// Description    : Write pressure data to memory
// Input          : None
// Return         : None
//*****************************************************************************
void WritePressures_Memory(){
10046db8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	// Length of header is minutes (2 bytes) + pressure values (16 bytes)

	// Calculate minutes from header time
	uint32_t minutes_pressureWrite;
	stopTimeTicks = HAL_VTimerGetCurrentTime_sysT32();
10046dba:	f005 fef1 	bl	1004cba0 <HAL_VTimerGetCurrentTime_sysT32>
10046dbe:	4b1d      	ldr	r3, [pc, #116]	; (10046e34 <WritePressures_Memory+0x7c>)
10046dc0:	6018      	str	r0, [r3, #0]
	uint32_t diffMillis = abs(HAL_VTimerDiff_ms_sysT32(stopTimeTicks,startTimeTicks));
10046dc2:	6818      	ldr	r0, [r3, #0]
10046dc4:	4b1c      	ldr	r3, [pc, #112]	; (10046e38 <WritePressures_Memory+0x80>)
10046dc6:	6819      	ldr	r1, [r3, #0]
10046dc8:	f005 fee4 	bl	1004cb94 <HAL_VTimerDiff_ms_sysT32>
10046dcc:	17c3      	asrs	r3, r0, #31
10046dce:	18c0      	adds	r0, r0, r3
10046dd0:	4058      	eors	r0, r3
	minutes_pressureWrite = diffMillis / (60*1000);
10046dd2:	491a      	ldr	r1, [pc, #104]	; (10046e3c <WritePressures_Memory+0x84>)
10046dd4:	f7f9 f9cc 	bl	10040170 <__udivsi3>
10046dd8:	0005      	movs	r5, r0

	// Write difference in minutes from header time
	SPI_WriteEnable_Memory();
10046dda:	f7ff f9fb 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, (uint8_t)(minutes_pressureWrite>>8), TRUE);
10046dde:	4c18      	ldr	r4, [pc, #96]	; (10046e40 <WritePressures_Memory+0x88>)
10046de0:	0a29      	lsrs	r1, r5, #8
10046de2:	b2c9      	uxtb	r1, r1
10046de4:	2201      	movs	r2, #1
10046de6:	6820      	ldr	r0, [r4, #0]
10046de8:	f7ff fa1c 	bl	10046224 <SPI_Write_Memory>
	SPI_WriteEnable_Memory();
10046dec:	f7ff f9f2 	bl	100461d4 <SPI_WriteEnable_Memory>
	SPI_Write_Memory(currentAddress, (uint8_t)minutes_pressureWrite, TRUE);
10046df0:	b2e9      	uxtb	r1, r5
10046df2:	2201      	movs	r2, #1
10046df4:	6820      	ldr	r0, [r4, #0]
10046df6:	f7ff fa15 	bl	10046224 <SPI_Write_Memory>

	for (int i=0; i<8; i++){
10046dfa:	2500      	movs	r5, #0
		// Write sensor values to memory
		SPI_WriteEnable_Memory();
10046dfc:	f7ff f9ea 	bl	100461d4 <SPI_WriteEnable_Memory>
		SPI_Write_Memory(currentAddress, CurrentPressures[i]>>8, TRUE);
10046e00:	4e10      	ldr	r6, [pc, #64]	; (10046e44 <WritePressures_Memory+0x8c>)
10046e02:	006f      	lsls	r7, r5, #1
10046e04:	5bb9      	ldrh	r1, [r7, r6]
10046e06:	2201      	movs	r2, #1
10046e08:	0a09      	lsrs	r1, r1, #8
10046e0a:	6820      	ldr	r0, [r4, #0]
10046e0c:	f7ff fa0a 	bl	10046224 <SPI_Write_Memory>
		SPI_WriteEnable_Memory();
10046e10:	f7ff f9e0 	bl	100461d4 <SPI_WriteEnable_Memory>
		SPI_Write_Memory(currentAddress, CurrentPressures[i], TRUE);
10046e14:	5bb9      	ldrh	r1, [r7, r6]
10046e16:	2201      	movs	r2, #1
10046e18:	b2c9      	uxtb	r1, r1
10046e1a:	6820      	ldr	r0, [r4, #0]
	for (int i=0; i<8; i++){
10046e1c:	3501      	adds	r5, #1
		SPI_Write_Memory(currentAddress, CurrentPressures[i], TRUE);
10046e1e:	f7ff fa01 	bl	10046224 <SPI_Write_Memory>
	for (int i=0; i<8; i++){
10046e22:	2d08      	cmp	r5, #8
10046e24:	d1ea      	bne.n	10046dfc <WritePressures_Memory+0x44>
	}

	SEGGER_RTT_printf(0, "Wrote pressure values to memory, location ending at: %d\n", currentAddress);
10046e26:	6822      	ldr	r2, [r4, #0]
10046e28:	4907      	ldr	r1, [pc, #28]	; (10046e48 <WritePressures_Memory+0x90>)
10046e2a:	2000      	movs	r0, #0
10046e2c:	f7fd fea1 	bl	10044b72 <SEGGER_RTT_printf>
}
10046e30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10046e32:	46c0      	nop			; (mov r8, r8)
10046e34:	200008c4 	.word	0x200008c4
10046e38:	200008f0 	.word	0x200008f0
10046e3c:	0000ea60 	.word	0x0000ea60
10046e40:	200008fc 	.word	0x200008fc
10046e44:	20000926 	.word	0x20000926
10046e48:	10058b3b 	.word	0x10058b3b

10046e4c <External_Find_Last_Entry>:
// Description    : Use binary search to find last unwritten address
//					Memory section must be written in a way that there is no jumps
// Input          : None
// Return         : First 0xFF address in memory range
//*****************************************************************************
uint32_t External_Find_Last_Entry(){
10046e4c:	b570      	push	{r4, r5, r6, lr}
	uint32_t low = 0;
10046e4e:	2500      	movs	r5, #0
	uint32_t high = 0x3fffff;
10046e50:	4e07      	ldr	r6, [pc, #28]	; (10046e70 <External_Find_Last_Entry+0x24>)
	uint8_t value = 0;
	while (high>low){
		uint32_t middle = low + (high - low)/2;
10046e52:	1b74      	subs	r4, r6, r5
10046e54:	0864      	lsrs	r4, r4, #1
10046e56:	1964      	adds	r4, r4, r5
		value = SPI_Read_Memory(middle);
10046e58:	0020      	movs	r0, r4
10046e5a:	f7ff f993 	bl	10046184 <SPI_Read_Memory>
		if (value == 0xFF) {
10046e5e:	28ff      	cmp	r0, #255	; 0xff
10046e60:	d004      	beq.n	10046e6c <External_Find_Last_Entry+0x20>
			high = middle;
		}
		else {
			low = middle+1;
10046e62:	1c65      	adds	r5, r4, #1
	while (high>low){
10046e64:	42ae      	cmp	r6, r5
10046e66:	d8f4      	bhi.n	10046e52 <External_Find_Last_Entry+0x6>
		}
	}
	return low;
}
10046e68:	0028      	movs	r0, r5
10046e6a:	bd70      	pop	{r4, r5, r6, pc}
			high = middle;
10046e6c:	0026      	movs	r6, r4
10046e6e:	e7f9      	b.n	10046e64 <External_Find_Last_Entry+0x18>
10046e70:	003fffff 	.word	0x003fffff

10046e74 <ReadDeviceNum_IntFlash>:
// Function Name  : ReadDeviceNum_IntFlash
// Description    : Read value of device id from memory
// Input          : Array to put in device ID
// Return         : If read was successful
//*****************************************************************************
BOOL ReadDeviceNum_IntFlash(uint8_t* deviceNum){
10046e74:	b510      	push	{r4, lr}
10046e76:	0004      	movs	r4, r0
	// Read from flash to get new device identifier
	deviceNum[0] = FLASH_ReadByte(device_num_address+3);
10046e78:	480e      	ldr	r0, [pc, #56]	; (10046eb4 <ReadDeviceNum_IntFlash+0x40>)
10046e7a:	f7fc fffb 	bl	10043e74 <FLASH_ReadByte>
10046e7e:	7020      	strb	r0, [r4, #0]
	deviceNum[1] = FLASH_ReadByte(device_num_address+2);
10046e80:	480d      	ldr	r0, [pc, #52]	; (10046eb8 <ReadDeviceNum_IntFlash+0x44>)
10046e82:	f7fc fff7 	bl	10043e74 <FLASH_ReadByte>
10046e86:	7060      	strb	r0, [r4, #1]
	deviceNum[2] = FLASH_ReadByte(device_num_address+1);
10046e88:	480c      	ldr	r0, [pc, #48]	; (10046ebc <ReadDeviceNum_IntFlash+0x48>)
10046e8a:	f7fc fff3 	bl	10043e74 <FLASH_ReadByte>

	if ( (0x30<=deviceNum[0]) && (deviceNum[0]<=0x39) && (0x30<=deviceNum[1]) && (deviceNum[1]<=0x39)
10046e8e:	7822      	ldrb	r2, [r4, #0]
	deviceNum[2] = FLASH_ReadByte(device_num_address+1);
10046e90:	0003      	movs	r3, r0
	if ( (0x30<=deviceNum[0]) && (deviceNum[0]<=0x39) && (0x30<=deviceNum[1]) && (deviceNum[1]<=0x39)
10046e92:	3a30      	subs	r2, #48	; 0x30
	deviceNum[2] = FLASH_ReadByte(device_num_address+1);
10046e94:	70a0      	strb	r0, [r4, #2]
			&& (0x30<=deviceNum[2]) && (deviceNum[2]<=0x39) ){
		return TRUE;
	}
	else {
		return FALSE;
10046e96:	2000      	movs	r0, #0
	if ( (0x30<=deviceNum[0]) && (deviceNum[0]<=0x39) && (0x30<=deviceNum[1]) && (deviceNum[1]<=0x39)
10046e98:	2a09      	cmp	r2, #9
10046e9a:	d809      	bhi.n	10046eb0 <ReadDeviceNum_IntFlash+0x3c>
10046e9c:	7862      	ldrb	r2, [r4, #1]
10046e9e:	3a30      	subs	r2, #48	; 0x30
10046ea0:	2a09      	cmp	r2, #9
10046ea2:	d805      	bhi.n	10046eb0 <ReadDeviceNum_IntFlash+0x3c>
			&& (0x30<=deviceNum[2]) && (deviceNum[2]<=0x39) ){
10046ea4:	2209      	movs	r2, #9
10046ea6:	3b30      	subs	r3, #48	; 0x30
10046ea8:	b2db      	uxtb	r3, r3
10046eaa:	429a      	cmp	r2, r3
10046eac:	4140      	adcs	r0, r0
		return TRUE;
10046eae:	b2c0      	uxtb	r0, r0
	}
}
10046eb0:	bd10      	pop	{r4, pc}
10046eb2:	46c0      	nop			; (mov r8, r8)
10046eb4:	1005a803 	.word	0x1005a803
10046eb8:	1005a802 	.word	0x1005a802
10046ebc:	1005a801 	.word	0x1005a801

10046ec0 <WriteDeviceNum_IntFlash>:
// Function Name  : WriteDeviceNum_IntFlash
// Description    : Write value of device id to memory
// Input          : Array to put in device ID
// Return         : None
//*****************************************************************************
void WriteDeviceNum_IntFlash(uint8_t* deviceNum) {
10046ec0:	b570      	push	{r4, r5, r6, lr}
10046ec2:	0004      	movs	r4, r0
	uint8_t num2 = FLASH_ReadByte(device_num_address+1);
10046ec4:	481a      	ldr	r0, [pc, #104]	; (10046f30 <WriteDeviceNum_IntFlash+0x70>)
10046ec6:	f7fc ffd5 	bl	10043e74 <FLASH_ReadByte>
10046eca:	0005      	movs	r5, r0
	uint8_t num1 = FLASH_ReadByte(device_num_address+2);
10046ecc:	4819      	ldr	r0, [pc, #100]	; (10046f34 <WriteDeviceNum_IntFlash+0x74>)
10046ece:	f7fc ffd1 	bl	10043e74 <FLASH_ReadByte>
10046ed2:	0006      	movs	r6, r0
	uint8_t num0 = FLASH_ReadByte(device_num_address+3);
10046ed4:	4818      	ldr	r0, [pc, #96]	; (10046f38 <WriteDeviceNum_IntFlash+0x78>)
10046ed6:	f7fc ffcd 	bl	10043e74 <FLASH_ReadByte>
10046eda:	7823      	ldrb	r3, [r4, #0]

	// If memory has not been written to
	if ((num2 == 0xFF) && (num1 == 0xFF) && (num0 == 0xFF)){
10046edc:	2dff      	cmp	r5, #255	; 0xff
10046ede:	d111      	bne.n	10046f04 <WriteDeviceNum_IntFlash+0x44>
10046ee0:	2eff      	cmp	r6, #255	; 0xff
10046ee2:	d10f      	bne.n	10046f04 <WriteDeviceNum_IntFlash+0x44>
10046ee4:	28ff      	cmp	r0, #255	; 0xff
10046ee6:	d10d      	bne.n	10046f04 <WriteDeviceNum_IntFlash+0x44>
		uint32_t identifier = 0;
		identifier += ('0'+deviceNum[2])<<8;
10046ee8:	78a1      	ldrb	r1, [r4, #2]
		identifier += ('0'+deviceNum[1])<<16;
10046eea:	7862      	ldrb	r2, [r4, #1]
		identifier += ('0'+deviceNum[2])<<8;
10046eec:	3130      	adds	r1, #48	; 0x30
		identifier += ('0'+deviceNum[1])<<16;
10046eee:	3230      	adds	r2, #48	; 0x30
		identifier += ('0'+deviceNum[2])<<8;
10046ef0:	0209      	lsls	r1, r1, #8
		identifier += ('0'+deviceNum[1])<<16;
10046ef2:	0412      	lsls	r2, r2, #16
		identifier += ('0'+deviceNum[0])<<24;
10046ef4:	3330      	adds	r3, #48	; 0x30
		identifier += ('0'+deviceNum[1])<<16;
10046ef6:	1889      	adds	r1, r1, r2
		identifier += ('0'+deviceNum[0])<<24;
10046ef8:	061b      	lsls	r3, r3, #24

		//Rewrite
		uint32_t identifier = 0;
		identifier += ('0'+deviceNum[2])<<8;
		identifier += ('0'+deviceNum[1])<<16;
		identifier += ('0'+deviceNum[0])<<24;
10046efa:	18c9      	adds	r1, r1, r3
		FLASH_ProgramWord(device_num_address, identifier);
10046efc:	480f      	ldr	r0, [pc, #60]	; (10046f3c <WriteDeviceNum_IntFlash+0x7c>)
10046efe:	f7fc ffdd 	bl	10043ebc <FLASH_ProgramWord>
	}
}
10046f02:	bd70      	pop	{r4, r5, r6, pc}
	else if ((num0 != deviceNum[0]) || (num1 != deviceNum[1]) || (num2 != deviceNum[2])){
10046f04:	4283      	cmp	r3, r0
10046f06:	d105      	bne.n	10046f14 <WriteDeviceNum_IntFlash+0x54>
10046f08:	7863      	ldrb	r3, [r4, #1]
10046f0a:	42b3      	cmp	r3, r6
10046f0c:	d102      	bne.n	10046f14 <WriteDeviceNum_IntFlash+0x54>
10046f0e:	78a3      	ldrb	r3, [r4, #2]
10046f10:	42ab      	cmp	r3, r5
10046f12:	d0f6      	beq.n	10046f02 <WriteDeviceNum_IntFlash+0x42>
		FLASH_ErasePage(device_num_page);
10046f14:	2035      	movs	r0, #53	; 0x35
10046f16:	f7fc ffb9 	bl	10043e8c <FLASH_ErasePage>
		identifier += ('0'+deviceNum[2])<<8;
10046f1a:	78a1      	ldrb	r1, [r4, #2]
		identifier += ('0'+deviceNum[1])<<16;
10046f1c:	7863      	ldrb	r3, [r4, #1]
		identifier += ('0'+deviceNum[2])<<8;
10046f1e:	3130      	adds	r1, #48	; 0x30
		identifier += ('0'+deviceNum[1])<<16;
10046f20:	3330      	adds	r3, #48	; 0x30
		identifier += ('0'+deviceNum[2])<<8;
10046f22:	0209      	lsls	r1, r1, #8
		identifier += ('0'+deviceNum[1])<<16;
10046f24:	041b      	lsls	r3, r3, #16
10046f26:	18cb      	adds	r3, r1, r3
		identifier += ('0'+deviceNum[0])<<24;
10046f28:	7821      	ldrb	r1, [r4, #0]
10046f2a:	3130      	adds	r1, #48	; 0x30
10046f2c:	0609      	lsls	r1, r1, #24
10046f2e:	e7e4      	b.n	10046efa <WriteDeviceNum_IntFlash+0x3a>
10046f30:	1005a801 	.word	0x1005a801
10046f34:	1005a802 	.word	0x1005a802
10046f38:	1005a803 	.word	0x1005a803
10046f3c:	1005a800 	.word	0x1005a800

10046f40 <ReadLP_IntFlash>:
// Function Name  : ReadLP_IntFlash
// Description    : Read lower bound pressure from internal memory
// Input          : None
// Return         : lower bound pressure
//*****************************************************************************
uint16_t ReadLP_IntFlash(){
10046f40:	b510      	push	{r4, lr}
	// Read from flash to get new data
	uint16_t lp = (uint16_t)FLASH_ReadWord(lowerPressure_address);
10046f42:	4808      	ldr	r0, [pc, #32]	; (10046f64 <ReadLP_IntFlash+0x24>)
10046f44:	f7fc ff94 	bl	10043e70 <FLASH_ReadWord>

	// If uninitialized
	if (lp == 0xFFFF || lp < 0 || lp > 300) {
10046f48:	2396      	movs	r3, #150	; 0x96
	uint16_t lp = (uint16_t)FLASH_ReadWord(lowerPressure_address);
10046f4a:	b284      	uxth	r4, r0
	if (lp == 0xFFFF || lp < 0 || lp > 300) {
10046f4c:	005b      	lsls	r3, r3, #1
10046f4e:	429c      	cmp	r4, r3
10046f50:	d900      	bls.n	10046f54 <ReadLP_IntFlash+0x14>
		lp = 12; // 12 mmHg
10046f52:	240c      	movs	r4, #12
	}

	SEGGER_RTT_printf(0, "Read lower bound pressure. lowerBoundPressure = %d; \n", lp);
10046f54:	0022      	movs	r2, r4
10046f56:	4904      	ldr	r1, [pc, #16]	; (10046f68 <ReadLP_IntFlash+0x28>)
10046f58:	2000      	movs	r0, #0
10046f5a:	f7fd fe0a 	bl	10044b72 <SEGGER_RTT_printf>

	return lp;
}
10046f5e:	0020      	movs	r0, r4
10046f60:	bd10      	pop	{r4, pc}
10046f62:	46c0      	nop			; (mov r8, r8)
10046f64:	1005c000 	.word	0x1005c000
10046f68:	100588f2 	.word	0x100588f2

10046f6c <ReadUP_IntFlash>:
// Function Name  : ReadUP_IntFlash
// Description    : Read upper bound pressure from internal memory
// Input          : None
// Return         : upper bound pressure
//*****************************************************************************
uint16_t ReadUP_IntFlash(){
10046f6c:	b510      	push	{r4, lr}
	// Read from flash to get new data
	uint16_t up = (uint16_t)FLASH_ReadWord(upperPressure_address);
10046f6e:	4808      	ldr	r0, [pc, #32]	; (10046f90 <ReadUP_IntFlash+0x24>)
10046f70:	f7fc ff7e 	bl	10043e70 <FLASH_ReadWord>

	// If uninitialized
	if (up == 0xFFFF || up < 0 || up > 300) {
10046f74:	2396      	movs	r3, #150	; 0x96
	uint16_t up = (uint16_t)FLASH_ReadWord(upperPressure_address);
10046f76:	b284      	uxth	r4, r0
	if (up == 0xFFFF || up < 0 || up > 300) {
10046f78:	005b      	lsls	r3, r3, #1
10046f7a:	429c      	cmp	r4, r3
10046f7c:	d900      	bls.n	10046f80 <ReadUP_IntFlash+0x14>
		up = 52; // 52 mmHg
10046f7e:	2434      	movs	r4, #52	; 0x34
	}

	SEGGER_RTT_printf(0, "Read upper bound pressure. upperBoundPressure = %d; \n", up);
10046f80:	0022      	movs	r2, r4
10046f82:	4904      	ldr	r1, [pc, #16]	; (10046f94 <ReadUP_IntFlash+0x28>)
10046f84:	2000      	movs	r0, #0
10046f86:	f7fd fdf4 	bl	10044b72 <SEGGER_RTT_printf>

	return up;
}
10046f8a:	0020      	movs	r0, r4
10046f8c:	bd10      	pop	{r4, pc}
10046f8e:	46c0      	nop			; (mov r8, r8)
10046f90:	1005c800 	.word	0x1005c800
10046f94:	100589d2 	.word	0x100589d2

10046f98 <ReadTP_IntFlash>:
// Function Name  : ReadTP_IntFlash
// Description    : Read target pressure from internal memory
// Input          : None
// Return         : target pressure
//*****************************************************************************
uint16_t ReadTP_IntFlash(){
10046f98:	b510      	push	{r4, lr}
	// Read from flash to get new data
	uint16_t tp = (uint16_t)FLASH_ReadWord(targetPressure_address);
10046f9a:	4808      	ldr	r0, [pc, #32]	; (10046fbc <ReadTP_IntFlash+0x24>)
10046f9c:	f7fc ff68 	bl	10043e70 <FLASH_ReadWord>

	// If uninitialized
	if (tp == 0xFFFF || tp < 0 || tp > 300) { //TODO: consider cases such as upperBound < lowerBound
10046fa0:	2396      	movs	r3, #150	; 0x96
	uint16_t tp = (uint16_t)FLASH_ReadWord(targetPressure_address);
10046fa2:	b284      	uxth	r4, r0
	if (tp == 0xFFFF || tp < 0 || tp > 300) { //TODO: consider cases such as upperBound < lowerBound
10046fa4:	005b      	lsls	r3, r3, #1
10046fa6:	429c      	cmp	r4, r3
10046fa8:	d900      	bls.n	10046fac <ReadTP_IntFlash+0x14>
		tp = 32; // 32 mmHg
10046faa:	2420      	movs	r4, #32
	}

	SEGGER_RTT_printf(0, "Read target pressure. targetPressure = %d; \n", tp);
10046fac:	0022      	movs	r2, r4
10046fae:	4904      	ldr	r1, [pc, #16]	; (10046fc0 <ReadTP_IntFlash+0x28>)
10046fb0:	2000      	movs	r0, #0
10046fb2:	f7fd fdde 	bl	10044b72 <SEGGER_RTT_printf>

	return tp;
}
10046fb6:	0020      	movs	r0, r4
10046fb8:	bd10      	pop	{r4, pc}
10046fba:	46c0      	nop			; (mov r8, r8)
10046fbc:	1005d000 	.word	0x1005d000
10046fc0:	100589a5 	.word	0x100589a5

10046fc4 <ReadSP_IntFlash>:
// Function Name  : ReadSP_IntFlash
// Description    : Read sampling period from internal memory
// Input          : None
// Return         : sampling period
//*****************************************************************************
uint8_t ReadSP_IntFlash(){
10046fc4:	b510      	push	{r4, lr}
	// Read from flash to get new data
	uint8_t sp = (uint8_t)FLASH_ReadWord(samplePeriod_address);
10046fc6:	4808      	ldr	r0, [pc, #32]	; (10046fe8 <ReadSP_IntFlash+0x24>)
10046fc8:	f7fc ff52 	bl	10043e70 <FLASH_ReadWord>
10046fcc:	b2c4      	uxtb	r4, r0

	// If uninitialized
	if (sp == 0xFF || sp <= 0) {
10046fce:	1e63      	subs	r3, r4, #1
10046fd0:	b2db      	uxtb	r3, r3
10046fd2:	2bfd      	cmp	r3, #253	; 0xfd
10046fd4:	d900      	bls.n	10046fd8 <ReadSP_IntFlash+0x14>
		sp = 5; // 5 minutes
10046fd6:	2405      	movs	r4, #5
	}

	SEGGER_RTT_printf(0, "Read sampling period. Sampling period = %d; \n", sp);
10046fd8:	0022      	movs	r2, r4
10046fda:	4904      	ldr	r1, [pc, #16]	; (10046fec <ReadSP_IntFlash+0x28>)
10046fdc:	2000      	movs	r0, #0
10046fde:	f7fd fdc8 	bl	10044b72 <SEGGER_RTT_printf>

	return sp;
}
10046fe2:	0020      	movs	r0, r4
10046fe4:	bd10      	pop	{r4, pc}
10046fe6:	46c0      	nop			; (mov r8, r8)
10046fe8:	1005d800 	.word	0x1005d800
10046fec:	10058977 	.word	0x10058977

10046ff0 <ReadNS_IntFlash>:
// Function Name  : ReadNS_IntFlash
// Description    : Read no. of samples from internal memory
// Input          : None
// Return         : no. of samples
//*****************************************************************************
uint8_t ReadNS_IntFlash(){
10046ff0:	b510      	push	{r4, lr}
	// Read from flash to get new data
	uint8_t ns = (uint8_t)FLASH_ReadWord(numSamples_address);
10046ff2:	4808      	ldr	r0, [pc, #32]	; (10047014 <ReadNS_IntFlash+0x24>)
10046ff4:	f7fc ff3c 	bl	10043e70 <FLASH_ReadWord>
10046ff8:	b2c4      	uxtb	r4, r0

	// If uninitialized
	if (ns == 0xFF || ns <= 0) {
10046ffa:	1e63      	subs	r3, r4, #1
10046ffc:	b2db      	uxtb	r3, r3
10046ffe:	2bfd      	cmp	r3, #253	; 0xfd
10047000:	d900      	bls.n	10047004 <ReadNS_IntFlash+0x14>
		ns = 4; // 5 minutes
10047002:	2404      	movs	r4, #4
	}

	SEGGER_RTT_printf(0, "Read no. of samples. Number of samples = %d; \n", ns);
10047004:	0022      	movs	r2, r4
10047006:	4904      	ldr	r1, [pc, #16]	; (10047018 <ReadNS_IntFlash+0x28>)
10047008:	2000      	movs	r0, #0
1004700a:	f7fd fdb2 	bl	10044b72 <SEGGER_RTT_printf>

	return ns;
}
1004700e:	0020      	movs	r0, r4
10047010:	bd10      	pop	{r4, pc}
10047012:	46c0      	nop			; (mov r8, r8)
10047014:	1005e000 	.word	0x1005e000
10047018:	10058948 	.word	0x10058948

1004701c <ReadMode_IntFlash>:
// Function Name  : ReadMode_IntFlash
// Description    : Read no. of samples from internal memory
// Input          : None
// Return         : no. of samples
//*****************************************************************************
uint8_t ReadMode_IntFlash(){
1004701c:	b510      	push	{r4, lr}
	// Read from flash to get new data
	uint8_t mode = (uint8_t)FLASH_ReadWord(mode_address);
1004701e:	4808      	ldr	r0, [pc, #32]	; (10047040 <ReadMode_IntFlash+0x24>)
10047020:	f7fc ff26 	bl	10043e70 <FLASH_ReadWord>
10047024:	b2c0      	uxtb	r0, r0
10047026:	1c04      	adds	r4, r0, #0
10047028:	2800      	cmp	r0, #0
1004702a:	d000      	beq.n	1004702e <ReadMode_IntFlash+0x12>
1004702c:	2401      	movs	r4, #1
1004702e:	b2e4      	uxtb	r4, r4
	// If uninitialized
	if ((mode != 0x00) && (mode != 0x01)) {
		mode = 1; // Advanced mode
	}

	SEGGER_RTT_printf(0, "Read cushion mode. Mode = %d; \n", mode);
10047030:	0022      	movs	r2, r4
10047032:	4904      	ldr	r1, [pc, #16]	; (10047044 <ReadMode_IntFlash+0x28>)
10047034:	2000      	movs	r0, #0
10047036:	f7fd fd9c 	bl	10044b72 <SEGGER_RTT_printf>

	return mode;
}
1004703a:	0020      	movs	r0, r4
1004703c:	bd10      	pop	{r4, pc}
1004703e:	46c0      	nop			; (mov r8, r8)
10047040:	1005f800 	.word	0x1005f800
10047044:	10058928 	.word	0x10058928

10047048 <WriteLP_IntFlash>:
// Function Name  : WriteLP_IntFlash
// Description    : Write lower bound pressure to memory
// Input          : lower bound pressure
// Return         : None
//*****************************************************************************
void WriteLP_IntFlash(uint16_t lower) {
10047048:	b570      	push	{r4, r5, r6, lr}
1004704a:	0004      	movs	r4, r0
	uint8_t num1 = FLASH_ReadByte(lowerPressure_address);
1004704c:	480a      	ldr	r0, [pc, #40]	; (10047078 <WriteLP_IntFlash+0x30>)
1004704e:	f7fc ff11 	bl	10043e74 <FLASH_ReadByte>
10047052:	0005      	movs	r5, r0
	uint8_t num2 = FLASH_ReadByte(lowerPressure_address+1);
10047054:	4809      	ldr	r0, [pc, #36]	; (1004707c <WriteLP_IntFlash+0x34>)
10047056:	f7fc ff0d 	bl	10043e74 <FLASH_ReadByte>

	uint16_t lp = ((num2<<8) & num1);

	// If memory has not been written to
	if ((num1 == 0xFF) && (num2 == 0xFF)) {
1004705a:	2dff      	cmp	r5, #255	; 0xff
1004705c:	d106      	bne.n	1004706c <WriteLP_IntFlash+0x24>
1004705e:	28ff      	cmp	r0, #255	; 0xff
10047060:	d104      	bne.n	1004706c <WriteLP_IntFlash+0x24>
		//Erase
		FLASH_ErasePage(lowerPressure_page);
		//Rewrite
		uint32_t setting = 0;
		setting += (uint32_t)lower;
		FLASH_ProgramWord(lowerPressure_address, setting);
10047062:	0021      	movs	r1, r4
10047064:	4804      	ldr	r0, [pc, #16]	; (10047078 <WriteLP_IntFlash+0x30>)
10047066:	f7fc ff29 	bl	10043ebc <FLASH_ProgramWord>
	}
}
1004706a:	bd70      	pop	{r4, r5, r6, pc}
	else if (lp != lower) {
1004706c:	2c00      	cmp	r4, #0
1004706e:	d0fc      	beq.n	1004706a <WriteLP_IntFlash+0x22>
		FLASH_ErasePage(lowerPressure_page);
10047070:	2038      	movs	r0, #56	; 0x38
10047072:	f7fc ff0b 	bl	10043e8c <FLASH_ErasePage>
10047076:	e7f4      	b.n	10047062 <WriteLP_IntFlash+0x1a>
10047078:	1005c000 	.word	0x1005c000
1004707c:	1005c001 	.word	0x1005c001

10047080 <WriteUP_IntFlash>:
// Function Name  : WriteUP_IntFlash
// Description    : Write upper bound pressure to memory
// Input          : upper bound pressure
// Return         : None
//*****************************************************************************
void WriteUP_IntFlash(uint16_t upper) {
10047080:	b570      	push	{r4, r5, r6, lr}
10047082:	0004      	movs	r4, r0
	uint8_t num1 = FLASH_ReadByte(upperPressure_address);
10047084:	480a      	ldr	r0, [pc, #40]	; (100470b0 <WriteUP_IntFlash+0x30>)
10047086:	f7fc fef5 	bl	10043e74 <FLASH_ReadByte>
1004708a:	0005      	movs	r5, r0
	uint8_t num2 = FLASH_ReadByte(upperPressure_address+1);
1004708c:	4809      	ldr	r0, [pc, #36]	; (100470b4 <WriteUP_IntFlash+0x34>)
1004708e:	f7fc fef1 	bl	10043e74 <FLASH_ReadByte>

	uint16_t up = ((num2<<8) & num1);

	// If memory has not been written to
	if ((num1 == 0xFF) && (num2 == 0xFF)) {
10047092:	2dff      	cmp	r5, #255	; 0xff
10047094:	d106      	bne.n	100470a4 <WriteUP_IntFlash+0x24>
10047096:	28ff      	cmp	r0, #255	; 0xff
10047098:	d104      	bne.n	100470a4 <WriteUP_IntFlash+0x24>
		//Erase
		FLASH_ErasePage(upperPressure_page);
		//Rewrite
		uint32_t setting = 0;
		setting += (uint32_t)upper;
		FLASH_ProgramWord(upperPressure_address, setting);
1004709a:	0021      	movs	r1, r4
1004709c:	4804      	ldr	r0, [pc, #16]	; (100470b0 <WriteUP_IntFlash+0x30>)
1004709e:	f7fc ff0d 	bl	10043ebc <FLASH_ProgramWord>
	}
}
100470a2:	bd70      	pop	{r4, r5, r6, pc}
	else if (up != upper) {
100470a4:	2c00      	cmp	r4, #0
100470a6:	d0fc      	beq.n	100470a2 <WriteUP_IntFlash+0x22>
		FLASH_ErasePage(upperPressure_page);
100470a8:	2039      	movs	r0, #57	; 0x39
100470aa:	f7fc feef 	bl	10043e8c <FLASH_ErasePage>
100470ae:	e7f4      	b.n	1004709a <WriteUP_IntFlash+0x1a>
100470b0:	1005c800 	.word	0x1005c800
100470b4:	1005c801 	.word	0x1005c801

100470b8 <WriteTP_IntFlash>:
// Function Name  : WriteTP_IntFlash
// Description    : Write target bound pressure to memory
// Input          : target bound pressure
// Return         : None
//*****************************************************************************
void WriteTP_IntFlash(uint16_t target) {
100470b8:	b570      	push	{r4, r5, r6, lr}
100470ba:	0004      	movs	r4, r0
	uint8_t num1 = FLASH_ReadByte(targetPressure_address);
100470bc:	480a      	ldr	r0, [pc, #40]	; (100470e8 <WriteTP_IntFlash+0x30>)
100470be:	f7fc fed9 	bl	10043e74 <FLASH_ReadByte>
100470c2:	0005      	movs	r5, r0
	uint8_t num2 = FLASH_ReadByte(targetPressure_address+1);
100470c4:	4809      	ldr	r0, [pc, #36]	; (100470ec <WriteTP_IntFlash+0x34>)
100470c6:	f7fc fed5 	bl	10043e74 <FLASH_ReadByte>

	uint16_t tp = ((num2<<8) & num1);

	// If memory has not been written to
	if ((num1 == 0xFF) && (num2 == 0xFF)) {
100470ca:	2dff      	cmp	r5, #255	; 0xff
100470cc:	d106      	bne.n	100470dc <WriteTP_IntFlash+0x24>
100470ce:	28ff      	cmp	r0, #255	; 0xff
100470d0:	d104      	bne.n	100470dc <WriteTP_IntFlash+0x24>
		//Erase
		FLASH_ErasePage(targetPressure_page);
		//Rewrite
		uint32_t setting = 0;
		setting += (uint32_t)target;
		FLASH_ProgramWord(targetPressure_address, setting);
100470d2:	0021      	movs	r1, r4
100470d4:	4804      	ldr	r0, [pc, #16]	; (100470e8 <WriteTP_IntFlash+0x30>)
100470d6:	f7fc fef1 	bl	10043ebc <FLASH_ProgramWord>
	}
}
100470da:	bd70      	pop	{r4, r5, r6, pc}
	else if (tp != target) {
100470dc:	2c00      	cmp	r4, #0
100470de:	d0fc      	beq.n	100470da <WriteTP_IntFlash+0x22>
		FLASH_ErasePage(targetPressure_page);
100470e0:	203a      	movs	r0, #58	; 0x3a
100470e2:	f7fc fed3 	bl	10043e8c <FLASH_ErasePage>
100470e6:	e7f4      	b.n	100470d2 <WriteTP_IntFlash+0x1a>
100470e8:	1005d000 	.word	0x1005d000
100470ec:	1005d001 	.word	0x1005d001

100470f0 <WriteSP_IntFlash>:
// Function Name  : WriteSP_IntFlash
// Description    : Write sampling period to memory
// Input          : sampling period
// Return         : None
//*****************************************************************************
void WriteSP_IntFlash(uint8_t period) {
100470f0:	b510      	push	{r4, lr}
100470f2:	0004      	movs	r4, r0
	uint8_t num1 = FLASH_ReadByte(samplePeriod_address);
100470f4:	4807      	ldr	r0, [pc, #28]	; (10047114 <WriteSP_IntFlash+0x24>)
100470f6:	f7fc febd 	bl	10043e74 <FLASH_ReadByte>

	// If memory has not been written to
	if (num1 == 0xFF) {
100470fa:	28ff      	cmp	r0, #255	; 0xff
100470fc:	d104      	bne.n	10047108 <WriteSP_IntFlash+0x18>
		//Erase
		FLASH_ErasePage(samplePeriod_page);
		//Rewrite
		uint32_t setting = 0;
		setting += (uint32_t)period;
		FLASH_ProgramWord(samplePeriod_address, setting);
100470fe:	0021      	movs	r1, r4
10047100:	4804      	ldr	r0, [pc, #16]	; (10047114 <WriteSP_IntFlash+0x24>)
10047102:	f7fc fedb 	bl	10043ebc <FLASH_ProgramWord>
	}
}
10047106:	bd10      	pop	{r4, pc}
	else if (num1 != period) {
10047108:	42a0      	cmp	r0, r4
1004710a:	d0fc      	beq.n	10047106 <WriteSP_IntFlash+0x16>
		FLASH_ErasePage(samplePeriod_page);
1004710c:	203b      	movs	r0, #59	; 0x3b
1004710e:	f7fc febd 	bl	10043e8c <FLASH_ErasePage>
10047112:	e7f4      	b.n	100470fe <WriteSP_IntFlash+0xe>
10047114:	1005d800 	.word	0x1005d800

10047118 <WriteNS_IntFlash>:
// Function Name  : WriteNS_IntFlash
// Description    : Write number of samples to memory
// Input          : number of samples
// Return         : None
//*****************************************************************************
void WriteNS_IntFlash(uint8_t samples) {
10047118:	b510      	push	{r4, lr}
1004711a:	0004      	movs	r4, r0
	uint8_t num1 = FLASH_ReadByte(numSamples_address);
1004711c:	4807      	ldr	r0, [pc, #28]	; (1004713c <WriteNS_IntFlash+0x24>)
1004711e:	f7fc fea9 	bl	10043e74 <FLASH_ReadByte>

	// If memory has not been written to
	if (num1 == 0xFF) {
10047122:	28ff      	cmp	r0, #255	; 0xff
10047124:	d104      	bne.n	10047130 <WriteNS_IntFlash+0x18>
		//Erase
		FLASH_ErasePage(numSamples_page);
		//Rewrite
		uint32_t setting = 0;
		setting += (uint32_t)samples;
		FLASH_ProgramWord(numSamples_address, setting);
10047126:	0021      	movs	r1, r4
10047128:	4804      	ldr	r0, [pc, #16]	; (1004713c <WriteNS_IntFlash+0x24>)
1004712a:	f7fc fec7 	bl	10043ebc <FLASH_ProgramWord>
	}
}
1004712e:	bd10      	pop	{r4, pc}
	else if (num1 != samples) {
10047130:	42a0      	cmp	r0, r4
10047132:	d0fc      	beq.n	1004712e <WriteNS_IntFlash+0x16>
		FLASH_ErasePage(numSamples_page);
10047134:	203c      	movs	r0, #60	; 0x3c
10047136:	f7fc fea9 	bl	10043e8c <FLASH_ErasePage>
1004713a:	e7f4      	b.n	10047126 <WriteNS_IntFlash+0xe>
1004713c:	1005e000 	.word	0x1005e000

10047140 <WriteMode_IntFlash>:
// Function Name  : WriteMode_IntFlash
// Description    : Write cushion mode to memory
// Input          : mode
// Return         : None
//*****************************************************************************
void WriteMode_IntFlash(uint8_t mode) {
10047140:	b510      	push	{r4, lr}
10047142:	0004      	movs	r4, r0
	uint8_t num1 = FLASH_ReadByte(mode_address);
10047144:	4807      	ldr	r0, [pc, #28]	; (10047164 <WriteMode_IntFlash+0x24>)
10047146:	f7fc fe95 	bl	10043e74 <FLASH_ReadByte>

	// If memory has not been written to
	if (num1 == 0xFF) {
1004714a:	28ff      	cmp	r0, #255	; 0xff
1004714c:	d104      	bne.n	10047158 <WriteMode_IntFlash+0x18>
		//Erase
		FLASH_ErasePage(mode_page);
		//Rewrite
		uint32_t setting = 0;
		setting += (uint32_t)mode;
		FLASH_ProgramWord(mode_address, setting);
1004714e:	0021      	movs	r1, r4
10047150:	4804      	ldr	r0, [pc, #16]	; (10047164 <WriteMode_IntFlash+0x24>)
10047152:	f7fc feb3 	bl	10043ebc <FLASH_ProgramWord>
	}
}
10047156:	bd10      	pop	{r4, pc}
	else if (num1 != mode) {
10047158:	42a0      	cmp	r0, r4
1004715a:	d0fc      	beq.n	10047156 <WriteMode_IntFlash+0x16>
		FLASH_ErasePage(mode_page);
1004715c:	203d      	movs	r0, #61	; 0x3d
1004715e:	f7fc fe95 	bl	10043e8c <FLASH_ErasePage>
10047162:	e7f4      	b.n	1004714e <WriteMode_IntFlash+0xe>
10047164:	1005f800 	.word	0x1005f800

10047168 <ReadMultipliers_IntFlash>:
// Function Name  : ReadMultipliers_IntFlash
// Description    : Read value of pressure time multipliers from memory
// Input          : None
// Return         : None
//*****************************************************************************
void ReadMultipliers_IntFlash(){
10047168:	b570      	push	{r4, r5, r6, lr}
	// Read from flash to get new multipliers
	multiplier_increase[0] = FLASH_ReadByte(multipliers_address+7);
1004716a:	4828      	ldr	r0, [pc, #160]	; (1004720c <ReadMultipliers_IntFlash+0xa4>)
1004716c:	f7fc fe82 	bl	10043e74 <FLASH_ReadByte>
10047170:	4c27      	ldr	r4, [pc, #156]	; (10047210 <ReadMultipliers_IntFlash+0xa8>)
10047172:	7020      	strb	r0, [r4, #0]
	multiplier_increase[1] = FLASH_ReadByte(multipliers_address+6);
10047174:	4827      	ldr	r0, [pc, #156]	; (10047214 <ReadMultipliers_IntFlash+0xac>)
10047176:	f7fc fe7d 	bl	10043e74 <FLASH_ReadByte>
1004717a:	7060      	strb	r0, [r4, #1]
	multiplier_increase[2] = FLASH_ReadByte(multipliers_address+5);
1004717c:	4826      	ldr	r0, [pc, #152]	; (10047218 <ReadMultipliers_IntFlash+0xb0>)
1004717e:	f7fc fe79 	bl	10043e74 <FLASH_ReadByte>
10047182:	70a0      	strb	r0, [r4, #2]
	multiplier_increase[3] = FLASH_ReadByte(multipliers_address+4);
10047184:	4825      	ldr	r0, [pc, #148]	; (1004721c <ReadMultipliers_IntFlash+0xb4>)
10047186:	f7fc fe75 	bl	10043e74 <FLASH_ReadByte>
1004718a:	70e0      	strb	r0, [r4, #3]
	multiplier_increase[4] = FLASH_ReadByte(multipliers_address+3);
1004718c:	4824      	ldr	r0, [pc, #144]	; (10047220 <ReadMultipliers_IntFlash+0xb8>)
1004718e:	f7fc fe71 	bl	10043e74 <FLASH_ReadByte>
10047192:	7120      	strb	r0, [r4, #4]
	multiplier_increase[5] = FLASH_ReadByte(multipliers_address+2);
10047194:	4823      	ldr	r0, [pc, #140]	; (10047224 <ReadMultipliers_IntFlash+0xbc>)
10047196:	f7fc fe6d 	bl	10043e74 <FLASH_ReadByte>
1004719a:	7160      	strb	r0, [r4, #5]
	multiplier_increase[6] = FLASH_ReadByte(multipliers_address+1);
1004719c:	4822      	ldr	r0, [pc, #136]	; (10047228 <ReadMultipliers_IntFlash+0xc0>)
1004719e:	f7fc fe69 	bl	10043e74 <FLASH_ReadByte>
100471a2:	71a0      	strb	r0, [r4, #6]
	multiplier_increase[7] = FLASH_ReadByte(multipliers_address);
100471a4:	4821      	ldr	r0, [pc, #132]	; (1004722c <ReadMultipliers_IntFlash+0xc4>)
100471a6:	f7fc fe65 	bl	10043e74 <FLASH_ReadByte>
100471aa:	71e0      	strb	r0, [r4, #7]

	multiplier_decrease[0] = FLASH_ReadByte(multipliers_address+15);
100471ac:	4820      	ldr	r0, [pc, #128]	; (10047230 <ReadMultipliers_IntFlash+0xc8>)
100471ae:	f7fc fe61 	bl	10043e74 <FLASH_ReadByte>
100471b2:	4d20      	ldr	r5, [pc, #128]	; (10047234 <ReadMultipliers_IntFlash+0xcc>)
100471b4:	7028      	strb	r0, [r5, #0]
	multiplier_decrease[1] = FLASH_ReadByte(multipliers_address+14);
100471b6:	4820      	ldr	r0, [pc, #128]	; (10047238 <ReadMultipliers_IntFlash+0xd0>)
100471b8:	f7fc fe5c 	bl	10043e74 <FLASH_ReadByte>
100471bc:	7068      	strb	r0, [r5, #1]
	multiplier_decrease[2] = FLASH_ReadByte(multipliers_address+13);
100471be:	481f      	ldr	r0, [pc, #124]	; (1004723c <ReadMultipliers_IntFlash+0xd4>)
100471c0:	f7fc fe58 	bl	10043e74 <FLASH_ReadByte>
100471c4:	70a8      	strb	r0, [r5, #2]
	multiplier_decrease[3] = FLASH_ReadByte(multipliers_address+12);
100471c6:	481e      	ldr	r0, [pc, #120]	; (10047240 <ReadMultipliers_IntFlash+0xd8>)
100471c8:	f7fc fe54 	bl	10043e74 <FLASH_ReadByte>
100471cc:	70e8      	strb	r0, [r5, #3]
	multiplier_decrease[4] = FLASH_ReadByte(multipliers_address+11);
100471ce:	481d      	ldr	r0, [pc, #116]	; (10047244 <ReadMultipliers_IntFlash+0xdc>)
100471d0:	f7fc fe50 	bl	10043e74 <FLASH_ReadByte>
100471d4:	7128      	strb	r0, [r5, #4]
	multiplier_decrease[5] = FLASH_ReadByte(multipliers_address+10);
100471d6:	481c      	ldr	r0, [pc, #112]	; (10047248 <ReadMultipliers_IntFlash+0xe0>)
100471d8:	f7fc fe4c 	bl	10043e74 <FLASH_ReadByte>
100471dc:	7168      	strb	r0, [r5, #5]
	multiplier_decrease[6] = FLASH_ReadByte(multipliers_address+9);
100471de:	481b      	ldr	r0, [pc, #108]	; (1004724c <ReadMultipliers_IntFlash+0xe4>)
100471e0:	f7fc fe48 	bl	10043e74 <FLASH_ReadByte>
100471e4:	71a8      	strb	r0, [r5, #6]
	multiplier_decrease[7] = FLASH_ReadByte(multipliers_address+8);
100471e6:	481a      	ldr	r0, [pc, #104]	; (10047250 <ReadMultipliers_IntFlash+0xe8>)
100471e8:	f7fc fe44 	bl	10043e74 <FLASH_ReadByte>
100471ec:	2300      	movs	r3, #0

	// If uninitialized
	for (uint8_t i=0; i<8; i++){
		if (multiplier_increase[i] == 0xFF) {
			multiplier_increase[i] = 100; // Default value (100%)
100471ee:	2264      	movs	r2, #100	; 0x64
	multiplier_decrease[7] = FLASH_ReadByte(multipliers_address+8);
100471f0:	71e8      	strb	r0, [r5, #7]
		if (multiplier_increase[i] == 0xFF) {
100471f2:	5ce1      	ldrb	r1, [r4, r3]
100471f4:	29ff      	cmp	r1, #255	; 0xff
100471f6:	d100      	bne.n	100471fa <ReadMultipliers_IntFlash+0x92>
			multiplier_increase[i] = 100; // Default value (100%)
100471f8:	54e2      	strb	r2, [r4, r3]
		} if (multiplier_decrease[i] == 0xFF) {
100471fa:	5ce9      	ldrb	r1, [r5, r3]
100471fc:	29ff      	cmp	r1, #255	; 0xff
100471fe:	d100      	bne.n	10047202 <ReadMultipliers_IntFlash+0x9a>
			multiplier_decrease[i] = 100; // Default value (100%)
10047200:	54ea      	strb	r2, [r5, r3]
10047202:	3301      	adds	r3, #1
	for (uint8_t i=0; i<8; i++){
10047204:	2b08      	cmp	r3, #8
10047206:	d1f4      	bne.n	100471f2 <ReadMultipliers_IntFlash+0x8a>
		}
	}

}
10047208:	bd70      	pop	{r4, r5, r6, pc}
1004720a:	46c0      	nop			; (mov r8, r8)
1004720c:	1005b807 	.word	0x1005b807
10047210:	20000900 	.word	0x20000900
10047214:	1005b806 	.word	0x1005b806
10047218:	1005b805 	.word	0x1005b805
1004721c:	1005b804 	.word	0x1005b804
10047220:	1005b803 	.word	0x1005b803
10047224:	1005b802 	.word	0x1005b802
10047228:	1005b801 	.word	0x1005b801
1004722c:	1005b800 	.word	0x1005b800
10047230:	1005b80f 	.word	0x1005b80f
10047234:	20000938 	.word	0x20000938
10047238:	1005b80e 	.word	0x1005b80e
1004723c:	1005b80d 	.word	0x1005b80d
10047240:	1005b80c 	.word	0x1005b80c
10047244:	1005b80b 	.word	0x1005b80b
10047248:	1005b80a 	.word	0x1005b80a
1004724c:	1005b809 	.word	0x1005b809
10047250:	1005b808 	.word	0x1005b808

10047254 <WriteMultipliers_IntFlash>:
// Function Name  : WriteMultipliers_IntFlash
// Description    : Writes values of pressure time multipliers from memory
// Input          : None
// Return         : None
//*****************************************************************************
void WriteMultipliers_IntFlash() {
10047254:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t num_i7 = FLASH_ReadByte(multipliers_address);
10047256:	4882      	ldr	r0, [pc, #520]	; (10047460 <WriteMultipliers_IntFlash+0x20c>)
void WriteMultipliers_IntFlash() {
10047258:	b08d      	sub	sp, #52	; 0x34
	uint8_t num_i7 = FLASH_ReadByte(multipliers_address);
1004725a:	f7fc fe0b 	bl	10043e74 <FLASH_ReadByte>
1004725e:	9000      	str	r0, [sp, #0]
	uint8_t num_i6 = FLASH_ReadByte(multipliers_address+1);
10047260:	4880      	ldr	r0, [pc, #512]	; (10047464 <WriteMultipliers_IntFlash+0x210>)
10047262:	f7fc fe07 	bl	10043e74 <FLASH_ReadByte>
10047266:	9001      	str	r0, [sp, #4]
	uint8_t num_i5 = FLASH_ReadByte(multipliers_address+2);
10047268:	487f      	ldr	r0, [pc, #508]	; (10047468 <WriteMultipliers_IntFlash+0x214>)
1004726a:	f7fc fe03 	bl	10043e74 <FLASH_ReadByte>
1004726e:	9002      	str	r0, [sp, #8]
	uint8_t num_i4 = FLASH_ReadByte(multipliers_address+3);
10047270:	487e      	ldr	r0, [pc, #504]	; (1004746c <WriteMultipliers_IntFlash+0x218>)
10047272:	f7fc fdff 	bl	10043e74 <FLASH_ReadByte>
10047276:	9003      	str	r0, [sp, #12]
	uint8_t num_i3 = FLASH_ReadByte(multipliers_address+4);
10047278:	487d      	ldr	r0, [pc, #500]	; (10047470 <WriteMultipliers_IntFlash+0x21c>)
1004727a:	f7fc fdfb 	bl	10043e74 <FLASH_ReadByte>
1004727e:	9004      	str	r0, [sp, #16]
	uint8_t num_i2 = FLASH_ReadByte(multipliers_address+5);
10047280:	487c      	ldr	r0, [pc, #496]	; (10047474 <WriteMultipliers_IntFlash+0x220>)
10047282:	f7fc fdf7 	bl	10043e74 <FLASH_ReadByte>
10047286:	9005      	str	r0, [sp, #20]
	uint8_t num_i1 = FLASH_ReadByte(multipliers_address+6);
10047288:	487b      	ldr	r0, [pc, #492]	; (10047478 <WriteMultipliers_IntFlash+0x224>)
1004728a:	f7fc fdf3 	bl	10043e74 <FLASH_ReadByte>
1004728e:	9006      	str	r0, [sp, #24]
	uint8_t num_i0 = FLASH_ReadByte(multipliers_address+7);
10047290:	487a      	ldr	r0, [pc, #488]	; (1004747c <WriteMultipliers_IntFlash+0x228>)
10047292:	f7fc fdef 	bl	10043e74 <FLASH_ReadByte>
10047296:	9007      	str	r0, [sp, #28]

	uint8_t num_d7 = FLASH_ReadByte(multipliers_address+8);
10047298:	4879      	ldr	r0, [pc, #484]	; (10047480 <WriteMultipliers_IntFlash+0x22c>)
1004729a:	f7fc fdeb 	bl	10043e74 <FLASH_ReadByte>
1004729e:	9008      	str	r0, [sp, #32]
	uint8_t num_d6 = FLASH_ReadByte(multipliers_address+9);
100472a0:	4878      	ldr	r0, [pc, #480]	; (10047484 <WriteMultipliers_IntFlash+0x230>)
100472a2:	f7fc fde7 	bl	10043e74 <FLASH_ReadByte>
100472a6:	9009      	str	r0, [sp, #36]	; 0x24
	uint8_t num_d5 = FLASH_ReadByte(multipliers_address+10);
100472a8:	4877      	ldr	r0, [pc, #476]	; (10047488 <WriteMultipliers_IntFlash+0x234>)
100472aa:	f7fc fde3 	bl	10043e74 <FLASH_ReadByte>
100472ae:	900a      	str	r0, [sp, #40]	; 0x28
	uint8_t num_d4 = FLASH_ReadByte(multipliers_address+11);
100472b0:	4876      	ldr	r0, [pc, #472]	; (1004748c <WriteMultipliers_IntFlash+0x238>)
100472b2:	f7fc fddf 	bl	10043e74 <FLASH_ReadByte>
100472b6:	900b      	str	r0, [sp, #44]	; 0x2c
	uint8_t num_d3 = FLASH_ReadByte(multipliers_address+12);
100472b8:	4875      	ldr	r0, [pc, #468]	; (10047490 <WriteMultipliers_IntFlash+0x23c>)
100472ba:	f7fc fddb 	bl	10043e74 <FLASH_ReadByte>
100472be:	0005      	movs	r5, r0
	uint8_t num_d2 = FLASH_ReadByte(multipliers_address+13);
100472c0:	4874      	ldr	r0, [pc, #464]	; (10047494 <WriteMultipliers_IntFlash+0x240>)
100472c2:	f7fc fdd7 	bl	10043e74 <FLASH_ReadByte>
100472c6:	0006      	movs	r6, r0
	uint8_t num_d1 = FLASH_ReadByte(multipliers_address+14);
100472c8:	4873      	ldr	r0, [pc, #460]	; (10047498 <WriteMultipliers_IntFlash+0x244>)
100472ca:	f7fc fdd3 	bl	10043e74 <FLASH_ReadByte>
100472ce:	0007      	movs	r7, r0
	uint8_t num_d0 = FLASH_ReadByte(multipliers_address+15);
100472d0:	4872      	ldr	r0, [pc, #456]	; (1004749c <WriteMultipliers_IntFlash+0x248>)
100472d2:	f7fc fdcf 	bl	10043e74 <FLASH_ReadByte>

	// If memory has not been written to
	if ((num_d0 == 0xFF) && (num_d1 == 0xFF) && (num_d2 == 0xFF) &&
100472d6:	28ff      	cmp	r0, #255	; 0xff
100472d8:	d165      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
100472da:	2fff      	cmp	r7, #255	; 0xff
100472dc:	d163      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
100472de:	2eff      	cmp	r6, #255	; 0xff
100472e0:	d161      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
100472e2:	2dff      	cmp	r5, #255	; 0xff
100472e4:	d15f      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
			(num_d3 == 0xFF) && (num_d4 == 0xFF) && (num_d5 == 0xFF) &&
100472e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100472e8:	2bff      	cmp	r3, #255	; 0xff
100472ea:	d15c      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
100472ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
100472ee:	2bff      	cmp	r3, #255	; 0xff
100472f0:	d159      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
100472f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
100472f4:	2bff      	cmp	r3, #255	; 0xff
100472f6:	d156      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
			(num_d6 == 0xFF) && (num_d7 == 0xFF) &&
100472f8:	9b08      	ldr	r3, [sp, #32]
100472fa:	2bff      	cmp	r3, #255	; 0xff
100472fc:	d153      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
100472fe:	9b07      	ldr	r3, [sp, #28]
10047300:	2bff      	cmp	r3, #255	; 0xff
10047302:	d150      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
			(num_i0 == 0xFF) && (num_i1 == 0xFF) && (num_i2 == 0xFF) &&
10047304:	9b06      	ldr	r3, [sp, #24]
10047306:	2bff      	cmp	r3, #255	; 0xff
10047308:	d14d      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
1004730a:	9b05      	ldr	r3, [sp, #20]
1004730c:	2bff      	cmp	r3, #255	; 0xff
1004730e:	d14a      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
10047310:	9b04      	ldr	r3, [sp, #16]
10047312:	2bff      	cmp	r3, #255	; 0xff
10047314:	d147      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
			(num_i3 == 0xFF) && (num_i4 == 0xFF) && (num_i5 == 0xFF) &&
10047316:	9b03      	ldr	r3, [sp, #12]
10047318:	2bff      	cmp	r3, #255	; 0xff
1004731a:	d144      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
1004731c:	9b02      	ldr	r3, [sp, #8]
1004731e:	2bff      	cmp	r3, #255	; 0xff
10047320:	d141      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
10047322:	9b01      	ldr	r3, [sp, #4]
10047324:	2bff      	cmp	r3, #255	; 0xff
10047326:	d13e      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
			(num_i6 == 0xFF) && (num_i7 == 0xFF)){
10047328:	9b00      	ldr	r3, [sp, #0]
1004732a:	2bff      	cmp	r3, #255	; 0xff
1004732c:	d13b      	bne.n	100473a6 <WriteMultipliers_IntFlash+0x152>
		uint32_t word = 0;
		word += multiplier_increase[7];
1004732e:	4c5c      	ldr	r4, [pc, #368]	; (100474a0 <WriteMultipliers_IntFlash+0x24c>)
		word += (multiplier_increase[6])<<8;
		word += (multiplier_increase[5])<<16;
		word += (multiplier_increase[4])<<24;
		FLASH_ProgramWord(multipliers_address, word);
10047330:	484b      	ldr	r0, [pc, #300]	; (10047460 <WriteMultipliers_IntFlash+0x20c>)
		word += multiplier_increase[7];
10047332:	79e2      	ldrb	r2, [r4, #7]
		word += (multiplier_increase[6])<<8;
10047334:	79a1      	ldrb	r1, [r4, #6]
		word += (multiplier_increase[5])<<16;
10047336:	7963      	ldrb	r3, [r4, #5]
		word += (multiplier_increase[6])<<8;
10047338:	0209      	lsls	r1, r1, #8
		word += (multiplier_increase[5])<<16;
1004733a:	041b      	lsls	r3, r3, #16
1004733c:	18c9      	adds	r1, r1, r3
		word += (multiplier_increase[4])<<24;
1004733e:	7923      	ldrb	r3, [r4, #4]
		word += (multiplier_increase[5])<<16;
10047340:	1889      	adds	r1, r1, r2
		word += (multiplier_increase[4])<<24;
10047342:	061b      	lsls	r3, r3, #24
10047344:	1859      	adds	r1, r3, r1
		FLASH_ProgramWord(multipliers_address, word);
10047346:	f7fc fdb9 	bl	10043ebc <FLASH_ProgramWord>
		word = 0;
		word += multiplier_increase[3];
1004734a:	78e2      	ldrb	r2, [r4, #3]
		word += (multiplier_increase[2])<<8;
1004734c:	78a1      	ldrb	r1, [r4, #2]
		word += (multiplier_increase[1])<<16;
1004734e:	7863      	ldrb	r3, [r4, #1]
		word += (multiplier_increase[2])<<8;
10047350:	0209      	lsls	r1, r1, #8
		word += (multiplier_increase[1])<<16;
10047352:	041b      	lsls	r3, r3, #16
10047354:	18c9      	adds	r1, r1, r3
		word += (multiplier_increase[0])<<24;
10047356:	7823      	ldrb	r3, [r4, #0]
		word += (multiplier_increase[1])<<16;
10047358:	1889      	adds	r1, r1, r2
		word += (multiplier_increase[0])<<24;
1004735a:	061b      	lsls	r3, r3, #24
1004735c:	1859      	adds	r1, r3, r1
		FLASH_ProgramWord(multipliers_address+4, word);
1004735e:	4844      	ldr	r0, [pc, #272]	; (10047470 <WriteMultipliers_IntFlash+0x21c>)
10047360:	f7fc fdac 	bl	10043ebc <FLASH_ProgramWord>
		word = 0;
		word += multiplier_decrease[7];
10047364:	4c4f      	ldr	r4, [pc, #316]	; (100474a4 <WriteMultipliers_IntFlash+0x250>)
		word += (multiplier_increase[2])<<8;
		word += (multiplier_increase[1])<<16;
		word += (multiplier_increase[0])<<24;
		FLASH_ProgramWord(multipliers_address+4, word);
		word = 0;
		word += multiplier_decrease[7];
10047366:	79e2      	ldrb	r2, [r4, #7]
		word += (multiplier_decrease[6])<<8;
10047368:	79a1      	ldrb	r1, [r4, #6]
		word += (multiplier_decrease[5])<<16;
1004736a:	7963      	ldrb	r3, [r4, #5]
		word += (multiplier_decrease[6])<<8;
1004736c:	0209      	lsls	r1, r1, #8
		word += (multiplier_decrease[5])<<16;
1004736e:	041b      	lsls	r3, r3, #16
10047370:	18c9      	adds	r1, r1, r3
		word += (multiplier_decrease[4])<<24;
10047372:	7923      	ldrb	r3, [r4, #4]
		word += (multiplier_decrease[5])<<16;
10047374:	1889      	adds	r1, r1, r2
		word += (multiplier_decrease[4])<<24;
10047376:	061b      	lsls	r3, r3, #24
10047378:	1859      	adds	r1, r3, r1
		FLASH_ProgramWord(multipliers_address+8, word);
1004737a:	4841      	ldr	r0, [pc, #260]	; (10047480 <WriteMultipliers_IntFlash+0x22c>)
1004737c:	f7fc fd9e 	bl	10043ebc <FLASH_ProgramWord>
		word = 0;
		word += multiplier_decrease[3];
10047380:	78e2      	ldrb	r2, [r4, #3]
		word += (multiplier_decrease[2])<<8;
10047382:	78a1      	ldrb	r1, [r4, #2]
		word += (multiplier_decrease[1])<<16;
10047384:	7863      	ldrb	r3, [r4, #1]
		word += (multiplier_decrease[2])<<8;
10047386:	0209      	lsls	r1, r1, #8
		word += (multiplier_decrease[1])<<16;
10047388:	041b      	lsls	r3, r3, #16
1004738a:	18c9      	adds	r1, r1, r3
		word += (multiplier_decrease[0])<<24;
1004738c:	7823      	ldrb	r3, [r4, #0]
		word += (multiplier_decrease[1])<<16;
1004738e:	1889      	adds	r1, r1, r2
		word += (multiplier_decrease[0])<<24;
10047390:	061b      	lsls	r3, r3, #24
10047392:	1859      	adds	r1, r3, r1
		FLASH_ProgramWord(multipliers_address+12, word);
10047394:	483e      	ldr	r0, [pc, #248]	; (10047490 <WriteMultipliers_IntFlash+0x23c>)
10047396:	f7fc fd91 	bl	10043ebc <FLASH_ProgramWord>
	}

	SEGGER_RTT_printf(0, "Wrote multipliers to flash\n");
1004739a:	4943      	ldr	r1, [pc, #268]	; (100474a8 <WriteMultipliers_IntFlash+0x254>)
1004739c:	2000      	movs	r0, #0
1004739e:	f7fd fbe8 	bl	10044b72 <SEGGER_RTT_printf>
}
100473a2:	b00d      	add	sp, #52	; 0x34
100473a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	else if ((num_d0 != multiplier_decrease[0]) && (num_d1 != multiplier_decrease[1]) && (num_d2 != multiplier_decrease[2]) &&
100473a6:	4c3f      	ldr	r4, [pc, #252]	; (100474a4 <WriteMultipliers_IntFlash+0x250>)
100473a8:	7823      	ldrb	r3, [r4, #0]
100473aa:	4298      	cmp	r0, r3
100473ac:	d0f5      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
100473ae:	7863      	ldrb	r3, [r4, #1]
100473b0:	429f      	cmp	r7, r3
100473b2:	d0f2      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
100473b4:	78a3      	ldrb	r3, [r4, #2]
100473b6:	429e      	cmp	r6, r3
100473b8:	d0ef      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_d3 != multiplier_decrease[3]) && (num_d4 != multiplier_decrease[4]) && (num_d5 != multiplier_decrease[5]) &&
100473ba:	78e3      	ldrb	r3, [r4, #3]
	else if ((num_d0 != multiplier_decrease[0]) && (num_d1 != multiplier_decrease[1]) && (num_d2 != multiplier_decrease[2]) &&
100473bc:	429d      	cmp	r5, r3
100473be:	d0ec      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_d3 != multiplier_decrease[3]) && (num_d4 != multiplier_decrease[4]) && (num_d5 != multiplier_decrease[5]) &&
100473c0:	7923      	ldrb	r3, [r4, #4]
100473c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
100473c4:	429a      	cmp	r2, r3
100473c6:	d0e8      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
100473c8:	7963      	ldrb	r3, [r4, #5]
100473ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100473cc:	429a      	cmp	r2, r3
100473ce:	d0e4      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_d6 != multiplier_decrease[6]) && (num_d7 != multiplier_decrease[7]) &&
100473d0:	79a3      	ldrb	r3, [r4, #6]
			(num_d3 != multiplier_decrease[3]) && (num_d4 != multiplier_decrease[4]) && (num_d5 != multiplier_decrease[5]) &&
100473d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
100473d4:	429a      	cmp	r2, r3
100473d6:	d0e0      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_d6 != multiplier_decrease[6]) && (num_d7 != multiplier_decrease[7]) &&
100473d8:	79e3      	ldrb	r3, [r4, #7]
100473da:	9a08      	ldr	r2, [sp, #32]
100473dc:	429a      	cmp	r2, r3
100473de:	d0dc      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_i0 != multiplier_increase[0]) && (num_i1 != multiplier_increase[1]) && (num_i2 != multiplier_increase[2]) &&
100473e0:	4d2f      	ldr	r5, [pc, #188]	; (100474a0 <WriteMultipliers_IntFlash+0x24c>)
			(num_d6 != multiplier_decrease[6]) && (num_d7 != multiplier_decrease[7]) &&
100473e2:	9a07      	ldr	r2, [sp, #28]
			(num_i0 != multiplier_increase[0]) && (num_i1 != multiplier_increase[1]) && (num_i2 != multiplier_increase[2]) &&
100473e4:	782b      	ldrb	r3, [r5, #0]
			(num_d6 != multiplier_decrease[6]) && (num_d7 != multiplier_decrease[7]) &&
100473e6:	429a      	cmp	r2, r3
100473e8:	d0d7      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_i0 != multiplier_increase[0]) && (num_i1 != multiplier_increase[1]) && (num_i2 != multiplier_increase[2]) &&
100473ea:	786b      	ldrb	r3, [r5, #1]
100473ec:	9a06      	ldr	r2, [sp, #24]
100473ee:	429a      	cmp	r2, r3
100473f0:	d0d3      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
100473f2:	78ab      	ldrb	r3, [r5, #2]
100473f4:	9a05      	ldr	r2, [sp, #20]
100473f6:	429a      	cmp	r2, r3
100473f8:	d0cf      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_i3 != multiplier_increase[3]) && (num_i4 != multiplier_increase[4]) && (num_i5 != multiplier_increase[5]) &&
100473fa:	78eb      	ldrb	r3, [r5, #3]
			(num_i0 != multiplier_increase[0]) && (num_i1 != multiplier_increase[1]) && (num_i2 != multiplier_increase[2]) &&
100473fc:	9a04      	ldr	r2, [sp, #16]
100473fe:	429a      	cmp	r2, r3
10047400:	d0cb      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_i3 != multiplier_increase[3]) && (num_i4 != multiplier_increase[4]) && (num_i5 != multiplier_increase[5]) &&
10047402:	792b      	ldrb	r3, [r5, #4]
10047404:	9a03      	ldr	r2, [sp, #12]
10047406:	429a      	cmp	r2, r3
10047408:	d0c7      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
1004740a:	796b      	ldrb	r3, [r5, #5]
1004740c:	9a02      	ldr	r2, [sp, #8]
1004740e:	429a      	cmp	r2, r3
10047410:	d0c3      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_i6 != multiplier_increase[6]) && (num_i7 != multiplier_increase[7])){
10047412:	79ab      	ldrb	r3, [r5, #6]
			(num_i3 != multiplier_increase[3]) && (num_i4 != multiplier_increase[4]) && (num_i5 != multiplier_increase[5]) &&
10047414:	9a01      	ldr	r2, [sp, #4]
10047416:	429a      	cmp	r2, r3
10047418:	d0bf      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
			(num_i6 != multiplier_increase[6]) && (num_i7 != multiplier_increase[7])){
1004741a:	79eb      	ldrb	r3, [r5, #7]
1004741c:	9a00      	ldr	r2, [sp, #0]
1004741e:	429a      	cmp	r2, r3
10047420:	d0bb      	beq.n	1004739a <WriteMultipliers_IntFlash+0x146>
		FLASH_ErasePage(multipliers_page);
10047422:	2037      	movs	r0, #55	; 0x37
10047424:	f7fc fd32 	bl	10043e8c <FLASH_ErasePage>
		word += multiplier_increase[7];
10047428:	79ea      	ldrb	r2, [r5, #7]
		word += (multiplier_increase[6])<<8;
1004742a:	79a9      	ldrb	r1, [r5, #6]
		word += (multiplier_increase[5])<<16;
1004742c:	796b      	ldrb	r3, [r5, #5]
		word += (multiplier_increase[6])<<8;
1004742e:	0209      	lsls	r1, r1, #8
		word += (multiplier_increase[5])<<16;
10047430:	041b      	lsls	r3, r3, #16
10047432:	18c9      	adds	r1, r1, r3
		word += (multiplier_increase[4])<<24;
10047434:	792b      	ldrb	r3, [r5, #4]
		word += (multiplier_increase[5])<<16;
10047436:	1889      	adds	r1, r1, r2
		word += (multiplier_increase[4])<<24;
10047438:	061b      	lsls	r3, r3, #24
1004743a:	1859      	adds	r1, r3, r1
		FLASH_ProgramWord(multipliers_address, word);
1004743c:	4808      	ldr	r0, [pc, #32]	; (10047460 <WriteMultipliers_IntFlash+0x20c>)
1004743e:	f7fc fd3d 	bl	10043ebc <FLASH_ProgramWord>
		word += multiplier_increase[3];
10047442:	78ea      	ldrb	r2, [r5, #3]
		word += (multiplier_increase[2])<<8;
10047444:	78a9      	ldrb	r1, [r5, #2]
		word += (multiplier_increase[1])<<16;
10047446:	786b      	ldrb	r3, [r5, #1]
		word += (multiplier_increase[2])<<8;
10047448:	0209      	lsls	r1, r1, #8
		word += (multiplier_increase[1])<<16;
1004744a:	041b      	lsls	r3, r3, #16
1004744c:	18c9      	adds	r1, r1, r3
		word += (multiplier_increase[0])<<24;
1004744e:	782b      	ldrb	r3, [r5, #0]
		word += (multiplier_increase[1])<<16;
10047450:	1889      	adds	r1, r1, r2
		word += (multiplier_increase[0])<<24;
10047452:	061b      	lsls	r3, r3, #24
10047454:	1859      	adds	r1, r3, r1
		FLASH_ProgramWord(multipliers_address+4, word);
10047456:	4806      	ldr	r0, [pc, #24]	; (10047470 <WriteMultipliers_IntFlash+0x21c>)
10047458:	f7fc fd30 	bl	10043ebc <FLASH_ProgramWord>
1004745c:	e783      	b.n	10047366 <WriteMultipliers_IntFlash+0x112>
1004745e:	46c0      	nop			; (mov r8, r8)
10047460:	1005b800 	.word	0x1005b800
10047464:	1005b801 	.word	0x1005b801
10047468:	1005b802 	.word	0x1005b802
1004746c:	1005b803 	.word	0x1005b803
10047470:	1005b804 	.word	0x1005b804
10047474:	1005b805 	.word	0x1005b805
10047478:	1005b806 	.word	0x1005b806
1004747c:	1005b807 	.word	0x1005b807
10047480:	1005b808 	.word	0x1005b808
10047484:	1005b809 	.word	0x1005b809
10047488:	1005b80a 	.word	0x1005b80a
1004748c:	1005b80b 	.word	0x1005b80b
10047490:	1005b80c 	.word	0x1005b80c
10047494:	1005b80d 	.word	0x1005b80d
10047498:	1005b80e 	.word	0x1005b80e
1004749c:	1005b80f 	.word	0x1005b80f
100474a0:	20000900 	.word	0x20000900
100474a4:	20000938 	.word	0x20000938
100474a8:	10058b1f 	.word	0x10058b1f

100474ac <Initialize_AirBags>:
void Initialize_AirBags(uint16_t startingPressure) {
100474ac:	b5f0      	push	{r4, r5, r6, r7, lr}
	SEGGER_RTT_printf(0, "Initializing all air bags to %d mmHg\n", startingPressure);
100474ae:	0002      	movs	r2, r0
void Initialize_AirBags(uint16_t startingPressure) {
100474b0:	b089      	sub	sp, #36	; 0x24
	SEGGER_RTT_printf(0, "Initializing all air bags to %d mmHg\n", startingPressure);
100474b2:	496c      	ldr	r1, [pc, #432]	; (10047664 <Initialize_AirBags+0x1b8>)
void Initialize_AirBags(uint16_t startingPressure) {
100474b4:	0004      	movs	r4, r0
	SEGGER_RTT_printf(0, "Initializing all air bags to %d mmHg\n", startingPressure);
100474b6:	2000      	movs	r0, #0
100474b8:	f7fd fb5b 	bl	10044b72 <SEGGER_RTT_printf>
	uint8_t bagOrder [8] = {2, 3, 5, 7, 8, 1, 4, 6}; // Order to pump bags in // TODO: Change
100474bc:	2302      	movs	r3, #2
100474be:	aa02      	add	r2, sp, #8
100474c0:	7013      	strb	r3, [r2, #0]
100474c2:	3301      	adds	r3, #1
100474c4:	7053      	strb	r3, [r2, #1]
100474c6:	3302      	adds	r3, #2
100474c8:	7093      	strb	r3, [r2, #2]
100474ca:	3302      	adds	r3, #2
100474cc:	70d3      	strb	r3, [r2, #3]
100474ce:	2208      	movs	r2, #8
100474d0:	ab02      	add	r3, sp, #8
100474d2:	711a      	strb	r2, [r3, #4]
100474d4:	2301      	movs	r3, #1
100474d6:	a902      	add	r1, sp, #8
100474d8:	714b      	strb	r3, [r1, #5]
100474da:	3303      	adds	r3, #3
100474dc:	718b      	strb	r3, [r1, #6]
100474de:	3302      	adds	r3, #2
100474e0:	71cb      	strb	r3, [r1, #7]
	uint8_t bagReady[8] = {0, 0, 0, 0, 0, 0, 0, 0}; // Whether bag is pumped fully or not
100474e2:	a804      	add	r0, sp, #16
100474e4:	2100      	movs	r1, #0
100474e6:	f000 fe87 	bl	100481f8 <memset>
	for (int i=0; i<numBags; i++) {
100474ea:	2500      	movs	r5, #0
	Close_Valve(); // Start with all valves closed
100474ec:	f7ff f8e4 	bl	100466b8 <Close_Valve>
	Read_ADC();
100474f0:	f7fe ff98 	bl	10046424 <Read_ADC>
		currentBag = bagOrder[i];
100474f4:	ab02      	add	r3, sp, #8
100474f6:	5d5e      	ldrb	r6, [r3, r5]
		if (CurrentPressures[currentBag-1] <= 0) {
100474f8:	4a5b      	ldr	r2, [pc, #364]	; (10047668 <Initialize_AirBags+0x1bc>)
100474fa:	1e73      	subs	r3, r6, #1
100474fc:	005b      	lsls	r3, r3, #1
100474fe:	5a98      	ldrh	r0, [r3, r2]
10047500:	b280      	uxth	r0, r0
10047502:	2800      	cmp	r0, #0
10047504:	d114      	bne.n	10047530 <Initialize_AirBags+0x84>
			SEGGER_RTT_printf(0, "Pumping bag %d for 115 seconds\n", currentBag);
10047506:	0032      	movs	r2, r6
10047508:	4958      	ldr	r1, [pc, #352]	; (1004766c <Initialize_AirBags+0x1c0>)
1004750a:	f7fd fb32 	bl	10044b72 <SEGGER_RTT_printf>
			Open_Valve_Small(currentBag);
1004750e:	0030      	movs	r0, r6
10047510:	f7fe ffe6 	bl	100464e0 <Open_Valve_Small>
			Open_Valve_Large();
10047514:	f7ff f8ba 	bl	1004668c <Open_Valve_Large>
			Pump_On();
10047518:	f7ff f8f8 	bl	1004670c <Pump_On>
			Clock_Wait(115*1000);
1004751c:	4854      	ldr	r0, [pc, #336]	; (10047670 <Initialize_AirBags+0x1c4>)
1004751e:	f7fb fe01 	bl	10043124 <Clock_Wait>
			Pump_Off();
10047522:	f7ff f8f9 	bl	10046718 <Pump_Off>
			Close_Valve_Large();
10047526:	f7ff f8b7 	bl	10046698 <Close_Valve_Large>
			Close_Valve_Small(currentBag);
1004752a:	0030      	movs	r0, r6
1004752c:	f7ff f81e 	bl	1004656c <Close_Valve_Small>
	for (int i=0; i<numBags; i++) {
10047530:	3501      	adds	r5, #1
10047532:	2d05      	cmp	r5, #5
10047534:	d1de      	bne.n	100474f4 <Initialize_AirBags+0x48>
	Read_ADC();
10047536:	f7fe ff75 	bl	10046424 <Read_ADC>
1004753a:	2700      	movs	r7, #0
		SEGGER_RTT_printf(0, "Readjusting pressure: Iteration %d\n", j);
1004753c:	003a      	movs	r2, r7
1004753e:	494d      	ldr	r1, [pc, #308]	; (10047674 <Initialize_AirBags+0x1c8>)
10047540:	2000      	movs	r0, #0
10047542:	f7fd fb16 	bl	10044b72 <SEGGER_RTT_printf>
10047546:	2600      	movs	r6, #0
			currentBag = bagOrder[i];
10047548:	ab02      	add	r3, sp, #8
1004754a:	5cf3      	ldrb	r3, [r6, r3]
			if (CurrentPressures[currentBag-1] < (startingPressure - slack)) { // If a bag's pressure is too low
1004754c:	1f60      	subs	r0, r4, #5
1004754e:	1e5d      	subs	r5, r3, #1
			currentBag = bagOrder[i];
10047550:	9300      	str	r3, [sp, #0]
			if (CurrentPressures[currentBag-1] < (startingPressure - slack)) { // If a bag's pressure is too low
10047552:	4b45      	ldr	r3, [pc, #276]	; (10047668 <Initialize_AirBags+0x1bc>)
10047554:	006a      	lsls	r2, r5, #1
10047556:	5ad1      	ldrh	r1, [r2, r3]
10047558:	9001      	str	r0, [sp, #4]
1004755a:	4281      	cmp	r1, r0
1004755c:	da4b      	bge.n	100475f6 <Initialize_AirBags+0x14a>
				Pressurize_Air_Bag(currentBag, startingPressure, ((float)multiplier_increase[currentBag-1])/100);
1004755e:	4b46      	ldr	r3, [pc, #280]	; (10047678 <Initialize_AirBags+0x1cc>)
10047560:	5d58      	ldrb	r0, [r3, r5]
10047562:	b2c0      	uxtb	r0, r0
10047564:	f7f9 ff10 	bl	10041388 <__aeabi_ui2f>
10047568:	4944      	ldr	r1, [pc, #272]	; (1004767c <Initialize_AirBags+0x1d0>)
1004756a:	f7f9 f9f1 	bl	10040950 <__aeabi_fdiv>
1004756e:	0021      	movs	r1, r4
10047570:	1c02      	adds	r2, r0, #0
10047572:	9800      	ldr	r0, [sp, #0]
10047574:	f7ff f8d6 	bl	10046724 <Pressurize_Air_Bag>
				state_pressure[currentBag-1] = INCREASE;
10047578:	2200      	movs	r2, #0
1004757a:	ab06      	add	r3, sp, #24
				state_pressure[currentBag-1] = DECREASE;
1004757c:	555a      	strb	r2, [r3, r5]
1004757e:	3601      	adds	r6, #1
		for (uint8_t i=0; i<numBags; i++) {
10047580:	2e05      	cmp	r6, #5
10047582:	d1e1      	bne.n	10047548 <Initialize_AirBags+0x9c>
		Read_ADC();
10047584:	f7fe ff4e 	bl	10046424 <Read_ADC>
		SEGGER_RTT_printf(0, "Current pressures: ");
10047588:	493d      	ldr	r1, [pc, #244]	; (10047680 <Initialize_AirBags+0x1d4>)
1004758a:	2000      	movs	r0, #0
1004758c:	f7fd faf1 	bl	10044b72 <SEGGER_RTT_printf>
10047590:	2500      	movs	r5, #0
			if (CurrentPressures[currentBag-1] < (startingPressure - slack)) {
10047592:	ab02      	add	r3, sp, #8
10047594:	5d5b      	ldrb	r3, [r3, r5]
10047596:	4834      	ldr	r0, [pc, #208]	; (10047668 <Initialize_AirBags+0x1bc>)
10047598:	3b01      	subs	r3, #1
1004759a:	0059      	lsls	r1, r3, #1
1004759c:	5a0a      	ldrh	r2, [r1, r0]
1004759e:	9e01      	ldr	r6, [sp, #4]
100475a0:	4296      	cmp	r6, r2
100475a2:	dd3c      	ble.n	1004761e <Initialize_AirBags+0x172>
				if (state_pressure[currentBag-1] == INCREASE && multiplier_increase[currentBag-1] < 250) multiplier_increase[currentBag-1] += 10; // Increased pressure and still too low -> Raise multiplier
100475a4:	aa06      	add	r2, sp, #24
100475a6:	5cd2      	ldrb	r2, [r2, r3]
100475a8:	4e33      	ldr	r6, [pc, #204]	; (10047678 <Initialize_AirBags+0x1cc>)
100475aa:	2a00      	cmp	r2, #0
100475ac:	d04b      	beq.n	10047646 <Initialize_AirBags+0x19a>
				if (state_pressure[currentBag-1] == DECREASE && multiplier_decrease[currentBag-1] > 10) multiplier_decrease[currentBag-1] -= 10; // Decreased pressure and now its too low -> Lower multiplier
100475ae:	4e35      	ldr	r6, [pc, #212]	; (10047684 <Initialize_AirBags+0x1d8>)
100475b0:	2a01      	cmp	r2, #1
100475b2:	d03d      	beq.n	10047630 <Initialize_AirBags+0x184>
			SEGGER_RTT_printf(0, "%d mmHg, ", CurrentPressures[currentBag-1]);
100475b4:	5a42      	ldrh	r2, [r0, r1]
100475b6:	3501      	adds	r5, #1
100475b8:	b292      	uxth	r2, r2
100475ba:	4933      	ldr	r1, [pc, #204]	; (10047688 <Initialize_AirBags+0x1dc>)
100475bc:	2000      	movs	r0, #0
100475be:	f7fd fad8 	bl	10044b72 <SEGGER_RTT_printf>
		for (uint8_t i=0; i<numBags; i++) {
100475c2:	2d05      	cmp	r5, #5
100475c4:	d1e5      	bne.n	10047592 <Initialize_AirBags+0xe6>
		} SEGGER_RTT_printf(0, "\n");
100475c6:	4931      	ldr	r1, [pc, #196]	; (1004768c <Initialize_AirBags+0x1e0>)
100475c8:	2000      	movs	r0, #0
100475ca:	f7fd fad2 	bl	10044b72 <SEGGER_RTT_printf>
100475ce:	2200      	movs	r2, #0
			if (bagReady[currentBag-1] == 0){
100475d0:	ab02      	add	r3, sp, #8
100475d2:	5c9b      	ldrb	r3, [r3, r2]
100475d4:	a904      	add	r1, sp, #16
100475d6:	18cb      	adds	r3, r1, r3
100475d8:	3b01      	subs	r3, #1
100475da:	781b      	ldrb	r3, [r3, #0]
100475dc:	2b00      	cmp	r3, #0
100475de:	d03c      	beq.n	1004765a <Initialize_AirBags+0x1ae>
100475e0:	3201      	adds	r2, #1
		for (uint8_t i=0; i<numBags; i++){
100475e2:	2a05      	cmp	r2, #5
100475e4:	d1f4      	bne.n	100475d0 <Initialize_AirBags+0x124>
	SEGGER_RTT_printf(0, "Pressure changes are done\n");
100475e6:	492a      	ldr	r1, [pc, #168]	; (10047690 <Initialize_AirBags+0x1e4>)
100475e8:	2000      	movs	r0, #0
100475ea:	f7fd fac2 	bl	10044b72 <SEGGER_RTT_printf>
	WriteMultipliers_IntFlash(); // Save new multipliers
100475ee:	f7ff fe31 	bl	10047254 <WriteMultipliers_IntFlash>
}
100475f2:	b009      	add	sp, #36	; 0x24
100475f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
			} else if (CurrentPressures[currentBag-1] > (startingPressure + slack)) { // If a bag's pressure is too high
100475f6:	5ad2      	ldrh	r2, [r2, r3]
100475f8:	1d63      	adds	r3, r4, #5
100475fa:	429a      	cmp	r2, r3
100475fc:	ddbf      	ble.n	1004757e <Initialize_AirBags+0xd2>
				Depressurize_Air_Bag(currentBag, startingPressure, ((float)multiplier_decrease[currentBag-1])/100);
100475fe:	4b21      	ldr	r3, [pc, #132]	; (10047684 <Initialize_AirBags+0x1d8>)
10047600:	5d58      	ldrb	r0, [r3, r5]
10047602:	b2c0      	uxtb	r0, r0
10047604:	f7f9 fec0 	bl	10041388 <__aeabi_ui2f>
10047608:	491c      	ldr	r1, [pc, #112]	; (1004767c <Initialize_AirBags+0x1d0>)
1004760a:	f7f9 f9a1 	bl	10040950 <__aeabi_fdiv>
1004760e:	0021      	movs	r1, r4
10047610:	1c02      	adds	r2, r0, #0
10047612:	9800      	ldr	r0, [sp, #0]
10047614:	f7ff f958 	bl	100468c8 <Depressurize_Air_Bag>
				state_pressure[currentBag-1] = DECREASE;
10047618:	ab06      	add	r3, sp, #24
1004761a:	2201      	movs	r2, #1
1004761c:	e7ae      	b.n	1004757c <Initialize_AirBags+0xd0>
			} else if (CurrentPressures[currentBag-1] > (startingPressure + slack)) {
1004761e:	5a0e      	ldrh	r6, [r1, r0]
10047620:	1d62      	adds	r2, r4, #5
10047622:	4296      	cmp	r6, r2
10047624:	dd15      	ble.n	10047652 <Initialize_AirBags+0x1a6>
				if (state_pressure[currentBag-1] == INCREASE && multiplier_increase[currentBag-1] > 10) multiplier_increase[currentBag-1] -= 10; // Increased pressure and now its too high -> Lower multiplier
10047626:	aa06      	add	r2, sp, #24
10047628:	5cd2      	ldrb	r2, [r2, r3]
1004762a:	2a00      	cmp	r2, #0
1004762c:	d108      	bne.n	10047640 <Initialize_AirBags+0x194>
1004762e:	4e12      	ldr	r6, [pc, #72]	; (10047678 <Initialize_AirBags+0x1cc>)
10047630:	5cf2      	ldrb	r2, [r6, r3]
10047632:	2a0a      	cmp	r2, #10
10047634:	d9be      	bls.n	100475b4 <Initialize_AirBags+0x108>
10047636:	5cf2      	ldrb	r2, [r6, r3]
10047638:	3a0a      	subs	r2, #10
				if (state_pressure[currentBag-1] == DECREASE && multiplier_decrease[currentBag-1] < 250) multiplier_decrease[currentBag-1] += 10; // Decreased pressure and still too high -> Raise multiplier
1004763a:	b2d2      	uxtb	r2, r2
1004763c:	54f2      	strb	r2, [r6, r3]
1004763e:	e7b9      	b.n	100475b4 <Initialize_AirBags+0x108>
10047640:	2a01      	cmp	r2, #1
10047642:	d1b7      	bne.n	100475b4 <Initialize_AirBags+0x108>
10047644:	4e0f      	ldr	r6, [pc, #60]	; (10047684 <Initialize_AirBags+0x1d8>)
10047646:	5cf2      	ldrb	r2, [r6, r3]
10047648:	2af9      	cmp	r2, #249	; 0xf9
1004764a:	d8b3      	bhi.n	100475b4 <Initialize_AirBags+0x108>
1004764c:	5cf2      	ldrb	r2, [r6, r3]
1004764e:	320a      	adds	r2, #10
10047650:	e7f3      	b.n	1004763a <Initialize_AirBags+0x18e>
				bagReady[currentBag-1] = 1;
10047652:	2601      	movs	r6, #1
10047654:	aa04      	add	r2, sp, #16
10047656:	54d6      	strb	r6, [r2, r3]
10047658:	e7ac      	b.n	100475b4 <Initialize_AirBags+0x108>
1004765a:	3701      	adds	r7, #1
	for (uint8_t j=0; j<4; j++) {
1004765c:	2f04      	cmp	r7, #4
1004765e:	d000      	beq.n	10047662 <Initialize_AirBags+0x1b6>
10047660:	e76c      	b.n	1004753c <Initialize_AirBags+0x90>
10047662:	e7c0      	b.n	100475e6 <Initialize_AirBags+0x13a>
10047664:	100587f1 	.word	0x100587f1
10047668:	20000926 	.word	0x20000926
1004766c:	10058817 	.word	0x10058817
10047670:	0001c138 	.word	0x0001c138
10047674:	10058837 	.word	0x10058837
10047678:	20000900 	.word	0x20000900
1004767c:	42c80000 	.word	0x42c80000
10047680:	1005885b 	.word	0x1005885b
10047684:	20000938 	.word	0x20000938
10047688:	1005886f 	.word	0x1005886f
1004768c:	100589a3 	.word	0x100589a3
10047690:	10058879 	.word	0x10058879

10047694 <DeInitialize>:
 * Function Name  : DeInitialize()
 * Description    : Deinitializes some peripherals to save power
 * Input          : None
 * Return         : None
 *******************************************************************************/
void DeInitialize(){
10047694:	b570      	push	{r4, r5, r6, lr}
	// TODO: Low power for spi enable bits? Check Johnny's code
	// Turn off peripherals for disconnected mode, to save power
	// Internal ADC remains on to monitor battery level
	if (disconnectedMode == FALSE){
10047696:	4d0e      	ldr	r5, [pc, #56]	; (100476d0 <DeInitialize+0x3c>)
10047698:	782c      	ldrb	r4, [r5, #0]
1004769a:	b2e4      	uxtb	r4, r4
1004769c:	2c00      	cmp	r4, #0
1004769e:	d116      	bne.n	100476ce <DeInitialize+0x3a>
		//HAL_VTimer_Stop(0); // Stop notification timer
		HAL_VTimer_Stop(1); // Stop connection monitoring timer
100476a0:	2001      	movs	r0, #1
100476a2:	f005 faa0 	bl	1004cbe6 <HAL_VTimer_Stop>

		SPI_DeepPowerDown_Memory();
100476a6:	f7fe fdfb 	bl	100462a0 <SPI_DeepPowerDown_Memory>
		GPIO_ResetBits(RED_LED|BLUE_LED|PVControl|ValveControl|Valve1|Valve2|Valve3|Valve4|Valve5|Valve6|Valve7|Valve8|SensorControl);
100476aa:	480a      	ldr	r0, [pc, #40]	; (100476d4 <DeInitialize+0x40>)
100476ac:	f7fc fc9f 	bl	10043fee <GPIO_ResetBits>
		SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_SPI, DISABLE);
100476b0:	0021      	movs	r1, r4
100476b2:	2010      	movs	r0, #16
100476b4:	f7fc fd8a 	bl	100441cc <SysCtrl_PeripheralClockCmd>
		SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_ADC, DISABLE);
100476b8:	2080      	movs	r0, #128	; 0x80
100476ba:	0021      	movs	r1, r4
100476bc:	0040      	lsls	r0, r0, #1
100476be:	f7fc fd85 	bl	100441cc <SysCtrl_PeripheralClockCmd>

		disconnectedMode = TRUE;
100476c2:	2301      	movs	r3, #1
		SEGGER_RTT_printf(0, "Disconnected mode on\n");
100476c4:	4904      	ldr	r1, [pc, #16]	; (100476d8 <DeInitialize+0x44>)
100476c6:	0020      	movs	r0, r4
		disconnectedMode = TRUE;
100476c8:	702b      	strb	r3, [r5, #0]
		SEGGER_RTT_printf(0, "Disconnected mode on\n");
100476ca:	f7fd fa52 	bl	10044b72 <SEGGER_RTT_printf>
	}
}
100476ce:	bd70      	pop	{r4, r5, r6, pc}
100476d0:	2000090c 	.word	0x2000090c
100476d4:	03fc0970 	.word	0x03fc0970
100476d8:	10058790 	.word	0x10058790

100476dc <init>:
void init(void) {
100476dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	SEGGER_RTT_Init();
100476de:	f7fd f887 	bl	100447f0 <SEGGER_RTT_Init>
	SEGGER_RTT_ConfigUpBuffer(0,NULL,NULL,0,SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL);
100476e2:	2602      	movs	r6, #2
100476e4:	2300      	movs	r3, #0
100476e6:	9600      	str	r6, [sp, #0]
100476e8:	0019      	movs	r1, r3
100476ea:	001a      	movs	r2, r3
100476ec:	0018      	movs	r0, r3
100476ee:	f7fd f84f 	bl	10044790 <SEGGER_RTT_ConfigUpBuffer>
	SEGGER_RTT_printf(0,"The Device has began initialization\n");
100476f2:	4960      	ldr	r1, [pc, #384]	; (10047874 <init+0x198>)
100476f4:	2000      	movs	r0, #0
100476f6:	f7fd fa3c 	bl	10044b72 <SEGGER_RTT_printf>
	SystemInit();
100476fa:	f7fd fc09 	bl	10044f10 <SystemInit>
	SdkEvalIdentification();
100476fe:	f7fc ff45 	bl	1004458c <SdkEvalIdentification>
	SdkEvalComUartInit(UART_BAUDRATE);
10047702:	20e1      	movs	r0, #225	; 0xe1
10047704:	0240      	lsls	r0, r0, #9
10047706:	f7fc fec9 	bl	1004449c <SdkEvalComUartInit>
	SPI_Master_Configuration();
1004770a:	f7fe fc95 	bl	10046038 <SPI_Master_Configuration>
	SEGGER_RTT_printf(0,"Configured as SPI Master\n");
1004770e:	495a      	ldr	r1, [pc, #360]	; (10047878 <init+0x19c>)
10047710:	2000      	movs	r0, #0
10047712:	f7fd fa2e 	bl	10044b72 <SEGGER_RTT_printf>
	uint8_t ret = BlueNRG_Stack_Initialization(&BlueNRG_Stack_Init_params);
10047716:	4859      	ldr	r0, [pc, #356]	; (1004787c <init+0x1a0>)
10047718:	f002 f990 	bl	10049a3c <BlueNRG_Stack_Initialization>
1004771c:	1e05      	subs	r5, r0, #0
	if (ret != BLE_STATUS_SUCCESS) {
1004771e:	d000      	beq.n	10047722 <init+0x46>
10047720:	e7fe      	b.n	10047720 <init+0x44>
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
10047722:	21c0      	movs	r1, #192	; 0xc0
  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
10047724:	4a56      	ldr	r2, [pc, #344]	; (10047880 <init+0x1a4>)
10047726:	4b57      	ldr	r3, [pc, #348]	; (10047884 <init+0x1a8>)
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
10047728:	4857      	ldr	r0, [pc, #348]	; (10047888 <init+0x1ac>)
  SysTick->LOAD  = (ticks & SysTick_LOAD_RELOAD_Msk) - 1;      /* set reload register */
1004772a:	6053      	str	r3, [r2, #4]
    SCB->SHP[_SHP_IDX(IRQn)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << _BIT_SHIFT(IRQn))) |
1004772c:	6a03      	ldr	r3, [r0, #32]
1004772e:	0609      	lsls	r1, r1, #24
10047730:	021b      	lsls	r3, r3, #8
10047732:	0a1b      	lsrs	r3, r3, #8
10047734:	430b      	orrs	r3, r1
10047736:	6203      	str	r3, [r0, #32]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
10047738:	2307      	movs	r3, #7
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
1004773a:	6095      	str	r5, [r2, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
1004773c:	6013      	str	r3, [r2, #0]
	Clock_Init();
1004773e:	f7fb fcdb 	bl	100430f8 <Clock_Init>
	ret = Sensor_DeviceInit();
10047742:	f000 f91d 	bl	10047980 <Sensor_DeviceInit>
10047746:	1e04      	subs	r4, r0, #0
	if (ret != BLE_STATUS_SUCCESS) {
10047748:	d004      	beq.n	10047754 <init+0x78>
		SEGGER_RTT_printf(0,"Error in BLE init\n");
1004774a:	4950      	ldr	r1, [pc, #320]	; (1004788c <init+0x1b0>)
1004774c:	0028      	movs	r0, r5
1004774e:	f7fd fa10 	bl	10044b72 <SEGGER_RTT_printf>
10047752:	e7fe      	b.n	10047752 <init+0x76>
	Batt_ADC_Configuration();
10047754:	f7fe fbf4 	bl	10045f40 <Batt_ADC_Configuration>
	ADC_Cmd(ENABLE);
10047758:	2001      	movs	r0, #1
1004775a:	f7fc fb0b 	bl	10043d74 <ADC_Cmd>
	SEGGER_RTT_printf(0,"Initialized internal ADC\n");
1004775e:	494c      	ldr	r1, [pc, #304]	; (10047890 <init+0x1b4>)
10047760:	0020      	movs	r0, r4
10047762:	f7fd fa06 	bl	10044b72 <SEGGER_RTT_printf>
	ADC_Reset();
10047766:	f7fe fe45 	bl	100463f4 <ADC_Reset>
	SEGGER_RTT_printf(0,"Initialized external ADC\n");
1004776a:	494a      	ldr	r1, [pc, #296]	; (10047894 <init+0x1b8>)
1004776c:	0020      	movs	r0, r4
1004776e:	f7fd fa00 	bl	10044b72 <SEGGER_RTT_printf>
	InitGPIO(RED_LED|BLUE_LED|PVControl|ValveControl|Valve1|Valve2|Valve3|Valve4|Valve5|Valve6|Valve7|Valve8|SensorControl);
10047772:	4849      	ldr	r0, [pc, #292]	; (10047898 <init+0x1bc>)
10047774:	f7fe fc4c 	bl	10046010 <InitGPIO>
	GPIO_SetBits(RED_LED|BLUE_LED); // Turn on the LEDs
10047778:	4848      	ldr	r0, [pc, #288]	; (1004789c <init+0x1c0>)
1004777a:	f7fc fc34 	bl	10043fe6 <GPIO_SetBits>
	GPIO_On(SensorControl); // Turn on the supply voltage for the sensors
1004777e:	2080      	movs	r0, #128	; 0x80
10047780:	0440      	lsls	r0, r0, #17
10047782:	f7fe fc3b 	bl	10045ffc <GPIO_On>
	GPIO_Off(PVControl); // Turn off the pump to begin
10047786:	2080      	movs	r0, #128	; 0x80
10047788:	0400      	lsls	r0, r0, #16
1004778a:	f7fe fc3c 	bl	10046006 <GPIO_Off>
	Close_Valve(); // Close valves to begin with
1004778e:	f7fe ff93 	bl	100466b8 <Close_Valve>
	longTermMode = FALSE; // Long term sleep mode for low battery
10047792:	4b43      	ldr	r3, [pc, #268]	; (100478a0 <init+0x1c4>)
	month = 1;
10047794:	4a43      	ldr	r2, [pc, #268]	; (100478a4 <init+0x1c8>)
	longTermMode = FALSE; // Long term sleep mode for low battery
10047796:	701c      	strb	r4, [r3, #0]
	disconnectedMode = FALSE; // Low power mode for when connection has not been established for a period
10047798:	4b43      	ldr	r3, [pc, #268]	; (100478a8 <init+0x1cc>)
	currentAddress = 0;
1004779a:	4d44      	ldr	r5, [pc, #272]	; (100478ac <init+0x1d0>)
	disconnectedMode = FALSE; // Low power mode for when connection has not been established for a period
1004779c:	701c      	strb	r4, [r3, #0]
	currentState = 0;
1004779e:	4b44      	ldr	r3, [pc, #272]	; (100478b0 <init+0x1d4>)
	currentAddress = 0;
100477a0:	602c      	str	r4, [r5, #0]
	currentState = 0;
100477a2:	701c      	strb	r4, [r3, #0]
	connection_handle = 0;
100477a4:	4b43      	ldr	r3, [pc, #268]	; (100478b4 <init+0x1d8>)
100477a6:	801c      	strh	r4, [r3, #0]
	isPressureReaderNotificationEnabled = FALSE;
100477a8:	4b43      	ldr	r3, [pc, #268]	; (100478b8 <init+0x1dc>)
100477aa:	701c      	strb	r4, [r3, #0]
	isDownloadNotificationEnabled = FALSE;
100477ac:	4b43      	ldr	r3, [pc, #268]	; (100478bc <init+0x1e0>)
100477ae:	701c      	strb	r4, [r3, #0]
	year = 0;
100477b0:	4b43      	ldr	r3, [pc, #268]	; (100478c0 <init+0x1e4>)
100477b2:	701c      	strb	r4, [r3, #0]
	month = 1;
100477b4:	2301      	movs	r3, #1
100477b6:	7013      	strb	r3, [r2, #0]
	day = 1;
100477b8:	4a42      	ldr	r2, [pc, #264]	; (100478c4 <init+0x1e8>)
100477ba:	7013      	strb	r3, [r2, #0]
	hour = 1;
100477bc:	4a42      	ldr	r2, [pc, #264]	; (100478c8 <init+0x1ec>)
100477be:	7013      	strb	r3, [r2, #0]
	sensorOffsets[0] = 56;
100477c0:	2238      	movs	r2, #56	; 0x38
	minute = 0;
100477c2:	4b42      	ldr	r3, [pc, #264]	; (100478cc <init+0x1f0>)
100477c4:	701c      	strb	r4, [r3, #0]
	second = 0;
100477c6:	4b42      	ldr	r3, [pc, #264]	; (100478d0 <init+0x1f4>)
100477c8:	701c      	strb	r4, [r3, #0]
	logCounter[0] = 0;
100477ca:	4b42      	ldr	r3, [pc, #264]	; (100478d4 <init+0x1f8>)
100477cc:	601c      	str	r4, [r3, #0]
	logCounter[1] = 0;
100477ce:	605c      	str	r4, [r3, #4]
	logCounter[2] = 0;
100477d0:	609c      	str	r4, [r3, #8]
	logCounter[3] = 0;
100477d2:	60dc      	str	r4, [r3, #12]
	logCounter[4] = 0;
100477d4:	611c      	str	r4, [r3, #16]
	logCounter[5] = 0;
100477d6:	615c      	str	r4, [r3, #20]
	logCounter[6] = 0;
100477d8:	619c      	str	r4, [r3, #24]
	logCounter[7] = 0;
100477da:	61dc      	str	r4, [r3, #28]
	sensorOffsets[0] = 56;
100477dc:	4b3e      	ldr	r3, [pc, #248]	; (100478d8 <init+0x1fc>)
100477de:	701a      	strb	r2, [r3, #0]
	sensorOffsets[1] = 56;
100477e0:	705a      	strb	r2, [r3, #1]
	sensorOffsets[2] = 56;
100477e2:	709a      	strb	r2, [r3, #2]
	sensorOffsets[3] = 56;
100477e4:	70da      	strb	r2, [r3, #3]
	sensorOffsets[4] = 56;
100477e6:	711a      	strb	r2, [r3, #4]
	sensorOffsets[5] = 56;
100477e8:	715a      	strb	r2, [r3, #5]
	sensorOffsets[6] = 56;
100477ea:	719a      	strb	r2, [r3, #6]
	sensorOffsets[7] = 56;
100477ec:	71da      	strb	r2, [r3, #7]
	currentAddress = External_Find_Last_Entry(); // Get currentAddress
100477ee:	f7ff fb2d 	bl	10046e4c <External_Find_Last_Entry>
100477f2:	6028      	str	r0, [r5, #0]
	lowerBoundPressure = ReadLP_IntFlash();
100477f4:	f7ff fba4 	bl	10046f40 <ReadLP_IntFlash>
100477f8:	4b38      	ldr	r3, [pc, #224]	; (100478dc <init+0x200>)
100477fa:	8018      	strh	r0, [r3, #0]
	upperBoundPressure = ReadUP_IntFlash();
100477fc:	f7ff fbb6 	bl	10046f6c <ReadUP_IntFlash>
10047800:	4b37      	ldr	r3, [pc, #220]	; (100478e0 <init+0x204>)
10047802:	8018      	strh	r0, [r3, #0]
	targetPressure = ReadTP_IntFlash();
10047804:	f7ff fbc8 	bl	10046f98 <ReadTP_IntFlash>
10047808:	4b36      	ldr	r3, [pc, #216]	; (100478e4 <init+0x208>)
1004780a:	8018      	strh	r0, [r3, #0]
	samplingPeriod = ReadSP_IntFlash();
1004780c:	f7ff fbda 	bl	10046fc4 <ReadSP_IntFlash>
10047810:	4f35      	ldr	r7, [pc, #212]	; (100478e8 <init+0x20c>)
10047812:	7038      	strb	r0, [r7, #0]
	numberOfSamples = ReadNS_IntFlash();
10047814:	f7ff fbec 	bl	10046ff0 <ReadNS_IntFlash>
10047818:	4b34      	ldr	r3, [pc, #208]	; (100478ec <init+0x210>)
1004781a:	7018      	strb	r0, [r3, #0]
	cushionMode = ReadMode_IntFlash();
1004781c:	f7ff fbfe 	bl	1004701c <ReadMode_IntFlash>
10047820:	4d33      	ldr	r5, [pc, #204]	; (100478f0 <init+0x214>)
10047822:	7028      	strb	r0, [r5, #0]
	ReadMultipliers_IntFlash(); // Get current multipliers
10047824:	f7ff fca0 	bl	10047168 <ReadMultipliers_IntFlash>
	SEGGER_RTT_printf(0,"Initialized GPIO's\n");
10047828:	4932      	ldr	r1, [pc, #200]	; (100478f4 <init+0x218>)
1004782a:	0020      	movs	r0, r4
1004782c:	f7fd f9a1 	bl	10044b72 <SEGGER_RTT_printf>
	HAL_VTimerStart_ms(3, 60000);
10047830:	4931      	ldr	r1, [pc, #196]	; (100478f8 <init+0x21c>)
10047832:	2003      	movs	r0, #3
10047834:	f005 f9bd 	bl	1004cbb2 <HAL_VTimerStart_ms>
	HAL_VTimerStart_ms(0, 1000);
10047838:	21fa      	movs	r1, #250	; 0xfa
1004783a:	0020      	movs	r0, r4
1004783c:	0089      	lsls	r1, r1, #2
1004783e:	f005 f9b8 	bl	1004cbb2 <HAL_VTimerStart_ms>
	if (cushionMode == 0) { // In autonomous mode, start readjustment timer
10047842:	7828      	ldrb	r0, [r5, #0]
10047844:	b2c0      	uxtb	r0, r0
10047846:	2800      	cmp	r0, #0
10047848:	d10b      	bne.n	10047862 <init+0x186>
		SEGGER_RTT_printf(0,"In patient mode\n");
1004784a:	492c      	ldr	r1, [pc, #176]	; (100478fc <init+0x220>)
1004784c:	f7fd f991 	bl	10044b72 <SEGGER_RTT_printf>
		HAL_VTimerStart_ms(2, samplingPeriod*60*1000); // Pressure readjustment counter
10047850:	4b29      	ldr	r3, [pc, #164]	; (100478f8 <init+0x21c>)
10047852:	7839      	ldrb	r1, [r7, #0]
10047854:	0030      	movs	r0, r6
10047856:	4359      	muls	r1, r3
10047858:	f005 f9ab 	bl	1004cbb2 <HAL_VTimerStart_ms>
		DeInitialize();
1004785c:	f7ff ff1a 	bl	10047694 <DeInitialize>
}
10047860:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
	} else 	if (cushionMode == 1) {
10047862:	782b      	ldrb	r3, [r5, #0]
10047864:	2b01      	cmp	r3, #1
10047866:	d1fb      	bne.n	10047860 <init+0x184>
		SEGGER_RTT_printf(0,"In admin mode\n");
10047868:	4925      	ldr	r1, [pc, #148]	; (10047900 <init+0x224>)
1004786a:	0020      	movs	r0, r4
1004786c:	f7fd f981 	bl	10044b72 <SEGGER_RTT_printf>
}
10047870:	e7f6      	b.n	10047860 <init+0x184>
10047872:	46c0      	nop			; (mov r8, r8)
10047874:	10058b74 	.word	0x10058b74
10047878:	10058b99 	.word	0x10058b99
1004787c:	1005875c 	.word	0x1005875c
10047880:	e000e010 	.word	0xe000e010
10047884:	00007cfe 	.word	0x00007cfe
10047888:	e000ed00 	.word	0xe000ed00
1004788c:	10058bb3 	.word	0x10058bb3
10047890:	10058bc6 	.word	0x10058bc6
10047894:	10058be0 	.word	0x10058be0
10047898:	03fc0970 	.word	0x03fc0970
1004789c:	02000010 	.word	0x02000010
100478a0:	20000940 	.word	0x20000940
100478a4:	200008f4 	.word	0x200008f4
100478a8:	2000090c 	.word	0x2000090c
100478ac:	200008fc 	.word	0x200008fc
100478b0:	200008ec 	.word	0x200008ec
100478b4:	2000090a 	.word	0x2000090a
100478b8:	200008f5 	.word	0x200008f5
100478bc:	20000920 	.word	0x20000920
100478c0:	20000916 	.word	0x20000916
100478c4:	20000917 	.word	0x20000917
100478c8:	20000909 	.word	0x20000909
100478cc:	200008fa 	.word	0x200008fa
100478d0:	200008f6 	.word	0x200008f6
100478d4:	200008cc 	.word	0x200008cc
100478d8:	20000918 	.word	0x20000918
100478dc:	200008f8 	.word	0x200008f8
100478e0:	20000936 	.word	0x20000936
100478e4:	20000914 	.word	0x20000914
100478e8:	20000908 	.word	0x20000908
100478ec:	20000941 	.word	0x20000941
100478f0:	200008f7 	.word	0x200008f7
100478f4:	10058bfa 	.word	0x10058bfa
100478f8:	0000ea60 	.word	0x0000ea60
100478fc:	10058c0e 	.word	0x10058c0e
10047900:	10058c1f 	.word	0x10058c1f

10047904 <main>:
{
10047904:	b510      	push	{r4, lr}
	init();
10047906:	f7ff fee9 	bl	100476dc <init>
	SEGGER_RTT_printf(0,"Initializations have been completed\n");
1004790a:	4909      	ldr	r1, [pc, #36]	; (10047930 <main+0x2c>)
1004790c:	2000      	movs	r0, #0
1004790e:	f7fd f930 	bl	10044b72 <SEGGER_RTT_printf>
		BTLE_StackTick();
10047912:	f002 f851 	bl	100499b8 <BTLE_StackTick>
		BlueNRG_Sleep(SLEEPMODE_NOTIMER,0,0);
10047916:	2200      	movs	r2, #0
10047918:	2003      	movs	r0, #3
1004791a:	0011      	movs	r1, r2
1004791c:	f7fb fc5e 	bl	100431dc <BlueNRG_Sleep>
		if (!longTermMode){
10047920:	4b04      	ldr	r3, [pc, #16]	; (10047934 <main+0x30>)
10047922:	781b      	ldrb	r3, [r3, #0]
10047924:	2b00      	cmp	r3, #0
10047926:	d1f4      	bne.n	10047912 <main+0xe>
			APP_Tick();
10047928:	f000 f8c8 	bl	10047abc <APP_Tick>
1004792c:	e7f1      	b.n	10047912 <main+0xe>
1004792e:	46c0      	nop			; (mov r8, r8)
10047930:	10058c2e 	.word	0x10058c2e
10047934:	20000940 	.word	0x20000940

10047938 <ReInitialize>:
 * Function Name  : ReInitialize()
 * Description    : Reinitializes some peripherals that had been previously deinitialized
 * Input          : None
 * Return         : None
 *******************************************************************************/
void ReInitialize(){
10047938:	b570      	push	{r4, r5, r6, lr}
	HAL_VTimer_Stop(1);
1004793a:	2001      	movs	r0, #1
1004793c:	f005 f953 	bl	1004cbe6 <HAL_VTimer_Stop>
	if (disconnectedMode == TRUE) {
10047940:	4b0c      	ldr	r3, [pc, #48]	; (10047974 <ReInitialize+0x3c>)
10047942:	781c      	ldrb	r4, [r3, #0]
10047944:	b2e4      	uxtb	r4, r4
10047946:	2c01      	cmp	r4, #1
10047948:	d113      	bne.n	10047972 <ReInitialize+0x3a>
		//HAL_VTimerStart_ms(0, 1000); // Start notification timer

		disconnectedMode = FALSE;
1004794a:	2500      	movs	r5, #0

		// Turn peripherals back on
		SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_SPI, ENABLE);
1004794c:	0021      	movs	r1, r4
1004794e:	2010      	movs	r0, #16
		disconnectedMode = FALSE;
10047950:	701d      	strb	r5, [r3, #0]
		SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_SPI, ENABLE);
10047952:	f7fc fc3b 	bl	100441cc <SysCtrl_PeripheralClockCmd>
		SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_ADC, ENABLE);
10047956:	2080      	movs	r0, #128	; 0x80
10047958:	0021      	movs	r1, r4
1004795a:	0040      	lsls	r0, r0, #1
1004795c:	f7fc fc36 	bl	100441cc <SysCtrl_PeripheralClockCmd>
		GPIO_SetBits(RED_LED|BLUE_LED|SensorControl);
10047960:	4805      	ldr	r0, [pc, #20]	; (10047978 <ReInitialize+0x40>)
10047962:	f7fc fb40 	bl	10043fe6 <GPIO_SetBits>
		SPI_DeepPowerRelease_Memory();
10047966:	f7fe fca6 	bl	100462b6 <SPI_DeepPowerRelease_Memory>

		SEGGER_RTT_printf(0, "Disconnected mode off\n");
1004796a:	4904      	ldr	r1, [pc, #16]	; (1004797c <ReInitialize+0x44>)
1004796c:	0028      	movs	r0, r5
1004796e:	f7fd f900 	bl	10044b72 <SEGGER_RTT_printf>
	}

}
10047972:	bd70      	pop	{r4, r5, r6, pc}
10047974:	2000090c 	.word	0x2000090c
10047978:	03000010 	.word	0x03000010
1004797c:	100588db 	.word	0x100588db

10047980 <Sensor_DeviceInit>:
 * Description    : Init the device sensors.
 * Input          : None.
 * Return         : Status.
 *******************************************************************************/
uint8_t Sensor_DeviceInit()
{
10047980:	b5f0      	push	{r4, r5, r6, r7, lr}
	uint8_t bdaddr[] = {0x12, 0x34, 0x00, 0xE1, 0x80, 0x02};
	uint8_t ret;
	uint16_t service_handle, dev_name_char_handle, appearance_char_handle;
	uint8_t device_name[] = {'C', 'u', 's', 'h', 'i', 'o', 'n', '0', '0', '0'};
10047982:	250a      	movs	r5, #10
	uint8_t bdaddr[] = {0x12, 0x34, 0x00, 0xE1, 0x80, 0x02};
10047984:	4c2a      	ldr	r4, [pc, #168]	; (10047a30 <Sensor_DeviceInit+0xb0>)
{
10047986:	b08f      	sub	sp, #60	; 0x3c
	uint8_t bdaddr[] = {0x12, 0x34, 0x00, 0xE1, 0x80, 0x02};
10047988:	0021      	movs	r1, r4
1004798a:	2206      	movs	r2, #6
1004798c:	a809      	add	r0, sp, #36	; 0x24
1004798e:	f000 fc18 	bl	100481c2 <memcpy>
	uint8_t device_name[] = {'C', 'u', 's', 'h', 'i', 'o', 'n', '0', '0', '0'};
10047992:	1da1      	adds	r1, r4, #6
10047994:	002a      	movs	r2, r5
10047996:	a80b      	add	r0, sp, #44	; 0x2c
10047998:	f000 fc13 	bl	100481c2 <memcpy>

	/* Set the device public address */
	ret = aci_hal_write_config_data(CONFIG_DATA_PUBADDR_OFFSET, CONFIG_DATA_PUBADDR_LEN,
1004799c:	aa09      	add	r2, sp, #36	; 0x24
1004799e:	2106      	movs	r1, #6
100479a0:	2000      	movs	r0, #0
100479a2:	f002 f804 	bl	100499ae <aci_hal_write_config_data>
100479a6:	1e04      	subs	r4, r0, #0
								  bdaddr);
	if(ret != BLE_STATUS_SUCCESS) return ret;
100479a8:	d13e      	bne.n	10047a28 <Sensor_DeviceInit+0xa8>

	/* Set the TX power -2 dBm */
	aci_hal_set_tx_power_level(1, 7); //5->7
100479aa:	2107      	movs	r1, #7
100479ac:	2001      	movs	r0, #1
100479ae:	f001 fffa 	bl	100499a6 <aci_hal_set_tx_power_level>

	/* GATT Init */
	ret = aci_gatt_init();
100479b2:	f001 ffe3 	bl	1004997c <aci_gatt_init>
100479b6:	1e04      	subs	r4, r0, #0
	if(ret != BLE_STATUS_SUCCESS) return ret;
100479b8:	d136      	bne.n	10047a28 <Sensor_DeviceInit+0xa8>

	/* GAP Init */
	ret = aci_gap_init(GAP_PERIPHERAL_ROLE, 0, sizeof(device_name), &service_handle, &dev_name_char_handle, &appearance_char_handle);
100479ba:	261e      	movs	r6, #30
100479bc:	2322      	movs	r3, #34	; 0x22
100479be:	446e      	add	r6, sp
100479c0:	446b      	add	r3, sp
100479c2:	af08      	add	r7, sp, #32
100479c4:	9301      	str	r3, [sp, #4]
100479c6:	0001      	movs	r1, r0
100479c8:	9700      	str	r7, [sp, #0]
100479ca:	0033      	movs	r3, r6
100479cc:	002a      	movs	r2, r5
100479ce:	2001      	movs	r0, #1
100479d0:	f001 fef0 	bl	100497b4 <aci_gap_init>
100479d4:	1e04      	subs	r4, r0, #0
	if(ret != BLE_STATUS_SUCCESS) return ret;
100479d6:	d127      	bne.n	10047a28 <Sensor_DeviceInit+0xa8>

	ret = aci_gatt_update_char_value_ext(0, service_handle, dev_name_char_handle, 0,sizeof(device_name), 0, sizeof(device_name), device_name);
100479d8:	ab0b      	add	r3, sp, #44	; 0x2c
100479da:	883a      	ldrh	r2, [r7, #0]
100479dc:	8831      	ldrh	r1, [r6, #0]
100479de:	9303      	str	r3, [sp, #12]
100479e0:	9502      	str	r5, [sp, #8]
100479e2:	9500      	str	r5, [sp, #0]
100479e4:	9001      	str	r0, [sp, #4]
100479e6:	0003      	movs	r3, r0
100479e8:	f001 ffcc 	bl	10049984 <aci_gatt_update_char_value_ext>
100479ec:	0004      	movs	r4, r0
100479ee:	1e05      	subs	r5, r0, #0

	if(ret != BLE_STATUS_SUCCESS) return ret;
100479f0:	d11a      	bne.n	10047a28 <Sensor_DeviceInit+0xa8>
  
	ret = aci_gap_set_authentication_requirement(BONDING,
100479f2:	4b10      	ldr	r3, [pc, #64]	; (10047a34 <Sensor_DeviceInit+0xb4>)
100479f4:	2101      	movs	r1, #1
100479f6:	9303      	str	r3, [sp, #12]
100479f8:	2310      	movs	r3, #16
100479fa:	9301      	str	r3, [sp, #4]
100479fc:	3b09      	subs	r3, #9
100479fe:	9004      	str	r0, [sp, #16]
10047a00:	9002      	str	r0, [sp, #8]
10047a02:	9300      	str	r3, [sp, #0]
10047a04:	0002      	movs	r2, r0
10047a06:	0003      	movs	r3, r0
10047a08:	0008      	movs	r0, r1
10047a0a:	f001 feeb 	bl	100497e4 <aci_gap_set_authentication_requirement>
10047a0e:	1e04      	subs	r4, r0, #0
											   7,
											   16,
											   USE_FIXED_PIN_FOR_PAIRING,
											   123456,
											   0x00);
	if(ret != BLE_STATUS_SUCCESS) return ret;
10047a10:	d10a      	bne.n	10047a28 <Sensor_DeviceInit+0xa8>


	/* Add sensor service and Characteristics */

	SEGGER_RTT_printf(0,"Set bluetooth settings\n");
10047a12:	4909      	ldr	r1, [pc, #36]	; (10047a38 <Sensor_DeviceInit+0xb8>)
10047a14:	f7fd f8ad 	bl	10044b72 <SEGGER_RTT_printf>

	ret = Add_Sensor_Service();
10047a18:	f7fd fb2e 	bl	10045078 <Add_Sensor_Service>
10047a1c:	1e04      	subs	r4, r0, #0
	if(ret != BLE_STATUS_SUCCESS) {
10047a1e:	d003      	beq.n	10047a28 <Sensor_DeviceInit+0xa8>
		SEGGER_RTT_printf(0,"Failure in Add Sensor Service\n");
10047a20:	4906      	ldr	r1, [pc, #24]	; (10047a3c <Sensor_DeviceInit+0xbc>)
10047a22:	0028      	movs	r0, r5
10047a24:	f7fd f8a5 	bl	10044b72 <SEGGER_RTT_printf>
		return ret;
	}

	//BLE Stack Initialized with SUCCESS
	return BLE_STATUS_SUCCESS;
}
10047a28:	0020      	movs	r0, r4
10047a2a:	b00f      	add	sp, #60	; 0x3c
10047a2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10047a2e:	46c0      	nop			; (mov r8, r8)
10047a30:	10058287 	.word	0x10058287
10047a34:	0001e240 	.word	0x0001e240
10047a38:	10058db2 	.word	0x10058db2
10047a3c:	10058dca 	.word	0x10058dca

10047a40 <Set_DeviceConnectable>:
 * Input          : None.
 * Output         : None.
 * Return         : None.
 *******************************************************************************/
void Set_DeviceConnectable(void)
{  
10047a40:	b530      	push	{r4, r5, lr}
	uint8_t ret;
	uint8_t local_name[] = {AD_TYPE_COMPLETE_LOCAL_NAME, 'C', 'u', 's', 'h', 'i', 'o', 'n', '0', '0', '0'};
10047a42:	491b      	ldr	r1, [pc, #108]	; (10047ab0 <Set_DeviceConnectable+0x70>)
{  
10047a44:	b08d      	sub	sp, #52	; 0x34
	uint8_t local_name[] = {AD_TYPE_COMPLETE_LOCAL_NAME, 'C', 'u', 's', 'h', 'i', 'o', 'n', '0', '0', '0'};
10047a46:	ad09      	add	r5, sp, #36	; 0x24
10047a48:	220b      	movs	r2, #11
10047a4a:	3110      	adds	r1, #16
10047a4c:	0028      	movs	r0, r5
10047a4e:	f000 fbb8 	bl	100481c2 <memcpy>

	//Set General Discoverable Mode
	hci_le_set_scan_response_data(0,NULL);
10047a52:	2100      	movs	r1, #0

	uint8_t deviceNum[3];
	BOOL isModified = ReadDeviceNum_IntFlash(deviceNum);
10047a54:	ac08      	add	r4, sp, #32
	hci_le_set_scan_response_data(0,NULL);
10047a56:	0008      	movs	r0, r1
10047a58:	f005 f827 	bl	1004caaa <hci_le_set_scan_response_data>
	BOOL isModified = ReadDeviceNum_IntFlash(deviceNum);
10047a5c:	0020      	movs	r0, r4
10047a5e:	f7ff fa09 	bl	10046e74 <ReadDeviceNum_IntFlash>
	if (isModified){
10047a62:	2800      	cmp	r0, #0
10047a64:	d005      	beq.n	10047a72 <Set_DeviceConnectable+0x32>
		//so it has been modified and name is valid
		local_name[10] = deviceNum[2];
10047a66:	78a3      	ldrb	r3, [r4, #2]
10047a68:	72ab      	strb	r3, [r5, #10]
		local_name[9] = deviceNum[1];
10047a6a:	7863      	ldrb	r3, [r4, #1]
10047a6c:	726b      	strb	r3, [r5, #9]
		local_name[8] = deviceNum[0];
10047a6e:	7823      	ldrb	r3, [r4, #0]
10047a70:	722b      	strb	r3, [r5, #8]
	}

	ret = aci_gap_set_discoverable(ADV_IND,
10047a72:	23c8      	movs	r3, #200	; 0xc8
10047a74:	011b      	lsls	r3, r3, #4
10047a76:	9306      	str	r3, [sp, #24]
10047a78:	2310      	movs	r3, #16
10047a7a:	2400      	movs	r4, #0
10047a7c:	9305      	str	r3, [sp, #20]
10047a7e:	3b05      	subs	r3, #5
10047a80:	9301      	str	r3, [sp, #4]
10047a82:	9404      	str	r4, [sp, #16]
10047a84:	9403      	str	r4, [sp, #12]
10047a86:	9502      	str	r5, [sp, #8]
10047a88:	9400      	str	r4, [sp, #0]
10047a8a:	3b0a      	subs	r3, #10
10047a8c:	2230      	movs	r2, #48	; 0x30
10047a8e:	2120      	movs	r1, #32
10047a90:	0020      	movs	r0, r4
10047a92:	f001 fef1 	bl	10049878 <aci_gap_set_discoverable>
			0x0020,0x0030,RANDOM_ADDR, NO_WHITE_LIST_USE,sizeof(local_name), local_name, 0, NULL,0x0010, 0x0C80); //Changed
	if(ret != BLE_STATUS_SUCCESS) {
10047a96:	42a0      	cmp	r0, r4
10047a98:	d005      	beq.n	10047aa6 <Set_DeviceConnectable+0x66>
		SEGGER_RTT_printf(0,"In Set_DeviceConnectable. Error: %04x\n",ret);
10047a9a:	0002      	movs	r2, r0
10047a9c:	4905      	ldr	r1, [pc, #20]	; (10047ab4 <Set_DeviceConnectable+0x74>)
10047a9e:	0020      	movs	r0, r4
10047aa0:	f7fd f867 	bl	10044b72 <SEGGER_RTT_printf>
10047aa4:	e7fe      	b.n	10047aa4 <Set_DeviceConnectable+0x64>
		while (1);
	}
	SEGGER_RTT_printf(0, "Device has been set as connectable.\n");
10047aa6:	4904      	ldr	r1, [pc, #16]	; (10047ab8 <Set_DeviceConnectable+0x78>)
10047aa8:	f7fd f863 	bl	10044b72 <SEGGER_RTT_printf>
}
10047aac:	b00d      	add	sp, #52	; 0x34
10047aae:	bd30      	pop	{r4, r5, pc}
10047ab0:	10058287 	.word	0x10058287
10047ab4:	10058de9 	.word	0x10058de9
10047ab8:	10058e10 	.word	0x10058e10

10047abc <APP_Tick>:
 * Input          : None.
 * Output         : None.
 * Return         : None.
 *******************************************************************************/
void APP_Tick(void)
{
10047abc:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Make the device discoverable */
	if(set_connectable) {
10047abe:	4c30      	ldr	r4, [pc, #192]	; (10047b80 <APP_Tick+0xc4>)
{
10047ac0:	b0b9      	sub	sp, #228	; 0xe4
	if(set_connectable) {
10047ac2:	7823      	ldrb	r3, [r4, #0]
10047ac4:	2b00      	cmp	r3, #0
10047ac6:	d003      	beq.n	10047ad0 <APP_Tick+0x14>
		Set_DeviceConnectable();
10047ac8:	f7ff ffba 	bl	10047a40 <Set_DeviceConnectable>
		set_connectable = FALSE;
10047acc:	2300      	movs	r3, #0
10047ace:	7023      	strb	r3, [r4, #0]
	}

	/*  Update sensor value */
	if (connected){
10047ad0:	4b2c      	ldr	r3, [pc, #176]	; (10047b84 <APP_Tick+0xc8>)
10047ad2:	681b      	ldr	r3, [r3, #0]
10047ad4:	2b00      	cmp	r3, #0
10047ad6:	d050      	beq.n	10047b7a <APP_Tick+0xbe>
		tBleStatus ret = BLE_STATUS_SUCCESS;

		// Send data to master if notification is enabled
		if (isDownloadNotificationEnabled) {
10047ad8:	4f2b      	ldr	r7, [pc, #172]	; (10047b88 <APP_Tick+0xcc>)
10047ada:	783b      	ldrb	r3, [r7, #0]
10047adc:	2b00      	cmp	r3, #0
10047ade:	d04c      	beq.n	10047b7a <APP_Tick+0xbe>
10047ae0:	2600      	movs	r6, #0
			uint8_t data[216];
			uint8_t index = 0;
			for (uint8_t a = 0; a<216; a++){
				data[a] = SPI_Read_Memory(address);
10047ae2:	4c2a      	ldr	r4, [pc, #168]	; (10047b8c <APP_Tick+0xd0>)
10047ae4:	b2f5      	uxtb	r5, r6
10047ae6:	6820      	ldr	r0, [r4, #0]
10047ae8:	f7fe fb4c 	bl	10046184 <SPI_Read_Memory>
10047aec:	ab02      	add	r3, sp, #8
10047aee:	54f0      	strb	r0, [r6, r3]
				address += 1;
10047af0:	6823      	ldr	r3, [r4, #0]
10047af2:	3301      	adds	r3, #1
10047af4:	6023      	str	r3, [r4, #0]
				if (address > currentAddress){ // Reached the end. No need to continue read.
10047af6:	4b26      	ldr	r3, [pc, #152]	; (10047b90 <APP_Tick+0xd4>)
10047af8:	6822      	ldr	r2, [r4, #0]
10047afa:	681b      	ldr	r3, [r3, #0]
10047afc:	429a      	cmp	r2, r3
10047afe:	d91f      	bls.n	10047b40 <APP_Tick+0x84>
					isDownloadNotificationEnabled = FALSE;
10047b00:	2600      	movs	r6, #0
					index = a+1;
10047b02:	3501      	adds	r5, #1
10047b04:	b2ed      	uxtb	r5, r5
				SEGGER_RTT_printf(0, "----------------------------\n");
				ret = Notify_Download_Val((uint8_t*)&data,216);
				if (ret != BLE_STATUS_SUCCESS) address -= 216; // Resend data
			}
			else {
				ret = Notify_Download_Val((uint8_t*)&data,index);
10047b06:	0029      	movs	r1, r5
10047b08:	a802      	add	r0, sp, #8
					isDownloadNotificationEnabled = FALSE;
10047b0a:	703e      	strb	r6, [r7, #0]
				ret = Notify_Download_Val((uint8_t*)&data,index);
10047b0c:	f7fd fe7e 	bl	1004580c <Notify_Download_Val>
10047b10:	9001      	str	r0, [sp, #4]
				//SEGGER_RTT_printf(0, "2 - Data: %d - %d\n", data[0], data[index-1]);
				for (uint8_t i=0; i<index; i++) SEGGER_RTT_printf(0, "Data: %x\n", data[i]);
10047b12:	ab02      	add	r3, sp, #8
10047b14:	5d9a      	ldrb	r2, [r3, r6]
10047b16:	491f      	ldr	r1, [pc, #124]	; (10047b94 <APP_Tick+0xd8>)
10047b18:	2000      	movs	r0, #0
10047b1a:	3601      	adds	r6, #1
10047b1c:	f7fd f829 	bl	10044b72 <SEGGER_RTT_printf>
10047b20:	b2f3      	uxtb	r3, r6
10047b22:	42ab      	cmp	r3, r5
10047b24:	d3f5      	bcc.n	10047b12 <APP_Tick+0x56>
				SEGGER_RTT_printf(0, "----------------------------\n");
10047b26:	491c      	ldr	r1, [pc, #112]	; (10047b98 <APP_Tick+0xdc>)
10047b28:	2000      	movs	r0, #0
10047b2a:	f7fd f822 	bl	10044b72 <SEGGER_RTT_printf>
				if (ret != BLE_STATUS_SUCCESS){
10047b2e:	9b01      	ldr	r3, [sp, #4]
10047b30:	2b00      	cmp	r3, #0
10047b32:	d022      	beq.n	10047b7a <APP_Tick+0xbe>
					address -= index; // Resend data
10047b34:	6823      	ldr	r3, [r4, #0]
10047b36:	1b5d      	subs	r5, r3, r5
					isDownloadNotificationEnabled = TRUE;
10047b38:	2301      	movs	r3, #1
					address -= index; // Resend data
10047b3a:	6025      	str	r5, [r4, #0]
					isDownloadNotificationEnabled = TRUE;
10047b3c:	703b      	strb	r3, [r7, #0]
10047b3e:	e019      	b.n	10047b74 <APP_Tick+0xb8>
10047b40:	3601      	adds	r6, #1
			for (uint8_t a = 0; a<216; a++){
10047b42:	2ed8      	cmp	r6, #216	; 0xd8
10047b44:	d1cd      	bne.n	10047ae2 <APP_Tick+0x26>
10047b46:	2500      	movs	r5, #0
				for (uint8_t i=0; i<216; i++) SEGGER_RTT_printf(0, "Data: %x\n", data[i]); // causes disconnection
10047b48:	ab02      	add	r3, sp, #8
10047b4a:	5d5a      	ldrb	r2, [r3, r5]
10047b4c:	4911      	ldr	r1, [pc, #68]	; (10047b94 <APP_Tick+0xd8>)
10047b4e:	2000      	movs	r0, #0
10047b50:	3501      	adds	r5, #1
10047b52:	f7fd f80e 	bl	10044b72 <SEGGER_RTT_printf>
10047b56:	2dd8      	cmp	r5, #216	; 0xd8
10047b58:	d1f6      	bne.n	10047b48 <APP_Tick+0x8c>
				SEGGER_RTT_printf(0, "----------------------------\n");
10047b5a:	490f      	ldr	r1, [pc, #60]	; (10047b98 <APP_Tick+0xdc>)
10047b5c:	2000      	movs	r0, #0
10047b5e:	f7fd f808 	bl	10044b72 <SEGGER_RTT_printf>
				ret = Notify_Download_Val((uint8_t*)&data,216);
10047b62:	0029      	movs	r1, r5
10047b64:	a802      	add	r0, sp, #8
10047b66:	f7fd fe51 	bl	1004580c <Notify_Download_Val>
				if (ret != BLE_STATUS_SUCCESS) address -= 216; // Resend data
10047b6a:	2800      	cmp	r0, #0
10047b6c:	d005      	beq.n	10047b7a <APP_Tick+0xbe>
10047b6e:	6823      	ldr	r3, [r4, #0]
10047b70:	3bd8      	subs	r3, #216	; 0xd8
10047b72:	6023      	str	r3, [r4, #0]
			}
		}

		if (ret != BLE_STATUS_SUCCESS)
		{
			Clock_Wait(10);
10047b74:	200a      	movs	r0, #10
10047b76:	f7fb fad5 	bl	10043124 <Clock_Wait>
		}
	}
}
10047b7a:	b039      	add	sp, #228	; 0xe4
10047b7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10047b7e:	46c0      	nop			; (mov r8, r8)
10047b80:	20000994 	.word	0x20000994
10047b84:	2000074c 	.word	0x2000074c
10047b88:	20000920 	.word	0x20000920
10047b8c:	200008c8 	.word	0x200008c8
10047b90:	200008fc 	.word	0x200008fc
10047b94:	10058c53 	.word	0x10058c53
10047b98:	10058c5d 	.word	0x10058c5d

10047b9c <hci_le_connection_complete_event>:
                                      uint8_t Peer_Address[6],
                                      uint16_t Conn_Interval,
                                      uint16_t Conn_Latency,
                                      uint16_t Supervision_Timeout,
                                      uint8_t Master_Clock_Accuracy)
{
10047b9c:	b570      	push	{r4, r5, r6, lr}
  	SEGGER_RTT_printf(0, "Connection has been made\n");
	connected = TRUE;
10047b9e:	2401      	movs	r4, #1
{
10047ba0:	000d      	movs	r5, r1
  	SEGGER_RTT_printf(0, "Connection has been made\n");
10047ba2:	2000      	movs	r0, #0
10047ba4:	4908      	ldr	r1, [pc, #32]	; (10047bc8 <hci_le_connection_complete_event+0x2c>)
10047ba6:	f7fc ffe4 	bl	10044b72 <SEGGER_RTT_printf>
	connected = TRUE;
10047baa:	4b08      	ldr	r3, [pc, #32]	; (10047bcc <hci_le_connection_complete_event+0x30>)
10047bac:	601c      	str	r4, [r3, #0]
	connection_handle = Connection_Handle;
10047bae:	4b08      	ldr	r3, [pc, #32]	; (10047bd0 <hci_le_connection_complete_event+0x34>)
10047bb0:	801d      	strh	r5, [r3, #0]
	aci_gap_set_non_discoverable();
10047bb2:	f001 fe82 	bl	100498ba <aci_gap_set_non_discoverable>

	//if (cushionMode == 1) {
	// Reinitialize, to accept data. If android sends mode = 0, will go back to patient mode via gatt_db function
		ReInitialize();
10047bb6:	f7ff febf 	bl	10047938 <ReInitialize>
		LEDs_Set_Blue(TRUE);
10047bba:	0020      	movs	r0, r4
10047bbc:	f7fe fbcb 	bl	10046356 <LEDs_Set_Blue>
		LEDs_Set_Red(FALSE);
10047bc0:	2000      	movs	r0, #0
10047bc2:	f7fe fbd5 	bl	10046370 <LEDs_Set_Red>
		//Start timer 2: Start pressure adjustment counter after a connection has been made
		//HAL_VTimerStart_ms(2, samplingPeriod*60*1000); //TODO: Turned off for testing purposes - turn on
	//}
}/* end hci_le_connection_complete_event() */
10047bc6:	bd70      	pop	{r4, r5, r6, pc}
10047bc8:	10058e63 	.word	0x10058e63
10047bcc:	2000074c 	.word	0x2000074c
10047bd0:	2000090a 	.word	0x2000090a

10047bd4 <hci_disconnection_complete_event>:
 * Return         : See file bluenrg1_events.h
 *******************************************************************************/
void hci_disconnection_complete_event(uint8_t Status,
                                      uint16_t Connection_Handle,
                                      uint8_t Reason)
{
10047bd4:	b510      	push	{r4, lr}
	aci_gap_terminate(connection_handle,0x13);
10047bd6:	4c14      	ldr	r4, [pc, #80]	; (10047c28 <hci_disconnection_complete_event+0x54>)
10047bd8:	2113      	movs	r1, #19
10047bda:	8820      	ldrh	r0, [r4, #0]
10047bdc:	b280      	uxth	r0, r0
10047bde:	f001 fe76 	bl	100498ce <aci_gap_terminate>
	connected = FALSE;
10047be2:	2300      	movs	r3, #0
10047be4:	4a11      	ldr	r2, [pc, #68]	; (10047c2c <hci_disconnection_complete_event+0x58>)

	connection_handle = 0;
10047be6:	8023      	strh	r3, [r4, #0]
	connected = FALSE;
10047be8:	6013      	str	r3, [r2, #0]

	/* Make the device connectable again. */
	if (!longTermMode){
10047bea:	4b11      	ldr	r3, [pc, #68]	; (10047c30 <hci_disconnection_complete_event+0x5c>)
10047bec:	781b      	ldrb	r3, [r3, #0]
10047bee:	2b00      	cmp	r3, #0
10047bf0:	d102      	bne.n	10047bf8 <hci_disconnection_complete_event+0x24>
		set_connectable = TRUE;
10047bf2:	2201      	movs	r2, #1
10047bf4:	4b0f      	ldr	r3, [pc, #60]	; (10047c34 <hci_disconnection_complete_event+0x60>)
10047bf6:	701a      	strb	r2, [r3, #0]
	}

	SEGGER_RTT_printf(0, "The device has been disconnected\n");
10047bf8:	490f      	ldr	r1, [pc, #60]	; (10047c38 <hci_disconnection_complete_event+0x64>)
10047bfa:	2000      	movs	r0, #0
10047bfc:	f7fc ffb9 	bl	10044b72 <SEGGER_RTT_printf>

	// Start timer for disconnectedMode if in Admin mode
	// No need in cushion mode as it will already be in a low power setting
	if (cushionMode == 1) {
10047c00:	4b0e      	ldr	r3, [pc, #56]	; (10047c3c <hci_disconnection_complete_event+0x68>)
10047c02:	781c      	ldrb	r4, [r3, #0]
10047c04:	b2e4      	uxtb	r4, r4
10047c06:	2c01      	cmp	r4, #1
10047c08:	d10c      	bne.n	10047c24 <hci_disconnection_complete_event+0x50>
		LEDs_Set_Blue(TRUE); //TODO: Does not work - try deleting prints
10047c0a:	0020      	movs	r0, r4
10047c0c:	f7fe fba3 	bl	10046356 <LEDs_Set_Blue>
		LEDs_Set_Red(TRUE);
10047c10:	0020      	movs	r0, r4
10047c12:	f7fe fbad 	bl	10046370 <LEDs_Set_Red>
		HAL_VTimerStart_ms(1, 60000); // Start disconnection timer
10047c16:	490a      	ldr	r1, [pc, #40]	; (10047c40 <hci_disconnection_complete_event+0x6c>)
10047c18:	0020      	movs	r0, r4
10047c1a:	f004 ffca 	bl	1004cbb2 <HAL_VTimerStart_ms>
		HAL_VTimer_Stop(2); // Stop readjustment timer
10047c1e:	2002      	movs	r0, #2
10047c20:	f004 ffe1 	bl	1004cbe6 <HAL_VTimer_Stop>
	}

}/* end hci_disconnection_complete_event() */
10047c24:	bd10      	pop	{r4, pc}
10047c26:	46c0      	nop			; (mov r8, r8)
10047c28:	2000090a 	.word	0x2000090a
10047c2c:	2000074c 	.word	0x2000074c
10047c30:	20000940 	.word	0x20000940
10047c34:	20000994 	.word	0x20000994
10047c38:	10058e41 	.word	0x10058e41
10047c3c:	200008f7 	.word	0x200008f7
10047c40:	0000ea60 	.word	0x0000ea60

10047c44 <aci_gatt_read_permit_req_event>:
 * Return         : See file bluenrg1_events.h
 *******************************************************************************/
void aci_gatt_read_permit_req_event(uint16_t Connection_Handle,
                                    uint16_t Attribute_Handle,
                                    uint16_t Offset)
{
10047c44:	b510      	push	{r4, lr}
	//SEGGER_RTT_printf(0,"read received. Attribute Handle: %x, Offset: %x\n", Attribute_Handle, Offset);
	Read_Request_CB(Attribute_Handle);
10047c46:	0008      	movs	r0, r1
10047c48:	f7fd feb6 	bl	100459b8 <Read_Request_CB>
}
10047c4c:	bd10      	pop	{r4, pc}
	...

10047c50 <HAL_VTimerTimeoutCallback>:
 * Input          : See file bluenrg1_stack.h
 * Output         : See file bluenrg1_stack.h
 * Return         : See file bluenrg1_stack.h
 *******************************************************************************/
void HAL_VTimerTimeoutCallback(uint8_t timerNum)
{
10047c50:	b5f0      	push	{r4, r5, r6, r7, lr}
10047c52:	0005      	movs	r5, r0
10047c54:	b08b      	sub	sp, #44	; 0x2c
	if (timerNum == 0) { // Timer to keep track of low power mode
10047c56:	2800      	cmp	r0, #0
10047c58:	d115      	bne.n	10047c86 <HAL_VTimerTimeoutCallback+0x36>
		//restart timer
		int ret = HAL_VTimerStart_ms(0,1000);
10047c5a:	21fa      	movs	r1, #250	; 0xfa
10047c5c:	0089      	lsls	r1, r1, #2
10047c5e:	f004 ffa8 	bl	1004cbb2 <HAL_VTimerStart_ms>
		if (ret != BLE_STATUS_SUCCESS)
10047c62:	2800      	cmp	r0, #0
10047c64:	d10d      	bne.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
					return;

		// Pressure value notification
		if (isPressureReaderNotificationEnabled && connected && !longTermMode){
10047c66:	4bb5      	ldr	r3, [pc, #724]	; (10047f3c <HAL_VTimerTimeoutCallback+0x2ec>)
10047c68:	781b      	ldrb	r3, [r3, #0]
10047c6a:	2b00      	cmp	r3, #0
10047c6c:	d009      	beq.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
10047c6e:	4bb4      	ldr	r3, [pc, #720]	; (10047f40 <HAL_VTimerTimeoutCallback+0x2f0>)
10047c70:	681b      	ldr	r3, [r3, #0]
10047c72:	2b00      	cmp	r3, #0
10047c74:	d005      	beq.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
10047c76:	4bb3      	ldr	r3, [pc, #716]	; (10047f44 <HAL_VTimerTimeoutCallback+0x2f4>)
10047c78:	781b      	ldrb	r3, [r3, #0]
10047c7a:	2b00      	cmp	r3, #0
10047c7c:	d101      	bne.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
			Notify_Pressure();
10047c7e:	f7fd fda7 	bl	100457d0 <Notify_Pressure>

		if ((cushionMode == 0) && (longTermMode != TRUE)){ // If in patient mode, and not already powered down
			DeInitialize();
		}
	}
}
10047c82:	b00b      	add	sp, #44	; 0x2c
10047c84:	bdf0      	pop	{r4, r5, r6, r7, pc}
	if (timerNum == 1){ // Timer to keep track of disconnected mode
10047c86:	2801      	cmp	r0, #1
10047c88:	d102      	bne.n	10047c90 <HAL_VTimerTimeoutCallback+0x40>
			DeInitialize();
10047c8a:	f7ff fd03 	bl	10047694 <DeInitialize>
10047c8e:	e7f8      	b.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
	if (timerNum == 2) {
10047c90:	2802      	cmp	r0, #2
10047c92:	d000      	beq.n	10047c96 <HAL_VTimerTimeoutCallback+0x46>
10047c94:	e1fc      	b.n	10048090 <HAL_VTimerTimeoutCallback+0x440>
		SEGGER_RTT_printf(0, "Beginning pressure adjustment\n");
10047c96:	49ac      	ldr	r1, [pc, #688]	; (10047f48 <HAL_VTimerTimeoutCallback+0x2f8>)
10047c98:	2000      	movs	r0, #0
10047c9a:	f7fc ff6a 	bl	10044b72 <SEGGER_RTT_printf>
		uint8_t bagOrder [8] = {2, 3, 5, 7, 8, 1, 4, 6}; // Order to release bags in // TODO: Change
10047c9e:	2303      	movs	r3, #3
10047ca0:	ac08      	add	r4, sp, #32
10047ca2:	7063      	strb	r3, [r4, #1]
10047ca4:	3302      	adds	r3, #2
10047ca6:	70a3      	strb	r3, [r4, #2]
10047ca8:	3302      	adds	r3, #2
10047caa:	70e3      	strb	r3, [r4, #3]
10047cac:	3301      	adds	r3, #1
10047cae:	7123      	strb	r3, [r4, #4]
10047cb0:	3b07      	subs	r3, #7
10047cb2:	7163      	strb	r3, [r4, #5]
10047cb4:	3303      	adds	r3, #3
10047cb6:	71a3      	strb	r3, [r4, #6]
10047cb8:	3302      	adds	r3, #2
10047cba:	71e3      	strb	r3, [r4, #7]
		if (cushionMode == 0) {
10047cbc:	4ba3      	ldr	r3, [pc, #652]	; (10047f4c <HAL_VTimerTimeoutCallback+0x2fc>)
		uint8_t bagOrder [8] = {2, 3, 5, 7, 8, 1, 4, 6}; // Order to release bags in // TODO: Change
10047cbe:	7025      	strb	r5, [r4, #0]
		if (cushionMode == 0) {
10047cc0:	781b      	ldrb	r3, [r3, #0]
10047cc2:	2b00      	cmp	r3, #0
10047cc4:	d101      	bne.n	10047cca <HAL_VTimerTimeoutCallback+0x7a>
			ReInitialize();
10047cc6:	f7ff fe37 	bl	10047938 <ReInitialize>
		Read_ADC();
10047cca:	f7fe fbab 	bl	10046424 <Read_ADC>
		for (int i=0; i<numBags; i++){
10047cce:	2500      	movs	r5, #0
		WritePressures_Memory();
10047cd0:	f7ff f872 	bl	10046db8 <WritePressures_Memory>
			if (CurrentPressures[currentBag_i- 1] < lowerBoundPressure){
10047cd4:	5d62      	ldrb	r2, [r4, r5]
10047cd6:	489e      	ldr	r0, [pc, #632]	; (10047f50 <HAL_VTimerTimeoutCallback+0x300>)
10047cd8:	3a01      	subs	r2, #1
10047cda:	0056      	lsls	r6, r2, #1
10047cdc:	5a33      	ldrh	r3, [r6, r0]
10047cde:	499d      	ldr	r1, [pc, #628]	; (10047f54 <HAL_VTimerTimeoutCallback+0x304>)
10047ce0:	469c      	mov	ip, r3
10047ce2:	4b9d      	ldr	r3, [pc, #628]	; (10047f58 <HAL_VTimerTimeoutCallback+0x308>)
10047ce4:	881f      	ldrh	r7, [r3, #0]
10047ce6:	0093      	lsls	r3, r2, #2
10047ce8:	45bc      	cmp	ip, r7
10047cea:	d300      	bcc.n	10047cee <HAL_VTimerTimeoutCallback+0x9e>
10047cec:	e11c      	b.n	10047f28 <HAL_VTimerTimeoutCallback+0x2d8>
				logCounter[currentBag_i - 1]--;
10047cee:	58c8      	ldr	r0, [r1, r3]
10047cf0:	3801      	subs	r0, #1
				logCounter[currentBag_i - 1] = 0;
10047cf2:	50c8      	str	r0, [r1, r3]
			SEGGER_RTT_printf(0, "Pressure count for bag %d is %d\n", currentBag_i - 1, logCounter[currentBag_i - 1]);
10047cf4:	58cb      	ldr	r3, [r1, r3]
10047cf6:	2000      	movs	r0, #0
10047cf8:	4998      	ldr	r1, [pc, #608]	; (10047f5c <HAL_VTimerTimeoutCallback+0x30c>)
		for (int i=0; i<numBags; i++){
10047cfa:	3501      	adds	r5, #1
			SEGGER_RTT_printf(0, "Pressure count for bag %d is %d\n", currentBag_i - 1, logCounter[currentBag_i - 1]);
10047cfc:	f7fc ff39 	bl	10044b72 <SEGGER_RTT_printf>
		for (int i=0; i<numBags; i++){
10047d00:	2d05      	cmp	r5, #5
10047d02:	d1e7      	bne.n	10047cd4 <HAL_VTimerTimeoutCallback+0x84>
		SEGGER_RTT_printf(0, "Redistributing pressure between bags now\n");
10047d04:	4996      	ldr	r1, [pc, #600]	; (10047f60 <HAL_VTimerTimeoutCallback+0x310>)
10047d06:	2000      	movs	r0, #0
10047d08:	f7fc ff33 	bl	10044b72 <SEGGER_RTT_printf>
10047d0c:	2300      	movs	r3, #0
10047d0e:	9301      	str	r3, [sp, #4]
10047d10:	466b      	mov	r3, sp
			currentBag_i = bagOrder[i];
10047d12:	9901      	ldr	r1, [sp, #4]
10047d14:	aa08      	add	r2, sp, #32
10047d16:	5c89      	ldrb	r1, [r1, r2]
			if ((-1*logCounter[currentBag_i - 1]) >= (int)numberOfSamples) { // If a bag's pressure is too low
10047d18:	488e      	ldr	r0, [pc, #568]	; (10047f54 <HAL_VTimerTimeoutCallback+0x304>)
10047d1a:	1e4c      	subs	r4, r1, #1
			currentBag_i = bagOrder[i];
10047d1c:	9102      	str	r1, [sp, #8]
			if ((-1*logCounter[currentBag_i - 1]) >= (int)numberOfSamples) { // If a bag's pressure is too low
10047d1e:	00a1      	lsls	r1, r4, #2
10047d20:	9104      	str	r1, [sp, #16]
10047d22:	5809      	ldr	r1, [r1, r0]
10047d24:	488f      	ldr	r0, [pc, #572]	; (10047f64 <HAL_VTimerTimeoutCallback+0x314>)
10047d26:	4249      	negs	r1, r1
10047d28:	7806      	ldrb	r6, [r0, #0]
10047d2a:	791b      	ldrb	r3, [r3, #4]
10047d2c:	42b1      	cmp	r1, r6
10047d2e:	da00      	bge.n	10047d32 <HAL_VTimerTimeoutCallback+0xe2>
10047d30:	e138      	b.n	10047fa4 <HAL_VTimerTimeoutCallback+0x354>
				uint16_t highBagValue = CurrentPressures[currentBag_i - 1];
10047d32:	4987      	ldr	r1, [pc, #540]	; (10047f50 <HAL_VTimerTimeoutCallback+0x300>)
10047d34:	0067      	lsls	r7, r4, #1
10047d36:	5a7f      	ldrh	r7, [r7, r1]
				uint8_t highBagIndex = currentBag_i - 1;
10047d38:	b2e6      	uxtb	r6, r4
				uint16_t highBagValue = CurrentPressures[currentBag_i - 1];
10047d3a:	b2bf      	uxth	r7, r7
10047d3c:	9703      	str	r7, [sp, #12]
					if (logCounter[currentBag_j - 1] >= (int)numberOfSamples) {
10047d3e:	9005      	str	r0, [sp, #20]
					currentBag_j = bagOrder[j];
10047d40:	5cd0      	ldrb	r0, [r2, r3]
					if (logCounter[currentBag_j - 1] >= (int)numberOfSamples) {
10047d42:	4d84      	ldr	r5, [pc, #528]	; (10047f54 <HAL_VTimerTimeoutCallback+0x304>)
10047d44:	3801      	subs	r0, #1
10047d46:	0087      	lsls	r7, r0, #2
10047d48:	597d      	ldr	r5, [r7, r5]
10047d4a:	46ac      	mov	ip, r5
10047d4c:	9d05      	ldr	r5, [sp, #20]
10047d4e:	782f      	ldrb	r7, [r5, #0]
10047d50:	45bc      	cmp	ip, r7
10047d52:	db09      	blt.n	10047d68 <HAL_VTimerTimeoutCallback+0x118>
						if (CurrentPressures[currentBag_j - 1] > highBagValue) { // Get highest pressure bag available
10047d54:	0047      	lsls	r7, r0, #1
10047d56:	5a7d      	ldrh	r5, [r7, r1]
10047d58:	46ac      	mov	ip, r5
10047d5a:	9d03      	ldr	r5, [sp, #12]
10047d5c:	45ac      	cmp	ip, r5
10047d5e:	d903      	bls.n	10047d68 <HAL_VTimerTimeoutCallback+0x118>
							highBagIndex = currentBag_j - 1;
10047d60:	b2c6      	uxtb	r6, r0
							highBagValue = CurrentPressures[currentBag_j - 1];
10047d62:	5a78      	ldrh	r0, [r7, r1]
10047d64:	b280      	uxth	r0, r0
10047d66:	9003      	str	r0, [sp, #12]
				for (uint8_t j=i; j<numBags; j++) {
10047d68:	3301      	adds	r3, #1
10047d6a:	b2db      	uxtb	r3, r3
10047d6c:	2b05      	cmp	r3, #5
10047d6e:	d1e7      	bne.n	10047d40 <HAL_VTimerTimeoutCallback+0xf0>
				if (lowBagIndex != currentBag_i - 1) Redistribute_Pressure(currentBag_i, lowBagIndex+1, targetPressure); // Only redistribute pressure if an appropriate bag is found
10047d70:	42b4      	cmp	r4, r6
10047d72:	d007      	beq.n	10047d84 <HAL_VTimerTimeoutCallback+0x134>
10047d74:	4b7c      	ldr	r3, [pc, #496]	; (10047f68 <HAL_VTimerTimeoutCallback+0x318>)
10047d76:	1c71      	adds	r1, r6, #1
10047d78:	881a      	ldrh	r2, [r3, #0]
10047d7a:	b2c9      	uxtb	r1, r1
10047d7c:	b292      	uxth	r2, r2
10047d7e:	9802      	ldr	r0, [sp, #8]
10047d80:	f7fe fe1e 	bl	100469c0 <Redistribute_Pressure>
				Read_ADC();
10047d84:	f7fe fb4e 	bl	10046424 <Read_ADC>
				if ((CurrentPressures[currentBag_i - 1] > lowerBoundPressure) && (CurrentPressures[currentBag_i - 1] < upperBoundPressure)) {
10047d88:	4f71      	ldr	r7, [pc, #452]	; (10047f50 <HAL_VTimerTimeoutCallback+0x300>)
10047d8a:	4a73      	ldr	r2, [pc, #460]	; (10047f58 <HAL_VTimerTimeoutCallback+0x308>)
10047d8c:	0063      	lsls	r3, r4, #1
10047d8e:	5bd9      	ldrh	r1, [r3, r7]
10047d90:	8812      	ldrh	r2, [r2, #0]
10047d92:	4291      	cmp	r1, r2
10047d94:	d90c      	bls.n	10047db0 <HAL_VTimerTimeoutCallback+0x160>
10047d96:	5bda      	ldrh	r2, [r3, r7]
10047d98:	4b74      	ldr	r3, [pc, #464]	; (10047f6c <HAL_VTimerTimeoutCallback+0x31c>)
10047d9a:	881b      	ldrh	r3, [r3, #0]
10047d9c:	429a      	cmp	r2, r3
10047d9e:	d207      	bcs.n	10047db0 <HAL_VTimerTimeoutCallback+0x160>
					logCounter[currentBag_i - 1] = 0;
10047da0:	2000      	movs	r0, #0
10047da2:	4a6c      	ldr	r2, [pc, #432]	; (10047f54 <HAL_VTimerTimeoutCallback+0x304>)
10047da4:	9b04      	ldr	r3, [sp, #16]
					SEGGER_RTT_printf(0, "Pressure in cushion %d is now ok\n", currentBag_i - 1);
10047da6:	4972      	ldr	r1, [pc, #456]	; (10047f70 <HAL_VTimerTimeoutCallback+0x320>)
					logCounter[currentBag_i - 1] = 0;
10047da8:	50d0      	str	r0, [r2, r3]
					SEGGER_RTT_printf(0, "Pressure in cushion %d is now ok\n", currentBag_i - 1);
10047daa:	0022      	movs	r2, r4
10047dac:	f7fc fee1 	bl	10044b72 <SEGGER_RTT_printf>
				if ((CurrentPressures[lowBagIndex] > lowerBoundPressure) && (CurrentPressures[lowBagIndex] < upperBoundPressure)) {
10047db0:	4a69      	ldr	r2, [pc, #420]	; (10047f58 <HAL_VTimerTimeoutCallback+0x308>)
10047db2:	0073      	lsls	r3, r6, #1
10047db4:	5af9      	ldrh	r1, [r7, r3]
10047db6:	8812      	ldrh	r2, [r2, #0]
10047db8:	4291      	cmp	r1, r2
10047dba:	d90c      	bls.n	10047dd6 <HAL_VTimerTimeoutCallback+0x186>
10047dbc:	5afa      	ldrh	r2, [r7, r3]
10047dbe:	4b6b      	ldr	r3, [pc, #428]	; (10047f6c <HAL_VTimerTimeoutCallback+0x31c>)
10047dc0:	881b      	ldrh	r3, [r3, #0]
10047dc2:	429a      	cmp	r2, r3
10047dc4:	d207      	bcs.n	10047dd6 <HAL_VTimerTimeoutCallback+0x186>
					logCounter[lowBagIndex] = 0;
10047dc6:	2000      	movs	r0, #0
10047dc8:	4a62      	ldr	r2, [pc, #392]	; (10047f54 <HAL_VTimerTimeoutCallback+0x304>)
10047dca:	00b3      	lsls	r3, r6, #2
10047dcc:	50d0      	str	r0, [r2, r3]
					SEGGER_RTT_printf(0, "Pressure in cushion %d has now been fixed in the process\n", lowBagIndex);
10047dce:	4969      	ldr	r1, [pc, #420]	; (10047f74 <HAL_VTimerTimeoutCallback+0x324>)
10047dd0:	0032      	movs	r2, r6
10047dd2:	f7fc fece 	bl	10044b72 <SEGGER_RTT_printf>
10047dd6:	9b01      	ldr	r3, [sp, #4]
10047dd8:	3301      	adds	r3, #1
10047dda:	9301      	str	r3, [sp, #4]
		for (uint8_t i=0; i<numBags; i++){
10047ddc:	2b05      	cmp	r3, #5
10047dde:	d197      	bne.n	10047d10 <HAL_VTimerTimeoutCallback+0xc0>
		SEGGER_RTT_printf(0, "Readjusting pressure of individual bags now\n");
10047de0:	4965      	ldr	r1, [pc, #404]	; (10047f78 <HAL_VTimerTimeoutCallback+0x328>)
10047de2:	2000      	movs	r0, #0
10047de4:	f7fc fec5 	bl	10044b72 <SEGGER_RTT_printf>
10047de8:	2500      	movs	r5, #0
			SEGGER_RTT_printf(0, "Readjusting pressure: Iteration %d\n", j);
10047dea:	002a      	movs	r2, r5
10047dec:	4963      	ldr	r1, [pc, #396]	; (10047f7c <HAL_VTimerTimeoutCallback+0x32c>)
10047dee:	2000      	movs	r0, #0
10047df0:	f7fc febf 	bl	10044b72 <SEGGER_RTT_printf>
10047df4:	2600      	movs	r6, #0
				currentBag_i = bagOrder[i];
10047df6:	2208      	movs	r2, #8
10047df8:	ab06      	add	r3, sp, #24
10047dfa:	189b      	adds	r3, r3, r2
10047dfc:	5d9b      	ldrb	r3, [r3, r6]
				if ((CurrentPressures[currentBag_i - 1] < lowerBoundPressure) && (((-1*logCounter[currentBag_i - 1]) >= (int)numberOfSamples) || (logCounter[currentBag_i - 1] >= (int)numberOfSamples))) { //If a bag's pressure is too low
10047dfe:	4a54      	ldr	r2, [pc, #336]	; (10047f50 <HAL_VTimerTimeoutCallback+0x300>)
10047e00:	1e5c      	subs	r4, r3, #1
				currentBag_i = bagOrder[i];
10047e02:	9301      	str	r3, [sp, #4]
				if ((CurrentPressures[currentBag_i - 1] < lowerBoundPressure) && (((-1*logCounter[currentBag_i - 1]) >= (int)numberOfSamples) || (logCounter[currentBag_i - 1] >= (int)numberOfSamples))) { //If a bag's pressure is too low
10047e04:	0063      	lsls	r3, r4, #1
10047e06:	5a99      	ldrh	r1, [r3, r2]
10047e08:	4b53      	ldr	r3, [pc, #332]	; (10047f58 <HAL_VTimerTimeoutCallback+0x308>)
10047e0a:	881b      	ldrh	r3, [r3, #0]
10047e0c:	4299      	cmp	r1, r3
10047e0e:	d300      	bcc.n	10047e12 <HAL_VTimerTimeoutCallback+0x1c2>
10047e10:	e0ef      	b.n	10047ff2 <HAL_VTimerTimeoutCallback+0x3a2>
10047e12:	4850      	ldr	r0, [pc, #320]	; (10047f54 <HAL_VTimerTimeoutCallback+0x304>)
10047e14:	00a7      	lsls	r7, r4, #2
10047e16:	583b      	ldr	r3, [r7, r0]
10047e18:	4952      	ldr	r1, [pc, #328]	; (10047f64 <HAL_VTimerTimeoutCallback+0x314>)
10047e1a:	9302      	str	r3, [sp, #8]
10047e1c:	780b      	ldrb	r3, [r1, #0]
10047e1e:	469c      	mov	ip, r3
10047e20:	9b02      	ldr	r3, [sp, #8]
10047e22:	425b      	negs	r3, r3
10047e24:	4563      	cmp	r3, ip
10047e26:	da04      	bge.n	10047e32 <HAL_VTimerTimeoutCallback+0x1e2>
10047e28:	5838      	ldr	r0, [r7, r0]
10047e2a:	780b      	ldrb	r3, [r1, #0]
10047e2c:	4298      	cmp	r0, r3
10047e2e:	da00      	bge.n	10047e32 <HAL_VTimerTimeoutCallback+0x1e2>
10047e30:	e0df      	b.n	10047ff2 <HAL_VTimerTimeoutCallback+0x3a2>
					Pressurize_Air_Bag(currentBag_i, targetPressure, ((float)multiplier_increase[currentBag_i - 1])/100);
10047e32:	4b4d      	ldr	r3, [pc, #308]	; (10047f68 <HAL_VTimerTimeoutCallback+0x318>)
10047e34:	881f      	ldrh	r7, [r3, #0]
10047e36:	4b52      	ldr	r3, [pc, #328]	; (10047f80 <HAL_VTimerTimeoutCallback+0x330>)
10047e38:	b2bf      	uxth	r7, r7
10047e3a:	5d18      	ldrb	r0, [r3, r4]
10047e3c:	b2c0      	uxtb	r0, r0
10047e3e:	f7f9 faa3 	bl	10041388 <__aeabi_ui2f>
10047e42:	4950      	ldr	r1, [pc, #320]	; (10047f84 <HAL_VTimerTimeoutCallback+0x334>)
10047e44:	f7f8 fd84 	bl	10040950 <__aeabi_fdiv>
10047e48:	0039      	movs	r1, r7
10047e4a:	1c02      	adds	r2, r0, #0
10047e4c:	9801      	ldr	r0, [sp, #4]
10047e4e:	f7fe fc69 	bl	10046724 <Pressurize_Air_Bag>
					state_pressure[currentBag_i - 1] = INCREASE;
10047e52:	2200      	movs	r2, #0
10047e54:	ab06      	add	r3, sp, #24
					state_pressure[currentBag_i - 1] = DECREASE;
10047e56:	551a      	strb	r2, [r3, r4]
10047e58:	3601      	adds	r6, #1
			for (uint8_t i=0; i<numBags; i++) {
10047e5a:	2e05      	cmp	r6, #5
10047e5c:	d1cb      	bne.n	10047df6 <HAL_VTimerTimeoutCallback+0x1a6>
			Read_ADC();
10047e5e:	f7fe fae1 	bl	10046424 <Read_ADC>
			SEGGER_RTT_printf(0, "Current pressures: ");
10047e62:	4949      	ldr	r1, [pc, #292]	; (10047f88 <HAL_VTimerTimeoutCallback+0x338>)
10047e64:	2000      	movs	r0, #0
10047e66:	f7fc fe84 	bl	10044b72 <SEGGER_RTT_printf>
10047e6a:	2600      	movs	r6, #0
				if ((logCounter[currentBag_i - 1] >= (int)numberOfSamples) || ((-1*logCounter[currentBag_i - 1]) >= (int)numberOfSamples)) {
10047e6c:	2208      	movs	r2, #8
10047e6e:	ab06      	add	r3, sp, #24
10047e70:	189b      	adds	r3, r3, r2
10047e72:	5d9b      	ldrb	r3, [r3, r6]
10047e74:	4c37      	ldr	r4, [pc, #220]	; (10047f54 <HAL_VTimerTimeoutCallback+0x304>)
10047e76:	3b01      	subs	r3, #1
10047e78:	0098      	lsls	r0, r3, #2
10047e7a:	5902      	ldr	r2, [r0, r4]
10047e7c:	4939      	ldr	r1, [pc, #228]	; (10047f64 <HAL_VTimerTimeoutCallback+0x314>)
10047e7e:	4694      	mov	ip, r2
10047e80:	780f      	ldrb	r7, [r1, #0]
10047e82:	4a33      	ldr	r2, [pc, #204]	; (10047f50 <HAL_VTimerTimeoutCallback+0x300>)
10047e84:	45bc      	cmp	ip, r7
10047e86:	da04      	bge.n	10047e92 <HAL_VTimerTimeoutCallback+0x242>
10047e88:	5900      	ldr	r0, [r0, r4]
10047e8a:	780f      	ldrb	r7, [r1, #0]
10047e8c:	4240      	negs	r0, r0
10047e8e:	42b8      	cmp	r0, r7
10047e90:	db10      	blt.n	10047eb4 <HAL_VTimerTimeoutCallback+0x264>
					if (CurrentPressures[currentBag_i - 1] < lowerBoundPressure) {
10047e92:	4831      	ldr	r0, [pc, #196]	; (10047f58 <HAL_VTimerTimeoutCallback+0x308>)
10047e94:	0059      	lsls	r1, r3, #1
10047e96:	5a57      	ldrh	r7, [r2, r1]
10047e98:	8800      	ldrh	r0, [r0, #0]
10047e9a:	4287      	cmp	r7, r0
10047e9c:	d300      	bcc.n	10047ea0 <HAL_VTimerTimeoutCallback+0x250>
10047e9e:	e0cf      	b.n	10048040 <HAL_VTimerTimeoutCallback+0x3f0>
						if (state_pressure[currentBag_i - 1] == INCREASE && multiplier_increase[currentBag_i - 1] < 250) multiplier_increase[currentBag_i - 1] += 10; // Increased pressure and still too low -> Raise multiplier
10047ea0:	a906      	add	r1, sp, #24
10047ea2:	5cc9      	ldrb	r1, [r1, r3]
10047ea4:	4836      	ldr	r0, [pc, #216]	; (10047f80 <HAL_VTimerTimeoutCallback+0x330>)
10047ea6:	2900      	cmp	r1, #0
10047ea8:	d100      	bne.n	10047eac <HAL_VTimerTimeoutCallback+0x25c>
10047eaa:	e0e0      	b.n	1004806e <HAL_VTimerTimeoutCallback+0x41e>
						if (state_pressure[currentBag_i - 1] == DECREASE && multiplier_decrease[currentBag_i - 1] > 10) multiplier_decrease[currentBag_i - 1] -= 10; // Decreased pressure and now its too low -> Lower multiplier
10047eac:	4837      	ldr	r0, [pc, #220]	; (10047f8c <HAL_VTimerTimeoutCallback+0x33c>)
10047eae:	2901      	cmp	r1, #1
10047eb0:	d100      	bne.n	10047eb4 <HAL_VTimerTimeoutCallback+0x264>
10047eb2:	e0cf      	b.n	10048054 <HAL_VTimerTimeoutCallback+0x404>
				} SEGGER_RTT_printf(0, "%d mmHg, ", CurrentPressures[currentBag_i - 1]);
10047eb4:	005b      	lsls	r3, r3, #1
10047eb6:	5ad2      	ldrh	r2, [r2, r3]
10047eb8:	4935      	ldr	r1, [pc, #212]	; (10047f90 <HAL_VTimerTimeoutCallback+0x340>)
10047eba:	b292      	uxth	r2, r2
10047ebc:	2000      	movs	r0, #0
10047ebe:	3601      	adds	r6, #1
10047ec0:	f7fc fe57 	bl	10044b72 <SEGGER_RTT_printf>
			for (uint8_t i=0; i<numBags; i++) {
10047ec4:	2e05      	cmp	r6, #5
10047ec6:	d1d1      	bne.n	10047e6c <HAL_VTimerTimeoutCallback+0x21c>
			} SEGGER_RTT_printf(0, "\n");
10047ec8:	4932      	ldr	r1, [pc, #200]	; (10047f94 <HAL_VTimerTimeoutCallback+0x344>)
10047eca:	2000      	movs	r0, #0
10047ecc:	f7fc fe51 	bl	10044b72 <SEGGER_RTT_printf>
10047ed0:	2200      	movs	r2, #0
				if ((logCounter[currentBag_i - 1] >= (int)numberOfSamples) || ((-1*logCounter[currentBag_i - 1]) >= (int)numberOfSamples)){
10047ed2:	4924      	ldr	r1, [pc, #144]	; (10047f64 <HAL_VTimerTimeoutCallback+0x314>)
10047ed4:	2008      	movs	r0, #8
10047ed6:	ab06      	add	r3, sp, #24
10047ed8:	181b      	adds	r3, r3, r0
10047eda:	5c9b      	ldrb	r3, [r3, r2]
10047edc:	3b01      	subs	r3, #1
10047ede:	009b      	lsls	r3, r3, #2
10047ee0:	58e6      	ldr	r6, [r4, r3]
10047ee2:	7808      	ldrb	r0, [r1, #0]
10047ee4:	4286      	cmp	r6, r0
10047ee6:	db00      	blt.n	10047eea <HAL_VTimerTimeoutCallback+0x29a>
10047ee8:	e0cd      	b.n	10048086 <HAL_VTimerTimeoutCallback+0x436>
10047eea:	58e3      	ldr	r3, [r4, r3]
10047eec:	7808      	ldrb	r0, [r1, #0]
10047eee:	425b      	negs	r3, r3
10047ef0:	4283      	cmp	r3, r0
10047ef2:	db00      	blt.n	10047ef6 <HAL_VTimerTimeoutCallback+0x2a6>
10047ef4:	e0c7      	b.n	10048086 <HAL_VTimerTimeoutCallback+0x436>
10047ef6:	3201      	adds	r2, #1
			for (uint8_t i=0; i<numBags; i++){
10047ef8:	2a05      	cmp	r2, #5
10047efa:	d1eb      	bne.n	10047ed4 <HAL_VTimerTimeoutCallback+0x284>
		SEGGER_RTT_printf(0, "Pressure changes are done\n");
10047efc:	4926      	ldr	r1, [pc, #152]	; (10047f98 <HAL_VTimerTimeoutCallback+0x348>)
10047efe:	2000      	movs	r0, #0
10047f00:	f7fc fe37 	bl	10044b72 <SEGGER_RTT_printf>
		WriteMultipliers_IntFlash(); // Save new multipliers
10047f04:	f7ff f9a6 	bl	10047254 <WriteMultipliers_IntFlash>
		int ret = HAL_VTimerStart_ms(2, samplingPeriod*60*1000);
10047f08:	4b24      	ldr	r3, [pc, #144]	; (10047f9c <HAL_VTimerTimeoutCallback+0x34c>)
10047f0a:	4925      	ldr	r1, [pc, #148]	; (10047fa0 <HAL_VTimerTimeoutCallback+0x350>)
10047f0c:	781b      	ldrb	r3, [r3, #0]
10047f0e:	2002      	movs	r0, #2
10047f10:	4359      	muls	r1, r3
10047f12:	f004 fe4e 	bl	1004cbb2 <HAL_VTimerStart_ms>
		if (ret != BLE_STATUS_SUCCESS)
10047f16:	2800      	cmp	r0, #0
10047f18:	d000      	beq.n	10047f1c <HAL_VTimerTimeoutCallback+0x2cc>
10047f1a:	e6b2      	b.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
		if (cushionMode == 0) {
10047f1c:	4b0b      	ldr	r3, [pc, #44]	; (10047f4c <HAL_VTimerTimeoutCallback+0x2fc>)
10047f1e:	781b      	ldrb	r3, [r3, #0]
10047f20:	2b00      	cmp	r3, #0
10047f22:	d000      	beq.n	10047f26 <HAL_VTimerTimeoutCallback+0x2d6>
10047f24:	e6ad      	b.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
10047f26:	e6b0      	b.n	10047c8a <HAL_VTimerTimeoutCallback+0x3a>
			} else if (CurrentPressures[currentBag_i - 1] > upperBoundPressure) {
10047f28:	5a36      	ldrh	r6, [r6, r0]
10047f2a:	4810      	ldr	r0, [pc, #64]	; (10047f6c <HAL_VTimerTimeoutCallback+0x31c>)
10047f2c:	8800      	ldrh	r0, [r0, #0]
10047f2e:	4286      	cmp	r6, r0
10047f30:	d902      	bls.n	10047f38 <HAL_VTimerTimeoutCallback+0x2e8>
				logCounter[currentBag_i - 1]++;
10047f32:	58c8      	ldr	r0, [r1, r3]
10047f34:	3001      	adds	r0, #1
10047f36:	e6dc      	b.n	10047cf2 <HAL_VTimerTimeoutCallback+0xa2>
				logCounter[currentBag_i - 1] = 0;
10047f38:	2000      	movs	r0, #0
10047f3a:	e6da      	b.n	10047cf2 <HAL_VTimerTimeoutCallback+0xa2>
10047f3c:	200008f5 	.word	0x200008f5
10047f40:	2000074c 	.word	0x2000074c
10047f44:	20000940 	.word	0x20000940
10047f48:	10058c7b 	.word	0x10058c7b
10047f4c:	200008f7 	.word	0x200008f7
10047f50:	20000926 	.word	0x20000926
10047f54:	200008cc 	.word	0x200008cc
10047f58:	200008f8 	.word	0x200008f8
10047f5c:	10058c9a 	.word	0x10058c9a
10047f60:	10058cbb 	.word	0x10058cbb
10047f64:	20000941 	.word	0x20000941
10047f68:	20000914 	.word	0x20000914
10047f6c:	20000936 	.word	0x20000936
10047f70:	10058ce5 	.word	0x10058ce5
10047f74:	10058d07 	.word	0x10058d07
10047f78:	10058d41 	.word	0x10058d41
10047f7c:	10058837 	.word	0x10058837
10047f80:	20000900 	.word	0x20000900
10047f84:	42c80000 	.word	0x42c80000
10047f88:	1005885b 	.word	0x1005885b
10047f8c:	20000938 	.word	0x20000938
10047f90:	1005886f 	.word	0x1005886f
10047f94:	100589a3 	.word	0x100589a3
10047f98:	10058879 	.word	0x10058879
10047f9c:	20000908 	.word	0x20000908
10047fa0:	0000ea60 	.word	0x0000ea60
			else if (logCounter[currentBag_i - 1] >= (int)numberOfSamples) { // If a bag's pressure is too high
10047fa4:	4d63      	ldr	r5, [pc, #396]	; (10048134 <HAL_VTimerTimeoutCallback+0x4e4>)
10047fa6:	00a1      	lsls	r1, r4, #2
10047fa8:	594e      	ldr	r6, [r1, r5]
10047faa:	7801      	ldrb	r1, [r0, #0]
10047fac:	428e      	cmp	r6, r1
10047fae:	da00      	bge.n	10047fb2 <HAL_VTimerTimeoutCallback+0x362>
10047fb0:	e711      	b.n	10047dd6 <HAL_VTimerTimeoutCallback+0x186>
				uint16_t lowBagValue = CurrentPressures[currentBag_i - 1];
10047fb2:	4961      	ldr	r1, [pc, #388]	; (10048138 <HAL_VTimerTimeoutCallback+0x4e8>)
10047fb4:	0067      	lsls	r7, r4, #1
10047fb6:	5a7f      	ldrh	r7, [r7, r1]
				uint8_t lowBagIndex = currentBag_i - 1;
10047fb8:	b2e6      	uxtb	r6, r4
				uint16_t lowBagValue = CurrentPressures[currentBag_i - 1];
10047fba:	b2bd      	uxth	r5, r7
10047fbc:	9503      	str	r5, [sp, #12]
					if ((-1*logCounter[currentBag_j - 1]) >= (int)numberOfSamples) {
10047fbe:	9005      	str	r0, [sp, #20]
					currentBag_j = bagOrder[j];
10047fc0:	5cd0      	ldrb	r0, [r2, r3]
					if ((-1*logCounter[currentBag_j - 1]) >= (int)numberOfSamples) {
10047fc2:	4d5c      	ldr	r5, [pc, #368]	; (10048134 <HAL_VTimerTimeoutCallback+0x4e4>)
10047fc4:	3801      	subs	r0, #1
10047fc6:	0087      	lsls	r7, r0, #2
10047fc8:	597f      	ldr	r7, [r7, r5]
10047fca:	9d05      	ldr	r5, [sp, #20]
10047fcc:	427f      	negs	r7, r7
10047fce:	782d      	ldrb	r5, [r5, #0]
10047fd0:	42af      	cmp	r7, r5
10047fd2:	db09      	blt.n	10047fe8 <HAL_VTimerTimeoutCallback+0x398>
						if (CurrentPressures[currentBag_j - 1] < lowBagValue) {  // Get lowest pressure bag available
10047fd4:	0047      	lsls	r7, r0, #1
10047fd6:	5a7d      	ldrh	r5, [r7, r1]
10047fd8:	46ac      	mov	ip, r5
10047fda:	9d03      	ldr	r5, [sp, #12]
10047fdc:	45ac      	cmp	ip, r5
10047fde:	d203      	bcs.n	10047fe8 <HAL_VTimerTimeoutCallback+0x398>
							lowBagIndex = currentBag_j - 1;
10047fe0:	b2c6      	uxtb	r6, r0
							lowBagValue = CurrentPressures[currentBag_j - 1];
10047fe2:	5a78      	ldrh	r0, [r7, r1]
10047fe4:	b280      	uxth	r0, r0
10047fe6:	9003      	str	r0, [sp, #12]
				for (uint8_t j=i; j<numBags; j++) {
10047fe8:	3301      	adds	r3, #1
10047fea:	b2db      	uxtb	r3, r3
10047fec:	2b05      	cmp	r3, #5
10047fee:	d1e7      	bne.n	10047fc0 <HAL_VTimerTimeoutCallback+0x370>
10047ff0:	e6be      	b.n	10047d70 <HAL_VTimerTimeoutCallback+0x120>
				} else if ((CurrentPressures[currentBag_i - 1] > upperBoundPressure) && (((-1*logCounter[currentBag_i - 1]) >= (int)numberOfSamples) || (logCounter[currentBag_i - 1] >= (int)numberOfSamples))) { //If a bag's pressure is too high
10047ff2:	0063      	lsls	r3, r4, #1
10047ff4:	5ad2      	ldrh	r2, [r2, r3]
10047ff6:	4b51      	ldr	r3, [pc, #324]	; (1004813c <HAL_VTimerTimeoutCallback+0x4ec>)
10047ff8:	881b      	ldrh	r3, [r3, #0]
10047ffa:	429a      	cmp	r2, r3
10047ffc:	d800      	bhi.n	10048000 <HAL_VTimerTimeoutCallback+0x3b0>
10047ffe:	e72b      	b.n	10047e58 <HAL_VTimerTimeoutCallback+0x208>
10048000:	494c      	ldr	r1, [pc, #304]	; (10048134 <HAL_VTimerTimeoutCallback+0x4e4>)
10048002:	00a0      	lsls	r0, r4, #2
10048004:	4a4e      	ldr	r2, [pc, #312]	; (10048140 <HAL_VTimerTimeoutCallback+0x4f0>)
10048006:	5843      	ldr	r3, [r0, r1]
10048008:	7817      	ldrb	r7, [r2, #0]
1004800a:	425b      	negs	r3, r3
1004800c:	42bb      	cmp	r3, r7
1004800e:	da04      	bge.n	1004801a <HAL_VTimerTimeoutCallback+0x3ca>
10048010:	5841      	ldr	r1, [r0, r1]
10048012:	7813      	ldrb	r3, [r2, #0]
10048014:	4299      	cmp	r1, r3
10048016:	da00      	bge.n	1004801a <HAL_VTimerTimeoutCallback+0x3ca>
10048018:	e71e      	b.n	10047e58 <HAL_VTimerTimeoutCallback+0x208>
					Depressurize_Air_Bag(currentBag_i, targetPressure, ((float)multiplier_decrease[currentBag_i - 1])/100);
1004801a:	4b4a      	ldr	r3, [pc, #296]	; (10048144 <HAL_VTimerTimeoutCallback+0x4f4>)
1004801c:	881f      	ldrh	r7, [r3, #0]
1004801e:	4b4a      	ldr	r3, [pc, #296]	; (10048148 <HAL_VTimerTimeoutCallback+0x4f8>)
10048020:	b2bf      	uxth	r7, r7
10048022:	5d18      	ldrb	r0, [r3, r4]
10048024:	b2c0      	uxtb	r0, r0
10048026:	f7f9 f9af 	bl	10041388 <__aeabi_ui2f>
1004802a:	4948      	ldr	r1, [pc, #288]	; (1004814c <HAL_VTimerTimeoutCallback+0x4fc>)
1004802c:	f7f8 fc90 	bl	10040950 <__aeabi_fdiv>
10048030:	0039      	movs	r1, r7
10048032:	1c02      	adds	r2, r0, #0
10048034:	9801      	ldr	r0, [sp, #4]
10048036:	f7fe fc47 	bl	100468c8 <Depressurize_Air_Bag>
					state_pressure[currentBag_i - 1] = DECREASE;
1004803a:	ab06      	add	r3, sp, #24
1004803c:	2201      	movs	r2, #1
1004803e:	e70a      	b.n	10047e56 <HAL_VTimerTimeoutCallback+0x206>
					} else if (CurrentPressures[currentBag_i - 1] > upperBoundPressure) {
10048040:	5a50      	ldrh	r0, [r2, r1]
10048042:	493e      	ldr	r1, [pc, #248]	; (1004813c <HAL_VTimerTimeoutCallback+0x4ec>)
10048044:	8809      	ldrh	r1, [r1, #0]
10048046:	4288      	cmp	r0, r1
10048048:	d918      	bls.n	1004807c <HAL_VTimerTimeoutCallback+0x42c>
						if (state_pressure[currentBag_i - 1] == INCREASE && multiplier_increase[currentBag_i - 1] > 10) multiplier_increase[currentBag_i - 1] -= 10; // Increased pressure and now its too high -> Lower multiplier
1004804a:	a906      	add	r1, sp, #24
1004804c:	5cc9      	ldrb	r1, [r1, r3]
1004804e:	2900      	cmp	r1, #0
10048050:	d109      	bne.n	10048066 <HAL_VTimerTimeoutCallback+0x416>
10048052:	483f      	ldr	r0, [pc, #252]	; (10048150 <HAL_VTimerTimeoutCallback+0x500>)
10048054:	5cc1      	ldrb	r1, [r0, r3]
10048056:	290a      	cmp	r1, #10
10048058:	d800      	bhi.n	1004805c <HAL_VTimerTimeoutCallback+0x40c>
1004805a:	e72b      	b.n	10047eb4 <HAL_VTimerTimeoutCallback+0x264>
1004805c:	5cc1      	ldrb	r1, [r0, r3]
1004805e:	390a      	subs	r1, #10
						if (state_pressure[currentBag_i - 1] == DECREASE && multiplier_decrease[currentBag_i - 1] < 250) multiplier_decrease[currentBag_i - 1] += 10; // Decreased pressure and still too high -> Raise multiplier
10048060:	b2c9      	uxtb	r1, r1
10048062:	54c1      	strb	r1, [r0, r3]
10048064:	e726      	b.n	10047eb4 <HAL_VTimerTimeoutCallback+0x264>
10048066:	2901      	cmp	r1, #1
10048068:	d000      	beq.n	1004806c <HAL_VTimerTimeoutCallback+0x41c>
1004806a:	e723      	b.n	10047eb4 <HAL_VTimerTimeoutCallback+0x264>
1004806c:	4836      	ldr	r0, [pc, #216]	; (10048148 <HAL_VTimerTimeoutCallback+0x4f8>)
1004806e:	5cc1      	ldrb	r1, [r0, r3]
10048070:	29f9      	cmp	r1, #249	; 0xf9
10048072:	d900      	bls.n	10048076 <HAL_VTimerTimeoutCallback+0x426>
10048074:	e71e      	b.n	10047eb4 <HAL_VTimerTimeoutCallback+0x264>
10048076:	5cc1      	ldrb	r1, [r0, r3]
10048078:	310a      	adds	r1, #10
1004807a:	e7f1      	b.n	10048060 <HAL_VTimerTimeoutCallback+0x410>
						logCounter[currentBag_i - 1] = 0;
1004807c:	2700      	movs	r7, #0
1004807e:	482d      	ldr	r0, [pc, #180]	; (10048134 <HAL_VTimerTimeoutCallback+0x4e4>)
10048080:	0099      	lsls	r1, r3, #2
10048082:	500f      	str	r7, [r1, r0]
10048084:	e716      	b.n	10047eb4 <HAL_VTimerTimeoutCallback+0x264>
10048086:	3501      	adds	r5, #1
		for (uint8_t j=0; j<4; j++) {
10048088:	2d04      	cmp	r5, #4
1004808a:	d000      	beq.n	1004808e <HAL_VTimerTimeoutCallback+0x43e>
1004808c:	e6ad      	b.n	10047dea <HAL_VTimerTimeoutCallback+0x19a>
1004808e:	e735      	b.n	10047efc <HAL_VTimerTimeoutCallback+0x2ac>
	if (timerNum == 3) { // Battery monitoring timer
10048090:	2803      	cmp	r0, #3
10048092:	d000      	beq.n	10048096 <HAL_VTimerTimeoutCallback+0x446>
10048094:	e5f5      	b.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
		if (cushionMode == 0) {
10048096:	4d2f      	ldr	r5, [pc, #188]	; (10048154 <HAL_VTimerTimeoutCallback+0x504>)
10048098:	782b      	ldrb	r3, [r5, #0]
1004809a:	2b00      	cmp	r3, #0
1004809c:	d101      	bne.n	100480a2 <HAL_VTimerTimeoutCallback+0x452>
			ReInitialize();
1004809e:	f7ff fc4b 	bl	10047938 <ReInitialize>
		int ret = HAL_VTimerStart_ms(3, samplingPeriod*60*1000);
100480a2:	4b2d      	ldr	r3, [pc, #180]	; (10048158 <HAL_VTimerTimeoutCallback+0x508>)
100480a4:	492d      	ldr	r1, [pc, #180]	; (1004815c <HAL_VTimerTimeoutCallback+0x50c>)
100480a6:	781b      	ldrb	r3, [r3, #0]
100480a8:	2003      	movs	r0, #3
100480aa:	4359      	muls	r1, r3
100480ac:	f004 fd81 	bl	1004cbb2 <HAL_VTimerStart_ms>
100480b0:	1e04      	subs	r4, r0, #0
		if (ret != BLE_STATUS_SUCCESS)
100480b2:	d000      	beq.n	100480b6 <HAL_VTimerTimeoutCallback+0x466>
100480b4:	e5e5      	b.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
		SEGGER_RTT_printf(0, "Periodically reading battery\n");
100480b6:	492a      	ldr	r1, [pc, #168]	; (10048160 <HAL_VTimerTimeoutCallback+0x510>)
100480b8:	f7fc fd5b 	bl	10044b72 <SEGGER_RTT_printf>
		BatteryReading = ADC_Value(ADC_Input_AdcPin2);
100480bc:	2001      	movs	r0, #1
100480be:	f7fd ff59 	bl	10045f74 <ADC_Value>
100480c2:	4b28      	ldr	r3, [pc, #160]	; (10048164 <HAL_VTimerTimeoutCallback+0x514>)
100480c4:	6018      	str	r0, [r3, #0]
		if (BatteryReading < 6600) { // Battery below 6.6 V
100480c6:	681a      	ldr	r2, [r3, #0]
100480c8:	4b27      	ldr	r3, [pc, #156]	; (10048168 <HAL_VTimerTimeoutCallback+0x518>)
100480ca:	429a      	cmp	r2, r3
100480cc:	d828      	bhi.n	10048120 <HAL_VTimerTimeoutCallback+0x4d0>
			SEGGER_RTT_printf(0, "Battery level too low - shutting off\n");
100480ce:	0020      	movs	r0, r4
100480d0:	4926      	ldr	r1, [pc, #152]	; (1004816c <HAL_VTimerTimeoutCallback+0x51c>)
100480d2:	f7fc fd4e 	bl	10044b72 <SEGGER_RTT_printf>
100480d6:	340a      	adds	r4, #10
				LEDs_Flash(FALSE, TRUE);
100480d8:	2101      	movs	r1, #1
100480da:	2000      	movs	r0, #0
100480dc:	3c01      	subs	r4, #1
100480de:	f7fe f952 	bl	10046386 <LEDs_Flash>
			for (int i=0; i<10; i++) // Flash RED Led 10 times
100480e2:	2c00      	cmp	r4, #0
100480e4:	d1f8      	bne.n	100480d8 <HAL_VTimerTimeoutCallback+0x488>
			HAL_VTimer_Stop(0); // Stop notification timer
100480e6:	0020      	movs	r0, r4
100480e8:	f004 fd7d 	bl	1004cbe6 <HAL_VTimer_Stop>
			HAL_VTimer_Stop(1); // Stop connection monitoring timer
100480ec:	2001      	movs	r0, #1
100480ee:	f004 fd7a 	bl	1004cbe6 <HAL_VTimer_Stop>
			HAL_VTimer_Stop(2); // Stop readjustment timer
100480f2:	2002      	movs	r0, #2
100480f4:	f004 fd77 	bl	1004cbe6 <HAL_VTimer_Stop>
			HAL_VTimer_Stop(3); // Stop this timer
100480f8:	2003      	movs	r0, #3
100480fa:	f004 fd74 	bl	1004cbe6 <HAL_VTimer_Stop>
			SPI_DeepPowerDown_Memory();
100480fe:	f7fe f8cf 	bl	100462a0 <SPI_DeepPowerDown_Memory>
			GPIO_ResetBits(RED_LED|BLUE_LED|PVControl|ValveControl|Valve1|Valve2|Valve3|Valve4|Valve5|Valve6|Valve7|Valve8|SensorControl);
10048102:	481b      	ldr	r0, [pc, #108]	; (10048170 <HAL_VTimerTimeoutCallback+0x520>)
10048104:	f7fb ff73 	bl	10043fee <GPIO_ResetBits>
			SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_SPI, DISABLE);
10048108:	0021      	movs	r1, r4
1004810a:	2010      	movs	r0, #16
1004810c:	f7fc f85e 	bl	100441cc <SysCtrl_PeripheralClockCmd>
			SysCtrl_PeripheralClockCmd(CLOCK_PERIPH_ADC, DISABLE);
10048110:	2080      	movs	r0, #128	; 0x80
10048112:	0021      	movs	r1, r4
10048114:	0040      	lsls	r0, r0, #1
10048116:	f7fc f859 	bl	100441cc <SysCtrl_PeripheralClockCmd>
			longTermMode = TRUE;
1004811a:	2201      	movs	r2, #1
1004811c:	4b15      	ldr	r3, [pc, #84]	; (10048174 <HAL_VTimerTimeoutCallback+0x524>)
1004811e:	701a      	strb	r2, [r3, #0]
		if ((cushionMode == 0) && (longTermMode != TRUE)){ // If in patient mode, and not already powered down
10048120:	782b      	ldrb	r3, [r5, #0]
10048122:	2b00      	cmp	r3, #0
10048124:	d000      	beq.n	10048128 <HAL_VTimerTimeoutCallback+0x4d8>
10048126:	e5ac      	b.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
10048128:	4b12      	ldr	r3, [pc, #72]	; (10048174 <HAL_VTimerTimeoutCallback+0x524>)
1004812a:	781b      	ldrb	r3, [r3, #0]
1004812c:	2b01      	cmp	r3, #1
1004812e:	d000      	beq.n	10048132 <HAL_VTimerTimeoutCallback+0x4e2>
10048130:	e5ab      	b.n	10047c8a <HAL_VTimerTimeoutCallback+0x3a>
10048132:	e5a6      	b.n	10047c82 <HAL_VTimerTimeoutCallback+0x32>
10048134:	200008cc 	.word	0x200008cc
10048138:	20000926 	.word	0x20000926
1004813c:	20000936 	.word	0x20000936
10048140:	20000941 	.word	0x20000941
10048144:	20000914 	.word	0x20000914
10048148:	20000938 	.word	0x20000938
1004814c:	42c80000 	.word	0x42c80000
10048150:	20000900 	.word	0x20000900
10048154:	200008f7 	.word	0x200008f7
10048158:	20000908 	.word	0x20000908
1004815c:	0000ea60 	.word	0x0000ea60
10048160:	10058d6e 	.word	0x10058d6e
10048164:	20000910 	.word	0x20000910
10048168:	000019c7 	.word	0x000019c7
1004816c:	10058d8c 	.word	0x10058d8c
10048170:	03fc0970 	.word	0x03fc0970
10048174:	20000940 	.word	0x20000940

10048178 <aci_gatt_attribute_modified_event>:
void aci_gatt_attribute_modified_event(uint16_t Connection_Handle,
                                       uint16_t Attr_Handle,
                                       uint16_t Offset,
                                       uint16_t Attr_Data_Length,
                                       uint8_t Attr_Data[])
{
10048178:	b510      	push	{r4, lr}
1004817a:	0008      	movs	r0, r1
	//SEGGER_RTT_printf(0,"write req received.Connection_Handle is:%04x, Attr_Handle is:%04x, datalength is:%04x\n",Connection_Handle,Attr_Handle,Attr_Data_Length);
	for(int i=0;i<Attr_Data_Length;i++){
		//SEGGER_RTT_printf(0,"attr_data[%d]: %04x\n",i,Attr_Data[i]);
	}
	Write_Request_CB(Attr_Handle,Attr_Data_Length,Attr_Data);
1004817c:	9a02      	ldr	r2, [sp, #8]
1004817e:	0019      	movs	r1, r3
10048180:	f7fd fc9c 	bl	10045abc <Write_Request_CB>
}
10048184:	bd10      	pop	{r4, pc}

10048186 <aci_hal_end_of_radio_activity_event>:
void aci_hal_end_of_radio_activity_event(uint8_t Last_State,
                                         uint8_t Next_State,
                                         uint32_t Next_State_SysTime)
{

}
10048186:	4770      	bx	lr

10048188 <aci_att_exchange_mtu_resp_event>:
  * @param Server_RX_MTU ATT_MTU value agreed between server and client
  * @retval None
*/
void aci_att_exchange_mtu_resp_event(uint16_t Connection_Handle,
                                     uint16_t Server_RX_MTU)
{
10048188:	b510      	push	{r4, lr}
1004818a:	000a      	movs	r2, r1
	SEGGER_RTT_printf(0,"mtu now.%d\n",Server_RX_MTU);
1004818c:	2000      	movs	r0, #0
1004818e:	4902      	ldr	r1, [pc, #8]	; (10048198 <aci_att_exchange_mtu_resp_event+0x10>)
10048190:	f7fc fcef 	bl	10044b72 <SEGGER_RTT_printf>
}
10048194:	bd10      	pop	{r4, pc}
10048196:	46c0      	nop			; (mov r8, r8)
10048198:	10058e35 	.word	0x10058e35

1004819c <__aeabi_memmove>:
1004819c:	b510      	push	{r4, lr}
1004819e:	f000 f819 	bl	100481d4 <memmove>
100481a2:	bd10      	pop	{r4, pc}

100481a4 <memcmp>:
100481a4:	b530      	push	{r4, r5, lr}
100481a6:	2400      	movs	r4, #0
100481a8:	42a2      	cmp	r2, r4
100481aa:	d101      	bne.n	100481b0 <memcmp+0xc>
100481ac:	2000      	movs	r0, #0
100481ae:	e005      	b.n	100481bc <memcmp+0x18>
100481b0:	5d03      	ldrb	r3, [r0, r4]
100481b2:	1c65      	adds	r5, r4, #1
100481b4:	5d0c      	ldrb	r4, [r1, r4]
100481b6:	42a3      	cmp	r3, r4
100481b8:	d001      	beq.n	100481be <memcmp+0x1a>
100481ba:	1b18      	subs	r0, r3, r4
100481bc:	bd30      	pop	{r4, r5, pc}
100481be:	002c      	movs	r4, r5
100481c0:	e7f2      	b.n	100481a8 <memcmp+0x4>

100481c2 <memcpy>:
100481c2:	2300      	movs	r3, #0
100481c4:	b510      	push	{r4, lr}
100481c6:	429a      	cmp	r2, r3
100481c8:	d100      	bne.n	100481cc <memcpy+0xa>
100481ca:	bd10      	pop	{r4, pc}
100481cc:	5ccc      	ldrb	r4, [r1, r3]
100481ce:	54c4      	strb	r4, [r0, r3]
100481d0:	3301      	adds	r3, #1
100481d2:	e7f8      	b.n	100481c6 <memcpy+0x4>

100481d4 <memmove>:
100481d4:	b510      	push	{r4, lr}
100481d6:	4288      	cmp	r0, r1
100481d8:	d902      	bls.n	100481e0 <memmove+0xc>
100481da:	188b      	adds	r3, r1, r2
100481dc:	4298      	cmp	r0, r3
100481de:	d308      	bcc.n	100481f2 <memmove+0x1e>
100481e0:	2300      	movs	r3, #0
100481e2:	429a      	cmp	r2, r3
100481e4:	d007      	beq.n	100481f6 <memmove+0x22>
100481e6:	5ccc      	ldrb	r4, [r1, r3]
100481e8:	54c4      	strb	r4, [r0, r3]
100481ea:	3301      	adds	r3, #1
100481ec:	e7f9      	b.n	100481e2 <memmove+0xe>
100481ee:	5c8b      	ldrb	r3, [r1, r2]
100481f0:	5483      	strb	r3, [r0, r2]
100481f2:	3a01      	subs	r2, #1
100481f4:	d2fb      	bcs.n	100481ee <memmove+0x1a>
100481f6:	bd10      	pop	{r4, pc}

100481f8 <memset>:
100481f8:	0003      	movs	r3, r0
100481fa:	1882      	adds	r2, r0, r2
100481fc:	4293      	cmp	r3, r2
100481fe:	d100      	bne.n	10048202 <memset+0xa>
10048200:	4770      	bx	lr
10048202:	7019      	strb	r1, [r3, #0]
10048204:	3301      	adds	r3, #1
10048206:	e7f9      	b.n	100481fc <memset+0x4>

10048208 <strcpy>:
10048208:	1c03      	adds	r3, r0, #0
1004820a:	780a      	ldrb	r2, [r1, #0]
1004820c:	3101      	adds	r1, #1
1004820e:	701a      	strb	r2, [r3, #0]
10048210:	3301      	adds	r3, #1
10048212:	2a00      	cmp	r2, #0
10048214:	d1f9      	bne.n	1004820a <strcpy+0x2>
10048216:	4770      	bx	lr

10048218 <log>:
10048218:	b5f0      	push	{r4, r5, r6, r7, lr}
1004821a:	b08d      	sub	sp, #52	; 0x34
1004821c:	0004      	movs	r4, r0
1004821e:	000d      	movs	r5, r1
10048220:	f000 fa1e 	bl	10048660 <__ieee754_log>
10048224:	4b37      	ldr	r3, [pc, #220]	; (10048304 <log+0xec>)
10048226:	0006      	movs	r6, r0
10048228:	781b      	ldrb	r3, [r3, #0]
1004822a:	000f      	movs	r7, r1
1004822c:	b25b      	sxtb	r3, r3
1004822e:	9301      	str	r3, [sp, #4]
10048230:	3301      	adds	r3, #1
10048232:	d063      	beq.n	100482fc <log+0xe4>
10048234:	0022      	movs	r2, r4
10048236:	002b      	movs	r3, r5
10048238:	0020      	movs	r0, r4
1004823a:	0029      	movs	r1, r5
1004823c:	f7fa fdc4 	bl	10042dc8 <__aeabi_dcmpun>
10048240:	2800      	cmp	r0, #0
10048242:	d15b      	bne.n	100482fc <log+0xe4>
10048244:	2200      	movs	r2, #0
10048246:	2300      	movs	r3, #0
10048248:	0020      	movs	r0, r4
1004824a:	0029      	movs	r1, r5
1004824c:	f7f8 f930 	bl	100404b0 <__aeabi_dcmpgt>
10048250:	2800      	cmp	r0, #0
10048252:	d153      	bne.n	100482fc <log+0xe4>
10048254:	4b2c      	ldr	r3, [pc, #176]	; (10048308 <log+0xf0>)
10048256:	900a      	str	r0, [sp, #40]	; 0x28
10048258:	9303      	str	r3, [sp, #12]
1004825a:	9b01      	ldr	r3, [sp, #4]
1004825c:	9404      	str	r4, [sp, #16]
1004825e:	9505      	str	r5, [sp, #20]
10048260:	9406      	str	r4, [sp, #24]
10048262:	9507      	str	r5, [sp, #28]
10048264:	2b00      	cmp	r3, #0
10048266:	d116      	bne.n	10048296 <log+0x7e>
10048268:	22e0      	movs	r2, #224	; 0xe0
1004826a:	4b28      	ldr	r3, [pc, #160]	; (1004830c <log+0xf4>)
1004826c:	0612      	lsls	r2, r2, #24
1004826e:	9208      	str	r2, [sp, #32]
10048270:	9309      	str	r3, [sp, #36]	; 0x24
10048272:	0020      	movs	r0, r4
10048274:	2200      	movs	r2, #0
10048276:	2300      	movs	r3, #0
10048278:	0029      	movs	r1, r5
1004827a:	f7f8 f8ff 	bl	1004047c <__aeabi_dcmpeq>
1004827e:	2800      	cmp	r0, #0
10048280:	d12a      	bne.n	100482d8 <log+0xc0>
10048282:	2301      	movs	r3, #1
10048284:	9302      	str	r3, [sp, #8]
10048286:	9b01      	ldr	r3, [sp, #4]
10048288:	2b02      	cmp	r3, #2
1004828a:	d11a      	bne.n	100482c2 <log+0xaa>
1004828c:	f001 fa5e 	bl	1004974c <__errno>
10048290:	2321      	movs	r3, #33	; 0x21
10048292:	6003      	str	r3, [r0, #0]
10048294:	e01a      	b.n	100482cc <log+0xb4>
10048296:	2200      	movs	r2, #0
10048298:	4b1d      	ldr	r3, [pc, #116]	; (10048310 <log+0xf8>)
1004829a:	0020      	movs	r0, r4
1004829c:	9208      	str	r2, [sp, #32]
1004829e:	9309      	str	r3, [sp, #36]	; 0x24
100482a0:	0029      	movs	r1, r5
100482a2:	2200      	movs	r2, #0
100482a4:	2300      	movs	r3, #0
100482a6:	f7f8 f8e9 	bl	1004047c <__aeabi_dcmpeq>
100482aa:	2800      	cmp	r0, #0
100482ac:	d0e9      	beq.n	10048282 <log+0x6a>
100482ae:	2302      	movs	r3, #2
100482b0:	9302      	str	r3, [sp, #8]
100482b2:	9b01      	ldr	r3, [sp, #4]
100482b4:	2b02      	cmp	r3, #2
100482b6:	d111      	bne.n	100482dc <log+0xc4>
100482b8:	f001 fa48 	bl	1004974c <__errno>
100482bc:	2322      	movs	r3, #34	; 0x22
100482be:	6003      	str	r3, [r0, #0]
100482c0:	e011      	b.n	100482e6 <log+0xce>
100482c2:	a802      	add	r0, sp, #8
100482c4:	f001 f946 	bl	10049554 <matherr>
100482c8:	2800      	cmp	r0, #0
100482ca:	d0df      	beq.n	1004828c <log+0x74>
100482cc:	4811      	ldr	r0, [pc, #68]	; (10048314 <log+0xfc>)
100482ce:	f001 f943 	bl	10049558 <nan>
100482d2:	9008      	str	r0, [sp, #32]
100482d4:	9109      	str	r1, [sp, #36]	; 0x24
100482d6:	e006      	b.n	100482e6 <log+0xce>
100482d8:	2302      	movs	r3, #2
100482da:	9302      	str	r3, [sp, #8]
100482dc:	a802      	add	r0, sp, #8
100482de:	f001 f939 	bl	10049554 <matherr>
100482e2:	2800      	cmp	r0, #0
100482e4:	d0e8      	beq.n	100482b8 <log+0xa0>
100482e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
100482e8:	9301      	str	r3, [sp, #4]
100482ea:	2b00      	cmp	r3, #0
100482ec:	d004      	beq.n	100482f8 <log+0xe0>
100482ee:	f001 fa2d 	bl	1004974c <__errno>
100482f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
100482f4:	9301      	str	r3, [sp, #4]
100482f6:	6003      	str	r3, [r0, #0]
100482f8:	9e08      	ldr	r6, [sp, #32]
100482fa:	9f09      	ldr	r7, [sp, #36]	; 0x24
100482fc:	0030      	movs	r0, r6
100482fe:	0039      	movs	r1, r7
10048300:	b00d      	add	sp, #52	; 0x34
10048302:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048304:	200009fc 	.word	0x200009fc
10048308:	10058ee0 	.word	0x10058ee0
1004830c:	c7efffff 	.word	0xc7efffff
10048310:	fff00000 	.word	0xfff00000
10048314:	100589a4 	.word	0x100589a4

10048318 <pow>:
10048318:	b5f0      	push	{r4, r5, r6, r7, lr}
1004831a:	b091      	sub	sp, #68	; 0x44
1004831c:	001f      	movs	r7, r3
1004831e:	9000      	str	r0, [sp, #0]
10048320:	9101      	str	r1, [sp, #4]
10048322:	0016      	movs	r6, r2
10048324:	f000 fb7c 	bl	10048a20 <__ieee754_pow>
10048328:	4bc5      	ldr	r3, [pc, #788]	; (10048640 <pow+0x328>)
1004832a:	0004      	movs	r4, r0
1004832c:	781b      	ldrb	r3, [r3, #0]
1004832e:	000d      	movs	r5, r1
10048330:	b25b      	sxtb	r3, r3
10048332:	9303      	str	r3, [sp, #12]
10048334:	3301      	adds	r3, #1
10048336:	d100      	bne.n	1004833a <pow+0x22>
10048338:	e0d8      	b.n	100484ec <pow+0x1d4>
1004833a:	0032      	movs	r2, r6
1004833c:	003b      	movs	r3, r7
1004833e:	0030      	movs	r0, r6
10048340:	0039      	movs	r1, r7
10048342:	f7fa fd41 	bl	10042dc8 <__aeabi_dcmpun>
10048346:	9004      	str	r0, [sp, #16]
10048348:	2800      	cmp	r0, #0
1004834a:	d000      	beq.n	1004834e <pow+0x36>
1004834c:	e0ce      	b.n	100484ec <pow+0x1d4>
1004834e:	9a00      	ldr	r2, [sp, #0]
10048350:	9b01      	ldr	r3, [sp, #4]
10048352:	0010      	movs	r0, r2
10048354:	0019      	movs	r1, r3
10048356:	f7fa fd37 	bl	10042dc8 <__aeabi_dcmpun>
1004835a:	2200      	movs	r2, #0
1004835c:	9005      	str	r0, [sp, #20]
1004835e:	2800      	cmp	r0, #0
10048360:	d020      	beq.n	100483a4 <pow+0x8c>
10048362:	2300      	movs	r3, #0
10048364:	0030      	movs	r0, r6
10048366:	0039      	movs	r1, r7
10048368:	f7f8 f888 	bl	1004047c <__aeabi_dcmpeq>
1004836c:	2800      	cmp	r0, #0
1004836e:	d100      	bne.n	10048372 <pow+0x5a>
10048370:	e0bc      	b.n	100484ec <pow+0x1d4>
10048372:	2301      	movs	r3, #1
10048374:	2200      	movs	r2, #0
10048376:	9306      	str	r3, [sp, #24]
10048378:	4bb2      	ldr	r3, [pc, #712]	; (10048644 <pow+0x32c>)
1004837a:	960a      	str	r6, [sp, #40]	; 0x28
1004837c:	970b      	str	r7, [sp, #44]	; 0x2c
1004837e:	9307      	str	r3, [sp, #28]
10048380:	9b04      	ldr	r3, [sp, #16]
10048382:	930e      	str	r3, [sp, #56]	; 0x38
10048384:	9b00      	ldr	r3, [sp, #0]
10048386:	9c01      	ldr	r4, [sp, #4]
10048388:	9308      	str	r3, [sp, #32]
1004838a:	9409      	str	r4, [sp, #36]	; 0x24
1004838c:	4bae      	ldr	r3, [pc, #696]	; (10048648 <pow+0x330>)
1004838e:	920c      	str	r2, [sp, #48]	; 0x30
10048390:	930d      	str	r3, [sp, #52]	; 0x34
10048392:	9b03      	ldr	r3, [sp, #12]
10048394:	2b02      	cmp	r3, #2
10048396:	d035      	beq.n	10048404 <pow+0xec>
10048398:	a806      	add	r0, sp, #24
1004839a:	f001 f8db 	bl	10049554 <matherr>
1004839e:	2800      	cmp	r0, #0
100483a0:	d127      	bne.n	100483f2 <pow+0xda>
100483a2:	e05c      	b.n	1004845e <pow+0x146>
100483a4:	2300      	movs	r3, #0
100483a6:	9800      	ldr	r0, [sp, #0]
100483a8:	9901      	ldr	r1, [sp, #4]
100483aa:	f7f8 f867 	bl	1004047c <__aeabi_dcmpeq>
100483ae:	2800      	cmp	r0, #0
100483b0:	d05a      	beq.n	10048468 <pow+0x150>
100483b2:	2200      	movs	r2, #0
100483b4:	2300      	movs	r3, #0
100483b6:	0030      	movs	r0, r6
100483b8:	0039      	movs	r1, r7
100483ba:	f7f8 f85f 	bl	1004047c <__aeabi_dcmpeq>
100483be:	9004      	str	r0, [sp, #16]
100483c0:	2800      	cmp	r0, #0
100483c2:	d022      	beq.n	1004840a <pow+0xf2>
100483c4:	2301      	movs	r3, #1
100483c6:	9306      	str	r3, [sp, #24]
100483c8:	4b9e      	ldr	r3, [pc, #632]	; (10048644 <pow+0x32c>)
100483ca:	960a      	str	r6, [sp, #40]	; 0x28
100483cc:	970b      	str	r7, [sp, #44]	; 0x2c
100483ce:	9307      	str	r3, [sp, #28]
100483d0:	9b05      	ldr	r3, [sp, #20]
100483d2:	930e      	str	r3, [sp, #56]	; 0x38
100483d4:	9b00      	ldr	r3, [sp, #0]
100483d6:	9c01      	ldr	r4, [sp, #4]
100483d8:	9308      	str	r3, [sp, #32]
100483da:	9409      	str	r4, [sp, #36]	; 0x24
100483dc:	2300      	movs	r3, #0
100483de:	2400      	movs	r4, #0
100483e0:	930c      	str	r3, [sp, #48]	; 0x30
100483e2:	940d      	str	r4, [sp, #52]	; 0x34
100483e4:	9b03      	ldr	r3, [sp, #12]
100483e6:	2b00      	cmp	r3, #0
100483e8:	d0d6      	beq.n	10048398 <pow+0x80>
100483ea:	2200      	movs	r2, #0
100483ec:	4b96      	ldr	r3, [pc, #600]	; (10048648 <pow+0x330>)
100483ee:	920c      	str	r2, [sp, #48]	; 0x30
100483f0:	930d      	str	r3, [sp, #52]	; 0x34
100483f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
100483f4:	9300      	str	r3, [sp, #0]
100483f6:	2b00      	cmp	r3, #0
100483f8:	d004      	beq.n	10048404 <pow+0xec>
100483fa:	f001 f9a7 	bl	1004974c <__errno>
100483fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10048400:	9300      	str	r3, [sp, #0]
10048402:	6003      	str	r3, [r0, #0]
10048404:	9c0c      	ldr	r4, [sp, #48]	; 0x30
10048406:	9d0d      	ldr	r5, [sp, #52]	; 0x34
10048408:	e070      	b.n	100484ec <pow+0x1d4>
1004840a:	0030      	movs	r0, r6
1004840c:	0039      	movs	r1, r7
1004840e:	f001 f899 	bl	10049544 <finite>
10048412:	2800      	cmp	r0, #0
10048414:	d06a      	beq.n	100484ec <pow+0x1d4>
10048416:	2200      	movs	r2, #0
10048418:	2300      	movs	r3, #0
1004841a:	0030      	movs	r0, r6
1004841c:	0039      	movs	r1, r7
1004841e:	f7f8 f833 	bl	10040488 <__aeabi_dcmplt>
10048422:	2800      	cmp	r0, #0
10048424:	d062      	beq.n	100484ec <pow+0x1d4>
10048426:	2301      	movs	r3, #1
10048428:	9306      	str	r3, [sp, #24]
1004842a:	4b86      	ldr	r3, [pc, #536]	; (10048644 <pow+0x32c>)
1004842c:	960a      	str	r6, [sp, #40]	; 0x28
1004842e:	970b      	str	r7, [sp, #44]	; 0x2c
10048430:	9307      	str	r3, [sp, #28]
10048432:	9b04      	ldr	r3, [sp, #16]
10048434:	930e      	str	r3, [sp, #56]	; 0x38
10048436:	9b00      	ldr	r3, [sp, #0]
10048438:	9c01      	ldr	r4, [sp, #4]
1004843a:	9308      	str	r3, [sp, #32]
1004843c:	9409      	str	r4, [sp, #36]	; 0x24
1004843e:	4b80      	ldr	r3, [pc, #512]	; (10048640 <pow+0x328>)
10048440:	781b      	ldrb	r3, [r3, #0]
10048442:	b25b      	sxtb	r3, r3
10048444:	2b00      	cmp	r3, #0
10048446:	d104      	bne.n	10048452 <pow+0x13a>
10048448:	2300      	movs	r3, #0
1004844a:	2400      	movs	r4, #0
1004844c:	930c      	str	r3, [sp, #48]	; 0x30
1004844e:	940d      	str	r4, [sp, #52]	; 0x34
10048450:	e7a2      	b.n	10048398 <pow+0x80>
10048452:	2000      	movs	r0, #0
10048454:	497d      	ldr	r1, [pc, #500]	; (1004864c <pow+0x334>)
10048456:	900c      	str	r0, [sp, #48]	; 0x30
10048458:	910d      	str	r1, [sp, #52]	; 0x34
1004845a:	2b02      	cmp	r3, #2
1004845c:	d19c      	bne.n	10048398 <pow+0x80>
1004845e:	f001 f975 	bl	1004974c <__errno>
10048462:	2321      	movs	r3, #33	; 0x21
10048464:	6003      	str	r3, [r0, #0]
10048466:	e7c4      	b.n	100483f2 <pow+0xda>
10048468:	0020      	movs	r0, r4
1004846a:	0029      	movs	r1, r5
1004846c:	f001 f86a 	bl	10049544 <finite>
10048470:	9003      	str	r0, [sp, #12]
10048472:	2800      	cmp	r0, #0
10048474:	d000      	beq.n	10048478 <pow+0x160>
10048476:	e0ab      	b.n	100485d0 <pow+0x2b8>
10048478:	9800      	ldr	r0, [sp, #0]
1004847a:	9901      	ldr	r1, [sp, #4]
1004847c:	f001 f862 	bl	10049544 <finite>
10048480:	2800      	cmp	r0, #0
10048482:	d100      	bne.n	10048486 <pow+0x16e>
10048484:	e0a4      	b.n	100485d0 <pow+0x2b8>
10048486:	0030      	movs	r0, r6
10048488:	0039      	movs	r1, r7
1004848a:	f001 f85b 	bl	10049544 <finite>
1004848e:	2800      	cmp	r0, #0
10048490:	d100      	bne.n	10048494 <pow+0x17c>
10048492:	e09d      	b.n	100485d0 <pow+0x2b8>
10048494:	002b      	movs	r3, r5
10048496:	0022      	movs	r2, r4
10048498:	0020      	movs	r0, r4
1004849a:	0029      	movs	r1, r5
1004849c:	f7fa fc94 	bl	10042dc8 <__aeabi_dcmpun>
100484a0:	2500      	movs	r5, #0
100484a2:	4b67      	ldr	r3, [pc, #412]	; (10048640 <pow+0x328>)
100484a4:	ac06      	add	r4, sp, #24
100484a6:	575d      	ldrsb	r5, [r3, r5]
100484a8:	4b66      	ldr	r3, [pc, #408]	; (10048644 <pow+0x32c>)
100484aa:	2800      	cmp	r0, #0
100484ac:	d02f      	beq.n	1004850e <pow+0x1f6>
100484ae:	2201      	movs	r2, #1
100484b0:	6063      	str	r3, [r4, #4]
100484b2:	9b03      	ldr	r3, [sp, #12]
100484b4:	9206      	str	r2, [sp, #24]
100484b6:	6223      	str	r3, [r4, #32]
100484b8:	6126      	str	r6, [r4, #16]
100484ba:	6167      	str	r7, [r4, #20]
100484bc:	9a00      	ldr	r2, [sp, #0]
100484be:	9b01      	ldr	r3, [sp, #4]
100484c0:	60a2      	str	r2, [r4, #8]
100484c2:	60e3      	str	r3, [r4, #12]
100484c4:	2200      	movs	r2, #0
100484c6:	2300      	movs	r3, #0
100484c8:	2d00      	cmp	r5, #0
100484ca:	d113      	bne.n	100484f4 <pow+0x1dc>
100484cc:	61a2      	str	r2, [r4, #24]
100484ce:	61e3      	str	r3, [r4, #28]
100484d0:	0020      	movs	r0, r4
100484d2:	f001 f83f 	bl	10049554 <matherr>
100484d6:	2800      	cmp	r0, #0
100484d8:	d014      	beq.n	10048504 <pow+0x1ec>
100484da:	6a23      	ldr	r3, [r4, #32]
100484dc:	2b00      	cmp	r3, #0
100484de:	d003      	beq.n	100484e8 <pow+0x1d0>
100484e0:	f001 f934 	bl	1004974c <__errno>
100484e4:	6a23      	ldr	r3, [r4, #32]
100484e6:	6003      	str	r3, [r0, #0]
100484e8:	69e5      	ldr	r5, [r4, #28]
100484ea:	69a4      	ldr	r4, [r4, #24]
100484ec:	0020      	movs	r0, r4
100484ee:	0029      	movs	r1, r5
100484f0:	b011      	add	sp, #68	; 0x44
100484f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100484f4:	0010      	movs	r0, r2
100484f6:	0019      	movs	r1, r3
100484f8:	f7f9 fa9c 	bl	10041a34 <__aeabi_ddiv>
100484fc:	61a0      	str	r0, [r4, #24]
100484fe:	61e1      	str	r1, [r4, #28]
10048500:	2d02      	cmp	r5, #2
10048502:	d1e5      	bne.n	100484d0 <pow+0x1b8>
10048504:	f001 f922 	bl	1004974c <__errno>
10048508:	2321      	movs	r3, #33	; 0x21
1004850a:	6003      	str	r3, [r0, #0]
1004850c:	e7e5      	b.n	100484da <pow+0x1c2>
1004850e:	2203      	movs	r2, #3
10048510:	6063      	str	r3, [r4, #4]
10048512:	9206      	str	r2, [sp, #24]
10048514:	6220      	str	r0, [r4, #32]
10048516:	9a00      	ldr	r2, [sp, #0]
10048518:	9b01      	ldr	r3, [sp, #4]
1004851a:	6126      	str	r6, [r4, #16]
1004851c:	6167      	str	r7, [r4, #20]
1004851e:	60a2      	str	r2, [r4, #8]
10048520:	60e3      	str	r3, [r4, #12]
10048522:	2d00      	cmp	r5, #0
10048524:	d12c      	bne.n	10048580 <pow+0x268>
10048526:	9800      	ldr	r0, [sp, #0]
10048528:	9901      	ldr	r1, [sp, #4]
1004852a:	22e0      	movs	r2, #224	; 0xe0
1004852c:	4b48      	ldr	r3, [pc, #288]	; (10048650 <pow+0x338>)
1004852e:	0612      	lsls	r2, r2, #24
10048530:	61a2      	str	r2, [r4, #24]
10048532:	61e3      	str	r3, [r4, #28]
10048534:	2200      	movs	r2, #0
10048536:	2300      	movs	r3, #0
10048538:	f7f7 ffa6 	bl	10040488 <__aeabi_dcmplt>
1004853c:	2800      	cmp	r0, #0
1004853e:	d040      	beq.n	100485c2 <pow+0x2aa>
10048540:	2200      	movs	r2, #0
10048542:	4b44      	ldr	r3, [pc, #272]	; (10048654 <pow+0x33c>)
10048544:	0030      	movs	r0, r6
10048546:	0039      	movs	r1, r7
10048548:	f7f9 fea8 	bl	1004229c <__aeabi_dmul>
1004854c:	0006      	movs	r6, r0
1004854e:	000f      	movs	r7, r1
10048550:	f001 f808 	bl	10049564 <rint>
10048554:	0002      	movs	r2, r0
10048556:	000b      	movs	r3, r1
10048558:	0030      	movs	r0, r6
1004855a:	0039      	movs	r1, r7
1004855c:	f7f7 ff8e 	bl	1004047c <__aeabi_dcmpeq>
10048560:	2800      	cmp	r0, #0
10048562:	d104      	bne.n	1004856e <pow+0x256>
10048564:	22e0      	movs	r2, #224	; 0xe0
10048566:	4b3c      	ldr	r3, [pc, #240]	; (10048658 <pow+0x340>)
10048568:	0612      	lsls	r2, r2, #24
1004856a:	61a2      	str	r2, [r4, #24]
1004856c:	61e3      	str	r3, [r4, #28]
1004856e:	4b34      	ldr	r3, [pc, #208]	; (10048640 <pow+0x328>)
10048570:	781b      	ldrb	r3, [r3, #0]
10048572:	b25b      	sxtb	r3, r3
10048574:	2b02      	cmp	r3, #2
10048576:	d124      	bne.n	100485c2 <pow+0x2aa>
10048578:	f001 f8e8 	bl	1004974c <__errno>
1004857c:	2322      	movs	r3, #34	; 0x22
1004857e:	e7c4      	b.n	1004850a <pow+0x1f2>
10048580:	2200      	movs	r2, #0
10048582:	9800      	ldr	r0, [sp, #0]
10048584:	9901      	ldr	r1, [sp, #4]
10048586:	4b35      	ldr	r3, [pc, #212]	; (1004865c <pow+0x344>)
10048588:	61a2      	str	r2, [r4, #24]
1004858a:	61e3      	str	r3, [r4, #28]
1004858c:	2200      	movs	r2, #0
1004858e:	2300      	movs	r3, #0
10048590:	f7f7 ff7a 	bl	10040488 <__aeabi_dcmplt>
10048594:	2800      	cmp	r0, #0
10048596:	d0ea      	beq.n	1004856e <pow+0x256>
10048598:	2200      	movs	r2, #0
1004859a:	4b2e      	ldr	r3, [pc, #184]	; (10048654 <pow+0x33c>)
1004859c:	0030      	movs	r0, r6
1004859e:	0039      	movs	r1, r7
100485a0:	f7f9 fe7c 	bl	1004229c <__aeabi_dmul>
100485a4:	0006      	movs	r6, r0
100485a6:	000f      	movs	r7, r1
100485a8:	f000 ffdc 	bl	10049564 <rint>
100485ac:	0002      	movs	r2, r0
100485ae:	000b      	movs	r3, r1
100485b0:	0030      	movs	r0, r6
100485b2:	0039      	movs	r1, r7
100485b4:	f7f7 ff62 	bl	1004047c <__aeabi_dcmpeq>
100485b8:	2800      	cmp	r0, #0
100485ba:	d1d8      	bne.n	1004856e <pow+0x256>
100485bc:	2200      	movs	r2, #0
100485be:	4b23      	ldr	r3, [pc, #140]	; (1004864c <pow+0x334>)
100485c0:	e7d3      	b.n	1004856a <pow+0x252>
100485c2:	0020      	movs	r0, r4
100485c4:	f000 ffc6 	bl	10049554 <matherr>
100485c8:	2800      	cmp	r0, #0
100485ca:	d000      	beq.n	100485ce <pow+0x2b6>
100485cc:	e785      	b.n	100484da <pow+0x1c2>
100485ce:	e7d3      	b.n	10048578 <pow+0x260>
100485d0:	2200      	movs	r2, #0
100485d2:	2300      	movs	r3, #0
100485d4:	0020      	movs	r0, r4
100485d6:	0029      	movs	r1, r5
100485d8:	f7f7 ff50 	bl	1004047c <__aeabi_dcmpeq>
100485dc:	2800      	cmp	r0, #0
100485de:	d100      	bne.n	100485e2 <pow+0x2ca>
100485e0:	e784      	b.n	100484ec <pow+0x1d4>
100485e2:	9800      	ldr	r0, [sp, #0]
100485e4:	9901      	ldr	r1, [sp, #4]
100485e6:	f000 ffad 	bl	10049544 <finite>
100485ea:	2800      	cmp	r0, #0
100485ec:	d100      	bne.n	100485f0 <pow+0x2d8>
100485ee:	e77d      	b.n	100484ec <pow+0x1d4>
100485f0:	0030      	movs	r0, r6
100485f2:	0039      	movs	r1, r7
100485f4:	f000 ffa6 	bl	10049544 <finite>
100485f8:	2800      	cmp	r0, #0
100485fa:	d100      	bne.n	100485fe <pow+0x2e6>
100485fc:	e776      	b.n	100484ec <pow+0x1d4>
100485fe:	2304      	movs	r3, #4
10048600:	9306      	str	r3, [sp, #24]
10048602:	4b10      	ldr	r3, [pc, #64]	; (10048644 <pow+0x32c>)
10048604:	960a      	str	r6, [sp, #40]	; 0x28
10048606:	970b      	str	r7, [sp, #44]	; 0x2c
10048608:	9307      	str	r3, [sp, #28]
1004860a:	2300      	movs	r3, #0
1004860c:	930e      	str	r3, [sp, #56]	; 0x38
1004860e:	9b00      	ldr	r3, [sp, #0]
10048610:	9c01      	ldr	r4, [sp, #4]
10048612:	9308      	str	r3, [sp, #32]
10048614:	9409      	str	r4, [sp, #36]	; 0x24
10048616:	2300      	movs	r3, #0
10048618:	2400      	movs	r4, #0
1004861a:	930c      	str	r3, [sp, #48]	; 0x30
1004861c:	940d      	str	r4, [sp, #52]	; 0x34
1004861e:	4b08      	ldr	r3, [pc, #32]	; (10048640 <pow+0x328>)
10048620:	781b      	ldrb	r3, [r3, #0]
10048622:	b25b      	sxtb	r3, r3
10048624:	2b02      	cmp	r3, #2
10048626:	d103      	bne.n	10048630 <pow+0x318>
10048628:	f001 f890 	bl	1004974c <__errno>
1004862c:	2322      	movs	r3, #34	; 0x22
1004862e:	e719      	b.n	10048464 <pow+0x14c>
10048630:	a806      	add	r0, sp, #24
10048632:	f000 ff8f 	bl	10049554 <matherr>
10048636:	2800      	cmp	r0, #0
10048638:	d000      	beq.n	1004863c <pow+0x324>
1004863a:	e6da      	b.n	100483f2 <pow+0xda>
1004863c:	e7f4      	b.n	10048628 <pow+0x310>
1004863e:	46c0      	nop			; (mov r8, r8)
10048640:	200009fc 	.word	0x200009fc
10048644:	10058ee4 	.word	0x10058ee4
10048648:	3ff00000 	.word	0x3ff00000
1004864c:	fff00000 	.word	0xfff00000
10048650:	47efffff 	.word	0x47efffff
10048654:	3fe00000 	.word	0x3fe00000
10048658:	c7efffff 	.word	0xc7efffff
1004865c:	7ff00000 	.word	0x7ff00000

10048660 <__ieee754_log>:
10048660:	b5f0      	push	{r4, r5, r6, r7, lr}
10048662:	4bd1      	ldr	r3, [pc, #836]	; (100489a8 <__ieee754_log+0x348>)
10048664:	b08b      	sub	sp, #44	; 0x2c
10048666:	000d      	movs	r5, r1
10048668:	4299      	cmp	r1, r3
1004866a:	dc23      	bgt.n	100486b4 <__ieee754_log+0x54>
1004866c:	004b      	lsls	r3, r1, #1
1004866e:	085b      	lsrs	r3, r3, #1
10048670:	4303      	orrs	r3, r0
10048672:	d107      	bne.n	10048684 <__ieee754_log+0x24>
10048674:	2200      	movs	r2, #0
10048676:	2300      	movs	r3, #0
10048678:	2000      	movs	r0, #0
1004867a:	49cc      	ldr	r1, [pc, #816]	; (100489ac <__ieee754_log+0x34c>)
1004867c:	f7f9 f9da 	bl	10041a34 <__aeabi_ddiv>
10048680:	b00b      	add	sp, #44	; 0x2c
10048682:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048684:	2900      	cmp	r1, #0
10048686:	da06      	bge.n	10048696 <__ieee754_log+0x36>
10048688:	0002      	movs	r2, r0
1004868a:	000b      	movs	r3, r1
1004868c:	f7fa f886 	bl	1004279c <__aeabi_dsub>
10048690:	2200      	movs	r2, #0
10048692:	2300      	movs	r3, #0
10048694:	e7f2      	b.n	1004867c <__ieee754_log+0x1c>
10048696:	4bc6      	ldr	r3, [pc, #792]	; (100489b0 <__ieee754_log+0x350>)
10048698:	2200      	movs	r2, #0
1004869a:	f7f9 fdff 	bl	1004229c <__aeabi_dmul>
1004869e:	2336      	movs	r3, #54	; 0x36
100486a0:	000d      	movs	r5, r1
100486a2:	425b      	negs	r3, r3
100486a4:	4ac3      	ldr	r2, [pc, #780]	; (100489b4 <__ieee754_log+0x354>)
100486a6:	4295      	cmp	r5, r2
100486a8:	dd06      	ble.n	100486b8 <__ieee754_log+0x58>
100486aa:	0002      	movs	r2, r0
100486ac:	000b      	movs	r3, r1
100486ae:	f7f8 feb1 	bl	10041414 <__aeabi_dadd>
100486b2:	e7e5      	b.n	10048680 <__ieee754_log+0x20>
100486b4:	2300      	movs	r3, #0
100486b6:	e7f5      	b.n	100486a4 <__ieee754_log+0x44>
100486b8:	4abf      	ldr	r2, [pc, #764]	; (100489b8 <__ieee754_log+0x358>)
100486ba:	152c      	asrs	r4, r5, #20
100486bc:	18a4      	adds	r4, r4, r2
100486be:	18e3      	adds	r3, r4, r3
100486c0:	032d      	lsls	r5, r5, #12
100486c2:	4cbe      	ldr	r4, [pc, #760]	; (100489bc <__ieee754_log+0x35c>)
100486c4:	0b2a      	lsrs	r2, r5, #12
100486c6:	9208      	str	r2, [sp, #32]
100486c8:	1914      	adds	r4, r2, r4
100486ca:	2280      	movs	r2, #128	; 0x80
100486cc:	0352      	lsls	r2, r2, #13
100486ce:	4014      	ands	r4, r2
100486d0:	4abb      	ldr	r2, [pc, #748]	; (100489c0 <__ieee754_log+0x360>)
100486d2:	9d08      	ldr	r5, [sp, #32]
100486d4:	4062      	eors	r2, r4
100486d6:	1524      	asrs	r4, r4, #20
100486d8:	4315      	orrs	r5, r2
100486da:	18e3      	adds	r3, r4, r3
100486dc:	0029      	movs	r1, r5
100486de:	9300      	str	r3, [sp, #0]
100486e0:	2200      	movs	r2, #0
100486e2:	4bb7      	ldr	r3, [pc, #732]	; (100489c0 <__ieee754_log+0x360>)
100486e4:	f7fa f85a 	bl	1004279c <__aeabi_dsub>
100486e8:	9b08      	ldr	r3, [sp, #32]
100486ea:	0004      	movs	r4, r0
100486ec:	3302      	adds	r3, #2
100486ee:	031b      	lsls	r3, r3, #12
100486f0:	000d      	movs	r5, r1
100486f2:	0b1b      	lsrs	r3, r3, #12
100486f4:	2200      	movs	r2, #0
100486f6:	2b02      	cmp	r3, #2
100486f8:	dc64      	bgt.n	100487c4 <__ieee754_log+0x164>
100486fa:	2300      	movs	r3, #0
100486fc:	f7f7 febe 	bl	1004047c <__aeabi_dcmpeq>
10048700:	2800      	cmp	r0, #0
10048702:	d019      	beq.n	10048738 <__ieee754_log+0xd8>
10048704:	9b00      	ldr	r3, [sp, #0]
10048706:	2b00      	cmp	r3, #0
10048708:	d100      	bne.n	1004870c <__ieee754_log+0xac>
1004870a:	e14a      	b.n	100489a2 <__ieee754_log+0x342>
1004870c:	0018      	movs	r0, r3
1004870e:	f7fa fbaf 	bl	10042e70 <__aeabi_i2d>
10048712:	4aac      	ldr	r2, [pc, #688]	; (100489c4 <__ieee754_log+0x364>)
10048714:	4bac      	ldr	r3, [pc, #688]	; (100489c8 <__ieee754_log+0x368>)
10048716:	0004      	movs	r4, r0
10048718:	000d      	movs	r5, r1
1004871a:	f7f9 fdbf 	bl	1004229c <__aeabi_dmul>
1004871e:	4aab      	ldr	r2, [pc, #684]	; (100489cc <__ieee754_log+0x36c>)
10048720:	0006      	movs	r6, r0
10048722:	000f      	movs	r7, r1
10048724:	4baa      	ldr	r3, [pc, #680]	; (100489d0 <__ieee754_log+0x370>)
10048726:	0020      	movs	r0, r4
10048728:	0029      	movs	r1, r5
1004872a:	f7f9 fdb7 	bl	1004229c <__aeabi_dmul>
1004872e:	0002      	movs	r2, r0
10048730:	000b      	movs	r3, r1
10048732:	0030      	movs	r0, r6
10048734:	0039      	movs	r1, r7
10048736:	e7ba      	b.n	100486ae <__ieee754_log+0x4e>
10048738:	4aa6      	ldr	r2, [pc, #664]	; (100489d4 <__ieee754_log+0x374>)
1004873a:	4ba7      	ldr	r3, [pc, #668]	; (100489d8 <__ieee754_log+0x378>)
1004873c:	0020      	movs	r0, r4
1004873e:	0029      	movs	r1, r5
10048740:	f7f9 fdac 	bl	1004229c <__aeabi_dmul>
10048744:	0002      	movs	r2, r0
10048746:	000b      	movs	r3, r1
10048748:	2000      	movs	r0, #0
1004874a:	49a4      	ldr	r1, [pc, #656]	; (100489dc <__ieee754_log+0x37c>)
1004874c:	f7fa f826 	bl	1004279c <__aeabi_dsub>
10048750:	0022      	movs	r2, r4
10048752:	0006      	movs	r6, r0
10048754:	000f      	movs	r7, r1
10048756:	002b      	movs	r3, r5
10048758:	0020      	movs	r0, r4
1004875a:	0029      	movs	r1, r5
1004875c:	f7f9 fd9e 	bl	1004229c <__aeabi_dmul>
10048760:	000b      	movs	r3, r1
10048762:	0002      	movs	r2, r0
10048764:	0039      	movs	r1, r7
10048766:	0030      	movs	r0, r6
10048768:	f7f9 fd98 	bl	1004229c <__aeabi_dmul>
1004876c:	9b00      	ldr	r3, [sp, #0]
1004876e:	0006      	movs	r6, r0
10048770:	000f      	movs	r7, r1
10048772:	2b00      	cmp	r3, #0
10048774:	d104      	bne.n	10048780 <__ieee754_log+0x120>
10048776:	0002      	movs	r2, r0
10048778:	000b      	movs	r3, r1
1004877a:	0020      	movs	r0, r4
1004877c:	0029      	movs	r1, r5
1004877e:	e01e      	b.n	100487be <__ieee754_log+0x15e>
10048780:	9800      	ldr	r0, [sp, #0]
10048782:	f7fa fb75 	bl	10042e70 <__aeabi_i2d>
10048786:	4a8f      	ldr	r2, [pc, #572]	; (100489c4 <__ieee754_log+0x364>)
10048788:	4b8f      	ldr	r3, [pc, #572]	; (100489c8 <__ieee754_log+0x368>)
1004878a:	9000      	str	r0, [sp, #0]
1004878c:	9101      	str	r1, [sp, #4]
1004878e:	f7f9 fd85 	bl	1004229c <__aeabi_dmul>
10048792:	4a8e      	ldr	r2, [pc, #568]	; (100489cc <__ieee754_log+0x36c>)
10048794:	9002      	str	r0, [sp, #8]
10048796:	9103      	str	r1, [sp, #12]
10048798:	9800      	ldr	r0, [sp, #0]
1004879a:	9901      	ldr	r1, [sp, #4]
1004879c:	4b8c      	ldr	r3, [pc, #560]	; (100489d0 <__ieee754_log+0x370>)
1004879e:	f7f9 fd7d 	bl	1004229c <__aeabi_dmul>
100487a2:	0002      	movs	r2, r0
100487a4:	000b      	movs	r3, r1
100487a6:	0030      	movs	r0, r6
100487a8:	0039      	movs	r1, r7
100487aa:	f7f9 fff7 	bl	1004279c <__aeabi_dsub>
100487ae:	0022      	movs	r2, r4
100487b0:	002b      	movs	r3, r5
100487b2:	f7f9 fff3 	bl	1004279c <__aeabi_dsub>
100487b6:	0002      	movs	r2, r0
100487b8:	000b      	movs	r3, r1
100487ba:	9802      	ldr	r0, [sp, #8]
100487bc:	9903      	ldr	r1, [sp, #12]
100487be:	f7f9 ffed 	bl	1004279c <__aeabi_dsub>
100487c2:	e75d      	b.n	10048680 <__ieee754_log+0x20>
100487c4:	2380      	movs	r3, #128	; 0x80
100487c6:	05db      	lsls	r3, r3, #23
100487c8:	f7f8 fe24 	bl	10041414 <__aeabi_dadd>
100487cc:	0002      	movs	r2, r0
100487ce:	000b      	movs	r3, r1
100487d0:	0020      	movs	r0, r4
100487d2:	0029      	movs	r1, r5
100487d4:	f7f9 f92e 	bl	10041a34 <__aeabi_ddiv>
100487d8:	9002      	str	r0, [sp, #8]
100487da:	9103      	str	r1, [sp, #12]
100487dc:	9800      	ldr	r0, [sp, #0]
100487de:	f7fa fb47 	bl	10042e70 <__aeabi_i2d>
100487e2:	9a02      	ldr	r2, [sp, #8]
100487e4:	9b03      	ldr	r3, [sp, #12]
100487e6:	9004      	str	r0, [sp, #16]
100487e8:	9105      	str	r1, [sp, #20]
100487ea:	0010      	movs	r0, r2
100487ec:	0019      	movs	r1, r3
100487ee:	f7f9 fd55 	bl	1004229c <__aeabi_dmul>
100487f2:	4a7b      	ldr	r2, [pc, #492]	; (100489e0 <__ieee754_log+0x380>)
100487f4:	9b08      	ldr	r3, [sp, #32]
100487f6:	4694      	mov	ip, r2
100487f8:	4463      	add	r3, ip
100487fa:	9309      	str	r3, [sp, #36]	; 0x24
100487fc:	0002      	movs	r2, r0
100487fe:	000b      	movs	r3, r1
10048800:	9006      	str	r0, [sp, #24]
10048802:	9107      	str	r1, [sp, #28]
10048804:	f7f9 fd4a 	bl	1004229c <__aeabi_dmul>
10048808:	0006      	movs	r6, r0
1004880a:	000f      	movs	r7, r1
1004880c:	4a75      	ldr	r2, [pc, #468]	; (100489e4 <__ieee754_log+0x384>)
1004880e:	4b76      	ldr	r3, [pc, #472]	; (100489e8 <__ieee754_log+0x388>)
10048810:	f7f9 fd44 	bl	1004229c <__aeabi_dmul>
10048814:	4a75      	ldr	r2, [pc, #468]	; (100489ec <__ieee754_log+0x38c>)
10048816:	4b76      	ldr	r3, [pc, #472]	; (100489f0 <__ieee754_log+0x390>)
10048818:	f7f8 fdfc 	bl	10041414 <__aeabi_dadd>
1004881c:	0032      	movs	r2, r6
1004881e:	003b      	movs	r3, r7
10048820:	f7f9 fd3c 	bl	1004229c <__aeabi_dmul>
10048824:	4a73      	ldr	r2, [pc, #460]	; (100489f4 <__ieee754_log+0x394>)
10048826:	4b74      	ldr	r3, [pc, #464]	; (100489f8 <__ieee754_log+0x398>)
10048828:	f7f8 fdf4 	bl	10041414 <__aeabi_dadd>
1004882c:	0032      	movs	r2, r6
1004882e:	003b      	movs	r3, r7
10048830:	f7f9 fd34 	bl	1004229c <__aeabi_dmul>
10048834:	4a71      	ldr	r2, [pc, #452]	; (100489fc <__ieee754_log+0x39c>)
10048836:	4b72      	ldr	r3, [pc, #456]	; (10048a00 <__ieee754_log+0x3a0>)
10048838:	f7f8 fdec 	bl	10041414 <__aeabi_dadd>
1004883c:	9a06      	ldr	r2, [sp, #24]
1004883e:	9b07      	ldr	r3, [sp, #28]
10048840:	f7f9 fd2c 	bl	1004229c <__aeabi_dmul>
10048844:	4a6f      	ldr	r2, [pc, #444]	; (10048a04 <__ieee754_log+0x3a4>)
10048846:	9006      	str	r0, [sp, #24]
10048848:	9107      	str	r1, [sp, #28]
1004884a:	4b6f      	ldr	r3, [pc, #444]	; (10048a08 <__ieee754_log+0x3a8>)
1004884c:	0030      	movs	r0, r6
1004884e:	0039      	movs	r1, r7
10048850:	f7f9 fd24 	bl	1004229c <__aeabi_dmul>
10048854:	4a6d      	ldr	r2, [pc, #436]	; (10048a0c <__ieee754_log+0x3ac>)
10048856:	4b6e      	ldr	r3, [pc, #440]	; (10048a10 <__ieee754_log+0x3b0>)
10048858:	f7f8 fddc 	bl	10041414 <__aeabi_dadd>
1004885c:	0032      	movs	r2, r6
1004885e:	003b      	movs	r3, r7
10048860:	f7f9 fd1c 	bl	1004229c <__aeabi_dmul>
10048864:	4a6b      	ldr	r2, [pc, #428]	; (10048a14 <__ieee754_log+0x3b4>)
10048866:	4b6c      	ldr	r3, [pc, #432]	; (10048a18 <__ieee754_log+0x3b8>)
10048868:	f7f8 fdd4 	bl	10041414 <__aeabi_dadd>
1004886c:	0032      	movs	r2, r6
1004886e:	003b      	movs	r3, r7
10048870:	f7f9 fd14 	bl	1004229c <__aeabi_dmul>
10048874:	0002      	movs	r2, r0
10048876:	000b      	movs	r3, r1
10048878:	9806      	ldr	r0, [sp, #24]
1004887a:	9907      	ldr	r1, [sp, #28]
1004887c:	f7f8 fdca 	bl	10041414 <__aeabi_dadd>
10048880:	9a08      	ldr	r2, [sp, #32]
10048882:	4b66      	ldr	r3, [pc, #408]	; (10048a1c <__ieee754_log+0x3bc>)
10048884:	9006      	str	r0, [sp, #24]
10048886:	9107      	str	r1, [sp, #28]
10048888:	1a9b      	subs	r3, r3, r2
1004888a:	9a09      	ldr	r2, [sp, #36]	; 0x24
1004888c:	4313      	orrs	r3, r2
1004888e:	2b00      	cmp	r3, #0
10048890:	dd50      	ble.n	10048934 <__ieee754_log+0x2d4>
10048892:	2200      	movs	r2, #0
10048894:	4b51      	ldr	r3, [pc, #324]	; (100489dc <__ieee754_log+0x37c>)
10048896:	0020      	movs	r0, r4
10048898:	0029      	movs	r1, r5
1004889a:	f7f9 fcff 	bl	1004229c <__aeabi_dmul>
1004889e:	002b      	movs	r3, r5
100488a0:	0022      	movs	r2, r4
100488a2:	f7f9 fcfb 	bl	1004229c <__aeabi_dmul>
100488a6:	9b00      	ldr	r3, [sp, #0]
100488a8:	0006      	movs	r6, r0
100488aa:	000f      	movs	r7, r1
100488ac:	2b00      	cmp	r3, #0
100488ae:	d112      	bne.n	100488d6 <__ieee754_log+0x276>
100488b0:	0002      	movs	r2, r0
100488b2:	000b      	movs	r3, r1
100488b4:	9806      	ldr	r0, [sp, #24]
100488b6:	9907      	ldr	r1, [sp, #28]
100488b8:	f7f8 fdac 	bl	10041414 <__aeabi_dadd>
100488bc:	9a02      	ldr	r2, [sp, #8]
100488be:	9b03      	ldr	r3, [sp, #12]
100488c0:	f7f9 fcec 	bl	1004229c <__aeabi_dmul>
100488c4:	0002      	movs	r2, r0
100488c6:	000b      	movs	r3, r1
100488c8:	0030      	movs	r0, r6
100488ca:	0039      	movs	r1, r7
100488cc:	f7f9 ff66 	bl	1004279c <__aeabi_dsub>
100488d0:	0002      	movs	r2, r0
100488d2:	000b      	movs	r3, r1
100488d4:	e751      	b.n	1004877a <__ieee754_log+0x11a>
100488d6:	4a3b      	ldr	r2, [pc, #236]	; (100489c4 <__ieee754_log+0x364>)
100488d8:	4b3b      	ldr	r3, [pc, #236]	; (100489c8 <__ieee754_log+0x368>)
100488da:	9804      	ldr	r0, [sp, #16]
100488dc:	9905      	ldr	r1, [sp, #20]
100488de:	f7f9 fcdd 	bl	1004229c <__aeabi_dmul>
100488e2:	0032      	movs	r2, r6
100488e4:	9000      	str	r0, [sp, #0]
100488e6:	9101      	str	r1, [sp, #4]
100488e8:	9806      	ldr	r0, [sp, #24]
100488ea:	9907      	ldr	r1, [sp, #28]
100488ec:	003b      	movs	r3, r7
100488ee:	f7f8 fd91 	bl	10041414 <__aeabi_dadd>
100488f2:	9a02      	ldr	r2, [sp, #8]
100488f4:	9b03      	ldr	r3, [sp, #12]
100488f6:	f7f9 fcd1 	bl	1004229c <__aeabi_dmul>
100488fa:	4a34      	ldr	r2, [pc, #208]	; (100489cc <__ieee754_log+0x36c>)
100488fc:	9002      	str	r0, [sp, #8]
100488fe:	9103      	str	r1, [sp, #12]
10048900:	9804      	ldr	r0, [sp, #16]
10048902:	9905      	ldr	r1, [sp, #20]
10048904:	4b32      	ldr	r3, [pc, #200]	; (100489d0 <__ieee754_log+0x370>)
10048906:	f7f9 fcc9 	bl	1004229c <__aeabi_dmul>
1004890a:	0002      	movs	r2, r0
1004890c:	000b      	movs	r3, r1
1004890e:	9802      	ldr	r0, [sp, #8]
10048910:	9903      	ldr	r1, [sp, #12]
10048912:	f7f8 fd7f 	bl	10041414 <__aeabi_dadd>
10048916:	0002      	movs	r2, r0
10048918:	000b      	movs	r3, r1
1004891a:	0030      	movs	r0, r6
1004891c:	0039      	movs	r1, r7
1004891e:	f7f9 ff3d 	bl	1004279c <__aeabi_dsub>
10048922:	0022      	movs	r2, r4
10048924:	002b      	movs	r3, r5
10048926:	f7f9 ff39 	bl	1004279c <__aeabi_dsub>
1004892a:	0002      	movs	r2, r0
1004892c:	000b      	movs	r3, r1
1004892e:	9800      	ldr	r0, [sp, #0]
10048930:	9901      	ldr	r1, [sp, #4]
10048932:	e744      	b.n	100487be <__ieee754_log+0x15e>
10048934:	9b00      	ldr	r3, [sp, #0]
10048936:	2b00      	cmp	r3, #0
10048938:	d10a      	bne.n	10048950 <__ieee754_log+0x2f0>
1004893a:	9a06      	ldr	r2, [sp, #24]
1004893c:	9b07      	ldr	r3, [sp, #28]
1004893e:	0020      	movs	r0, r4
10048940:	0029      	movs	r1, r5
10048942:	f7f9 ff2b 	bl	1004279c <__aeabi_dsub>
10048946:	9a02      	ldr	r2, [sp, #8]
10048948:	9b03      	ldr	r3, [sp, #12]
1004894a:	f7f9 fca7 	bl	1004229c <__aeabi_dmul>
1004894e:	e7bf      	b.n	100488d0 <__ieee754_log+0x270>
10048950:	4a1c      	ldr	r2, [pc, #112]	; (100489c4 <__ieee754_log+0x364>)
10048952:	4b1d      	ldr	r3, [pc, #116]	; (100489c8 <__ieee754_log+0x368>)
10048954:	9804      	ldr	r0, [sp, #16]
10048956:	9905      	ldr	r1, [sp, #20]
10048958:	f7f9 fca0 	bl	1004229c <__aeabi_dmul>
1004895c:	9a06      	ldr	r2, [sp, #24]
1004895e:	9b07      	ldr	r3, [sp, #28]
10048960:	0006      	movs	r6, r0
10048962:	000f      	movs	r7, r1
10048964:	0020      	movs	r0, r4
10048966:	0029      	movs	r1, r5
10048968:	f7f9 ff18 	bl	1004279c <__aeabi_dsub>
1004896c:	9a02      	ldr	r2, [sp, #8]
1004896e:	9b03      	ldr	r3, [sp, #12]
10048970:	f7f9 fc94 	bl	1004229c <__aeabi_dmul>
10048974:	4a15      	ldr	r2, [pc, #84]	; (100489cc <__ieee754_log+0x36c>)
10048976:	9000      	str	r0, [sp, #0]
10048978:	9101      	str	r1, [sp, #4]
1004897a:	9804      	ldr	r0, [sp, #16]
1004897c:	9905      	ldr	r1, [sp, #20]
1004897e:	4b14      	ldr	r3, [pc, #80]	; (100489d0 <__ieee754_log+0x370>)
10048980:	f7f9 fc8c 	bl	1004229c <__aeabi_dmul>
10048984:	0002      	movs	r2, r0
10048986:	000b      	movs	r3, r1
10048988:	9800      	ldr	r0, [sp, #0]
1004898a:	9901      	ldr	r1, [sp, #4]
1004898c:	f7f9 ff06 	bl	1004279c <__aeabi_dsub>
10048990:	0022      	movs	r2, r4
10048992:	002b      	movs	r3, r5
10048994:	f7f9 ff02 	bl	1004279c <__aeabi_dsub>
10048998:	0002      	movs	r2, r0
1004899a:	000b      	movs	r3, r1
1004899c:	0030      	movs	r0, r6
1004899e:	0039      	movs	r1, r7
100489a0:	e70d      	b.n	100487be <__ieee754_log+0x15e>
100489a2:	2000      	movs	r0, #0
100489a4:	2100      	movs	r1, #0
100489a6:	e66b      	b.n	10048680 <__ieee754_log+0x20>
100489a8:	000fffff 	.word	0x000fffff
100489ac:	c3500000 	.word	0xc3500000
100489b0:	43500000 	.word	0x43500000
100489b4:	7fefffff 	.word	0x7fefffff
100489b8:	fffffc01 	.word	0xfffffc01
100489bc:	00095f64 	.word	0x00095f64
100489c0:	3ff00000 	.word	0x3ff00000
100489c4:	fee00000 	.word	0xfee00000
100489c8:	3fe62e42 	.word	0x3fe62e42
100489cc:	35793c76 	.word	0x35793c76
100489d0:	3dea39ef 	.word	0x3dea39ef
100489d4:	55555555 	.word	0x55555555
100489d8:	3fd55555 	.word	0x3fd55555
100489dc:	3fe00000 	.word	0x3fe00000
100489e0:	fff9eb86 	.word	0xfff9eb86
100489e4:	df3e5244 	.word	0xdf3e5244
100489e8:	3fc2f112 	.word	0x3fc2f112
100489ec:	96cb03de 	.word	0x96cb03de
100489f0:	3fc74664 	.word	0x3fc74664
100489f4:	94229359 	.word	0x94229359
100489f8:	3fd24924 	.word	0x3fd24924
100489fc:	55555593 	.word	0x55555593
10048a00:	3fe55555 	.word	0x3fe55555
10048a04:	d078c69f 	.word	0xd078c69f
10048a08:	3fc39a09 	.word	0x3fc39a09
10048a0c:	1d8e78af 	.word	0x1d8e78af
10048a10:	3fcc71c5 	.word	0x3fcc71c5
10048a14:	9997fa04 	.word	0x9997fa04
10048a18:	3fd99999 	.word	0x3fd99999
10048a1c:	0006b851 	.word	0x0006b851

10048a20 <__ieee754_pow>:
10048a20:	b5f0      	push	{r4, r5, r6, r7, lr}
10048a22:	b097      	sub	sp, #92	; 0x5c
10048a24:	9200      	str	r2, [sp, #0]
10048a26:	9301      	str	r3, [sp, #4]
10048a28:	9b01      	ldr	r3, [sp, #4]
10048a2a:	000e      	movs	r6, r1
10048a2c:	9106      	str	r1, [sp, #24]
10048a2e:	9900      	ldr	r1, [sp, #0]
10048a30:	005d      	lsls	r5, r3, #1
10048a32:	9302      	str	r3, [sp, #8]
10048a34:	000b      	movs	r3, r1
10048a36:	086d      	lsrs	r5, r5, #1
10048a38:	0007      	movs	r7, r0
10048a3a:	432b      	orrs	r3, r5
10048a3c:	d101      	bne.n	10048a42 <__ieee754_pow+0x22>
10048a3e:	f000 fc94 	bl	1004936a <__ieee754_pow+0x94a>
10048a42:	4b74      	ldr	r3, [pc, #464]	; (10048c14 <__ieee754_pow+0x1f4>)
10048a44:	0074      	lsls	r4, r6, #1
10048a46:	0864      	lsrs	r4, r4, #1
10048a48:	469c      	mov	ip, r3
10048a4a:	429c      	cmp	r4, r3
10048a4c:	dc0b      	bgt.n	10048a66 <__ieee754_pow+0x46>
10048a4e:	d104      	bne.n	10048a5a <__ieee754_pow+0x3a>
10048a50:	2800      	cmp	r0, #0
10048a52:	d108      	bne.n	10048a66 <__ieee754_pow+0x46>
10048a54:	42a5      	cmp	r5, r4
10048a56:	dc0c      	bgt.n	10048a72 <__ieee754_pow+0x52>
10048a58:	e001      	b.n	10048a5e <__ieee754_pow+0x3e>
10048a5a:	429d      	cmp	r5, r3
10048a5c:	dc03      	bgt.n	10048a66 <__ieee754_pow+0x46>
10048a5e:	4565      	cmp	r5, ip
10048a60:	d10c      	bne.n	10048a7c <__ieee754_pow+0x5c>
10048a62:	2900      	cmp	r1, #0
10048a64:	d00a      	beq.n	10048a7c <__ieee754_pow+0x5c>
10048a66:	4b6c      	ldr	r3, [pc, #432]	; (10048c18 <__ieee754_pow+0x1f8>)
10048a68:	18e4      	adds	r4, r4, r3
10048a6a:	4327      	orrs	r7, r4
10048a6c:	d101      	bne.n	10048a72 <__ieee754_pow+0x52>
10048a6e:	f000 fc7c 	bl	1004936a <__ieee754_pow+0x94a>
10048a72:	486a      	ldr	r0, [pc, #424]	; (10048c1c <__ieee754_pow+0x1fc>)
10048a74:	f000 fd70 	bl	10049558 <nan>
10048a78:	b017      	add	sp, #92	; 0x5c
10048a7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048a7c:	2300      	movs	r3, #0
10048a7e:	9304      	str	r3, [sp, #16]
10048a80:	2e00      	cmp	r6, #0
10048a82:	da17      	bge.n	10048ab4 <__ieee754_pow+0x94>
10048a84:	4a66      	ldr	r2, [pc, #408]	; (10048c20 <__ieee754_pow+0x200>)
10048a86:	4295      	cmp	r5, r2
10048a88:	dc47      	bgt.n	10048b1a <__ieee754_pow+0xfa>
10048a8a:	4a66      	ldr	r2, [pc, #408]	; (10048c24 <__ieee754_pow+0x204>)
10048a8c:	4295      	cmp	r5, r2
10048a8e:	dd11      	ble.n	10048ab4 <__ieee754_pow+0x94>
10048a90:	4b65      	ldr	r3, [pc, #404]	; (10048c28 <__ieee754_pow+0x208>)
10048a92:	152a      	asrs	r2, r5, #20
10048a94:	18d2      	adds	r2, r2, r3
10048a96:	2a14      	cmp	r2, #20
10048a98:	dd21      	ble.n	10048ade <__ieee754_pow+0xbe>
10048a9a:	2034      	movs	r0, #52	; 0x34
10048a9c:	1a82      	subs	r2, r0, r2
10048a9e:	9800      	ldr	r0, [sp, #0]
10048aa0:	40d0      	lsrs	r0, r2
10048aa2:	0003      	movs	r3, r0
10048aa4:	4093      	lsls	r3, r2
10048aa6:	4299      	cmp	r1, r3
10048aa8:	d104      	bne.n	10048ab4 <__ieee754_pow+0x94>
10048aaa:	2201      	movs	r2, #1
10048aac:	4010      	ands	r0, r2
10048aae:	1892      	adds	r2, r2, r2
10048ab0:	1a13      	subs	r3, r2, r0
10048ab2:	9304      	str	r3, [sp, #16]
10048ab4:	2900      	cmp	r1, #0
10048ab6:	d155      	bne.n	10048b64 <__ieee754_pow+0x144>
10048ab8:	4565      	cmp	r5, ip
10048aba:	d11f      	bne.n	10048afc <__ieee754_pow+0xdc>
10048abc:	4b56      	ldr	r3, [pc, #344]	; (10048c18 <__ieee754_pow+0x1f8>)
10048abe:	18e3      	adds	r3, r4, r3
10048ac0:	431f      	orrs	r7, r3
10048ac2:	d101      	bne.n	10048ac8 <__ieee754_pow+0xa8>
10048ac4:	f000 fc51 	bl	1004936a <__ieee754_pow+0x94a>
10048ac8:	4b56      	ldr	r3, [pc, #344]	; (10048c24 <__ieee754_pow+0x204>)
10048aca:	429c      	cmp	r4, r3
10048acc:	dd27      	ble.n	10048b1e <__ieee754_pow+0xfe>
10048ace:	9800      	ldr	r0, [sp, #0]
10048ad0:	9901      	ldr	r1, [sp, #4]
10048ad2:	9b02      	ldr	r3, [sp, #8]
10048ad4:	2b00      	cmp	r3, #0
10048ad6:	dacf      	bge.n	10048a78 <__ieee754_pow+0x58>
10048ad8:	2000      	movs	r0, #0
10048ada:	2100      	movs	r1, #0
10048adc:	e7cc      	b.n	10048a78 <__ieee754_pow+0x58>
10048ade:	2900      	cmp	r1, #0
10048ae0:	d140      	bne.n	10048b64 <__ieee754_pow+0x144>
10048ae2:	2314      	movs	r3, #20
10048ae4:	1a9a      	subs	r2, r3, r2
10048ae6:	002b      	movs	r3, r5
10048ae8:	4113      	asrs	r3, r2
10048aea:	0019      	movs	r1, r3
10048aec:	4091      	lsls	r1, r2
10048aee:	428d      	cmp	r5, r1
10048af0:	d104      	bne.n	10048afc <__ieee754_pow+0xdc>
10048af2:	2201      	movs	r2, #1
10048af4:	4013      	ands	r3, r2
10048af6:	1892      	adds	r2, r2, r2
10048af8:	1ad3      	subs	r3, r2, r3
10048afa:	9304      	str	r3, [sp, #16]
10048afc:	4b4b      	ldr	r3, [pc, #300]	; (10048c2c <__ieee754_pow+0x20c>)
10048afe:	429d      	cmp	r5, r3
10048b00:	d119      	bne.n	10048b36 <__ieee754_pow+0x116>
10048b02:	9b02      	ldr	r3, [sp, #8]
10048b04:	0038      	movs	r0, r7
10048b06:	0031      	movs	r1, r6
10048b08:	2b00      	cmp	r3, #0
10048b0a:	dab5      	bge.n	10048a78 <__ieee754_pow+0x58>
10048b0c:	003a      	movs	r2, r7
10048b0e:	0033      	movs	r3, r6
10048b10:	2000      	movs	r0, #0
10048b12:	4946      	ldr	r1, [pc, #280]	; (10048c2c <__ieee754_pow+0x20c>)
10048b14:	f7f8 ff8e 	bl	10041a34 <__aeabi_ddiv>
10048b18:	e7ae      	b.n	10048a78 <__ieee754_pow+0x58>
10048b1a:	2302      	movs	r3, #2
10048b1c:	e7c9      	b.n	10048ab2 <__ieee754_pow+0x92>
10048b1e:	9b02      	ldr	r3, [sp, #8]
10048b20:	2b00      	cmp	r3, #0
10048b22:	dad9      	bge.n	10048ad8 <__ieee754_pow+0xb8>
10048b24:	2280      	movs	r2, #128	; 0x80
10048b26:	0612      	lsls	r2, r2, #24
10048b28:	4694      	mov	ip, r2
10048b2a:	9b00      	ldr	r3, [sp, #0]
10048b2c:	0018      	movs	r0, r3
10048b2e:	9b01      	ldr	r3, [sp, #4]
10048b30:	4463      	add	r3, ip
10048b32:	0019      	movs	r1, r3
10048b34:	e7a0      	b.n	10048a78 <__ieee754_pow+0x58>
10048b36:	2380      	movs	r3, #128	; 0x80
10048b38:	9a02      	ldr	r2, [sp, #8]
10048b3a:	05db      	lsls	r3, r3, #23
10048b3c:	429a      	cmp	r2, r3
10048b3e:	d106      	bne.n	10048b4e <__ieee754_pow+0x12e>
10048b40:	003a      	movs	r2, r7
10048b42:	0033      	movs	r3, r6
10048b44:	0038      	movs	r0, r7
10048b46:	0031      	movs	r1, r6
10048b48:	f7f9 fba8 	bl	1004229c <__aeabi_dmul>
10048b4c:	e794      	b.n	10048a78 <__ieee754_pow+0x58>
10048b4e:	4b38      	ldr	r3, [pc, #224]	; (10048c30 <__ieee754_pow+0x210>)
10048b50:	9a02      	ldr	r2, [sp, #8]
10048b52:	429a      	cmp	r2, r3
10048b54:	d106      	bne.n	10048b64 <__ieee754_pow+0x144>
10048b56:	2e00      	cmp	r6, #0
10048b58:	db04      	blt.n	10048b64 <__ieee754_pow+0x144>
10048b5a:	0038      	movs	r0, r7
10048b5c:	0031      	movs	r1, r6
10048b5e:	f000 fc3d 	bl	100493dc <__ieee754_sqrt>
10048b62:	e789      	b.n	10048a78 <__ieee754_pow+0x58>
10048b64:	0038      	movs	r0, r7
10048b66:	0031      	movs	r1, r6
10048b68:	f000 fce8 	bl	1004953c <fabs>
10048b6c:	2f00      	cmp	r7, #0
10048b6e:	d127      	bne.n	10048bc0 <__ieee754_pow+0x1a0>
10048b70:	2c00      	cmp	r4, #0
10048b72:	d004      	beq.n	10048b7e <__ieee754_pow+0x15e>
10048b74:	4a2d      	ldr	r2, [pc, #180]	; (10048c2c <__ieee754_pow+0x20c>)
10048b76:	00b3      	lsls	r3, r6, #2
10048b78:	089b      	lsrs	r3, r3, #2
10048b7a:	4293      	cmp	r3, r2
10048b7c:	d120      	bne.n	10048bc0 <__ieee754_pow+0x1a0>
10048b7e:	9b02      	ldr	r3, [sp, #8]
10048b80:	2b00      	cmp	r3, #0
10048b82:	da05      	bge.n	10048b90 <__ieee754_pow+0x170>
10048b84:	0002      	movs	r2, r0
10048b86:	000b      	movs	r3, r1
10048b88:	2000      	movs	r0, #0
10048b8a:	4928      	ldr	r1, [pc, #160]	; (10048c2c <__ieee754_pow+0x20c>)
10048b8c:	f7f8 ff52 	bl	10041a34 <__aeabi_ddiv>
10048b90:	9b06      	ldr	r3, [sp, #24]
10048b92:	2b00      	cmp	r3, #0
10048b94:	db00      	blt.n	10048b98 <__ieee754_pow+0x178>
10048b96:	e76f      	b.n	10048a78 <__ieee754_pow+0x58>
10048b98:	4b1f      	ldr	r3, [pc, #124]	; (10048c18 <__ieee754_pow+0x1f8>)
10048b9a:	18e4      	adds	r4, r4, r3
10048b9c:	9b04      	ldr	r3, [sp, #16]
10048b9e:	431c      	orrs	r4, r3
10048ba0:	d106      	bne.n	10048bb0 <__ieee754_pow+0x190>
10048ba2:	0002      	movs	r2, r0
10048ba4:	000b      	movs	r3, r1
10048ba6:	f7f9 fdf9 	bl	1004279c <__aeabi_dsub>
10048baa:	0002      	movs	r2, r0
10048bac:	000b      	movs	r3, r1
10048bae:	e7b1      	b.n	10048b14 <__ieee754_pow+0xf4>
10048bb0:	9b04      	ldr	r3, [sp, #16]
10048bb2:	2b01      	cmp	r3, #1
10048bb4:	d000      	beq.n	10048bb8 <__ieee754_pow+0x198>
10048bb6:	e75f      	b.n	10048a78 <__ieee754_pow+0x58>
10048bb8:	2480      	movs	r4, #128	; 0x80
10048bba:	0624      	lsls	r4, r4, #24
10048bbc:	190b      	adds	r3, r1, r4
10048bbe:	e7b8      	b.n	10048b32 <__ieee754_pow+0x112>
10048bc0:	0ff3      	lsrs	r3, r6, #31
10048bc2:	3b01      	subs	r3, #1
10048bc4:	9310      	str	r3, [sp, #64]	; 0x40
10048bc6:	9a10      	ldr	r2, [sp, #64]	; 0x40
10048bc8:	9b04      	ldr	r3, [sp, #16]
10048bca:	4313      	orrs	r3, r2
10048bcc:	d104      	bne.n	10048bd8 <__ieee754_pow+0x1b8>
10048bce:	003a      	movs	r2, r7
10048bd0:	0033      	movs	r3, r6
10048bd2:	0038      	movs	r0, r7
10048bd4:	0031      	movs	r1, r6
10048bd6:	e7e6      	b.n	10048ba6 <__ieee754_pow+0x186>
10048bd8:	4b16      	ldr	r3, [pc, #88]	; (10048c34 <__ieee754_pow+0x214>)
10048bda:	429d      	cmp	r5, r3
10048bdc:	dc00      	bgt.n	10048be0 <__ieee754_pow+0x1c0>
10048bde:	e0f5      	b.n	10048dcc <__ieee754_pow+0x3ac>
10048be0:	4b15      	ldr	r3, [pc, #84]	; (10048c38 <__ieee754_pow+0x218>)
10048be2:	429d      	cmp	r5, r3
10048be4:	dd0b      	ble.n	10048bfe <__ieee754_pow+0x1de>
10048be6:	4b0f      	ldr	r3, [pc, #60]	; (10048c24 <__ieee754_pow+0x204>)
10048be8:	429c      	cmp	r4, r3
10048bea:	dc0e      	bgt.n	10048c0a <__ieee754_pow+0x1ea>
10048bec:	9b02      	ldr	r3, [sp, #8]
10048bee:	2b00      	cmp	r3, #0
10048bf0:	db00      	blt.n	10048bf4 <__ieee754_pow+0x1d4>
10048bf2:	e771      	b.n	10048ad8 <__ieee754_pow+0xb8>
10048bf4:	4a11      	ldr	r2, [pc, #68]	; (10048c3c <__ieee754_pow+0x21c>)
10048bf6:	4b12      	ldr	r3, [pc, #72]	; (10048c40 <__ieee754_pow+0x220>)
10048bf8:	0010      	movs	r0, r2
10048bfa:	0019      	movs	r1, r3
10048bfc:	e7a4      	b.n	10048b48 <__ieee754_pow+0x128>
10048bfe:	4b11      	ldr	r3, [pc, #68]	; (10048c44 <__ieee754_pow+0x224>)
10048c00:	429c      	cmp	r4, r3
10048c02:	ddf3      	ble.n	10048bec <__ieee754_pow+0x1cc>
10048c04:	4b09      	ldr	r3, [pc, #36]	; (10048c2c <__ieee754_pow+0x20c>)
10048c06:	429c      	cmp	r4, r3
10048c08:	dd1e      	ble.n	10048c48 <__ieee754_pow+0x228>
10048c0a:	9b02      	ldr	r3, [sp, #8]
10048c0c:	2b00      	cmp	r3, #0
10048c0e:	dcf1      	bgt.n	10048bf4 <__ieee754_pow+0x1d4>
10048c10:	e762      	b.n	10048ad8 <__ieee754_pow+0xb8>
10048c12:	46c0      	nop			; (mov r8, r8)
10048c14:	7ff00000 	.word	0x7ff00000
10048c18:	c0100000 	.word	0xc0100000
10048c1c:	100589a4 	.word	0x100589a4
10048c20:	433fffff 	.word	0x433fffff
10048c24:	3fefffff 	.word	0x3fefffff
10048c28:	fffffc01 	.word	0xfffffc01
10048c2c:	3ff00000 	.word	0x3ff00000
10048c30:	3fe00000 	.word	0x3fe00000
10048c34:	41e00000 	.word	0x41e00000
10048c38:	43f00000 	.word	0x43f00000
10048c3c:	8800759c 	.word	0x8800759c
10048c40:	7e37e43c 	.word	0x7e37e43c
10048c44:	3feffffe 	.word	0x3feffffe
10048c48:	2200      	movs	r2, #0
10048c4a:	4b52      	ldr	r3, [pc, #328]	; (10048d94 <__ieee754_pow+0x374>)
10048c4c:	f7f9 fda6 	bl	1004279c <__aeabi_dsub>
10048c50:	22c0      	movs	r2, #192	; 0xc0
10048c52:	4b51      	ldr	r3, [pc, #324]	; (10048d98 <__ieee754_pow+0x378>)
10048c54:	05d2      	lsls	r2, r2, #23
10048c56:	0006      	movs	r6, r0
10048c58:	000f      	movs	r7, r1
10048c5a:	f7f9 fb1f 	bl	1004229c <__aeabi_dmul>
10048c5e:	4a4f      	ldr	r2, [pc, #316]	; (10048d9c <__ieee754_pow+0x37c>)
10048c60:	9002      	str	r0, [sp, #8]
10048c62:	9103      	str	r1, [sp, #12]
10048c64:	4b4e      	ldr	r3, [pc, #312]	; (10048da0 <__ieee754_pow+0x380>)
10048c66:	0030      	movs	r0, r6
10048c68:	0039      	movs	r1, r7
10048c6a:	f7f9 fb17 	bl	1004229c <__aeabi_dmul>
10048c6e:	2200      	movs	r2, #0
10048c70:	9006      	str	r0, [sp, #24]
10048c72:	9107      	str	r1, [sp, #28]
10048c74:	4b4b      	ldr	r3, [pc, #300]	; (10048da4 <__ieee754_pow+0x384>)
10048c76:	0030      	movs	r0, r6
10048c78:	0039      	movs	r1, r7
10048c7a:	f7f9 fb0f 	bl	1004229c <__aeabi_dmul>
10048c7e:	0002      	movs	r2, r0
10048c80:	000b      	movs	r3, r1
10048c82:	4849      	ldr	r0, [pc, #292]	; (10048da8 <__ieee754_pow+0x388>)
10048c84:	4949      	ldr	r1, [pc, #292]	; (10048dac <__ieee754_pow+0x38c>)
10048c86:	f7f9 fd89 	bl	1004279c <__aeabi_dsub>
10048c8a:	0032      	movs	r2, r6
10048c8c:	003b      	movs	r3, r7
10048c8e:	f7f9 fb05 	bl	1004229c <__aeabi_dmul>
10048c92:	0002      	movs	r2, r0
10048c94:	000b      	movs	r3, r1
10048c96:	2000      	movs	r0, #0
10048c98:	4945      	ldr	r1, [pc, #276]	; (10048db0 <__ieee754_pow+0x390>)
10048c9a:	f7f9 fd7f 	bl	1004279c <__aeabi_dsub>
10048c9e:	0032      	movs	r2, r6
10048ca0:	0004      	movs	r4, r0
10048ca2:	000d      	movs	r5, r1
10048ca4:	003b      	movs	r3, r7
10048ca6:	0030      	movs	r0, r6
10048ca8:	0039      	movs	r1, r7
10048caa:	f7f9 faf7 	bl	1004229c <__aeabi_dmul>
10048cae:	0002      	movs	r2, r0
10048cb0:	000b      	movs	r3, r1
10048cb2:	0020      	movs	r0, r4
10048cb4:	0029      	movs	r1, r5
10048cb6:	f7f9 faf1 	bl	1004229c <__aeabi_dmul>
10048cba:	4a3e      	ldr	r2, [pc, #248]	; (10048db4 <__ieee754_pow+0x394>)
10048cbc:	4b36      	ldr	r3, [pc, #216]	; (10048d98 <__ieee754_pow+0x378>)
10048cbe:	f7f9 faed 	bl	1004229c <__aeabi_dmul>
10048cc2:	0002      	movs	r2, r0
10048cc4:	000b      	movs	r3, r1
10048cc6:	9806      	ldr	r0, [sp, #24]
10048cc8:	9907      	ldr	r1, [sp, #28]
10048cca:	f7f9 fd67 	bl	1004279c <__aeabi_dsub>
10048cce:	0002      	movs	r2, r0
10048cd0:	000b      	movs	r3, r1
10048cd2:	0004      	movs	r4, r0
10048cd4:	000d      	movs	r5, r1
10048cd6:	9802      	ldr	r0, [sp, #8]
10048cd8:	9903      	ldr	r1, [sp, #12]
10048cda:	f7f8 fb9b 	bl	10041414 <__aeabi_dadd>
10048cde:	9a02      	ldr	r2, [sp, #8]
10048ce0:	9b03      	ldr	r3, [sp, #12]
10048ce2:	2000      	movs	r0, #0
10048ce4:	9006      	str	r0, [sp, #24]
10048ce6:	9107      	str	r1, [sp, #28]
10048ce8:	f7f9 fd58 	bl	1004279c <__aeabi_dsub>
10048cec:	0002      	movs	r2, r0
10048cee:	000b      	movs	r3, r1
10048cf0:	0020      	movs	r0, r4
10048cf2:	0029      	movs	r1, r5
10048cf4:	f7f9 fd52 	bl	1004279c <__aeabi_dsub>
10048cf8:	9b04      	ldr	r3, [sp, #16]
10048cfa:	9a10      	ldr	r2, [sp, #64]	; 0x40
10048cfc:	3b01      	subs	r3, #1
10048cfe:	0006      	movs	r6, r0
10048d00:	000f      	movs	r7, r1
10048d02:	4313      	orrs	r3, r2
10048d04:	d000      	beq.n	10048d08 <__ieee754_pow+0x2e8>
10048d06:	e1da      	b.n	100490be <__ieee754_pow+0x69e>
10048d08:	2300      	movs	r3, #0
10048d0a:	4c2b      	ldr	r4, [pc, #172]	; (10048db8 <__ieee754_pow+0x398>)
10048d0c:	9302      	str	r3, [sp, #8]
10048d0e:	9403      	str	r4, [sp, #12]
10048d10:	9c00      	ldr	r4, [sp, #0]
10048d12:	9d01      	ldr	r5, [sp, #4]
10048d14:	9800      	ldr	r0, [sp, #0]
10048d16:	9901      	ldr	r1, [sp, #4]
10048d18:	2400      	movs	r4, #0
10048d1a:	002b      	movs	r3, r5
10048d1c:	0022      	movs	r2, r4
10048d1e:	f7f9 fd3d 	bl	1004279c <__aeabi_dsub>
10048d22:	9a06      	ldr	r2, [sp, #24]
10048d24:	9b07      	ldr	r3, [sp, #28]
10048d26:	f7f9 fab9 	bl	1004229c <__aeabi_dmul>
10048d2a:	9a00      	ldr	r2, [sp, #0]
10048d2c:	9b01      	ldr	r3, [sp, #4]
10048d2e:	9004      	str	r0, [sp, #16]
10048d30:	9105      	str	r1, [sp, #20]
10048d32:	0030      	movs	r0, r6
10048d34:	0039      	movs	r1, r7
10048d36:	f7f9 fab1 	bl	1004229c <__aeabi_dmul>
10048d3a:	0002      	movs	r2, r0
10048d3c:	000b      	movs	r3, r1
10048d3e:	9804      	ldr	r0, [sp, #16]
10048d40:	9905      	ldr	r1, [sp, #20]
10048d42:	f7f8 fb67 	bl	10041414 <__aeabi_dadd>
10048d46:	0022      	movs	r2, r4
10048d48:	002b      	movs	r3, r5
10048d4a:	9004      	str	r0, [sp, #16]
10048d4c:	9105      	str	r1, [sp, #20]
10048d4e:	9806      	ldr	r0, [sp, #24]
10048d50:	9907      	ldr	r1, [sp, #28]
10048d52:	f7f9 faa3 	bl	1004229c <__aeabi_dmul>
10048d56:	0006      	movs	r6, r0
10048d58:	000f      	movs	r7, r1
10048d5a:	000b      	movs	r3, r1
10048d5c:	0002      	movs	r2, r0
10048d5e:	9804      	ldr	r0, [sp, #16]
10048d60:	9905      	ldr	r1, [sp, #20]
10048d62:	9606      	str	r6, [sp, #24]
10048d64:	9707      	str	r7, [sp, #28]
10048d66:	f7f8 fb55 	bl	10041414 <__aeabi_dadd>
10048d6a:	4b14      	ldr	r3, [pc, #80]	; (10048dbc <__ieee754_pow+0x39c>)
10048d6c:	0005      	movs	r5, r0
10048d6e:	000c      	movs	r4, r1
10048d70:	9108      	str	r1, [sp, #32]
10048d72:	4299      	cmp	r1, r3
10048d74:	dc00      	bgt.n	10048d78 <__ieee754_pow+0x358>
10048d76:	e2d4      	b.n	10049322 <__ieee754_pow+0x902>
10048d78:	4b11      	ldr	r3, [pc, #68]	; (10048dc0 <__ieee754_pow+0x3a0>)
10048d7a:	18cb      	adds	r3, r1, r3
10048d7c:	4303      	orrs	r3, r0
10048d7e:	d100      	bne.n	10048d82 <__ieee754_pow+0x362>
10048d80:	e1d6      	b.n	10049130 <__ieee754_pow+0x710>
10048d82:	9802      	ldr	r0, [sp, #8]
10048d84:	9903      	ldr	r1, [sp, #12]
10048d86:	4a0f      	ldr	r2, [pc, #60]	; (10048dc4 <__ieee754_pow+0x3a4>)
10048d88:	4b0f      	ldr	r3, [pc, #60]	; (10048dc8 <__ieee754_pow+0x3a8>)
10048d8a:	f7f9 fa87 	bl	1004229c <__aeabi_dmul>
10048d8e:	4a0d      	ldr	r2, [pc, #52]	; (10048dc4 <__ieee754_pow+0x3a4>)
10048d90:	4b0d      	ldr	r3, [pc, #52]	; (10048dc8 <__ieee754_pow+0x3a8>)
10048d92:	e6d9      	b.n	10048b48 <__ieee754_pow+0x128>
10048d94:	3ff00000 	.word	0x3ff00000
10048d98:	3ff71547 	.word	0x3ff71547
10048d9c:	f85ddf44 	.word	0xf85ddf44
10048da0:	3e54ae0b 	.word	0x3e54ae0b
10048da4:	3fd00000 	.word	0x3fd00000
10048da8:	55555555 	.word	0x55555555
10048dac:	3fd55555 	.word	0x3fd55555
10048db0:	3fe00000 	.word	0x3fe00000
10048db4:	652b82fe 	.word	0x652b82fe
10048db8:	bff00000 	.word	0xbff00000
10048dbc:	408fffff 	.word	0x408fffff
10048dc0:	bf700000 	.word	0xbf700000
10048dc4:	8800759c 	.word	0x8800759c
10048dc8:	7e37e43c 	.word	0x7e37e43c
10048dcc:	4bbd      	ldr	r3, [pc, #756]	; (100490c4 <__ieee754_pow+0x6a4>)
10048dce:	2200      	movs	r2, #0
10048dd0:	429c      	cmp	r4, r3
10048dd2:	dc06      	bgt.n	10048de2 <__ieee754_pow+0x3c2>
10048dd4:	2200      	movs	r2, #0
10048dd6:	4bbc      	ldr	r3, [pc, #752]	; (100490c8 <__ieee754_pow+0x6a8>)
10048dd8:	f7f9 fa60 	bl	1004229c <__aeabi_dmul>
10048ddc:	2235      	movs	r2, #53	; 0x35
10048dde:	000c      	movs	r4, r1
10048de0:	4252      	negs	r2, r2
10048de2:	4dba      	ldr	r5, [pc, #744]	; (100490cc <__ieee754_pow+0x6ac>)
10048de4:	1523      	asrs	r3, r4, #20
10048de6:	195b      	adds	r3, r3, r5
10048de8:	189b      	adds	r3, r3, r2
10048dea:	930b      	str	r3, [sp, #44]	; 0x2c
10048dec:	0324      	lsls	r4, r4, #12
10048dee:	4db8      	ldr	r5, [pc, #736]	; (100490d0 <__ieee754_pow+0x6b0>)
10048df0:	4bb8      	ldr	r3, [pc, #736]	; (100490d4 <__ieee754_pow+0x6b4>)
10048df2:	0b24      	lsrs	r4, r4, #12
10048df4:	4325      	orrs	r5, r4
10048df6:	2600      	movs	r6, #0
10048df8:	429c      	cmp	r4, r3
10048dfa:	dd09      	ble.n	10048e10 <__ieee754_pow+0x3f0>
10048dfc:	4bb6      	ldr	r3, [pc, #728]	; (100490d8 <__ieee754_pow+0x6b8>)
10048dfe:	3601      	adds	r6, #1
10048e00:	429c      	cmp	r4, r3
10048e02:	dd05      	ble.n	10048e10 <__ieee754_pow+0x3f0>
10048e04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10048e06:	199b      	adds	r3, r3, r6
10048e08:	2600      	movs	r6, #0
10048e0a:	930b      	str	r3, [sp, #44]	; 0x2c
10048e0c:	4bb3      	ldr	r3, [pc, #716]	; (100490dc <__ieee754_pow+0x6bc>)
10048e0e:	18ed      	adds	r5, r5, r3
10048e10:	0029      	movs	r1, r5
10048e12:	00f3      	lsls	r3, r6, #3
10048e14:	9311      	str	r3, [sp, #68]	; 0x44
10048e16:	4bb2      	ldr	r3, [pc, #712]	; (100490e0 <__ieee754_pow+0x6c0>)
10048e18:	00f2      	lsls	r2, r6, #3
10048e1a:	189b      	adds	r3, r3, r2
10048e1c:	685c      	ldr	r4, [r3, #4]
10048e1e:	681b      	ldr	r3, [r3, #0]
10048e20:	930e      	str	r3, [sp, #56]	; 0x38
10048e22:	940f      	str	r4, [sp, #60]	; 0x3c
10048e24:	001a      	movs	r2, r3
10048e26:	0023      	movs	r3, r4
10048e28:	900c      	str	r0, [sp, #48]	; 0x30
10048e2a:	910d      	str	r1, [sp, #52]	; 0x34
10048e2c:	f7f9 fcb6 	bl	1004279c <__aeabi_dsub>
10048e30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
10048e32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10048e34:	9012      	str	r0, [sp, #72]	; 0x48
10048e36:	9113      	str	r1, [sp, #76]	; 0x4c
10048e38:	980c      	ldr	r0, [sp, #48]	; 0x30
10048e3a:	990d      	ldr	r1, [sp, #52]	; 0x34
10048e3c:	f7f8 faea 	bl	10041414 <__aeabi_dadd>
10048e40:	0002      	movs	r2, r0
10048e42:	000b      	movs	r3, r1
10048e44:	2000      	movs	r0, #0
10048e46:	49a2      	ldr	r1, [pc, #648]	; (100490d0 <__ieee754_pow+0x6b0>)
10048e48:	f7f8 fdf4 	bl	10041a34 <__aeabi_ddiv>
10048e4c:	0002      	movs	r2, r0
10048e4e:	000b      	movs	r3, r1
10048e50:	9014      	str	r0, [sp, #80]	; 0x50
10048e52:	9115      	str	r1, [sp, #84]	; 0x54
10048e54:	9812      	ldr	r0, [sp, #72]	; 0x48
10048e56:	9913      	ldr	r1, [sp, #76]	; 0x4c
10048e58:	f7f9 fa20 	bl	1004229c <__aeabi_dmul>
10048e5c:	9008      	str	r0, [sp, #32]
10048e5e:	9109      	str	r1, [sp, #36]	; 0x24
10048e60:	9b08      	ldr	r3, [sp, #32]
10048e62:	9c09      	ldr	r4, [sp, #36]	; 0x24
10048e64:	2180      	movs	r1, #128	; 0x80
10048e66:	106d      	asrs	r5, r5, #1
10048e68:	0589      	lsls	r1, r1, #22
10048e6a:	9306      	str	r3, [sp, #24]
10048e6c:	9407      	str	r4, [sp, #28]
10048e6e:	430d      	orrs	r5, r1
10048e70:	2300      	movs	r3, #0
10048e72:	2180      	movs	r1, #128	; 0x80
10048e74:	2200      	movs	r2, #0
10048e76:	9306      	str	r3, [sp, #24]
10048e78:	0309      	lsls	r1, r1, #12
10048e7a:	9b06      	ldr	r3, [sp, #24]
10048e7c:	9c07      	ldr	r4, [sp, #28]
10048e7e:	186d      	adds	r5, r5, r1
10048e80:	9302      	str	r3, [sp, #8]
10048e82:	9403      	str	r4, [sp, #12]
10048e84:	9802      	ldr	r0, [sp, #8]
10048e86:	9903      	ldr	r1, [sp, #12]
10048e88:	04b6      	lsls	r6, r6, #18
10048e8a:	19ab      	adds	r3, r5, r6
10048e8c:	0014      	movs	r4, r2
10048e8e:	001d      	movs	r5, r3
10048e90:	f7f9 fa04 	bl	1004229c <__aeabi_dmul>
10048e94:	0002      	movs	r2, r0
10048e96:	000b      	movs	r3, r1
10048e98:	9812      	ldr	r0, [sp, #72]	; 0x48
10048e9a:	9913      	ldr	r1, [sp, #76]	; 0x4c
10048e9c:	f7f9 fc7e 	bl	1004279c <__aeabi_dsub>
10048ea0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
10048ea2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10048ea4:	0006      	movs	r6, r0
10048ea6:	000f      	movs	r7, r1
10048ea8:	0020      	movs	r0, r4
10048eaa:	0029      	movs	r1, r5
10048eac:	f7f9 fc76 	bl	1004279c <__aeabi_dsub>
10048eb0:	0002      	movs	r2, r0
10048eb2:	000b      	movs	r3, r1
10048eb4:	980c      	ldr	r0, [sp, #48]	; 0x30
10048eb6:	990d      	ldr	r1, [sp, #52]	; 0x34
10048eb8:	f7f9 fc70 	bl	1004279c <__aeabi_dsub>
10048ebc:	9a02      	ldr	r2, [sp, #8]
10048ebe:	9b03      	ldr	r3, [sp, #12]
10048ec0:	f7f9 f9ec 	bl	1004229c <__aeabi_dmul>
10048ec4:	0002      	movs	r2, r0
10048ec6:	000b      	movs	r3, r1
10048ec8:	0030      	movs	r0, r6
10048eca:	0039      	movs	r1, r7
10048ecc:	f7f9 fc66 	bl	1004279c <__aeabi_dsub>
10048ed0:	9a14      	ldr	r2, [sp, #80]	; 0x50
10048ed2:	9b15      	ldr	r3, [sp, #84]	; 0x54
10048ed4:	f7f9 f9e2 	bl	1004229c <__aeabi_dmul>
10048ed8:	9a08      	ldr	r2, [sp, #32]
10048eda:	9b09      	ldr	r3, [sp, #36]	; 0x24
10048edc:	900c      	str	r0, [sp, #48]	; 0x30
10048ede:	910d      	str	r1, [sp, #52]	; 0x34
10048ee0:	0010      	movs	r0, r2
10048ee2:	0019      	movs	r1, r3
10048ee4:	f7f9 f9da 	bl	1004229c <__aeabi_dmul>
10048ee8:	0006      	movs	r6, r0
10048eea:	000f      	movs	r7, r1
10048eec:	4a7d      	ldr	r2, [pc, #500]	; (100490e4 <__ieee754_pow+0x6c4>)
10048eee:	4b7e      	ldr	r3, [pc, #504]	; (100490e8 <__ieee754_pow+0x6c8>)
10048ef0:	f7f9 f9d4 	bl	1004229c <__aeabi_dmul>
10048ef4:	4a7d      	ldr	r2, [pc, #500]	; (100490ec <__ieee754_pow+0x6cc>)
10048ef6:	4b7e      	ldr	r3, [pc, #504]	; (100490f0 <__ieee754_pow+0x6d0>)
10048ef8:	f7f8 fa8c 	bl	10041414 <__aeabi_dadd>
10048efc:	0032      	movs	r2, r6
10048efe:	003b      	movs	r3, r7
10048f00:	f7f9 f9cc 	bl	1004229c <__aeabi_dmul>
10048f04:	4a7b      	ldr	r2, [pc, #492]	; (100490f4 <__ieee754_pow+0x6d4>)
10048f06:	4b7c      	ldr	r3, [pc, #496]	; (100490f8 <__ieee754_pow+0x6d8>)
10048f08:	f7f8 fa84 	bl	10041414 <__aeabi_dadd>
10048f0c:	0032      	movs	r2, r6
10048f0e:	003b      	movs	r3, r7
10048f10:	f7f9 f9c4 	bl	1004229c <__aeabi_dmul>
10048f14:	4a79      	ldr	r2, [pc, #484]	; (100490fc <__ieee754_pow+0x6dc>)
10048f16:	4b7a      	ldr	r3, [pc, #488]	; (10049100 <__ieee754_pow+0x6e0>)
10048f18:	f7f8 fa7c 	bl	10041414 <__aeabi_dadd>
10048f1c:	0032      	movs	r2, r6
10048f1e:	003b      	movs	r3, r7
10048f20:	f7f9 f9bc 	bl	1004229c <__aeabi_dmul>
10048f24:	4a77      	ldr	r2, [pc, #476]	; (10049104 <__ieee754_pow+0x6e4>)
10048f26:	4b78      	ldr	r3, [pc, #480]	; (10049108 <__ieee754_pow+0x6e8>)
10048f28:	f7f8 fa74 	bl	10041414 <__aeabi_dadd>
10048f2c:	0032      	movs	r2, r6
10048f2e:	003b      	movs	r3, r7
10048f30:	f7f9 f9b4 	bl	1004229c <__aeabi_dmul>
10048f34:	4a75      	ldr	r2, [pc, #468]	; (1004910c <__ieee754_pow+0x6ec>)
10048f36:	4b76      	ldr	r3, [pc, #472]	; (10049110 <__ieee754_pow+0x6f0>)
10048f38:	f7f8 fa6c 	bl	10041414 <__aeabi_dadd>
10048f3c:	0032      	movs	r2, r6
10048f3e:	0004      	movs	r4, r0
10048f40:	000d      	movs	r5, r1
10048f42:	003b      	movs	r3, r7
10048f44:	0030      	movs	r0, r6
10048f46:	0039      	movs	r1, r7
10048f48:	f7f9 f9a8 	bl	1004229c <__aeabi_dmul>
10048f4c:	0002      	movs	r2, r0
10048f4e:	000b      	movs	r3, r1
10048f50:	0020      	movs	r0, r4
10048f52:	0029      	movs	r1, r5
10048f54:	f7f9 f9a2 	bl	1004229c <__aeabi_dmul>
10048f58:	9a02      	ldr	r2, [sp, #8]
10048f5a:	9b03      	ldr	r3, [sp, #12]
10048f5c:	0004      	movs	r4, r0
10048f5e:	000d      	movs	r5, r1
10048f60:	9808      	ldr	r0, [sp, #32]
10048f62:	9909      	ldr	r1, [sp, #36]	; 0x24
10048f64:	f7f8 fa56 	bl	10041414 <__aeabi_dadd>
10048f68:	9a0c      	ldr	r2, [sp, #48]	; 0x30
10048f6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10048f6c:	f7f9 f996 	bl	1004229c <__aeabi_dmul>
10048f70:	0022      	movs	r2, r4
10048f72:	002b      	movs	r3, r5
10048f74:	f7f8 fa4e 	bl	10041414 <__aeabi_dadd>
10048f78:	9a02      	ldr	r2, [sp, #8]
10048f7a:	9b03      	ldr	r3, [sp, #12]
10048f7c:	900e      	str	r0, [sp, #56]	; 0x38
10048f7e:	910f      	str	r1, [sp, #60]	; 0x3c
10048f80:	0010      	movs	r0, r2
10048f82:	0019      	movs	r1, r3
10048f84:	f7f9 f98a 	bl	1004229c <__aeabi_dmul>
10048f88:	2200      	movs	r2, #0
10048f8a:	4b62      	ldr	r3, [pc, #392]	; (10049114 <__ieee754_pow+0x6f4>)
10048f8c:	0004      	movs	r4, r0
10048f8e:	000d      	movs	r5, r1
10048f90:	f7f8 fa40 	bl	10041414 <__aeabi_dadd>
10048f94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
10048f96:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10048f98:	f7f8 fa3c 	bl	10041414 <__aeabi_dadd>
10048f9c:	9e06      	ldr	r6, [sp, #24]
10048f9e:	000f      	movs	r7, r1
10048fa0:	0032      	movs	r2, r6
10048fa2:	000b      	movs	r3, r1
10048fa4:	9802      	ldr	r0, [sp, #8]
10048fa6:	9903      	ldr	r1, [sp, #12]
10048fa8:	f7f9 f978 	bl	1004229c <__aeabi_dmul>
10048fac:	2200      	movs	r2, #0
10048fae:	9002      	str	r0, [sp, #8]
10048fb0:	9103      	str	r1, [sp, #12]
10048fb2:	4b58      	ldr	r3, [pc, #352]	; (10049114 <__ieee754_pow+0x6f4>)
10048fb4:	0030      	movs	r0, r6
10048fb6:	0039      	movs	r1, r7
10048fb8:	f7f9 fbf0 	bl	1004279c <__aeabi_dsub>
10048fbc:	0022      	movs	r2, r4
10048fbe:	002b      	movs	r3, r5
10048fc0:	f7f9 fbec 	bl	1004279c <__aeabi_dsub>
10048fc4:	0002      	movs	r2, r0
10048fc6:	000b      	movs	r3, r1
10048fc8:	980e      	ldr	r0, [sp, #56]	; 0x38
10048fca:	990f      	ldr	r1, [sp, #60]	; 0x3c
10048fcc:	f7f9 fbe6 	bl	1004279c <__aeabi_dsub>
10048fd0:	9a08      	ldr	r2, [sp, #32]
10048fd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
10048fd4:	f7f9 f962 	bl	1004229c <__aeabi_dmul>
10048fd8:	0032      	movs	r2, r6
10048fda:	0004      	movs	r4, r0
10048fdc:	000d      	movs	r5, r1
10048fde:	980c      	ldr	r0, [sp, #48]	; 0x30
10048fe0:	990d      	ldr	r1, [sp, #52]	; 0x34
10048fe2:	003b      	movs	r3, r7
10048fe4:	f7f9 f95a 	bl	1004229c <__aeabi_dmul>
10048fe8:	0002      	movs	r2, r0
10048fea:	000b      	movs	r3, r1
10048fec:	0020      	movs	r0, r4
10048fee:	0029      	movs	r1, r5
10048ff0:	f7f8 fa10 	bl	10041414 <__aeabi_dadd>
10048ff4:	0004      	movs	r4, r0
10048ff6:	000d      	movs	r5, r1
10048ff8:	0002      	movs	r2, r0
10048ffa:	000b      	movs	r3, r1
10048ffc:	9802      	ldr	r0, [sp, #8]
10048ffe:	9903      	ldr	r1, [sp, #12]
10049000:	f7f8 fa08 	bl	10041414 <__aeabi_dadd>
10049004:	22e0      	movs	r2, #224	; 0xe0
10049006:	9e06      	ldr	r6, [sp, #24]
10049008:	0612      	lsls	r2, r2, #24
1004900a:	4b43      	ldr	r3, [pc, #268]	; (10049118 <__ieee754_pow+0x6f8>)
1004900c:	0030      	movs	r0, r6
1004900e:	000f      	movs	r7, r1
10049010:	f7f9 f944 	bl	1004229c <__aeabi_dmul>
10049014:	9a02      	ldr	r2, [sp, #8]
10049016:	9b03      	ldr	r3, [sp, #12]
10049018:	9008      	str	r0, [sp, #32]
1004901a:	9109      	str	r1, [sp, #36]	; 0x24
1004901c:	0030      	movs	r0, r6
1004901e:	0039      	movs	r1, r7
10049020:	f7f9 fbbc 	bl	1004279c <__aeabi_dsub>
10049024:	0002      	movs	r2, r0
10049026:	000b      	movs	r3, r1
10049028:	0020      	movs	r0, r4
1004902a:	0029      	movs	r1, r5
1004902c:	f7f9 fbb6 	bl	1004279c <__aeabi_dsub>
10049030:	4a3a      	ldr	r2, [pc, #232]	; (1004911c <__ieee754_pow+0x6fc>)
10049032:	4b39      	ldr	r3, [pc, #228]	; (10049118 <__ieee754_pow+0x6f8>)
10049034:	f7f9 f932 	bl	1004229c <__aeabi_dmul>
10049038:	4a39      	ldr	r2, [pc, #228]	; (10049120 <__ieee754_pow+0x700>)
1004903a:	0004      	movs	r4, r0
1004903c:	000d      	movs	r5, r1
1004903e:	4b39      	ldr	r3, [pc, #228]	; (10049124 <__ieee754_pow+0x704>)
10049040:	0030      	movs	r0, r6
10049042:	0039      	movs	r1, r7
10049044:	f7f9 f92a 	bl	1004229c <__aeabi_dmul>
10049048:	0002      	movs	r2, r0
1004904a:	000b      	movs	r3, r1
1004904c:	0020      	movs	r0, r4
1004904e:	0029      	movs	r1, r5
10049050:	f7f8 f9e0 	bl	10041414 <__aeabi_dadd>
10049054:	9a11      	ldr	r2, [sp, #68]	; 0x44
10049056:	4b34      	ldr	r3, [pc, #208]	; (10049128 <__ieee754_pow+0x708>)
10049058:	189b      	adds	r3, r3, r2
1004905a:	681a      	ldr	r2, [r3, #0]
1004905c:	685b      	ldr	r3, [r3, #4]
1004905e:	f7f8 f9d9 	bl	10041414 <__aeabi_dadd>
10049062:	9002      	str	r0, [sp, #8]
10049064:	9103      	str	r1, [sp, #12]
10049066:	980b      	ldr	r0, [sp, #44]	; 0x2c
10049068:	f7f9 ff02 	bl	10042e70 <__aeabi_i2d>
1004906c:	0004      	movs	r4, r0
1004906e:	000d      	movs	r5, r1
10049070:	9808      	ldr	r0, [sp, #32]
10049072:	9909      	ldr	r1, [sp, #36]	; 0x24
10049074:	9a11      	ldr	r2, [sp, #68]	; 0x44
10049076:	4b2d      	ldr	r3, [pc, #180]	; (1004912c <__ieee754_pow+0x70c>)
10049078:	189b      	adds	r3, r3, r2
1004907a:	681e      	ldr	r6, [r3, #0]
1004907c:	685f      	ldr	r7, [r3, #4]
1004907e:	9a02      	ldr	r2, [sp, #8]
10049080:	9b03      	ldr	r3, [sp, #12]
10049082:	f7f8 f9c7 	bl	10041414 <__aeabi_dadd>
10049086:	0032      	movs	r2, r6
10049088:	003b      	movs	r3, r7
1004908a:	f7f8 f9c3 	bl	10041414 <__aeabi_dadd>
1004908e:	0022      	movs	r2, r4
10049090:	002b      	movs	r3, r5
10049092:	f7f8 f9bf 	bl	10041414 <__aeabi_dadd>
10049096:	9806      	ldr	r0, [sp, #24]
10049098:	0022      	movs	r2, r4
1004909a:	002b      	movs	r3, r5
1004909c:	9006      	str	r0, [sp, #24]
1004909e:	9107      	str	r1, [sp, #28]
100490a0:	f7f9 fb7c 	bl	1004279c <__aeabi_dsub>
100490a4:	0032      	movs	r2, r6
100490a6:	003b      	movs	r3, r7
100490a8:	f7f9 fb78 	bl	1004279c <__aeabi_dsub>
100490ac:	9a08      	ldr	r2, [sp, #32]
100490ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
100490b0:	f7f9 fb74 	bl	1004279c <__aeabi_dsub>
100490b4:	0002      	movs	r2, r0
100490b6:	000b      	movs	r3, r1
100490b8:	9802      	ldr	r0, [sp, #8]
100490ba:	9903      	ldr	r1, [sp, #12]
100490bc:	e61a      	b.n	10048cf4 <__ieee754_pow+0x2d4>
100490be:	2300      	movs	r3, #0
100490c0:	4c03      	ldr	r4, [pc, #12]	; (100490d0 <__ieee754_pow+0x6b0>)
100490c2:	e623      	b.n	10048d0c <__ieee754_pow+0x2ec>
100490c4:	000fffff 	.word	0x000fffff
100490c8:	43400000 	.word	0x43400000
100490cc:	fffffc01 	.word	0xfffffc01
100490d0:	3ff00000 	.word	0x3ff00000
100490d4:	0003988e 	.word	0x0003988e
100490d8:	000bb679 	.word	0x000bb679
100490dc:	fff00000 	.word	0xfff00000
100490e0:	10058ee8 	.word	0x10058ee8
100490e4:	4a454eef 	.word	0x4a454eef
100490e8:	3fca7e28 	.word	0x3fca7e28
100490ec:	93c9db65 	.word	0x93c9db65
100490f0:	3fcd864a 	.word	0x3fcd864a
100490f4:	a91d4101 	.word	0xa91d4101
100490f8:	3fd17460 	.word	0x3fd17460
100490fc:	518f264d 	.word	0x518f264d
10049100:	3fd55555 	.word	0x3fd55555
10049104:	db6fabff 	.word	0xdb6fabff
10049108:	3fdb6db6 	.word	0x3fdb6db6
1004910c:	33333303 	.word	0x33333303
10049110:	3fe33333 	.word	0x3fe33333
10049114:	40080000 	.word	0x40080000
10049118:	3feec709 	.word	0x3feec709
1004911c:	dc3a03fd 	.word	0xdc3a03fd
10049120:	145b01f5 	.word	0x145b01f5
10049124:	be3e2fe0 	.word	0xbe3e2fe0
10049128:	10058f08 	.word	0x10058f08
1004912c:	10058ef8 	.word	0x10058ef8
10049130:	4a90      	ldr	r2, [pc, #576]	; (10049374 <__ieee754_pow+0x954>)
10049132:	4b91      	ldr	r3, [pc, #580]	; (10049378 <__ieee754_pow+0x958>)
10049134:	9804      	ldr	r0, [sp, #16]
10049136:	9905      	ldr	r1, [sp, #20]
10049138:	f7f8 f96c 	bl	10041414 <__aeabi_dadd>
1004913c:	0032      	movs	r2, r6
1004913e:	9000      	str	r0, [sp, #0]
10049140:	9101      	str	r1, [sp, #4]
10049142:	003b      	movs	r3, r7
10049144:	0028      	movs	r0, r5
10049146:	0021      	movs	r1, r4
10049148:	f7f9 fb28 	bl	1004279c <__aeabi_dsub>
1004914c:	0002      	movs	r2, r0
1004914e:	000b      	movs	r3, r1
10049150:	9800      	ldr	r0, [sp, #0]
10049152:	9901      	ldr	r1, [sp, #4]
10049154:	f7f7 f9ac 	bl	100404b0 <__aeabi_dcmpgt>
10049158:	2800      	cmp	r0, #0
1004915a:	d000      	beq.n	1004915e <__ieee754_pow+0x73e>
1004915c:	e611      	b.n	10048d82 <__ieee754_pow+0x362>
1004915e:	2100      	movs	r1, #0
10049160:	4a86      	ldr	r2, [pc, #536]	; (1004937c <__ieee754_pow+0x95c>)
10049162:	0063      	lsls	r3, r4, #1
10049164:	085b      	lsrs	r3, r3, #1
10049166:	9100      	str	r1, [sp, #0]
10049168:	4293      	cmp	r3, r2
1004916a:	dd25      	ble.n	100491b8 <__ieee754_pow+0x798>
1004916c:	4a84      	ldr	r2, [pc, #528]	; (10049380 <__ieee754_pow+0x960>)
1004916e:	151b      	asrs	r3, r3, #20
10049170:	189b      	adds	r3, r3, r2
10049172:	2280      	movs	r2, #128	; 0x80
10049174:	0352      	lsls	r2, r2, #13
10049176:	4694      	mov	ip, r2
10049178:	411a      	asrs	r2, r3
1004917a:	1914      	adds	r4, r2, r4
1004917c:	0060      	lsls	r0, r4, #1
1004917e:	4b81      	ldr	r3, [pc, #516]	; (10049384 <__ieee754_pow+0x964>)
10049180:	0d40      	lsrs	r0, r0, #21
10049182:	4d81      	ldr	r5, [pc, #516]	; (10049388 <__ieee754_pow+0x968>)
10049184:	18c0      	adds	r0, r0, r3
10049186:	4105      	asrs	r5, r0
10049188:	0021      	movs	r1, r4
1004918a:	43a9      	bics	r1, r5
1004918c:	000b      	movs	r3, r1
1004918e:	4661      	mov	r1, ip
10049190:	0324      	lsls	r4, r4, #12
10049192:	0b24      	lsrs	r4, r4, #12
10049194:	4321      	orrs	r1, r4
10049196:	2414      	movs	r4, #20
10049198:	1a20      	subs	r0, r4, r0
1004919a:	4101      	asrs	r1, r0
1004919c:	9100      	str	r1, [sp, #0]
1004919e:	9908      	ldr	r1, [sp, #32]
100491a0:	2200      	movs	r2, #0
100491a2:	2900      	cmp	r1, #0
100491a4:	da02      	bge.n	100491ac <__ieee754_pow+0x78c>
100491a6:	9900      	ldr	r1, [sp, #0]
100491a8:	4249      	negs	r1, r1
100491aa:	9100      	str	r1, [sp, #0]
100491ac:	0030      	movs	r0, r6
100491ae:	0039      	movs	r1, r7
100491b0:	f7f9 faf4 	bl	1004279c <__aeabi_dsub>
100491b4:	9006      	str	r0, [sp, #24]
100491b6:	9107      	str	r1, [sp, #28]
100491b8:	9a04      	ldr	r2, [sp, #16]
100491ba:	9b05      	ldr	r3, [sp, #20]
100491bc:	9806      	ldr	r0, [sp, #24]
100491be:	9907      	ldr	r1, [sp, #28]
100491c0:	2600      	movs	r6, #0
100491c2:	f7f8 f927 	bl	10041414 <__aeabi_dadd>
100491c6:	2200      	movs	r2, #0
100491c8:	4b70      	ldr	r3, [pc, #448]	; (1004938c <__ieee754_pow+0x96c>)
100491ca:	0030      	movs	r0, r6
100491cc:	000f      	movs	r7, r1
100491ce:	f7f9 f865 	bl	1004229c <__aeabi_dmul>
100491d2:	9a06      	ldr	r2, [sp, #24]
100491d4:	9b07      	ldr	r3, [sp, #28]
100491d6:	9008      	str	r0, [sp, #32]
100491d8:	9109      	str	r1, [sp, #36]	; 0x24
100491da:	0030      	movs	r0, r6
100491dc:	0039      	movs	r1, r7
100491de:	f7f9 fadd 	bl	1004279c <__aeabi_dsub>
100491e2:	0002      	movs	r2, r0
100491e4:	000b      	movs	r3, r1
100491e6:	9804      	ldr	r0, [sp, #16]
100491e8:	9905      	ldr	r1, [sp, #20]
100491ea:	f7f9 fad7 	bl	1004279c <__aeabi_dsub>
100491ee:	4a68      	ldr	r2, [pc, #416]	; (10049390 <__ieee754_pow+0x970>)
100491f0:	4b68      	ldr	r3, [pc, #416]	; (10049394 <__ieee754_pow+0x974>)
100491f2:	f7f9 f853 	bl	1004229c <__aeabi_dmul>
100491f6:	4a68      	ldr	r2, [pc, #416]	; (10049398 <__ieee754_pow+0x978>)
100491f8:	0004      	movs	r4, r0
100491fa:	000d      	movs	r5, r1
100491fc:	4b67      	ldr	r3, [pc, #412]	; (1004939c <__ieee754_pow+0x97c>)
100491fe:	0030      	movs	r0, r6
10049200:	0039      	movs	r1, r7
10049202:	f7f9 f84b 	bl	1004229c <__aeabi_dmul>
10049206:	0002      	movs	r2, r0
10049208:	000b      	movs	r3, r1
1004920a:	0020      	movs	r0, r4
1004920c:	0029      	movs	r1, r5
1004920e:	f7f8 f901 	bl	10041414 <__aeabi_dadd>
10049212:	0004      	movs	r4, r0
10049214:	000d      	movs	r5, r1
10049216:	0002      	movs	r2, r0
10049218:	000b      	movs	r3, r1
1004921a:	9808      	ldr	r0, [sp, #32]
1004921c:	9909      	ldr	r1, [sp, #36]	; 0x24
1004921e:	f7f8 f8f9 	bl	10041414 <__aeabi_dadd>
10049222:	9a08      	ldr	r2, [sp, #32]
10049224:	9b09      	ldr	r3, [sp, #36]	; 0x24
10049226:	0006      	movs	r6, r0
10049228:	000f      	movs	r7, r1
1004922a:	f7f9 fab7 	bl	1004279c <__aeabi_dsub>
1004922e:	0002      	movs	r2, r0
10049230:	000b      	movs	r3, r1
10049232:	0020      	movs	r0, r4
10049234:	0029      	movs	r1, r5
10049236:	f7f9 fab1 	bl	1004279c <__aeabi_dsub>
1004923a:	0032      	movs	r2, r6
1004923c:	9004      	str	r0, [sp, #16]
1004923e:	9105      	str	r1, [sp, #20]
10049240:	003b      	movs	r3, r7
10049242:	0030      	movs	r0, r6
10049244:	0039      	movs	r1, r7
10049246:	f7f9 f829 	bl	1004229c <__aeabi_dmul>
1004924a:	0004      	movs	r4, r0
1004924c:	000d      	movs	r5, r1
1004924e:	4a54      	ldr	r2, [pc, #336]	; (100493a0 <__ieee754_pow+0x980>)
10049250:	4b54      	ldr	r3, [pc, #336]	; (100493a4 <__ieee754_pow+0x984>)
10049252:	f7f9 f823 	bl	1004229c <__aeabi_dmul>
10049256:	4a54      	ldr	r2, [pc, #336]	; (100493a8 <__ieee754_pow+0x988>)
10049258:	4b54      	ldr	r3, [pc, #336]	; (100493ac <__ieee754_pow+0x98c>)
1004925a:	f7f9 fa9f 	bl	1004279c <__aeabi_dsub>
1004925e:	0022      	movs	r2, r4
10049260:	002b      	movs	r3, r5
10049262:	f7f9 f81b 	bl	1004229c <__aeabi_dmul>
10049266:	4a52      	ldr	r2, [pc, #328]	; (100493b0 <__ieee754_pow+0x990>)
10049268:	4b52      	ldr	r3, [pc, #328]	; (100493b4 <__ieee754_pow+0x994>)
1004926a:	f7f8 f8d3 	bl	10041414 <__aeabi_dadd>
1004926e:	0022      	movs	r2, r4
10049270:	002b      	movs	r3, r5
10049272:	f7f9 f813 	bl	1004229c <__aeabi_dmul>
10049276:	4a50      	ldr	r2, [pc, #320]	; (100493b8 <__ieee754_pow+0x998>)
10049278:	4b50      	ldr	r3, [pc, #320]	; (100493bc <__ieee754_pow+0x99c>)
1004927a:	f7f9 fa8f 	bl	1004279c <__aeabi_dsub>
1004927e:	0022      	movs	r2, r4
10049280:	002b      	movs	r3, r5
10049282:	f7f9 f80b 	bl	1004229c <__aeabi_dmul>
10049286:	4a4e      	ldr	r2, [pc, #312]	; (100493c0 <__ieee754_pow+0x9a0>)
10049288:	4b4e      	ldr	r3, [pc, #312]	; (100493c4 <__ieee754_pow+0x9a4>)
1004928a:	f7f8 f8c3 	bl	10041414 <__aeabi_dadd>
1004928e:	0022      	movs	r2, r4
10049290:	002b      	movs	r3, r5
10049292:	f7f9 f803 	bl	1004229c <__aeabi_dmul>
10049296:	0002      	movs	r2, r0
10049298:	000b      	movs	r3, r1
1004929a:	0030      	movs	r0, r6
1004929c:	0039      	movs	r1, r7
1004929e:	f7f9 fa7d 	bl	1004279c <__aeabi_dsub>
100492a2:	0004      	movs	r4, r0
100492a4:	000d      	movs	r5, r1
100492a6:	0002      	movs	r2, r0
100492a8:	000b      	movs	r3, r1
100492aa:	0030      	movs	r0, r6
100492ac:	0039      	movs	r1, r7
100492ae:	f7f8 fff5 	bl	1004229c <__aeabi_dmul>
100492b2:	2380      	movs	r3, #128	; 0x80
100492b4:	9006      	str	r0, [sp, #24]
100492b6:	9107      	str	r1, [sp, #28]
100492b8:	2200      	movs	r2, #0
100492ba:	05db      	lsls	r3, r3, #23
100492bc:	0020      	movs	r0, r4
100492be:	0029      	movs	r1, r5
100492c0:	f7f9 fa6c 	bl	1004279c <__aeabi_dsub>
100492c4:	0002      	movs	r2, r0
100492c6:	000b      	movs	r3, r1
100492c8:	9806      	ldr	r0, [sp, #24]
100492ca:	9907      	ldr	r1, [sp, #28]
100492cc:	f7f8 fbb2 	bl	10041a34 <__aeabi_ddiv>
100492d0:	9a04      	ldr	r2, [sp, #16]
100492d2:	9b05      	ldr	r3, [sp, #20]
100492d4:	0004      	movs	r4, r0
100492d6:	000d      	movs	r5, r1
100492d8:	0030      	movs	r0, r6
100492da:	0039      	movs	r1, r7
100492dc:	f7f8 ffde 	bl	1004229c <__aeabi_dmul>
100492e0:	9a04      	ldr	r2, [sp, #16]
100492e2:	9b05      	ldr	r3, [sp, #20]
100492e4:	f7f8 f896 	bl	10041414 <__aeabi_dadd>
100492e8:	0002      	movs	r2, r0
100492ea:	000b      	movs	r3, r1
100492ec:	0020      	movs	r0, r4
100492ee:	0029      	movs	r1, r5
100492f0:	f7f9 fa54 	bl	1004279c <__aeabi_dsub>
100492f4:	0032      	movs	r2, r6
100492f6:	003b      	movs	r3, r7
100492f8:	f7f9 fa50 	bl	1004279c <__aeabi_dsub>
100492fc:	0002      	movs	r2, r0
100492fe:	000b      	movs	r3, r1
10049300:	2000      	movs	r0, #0
10049302:	4931      	ldr	r1, [pc, #196]	; (100493c8 <__ieee754_pow+0x9a8>)
10049304:	f7f9 fa4a 	bl	1004279c <__aeabi_dsub>
10049308:	9b00      	ldr	r3, [sp, #0]
1004930a:	051b      	lsls	r3, r3, #20
1004930c:	185b      	adds	r3, r3, r1
1004930e:	151a      	asrs	r2, r3, #20
10049310:	2a00      	cmp	r2, #0
10049312:	dc28      	bgt.n	10049366 <__ieee754_pow+0x946>
10049314:	9a00      	ldr	r2, [sp, #0]
10049316:	f000 f9ad 	bl	10049674 <scalbn>
1004931a:	9a02      	ldr	r2, [sp, #8]
1004931c:	9b03      	ldr	r3, [sp, #12]
1004931e:	f7ff fc13 	bl	10048b48 <__ieee754_pow+0x128>
10049322:	4a2a      	ldr	r2, [pc, #168]	; (100493cc <__ieee754_pow+0x9ac>)
10049324:	004b      	lsls	r3, r1, #1
10049326:	085b      	lsrs	r3, r3, #1
10049328:	4293      	cmp	r3, r2
1004932a:	dc00      	bgt.n	1004932e <__ieee754_pow+0x90e>
1004932c:	e717      	b.n	1004915e <__ieee754_pow+0x73e>
1004932e:	4b28      	ldr	r3, [pc, #160]	; (100493d0 <__ieee754_pow+0x9b0>)
10049330:	18cb      	adds	r3, r1, r3
10049332:	4303      	orrs	r3, r0
10049334:	d009      	beq.n	1004934a <__ieee754_pow+0x92a>
10049336:	9802      	ldr	r0, [sp, #8]
10049338:	9903      	ldr	r1, [sp, #12]
1004933a:	4a26      	ldr	r2, [pc, #152]	; (100493d4 <__ieee754_pow+0x9b4>)
1004933c:	4b26      	ldr	r3, [pc, #152]	; (100493d8 <__ieee754_pow+0x9b8>)
1004933e:	f7f8 ffad 	bl	1004229c <__aeabi_dmul>
10049342:	4a24      	ldr	r2, [pc, #144]	; (100493d4 <__ieee754_pow+0x9b4>)
10049344:	4b24      	ldr	r3, [pc, #144]	; (100493d8 <__ieee754_pow+0x9b8>)
10049346:	f7ff fbff 	bl	10048b48 <__ieee754_pow+0x128>
1004934a:	0032      	movs	r2, r6
1004934c:	003b      	movs	r3, r7
1004934e:	f7f9 fa25 	bl	1004279c <__aeabi_dsub>
10049352:	0002      	movs	r2, r0
10049354:	000b      	movs	r3, r1
10049356:	9804      	ldr	r0, [sp, #16]
10049358:	9905      	ldr	r1, [sp, #20]
1004935a:	f7f7 f89f 	bl	1004049c <__aeabi_dcmple>
1004935e:	2800      	cmp	r0, #0
10049360:	d100      	bne.n	10049364 <__ieee754_pow+0x944>
10049362:	e6fc      	b.n	1004915e <__ieee754_pow+0x73e>
10049364:	e7e7      	b.n	10049336 <__ieee754_pow+0x916>
10049366:	0019      	movs	r1, r3
10049368:	e7d7      	b.n	1004931a <__ieee754_pow+0x8fa>
1004936a:	2000      	movs	r0, #0
1004936c:	4916      	ldr	r1, [pc, #88]	; (100493c8 <__ieee754_pow+0x9a8>)
1004936e:	f7ff fb83 	bl	10048a78 <__ieee754_pow+0x58>
10049372:	46c0      	nop			; (mov r8, r8)
10049374:	652b82fe 	.word	0x652b82fe
10049378:	3c971547 	.word	0x3c971547
1004937c:	3fe00000 	.word	0x3fe00000
10049380:	fffffc02 	.word	0xfffffc02
10049384:	fffffc01 	.word	0xfffffc01
10049388:	000fffff 	.word	0x000fffff
1004938c:	3fe62e43 	.word	0x3fe62e43
10049390:	fefa39ef 	.word	0xfefa39ef
10049394:	3fe62e42 	.word	0x3fe62e42
10049398:	0ca86c39 	.word	0x0ca86c39
1004939c:	be205c61 	.word	0xbe205c61
100493a0:	72bea4d0 	.word	0x72bea4d0
100493a4:	3e663769 	.word	0x3e663769
100493a8:	c5d26bf1 	.word	0xc5d26bf1
100493ac:	3ebbbd41 	.word	0x3ebbbd41
100493b0:	af25de2c 	.word	0xaf25de2c
100493b4:	3f11566a 	.word	0x3f11566a
100493b8:	16bebd93 	.word	0x16bebd93
100493bc:	3f66c16c 	.word	0x3f66c16c
100493c0:	5555553e 	.word	0x5555553e
100493c4:	3fc55555 	.word	0x3fc55555
100493c8:	3ff00000 	.word	0x3ff00000
100493cc:	4090cbff 	.word	0x4090cbff
100493d0:	3f6f3400 	.word	0x3f6f3400
100493d4:	c2f8f359 	.word	0xc2f8f359
100493d8:	01a56e1f 	.word	0x01a56e1f

100493dc <__ieee754_sqrt>:
100493dc:	4b54      	ldr	r3, [pc, #336]	; (10049530 <__ieee754_sqrt+0x154>)
100493de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100493e0:	001e      	movs	r6, r3
100493e2:	0005      	movs	r5, r0
100493e4:	000c      	movs	r4, r1
100493e6:	0002      	movs	r2, r0
100493e8:	400e      	ands	r6, r1
100493ea:	429e      	cmp	r6, r3
100493ec:	d10f      	bne.n	1004940e <__ieee754_sqrt+0x32>
100493ee:	0002      	movs	r2, r0
100493f0:	000b      	movs	r3, r1
100493f2:	f7f8 ff53 	bl	1004229c <__aeabi_dmul>
100493f6:	0002      	movs	r2, r0
100493f8:	000b      	movs	r3, r1
100493fa:	0028      	movs	r0, r5
100493fc:	0021      	movs	r1, r4
100493fe:	f7f8 f809 	bl	10041414 <__aeabi_dadd>
10049402:	0005      	movs	r5, r0
10049404:	000c      	movs	r4, r1
10049406:	0028      	movs	r0, r5
10049408:	0021      	movs	r1, r4
1004940a:	b003      	add	sp, #12
1004940c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004940e:	2900      	cmp	r1, #0
10049410:	dc0e      	bgt.n	10049430 <__ieee754_sqrt+0x54>
10049412:	004b      	lsls	r3, r1, #1
10049414:	085b      	lsrs	r3, r3, #1
10049416:	4303      	orrs	r3, r0
10049418:	d0f5      	beq.n	10049406 <__ieee754_sqrt+0x2a>
1004941a:	2900      	cmp	r1, #0
1004941c:	d00a      	beq.n	10049434 <__ieee754_sqrt+0x58>
1004941e:	0002      	movs	r2, r0
10049420:	000b      	movs	r3, r1
10049422:	f7f9 f9bb 	bl	1004279c <__aeabi_dsub>
10049426:	0002      	movs	r2, r0
10049428:	000b      	movs	r3, r1
1004942a:	f7f8 fb03 	bl	10041a34 <__aeabi_ddiv>
1004942e:	e7e8      	b.n	10049402 <__ieee754_sqrt+0x26>
10049430:	150b      	asrs	r3, r1, #20
10049432:	d10f      	bne.n	10049454 <__ieee754_sqrt+0x78>
10049434:	2300      	movs	r3, #0
10049436:	2900      	cmp	r1, #0
10049438:	d06f      	beq.n	1004951a <__ieee754_sqrt+0x13e>
1004943a:	2480      	movs	r4, #128	; 0x80
1004943c:	2000      	movs	r0, #0
1004943e:	0364      	lsls	r4, r4, #13
10049440:	4221      	tst	r1, r4
10049442:	d06e      	beq.n	10049522 <__ieee754_sqrt+0x146>
10049444:	1e44      	subs	r4, r0, #1
10049446:	1b1b      	subs	r3, r3, r4
10049448:	2420      	movs	r4, #32
1004944a:	0015      	movs	r5, r2
1004944c:	1a24      	subs	r4, r4, r0
1004944e:	40e5      	lsrs	r5, r4
10049450:	4082      	lsls	r2, r0
10049452:	4329      	orrs	r1, r5
10049454:	4837      	ldr	r0, [pc, #220]	; (10049534 <__ieee754_sqrt+0x158>)
10049456:	0309      	lsls	r1, r1, #12
10049458:	1818      	adds	r0, r3, r0
1004945a:	2380      	movs	r3, #128	; 0x80
1004945c:	0b09      	lsrs	r1, r1, #12
1004945e:	035b      	lsls	r3, r3, #13
10049460:	4319      	orrs	r1, r3
10049462:	07c3      	lsls	r3, r0, #31
10049464:	d503      	bpl.n	1004946e <__ieee754_sqrt+0x92>
10049466:	0fd3      	lsrs	r3, r2, #31
10049468:	0049      	lsls	r1, r1, #1
1004946a:	1859      	adds	r1, r3, r1
1004946c:	0052      	lsls	r2, r2, #1
1004946e:	2400      	movs	r4, #0
10049470:	1043      	asrs	r3, r0, #1
10049472:	9301      	str	r3, [sp, #4]
10049474:	0fd3      	lsrs	r3, r2, #31
10049476:	185b      	adds	r3, r3, r1
10049478:	2580      	movs	r5, #128	; 0x80
1004947a:	185b      	adds	r3, r3, r1
1004947c:	0020      	movs	r0, r4
1004947e:	2116      	movs	r1, #22
10049480:	0052      	lsls	r2, r2, #1
10049482:	03ad      	lsls	r5, r5, #14
10049484:	1946      	adds	r6, r0, r5
10049486:	429e      	cmp	r6, r3
10049488:	dc02      	bgt.n	10049490 <__ieee754_sqrt+0xb4>
1004948a:	1970      	adds	r0, r6, r5
1004948c:	1b9b      	subs	r3, r3, r6
1004948e:	1964      	adds	r4, r4, r5
10049490:	0fd6      	lsrs	r6, r2, #31
10049492:	005b      	lsls	r3, r3, #1
10049494:	3901      	subs	r1, #1
10049496:	18f3      	adds	r3, r6, r3
10049498:	0052      	lsls	r2, r2, #1
1004949a:	086d      	lsrs	r5, r5, #1
1004949c:	2900      	cmp	r1, #0
1004949e:	d1f1      	bne.n	10049484 <__ieee754_sqrt+0xa8>
100494a0:	2520      	movs	r5, #32
100494a2:	2680      	movs	r6, #128	; 0x80
100494a4:	46ac      	mov	ip, r5
100494a6:	9100      	str	r1, [sp, #0]
100494a8:	0636      	lsls	r6, r6, #24
100494aa:	9d00      	ldr	r5, [sp, #0]
100494ac:	1977      	adds	r7, r6, r5
100494ae:	4283      	cmp	r3, r0
100494b0:	dc02      	bgt.n	100494b8 <__ieee754_sqrt+0xdc>
100494b2:	d112      	bne.n	100494da <__ieee754_sqrt+0xfe>
100494b4:	4297      	cmp	r7, r2
100494b6:	d810      	bhi.n	100494da <__ieee754_sqrt+0xfe>
100494b8:	19bd      	adds	r5, r7, r6
100494ba:	9500      	str	r5, [sp, #0]
100494bc:	0005      	movs	r5, r0
100494be:	2f00      	cmp	r7, #0
100494c0:	da03      	bge.n	100494ca <__ieee754_sqrt+0xee>
100494c2:	9d00      	ldr	r5, [sp, #0]
100494c4:	43ed      	mvns	r5, r5
100494c6:	0fed      	lsrs	r5, r5, #31
100494c8:	1945      	adds	r5, r0, r5
100494ca:	1a1b      	subs	r3, r3, r0
100494cc:	42ba      	cmp	r2, r7
100494ce:	4180      	sbcs	r0, r0
100494d0:	4240      	negs	r0, r0
100494d2:	1a1b      	subs	r3, r3, r0
100494d4:	0028      	movs	r0, r5
100494d6:	1bd2      	subs	r2, r2, r7
100494d8:	1989      	adds	r1, r1, r6
100494da:	0fd5      	lsrs	r5, r2, #31
100494dc:	18ed      	adds	r5, r5, r3
100494de:	18eb      	adds	r3, r5, r3
100494e0:	2501      	movs	r5, #1
100494e2:	426d      	negs	r5, r5
100494e4:	44ac      	add	ip, r5
100494e6:	4665      	mov	r5, ip
100494e8:	0052      	lsls	r2, r2, #1
100494ea:	0876      	lsrs	r6, r6, #1
100494ec:	2d00      	cmp	r5, #0
100494ee:	d1dc      	bne.n	100494aa <__ieee754_sqrt+0xce>
100494f0:	4313      	orrs	r3, r2
100494f2:	d003      	beq.n	100494fc <__ieee754_sqrt+0x120>
100494f4:	1c4b      	adds	r3, r1, #1
100494f6:	d117      	bne.n	10049528 <__ieee754_sqrt+0x14c>
100494f8:	4661      	mov	r1, ip
100494fa:	3401      	adds	r4, #1
100494fc:	4b0e      	ldr	r3, [pc, #56]	; (10049538 <__ieee754_sqrt+0x15c>)
100494fe:	1060      	asrs	r0, r4, #1
10049500:	18c0      	adds	r0, r0, r3
10049502:	0849      	lsrs	r1, r1, #1
10049504:	07e3      	lsls	r3, r4, #31
10049506:	d502      	bpl.n	1004950e <__ieee754_sqrt+0x132>
10049508:	2380      	movs	r3, #128	; 0x80
1004950a:	061b      	lsls	r3, r3, #24
1004950c:	4319      	orrs	r1, r3
1004950e:	9b01      	ldr	r3, [sp, #4]
10049510:	000d      	movs	r5, r1
10049512:	051c      	lsls	r4, r3, #20
10049514:	1823      	adds	r3, r4, r0
10049516:	001c      	movs	r4, r3
10049518:	e775      	b.n	10049406 <__ieee754_sqrt+0x2a>
1004951a:	0ad1      	lsrs	r1, r2, #11
1004951c:	3b15      	subs	r3, #21
1004951e:	0552      	lsls	r2, r2, #21
10049520:	e789      	b.n	10049436 <__ieee754_sqrt+0x5a>
10049522:	0049      	lsls	r1, r1, #1
10049524:	3001      	adds	r0, #1
10049526:	e78b      	b.n	10049440 <__ieee754_sqrt+0x64>
10049528:	2301      	movs	r3, #1
1004952a:	3101      	adds	r1, #1
1004952c:	4399      	bics	r1, r3
1004952e:	e7e5      	b.n	100494fc <__ieee754_sqrt+0x120>
10049530:	7ff00000 	.word	0x7ff00000
10049534:	fffffc01 	.word	0xfffffc01
10049538:	3fe00000 	.word	0x3fe00000

1004953c <fabs>:
1004953c:	0049      	lsls	r1, r1, #1
1004953e:	084b      	lsrs	r3, r1, #1
10049540:	0019      	movs	r1, r3
10049542:	4770      	bx	lr

10049544 <finite>:
10049544:	0048      	lsls	r0, r1, #1
10049546:	4b02      	ldr	r3, [pc, #8]	; (10049550 <finite+0xc>)
10049548:	0840      	lsrs	r0, r0, #1
1004954a:	18c0      	adds	r0, r0, r3
1004954c:	0fc0      	lsrs	r0, r0, #31
1004954e:	4770      	bx	lr
10049550:	80100000 	.word	0x80100000

10049554 <matherr>:
10049554:	2000      	movs	r0, #0
10049556:	4770      	bx	lr

10049558 <nan>:
10049558:	2000      	movs	r0, #0
1004955a:	4901      	ldr	r1, [pc, #4]	; (10049560 <nan+0x8>)
1004955c:	4770      	bx	lr
1004955e:	46c0      	nop			; (mov r8, r8)
10049560:	7ff80000 	.word	0x7ff80000

10049564 <rint>:
10049564:	b5f0      	push	{r4, r5, r6, r7, lr}
10049566:	004e      	lsls	r6, r1, #1
10049568:	0d76      	lsrs	r6, r6, #21
1004956a:	46b4      	mov	ip, r6
1004956c:	4e3d      	ldr	r6, [pc, #244]	; (10049664 <rint+0x100>)
1004956e:	b085      	sub	sp, #20
10049570:	4466      	add	r6, ip
10049572:	0005      	movs	r5, r0
10049574:	000b      	movs	r3, r1
10049576:	9101      	str	r1, [sp, #4]
10049578:	0002      	movs	r2, r0
1004957a:	0fcc      	lsrs	r4, r1, #31
1004957c:	2e13      	cmp	r6, #19
1004957e:	dc55      	bgt.n	1004962c <rint+0xc8>
10049580:	2e00      	cmp	r6, #0
10049582:	da28      	bge.n	100495d6 <rint+0x72>
10049584:	004a      	lsls	r2, r1, #1
10049586:	0852      	lsrs	r2, r2, #1
10049588:	4302      	orrs	r2, r0
1004958a:	d022      	beq.n	100495d2 <rint+0x6e>
1004958c:	030a      	lsls	r2, r1, #12
1004958e:	0b12      	lsrs	r2, r2, #12
10049590:	4315      	orrs	r5, r2
10049592:	426a      	negs	r2, r5
10049594:	432a      	orrs	r2, r5
10049596:	2580      	movs	r5, #128	; 0x80
10049598:	0c4b      	lsrs	r3, r1, #17
1004959a:	0b12      	lsrs	r2, r2, #12
1004959c:	032d      	lsls	r5, r5, #12
1004959e:	045b      	lsls	r3, r3, #17
100495a0:	402a      	ands	r2, r5
100495a2:	431a      	orrs	r2, r3
100495a4:	4b30      	ldr	r3, [pc, #192]	; (10049668 <rint+0x104>)
100495a6:	0011      	movs	r1, r2
100495a8:	00e2      	lsls	r2, r4, #3
100495aa:	189b      	adds	r3, r3, r2
100495ac:	681e      	ldr	r6, [r3, #0]
100495ae:	685f      	ldr	r7, [r3, #4]
100495b0:	0032      	movs	r2, r6
100495b2:	003b      	movs	r3, r7
100495b4:	f7f7 ff2e 	bl	10041414 <__aeabi_dadd>
100495b8:	9002      	str	r0, [sp, #8]
100495ba:	9103      	str	r1, [sp, #12]
100495bc:	9802      	ldr	r0, [sp, #8]
100495be:	9903      	ldr	r1, [sp, #12]
100495c0:	003b      	movs	r3, r7
100495c2:	0032      	movs	r2, r6
100495c4:	f7f9 f8ea 	bl	1004279c <__aeabi_dsub>
100495c8:	004b      	lsls	r3, r1, #1
100495ca:	085b      	lsrs	r3, r3, #1
100495cc:	07e4      	lsls	r4, r4, #31
100495ce:	4323      	orrs	r3, r4
100495d0:	0019      	movs	r1, r3
100495d2:	b005      	add	sp, #20
100495d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100495d6:	4d25      	ldr	r5, [pc, #148]	; (1004966c <rint+0x108>)
100495d8:	4135      	asrs	r5, r6
100495da:	002f      	movs	r7, r5
100495dc:	400f      	ands	r7, r1
100495de:	4307      	orrs	r7, r0
100495e0:	d0f7      	beq.n	100495d2 <rint+0x6e>
100495e2:	086d      	lsrs	r5, r5, #1
100495e4:	0028      	movs	r0, r5
100495e6:	4008      	ands	r0, r1
100495e8:	4310      	orrs	r0, r2
100495ea:	2200      	movs	r2, #0
100495ec:	4290      	cmp	r0, r2
100495ee:	d009      	beq.n	10049604 <rint+0xa0>
100495f0:	2e13      	cmp	r6, #19
100495f2:	d101      	bne.n	100495f8 <rint+0x94>
100495f4:	2280      	movs	r2, #128	; 0x80
100495f6:	0612      	lsls	r2, r2, #24
100495f8:	2780      	movs	r7, #128	; 0x80
100495fa:	02ff      	lsls	r7, r7, #11
100495fc:	4137      	asrs	r7, r6
100495fe:	43ab      	bics	r3, r5
10049600:	431f      	orrs	r7, r3
10049602:	9701      	str	r7, [sp, #4]
10049604:	4b18      	ldr	r3, [pc, #96]	; (10049668 <rint+0x104>)
10049606:	00e4      	lsls	r4, r4, #3
10049608:	191c      	adds	r4, r3, r4
1004960a:	6865      	ldr	r5, [r4, #4]
1004960c:	6824      	ldr	r4, [r4, #0]
1004960e:	9901      	ldr	r1, [sp, #4]
10049610:	002b      	movs	r3, r5
10049612:	0010      	movs	r0, r2
10049614:	0022      	movs	r2, r4
10049616:	f7f7 fefd 	bl	10041414 <__aeabi_dadd>
1004961a:	9002      	str	r0, [sp, #8]
1004961c:	9103      	str	r1, [sp, #12]
1004961e:	9802      	ldr	r0, [sp, #8]
10049620:	9903      	ldr	r1, [sp, #12]
10049622:	0022      	movs	r2, r4
10049624:	002b      	movs	r3, r5
10049626:	f7f9 f8b9 	bl	1004279c <__aeabi_dsub>
1004962a:	e7d2      	b.n	100495d2 <rint+0x6e>
1004962c:	2e33      	cmp	r6, #51	; 0x33
1004962e:	dd08      	ble.n	10049642 <rint+0xde>
10049630:	2380      	movs	r3, #128	; 0x80
10049632:	00db      	lsls	r3, r3, #3
10049634:	429e      	cmp	r6, r3
10049636:	d1cc      	bne.n	100495d2 <rint+0x6e>
10049638:	0002      	movs	r2, r0
1004963a:	000b      	movs	r3, r1
1004963c:	f7f7 feea 	bl	10041414 <__aeabi_dadd>
10049640:	e7c7      	b.n	100495d2 <rint+0x6e>
10049642:	2601      	movs	r6, #1
10049644:	4d0a      	ldr	r5, [pc, #40]	; (10049670 <rint+0x10c>)
10049646:	4276      	negs	r6, r6
10049648:	4465      	add	r5, ip
1004964a:	40ee      	lsrs	r6, r5
1004964c:	4206      	tst	r6, r0
1004964e:	d0c0      	beq.n	100495d2 <rint+0x6e>
10049650:	0876      	lsrs	r6, r6, #1
10049652:	4206      	tst	r6, r0
10049654:	d0d6      	beq.n	10049604 <rint+0xa0>
10049656:	2380      	movs	r3, #128	; 0x80
10049658:	05db      	lsls	r3, r3, #23
1004965a:	412b      	asrs	r3, r5
1004965c:	43b2      	bics	r2, r6
1004965e:	431a      	orrs	r2, r3
10049660:	e7d0      	b.n	10049604 <rint+0xa0>
10049662:	46c0      	nop			; (mov r8, r8)
10049664:	fffffc01 	.word	0xfffffc01
10049668:	10058f18 	.word	0x10058f18
1004966c:	000fffff 	.word	0x000fffff
10049670:	fffffbed 	.word	0xfffffbed

10049674 <scalbn>:
10049674:	004b      	lsls	r3, r1, #1
10049676:	b570      	push	{r4, r5, r6, lr}
10049678:	0d5b      	lsrs	r3, r3, #21
1004967a:	0014      	movs	r4, r2
1004967c:	000a      	movs	r2, r1
1004967e:	2b00      	cmp	r3, #0
10049680:	d10e      	bne.n	100496a0 <scalbn+0x2c>
10049682:	004b      	lsls	r3, r1, #1
10049684:	085b      	lsrs	r3, r3, #1
10049686:	4303      	orrs	r3, r0
10049688:	d011      	beq.n	100496ae <scalbn+0x3a>
1004968a:	2200      	movs	r2, #0
1004968c:	4b20      	ldr	r3, [pc, #128]	; (10049710 <scalbn+0x9c>)
1004968e:	f7f8 fe05 	bl	1004229c <__aeabi_dmul>
10049692:	4b20      	ldr	r3, [pc, #128]	; (10049714 <scalbn+0xa0>)
10049694:	000a      	movs	r2, r1
10049696:	429c      	cmp	r4, r3
10049698:	da0a      	bge.n	100496b0 <scalbn+0x3c>
1004969a:	4a1f      	ldr	r2, [pc, #124]	; (10049718 <scalbn+0xa4>)
1004969c:	4b1f      	ldr	r3, [pc, #124]	; (1004971c <scalbn+0xa8>)
1004969e:	e016      	b.n	100496ce <scalbn+0x5a>
100496a0:	4d1f      	ldr	r5, [pc, #124]	; (10049720 <scalbn+0xac>)
100496a2:	42ab      	cmp	r3, r5
100496a4:	d107      	bne.n	100496b6 <scalbn+0x42>
100496a6:	0002      	movs	r2, r0
100496a8:	000b      	movs	r3, r1
100496aa:	f7f7 feb3 	bl	10041414 <__aeabi_dadd>
100496ae:	bd70      	pop	{r4, r5, r6, pc}
100496b0:	004b      	lsls	r3, r1, #1
100496b2:	0d5b      	lsrs	r3, r3, #21
100496b4:	3b36      	subs	r3, #54	; 0x36
100496b6:	4d1b      	ldr	r5, [pc, #108]	; (10049724 <scalbn+0xb0>)
100496b8:	18e3      	adds	r3, r4, r3
100496ba:	42ab      	cmp	r3, r5
100496bc:	dd0a      	ble.n	100496d4 <scalbn+0x60>
100496be:	0002      	movs	r2, r0
100496c0:	000b      	movs	r3, r1
100496c2:	4819      	ldr	r0, [pc, #100]	; (10049728 <scalbn+0xb4>)
100496c4:	4919      	ldr	r1, [pc, #100]	; (1004972c <scalbn+0xb8>)
100496c6:	f000 f839 	bl	1004973c <copysign>
100496ca:	4a17      	ldr	r2, [pc, #92]	; (10049728 <scalbn+0xb4>)
100496cc:	4b17      	ldr	r3, [pc, #92]	; (1004972c <scalbn+0xb8>)
100496ce:	f7f8 fde5 	bl	1004229c <__aeabi_dmul>
100496d2:	e7ec      	b.n	100496ae <scalbn+0x3a>
100496d4:	2b00      	cmp	r3, #0
100496d6:	dd05      	ble.n	100496e4 <scalbn+0x70>
100496d8:	4c15      	ldr	r4, [pc, #84]	; (10049730 <scalbn+0xbc>)
100496da:	051b      	lsls	r3, r3, #20
100496dc:	4022      	ands	r2, r4
100496de:	431a      	orrs	r2, r3
100496e0:	0011      	movs	r1, r2
100496e2:	e7e4      	b.n	100496ae <scalbn+0x3a>
100496e4:	001d      	movs	r5, r3
100496e6:	3535      	adds	r5, #53	; 0x35
100496e8:	da09      	bge.n	100496fe <scalbn+0x8a>
100496ea:	4b12      	ldr	r3, [pc, #72]	; (10049734 <scalbn+0xc0>)
100496ec:	0002      	movs	r2, r0
100496ee:	429c      	cmp	r4, r3
100496f0:	dce6      	bgt.n	100496c0 <scalbn+0x4c>
100496f2:	000b      	movs	r3, r1
100496f4:	4808      	ldr	r0, [pc, #32]	; (10049718 <scalbn+0xa4>)
100496f6:	4909      	ldr	r1, [pc, #36]	; (1004971c <scalbn+0xa8>)
100496f8:	f000 f820 	bl	1004973c <copysign>
100496fc:	e7cd      	b.n	1004969a <scalbn+0x26>
100496fe:	4c0c      	ldr	r4, [pc, #48]	; (10049730 <scalbn+0xbc>)
10049700:	3336      	adds	r3, #54	; 0x36
10049702:	4022      	ands	r2, r4
10049704:	051b      	lsls	r3, r3, #20
10049706:	4313      	orrs	r3, r2
10049708:	0019      	movs	r1, r3
1004970a:	2200      	movs	r2, #0
1004970c:	4b0a      	ldr	r3, [pc, #40]	; (10049738 <scalbn+0xc4>)
1004970e:	e7de      	b.n	100496ce <scalbn+0x5a>
10049710:	43500000 	.word	0x43500000
10049714:	ffff3cb0 	.word	0xffff3cb0
10049718:	c2f8f359 	.word	0xc2f8f359
1004971c:	01a56e1f 	.word	0x01a56e1f
10049720:	000007ff 	.word	0x000007ff
10049724:	000007fe 	.word	0x000007fe
10049728:	8800759c 	.word	0x8800759c
1004972c:	7e37e43c 	.word	0x7e37e43c
10049730:	800fffff 	.word	0x800fffff
10049734:	0000c350 	.word	0x0000c350
10049738:	3c900000 	.word	0x3c900000

1004973c <copysign>:
1004973c:	b530      	push	{r4, r5, lr}
1004973e:	004a      	lsls	r2, r1, #1
10049740:	0fdb      	lsrs	r3, r3, #31
10049742:	07db      	lsls	r3, r3, #31
10049744:	0852      	lsrs	r2, r2, #1
10049746:	431a      	orrs	r2, r3
10049748:	0011      	movs	r1, r2
1004974a:	bd30      	pop	{r4, r5, pc}

1004974c <__errno>:
1004974c:	4b01      	ldr	r3, [pc, #4]	; (10049754 <__errno+0x8>)
1004974e:	6818      	ldr	r0, [r3, #0]
10049750:	4770      	bx	lr
10049752:	46c0      	nop			; (mov r8, r8)
10049754:	20000998 	.word	0x20000998

10049758 <_aci_gap_set_discoverable_param_check>:
10049758:	b5f0      	push	{r4, r5, r6, r7, lr}
1004975a:	4605      	mov	r5, r0
1004975c:	2000      	movs	r0, #0
1004975e:	460f      	mov	r7, r1
10049760:	9e07      	ldr	r6, [sp, #28]
10049762:	9c05      	ldr	r4, [sp, #20]
10049764:	4317      	orrs	r7, r2
10049766:	d009      	beq.n	1004977c <_aci_gap_set_discoverable_param_check+0x24>
10049768:	2920      	cmp	r1, #32
1004976a:	d305      	bcc.n	10049778 <_aci_gap_set_discoverable_param_check+0x20>
1004976c:	2701      	movs	r7, #1
1004976e:	03bf      	lsls	r7, r7, #14
10049770:	42ba      	cmp	r2, r7
10049772:	d801      	bhi.n	10049778 <_aci_gap_set_discoverable_param_check+0x20>
10049774:	4291      	cmp	r1, r2
10049776:	d901      	bls.n	1004977c <_aci_gap_set_discoverable_param_check+0x24>
10049778:	2042      	movs	r0, #66	; 0x42
1004977a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004977c:	4619      	mov	r1, r3
1004977e:	4321      	orrs	r1, r4
10049780:	d00a      	beq.n	10049798 <_aci_gap_set_discoverable_param_check+0x40>
10049782:	429c      	cmp	r4, r3
10049784:	d3f8      	bcc.n	10049778 <_aci_gap_set_discoverable_param_check+0x20>
10049786:	4909      	ldr	r1, [pc, #36]	; (100497ac <_aci_gap_set_discoverable_param_check+0x54>)
10049788:	428c      	cmp	r4, r1
1004978a:	d003      	beq.n	10049794 <_aci_gap_set_discoverable_param_check+0x3c>
1004978c:	4908      	ldr	r1, [pc, #32]	; (100497b0 <_aci_gap_set_discoverable_param_check+0x58>)
1004978e:	1fa4      	subs	r4, r4, #6
10049790:	428c      	cmp	r4, r1
10049792:	d2f1      	bcs.n	10049778 <_aci_gap_set_discoverable_param_check+0x20>
10049794:	2b06      	cmp	r3, #6
10049796:	d3ef      	bcc.n	10049778 <_aci_gap_set_discoverable_param_check+0x20>
10049798:	2d00      	cmp	r5, #0
1004979a:	d003      	beq.n	100497a4 <_aci_gap_set_discoverable_param_check+0x4c>
1004979c:	2d02      	cmp	r5, #2
1004979e:	d001      	beq.n	100497a4 <_aci_gap_set_discoverable_param_check+0x4c>
100497a0:	2d03      	cmp	r5, #3
100497a2:	d1e9      	bne.n	10049778 <_aci_gap_set_discoverable_param_check+0x20>
100497a4:	2e03      	cmp	r6, #3
100497a6:	d8e7      	bhi.n	10049778 <_aci_gap_set_discoverable_param_check+0x20>
100497a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100497aa:	0000      	.short	0x0000
100497ac:	0000ffff 	.word	0x0000ffff
100497b0:	00000c7b 	.word	0x00000c7b

100497b4 <aci_gap_init>:
100497b4:	b57c      	push	{r2, r3, r4, r5, r6, lr}
100497b6:	9d06      	ldr	r5, [sp, #24]
100497b8:	9c07      	ldr	r4, [sp, #28]
100497ba:	2800      	cmp	r0, #0
100497bc:	d005      	beq.n	100497ca <aci_gap_init+0x16>
100497be:	0786      	lsls	r6, r0, #30
100497c0:	d105      	bne.n	100497ce <aci_gap_init+0x1a>
100497c2:	0746      	lsls	r6, r0, #29
100497c4:	d403      	bmi.n	100497ce <aci_gap_init+0x1a>
100497c6:	0706      	lsls	r6, r0, #28
100497c8:	d401      	bmi.n	100497ce <aci_gap_init+0x1a>
100497ca:	2042      	movs	r0, #66	; 0x42
100497cc:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
100497ce:	2900      	cmp	r1, #0
100497d0:	d003      	beq.n	100497da <aci_gap_init+0x26>
100497d2:	2901      	cmp	r1, #1
100497d4:	d001      	beq.n	100497da <aci_gap_init+0x26>
100497d6:	2902      	cmp	r1, #2
100497d8:	d1f7      	bne.n	100497ca <aci_gap_init+0x16>
100497da:	9500      	str	r5, [sp, #0]
100497dc:	9401      	str	r4, [sp, #4]
100497de:	f000 fb1b 	bl	10049e18 <GAP_Init>
100497e2:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

100497e4 <aci_gap_set_authentication_requirement>:
100497e4:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100497e6:	b083      	sub	sp, #12
100497e8:	9803      	ldr	r0, [sp, #12]
100497ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
100497ec:	461e      	mov	r6, r3
100497ee:	4614      	mov	r4, r2
100497f0:	460f      	mov	r7, r1
100497f2:	2800      	cmp	r0, #0
100497f4:	d004      	beq.n	10049800 <aci_gap_set_authentication_requirement+0x1c>
100497f6:	2801      	cmp	r0, #1
100497f8:	d002      	beq.n	10049800 <aci_gap_set_authentication_requirement+0x1c>
100497fa:	2042      	movs	r0, #66	; 0x42
100497fc:	b007      	add	sp, #28
100497fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
10049800:	2f00      	cmp	r7, #0
10049802:	d001      	beq.n	10049808 <aci_gap_set_authentication_requirement+0x24>
10049804:	2f01      	cmp	r7, #1
10049806:	d1f8      	bne.n	100497fa <aci_gap_set_authentication_requirement+0x16>
10049808:	1fe8      	subs	r0, r5, #7
1004980a:	280a      	cmp	r0, #10
1004980c:	d2f5      	bcs.n	100497fa <aci_gap_set_authentication_requirement+0x16>
1004980e:	980d      	ldr	r0, [sp, #52]	; 0x34
10049810:	2810      	cmp	r0, #16
10049812:	d8f2      	bhi.n	100497fa <aci_gap_set_authentication_requirement+0x16>
10049814:	42a8      	cmp	r0, r5
10049816:	d3f0      	bcc.n	100497fa <aci_gap_set_authentication_requirement+0x16>
10049818:	980e      	ldr	r0, [sp, #56]	; 0x38
1004981a:	2800      	cmp	r0, #0
1004981c:	d001      	beq.n	10049822 <aci_gap_set_authentication_requirement+0x3e>
1004981e:	2801      	cmp	r0, #1
10049820:	d1eb      	bne.n	100497fa <aci_gap_set_authentication_requirement+0x16>
10049822:	4914      	ldr	r1, [pc, #80]	; (10049874 <aci_gap_set_authentication_requirement+0x90>)
10049824:	980f      	ldr	r0, [sp, #60]	; 0x3c
10049826:	4288      	cmp	r0, r1
10049828:	d8e7      	bhi.n	100497fa <aci_gap_set_authentication_requirement+0x16>
1004982a:	9810      	ldr	r0, [sp, #64]	; 0x40
1004982c:	2800      	cmp	r0, #0
1004982e:	d001      	beq.n	10049834 <aci_gap_set_authentication_requirement+0x50>
10049830:	2801      	cmp	r0, #1
10049832:	d1e2      	bne.n	100497fa <aci_gap_set_authentication_requirement+0x16>
10049834:	f00b fbf6 	bl	10055024 <secure_connections_csr_ucfg>
10049838:	2801      	cmp	r0, #1
1004983a:	d004      	beq.n	10049846 <aci_gap_set_authentication_requirement+0x62>
1004983c:	4620      	mov	r0, r4
1004983e:	4330      	orrs	r0, r6
10049840:	d005      	beq.n	1004984e <aci_gap_set_authentication_requirement+0x6a>
10049842:	2011      	movs	r0, #17
10049844:	e7da      	b.n	100497fc <aci_gap_set_authentication_requirement+0x18>
10049846:	2c02      	cmp	r4, #2
10049848:	d8d7      	bhi.n	100497fa <aci_gap_set_authentication_requirement+0x16>
1004984a:	2e01      	cmp	r6, #1
1004984c:	d8d5      	bhi.n	100497fa <aci_gap_set_authentication_requirement+0x16>
1004984e:	4668      	mov	r0, sp
10049850:	9903      	ldr	r1, [sp, #12]
10049852:	7001      	strb	r1, [r0, #0]
10049854:	7047      	strb	r7, [r0, #1]
10049856:	7284      	strb	r4, [r0, #10]
10049858:	72c6      	strb	r6, [r0, #11]
1004985a:	7085      	strb	r5, [r0, #2]
1004985c:	990d      	ldr	r1, [sp, #52]	; 0x34
1004985e:	70c1      	strb	r1, [r0, #3]
10049860:	990e      	ldr	r1, [sp, #56]	; 0x38
10049862:	7201      	strb	r1, [r0, #8]
10049864:	980f      	ldr	r0, [sp, #60]	; 0x3c
10049866:	9001      	str	r0, [sp, #4]
10049868:	4668      	mov	r0, sp
1004986a:	9910      	ldr	r1, [sp, #64]	; 0x40
1004986c:	7241      	strb	r1, [r0, #9]
1004986e:	f00a ffc9 	bl	10054804 <SMP_set_authentication_req>
10049872:	e7c3      	b.n	100497fc <aci_gap_set_authentication_requirement+0x18>
10049874:	000f423f 	.word	0x000f423f

10049878 <aci_gap_set_discoverable>:
10049878:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004987a:	b087      	sub	sp, #28
1004987c:	9d10      	ldr	r5, [sp, #64]	; 0x40
1004987e:	9e15      	ldr	r6, [sp, #84]	; 0x54
10049880:	9c16      	ldr	r4, [sp, #88]	; 0x58
10049882:	9301      	str	r3, [sp, #4]
10049884:	9502      	str	r5, [sp, #8]
10049886:	9400      	str	r4, [sp, #0]
10049888:	a807      	add	r0, sp, #28
1004988a:	c807      	ldmia	r0, {r0, r1, r2}
1004988c:	461f      	mov	r7, r3
1004988e:	4633      	mov	r3, r6
10049890:	f7ff ff62 	bl	10049758 <_aci_gap_set_discoverable_param_check>
10049894:	2800      	cmp	r0, #0
10049896:	d10e      	bne.n	100498b6 <aci_gap_set_discoverable+0x3e>
10049898:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004989a:	9914      	ldr	r1, [sp, #80]	; 0x50
1004989c:	aa03      	add	r2, sp, #12
1004989e:	9406      	str	r4, [sp, #24]
100498a0:	c243      	stmia	r2!, {r0, r1, r6}
100498a2:	9811      	ldr	r0, [sp, #68]	; 0x44
100498a4:	9912      	ldr	r1, [sp, #72]	; 0x48
100498a6:	9001      	str	r0, [sp, #4]
100498a8:	9500      	str	r5, [sp, #0]
100498aa:	9102      	str	r1, [sp, #8]
100498ac:	a807      	add	r0, sp, #28
100498ae:	c807      	ldmia	r0, {r0, r1, r2}
100498b0:	463b      	mov	r3, r7
100498b2:	f000 fc23 	bl	1004a0fc <GAP_Set_Discoverable_Mode>
100498b6:	b00b      	add	sp, #44	; 0x2c
100498b8:	bdf0      	pop	{r4, r5, r6, r7, pc}

100498ba <aci_gap_set_non_discoverable>:
100498ba:	b510      	push	{r4, lr}
100498bc:	f000 fc3a 	bl	1004a134 <GAP_Set_Non_Discoverable_Mode>
100498c0:	0004      	movs	r4, r0
100498c2:	d102      	bne.n	100498ca <aci_gap_set_non_discoverable+0x10>
100498c4:	2001      	movs	r0, #1
100498c6:	f007 f9f1 	bl	10050cac <GAP_Delete_ADType>
100498ca:	4620      	mov	r0, r4
100498cc:	bd10      	pop	{r4, pc}

100498ce <aci_gap_terminate>:
100498ce:	b510      	push	{r4, lr}
100498d0:	f007 fa7c 	bl	10050dcc <GAP_Terminate_Link>
100498d4:	bd10      	pop	{r4, pc}

100498d6 <_load_uuid>:
100498d6:	b570      	push	{r4, r5, r6, lr}
100498d8:	461c      	mov	r4, r3
100498da:	4613      	mov	r3, r2
100498dc:	460d      	mov	r5, r1
100498de:	2c01      	cmp	r4, #1
100498e0:	d003      	beq.n	100498ea <_load_uuid+0x14>
100498e2:	2c02      	cmp	r4, #2
100498e4:	d003      	beq.n	100498ee <_load_uuid+0x18>
100498e6:	2042      	movs	r0, #66	; 0x42
100498e8:	bd70      	pop	{r4, r5, r6, pc}
100498ea:	2202      	movs	r2, #2
100498ec:	e000      	b.n	100498f0 <_load_uuid+0x1a>
100498ee:	2210      	movs	r2, #16
100498f0:	4619      	mov	r1, r3
100498f2:	f7f9 fc64 	bl	100431be <Osal_MemCpy>
100498f6:	702c      	strb	r4, [r5, #0]
100498f8:	2000      	movs	r0, #0
100498fa:	bd70      	pop	{r4, r5, r6, pc}

100498fc <aci_gatt_add_char>:
100498fc:	b5f0      	push	{r4, r5, r6, r7, lr}
100498fe:	b087      	sub	sp, #28
10049900:	461c      	mov	r4, r3
10049902:	460b      	mov	r3, r1
10049904:	4605      	mov	r5, r0
10049906:	a900      	add	r1, sp, #0
10049908:	3102      	adds	r1, #2
1004990a:	a801      	add	r0, sp, #4
1004990c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
1004990e:	9e0d      	ldr	r6, [sp, #52]	; 0x34
10049910:	f7ff ffe1 	bl	100498d6 <_load_uuid>
10049914:	2800      	cmp	r0, #0
10049916:	d10e      	bne.n	10049936 <aci_gatt_add_char+0x3a>
10049918:	4668      	mov	r0, sp
1004991a:	8005      	strh	r5, [r0, #0]
1004991c:	8284      	strh	r4, [r0, #20]
1004991e:	7587      	strb	r7, [r0, #22]
10049920:	75c6      	strb	r6, [r0, #23]
10049922:	990e      	ldr	r1, [sp, #56]	; 0x38
10049924:	7601      	strb	r1, [r0, #24]
10049926:	990f      	ldr	r1, [sp, #60]	; 0x3c
10049928:	7641      	strb	r1, [r0, #25]
1004992a:	9910      	ldr	r1, [sp, #64]	; 0x40
1004992c:	7681      	strb	r1, [r0, #26]
1004992e:	4669      	mov	r1, sp
10049930:	9811      	ldr	r0, [sp, #68]	; 0x44
10049932:	f001 f963 	bl	1004abfc <Gatt_Add_Characteristic>
10049936:	b007      	add	sp, #28
10049938:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004993a <aci_gatt_add_service>:
1004993a:	b570      	push	{r4, r5, r6, lr}
1004993c:	b086      	sub	sp, #24
1004993e:	4614      	mov	r4, r2
10049940:	461d      	mov	r5, r3
10049942:	460a      	mov	r2, r1
10049944:	4603      	mov	r3, r0
10049946:	4669      	mov	r1, sp
10049948:	1c88      	adds	r0, r1, #2
1004994a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
1004994c:	f7ff ffc3 	bl	100498d6 <_load_uuid>
10049950:	2800      	cmp	r0, #0
10049952:	d104      	bne.n	1004995e <aci_gatt_add_service+0x24>
10049954:	2c01      	cmp	r4, #1
10049956:	d004      	beq.n	10049962 <aci_gatt_add_service+0x28>
10049958:	2c02      	cmp	r4, #2
1004995a:	d002      	beq.n	10049962 <aci_gatt_add_service+0x28>
1004995c:	2042      	movs	r0, #66	; 0x42
1004995e:	b006      	add	sp, #24
10049960:	bd70      	pop	{r4, r5, r6, pc}
10049962:	4623      	mov	r3, r4
10049964:	462a      	mov	r2, r5
10049966:	4669      	mov	r1, sp
10049968:	4630      	mov	r0, r6
1004996a:	f001 fb91 	bl	1004b090 <Gatt_Add_Service>
1004996e:	e7f6      	b.n	1004995e <aci_gatt_add_service+0x24>

10049970 <aci_gatt_allow_read>:
10049970:	b510      	push	{r4, lr}
10049972:	2200      	movs	r2, #0
10049974:	4611      	mov	r1, r2
10049976:	f001 fc3b 	bl	1004b1f0 <Gatt_Appl_Auth_For_Read>
1004997a:	bd10      	pop	{r4, pc}

1004997c <aci_gatt_init>:
1004997c:	b510      	push	{r4, lr}
1004997e:	f001 fe83 	bl	1004b688 <Gatt_Server_Init>
10049982:	bd10      	pop	{r4, pc}

10049984 <aci_gatt_update_char_value_ext>:
10049984:	b5f0      	push	{r4, r5, r6, r7, lr}
10049986:	b085      	sub	sp, #20
10049988:	4684      	mov	ip, r0
1004998a:	a80a      	add	r0, sp, #40	; 0x28
1004998c:	c8f0      	ldmia	r0!, {r4, r5, r6, r7}
1004998e:	4668      	mov	r0, sp
10049990:	8185      	strh	r5, [r0, #12]
10049992:	81c6      	strh	r6, [r0, #14]
10049994:	a803      	add	r0, sp, #12
10049996:	9001      	str	r0, [sp, #4]
10049998:	9702      	str	r7, [sp, #8]
1004999a:	9400      	str	r4, [sp, #0]
1004999c:	4660      	mov	r0, ip
1004999e:	f002 f95d 	bl	1004bc5c <Gatt_Update_Charac_Value_Ext>
100499a2:	b005      	add	sp, #20
100499a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

100499a6 <aci_hal_set_tx_power_level>:
100499a6:	b510      	push	{r4, lr}
100499a8:	f002 fea6 	bl	1004c6f8 <HAL_Set_TX_Power_Level>
100499ac:	bd10      	pop	{r4, pc}

100499ae <aci_hal_write_config_data>:
100499ae:	b510      	push	{r4, lr}
100499b0:	f002 fec4 	bl	1004c73c <HAL_Write_ConfigData>
100499b4:	bd10      	pop	{r4, pc}
	...

100499b8 <BTLE_StackTick>:
100499b8:	b570      	push	{r4, r5, r6, lr}
100499ba:	f003 f9a7 	bl	1004cd0c <Timer_ProcessQ>
100499be:	4c1d      	ldr	r4, [pc, #116]	; (10049a34 <BTLE_StackTick+0x7c>)
100499c0:	2501      	movs	r5, #1
100499c2:	6820      	ldr	r0, [r4, #0]
100499c4:	02ed      	lsls	r5, r5, #11
100499c6:	1941      	adds	r1, r0, r5
100499c8:	7909      	ldrb	r1, [r1, #4]
100499ca:	2900      	cmp	r1, #0
100499cc:	d109      	bne.n	100499e2 <BTLE_StackTick+0x2a>
100499ce:	30a0      	adds	r0, #160	; 0xa0
100499d0:	7900      	ldrb	r0, [r0, #4]
100499d2:	07c0      	lsls	r0, r0, #31
100499d4:	d027      	beq.n	10049a26 <BTLE_StackTick+0x6e>
100499d6:	f003 f81f 	bl	1004ca18 <hci_acl_Process_Q>
100499da:	f002 ffcb 	bl	1004c974 <Controller_Process_Q>
100499de:	f00b fb3b 	bl	10055058 <Events_Process_Q>
100499e2:	f000 f8ff 	bl	10049be4 <BlueNRG_Stack_Perform_Crystal_Check>
100499e6:	6820      	ldr	r0, [r4, #0]
100499e8:	4601      	mov	r1, r0
100499ea:	3140      	adds	r1, #64	; 0x40
100499ec:	780a      	ldrb	r2, [r1, #0]
100499ee:	79c9      	ldrb	r1, [r1, #7]
100499f0:	438a      	bics	r2, r1
100499f2:	d117      	bne.n	10049a24 <BTLE_StackTick+0x6c>
100499f4:	213e      	movs	r1, #62	; 0x3e
100499f6:	5c09      	ldrb	r1, [r1, r0]
100499f8:	2900      	cmp	r1, #0
100499fa:	d113      	bne.n	10049a24 <BTLE_StackTick+0x6c>
100499fc:	490e      	ldr	r1, [pc, #56]	; (10049a38 <BTLE_StackTick+0x80>)
100499fe:	880a      	ldrh	r2, [r1, #0]
10049a00:	0712      	lsls	r2, r2, #28
10049a02:	d50f      	bpl.n	10049a24 <BTLE_StackTick+0x6c>
10049a04:	2209      	movs	r2, #9
10049a06:	06d2      	lsls	r2, r2, #27
10049a08:	6912      	ldr	r2, [r2, #16]
10049a0a:	7a49      	ldrb	r1, [r1, #9]
10049a0c:	6a83      	ldr	r3, [r0, #40]	; 0x28
10049a0e:	1940      	adds	r0, r0, r5
10049a10:	6f00      	ldr	r0, [r0, #112]	; 0x70
10049a12:	00c9      	lsls	r1, r1, #3
10049a14:	1a80      	subs	r0, r0, r2
10049a16:	0200      	lsls	r0, r0, #8
10049a18:	1859      	adds	r1, r3, r1
10049a1a:	1200      	asrs	r0, r0, #8
10049a1c:	4281      	cmp	r1, r0
10049a1e:	da01      	bge.n	10049a24 <BTLE_StackTick+0x6c>
10049a20:	f008 fcb0 	bl	10052384 <advance_transmit>
10049a24:	bd70      	pop	{r4, r5, r6, pc}
10049a26:	f000 fb49 	bl	1004a0bc <GAP_Process_Q>
10049a2a:	f001 fcc5 	bl	1004b3b8 <Gatt_Process_Q>
10049a2e:	f009 fbf3 	bl	10053218 <SMP_Process_Q>
10049a32:	e7d2      	b.n	100499da <BTLE_StackTick+0x22>
10049a34:	2000098c 	.word	0x2000098c
10049a38:	200000c0 	.word	0x200000c0

10049a3c <BlueNRG_Stack_Initialization>:
10049a3c:	b510      	push	{r4, lr}
10049a3e:	7f83      	ldrb	r3, [r0, #30]
10049a40:	2201      	movs	r2, #1
10049a42:	2400      	movs	r4, #0
10049a44:	0292      	lsls	r2, r2, #10
10049a46:	6841      	ldr	r1, [r0, #4]
10049a48:	2b08      	cmp	r3, #8
10049a4a:	d903      	bls.n	10049a54 <BlueNRG_Stack_Initialization+0x18>
10049a4c:	2442      	movs	r4, #66	; 0x42
10049a4e:	4291      	cmp	r1, r2
10049a50:	d302      	bcc.n	10049a58 <BlueNRG_Stack_Initialization+0x1c>
10049a52:	e010      	b.n	10049a76 <BlueNRG_Stack_Initialization+0x3a>
10049a54:	4291      	cmp	r1, r2
10049a56:	d201      	bcs.n	10049a5c <BlueNRG_Stack_Initialization+0x20>
10049a58:	2442      	movs	r4, #66	; 0x42
10049a5a:	e00c      	b.n	10049a76 <BlueNRG_Stack_Initialization+0x3a>
10049a5c:	4601      	mov	r1, r0
10049a5e:	2234      	movs	r2, #52	; 0x34
10049a60:	4806      	ldr	r0, [pc, #24]	; (10049a7c <BlueNRG_Stack_Initialization+0x40>)
10049a62:	f7f9 fbac 	bl	100431be <Osal_MemCpy>
10049a66:	f000 f87f 	bl	10049b68 <BlueNRG_Stack_Initialize_RAM_check>
10049a6a:	2800      	cmp	r0, #0
10049a6c:	da01      	bge.n	10049a72 <BlueNRG_Stack_Initialization+0x36>
10049a6e:	2448      	movs	r4, #72	; 0x48
10049a70:	e001      	b.n	10049a76 <BlueNRG_Stack_Initialization+0x3a>
10049a72:	f000 f927 	bl	10049cc4 <_BlueNRG_Stack_Initialization>
10049a76:	4620      	mov	r0, r4
10049a78:	bd10      	pop	{r4, pc}
10049a7a:	0000      	.short	0x0000
10049a7c:	200002cc 	.word	0x200002cc

10049a80 <BlueNRG_Stack_Initialize_ConfigData>:
10049a80:	b53e      	push	{r1, r2, r3, r4, r5, lr}
10049a82:	4d17      	ldr	r5, [pc, #92]	; (10049ae0 <BlueNRG_Stack_Initialize_ConfigData+0x60>)
10049a84:	4815      	ldr	r0, [pc, #84]	; (10049adc <BlueNRG_Stack_Initialize_ConfigData+0x5c>)
10049a86:	6829      	ldr	r1, [r5, #0]
10049a88:	7f82      	ldrb	r2, [r0, #30]
10049a8a:	4608      	mov	r0, r1
10049a8c:	31a0      	adds	r1, #160	; 0xa0
10049a8e:	730a      	strb	r2, [r1, #12]
10049a90:	2400      	movs	r4, #0
10049a92:	3060      	adds	r0, #96	; 0x60
10049a94:	7604      	strb	r4, [r0, #24]
10049a96:	7644      	strb	r4, [r0, #25]
10049a98:	7684      	strb	r4, [r0, #26]
10049a9a:	22e1      	movs	r2, #225	; 0xe1
10049a9c:	76c2      	strb	r2, [r0, #27]
10049a9e:	2280      	movs	r2, #128	; 0x80
10049aa0:	7702      	strb	r2, [r0, #28]
10049aa2:	2202      	movs	r2, #2
10049aa4:	7742      	strb	r2, [r0, #29]
10049aa6:	2030      	movs	r0, #48	; 0x30
10049aa8:	7008      	strb	r0, [r1, #0]
10049aaa:	704c      	strb	r4, [r1, #1]
10049aac:	aa02      	add	r2, sp, #8
10049aae:	a901      	add	r1, sp, #4
10049ab0:	4668      	mov	r0, sp
10049ab2:	f7f9 fb73 	bl	1004319c <BLEPLAT_get_part_info>
10049ab6:	4668      	mov	r0, sp
10049ab8:	7800      	ldrb	r0, [r0, #0]
10049aba:	22a2      	movs	r2, #162	; 0xa2
10049abc:	0101      	lsls	r1, r0, #4
10049abe:	4668      	mov	r0, sp
10049ac0:	7a00      	ldrb	r0, [r0, #8]
10049ac2:	1c89      	adds	r1, r1, #2
10049ac4:	0200      	lsls	r0, r0, #8
10049ac6:	4301      	orrs	r1, r0
10049ac8:	4668      	mov	r0, sp
10049aca:	7900      	ldrb	r0, [r0, #4]
10049acc:	0300      	lsls	r0, r0, #12
10049ace:	4301      	orrs	r1, r0
10049ad0:	6828      	ldr	r0, [r5, #0]
10049ad2:	5211      	strh	r1, [r2, r0]
10049ad4:	30a0      	adds	r0, #160	; 0xa0
10049ad6:	7104      	strb	r4, [r0, #4]
10049ad8:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
10049ada:	0000      	.short	0x0000
10049adc:	200002cc 	.word	0x200002cc
10049ae0:	2000098c 	.word	0x2000098c

10049ae4 <BlueNRG_Stack_Initialize_Layers>:
10049ae4:	b570      	push	{r4, r5, r6, lr}
10049ae6:	f003 f8f7 	bl	1004ccd8 <Timer_Init>
10049aea:	f007 ffa1 	bl	10051a30 <LL_Init>
10049aee:	f006 fe37 	bl	10050760 <PM_Init>
10049af2:	f00c f8c7 	bl	10055c84 <Acl_Init>
10049af6:	f003 fad3 	bl	1004d0a0 <L2C_Init>
10049afa:	4c18      	ldr	r4, [pc, #96]	; (10049b5c <BlueNRG_Stack_Initialize_Layers+0x78>)
10049afc:	4918      	ldr	r1, [pc, #96]	; (10049b60 <BlueNRG_Stack_Initialize_Layers+0x7c>)
10049afe:	6820      	ldr	r0, [r4, #0]
10049b00:	4d18      	ldr	r5, [pc, #96]	; (10049b64 <BlueNRG_Stack_Initialize_Layers+0x80>)
10049b02:	1840      	adds	r0, r0, r1
10049b04:	1081      	asrs	r1, r0, #2
10049b06:	2009      	movs	r0, #9
10049b08:	682a      	ldr	r2, [r5, #0]
10049b0a:	0200      	lsls	r0, r0, #8
10049b0c:	1810      	adds	r0, r2, r0
10049b0e:	6741      	str	r1, [r0, #116]	; 0x74
10049b10:	6861      	ldr	r1, [r4, #4]
10049b12:	0889      	lsrs	r1, r1, #2
10049b14:	6781      	str	r1, [r0, #120]	; 0x78
10049b16:	68a1      	ldr	r1, [r4, #8]
10049b18:	0889      	lsrs	r1, r1, #2
10049b1a:	67c1      	str	r1, [r0, #124]	; 0x7c
10049b1c:	f00a fb84 	bl	10054228 <SMP_Init>
10049b20:	200f      	movs	r0, #15
10049b22:	6829      	ldr	r1, [r5, #0]
10049b24:	01c0      	lsls	r0, r0, #7
10049b26:	8b22      	ldrh	r2, [r4, #24]
10049b28:	1808      	adds	r0, r1, r0
10049b2a:	8182      	strh	r2, [r0, #12]
10049b2c:	8b62      	ldrh	r2, [r4, #26]
10049b2e:	81c2      	strh	r2, [r0, #14]
10049b30:	8ba2      	ldrh	r2, [r4, #28]
10049b32:	80c2      	strh	r2, [r0, #6]
10049b34:	8c62      	ldrh	r2, [r4, #34]	; 0x22
10049b36:	8102      	strh	r2, [r0, #8]
10049b38:	4622      	mov	r2, r4
10049b3a:	3220      	adds	r2, #32
10049b3c:	7812      	ldrb	r2, [r2, #0]
10049b3e:	7282      	strb	r2, [r0, #10]
10049b40:	223b      	movs	r2, #59	; 0x3b
10049b42:	0152      	lsls	r2, r2, #5
10049b44:	2000      	movs	r0, #0
10049b46:	1889      	adds	r1, r1, r2
10049b48:	7508      	strb	r0, [r1, #20]
10049b4a:	f000 fa63 	bl	1004a014 <GAP_Init_Context>
10049b4e:	f002 ff1f 	bl	1004c990 <HCI_Init>
10049b52:	f002 fea7 	bl	1004c8a4 <ble_HAL_Init>
10049b56:	f00b fb05 	bl	10055164 <Events_Process_init>
10049b5a:	bd70      	pop	{r4, r5, r6, pc}
10049b5c:	200002cc 	.word	0x200002cc
10049b60:	effc0000 	.word	0xeffc0000
10049b64:	2000098c 	.word	0x2000098c

10049b68 <BlueNRG_Stack_Initialize_RAM_check>:
10049b68:	b570      	push	{r4, r5, r6, lr}
10049b6a:	2500      	movs	r5, #0
10049b6c:	43ed      	mvns	r5, r5
10049b6e:	f002 ff50 	bl	1004ca12 <data_length_extension_csr_ucfg>
10049b72:	2801      	cmp	r0, #1
10049b74:	d02f      	beq.n	10049bd6 <BlueNRG_Stack_Initialize_RAM_check+0x6e>
10049b76:	2300      	movs	r3, #0
10049b78:	4918      	ldr	r1, [pc, #96]	; (10049bdc <BlueNRG_Stack_Initialize_RAM_check+0x74>)
10049b7a:	2203      	movs	r2, #3
10049b7c:	8b88      	ldrh	r0, [r1, #28]
10049b7e:	24ff      	movs	r4, #255	; 0xff
10049b80:	1e40      	subs	r0, r0, #1
10049b82:	4310      	orrs	r0, r2
10049b84:	7f8a      	ldrb	r2, [r1, #30]
10049b86:	3451      	adds	r4, #81	; 0x51
10049b88:	4362      	muls	r2, r4
10049b8a:	1882      	adds	r2, r0, r2
10049b8c:	8b08      	ldrh	r0, [r1, #24]
10049b8e:	2428      	movs	r4, #40	; 0x28
10049b90:	4360      	muls	r0, r4
10049b92:	1812      	adds	r2, r2, r0
10049b94:	8b48      	ldrh	r0, [r1, #26]
10049b96:	2430      	movs	r4, #48	; 0x30
10049b98:	4360      	muls	r0, r4
10049b9a:	1812      	adds	r2, r2, r0
10049b9c:	4608      	mov	r0, r1
10049b9e:	3020      	adds	r0, #32
10049ba0:	7840      	ldrb	r0, [r0, #1]
10049ba2:	242c      	movs	r4, #44	; 0x2c
10049ba4:	4360      	muls	r0, r4
10049ba6:	1810      	adds	r0, r2, r0
10049ba8:	4a0d      	ldr	r2, [pc, #52]	; (10049be0 <BlueNRG_Stack_Initialize_RAM_check+0x78>)
10049baa:	1818      	adds	r0, r3, r0
10049bac:	1884      	adds	r4, r0, r2
10049bae:	6948      	ldr	r0, [r1, #20]
10049bb0:	42a0      	cmp	r0, r4
10049bb2:	d10e      	bne.n	10049bd2 <BlueNRG_Stack_Initialize_RAM_check+0x6a>
10049bb4:	2013      	movs	r0, #19
10049bb6:	01c0      	lsls	r0, r0, #7
10049bb8:	4284      	cmp	r4, r0
10049bba:	d90a      	bls.n	10049bd2 <BlueNRG_Stack_Initialize_RAM_check+0x6a>
10049bbc:	690d      	ldr	r5, [r1, #16]
10049bbe:	f002 ff28 	bl	1004ca12 <data_length_extension_csr_ucfg>
10049bc2:	b2c1      	uxtb	r1, r0
10049bc4:	4628      	mov	r0, r5
10049bc6:	f005 fb4d 	bl	1004f264 <Dynamic_allocator>
10049bca:	f005 fc7d 	bl	1004f4c8 <Dynamic_allocator_noRet>
10049bce:	1b40      	subs	r0, r0, r5
10049bd0:	1a25      	subs	r5, r4, r0
10049bd2:	4628      	mov	r0, r5
10049bd4:	bd70      	pop	{r4, r5, r6, pc}
10049bd6:	23ff      	movs	r3, #255	; 0xff
10049bd8:	33b5      	adds	r3, #181	; 0xb5
10049bda:	e7cd      	b.n	10049b78 <BlueNRG_Stack_Initialize_RAM_check+0x10>
10049bdc:	200002cc 	.word	0x200002cc
10049be0:	00001951 	.word	0x00001951

10049be4 <BlueNRG_Stack_Perform_Crystal_Check>:
10049be4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10049be6:	4f2c      	ldr	r7, [pc, #176]	; (10049c98 <BlueNRG_Stack_Perform_Crystal_Check+0xb4>)
10049be8:	683c      	ldr	r4, [r7, #0]
10049bea:	6e20      	ldr	r0, [r4, #96]	; 0x60
10049bec:	345c      	adds	r4, #92	; 0x5c
10049bee:	1c40      	adds	r0, r0, #1
10049bf0:	2800      	cmp	r0, #0
10049bf2:	d014      	beq.n	10049c1e <BlueNRG_Stack_Perform_Crystal_Check+0x3a>
10049bf4:	2500      	movs	r5, #0
10049bf6:	4829      	ldr	r0, [pc, #164]	; (10049c9c <BlueNRG_Stack_Perform_Crystal_Check+0xb8>)
10049bf8:	2300      	movs	r3, #0
10049bfa:	7bc0      	ldrb	r0, [r0, #15]
10049bfc:	2800      	cmp	r0, #0
10049bfe:	d03e      	beq.n	10049c7e <BlueNRG_Stack_Perform_Crystal_Check+0x9a>
10049c00:	2609      	movs	r6, #9
10049c02:	06f6      	lsls	r6, r6, #27
10049c04:	4826      	ldr	r0, [pc, #152]	; (10049ca0 <BlueNRG_Stack_Perform_Crystal_Check+0xbc>)
10049c06:	2d00      	cmp	r5, #0
10049c08:	d01c      	beq.n	10049c44 <BlueNRG_Stack_Perform_Crystal_Check+0x60>
10049c0a:	2100      	movs	r1, #0
10049c0c:	460a      	mov	r2, r1
10049c0e:	460b      	mov	r3, r1
10049c10:	6941      	ldr	r1, [r0, #20]
10049c12:	1c52      	adds	r2, r2, #1
10049c14:	4299      	cmp	r1, r3
10049c16:	d104      	bne.n	10049c22 <BlueNRG_Stack_Perform_Crystal_Check+0x3e>
10049c18:	2900      	cmp	r1, #0
10049c1a:	d002      	beq.n	10049c22 <BlueNRG_Stack_Perform_Crystal_Check+0x3e>
10049c1c:	e004      	b.n	10049c28 <BlueNRG_Stack_Perform_Crystal_Check+0x44>
10049c1e:	2501      	movs	r5, #1
10049c20:	e7e9      	b.n	10049bf6 <BlueNRG_Stack_Perform_Crystal_Check+0x12>
10049c22:	4b20      	ldr	r3, [pc, #128]	; (10049ca4 <BlueNRG_Stack_Perform_Crystal_Check+0xc0>)
10049c24:	429a      	cmp	r2, r3
10049c26:	d3f2      	bcc.n	10049c0e <BlueNRG_Stack_Perform_Crystal_Check+0x2a>
10049c28:	6021      	str	r1, [r4, #0]
10049c2a:	6900      	ldr	r0, [r0, #16]
10049c2c:	6060      	str	r0, [r4, #4]
10049c2e:	6930      	ldr	r0, [r6, #16]
10049c30:	68a1      	ldr	r1, [r4, #8]
10049c32:	0200      	lsls	r0, r0, #8
10049c34:	0e09      	lsrs	r1, r1, #24
10049c36:	0a00      	lsrs	r0, r0, #8
10049c38:	0609      	lsls	r1, r1, #24
10049c3a:	4301      	orrs	r1, r0
10049c3c:	60a1      	str	r1, [r4, #8]
10049c3e:	f000 f833 	bl	10049ca8 <BlueNRG_Start_Crystal_Measurement>
10049c42:	e01d      	b.n	10049c80 <BlueNRG_Stack_Perform_Crystal_Check+0x9c>
10049c44:	6931      	ldr	r1, [r6, #16]
10049c46:	68a2      	ldr	r2, [r4, #8]
10049c48:	0209      	lsls	r1, r1, #8
10049c4a:	0a09      	lsrs	r1, r1, #8
10049c4c:	0e15      	lsrs	r5, r2, #24
10049c4e:	d008      	beq.n	10049c62 <BlueNRG_Stack_Perform_Crystal_Check+0x7e>
10049c50:	8b01      	ldrh	r1, [r0, #24]
10049c52:	07c9      	lsls	r1, r1, #31
10049c54:	d012      	beq.n	10049c7c <BlueNRG_Stack_Perform_Crystal_Check+0x98>
10049c56:	6941      	ldr	r1, [r0, #20]
10049c58:	6021      	str	r1, [r4, #0]
10049c5a:	6900      	ldr	r0, [r0, #16]
10049c5c:	6060      	str	r0, [r4, #4]
10049c5e:	72e3      	strb	r3, [r4, #11]
10049c60:	e010      	b.n	10049c84 <BlueNRG_Stack_Perform_Crystal_Check+0xa0>
10049c62:	1a88      	subs	r0, r1, r2
10049c64:	0200      	lsls	r0, r0, #8
10049c66:	237d      	movs	r3, #125	; 0x7d
10049c68:	1200      	asrs	r0, r0, #8
10049c6a:	031b      	lsls	r3, r3, #12
10049c6c:	4298      	cmp	r0, r3
10049c6e:	dd05      	ble.n	10049c7c <BlueNRG_Stack_Perform_Crystal_Check+0x98>
10049c70:	0e10      	lsrs	r0, r2, #24
10049c72:	0600      	lsls	r0, r0, #24
10049c74:	4308      	orrs	r0, r1
10049c76:	60a0      	str	r0, [r4, #8]
10049c78:	f000 f816 	bl	10049ca8 <BlueNRG_Start_Crystal_Measurement>
10049c7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10049c7e:	6063      	str	r3, [r4, #4]
10049c80:	2d00      	cmp	r5, #0
10049c82:	d0fb      	beq.n	10049c7c <BlueNRG_Stack_Perform_Crystal_Check+0x98>
10049c84:	cc03      	ldmia	r4!, {r0, r1}
10049c86:	f008 faaf 	bl	100521e8 <set_freq>
10049c8a:	20fa      	movs	r0, #250	; 0xfa
10049c8c:	f008 fa9c 	bl	100521c8 <machine_time_trans>
10049c90:	6839      	ldr	r1, [r7, #0]
10049c92:	6288      	str	r0, [r1, #40]	; 0x28
10049c94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10049c96:	0000      	.short	0x0000
10049c98:	2000098c 	.word	0x2000098c
10049c9c:	200002ec 	.word	0x200002ec
10049ca0:	48100000 	.word	0x48100000
10049ca4:	00001388 	.word	0x00001388

10049ca8 <BlueNRG_Start_Crystal_Measurement>:
10049ca8:	4904      	ldr	r1, [pc, #16]	; (10049cbc <BlueNRG_Start_Crystal_Measurement+0x14>)
10049caa:	2000      	movs	r0, #0
10049cac:	6108      	str	r0, [r1, #16]
10049cae:	4804      	ldr	r0, [pc, #16]	; (10049cc0 <BlueNRG_Start_Crystal_Measurement+0x18>)
10049cb0:	2101      	movs	r1, #1
10049cb2:	6800      	ldr	r0, [r0, #0]
10049cb4:	3060      	adds	r0, #96	; 0x60
10049cb6:	71c1      	strb	r1, [r0, #7]
10049cb8:	4770      	bx	lr
10049cba:	0000      	.short	0x0000
10049cbc:	48100000 	.word	0x48100000
10049cc0:	2000098c 	.word	0x2000098c

10049cc4 <_BlueNRG_Stack_Initialization>:
10049cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10049cc6:	2606      	movs	r6, #6
10049cc8:	4832      	ldr	r0, [pc, #200]	; (10049d94 <_BlueNRG_Stack_Initialization+0xd0>)
10049cca:	2540      	movs	r5, #64	; 0x40
10049ccc:	6005      	str	r5, [r0, #0]
10049cce:	4832      	ldr	r0, [pc, #200]	; (10049d98 <_BlueNRG_Stack_Initialization+0xd4>)
10049cd0:	2700      	movs	r7, #0
10049cd2:	8007      	strh	r7, [r0, #0]
10049cd4:	05a9      	lsls	r1, r5, #22
10049cd6:	2009      	movs	r0, #9
10049cd8:	06c0      	lsls	r0, r0, #27
10049cda:	6041      	str	r1, [r0, #4]
10049cdc:	4a2f      	ldr	r2, [pc, #188]	; (10049d9c <_BlueNRG_Stack_Initialization+0xd8>)
10049cde:	6091      	str	r1, [r2, #8]
10049ce0:	6801      	ldr	r1, [r0, #0]
10049ce2:	6001      	str	r1, [r0, #0]
10049ce4:	482e      	ldr	r0, [pc, #184]	; (10049da0 <_BlueNRG_Stack_Initialization+0xdc>)
10049ce6:	2103      	movs	r1, #3
10049ce8:	6904      	ldr	r4, [r0, #16]
10049cea:	6942      	ldr	r2, [r0, #20]
10049cec:	1e60      	subs	r0, r4, #1
10049cee:	4308      	orrs	r0, r1
10049cf0:	4639      	mov	r1, r7
10049cf2:	1c40      	adds	r0, r0, #1
10049cf4:	f7f9 fa67 	bl	100431c6 <Osal_MemSet>
10049cf8:	f002 fe8b 	bl	1004ca12 <data_length_extension_csr_ucfg>
10049cfc:	b2c1      	uxtb	r1, r0
10049cfe:	4620      	mov	r0, r4
10049d00:	f005 fab0 	bl	1004f264 <Dynamic_allocator>
10049d04:	f005 fbe0 	bl	1004f4c8 <Dynamic_allocator_noRet>
10049d08:	f005 fbea 	bl	1004f4e0 <mem_alloc_ctx_init>
10049d0c:	f004 fc6c 	bl	1004e5e8 <state_func_call_init_csr_ucfg>
10049d10:	4924      	ldr	r1, [pc, #144]	; (10049da4 <_BlueNRG_Stack_Initialization+0xe0>)
10049d12:	2017      	movs	r0, #23
10049d14:	8188      	strh	r0, [r1, #12]
10049d16:	4c24      	ldr	r4, [pc, #144]	; (10049da8 <_BlueNRG_Stack_Initialization+0xe4>)
10049d18:	6820      	ldr	r0, [r4, #0]
10049d1a:	1942      	adds	r2, r0, r5
10049d1c:	4601      	mov	r1, r0
10049d1e:	7057      	strb	r7, [r2, #1]
10049d20:	20fa      	movs	r0, #250	; 0xfa
10049d22:	6288      	str	r0, [r1, #40]	; 0x28
10049d24:	2028      	movs	r0, #40	; 0x28
10049d26:	7010      	strb	r0, [r2, #0]
10049d28:	f002 fe71 	bl	1004ca0e <PRIV_controller_privacy_csr_ucfg>
10049d2c:	2801      	cmp	r0, #1
10049d2e:	d105      	bne.n	10049d3c <_BlueNRG_Stack_Initialization+0x78>
10049d30:	6820      	ldr	r0, [r4, #0]
10049d32:	2210      	movs	r2, #16
10049d34:	3040      	adds	r0, #64	; 0x40
10049d36:	7801      	ldrb	r1, [r0, #0]
10049d38:	4311      	orrs	r1, r2
10049d3a:	7001      	strb	r1, [r0, #0]
10049d3c:	f00b f972 	bl	10055024 <secure_connections_csr_ucfg>
10049d40:	2801      	cmp	r0, #1
10049d42:	d105      	bne.n	10049d50 <_BlueNRG_Stack_Initialization+0x8c>
10049d44:	6820      	ldr	r0, [r4, #0]
10049d46:	2280      	movs	r2, #128	; 0x80
10049d48:	3040      	adds	r0, #64	; 0x40
10049d4a:	7801      	ldrb	r1, [r0, #0]
10049d4c:	4311      	orrs	r1, r2
10049d4e:	7001      	strb	r1, [r0, #0]
10049d50:	6820      	ldr	r0, [r4, #0]
10049d52:	4601      	mov	r1, r0
10049d54:	3040      	adds	r0, #64	; 0x40
10049d56:	7802      	ldrb	r2, [r0, #0]
10049d58:	4332      	orrs	r2, r6
10049d5a:	7002      	strb	r2, [r0, #0]
10049d5c:	2000      	movs	r0, #0
10049d5e:	43c0      	mvns	r0, r0
10049d60:	6608      	str	r0, [r1, #96]	; 0x60
10049d62:	f7fa f962 	bl	1004402a <PKA_Reset>
10049d66:	f7ff fe8b 	bl	10049a80 <BlueNRG_Stack_Initialize_ConfigData>
10049d6a:	f7ff febb 	bl	10049ae4 <BlueNRG_Stack_Initialize_Layers>
10049d6e:	6820      	ldr	r0, [r4, #0]
10049d70:	2101      	movs	r1, #1
10049d72:	3020      	adds	r0, #32
10049d74:	7701      	strb	r1, [r0, #28]
10049d76:	2107      	movs	r1, #7
10049d78:	7741      	strb	r1, [r0, #29]
10049d7a:	2001      	movs	r0, #1
10049d7c:	f002 fcbc 	bl	1004c6f8 <HAL_Set_TX_Power_Level>
10049d80:	f004 fc96 	bl	1004e6b0 <PRIVWHIT_vInit_Struct>
10049d84:	f7ff ff2e 	bl	10049be4 <BlueNRG_Stack_Perform_Crystal_Check>
10049d88:	4802      	ldr	r0, [pc, #8]	; (10049d94 <_BlueNRG_Stack_Initialization+0xd0>)
10049d8a:	3880      	subs	r0, #128	; 0x80
10049d8c:	6005      	str	r5, [r0, #0]
10049d8e:	2102      	movs	r1, #2
10049d90:	6001      	str	r1, [r0, #0]
10049d92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10049d94:	e000e180 	.word	0xe000e180
10049d98:	200000c0 	.word	0x200000c0
10049d9c:	48000040 	.word	0x48000040
10049da0:	200002cc 	.word	0x200002cc
10049da4:	48100000 	.word	0x48100000
10049da8:	2000098c 	.word	0x2000098c

10049dac <GAP_Connection_Complete_Handler>:
10049dac:	b538      	push	{r3, r4, r5, lr}
10049dae:	4a18      	ldr	r2, [pc, #96]	; (10049e10 <GAP_Connection_Complete_Handler+0x64>)
10049db0:	6814      	ldr	r4, [r2, #0]
10049db2:	4622      	mov	r2, r4
10049db4:	32ba      	adds	r2, #186	; 0xba
10049db6:	34ae      	adds	r4, #174	; 0xae
10049db8:	78a3      	ldrb	r3, [r4, #2]
10049dba:	07dd      	lsls	r5, r3, #31
10049dbc:	d001      	beq.n	10049dc2 <GAP_Connection_Complete_Handler+0x16>
10049dbe:	2901      	cmp	r1, #1
10049dc0:	d00a      	beq.n	10049dd8 <GAP_Connection_Complete_Handler+0x2c>
10049dc2:	075b      	lsls	r3, r3, #29
10049dc4:	d50c      	bpl.n	10049de0 <GAP_Connection_Complete_Handler+0x34>
10049dc6:	2901      	cmp	r1, #1
10049dc8:	d00a      	beq.n	10049de0 <GAP_Connection_Complete_Handler+0x34>
10049dca:	7921      	ldrb	r1, [r4, #4]
10049dcc:	0749      	lsls	r1, r1, #29
10049dce:	d50b      	bpl.n	10049de8 <GAP_Connection_Complete_Handler+0x3c>
10049dd0:	7ae1      	ldrb	r1, [r4, #11]
10049dd2:	2900      	cmp	r1, #0
10049dd4:	d005      	beq.n	10049de2 <GAP_Connection_Complete_Handler+0x36>
10049dd6:	e007      	b.n	10049de8 <GAP_Connection_Complete_Handler+0x3c>
10049dd8:	78e0      	ldrb	r0, [r4, #3]
10049dda:	2180      	movs	r1, #128	; 0x80
10049ddc:	4308      	orrs	r0, r1
10049dde:	70e0      	strb	r0, [r4, #3]
10049de0:	bd38      	pop	{r3, r4, r5, pc}
10049de2:	2101      	movs	r1, #1
10049de4:	72e1      	strb	r1, [r4, #11]
10049de6:	8050      	strh	r0, [r2, #2]
10049de8:	7920      	ldrb	r0, [r4, #4]
10049dea:	0641      	lsls	r1, r0, #25
10049dec:	0f09      	lsrs	r1, r1, #28
10049dee:	d0f7      	beq.n	10049de0 <GAP_Connection_Complete_Handler+0x34>
10049df0:	2178      	movs	r1, #120	; 0x78
10049df2:	4008      	ands	r0, r1
10049df4:	4669      	mov	r1, sp
10049df6:	7008      	strb	r0, [r1, #0]
10049df8:	2000      	movs	r0, #0
10049dfa:	7048      	strb	r0, [r1, #1]
10049dfc:	466a      	mov	r2, sp
10049dfe:	2102      	movs	r1, #2
10049e00:	2042      	movs	r0, #66	; 0x42
10049e02:	f000 fad3 	bl	1004a3ac <aci_gap_proc_complete_event_push>
10049e06:	7920      	ldrb	r0, [r4, #4]
10049e08:	2187      	movs	r1, #135	; 0x87
10049e0a:	4008      	ands	r0, r1
10049e0c:	7120      	strb	r0, [r4, #4]
10049e0e:	bd38      	pop	{r3, r4, r5, pc}
10049e10:	2000098c 	.word	0x2000098c

10049e14 <GAP_DiscProcTimeoutcb_ucfg>:
10049e14:	4770      	bx	lr
	...

10049e18 <GAP_Init>:
10049e18:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10049e1a:	460c      	mov	r4, r1
10049e1c:	a178      	add	r1, pc, #480	; (adr r1, 1004a000 <GAP_Init+0x1e8>)
10049e1e:	c903      	ldmia	r1, {r0, r1}
10049e20:	b095      	sub	sp, #84	; 0x54
10049e22:	9101      	str	r1, [sp, #4]
10049e24:	9000      	str	r0, [sp, #0]
10049e26:	2100      	movs	r1, #0
10049e28:	a808      	add	r0, sp, #32
10049e2a:	7301      	strb	r1, [r0, #12]
10049e2c:	2103      	movs	r1, #3
10049e2e:	02c9      	lsls	r1, r1, #11
10049e30:	4668      	mov	r0, sp
10049e32:	8641      	strh	r1, [r0, #50]	; 0x32
10049e34:	2101      	movs	r1, #1
10049e36:	a808      	add	r0, sp, #32
10049e38:	4e73      	ldr	r6, [pc, #460]	; (1004a008 <GAP_Init+0x1f0>)
10049e3a:	7401      	strb	r1, [r0, #16]
10049e3c:	6835      	ldr	r5, [r6, #0]
10049e3e:	4617      	mov	r7, r2
10049e40:	35ae      	adds	r5, #174	; 0xae
10049e42:	f00d ffb1 	bl	10057da8 <IDD_Initialize_Device_IDs>
10049e46:	2800      	cmp	r0, #0
10049e48:	d108      	bne.n	10049e5c <GAP_Init+0x44>
10049e4a:	4970      	ldr	r1, [pc, #448]	; (1004a00c <GAP_Init+0x1f4>)
10049e4c:	6830      	ldr	r0, [r6, #0]
10049e4e:	1840      	adds	r0, r0, r1
10049e50:	f006 ffc8 	bl	10050de4 <Get_StaticRandAddr>
10049e54:	78a8      	ldrb	r0, [r5, #2]
10049e56:	2800      	cmp	r0, #0
10049e58:	d002      	beq.n	10049e60 <GAP_Init+0x48>
10049e5a:	2046      	movs	r0, #70	; 0x46
10049e5c:	b019      	add	sp, #100	; 0x64
10049e5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10049e60:	a80b      	add	r0, sp, #44	; 0x2c
10049e62:	9915      	ldr	r1, [sp, #84]	; 0x54
10049e64:	f000 f97c 	bl	1004a160 <GAP_check_and_set_role_ucfg>
10049e68:	2800      	cmp	r0, #0
10049e6a:	d1f7      	bne.n	10049e5c <GAP_Init+0x44>
10049e6c:	2007      	movs	r0, #7
10049e6e:	a910      	add	r1, sp, #64	; 0x40
10049e70:	7108      	strb	r0, [r1, #4]
10049e72:	2c01      	cmp	r4, #1
10049e74:	d005      	beq.n	10049e82 <GAP_Init+0x6a>
10049e76:	2c02      	cmp	r4, #2
10049e78:	d00a      	beq.n	10049e90 <GAP_Init+0x78>
10049e7a:	2c00      	cmp	r4, #0
10049e7c:	d00e      	beq.n	10049e9c <GAP_Init+0x84>
10049e7e:	2042      	movs	r0, #66	; 0x42
10049e80:	e7ec      	b.n	10049e5c <GAP_Init+0x44>
10049e82:	a808      	add	r0, sp, #32
10049e84:	7b01      	ldrb	r1, [r0, #12]
10049e86:	2010      	movs	r0, #16
10049e88:	4301      	orrs	r1, r0
10049e8a:	a808      	add	r0, sp, #32
10049e8c:	7301      	strb	r1, [r0, #12]
10049e8e:	e005      	b.n	10049e9c <GAP_Init+0x84>
10049e90:	a911      	add	r1, sp, #68	; 0x44
10049e92:	a80b      	add	r0, sp, #44	; 0x2c
10049e94:	f000 f973 	bl	1004a17e <GAP_enable_controller_privacy_ucfg>
10049e98:	2800      	cmp	r0, #0
10049e9a:	d1df      	bne.n	10049e5c <GAP_Init+0x44>
10049e9c:	a810      	add	r0, sp, #64	; 0x40
10049e9e:	7902      	ldrb	r2, [r0, #4]
10049ea0:	2301      	movs	r3, #1
10049ea2:	a90c      	add	r1, sp, #48	; 0x30
10049ea4:	4628      	mov	r0, r5
10049ea6:	f001 f8f3 	bl	1004b090 <Gatt_Add_Service>
10049eaa:	2800      	cmp	r0, #0
10049eac:	d17e      	bne.n	10049fac <GAP_Init+0x194>
10049eae:	2202      	movs	r2, #2
10049eb0:	4629      	mov	r1, r5
10049eb2:	9818      	ldr	r0, [sp, #96]	; 0x60
10049eb4:	f7f9 f983 	bl	100431be <Osal_MemCpy>
10049eb8:	8829      	ldrh	r1, [r5, #0]
10049eba:	4668      	mov	r0, sp
10049ebc:	8181      	strh	r1, [r0, #12]
10049ebe:	2115      	movs	r1, #21
10049ec0:	0249      	lsls	r1, r1, #9
10049ec2:	8201      	strh	r1, [r0, #16]
10049ec4:	8407      	strh	r7, [r0, #32]
10049ec6:	2601      	movs	r6, #1
10049ec8:	7386      	strb	r6, [r0, #14]
10049eca:	214e      	movs	r1, #78	; 0x4e
10049ecc:	a808      	add	r0, sp, #32
10049ece:	7081      	strb	r1, [r0, #2]
10049ed0:	2400      	movs	r4, #0
10049ed2:	70c4      	strb	r4, [r0, #3]
10049ed4:	7106      	strb	r6, [r0, #4]
10049ed6:	2107      	movs	r1, #7
10049ed8:	7141      	strb	r1, [r0, #5]
10049eda:	7186      	strb	r6, [r0, #6]
10049edc:	a903      	add	r1, sp, #12
10049ede:	a802      	add	r0, sp, #8
10049ee0:	f000 fe8c 	bl	1004abfc <Gatt_Add_Characteristic>
10049ee4:	2800      	cmp	r0, #0
10049ee6:	d161      	bne.n	10049fac <GAP_Init+0x194>
10049ee8:	2202      	movs	r2, #2
10049eea:	a902      	add	r1, sp, #8
10049eec:	981e      	ldr	r0, [sp, #120]	; 0x78
10049eee:	f7f9 f966 	bl	100431be <Osal_MemCpy>
10049ef2:	2f08      	cmp	r7, #8
10049ef4:	d202      	bcs.n	10049efc <GAP_Init+0xe4>
10049ef6:	4668      	mov	r0, sp
10049ef8:	8547      	strh	r7, [r0, #42]	; 0x2a
10049efa:	e002      	b.n	10049f02 <GAP_Init+0xea>
10049efc:	2008      	movs	r0, #8
10049efe:	4669      	mov	r1, sp
10049f00:	8548      	strh	r0, [r1, #42]	; 0x2a
10049f02:	4669      	mov	r1, sp
10049f04:	850c      	strh	r4, [r1, #40]	; 0x28
10049f06:	460b      	mov	r3, r1
10049f08:	8828      	ldrh	r0, [r5, #0]
10049f0a:	aa0a      	add	r2, sp, #40	; 0x28
10049f0c:	8909      	ldrh	r1, [r1, #8]
10049f0e:	f001 fe71 	bl	1004bbf4 <Gatt_Update_Charac_Value>
10049f12:	2800      	cmp	r0, #0
10049f14:	d16d      	bne.n	10049ff2 <GAP_Init+0x1da>
10049f16:	493e      	ldr	r1, [pc, #248]	; (1004a010 <GAP_Init+0x1f8>)
10049f18:	4668      	mov	r0, sp
10049f1a:	8201      	strh	r1, [r0, #16]
10049f1c:	2702      	movs	r7, #2
10049f1e:	8407      	strh	r7, [r0, #32]
10049f20:	a808      	add	r0, sp, #32
10049f22:	7184      	strb	r4, [r0, #6]
10049f24:	a903      	add	r1, sp, #12
10049f26:	a802      	add	r0, sp, #8
10049f28:	f000 fe68 	bl	1004abfc <Gatt_Add_Characteristic>
10049f2c:	2800      	cmp	r0, #0
10049f2e:	d160      	bne.n	10049ff2 <GAP_Init+0x1da>
10049f30:	2202      	movs	r2, #2
10049f32:	a902      	add	r1, sp, #8
10049f34:	981f      	ldr	r0, [sp, #124]	; 0x7c
10049f36:	f7f9 f942 	bl	100431be <Osal_MemCpy>
10049f3a:	4668      	mov	r0, sp
10049f3c:	7004      	strb	r4, [r0, #0]
10049f3e:	4669      	mov	r1, sp
10049f40:	7044      	strb	r4, [r0, #1]
10049f42:	854f      	strh	r7, [r1, #42]	; 0x2a
10049f44:	460b      	mov	r3, r1
10049f46:	8828      	ldrh	r0, [r5, #0]
10049f48:	aa0a      	add	r2, sp, #40	; 0x28
10049f4a:	8909      	ldrh	r1, [r1, #8]
10049f4c:	f001 fe52 	bl	1004bbf4 <Gatt_Update_Charac_Value>
10049f50:	2800      	cmp	r0, #0
10049f52:	d14e      	bne.n	10049ff2 <GAP_Init+0x1da>
10049f54:	a808      	add	r0, sp, #32
10049f56:	7b00      	ldrb	r0, [r0, #12]
10049f58:	07c0      	lsls	r0, r0, #31
10049f5a:	d023      	beq.n	10049fa4 <GAP_Init+0x18c>
10049f5c:	492c      	ldr	r1, [pc, #176]	; (1004a010 <GAP_Init+0x1f8>)
10049f5e:	4668      	mov	r0, sp
10049f60:	1cc9      	adds	r1, r1, #3
10049f62:	8201      	strh	r1, [r0, #16]
10049f64:	2108      	movs	r1, #8
10049f66:	8401      	strh	r1, [r0, #32]
10049f68:	a808      	add	r0, sp, #32
10049f6a:	7087      	strb	r7, [r0, #2]
10049f6c:	7104      	strb	r4, [r0, #4]
10049f6e:	a903      	add	r1, sp, #12
10049f70:	a802      	add	r0, sp, #8
10049f72:	f000 fe43 	bl	1004abfc <Gatt_Add_Characteristic>
10049f76:	2800      	cmp	r0, #0
10049f78:	d13b      	bne.n	10049ff2 <GAP_Init+0x1da>
10049f7a:	21ff      	movs	r1, #255	; 0xff
10049f7c:	4668      	mov	r0, sp
10049f7e:	71c1      	strb	r1, [r0, #7]
10049f80:	7181      	strb	r1, [r0, #6]
10049f82:	70c1      	strb	r1, [r0, #3]
10049f84:	7081      	strb	r1, [r0, #2]
10049f86:	7041      	strb	r1, [r0, #1]
10049f88:	7001      	strb	r1, [r0, #0]
10049f8a:	7144      	strb	r4, [r0, #5]
10049f8c:	7104      	strb	r4, [r0, #4]
10049f8e:	4669      	mov	r1, sp
10049f90:	2008      	movs	r0, #8
10049f92:	8548      	strh	r0, [r1, #42]	; 0x2a
10049f94:	460b      	mov	r3, r1
10049f96:	8828      	ldrh	r0, [r5, #0]
10049f98:	aa0a      	add	r2, sp, #40	; 0x28
10049f9a:	8909      	ldrh	r1, [r1, #8]
10049f9c:	f001 fe2a 	bl	1004bbf4 <Gatt_Update_Charac_Value>
10049fa0:	2800      	cmp	r0, #0
10049fa2:	d126      	bne.n	10049ff2 <GAP_Init+0x1da>
10049fa4:	a808      	add	r0, sp, #32
10049fa6:	7b00      	ldrb	r0, [r0, #12]
10049fa8:	0680      	lsls	r0, r0, #26
10049faa:	e000      	b.n	10049fae <GAP_Init+0x196>
10049fac:	e021      	b.n	10049ff2 <GAP_Init+0x1da>
10049fae:	d522      	bpl.n	10049ff6 <GAP_Init+0x1de>
10049fb0:	8829      	ldrh	r1, [r5, #0]
10049fb2:	4668      	mov	r0, sp
10049fb4:	8181      	strh	r1, [r0, #12]
10049fb6:	4916      	ldr	r1, [pc, #88]	; (1004a010 <GAP_Init+0x1f8>)
10049fb8:	31a5      	adds	r1, #165	; 0xa5
10049fba:	8201      	strh	r1, [r0, #16]
10049fbc:	8406      	strh	r6, [r0, #32]
10049fbe:	7386      	strb	r6, [r0, #14]
10049fc0:	a808      	add	r0, sp, #32
10049fc2:	7087      	strb	r7, [r0, #2]
10049fc4:	70c4      	strb	r4, [r0, #3]
10049fc6:	7104      	strb	r4, [r0, #4]
10049fc8:	2107      	movs	r1, #7
10049fca:	7141      	strb	r1, [r0, #5]
10049fcc:	7184      	strb	r4, [r0, #6]
10049fce:	a903      	add	r1, sp, #12
10049fd0:	a802      	add	r0, sp, #8
10049fd2:	f000 fe13 	bl	1004abfc <Gatt_Add_Characteristic>
10049fd6:	2800      	cmp	r0, #0
10049fd8:	d10b      	bne.n	10049ff2 <GAP_Init+0x1da>
10049fda:	4669      	mov	r1, sp
10049fdc:	700e      	strb	r6, [r1, #0]
10049fde:	850c      	strh	r4, [r1, #40]	; 0x28
10049fe0:	854e      	strh	r6, [r1, #42]	; 0x2a
10049fe2:	460b      	mov	r3, r1
10049fe4:	8828      	ldrh	r0, [r5, #0]
10049fe6:	aa0a      	add	r2, sp, #40	; 0x28
10049fe8:	8909      	ldrh	r1, [r1, #8]
10049fea:	f001 fe03 	bl	1004bbf4 <Gatt_Update_Charac_Value>
10049fee:	2800      	cmp	r0, #0
10049ff0:	d001      	beq.n	10049ff6 <GAP_Init+0x1de>
10049ff2:	2047      	movs	r0, #71	; 0x47
10049ff4:	e732      	b.n	10049e5c <GAP_Init+0x44>
10049ff6:	a808      	add	r0, sp, #32
10049ff8:	7b00      	ldrb	r0, [r0, #12]
10049ffa:	70a8      	strb	r0, [r5, #2]
10049ffc:	2000      	movs	r0, #0
10049ffe:	e72d      	b.n	10049e5c <GAP_Init+0x44>
1004a000:	65756c62 	.word	0x65756c62
1004a004:	2167726e 	.word	0x2167726e
1004a008:	2000098c 	.word	0x2000098c
1004a00c:	000006ef 	.word	0x000006ef
1004a010:	00002a01 	.word	0x00002a01

1004a014 <GAP_Init_Context>:
1004a014:	4803      	ldr	r0, [pc, #12]	; (1004a024 <GAP_Init_Context+0x10>)
1004a016:	2100      	movs	r1, #0
1004a018:	6800      	ldr	r0, [r0, #0]
1004a01a:	30ae      	adds	r0, #174	; 0xae
1004a01c:	70c1      	strb	r1, [r0, #3]
1004a01e:	7081      	strb	r1, [r0, #2]
1004a020:	4770      	bx	lr
1004a022:	0000      	.short	0x0000
1004a024:	2000098c 	.word	0x2000098c

1004a028 <GAP_LL_Event_Handler_ISR>:
1004a028:	b538      	push	{r3, r4, r5, lr}
1004a02a:	4602      	mov	r2, r0
1004a02c:	4817      	ldr	r0, [pc, #92]	; (1004a08c <GAP_LL_Event_Handler_ISR+0x64>)
1004a02e:	2401      	movs	r4, #1
1004a030:	6800      	ldr	r0, [r0, #0]
1004a032:	30ae      	adds	r0, #174	; 0xae
1004a034:	2a02      	cmp	r2, #2
1004a036:	d01f      	beq.n	1004a078 <GAP_LL_Event_Handler_ISR+0x50>
1004a038:	2a05      	cmp	r2, #5
1004a03a:	d003      	beq.n	1004a044 <GAP_LL_Event_Handler_ISR+0x1c>
1004a03c:	2a07      	cmp	r2, #7
1004a03e:	d007      	beq.n	1004a050 <GAP_LL_Event_Handler_ISR+0x28>
1004a040:	2a0b      	cmp	r2, #11
1004a042:	d120      	bne.n	1004a086 <GAP_LL_Event_Handler_ISR+0x5e>
1004a044:	4608      	mov	r0, r1
1004a046:	7909      	ldrb	r1, [r1, #4]
1004a048:	8840      	ldrh	r0, [r0, #2]
1004a04a:	f7ff feaf 	bl	10049dac <GAP_Connection_Complete_Handler>
1004a04e:	e01a      	b.n	1004a086 <GAP_LL_Event_Handler_ISR+0x5e>
1004a050:	7900      	ldrb	r0, [r0, #4]
1004a052:	2400      	movs	r4, #0
1004a054:	0602      	lsls	r2, r0, #24
1004a056:	d500      	bpl.n	1004a05a <GAP_LL_Event_Handler_ISR+0x32>
1004a058:	2401      	movs	r4, #1
1004a05a:	0782      	lsls	r2, r0, #30
1004a05c:	d103      	bne.n	1004a066 <GAP_LL_Event_Handler_ISR+0x3e>
1004a05e:	06c2      	lsls	r2, r0, #27
1004a060:	d401      	bmi.n	1004a066 <GAP_LL_Event_Handler_ISR+0x3e>
1004a062:	0680      	lsls	r0, r0, #26
1004a064:	d50f      	bpl.n	1004a086 <GAP_LL_Event_Handler_ISR+0x5e>
1004a066:	4608      	mov	r0, r1
1004a068:	2100      	movs	r1, #0
1004a06a:	466a      	mov	r2, sp
1004a06c:	7011      	strb	r1, [r2, #0]
1004a06e:	4669      	mov	r1, sp
1004a070:	f000 f888 	bl	1004a184 <_GAP_Parse_Advertising_Report>
1004a074:	4604      	mov	r4, r0
1004a076:	e006      	b.n	1004a086 <GAP_LL_Event_Handler_ISR+0x5e>
1004a078:	7881      	ldrb	r1, [r0, #2]
1004a07a:	0749      	lsls	r1, r1, #29
1004a07c:	d503      	bpl.n	1004a086 <GAP_LL_Event_Handler_ISR+0x5e>
1004a07e:	7901      	ldrb	r1, [r0, #4]
1004a080:	22fb      	movs	r2, #251	; 0xfb
1004a082:	4011      	ands	r1, r2
1004a084:	7101      	strb	r1, [r0, #4]
1004a086:	4620      	mov	r0, r4
1004a088:	bd38      	pop	{r3, r4, r5, pc}
1004a08a:	0000      	.short	0x0000
1004a08c:	2000098c 	.word	0x2000098c

1004a090 <GAP_LimDiscTimeoutcb>:
1004a090:	b510      	push	{r4, lr}
1004a092:	4809      	ldr	r0, [pc, #36]	; (1004a0b8 <GAP_LimDiscTimeoutcb+0x28>)
1004a094:	6804      	ldr	r4, [r0, #0]
1004a096:	34ae      	adds	r4, #174	; 0xae
1004a098:	78e0      	ldrb	r0, [r4, #3]
1004a09a:	0780      	lsls	r0, r0, #30
1004a09c:	d50b      	bpl.n	1004a0b6 <GAP_LimDiscTimeoutcb+0x26>
1004a09e:	2000      	movs	r0, #0
1004a0a0:	f007 fb46 	bl	10051730 <LL_Enable_Disable_Adv>
1004a0a4:	2002      	movs	r0, #2
1004a0a6:	f000 f959 	bl	1004a35c <aci_gap_limited_discoverable_event_push>
1004a0aa:	78e0      	ldrb	r0, [r4, #3]
1004a0ac:	2101      	movs	r1, #1
1004a0ae:	4308      	orrs	r0, r1
1004a0b0:	21fd      	movs	r1, #253	; 0xfd
1004a0b2:	4008      	ands	r0, r1
1004a0b4:	70e0      	strb	r0, [r4, #3]
1004a0b6:	bd10      	pop	{r4, pc}
1004a0b8:	2000098c 	.word	0x2000098c

1004a0bc <GAP_Process_Q>:
1004a0bc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
1004a0be:	480e      	ldr	r0, [pc, #56]	; (1004a0f8 <GAP_Process_Q+0x3c>)
1004a0c0:	6804      	ldr	r4, [r0, #0]
1004a0c2:	34ae      	adds	r4, #174	; 0xae
1004a0c4:	78e0      	ldrb	r0, [r4, #3]
1004a0c6:	0601      	lsls	r1, r0, #24
1004a0c8:	d512      	bpl.n	1004a0f0 <GAP_Process_Q+0x34>
1004a0ca:	78a1      	ldrb	r1, [r4, #2]
1004a0cc:	07c9      	lsls	r1, r1, #31
1004a0ce:	d00c      	beq.n	1004a0ea <GAP_Process_Q+0x2e>
1004a0d0:	0780      	lsls	r0, r0, #30
1004a0d2:	d508      	bpl.n	1004a0e6 <GAP_Process_Q+0x2a>
1004a0d4:	2004      	movs	r0, #4
1004a0d6:	4669      	mov	r1, sp
1004a0d8:	7308      	strb	r0, [r1, #12]
1004a0da:	4668      	mov	r0, sp
1004a0dc:	f002 fef0 	bl	1004cec0 <Timer_StopOneShot>
1004a0e0:	2002      	movs	r0, #2
1004a0e2:	f000 f93b 	bl	1004a35c <aci_gap_limited_discoverable_event_push>
1004a0e6:	2000      	movs	r0, #0
1004a0e8:	70e0      	strb	r0, [r4, #3]
1004a0ea:	0640      	lsls	r0, r0, #25
1004a0ec:	0e40      	lsrs	r0, r0, #25
1004a0ee:	70e0      	strb	r0, [r4, #3]
1004a0f0:	f000 f844 	bl	1004a17c <GAP_discover_peer_name_ucfg>
1004a0f4:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
1004a0f6:	0000      	.short	0x0000
1004a0f8:	2000098c 	.word	0x2000098c

1004a0fc <GAP_Set_Discoverable_Mode>:
1004a0fc:	b5f0      	push	{r4, r5, r6, r7, lr}
1004a0fe:	b08d      	sub	sp, #52	; 0x34
1004a100:	460c      	mov	r4, r1
1004a102:	a916      	add	r1, sp, #88	; 0x58
1004a104:	c9e0      	ldmia	r1!, {r5, r6, r7}
1004a106:	2100      	movs	r1, #0
1004a108:	9108      	str	r1, [sp, #32]
1004a10a:	9109      	str	r1, [sp, #36]	; 0x24
1004a10c:	910a      	str	r1, [sp, #40]	; 0x28
1004a10e:	910b      	str	r1, [sp, #44]	; 0x2c
1004a110:	9915      	ldr	r1, [sp, #84]	; 0x54
1004a112:	9104      	str	r1, [sp, #16]
1004a114:	a905      	add	r1, sp, #20
1004a116:	c1e0      	stmia	r1!, {r5, r6, r7}
1004a118:	a912      	add	r1, sp, #72	; 0x48
1004a11a:	c962      	ldmia	r1, {r1, r5, r6}
1004a11c:	9300      	str	r3, [sp, #0]
1004a11e:	9101      	str	r1, [sp, #4]
1004a120:	4613      	mov	r3, r2
1004a122:	4601      	mov	r1, r0
1004a124:	9603      	str	r6, [sp, #12]
1004a126:	9502      	str	r5, [sp, #8]
1004a128:	4622      	mov	r2, r4
1004a12a:	2001      	movs	r0, #1
1004a12c:	f000 f85c 	bl	1004a1e8 <_gap_set_discoverable_connectable>
1004a130:	b00d      	add	sp, #52	; 0x34
1004a132:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004a134 <GAP_Set_Non_Discoverable_Mode>:
1004a134:	2000      	movs	r0, #0
1004a136:	b500      	push	{lr}
1004a138:	b08d      	sub	sp, #52	; 0x34
1004a13a:	900a      	str	r0, [sp, #40]	; 0x28
1004a13c:	900b      	str	r0, [sp, #44]	; 0x2c
1004a13e:	9008      	str	r0, [sp, #32]
1004a140:	9009      	str	r0, [sp, #36]	; 0x24
1004a142:	9005      	str	r0, [sp, #20]
1004a144:	9006      	str	r0, [sp, #24]
1004a146:	9007      	str	r0, [sp, #28]
1004a148:	9004      	str	r0, [sp, #16]
1004a14a:	9000      	str	r0, [sp, #0]
1004a14c:	9001      	str	r0, [sp, #4]
1004a14e:	9002      	str	r0, [sp, #8]
1004a150:	4603      	mov	r3, r0
1004a152:	4602      	mov	r2, r0
1004a154:	4601      	mov	r1, r0
1004a156:	9003      	str	r0, [sp, #12]
1004a158:	f000 f846 	bl	1004a1e8 <_gap_set_discoverable_connectable>
1004a15c:	b00d      	add	sp, #52	; 0x34
1004a15e:	bd00      	pop	{pc}

1004a160 <GAP_check_and_set_role_ucfg>:
1004a160:	070a      	lsls	r2, r1, #28
1004a162:	0f92      	lsrs	r2, r2, #30
1004a164:	d001      	beq.n	1004a16a <GAP_check_and_set_role_ucfg+0xa>
1004a166:	2042      	movs	r0, #66	; 0x42
1004a168:	4770      	bx	lr
1004a16a:	078a      	lsls	r2, r1, #30
1004a16c:	d0fb      	beq.n	1004a166 <GAP_check_and_set_role_ucfg+0x6>
1004a16e:	7802      	ldrb	r2, [r0, #0]
1004a170:	0789      	lsls	r1, r1, #30
1004a172:	0f89      	lsrs	r1, r1, #30
1004a174:	430a      	orrs	r2, r1
1004a176:	7002      	strb	r2, [r0, #0]
1004a178:	2000      	movs	r0, #0
1004a17a:	4770      	bx	lr

1004a17c <GAP_discover_peer_name_ucfg>:
1004a17c:	4770      	bx	lr

1004a17e <GAP_enable_controller_privacy_ucfg>:
1004a17e:	2042      	movs	r0, #66	; 0x42
1004a180:	4770      	bx	lr
	...

1004a184 <_GAP_Parse_Advertising_Report>:
1004a184:	b530      	push	{r4, r5, lr}
1004a186:	4b17      	ldr	r3, [pc, #92]	; (1004a1e4 <_GAP_Parse_Advertising_Report+0x60>)
1004a188:	7a04      	ldrb	r4, [r0, #8]
1004a18a:	681b      	ldr	r3, [r3, #0]
1004a18c:	68c2      	ldr	r2, [r0, #12]
1004a18e:	33ae      	adds	r3, #174	; 0xae
1004a190:	791b      	ldrb	r3, [r3, #4]
1004a192:	069d      	lsls	r5, r3, #26
1004a194:	0fad      	lsrs	r5, r5, #30
1004a196:	d104      	bne.n	1004a1a2 <_GAP_Parse_Advertising_Report+0x1e>
1004a198:	7800      	ldrb	r0, [r0, #0]
1004a19a:	2804      	cmp	r0, #4
1004a19c:	d001      	beq.n	1004a1a2 <_GAP_Parse_Advertising_Report+0x1e>
1004a19e:	2000      	movs	r0, #0
1004a1a0:	e00b      	b.n	1004a1ba <_GAP_Parse_Advertising_Report+0x36>
1004a1a2:	2001      	movs	r0, #1
1004a1a4:	bd30      	pop	{r4, r5, pc}
1004a1a6:	1c40      	adds	r0, r0, #1
1004a1a8:	b280      	uxth	r0, r0
1004a1aa:	5c15      	ldrb	r5, [r2, r0]
1004a1ac:	2d01      	cmp	r5, #1
1004a1ae:	d008      	beq.n	1004a1c2 <_GAP_Parse_Advertising_Report+0x3e>
1004a1b0:	1815      	adds	r5, r2, r0
1004a1b2:	3d20      	subs	r5, #32
1004a1b4:	7fed      	ldrb	r5, [r5, #31]
1004a1b6:	1828      	adds	r0, r5, r0
1004a1b8:	b280      	uxth	r0, r0
1004a1ba:	42a0      	cmp	r0, r4
1004a1bc:	d3f3      	bcc.n	1004a1a6 <_GAP_Parse_Advertising_Report+0x22>
1004a1be:	7808      	ldrb	r0, [r1, #0]
1004a1c0:	bd30      	pop	{r4, r5, pc}
1004a1c2:	1c40      	adds	r0, r0, #1
1004a1c4:	07dd      	lsls	r5, r3, #31
1004a1c6:	2401      	movs	r4, #1
1004a1c8:	b280      	uxth	r0, r0
1004a1ca:	2d00      	cmp	r5, #0
1004a1cc:	d002      	beq.n	1004a1d4 <_GAP_Parse_Advertising_Report+0x50>
1004a1ce:	5c10      	ldrb	r0, [r2, r0]
1004a1d0:	07c0      	lsls	r0, r0, #31
1004a1d2:	e003      	b.n	1004a1dc <_GAP_Parse_Advertising_Report+0x58>
1004a1d4:	079b      	lsls	r3, r3, #30
1004a1d6:	d5f2      	bpl.n	1004a1be <_GAP_Parse_Advertising_Report+0x3a>
1004a1d8:	5c10      	ldrb	r0, [r2, r0]
1004a1da:	0780      	lsls	r0, r0, #30
1004a1dc:	2800      	cmp	r0, #0
1004a1de:	d0ee      	beq.n	1004a1be <_GAP_Parse_Advertising_Report+0x3a>
1004a1e0:	700c      	strb	r4, [r1, #0]
1004a1e2:	e7ec      	b.n	1004a1be <_GAP_Parse_Advertising_Report+0x3a>
1004a1e4:	2000098c 	.word	0x2000098c

1004a1e8 <_gap_set_discoverable_connectable>:
1004a1e8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004a1ea:	b095      	sub	sp, #84	; 0x54
1004a1ec:	460e      	mov	r6, r1
1004a1ee:	4605      	mov	r5, r0
1004a1f0:	2120      	movs	r1, #32
1004a1f2:	a80c      	add	r0, sp, #48	; 0x30
1004a1f4:	f7fa f9c4 	bl	10044580 <__aeabi_memclr4>
1004a1f8:	2000      	movs	r0, #0
1004a1fa:	9004      	str	r0, [sp, #16]
1004a1fc:	4856      	ldr	r0, [pc, #344]	; (1004a358 <_gap_set_discoverable_connectable+0x170>)
1004a1fe:	2700      	movs	r7, #0
1004a200:	6804      	ldr	r4, [r0, #0]
1004a202:	1e68      	subs	r0, r5, #1
1004a204:	34ae      	adds	r4, #174	; 0xae
1004a206:	2804      	cmp	r0, #4
1004a208:	d802      	bhi.n	1004a210 <_gap_set_discoverable_connectable+0x28>
1004a20a:	78a0      	ldrb	r0, [r4, #2]
1004a20c:	07c0      	lsls	r0, r0, #31
1004a20e:	d00b      	beq.n	1004a228 <_gap_set_discoverable_connectable+0x40>
1004a210:	2d06      	cmp	r5, #6
1004a212:	d002      	beq.n	1004a21a <_gap_set_discoverable_connectable+0x32>
1004a214:	2d00      	cmp	r5, #0
1004a216:	d00a      	beq.n	1004a22e <_gap_set_discoverable_connectable+0x46>
1004a218:	e002      	b.n	1004a220 <_gap_set_discoverable_connectable+0x38>
1004a21a:	78a0      	ldrb	r0, [r4, #2]
1004a21c:	0780      	lsls	r0, r0, #30
1004a21e:	d503      	bpl.n	1004a228 <_gap_set_discoverable_connectable+0x40>
1004a220:	78e0      	ldrb	r0, [r4, #3]
1004a222:	0640      	lsls	r0, r0, #25
1004a224:	0e80      	lsrs	r0, r0, #26
1004a226:	d00a      	beq.n	1004a23e <_gap_set_discoverable_connectable+0x56>
1004a228:	2046      	movs	r0, #70	; 0x46
1004a22a:	b019      	add	sp, #100	; 0x64
1004a22c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004a22e:	78a0      	ldrb	r0, [r4, #2]
1004a230:	0780      	lsls	r0, r0, #30
1004a232:	d0f9      	beq.n	1004a228 <_gap_set_discoverable_connectable+0x40>
1004a234:	78e0      	ldrb	r0, [r4, #3]
1004a236:	0640      	lsls	r0, r0, #25
1004a238:	0e80      	lsrs	r0, r0, #26
1004a23a:	d0f5      	beq.n	1004a228 <_gap_set_discoverable_connectable+0x40>
1004a23c:	e00f      	b.n	1004a25e <_gap_set_discoverable_connectable+0x76>
1004a23e:	2d00      	cmp	r5, #0
1004a240:	d00d      	beq.n	1004a25e <_gap_set_discoverable_connectable+0x76>
1004a242:	2d01      	cmp	r5, #1
1004a244:	d020      	beq.n	1004a288 <_gap_set_discoverable_connectable+0xa0>
1004a246:	2d02      	cmp	r5, #2
1004a248:	d028      	beq.n	1004a29c <_gap_set_discoverable_connectable+0xb4>
1004a24a:	2d06      	cmp	r5, #6
1004a24c:	d033      	beq.n	1004a2b6 <_gap_set_discoverable_connectable+0xce>
1004a24e:	2d03      	cmp	r5, #3
1004a250:	d033      	beq.n	1004a2ba <_gap_set_discoverable_connectable+0xd2>
1004a252:	2d04      	cmp	r5, #4
1004a254:	d037      	beq.n	1004a2c6 <_gap_set_discoverable_connectable+0xde>
1004a256:	2e00      	cmp	r6, #0
1004a258:	d03b      	beq.n	1004a2d2 <_gap_set_discoverable_connectable+0xea>
1004a25a:	2042      	movs	r0, #66	; 0x42
1004a25c:	e7e5      	b.n	1004a22a <_gap_set_discoverable_connectable+0x42>
1004a25e:	2000      	movs	r0, #0
1004a260:	f007 fa66 	bl	10051730 <LL_Enable_Disable_Adv>
1004a264:	2800      	cmp	r0, #0
1004a266:	d1e0      	bne.n	1004a22a <_gap_set_discoverable_connectable+0x42>
1004a268:	78e0      	ldrb	r0, [r4, #3]
1004a26a:	0780      	lsls	r0, r0, #30
1004a26c:	d508      	bpl.n	1004a280 <_gap_set_discoverable_connectable+0x98>
1004a26e:	2004      	movs	r0, #4
1004a270:	4669      	mov	r1, sp
1004a272:	7308      	strb	r0, [r1, #12]
1004a274:	4668      	mov	r0, sp
1004a276:	f002 fe23 	bl	1004cec0 <Timer_StopOneShot>
1004a27a:	2002      	movs	r0, #2
1004a27c:	f000 f86e 	bl	1004a35c <aci_gap_limited_discoverable_event_push>
1004a280:	2001      	movs	r0, #1
1004a282:	70e0      	strb	r0, [r4, #3]
1004a284:	2000      	movs	r0, #0
1004a286:	e7d0      	b.n	1004a22a <_gap_set_discoverable_connectable+0x42>
1004a288:	2e01      	cmp	r6, #1
1004a28a:	d0e6      	beq.n	1004a25a <_gap_set_discoverable_connectable+0x72>
1004a28c:	2e04      	cmp	r6, #4
1004a28e:	d0e4      	beq.n	1004a25a <_gap_set_discoverable_connectable+0x72>
1004a290:	981f      	ldr	r0, [sp, #124]	; 0x7c
1004a292:	2800      	cmp	r0, #0
1004a294:	d1e1      	bne.n	1004a25a <_gap_set_discoverable_connectable+0x72>
1004a296:	2706      	movs	r7, #6
1004a298:	2004      	movs	r0, #4
1004a29a:	e008      	b.n	1004a2ae <_gap_set_discoverable_connectable+0xc6>
1004a29c:	2e01      	cmp	r6, #1
1004a29e:	d0dc      	beq.n	1004a25a <_gap_set_discoverable_connectable+0x72>
1004a2a0:	2e04      	cmp	r6, #4
1004a2a2:	d0da      	beq.n	1004a25a <_gap_set_discoverable_connectable+0x72>
1004a2a4:	981f      	ldr	r0, [sp, #124]	; 0x7c
1004a2a6:	2800      	cmp	r0, #0
1004a2a8:	d1d7      	bne.n	1004a25a <_gap_set_discoverable_connectable+0x72>
1004a2aa:	2705      	movs	r7, #5
1004a2ac:	2002      	movs	r0, #2
1004a2ae:	70e0      	strb	r0, [r4, #3]
1004a2b0:	2001      	movs	r0, #1
1004a2b2:	9004      	str	r0, [sp, #16]
1004a2b4:	e010      	b.n	1004a2d8 <_gap_set_discoverable_connectable+0xf0>
1004a2b6:	2040      	movs	r0, #64	; 0x40
1004a2b8:	e00d      	b.n	1004a2d6 <_gap_set_discoverable_connectable+0xee>
1004a2ba:	2e02      	cmp	r6, #2
1004a2bc:	d001      	beq.n	1004a2c2 <_gap_set_discoverable_connectable+0xda>
1004a2be:	2e03      	cmp	r6, #3
1004a2c0:	d1cb      	bne.n	1004a25a <_gap_set_discoverable_connectable+0x72>
1004a2c2:	2008      	movs	r0, #8
1004a2c4:	e007      	b.n	1004a2d6 <_gap_set_discoverable_connectable+0xee>
1004a2c6:	2e01      	cmp	r6, #1
1004a2c8:	d001      	beq.n	1004a2ce <_gap_set_discoverable_connectable+0xe6>
1004a2ca:	2e04      	cmp	r6, #4
1004a2cc:	d1c5      	bne.n	1004a25a <_gap_set_discoverable_connectable+0x72>
1004a2ce:	2010      	movs	r0, #16
1004a2d0:	e001      	b.n	1004a2d6 <_gap_set_discoverable_connectable+0xee>
1004a2d2:	2704      	movs	r7, #4
1004a2d4:	2020      	movs	r0, #32
1004a2d6:	70e0      	strb	r0, [r4, #3]
1004a2d8:	2300      	movs	r3, #0
1004a2da:	aa0b      	add	r2, sp, #44	; 0x2c
1004a2dc:	4619      	mov	r1, r3
1004a2de:	981e      	ldr	r0, [sp, #120]	; 0x78
1004a2e0:	f006 fb82 	bl	100509e8 <GAP_Privacy1v2>
1004a2e4:	0003      	movs	r3, r0
1004a2e6:	d002      	beq.n	1004a2ee <_gap_set_discoverable_connectable+0x106>
1004a2e8:	f000 f8de 	bl	1004a4a8 <gapClearAllModeFlags>
1004a2ec:	e032      	b.n	1004a354 <_gap_set_discoverable_connectable+0x16c>
1004a2ee:	2210      	movs	r2, #16
1004a2f0:	2100      	movs	r1, #0
1004a2f2:	a807      	add	r0, sp, #28
1004a2f4:	f7f8 ff67 	bl	100431c6 <Osal_MemSet>
1004a2f8:	a807      	add	r0, sp, #28
1004a2fa:	466c      	mov	r4, sp
1004a2fc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
1004a2fe:	9a26      	ldr	r2, [sp, #152]	; 0x98
1004a300:	991f      	ldr	r1, [sp, #124]	; 0x7c
1004a302:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1004a304:	462b      	mov	r3, r5
1004a306:	4630      	mov	r0, r6
1004a308:	9a18      	ldr	r2, [sp, #96]	; 0x60
1004a30a:	9917      	ldr	r1, [sp, #92]	; 0x5c
1004a30c:	f000 f888 	bl	1004a420 <advParamsCheckAndSet>
1004a310:	0003      	movs	r3, r0
1004a312:	d1e9      	bne.n	1004a2e8 <_gap_set_discoverable_connectable+0x100>
1004a314:	a808      	add	r0, sp, #32
1004a316:	7b01      	ldrb	r1, [r0, #12]
1004a318:	70c1      	strb	r1, [r0, #3]
1004a31a:	9825      	ldr	r0, [sp, #148]	; 0x94
1004a31c:	ac03      	add	r4, sp, #12
1004a31e:	9b04      	ldr	r3, [sp, #16]
1004a320:	9a28      	ldr	r2, [sp, #160]	; 0xa0
1004a322:	9929      	ldr	r1, [sp, #164]	; 0xa4
1004a324:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1004a326:	ab22      	add	r3, sp, #136	; 0x88
1004a328:	cb07      	ldmia	r3!, {r0, r1, r2}
1004a32a:	9202      	str	r2, [sp, #8]
1004a32c:	9100      	str	r1, [sp, #0]
1004a32e:	9001      	str	r0, [sp, #4]
1004a330:	4639      	mov	r1, r7
1004a332:	a80c      	add	r0, sp, #48	; 0x30
1004a334:	9b20      	ldr	r3, [sp, #128]	; 0x80
1004a336:	9a21      	ldr	r2, [sp, #132]	; 0x84
1004a338:	f000 f8c0 	bl	1004a4bc <setGapAdvData>
1004a33c:	0003      	movs	r3, r0
1004a33e:	d1d3      	bne.n	1004a2e8 <_gap_set_discoverable_connectable+0x100>
1004a340:	a807      	add	r0, sp, #28
1004a342:	f007 fd05 	bl	10051d50 <LL_Set_Adv_Params>
1004a346:	0003      	movs	r3, r0
1004a348:	d1ce      	bne.n	1004a2e8 <_gap_set_discoverable_connectable+0x100>
1004a34a:	2001      	movs	r0, #1
1004a34c:	f007 f9f0 	bl	10051730 <LL_Enable_Disable_Adv>
1004a350:	0003      	movs	r3, r0
1004a352:	d1c9      	bne.n	1004a2e8 <_gap_set_discoverable_connectable+0x100>
1004a354:	4618      	mov	r0, r3
1004a356:	e768      	b.n	1004a22a <_gap_set_discoverable_connectable+0x42>
1004a358:	2000098c 	.word	0x2000098c

1004a35c <aci_gap_limited_discoverable_event_push>:
1004a35c:	b510      	push	{r4, lr}
1004a35e:	4604      	mov	r4, r0
1004a360:	06c1      	lsls	r1, r0, #27
1004a362:	4811      	ldr	r0, [pc, #68]	; (1004a3a8 <aci_gap_limited_discoverable_event_push+0x4c>)
1004a364:	6800      	ldr	r0, [r0, #0]
1004a366:	d503      	bpl.n	1004a370 <aci_gap_limited_discoverable_event_push+0x14>
1004a368:	2215      	movs	r2, #21
1004a36a:	21bf      	movs	r1, #191	; 0xbf
1004a36c:	400c      	ands	r4, r1
1004a36e:	e006      	b.n	1004a37e <aci_gap_limited_discoverable_event_push+0x22>
1004a370:	2137      	movs	r1, #55	; 0x37
1004a372:	0149      	lsls	r1, r1, #5
1004a374:	1841      	adds	r1, r0, r1
1004a376:	7a89      	ldrb	r1, [r1, #10]
1004a378:	07c9      	lsls	r1, r1, #31
1004a37a:	d010      	beq.n	1004a39e <aci_gap_limited_discoverable_event_push+0x42>
1004a37c:	2212      	movs	r2, #18
1004a37e:	0721      	lsls	r1, r4, #28
1004a380:	0e89      	lsrs	r1, r1, #26
1004a382:	1808      	adds	r0, r1, r0
1004a384:	2101      	movs	r1, #1
1004a386:	02c9      	lsls	r1, r1, #11
1004a388:	1840      	adds	r0, r0, r1
1004a38a:	6940      	ldr	r0, [r0, #20]
1004a38c:	2300      	movs	r3, #0
1004a38e:	4621      	mov	r1, r4
1004a390:	f00a ff2c 	bl	100551ec <aci_event_fifo_push_header>
1004a394:	0001      	movs	r1, r0
1004a396:	d004      	beq.n	1004a3a2 <aci_gap_limited_discoverable_event_push+0x46>
1004a398:	4620      	mov	r0, r4
1004a39a:	f00a ff13 	bl	100551c4 <aci_event_fifo_push>
1004a39e:	2000      	movs	r0, #0
1004a3a0:	bd10      	pop	{r4, pc}
1004a3a2:	2007      	movs	r0, #7
1004a3a4:	bd10      	pop	{r4, pc}
1004a3a6:	0000      	.short	0x0000
1004a3a8:	2000098c 	.word	0x2000098c

1004a3ac <aci_gap_proc_complete_event_push>:
1004a3ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004a3ae:	1e89      	subs	r1, r1, #2
1004a3b0:	b2cd      	uxtb	r5, r1
1004a3b2:	4606      	mov	r6, r0
1004a3b4:	1ca8      	adds	r0, r5, #2
1004a3b6:	2103      	movs	r1, #3
1004a3b8:	4308      	orrs	r0, r1
1004a3ba:	1c40      	adds	r0, r0, #1
1004a3bc:	0883      	lsrs	r3, r0, #2
1004a3be:	4817      	ldr	r0, [pc, #92]	; (1004a41c <aci_gap_proc_complete_event_push+0x70>)
1004a3c0:	4617      	mov	r7, r2
1004a3c2:	6800      	ldr	r0, [r0, #0]
1004a3c4:	06f1      	lsls	r1, r6, #27
1004a3c6:	d503      	bpl.n	1004a3d0 <aci_gap_proc_complete_event_push+0x24>
1004a3c8:	221c      	movs	r2, #28
1004a3ca:	21bf      	movs	r1, #191	; 0xbf
1004a3cc:	400e      	ands	r6, r1
1004a3ce:	e008      	b.n	1004a3e2 <aci_gap_proc_complete_event_push+0x36>
1004a3d0:	2137      	movs	r1, #55	; 0x37
1004a3d2:	0149      	lsls	r1, r1, #5
1004a3d4:	1841      	adds	r1, r0, r1
1004a3d6:	7a89      	ldrb	r1, [r1, #10]
1004a3d8:	0609      	lsls	r1, r1, #24
1004a3da:	d401      	bmi.n	1004a3e0 <aci_gap_proc_complete_event_push+0x34>
1004a3dc:	2000      	movs	r0, #0
1004a3de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004a3e0:	2219      	movs	r2, #25
1004a3e2:	0731      	lsls	r1, r6, #28
1004a3e4:	0e89      	lsrs	r1, r1, #26
1004a3e6:	1808      	adds	r0, r1, r0
1004a3e8:	2101      	movs	r1, #1
1004a3ea:	02c9      	lsls	r1, r1, #11
1004a3ec:	1840      	adds	r0, r0, r1
1004a3ee:	6940      	ldr	r0, [r0, #20]
1004a3f0:	4631      	mov	r1, r6
1004a3f2:	f00a fefb 	bl	100551ec <aci_event_fifo_push_header>
1004a3f6:	0004      	movs	r4, r0
1004a3f8:	d00e      	beq.n	1004a418 <aci_gap_proc_complete_event_push+0x6c>
1004a3fa:	7839      	ldrb	r1, [r7, #0]
1004a3fc:	7121      	strb	r1, [r4, #4]
1004a3fe:	7879      	ldrb	r1, [r7, #1]
1004a400:	7161      	strb	r1, [r4, #5]
1004a402:	71a5      	strb	r5, [r4, #6]
1004a404:	462a      	mov	r2, r5
1004a406:	1cb9      	adds	r1, r7, #2
1004a408:	1de0      	adds	r0, r4, #7
1004a40a:	f7f8 fed8 	bl	100431be <Osal_MemCpy>
1004a40e:	4621      	mov	r1, r4
1004a410:	4630      	mov	r0, r6
1004a412:	f00a fed7 	bl	100551c4 <aci_event_fifo_push>
1004a416:	e7e1      	b.n	1004a3dc <aci_gap_proc_complete_event_push+0x30>
1004a418:	2007      	movs	r0, #7
1004a41a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004a41c:	2000098c 	.word	0x2000098c

1004a420 <advParamsCheckAndSet>:
1004a420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004a422:	4b20      	ldr	r3, [pc, #128]	; (1004a4a4 <advParamsCheckAndSet+0x84>)
1004a424:	2541      	movs	r5, #65	; 0x41
1004a426:	681b      	ldr	r3, [r3, #0]
1004a428:	016d      	lsls	r5, r5, #5
1004a42a:	195b      	adds	r3, r3, r5
1004a42c:	2601      	movs	r6, #1
1004a42e:	9c06      	ldr	r4, [sp, #24]
1004a430:	03b6      	lsls	r6, r6, #14
1004a432:	9300      	str	r3, [sp, #0]
1004a434:	2800      	cmp	r0, #0
1004a436:	d014      	beq.n	1004a462 <advParamsCheckAndSet+0x42>
1004a438:	2804      	cmp	r0, #4
1004a43a:	d012      	beq.n	1004a462 <advParamsCheckAndSet+0x42>
1004a43c:	2802      	cmp	r0, #2
1004a43e:	d013      	beq.n	1004a468 <advParamsCheckAndSet+0x48>
1004a440:	2803      	cmp	r0, #3
1004a442:	d011      	beq.n	1004a468 <advParamsCheckAndSet+0x48>
1004a444:	2506      	movs	r5, #6
1004a446:	462b      	mov	r3, r5
1004a448:	2801      	cmp	r0, #1
1004a44a:	d010      	beq.n	1004a46e <advParamsCheckAndSet+0x4e>
1004a44c:	460f      	mov	r7, r1
1004a44e:	4317      	orrs	r7, r2
1004a450:	d00d      	beq.n	1004a46e <advParamsCheckAndSet+0x4e>
1004a452:	4291      	cmp	r1, r2
1004a454:	d803      	bhi.n	1004a45e <advParamsCheckAndSet+0x3e>
1004a456:	2920      	cmp	r1, #32
1004a458:	d301      	bcc.n	1004a45e <advParamsCheckAndSet+0x3e>
1004a45a:	42b2      	cmp	r2, r6
1004a45c:	d90a      	bls.n	1004a474 <advParamsCheckAndSet+0x54>
1004a45e:	2042      	movs	r0, #66	; 0x42
1004a460:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004a462:	2530      	movs	r5, #48	; 0x30
1004a464:	2360      	movs	r3, #96	; 0x60
1004a466:	e7ef      	b.n	1004a448 <advParamsCheckAndSet+0x28>
1004a468:	25a0      	movs	r5, #160	; 0xa0
1004a46a:	23f0      	movs	r3, #240	; 0xf0
1004a46c:	e7ec      	b.n	1004a448 <advParamsCheckAndSet+0x28>
1004a46e:	8025      	strh	r5, [r4, #0]
1004a470:	8063      	strh	r3, [r4, #2]
1004a472:	e001      	b.n	1004a478 <advParamsCheckAndSet+0x58>
1004a474:	8021      	strh	r1, [r4, #0]
1004a476:	8062      	strh	r2, [r4, #2]
1004a478:	7120      	strb	r0, [r4, #4]
1004a47a:	9807      	ldr	r0, [sp, #28]
1004a47c:	71a0      	strb	r0, [r4, #6]
1004a47e:	9808      	ldr	r0, [sp, #32]
1004a480:	7220      	strb	r0, [r4, #8]
1004a482:	9809      	ldr	r0, [sp, #36]	; 0x24
1004a484:	2800      	cmp	r0, #0
1004a486:	d005      	beq.n	1004a494 <advParamsCheckAndSet+0x74>
1004a488:	4601      	mov	r1, r0
1004a48a:	4620      	mov	r0, r4
1004a48c:	2206      	movs	r2, #6
1004a48e:	3009      	adds	r0, #9
1004a490:	f7f8 fe95 	bl	100431be <Osal_MemCpy>
1004a494:	2007      	movs	r0, #7
1004a496:	7160      	strb	r0, [r4, #5]
1004a498:	9800      	ldr	r0, [sp, #0]
1004a49a:	3020      	adds	r0, #32
1004a49c:	7b80      	ldrb	r0, [r0, #14]
1004a49e:	7160      	strb	r0, [r4, #5]
1004a4a0:	2000      	movs	r0, #0
1004a4a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004a4a4:	2000098c 	.word	0x2000098c

1004a4a8 <gapClearAllModeFlags>:
1004a4a8:	4803      	ldr	r0, [pc, #12]	; (1004a4b8 <gapClearAllModeFlags+0x10>)
1004a4aa:	2281      	movs	r2, #129	; 0x81
1004a4ac:	6800      	ldr	r0, [r0, #0]
1004a4ae:	30a0      	adds	r0, #160	; 0xa0
1004a4b0:	7c41      	ldrb	r1, [r0, #17]
1004a4b2:	4011      	ands	r1, r2
1004a4b4:	7441      	strb	r1, [r0, #17]
1004a4b6:	4770      	bx	lr
1004a4b8:	2000098c 	.word	0x2000098c

1004a4bc <setGapAdvData>:
1004a4bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004a4be:	4605      	mov	r5, r0
1004a4c0:	483e      	ldr	r0, [pc, #248]	; (1004a5bc <setGapAdvData+0x100>)
1004a4c2:	461e      	mov	r6, r3
1004a4c4:	6800      	ldr	r0, [r0, #0]
1004a4c6:	9f07      	ldr	r7, [sp, #28]
1004a4c8:	2400      	movs	r4, #0
1004a4ca:	30ae      	adds	r0, #174	; 0xae
1004a4cc:	4613      	mov	r3, r2
1004a4ce:	2900      	cmp	r1, #0
1004a4d0:	d005      	beq.n	1004a4de <setGapAdvData+0x22>
1004a4d2:	2202      	movs	r2, #2
1004a4d4:	702a      	strb	r2, [r5, #0]
1004a4d6:	2201      	movs	r2, #1
1004a4d8:	706a      	strb	r2, [r5, #1]
1004a4da:	70a9      	strb	r1, [r5, #2]
1004a4dc:	2403      	movs	r4, #3
1004a4de:	2e00      	cmp	r6, #0
1004a4e0:	d010      	beq.n	1004a504 <setGapAdvData+0x48>
1004a4e2:	7880      	ldrb	r0, [r0, #2]
1004a4e4:	0680      	lsls	r0, r0, #26
1004a4e6:	0f80      	lsrs	r0, r0, #30
1004a4e8:	d10c      	bne.n	1004a504 <setGapAdvData+0x48>
1004a4ea:	1930      	adds	r0, r6, r4
1004a4ec:	1c40      	adds	r0, r0, #1
1004a4ee:	281f      	cmp	r0, #31
1004a4f0:	d854      	bhi.n	1004a59c <setGapAdvData+0xe0>
1004a4f2:	552e      	strb	r6, [r5, r4]
1004a4f4:	1c64      	adds	r4, r4, #1
1004a4f6:	1928      	adds	r0, r5, r4
1004a4f8:	4632      	mov	r2, r6
1004a4fa:	4619      	mov	r1, r3
1004a4fc:	f7f8 fe5f 	bl	100431be <Osal_MemCpy>
1004a500:	19a0      	adds	r0, r4, r6
1004a502:	b2c4      	uxtb	r4, r0
1004a504:	2f00      	cmp	r7, #0
1004a506:	d00d      	beq.n	1004a524 <setGapAdvData+0x68>
1004a508:	1938      	adds	r0, r7, r4
1004a50a:	1c40      	adds	r0, r0, #1
1004a50c:	281f      	cmp	r0, #31
1004a50e:	d845      	bhi.n	1004a59c <setGapAdvData+0xe0>
1004a510:	552f      	strb	r7, [r5, r4]
1004a512:	1c64      	adds	r4, r4, #1
1004a514:	b2e4      	uxtb	r4, r4
1004a516:	1928      	adds	r0, r5, r4
1004a518:	463a      	mov	r2, r7
1004a51a:	9906      	ldr	r1, [sp, #24]
1004a51c:	f7f8 fe4f 	bl	100431be <Osal_MemCpy>
1004a520:	19e0      	adds	r0, r4, r7
1004a522:	b2c4      	uxtb	r4, r0
1004a524:	4668      	mov	r0, sp
1004a526:	8c00      	ldrh	r0, [r0, #32]
1004a528:	2800      	cmp	r0, #0
1004a52a:	d01b      	beq.n	1004a564 <setGapAdvData+0xa8>
1004a52c:	4668      	mov	r0, sp
1004a52e:	8c80      	ldrh	r0, [r0, #36]	; 0x24
1004a530:	2800      	cmp	r0, #0
1004a532:	d017      	beq.n	1004a564 <setGapAdvData+0xa8>
1004a534:	1d60      	adds	r0, r4, #5
1004a536:	281f      	cmp	r0, #31
1004a538:	d830      	bhi.n	1004a59c <setGapAdvData+0xe0>
1004a53a:	2005      	movs	r0, #5
1004a53c:	5528      	strb	r0, [r5, r4]
1004a53e:	1c64      	adds	r4, r4, #1
1004a540:	b2e0      	uxtb	r0, r4
1004a542:	2112      	movs	r1, #18
1004a544:	5429      	strb	r1, [r5, r0]
1004a546:	1c40      	adds	r0, r0, #1
1004a548:	b2c4      	uxtb	r4, r0
1004a54a:	1928      	adds	r0, r5, r4
1004a54c:	4606      	mov	r6, r0
1004a54e:	2202      	movs	r2, #2
1004a550:	a908      	add	r1, sp, #32
1004a552:	f7f8 fe34 	bl	100431be <Osal_MemCpy>
1004a556:	1cb0      	adds	r0, r6, #2
1004a558:	2202      	movs	r2, #2
1004a55a:	a909      	add	r1, sp, #36	; 0x24
1004a55c:	f7f8 fe2f 	bl	100431be <Osal_MemCpy>
1004a560:	1d24      	adds	r4, r4, #4
1004a562:	b2e4      	uxtb	r4, r4
1004a564:	980c      	ldr	r0, [sp, #48]	; 0x30
1004a566:	2800      	cmp	r0, #0
1004a568:	d012      	beq.n	1004a590 <setGapAdvData+0xd4>
1004a56a:	1ce0      	adds	r0, r4, #3
1004a56c:	281f      	cmp	r0, #31
1004a56e:	d815      	bhi.n	1004a59c <setGapAdvData+0xe0>
1004a570:	2002      	movs	r0, #2
1004a572:	5528      	strb	r0, [r5, r4]
1004a574:	1c64      	adds	r4, r4, #1
1004a576:	b2e0      	uxtb	r0, r4
1004a578:	210a      	movs	r1, #10
1004a57a:	5429      	strb	r1, [r5, r0]
1004a57c:	1c40      	adds	r0, r0, #1
1004a57e:	b2c4      	uxtb	r4, r0
1004a580:	4668      	mov	r0, sp
1004a582:	f007 fde7 	bl	10052154 <LL_Get_Adv_Tx_Power_Level>
1004a586:	4668      	mov	r0, sp
1004a588:	7800      	ldrb	r0, [r0, #0]
1004a58a:	5528      	strb	r0, [r5, r4]
1004a58c:	1c64      	adds	r4, r4, #1
1004a58e:	b2e4      	uxtb	r4, r4
1004a590:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004a592:	2800      	cmp	r0, #0
1004a594:	d00c      	beq.n	1004a5b0 <setGapAdvData+0xf4>
1004a596:	1900      	adds	r0, r0, r4
1004a598:	281f      	cmp	r0, #31
1004a59a:	d901      	bls.n	1004a5a0 <setGapAdvData+0xe4>
1004a59c:	2042      	movs	r0, #66	; 0x42
1004a59e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004a5a0:	1928      	adds	r0, r5, r4
1004a5a2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1004a5a4:	990a      	ldr	r1, [sp, #40]	; 0x28
1004a5a6:	f7f8 fe0a 	bl	100431be <Osal_MemCpy>
1004a5aa:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004a5ac:	1820      	adds	r0, r4, r0
1004a5ae:	b2c4      	uxtb	r4, r0
1004a5b0:	4621      	mov	r1, r4
1004a5b2:	4628      	mov	r0, r5
1004a5b4:	f007 fb2a 	bl	10051c0c <LL_Set_Adv_Data>
1004a5b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004a5ba:	0000      	.short	0x0000
1004a5bc:	2000098c 	.word	0x2000098c

1004a5c0 <Find_Gatt_Client>:
1004a5c0:	b510      	push	{r4, lr}
1004a5c2:	490d      	ldr	r1, [pc, #52]	; (1004a5f8 <Find_Gatt_Client+0x38>)
1004a5c4:	0500      	lsls	r0, r0, #20
1004a5c6:	680b      	ldr	r3, [r1, #0]
1004a5c8:	2109      	movs	r1, #9
1004a5ca:	0209      	lsls	r1, r1, #8
1004a5cc:	1859      	adds	r1, r3, r1
1004a5ce:	6b4a      	ldr	r2, [r1, #52]	; 0x34
1004a5d0:	2100      	movs	r1, #0
1004a5d2:	0d00      	lsrs	r0, r0, #20
1004a5d4:	33a0      	adds	r3, #160	; 0xa0
1004a5d6:	7b1b      	ldrb	r3, [r3, #12]
1004a5d8:	e00a      	b.n	1004a5f0 <Find_Gatt_Client+0x30>
1004a5da:	014c      	lsls	r4, r1, #5
1004a5dc:	5b14      	ldrh	r4, [r2, r4]
1004a5de:	0524      	lsls	r4, r4, #20
1004a5e0:	0d24      	lsrs	r4, r4, #20
1004a5e2:	4284      	cmp	r4, r0
1004a5e4:	d102      	bne.n	1004a5ec <Find_Gatt_Client+0x2c>
1004a5e6:	0148      	lsls	r0, r1, #5
1004a5e8:	1880      	adds	r0, r0, r2
1004a5ea:	bd10      	pop	{r4, pc}
1004a5ec:	1c49      	adds	r1, r1, #1
1004a5ee:	b2c9      	uxtb	r1, r1
1004a5f0:	428b      	cmp	r3, r1
1004a5f2:	d8f2      	bhi.n	1004a5da <Find_Gatt_Client+0x1a>
1004a5f4:	2000      	movs	r0, #0
1004a5f6:	bd10      	pop	{r4, pc}
1004a5f8:	2000098c 	.word	0x2000098c

1004a5fc <Build_Notif_Or_Ind>:
1004a5fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004a5fe:	9c06      	ldr	r4, [sp, #24]
1004a600:	461f      	mov	r7, r3
1004a602:	4615      	mov	r5, r2
1004a604:	4606      	mov	r6, r0
1004a606:	2c00      	cmp	r4, #0
1004a608:	d013      	beq.n	1004a632 <Build_Notif_Or_Ind+0x36>
1004a60a:	68a0      	ldr	r0, [r4, #8]
1004a60c:	2202      	movs	r2, #2
1004a60e:	300d      	adds	r0, #13
1004a610:	f7f8 fdd5 	bl	100431be <Osal_MemCpy>
1004a614:	1ee8      	subs	r0, r5, #3
1004a616:	b282      	uxth	r2, r0
1004a618:	463b      	mov	r3, r7
1004a61a:	2107      	movs	r1, #7
1004a61c:	4620      	mov	r0, r4
1004a61e:	f006 f92d 	bl	1005087c <PM_Write_Pckt_Data>
1004a622:	80e5      	strh	r5, [r4, #6]
1004a624:	68a0      	ldr	r0, [r4, #8]
1004a626:	2e01      	cmp	r6, #1
1004a628:	d005      	beq.n	1004a636 <Build_Notif_Or_Ind+0x3a>
1004a62a:	211d      	movs	r1, #29
1004a62c:	7301      	strb	r1, [r0, #12]
1004a62e:	2000      	movs	r0, #0
1004a630:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004a632:	2047      	movs	r0, #71	; 0x47
1004a634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004a636:	211b      	movs	r1, #27
1004a638:	e7f8      	b.n	1004a62c <Build_Notif_Or_Ind+0x30>
	...

1004a63c <Check_For_Service_Change>:
1004a63c:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1004a63e:	b0ff      	sub	sp, #508	; 0x1fc
1004a640:	2401      	movs	r4, #1
1004a642:	b08b      	sub	sp, #44	; 0x2c
1004a644:	0260      	lsls	r0, r4, #9
1004a646:	9005      	str	r0, [sp, #20]
1004a648:	2700      	movs	r7, #0
1004a64a:	48cc      	ldr	r0, [pc, #816]	; (1004a97c <Check_For_Service_Change+0x340>)
1004a64c:	9707      	str	r7, [sp, #28]
1004a64e:	6801      	ldr	r1, [r0, #0]
1004a650:	48cb      	ldr	r0, [pc, #812]	; (1004a980 <Check_For_Service_Change+0x344>)
1004a652:	4dc9      	ldr	r5, [pc, #804]	; (1004a978 <Check_For_Service_Change+0x33c>)
1004a654:	1808      	adds	r0, r1, r0
1004a656:	9003      	str	r0, [sp, #12]
1004a658:	988a      	ldr	r0, [sp, #552]	; 0x228
1004a65a:	aa0a      	add	r2, sp, #40	; 0x28
1004a65c:	0500      	lsls	r0, r0, #20
1004a65e:	0d00      	lsrs	r0, r0, #20
1004a660:	a905      	add	r1, sp, #20
1004a662:	f008 fb51 	bl	10052d08 <SDB_read_peer_bonded_data>
1004a666:	9006      	str	r0, [sp, #24]
1004a668:	2800      	cmp	r0, #0
1004a66a:	d172      	bne.n	1004a752 <Check_For_Service_Change+0x116>
1004a66c:	2604      	movs	r6, #4
1004a66e:	a80a      	add	r0, sp, #40	; 0x28
1004a670:	9905      	ldr	r1, [sp, #20]
1004a672:	1842      	adds	r2, r0, r1
1004a674:	3a20      	subs	r2, #32
1004a676:	7fd2      	ldrb	r2, [r2, #31]
1004a678:	2a0b      	cmp	r2, #11
1004a67a:	d023      	beq.n	1004a6c4 <Check_For_Service_Change+0x88>
1004a67c:	2600      	movs	r6, #0
1004a67e:	2000      	movs	r0, #0
1004a680:	9004      	str	r0, [sp, #16]
1004a682:	a80a      	add	r0, sp, #40	; 0x28
1004a684:	1981      	adds	r1, r0, r6
1004a686:	2202      	movs	r2, #2
1004a688:	a801      	add	r0, sp, #4
1004a68a:	9102      	str	r1, [sp, #8]
1004a68c:	f7f8 fd97 	bl	100431be <Osal_MemCpy>
1004a690:	4668      	mov	r0, sp
1004a692:	8881      	ldrh	r1, [r0, #4]
1004a694:	ab09      	add	r3, sp, #36	; 0x24
1004a696:	aa08      	add	r2, sp, #32
1004a698:	9803      	ldr	r0, [sp, #12]
1004a69a:	f001 fca7 	bl	1004bfec <Gatt_fetch_handle>
1004a69e:	2801      	cmp	r0, #1
1004a6a0:	d017      	beq.n	1004a6d2 <Check_For_Service_Change+0x96>
1004a6a2:	2802      	cmp	r0, #2
1004a6a4:	d07e      	beq.n	1004a7a4 <Check_For_Service_Change+0x168>
1004a6a6:	4668      	mov	r0, sp
1004a6a8:	8880      	ldrh	r0, [r0, #4]
1004a6aa:	4285      	cmp	r5, r0
1004a6ac:	d300      	bcc.n	1004a6b0 <Check_For_Service_Change+0x74>
1004a6ae:	4605      	mov	r5, r0
1004a6b0:	4284      	cmp	r4, r0
1004a6b2:	d900      	bls.n	1004a6b6 <Check_For_Service_Change+0x7a>
1004a6b4:	4620      	mov	r0, r4
1004a6b6:	4604      	mov	r4, r0
1004a6b8:	9802      	ldr	r0, [sp, #8]
1004a6ba:	7880      	ldrb	r0, [r0, #2]
1004a6bc:	2801      	cmp	r0, #1
1004a6be:	d072      	beq.n	1004a7a6 <Check_For_Service_Change+0x16a>
1004a6c0:	3613      	adds	r6, #19
1004a6c2:	e13c      	b.n	1004a93e <Check_For_Service_Change+0x302>
1004a6c4:	1e49      	subs	r1, r1, #1
1004a6c6:	1e76      	subs	r6, r6, #1
1004a6c8:	0436      	lsls	r6, r6, #16
1004a6ca:	9105      	str	r1, [sp, #20]
1004a6cc:	0c36      	lsrs	r6, r6, #16
1004a6ce:	d1cf      	bne.n	1004a670 <Check_For_Service_Change+0x34>
1004a6d0:	e7d5      	b.n	1004a67e <Check_For_Service_Change+0x42>
1004a6d2:	9808      	ldr	r0, [sp, #32]
1004a6d4:	9000      	str	r0, [sp, #0]
1004a6d6:	2f00      	cmp	r7, #0
1004a6d8:	d166      	bne.n	1004a7a8 <Check_For_Service_Change+0x16c>
1004a6da:	9900      	ldr	r1, [sp, #0]
1004a6dc:	2202      	movs	r2, #2
1004a6de:	3128      	adds	r1, #40	; 0x28
1004a6e0:	9802      	ldr	r0, [sp, #8]
1004a6e2:	f7f8 fd74 	bl	100431ce <Osal_MemCmp>
1004a6e6:	2800      	cmp	r0, #0
1004a6e8:	d11e      	bne.n	1004a728 <Check_For_Service_Change+0xec>
1004a6ea:	9800      	ldr	r0, [sp, #0]
1004a6ec:	3020      	adds	r0, #32
1004a6ee:	7b01      	ldrb	r1, [r0, #12]
1004a6f0:	9802      	ldr	r0, [sp, #8]
1004a6f2:	7880      	ldrb	r0, [r0, #2]
1004a6f4:	4281      	cmp	r1, r0
1004a6f6:	d117      	bne.n	1004a728 <Check_For_Service_Change+0xec>
1004a6f8:	2801      	cmp	r0, #1
1004a6fa:	d108      	bne.n	1004a70e <Check_For_Service_Change+0xd2>
1004a6fc:	9800      	ldr	r0, [sp, #0]
1004a6fe:	9902      	ldr	r1, [sp, #8]
1004a700:	2202      	movs	r2, #2
1004a702:	3008      	adds	r0, #8
1004a704:	1cc9      	adds	r1, r1, #3
1004a706:	f7f8 fd62 	bl	100431ce <Osal_MemCmp>
1004a70a:	2800      	cmp	r0, #0
1004a70c:	d015      	beq.n	1004a73a <Check_For_Service_Change+0xfe>
1004a70e:	9802      	ldr	r0, [sp, #8]
1004a710:	7880      	ldrb	r0, [r0, #2]
1004a712:	2802      	cmp	r0, #2
1004a714:	d108      	bne.n	1004a728 <Check_For_Service_Change+0xec>
1004a716:	9800      	ldr	r0, [sp, #0]
1004a718:	9902      	ldr	r1, [sp, #8]
1004a71a:	2210      	movs	r2, #16
1004a71c:	3008      	adds	r0, #8
1004a71e:	1cc9      	adds	r1, r1, #3
1004a720:	f7f8 fd55 	bl	100431ce <Osal_MemCmp>
1004a724:	2800      	cmp	r0, #0
1004a726:	d008      	beq.n	1004a73a <Check_For_Service_Change+0xfe>
1004a728:	9800      	ldr	r0, [sp, #0]
1004a72a:	8d00      	ldrh	r0, [r0, #40]	; 0x28
1004a72c:	42a8      	cmp	r0, r5
1004a72e:	d800      	bhi.n	1004a732 <Check_For_Service_Change+0xf6>
1004a730:	4605      	mov	r5, r0
1004a732:	42a0      	cmp	r0, r4
1004a734:	d200      	bcs.n	1004a738 <Check_For_Service_Change+0xfc>
1004a736:	4620      	mov	r0, r4
1004a738:	4604      	mov	r4, r0
1004a73a:	9902      	ldr	r1, [sp, #8]
1004a73c:	a80a      	add	r0, sp, #40	; 0x28
1004a73e:	7889      	ldrb	r1, [r1, #2]
1004a740:	2901      	cmp	r1, #1
1004a742:	d007      	beq.n	1004a754 <Check_For_Service_Change+0x118>
1004a744:	3613      	adds	r6, #19
1004a746:	9905      	ldr	r1, [sp, #20]
1004a748:	b2b6      	uxth	r6, r6
1004a74a:	428e      	cmp	r6, r1
1004a74c:	d304      	bcc.n	1004a758 <Check_For_Service_Change+0x11c>
1004a74e:	2701      	movs	r7, #1
1004a750:	e007      	b.n	1004a762 <Check_For_Service_Change+0x126>
1004a752:	e106      	b.n	1004a962 <Check_For_Service_Change+0x326>
1004a754:	1d76      	adds	r6, r6, #5
1004a756:	e7f6      	b.n	1004a746 <Check_For_Service_Change+0x10a>
1004a758:	1981      	adds	r1, r0, r6
1004a75a:	2202      	movs	r2, #2
1004a75c:	a801      	add	r0, sp, #4
1004a75e:	f7f8 fd2e 	bl	100431be <Osal_MemCpy>
1004a762:	9903      	ldr	r1, [sp, #12]
1004a764:	9800      	ldr	r0, [sp, #0]
1004a766:	3108      	adds	r1, #8
1004a768:	468e      	mov	lr, r1
1004a76a:	e02f      	b.n	1004a7cc <Check_For_Service_Change+0x190>
1004a76c:	4684      	mov	ip, r0
1004a76e:	4669      	mov	r1, sp
1004a770:	6a02      	ldr	r2, [r0, #32]
1004a772:	888b      	ldrh	r3, [r1, #4]
1004a774:	3020      	adds	r0, #32
1004a776:	e00d      	b.n	1004a794 <Check_For_Service_Change+0x158>
1004a778:	8b91      	ldrh	r1, [r2, #28]
1004a77a:	4299      	cmp	r1, r3
1004a77c:	d303      	bcc.n	1004a786 <Check_For_Service_Change+0x14a>
1004a77e:	2f01      	cmp	r7, #1
1004a780:	d17e      	bne.n	1004a880 <Check_For_Service_Change+0x244>
1004a782:	4299      	cmp	r1, r3
1004a784:	d97c      	bls.n	1004a880 <Check_For_Service_Change+0x244>
1004a786:	42a9      	cmp	r1, r5
1004a788:	d800      	bhi.n	1004a78c <Check_For_Service_Change+0x150>
1004a78a:	460d      	mov	r5, r1
1004a78c:	42a1      	cmp	r1, r4
1004a78e:	d300      	bcc.n	1004a792 <Check_For_Service_Change+0x156>
1004a790:	460c      	mov	r4, r1
1004a792:	6812      	ldr	r2, [r2, #0]
1004a794:	4282      	cmp	r2, r0
1004a796:	d1ef      	bne.n	1004a778 <Check_For_Service_Change+0x13c>
1004a798:	9804      	ldr	r0, [sp, #16]
1004a79a:	2800      	cmp	r0, #0
1004a79c:	d104      	bne.n	1004a7a8 <Check_For_Service_Change+0x16c>
1004a79e:	4660      	mov	r0, ip
1004a7a0:	6800      	ldr	r0, [r0, #0]
1004a7a2:	e002      	b.n	1004a7aa <Check_For_Service_Change+0x16e>
1004a7a4:	e015      	b.n	1004a7d2 <Check_For_Service_Change+0x196>
1004a7a6:	e0bf      	b.n	1004a928 <Check_For_Service_Change+0x2ec>
1004a7a8:	e08a      	b.n	1004a8c0 <Check_For_Service_Change+0x284>
1004a7aa:	4570      	cmp	r0, lr
1004a7ac:	d00e      	beq.n	1004a7cc <Check_For_Service_Change+0x190>
1004a7ae:	8d01      	ldrh	r1, [r0, #40]	; 0x28
1004a7b0:	4299      	cmp	r1, r3
1004a7b2:	d303      	bcc.n	1004a7bc <Check_For_Service_Change+0x180>
1004a7b4:	2f01      	cmp	r7, #1
1004a7b6:	d109      	bne.n	1004a7cc <Check_For_Service_Change+0x190>
1004a7b8:	4299      	cmp	r1, r3
1004a7ba:	d907      	bls.n	1004a7cc <Check_For_Service_Change+0x190>
1004a7bc:	428d      	cmp	r5, r1
1004a7be:	d300      	bcc.n	1004a7c2 <Check_For_Service_Change+0x186>
1004a7c0:	460d      	mov	r5, r1
1004a7c2:	428c      	cmp	r4, r1
1004a7c4:	d800      	bhi.n	1004a7c8 <Check_For_Service_Change+0x18c>
1004a7c6:	460c      	mov	r4, r1
1004a7c8:	2f01      	cmp	r7, #1
1004a7ca:	d159      	bne.n	1004a880 <Check_For_Service_Change+0x244>
1004a7cc:	4570      	cmp	r0, lr
1004a7ce:	d1cd      	bne.n	1004a76c <Check_For_Service_Change+0x130>
1004a7d0:	e0ba      	b.n	1004a948 <Check_For_Service_Change+0x30c>
1004a7d2:	9808      	ldr	r0, [sp, #32]
1004a7d4:	9000      	str	r0, [sp, #0]
1004a7d6:	2f00      	cmp	r7, #0
1004a7d8:	d172      	bne.n	1004a8c0 <Check_For_Service_Change+0x284>
1004a7da:	9900      	ldr	r1, [sp, #0]
1004a7dc:	2202      	movs	r2, #2
1004a7de:	311c      	adds	r1, #28
1004a7e0:	9802      	ldr	r0, [sp, #8]
1004a7e2:	f7f8 fcf4 	bl	100431ce <Osal_MemCmp>
1004a7e6:	2800      	cmp	r0, #0
1004a7e8:	d11e      	bne.n	1004a828 <Check_For_Service_Change+0x1ec>
1004a7ea:	9800      	ldr	r0, [sp, #0]
1004a7ec:	3020      	adds	r0, #32
1004a7ee:	78c1      	ldrb	r1, [r0, #3]
1004a7f0:	9802      	ldr	r0, [sp, #8]
1004a7f2:	7880      	ldrb	r0, [r0, #2]
1004a7f4:	4281      	cmp	r1, r0
1004a7f6:	d117      	bne.n	1004a828 <Check_For_Service_Change+0x1ec>
1004a7f8:	2801      	cmp	r0, #1
1004a7fa:	d108      	bne.n	1004a80e <Check_For_Service_Change+0x1d2>
1004a7fc:	9800      	ldr	r0, [sp, #0]
1004a7fe:	9902      	ldr	r1, [sp, #8]
1004a800:	2202      	movs	r2, #2
1004a802:	3008      	adds	r0, #8
1004a804:	1cc9      	adds	r1, r1, #3
1004a806:	f7f8 fce2 	bl	100431ce <Osal_MemCmp>
1004a80a:	2800      	cmp	r0, #0
1004a80c:	d01a      	beq.n	1004a844 <Check_For_Service_Change+0x208>
1004a80e:	9802      	ldr	r0, [sp, #8]
1004a810:	7880      	ldrb	r0, [r0, #2]
1004a812:	2802      	cmp	r0, #2
1004a814:	d108      	bne.n	1004a828 <Check_For_Service_Change+0x1ec>
1004a816:	9800      	ldr	r0, [sp, #0]
1004a818:	9902      	ldr	r1, [sp, #8]
1004a81a:	2210      	movs	r2, #16
1004a81c:	3008      	adds	r0, #8
1004a81e:	1cc9      	adds	r1, r1, #3
1004a820:	f7f8 fcd5 	bl	100431ce <Osal_MemCmp>
1004a824:	2800      	cmp	r0, #0
1004a826:	d00d      	beq.n	1004a844 <Check_For_Service_Change+0x208>
1004a828:	9800      	ldr	r0, [sp, #0]
1004a82a:	8b80      	ldrh	r0, [r0, #28]
1004a82c:	42a8      	cmp	r0, r5
1004a82e:	d800      	bhi.n	1004a832 <Check_For_Service_Change+0x1f6>
1004a830:	4605      	mov	r5, r0
1004a832:	42a0      	cmp	r0, r4
1004a834:	d200      	bcs.n	1004a838 <Check_For_Service_Change+0x1fc>
1004a836:	4620      	mov	r0, r4
1004a838:	4604      	mov	r4, r0
1004a83a:	9802      	ldr	r0, [sp, #8]
1004a83c:	7880      	ldrb	r0, [r0, #2]
1004a83e:	2801      	cmp	r0, #1
1004a840:	d026      	beq.n	1004a890 <Check_For_Service_Change+0x254>
1004a842:	e003      	b.n	1004a84c <Check_For_Service_Change+0x210>
1004a844:	9802      	ldr	r0, [sp, #8]
1004a846:	7880      	ldrb	r0, [r0, #2]
1004a848:	2801      	cmp	r0, #1
1004a84a:	d005      	beq.n	1004a858 <Check_For_Service_Change+0x21c>
1004a84c:	3613      	adds	r6, #19
1004a84e:	9807      	ldr	r0, [sp, #28]
1004a850:	b2b6      	uxth	r6, r6
1004a852:	2801      	cmp	r0, #1
1004a854:	d01e      	beq.n	1004a894 <Check_For_Service_Change+0x258>
1004a856:	e021      	b.n	1004a89c <Check_For_Service_Change+0x260>
1004a858:	9800      	ldr	r0, [sp, #0]
1004a85a:	494a      	ldr	r1, [pc, #296]	; (1004a984 <Check_For_Service_Change+0x348>)
1004a85c:	8900      	ldrh	r0, [r0, #8]
1004a85e:	4288      	cmp	r0, r1
1004a860:	d116      	bne.n	1004a890 <Check_For_Service_Change+0x254>
1004a862:	988a      	ldr	r0, [sp, #552]	; 0x228
1004a864:	f7ff feac 	bl	1004a5c0 <Find_Gatt_Client>
1004a868:	4601      	mov	r1, r0
1004a86a:	9800      	ldr	r0, [sp, #0]
1004a86c:	f000 f88c 	bl	1004a988 <Find_Attr_Index>
1004a870:	9900      	ldr	r1, [sp, #0]
1004a872:	8c09      	ldrh	r1, [r1, #32]
1004a874:	4348      	muls	r0, r1
1004a876:	9900      	ldr	r1, [sp, #0]
1004a878:	6989      	ldr	r1, [r1, #24]
1004a87a:	1840      	adds	r0, r0, r1
1004a87c:	2202      	movs	r2, #2
1004a87e:	e000      	b.n	1004a882 <Check_For_Service_Change+0x246>
1004a880:	e038      	b.n	1004a8f4 <Check_For_Service_Change+0x2b8>
1004a882:	9902      	ldr	r1, [sp, #8]
1004a884:	1d49      	adds	r1, r1, #5
1004a886:	f7f8 fc9a 	bl	100431be <Osal_MemCpy>
1004a88a:	2001      	movs	r0, #1
1004a88c:	9007      	str	r0, [sp, #28]
1004a88e:	e7d4      	b.n	1004a83a <Check_For_Service_Change+0x1fe>
1004a890:	1d76      	adds	r6, r6, #5
1004a892:	e7dc      	b.n	1004a84e <Check_For_Service_Change+0x212>
1004a894:	1cb6      	adds	r6, r6, #2
1004a896:	2000      	movs	r0, #0
1004a898:	b2b6      	uxth	r6, r6
1004a89a:	9007      	str	r0, [sp, #28]
1004a89c:	9805      	ldr	r0, [sp, #20]
1004a89e:	4286      	cmp	r6, r0
1004a8a0:	d301      	bcc.n	1004a8a6 <Check_For_Service_Change+0x26a>
1004a8a2:	2701      	movs	r7, #1
1004a8a4:	e005      	b.n	1004a8b2 <Check_For_Service_Change+0x276>
1004a8a6:	a80a      	add	r0, sp, #40	; 0x28
1004a8a8:	1981      	adds	r1, r0, r6
1004a8aa:	2202      	movs	r2, #2
1004a8ac:	a801      	add	r0, sp, #4
1004a8ae:	f7f8 fc86 	bl	100431be <Osal_MemCpy>
1004a8b2:	9a03      	ldr	r2, [sp, #12]
1004a8b4:	9900      	ldr	r1, [sp, #0]
1004a8b6:	3208      	adds	r2, #8
1004a8b8:	9809      	ldr	r0, [sp, #36]	; 0x24
1004a8ba:	6809      	ldr	r1, [r1, #0]
1004a8bc:	4694      	mov	ip, r2
1004a8be:	e030      	b.n	1004a922 <Check_For_Service_Change+0x2e6>
1004a8c0:	e01a      	b.n	1004a8f8 <Check_For_Service_Change+0x2bc>
1004a8c2:	4686      	mov	lr, r0
1004a8c4:	466a      	mov	r2, sp
1004a8c6:	8893      	ldrh	r3, [r2, #4]
1004a8c8:	3020      	adds	r0, #32
1004a8ca:	e00d      	b.n	1004a8e8 <Check_For_Service_Change+0x2ac>
1004a8cc:	8b8a      	ldrh	r2, [r1, #28]
1004a8ce:	429a      	cmp	r2, r3
1004a8d0:	d303      	bcc.n	1004a8da <Check_For_Service_Change+0x29e>
1004a8d2:	2f01      	cmp	r7, #1
1004a8d4:	d10e      	bne.n	1004a8f4 <Check_For_Service_Change+0x2b8>
1004a8d6:	429a      	cmp	r2, r3
1004a8d8:	d90c      	bls.n	1004a8f4 <Check_For_Service_Change+0x2b8>
1004a8da:	42aa      	cmp	r2, r5
1004a8dc:	d800      	bhi.n	1004a8e0 <Check_For_Service_Change+0x2a4>
1004a8de:	4615      	mov	r5, r2
1004a8e0:	42a2      	cmp	r2, r4
1004a8e2:	d300      	bcc.n	1004a8e6 <Check_For_Service_Change+0x2aa>
1004a8e4:	4614      	mov	r4, r2
1004a8e6:	6809      	ldr	r1, [r1, #0]
1004a8e8:	4281      	cmp	r1, r0
1004a8ea:	d1ef      	bne.n	1004a8cc <Check_For_Service_Change+0x290>
1004a8ec:	9804      	ldr	r0, [sp, #16]
1004a8ee:	2800      	cmp	r0, #0
1004a8f0:	d12a      	bne.n	1004a948 <Check_For_Service_Change+0x30c>
1004a8f2:	e002      	b.n	1004a8fa <Check_For_Service_Change+0x2be>
1004a8f4:	2001      	movs	r0, #1
1004a8f6:	9004      	str	r0, [sp, #16]
1004a8f8:	e026      	b.n	1004a948 <Check_For_Service_Change+0x30c>
1004a8fa:	4670      	mov	r0, lr
1004a8fc:	6800      	ldr	r0, [r0, #0]
1004a8fe:	4560      	cmp	r0, ip
1004a900:	d00f      	beq.n	1004a922 <Check_For_Service_Change+0x2e6>
1004a902:	8d02      	ldrh	r2, [r0, #40]	; 0x28
1004a904:	6a01      	ldr	r1, [r0, #32]
1004a906:	429a      	cmp	r2, r3
1004a908:	d303      	bcc.n	1004a912 <Check_For_Service_Change+0x2d6>
1004a90a:	2f01      	cmp	r7, #1
1004a90c:	d109      	bne.n	1004a922 <Check_For_Service_Change+0x2e6>
1004a90e:	429a      	cmp	r2, r3
1004a910:	d907      	bls.n	1004a922 <Check_For_Service_Change+0x2e6>
1004a912:	4295      	cmp	r5, r2
1004a914:	d300      	bcc.n	1004a918 <Check_For_Service_Change+0x2dc>
1004a916:	4615      	mov	r5, r2
1004a918:	4294      	cmp	r4, r2
1004a91a:	d800      	bhi.n	1004a91e <Check_For_Service_Change+0x2e2>
1004a91c:	4614      	mov	r4, r2
1004a91e:	2f01      	cmp	r7, #1
1004a920:	d1e8      	bne.n	1004a8f4 <Check_For_Service_Change+0x2b8>
1004a922:	4560      	cmp	r0, ip
1004a924:	d1cd      	bne.n	1004a8c2 <Check_For_Service_Change+0x286>
1004a926:	e00f      	b.n	1004a948 <Check_For_Service_Change+0x30c>
1004a928:	9802      	ldr	r0, [sp, #8]
1004a92a:	78c0      	ldrb	r0, [r0, #3]
1004a92c:	2802      	cmp	r0, #2
1004a92e:	d105      	bne.n	1004a93c <Check_For_Service_Change+0x300>
1004a930:	9802      	ldr	r0, [sp, #8]
1004a932:	7900      	ldrb	r0, [r0, #4]
1004a934:	2829      	cmp	r0, #41	; 0x29
1004a936:	d101      	bne.n	1004a93c <Check_For_Service_Change+0x300>
1004a938:	1cb6      	adds	r6, r6, #2
1004a93a:	b2b6      	uxth	r6, r6
1004a93c:	1d76      	adds	r6, r6, #5
1004a93e:	9805      	ldr	r0, [sp, #20]
1004a940:	b2b6      	uxth	r6, r6
1004a942:	4286      	cmp	r6, r0
1004a944:	d300      	bcc.n	1004a948 <Check_For_Service_Change+0x30c>
1004a946:	2701      	movs	r7, #1
1004a948:	9805      	ldr	r0, [sp, #20]
1004a94a:	1b81      	subs	r1, r0, r6
1004a94c:	2904      	cmp	r1, #4
1004a94e:	d302      	bcc.n	1004a956 <Check_For_Service_Change+0x31a>
1004a950:	4286      	cmp	r6, r0
1004a952:	d200      	bcs.n	1004a956 <Check_For_Service_Change+0x31a>
1004a954:	e693      	b.n	1004a67e <Check_For_Service_Change+0x42>
1004a956:	9804      	ldr	r0, [sp, #16]
1004a958:	2800      	cmp	r0, #0
1004a95a:	d1fb      	bne.n	1004a954 <Check_For_Service_Change+0x318>
1004a95c:	42a5      	cmp	r5, r4
1004a95e:	d903      	bls.n	1004a968 <Check_For_Service_Change+0x32c>
1004a960:	9806      	ldr	r0, [sp, #24]
1004a962:	b07f      	add	sp, #508	; 0x1fc
1004a964:	b00c      	add	sp, #48	; 0x30
1004a966:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004a968:	4622      	mov	r2, r4
1004a96a:	4629      	mov	r1, r5
1004a96c:	988a      	ldr	r0, [sp, #552]	; 0x228
1004a96e:	f001 fb83 	bl	1004c078 <Ind_Service_Change_Charac>
1004a972:	9006      	str	r0, [sp, #24]
1004a974:	e7f5      	b.n	1004a962 <Check_For_Service_Change+0x326>
1004a976:	0000      	.short	0x0000
1004a978:	0000ffff 	.word	0x0000ffff
1004a97c:	2000098c 	.word	0x2000098c
1004a980:	0000072c 	.word	0x0000072c
1004a984:	00002902 	.word	0x00002902

1004a988 <Find_Attr_Index>:
1004a988:	b530      	push	{r4, r5, lr}
1004a98a:	4602      	mov	r2, r0
1004a98c:	2323      	movs	r3, #35	; 0x23
1004a98e:	5c9b      	ldrb	r3, [r3, r2]
1004a990:	2000      	movs	r0, #0
1004a992:	2b01      	cmp	r3, #1
1004a994:	d11a      	bne.n	1004a9cc <Find_Attr_Index+0x44>
1004a996:	8912      	ldrh	r2, [r2, #8]
1004a998:	4b0d      	ldr	r3, [pc, #52]	; (1004a9d0 <Find_Attr_Index+0x48>)
1004a99a:	429a      	cmp	r2, r3
1004a99c:	d116      	bne.n	1004a9cc <Find_Attr_Index+0x44>
1004a99e:	4a0d      	ldr	r2, [pc, #52]	; (1004a9d4 <Find_Attr_Index+0x4c>)
1004a9a0:	2309      	movs	r3, #9
1004a9a2:	6812      	ldr	r2, [r2, #0]
1004a9a4:	021b      	lsls	r3, r3, #8
1004a9a6:	18d3      	adds	r3, r2, r3
1004a9a8:	32a0      	adds	r2, #160	; 0xa0
1004a9aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
1004a9ac:	7b12      	ldrb	r2, [r2, #12]
1004a9ae:	e00a      	b.n	1004a9c6 <Find_Attr_Index+0x3e>
1004a9b0:	0145      	lsls	r5, r0, #5
1004a9b2:	880c      	ldrh	r4, [r1, #0]
1004a9b4:	5b5d      	ldrh	r5, [r3, r5]
1004a9b6:	0524      	lsls	r4, r4, #20
1004a9b8:	052d      	lsls	r5, r5, #20
1004a9ba:	0d24      	lsrs	r4, r4, #20
1004a9bc:	0d2d      	lsrs	r5, r5, #20
1004a9be:	42ac      	cmp	r4, r5
1004a9c0:	d004      	beq.n	1004a9cc <Find_Attr_Index+0x44>
1004a9c2:	1c40      	adds	r0, r0, #1
1004a9c4:	b2c0      	uxtb	r0, r0
1004a9c6:	4282      	cmp	r2, r0
1004a9c8:	d8f2      	bhi.n	1004a9b0 <Find_Attr_Index+0x28>
1004a9ca:	2000      	movs	r0, #0
1004a9cc:	bd30      	pop	{r4, r5, pc}
1004a9ce:	0000      	.short	0x0000
1004a9d0:	00002902 	.word	0x00002902
1004a9d4:	2000098c 	.word	0x2000098c

1004a9d8 <Find_Timed_Out_Connection>:
1004a9d8:	4906      	ldr	r1, [pc, #24]	; (1004a9f4 <Find_Timed_Out_Connection+0x1c>)
1004a9da:	2209      	movs	r2, #9
1004a9dc:	6809      	ldr	r1, [r1, #0]
1004a9de:	0212      	lsls	r2, r2, #8
1004a9e0:	1889      	adds	r1, r1, r2
1004a9e2:	0880      	lsrs	r0, r0, #2
1004a9e4:	6b49      	ldr	r1, [r1, #52]	; 0x34
1004a9e6:	0140      	lsls	r0, r0, #5
1004a9e8:	1808      	adds	r0, r1, r0
1004a9ea:	8801      	ldrh	r1, [r0, #0]
1004a9ec:	2900      	cmp	r1, #0
1004a9ee:	d100      	bne.n	1004a9f2 <Find_Timed_Out_Connection+0x1a>
1004a9f0:	2000      	movs	r0, #0
1004a9f2:	4770      	bx	lr
1004a9f4:	2000098c 	.word	0x2000098c

1004a9f8 <GATT_Connection_Complete_Handler>:
1004a9f8:	b510      	push	{r4, lr}
1004a9fa:	4604      	mov	r4, r0
1004a9fc:	2002      	movs	r0, #2
1004a9fe:	f000 f833 	bl	1004aa68 <GATT_Server_Set_Flag>
1004aa02:	480d      	ldr	r0, [pc, #52]	; (1004aa38 <GATT_Connection_Complete_Handler+0x40>)
1004aa04:	2100      	movs	r1, #0
1004aa06:	6802      	ldr	r2, [r0, #0]
1004aa08:	2009      	movs	r0, #9
1004aa0a:	0200      	lsls	r0, r0, #8
1004aa0c:	1810      	adds	r0, r2, r0
1004aa0e:	32a0      	adds	r2, #160	; 0xa0
1004aa10:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004aa12:	7b10      	ldrb	r0, [r2, #12]
1004aa14:	e005      	b.n	1004aa22 <GATT_Connection_Complete_Handler+0x2a>
1004aa16:	014a      	lsls	r2, r1, #5
1004aa18:	5a9a      	ldrh	r2, [r3, r2]
1004aa1a:	2a00      	cmp	r2, #0
1004aa1c:	d004      	beq.n	1004aa28 <GATT_Connection_Complete_Handler+0x30>
1004aa1e:	1c49      	adds	r1, r1, #1
1004aa20:	b2c9      	uxtb	r1, r1
1004aa22:	4288      	cmp	r0, r1
1004aa24:	d8f7      	bhi.n	1004aa16 <GATT_Connection_Complete_Handler+0x1e>
1004aa26:	bd10      	pop	{r4, pc}
1004aa28:	0148      	lsls	r0, r1, #5
1004aa2a:	521c      	strh	r4, [r3, r0]
1004aa2c:	18c0      	adds	r0, r0, r3
1004aa2e:	6902      	ldr	r2, [r0, #16]
1004aa30:	2104      	movs	r1, #4
1004aa32:	430a      	orrs	r2, r1
1004aa34:	6102      	str	r2, [r0, #16]
1004aa36:	bd10      	pop	{r4, pc}
1004aa38:	2000098c 	.word	0x2000098c

1004aa3c <GATT_Send_Packet>:
1004aa3c:	b510      	push	{r4, lr}
1004aa3e:	4604      	mov	r4, r0
1004aa40:	4601      	mov	r1, r0
1004aa42:	2004      	movs	r0, #4
1004aa44:	f002 fc62 	bl	1004d30c <L2C_Send_Data>
1004aa48:	2800      	cmp	r0, #0
1004aa4a:	d008      	beq.n	1004aa5e <GATT_Send_Packet+0x22>
1004aa4c:	4804      	ldr	r0, [pc, #16]	; (1004aa60 <GATT_Send_Packet+0x24>)
1004aa4e:	4905      	ldr	r1, [pc, #20]	; (1004aa64 <GATT_Send_Packet+0x28>)
1004aa50:	6800      	ldr	r0, [r0, #0]
1004aa52:	1840      	adds	r0, r0, r1
1004aa54:	4621      	mov	r1, r4
1004aa56:	303c      	adds	r0, #60	; 0x3c
1004aa58:	f00b fa30 	bl	10055ebc <acl_list_insert_tail>
1004aa5c:	2043      	movs	r0, #67	; 0x43
1004aa5e:	bd10      	pop	{r4, pc}
1004aa60:	2000098c 	.word	0x2000098c
1004aa64:	0000072c 	.word	0x0000072c

1004aa68 <GATT_Server_Set_Flag>:
1004aa68:	4904      	ldr	r1, [pc, #16]	; (1004aa7c <GATT_Server_Set_Flag+0x14>)
1004aa6a:	680a      	ldr	r2, [r1, #0]
1004aa6c:	213b      	movs	r1, #59	; 0x3b
1004aa6e:	0149      	lsls	r1, r1, #5
1004aa70:	1851      	adds	r1, r2, r1
1004aa72:	7d0a      	ldrb	r2, [r1, #20]
1004aa74:	4302      	orrs	r2, r0
1004aa76:	750a      	strb	r2, [r1, #20]
1004aa78:	4770      	bx	lr
1004aa7a:	0000      	.short	0x0000
1004aa7c:	2000098c 	.word	0x2000098c

1004aa80 <GATT_TimeOut_Handler>:
1004aa80:	b500      	push	{lr}
1004aa82:	3811      	subs	r0, #17
1004aa84:	b2c0      	uxtb	r0, r0
1004aa86:	f7ff ffa7 	bl	1004a9d8 <Find_Timed_Out_Connection>
1004aa8a:	2800      	cmp	r0, #0
1004aa8c:	d004      	beq.n	1004aa98 <GATT_TimeOut_Handler+0x18>
1004aa8e:	2201      	movs	r2, #1
1004aa90:	6901      	ldr	r1, [r0, #16]
1004aa92:	0552      	lsls	r2, r2, #21
1004aa94:	4311      	orrs	r1, r2
1004aa96:	6101      	str	r1, [r0, #16]
1004aa98:	bd00      	pop	{pc}
	...

1004aa9c <Gatt_Add_Charac_Desc>:
1004aa9c:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004aa9e:	b097      	sub	sp, #92	; 0x5c
1004aaa0:	880d      	ldrh	r5, [r1, #0]
1004aaa2:	8848      	ldrh	r0, [r1, #2]
1004aaa4:	9005      	str	r0, [sp, #20]
1004aaa6:	1d08      	adds	r0, r1, #4
1004aaa8:	c81d      	ldmia	r0, {r0, r2, r3, r4}
1004aaaa:	ae0d      	add	r6, sp, #52	; 0x34
1004aaac:	c61d      	stmia	r6!, {r0, r2, r3, r4}
1004aaae:	8a8c      	ldrh	r4, [r1, #20]
1004aab0:	8ace      	ldrh	r6, [r1, #22]
1004aab2:	7e08      	ldrb	r0, [r1, #24]
1004aab4:	9013      	str	r0, [sp, #76]	; 0x4c
1004aab6:	69c8      	ldr	r0, [r1, #28]
1004aab8:	3120      	adds	r1, #32
1004aaba:	9001      	str	r0, [sp, #4]
1004aabc:	7808      	ldrb	r0, [r1, #0]
1004aabe:	9000      	str	r0, [sp, #0]
1004aac0:	7848      	ldrb	r0, [r1, #1]
1004aac2:	9004      	str	r0, [sp, #16]
1004aac4:	7888      	ldrb	r0, [r1, #2]
1004aac6:	9003      	str	r0, [sp, #12]
1004aac8:	78c8      	ldrb	r0, [r1, #3]
1004aaca:	9002      	str	r0, [sp, #8]
1004aacc:	790f      	ldrb	r7, [r1, #4]
1004aace:	f000 fdbf 	bl	1004b650 <Gatt_Server_Db_Check>
1004aad2:	2800      	cmp	r0, #0
1004aad4:	d117      	bne.n	1004ab06 <Gatt_Add_Charac_Desc+0x6a>
1004aad6:	2001      	movs	r0, #1
1004aad8:	0240      	lsls	r0, r0, #9
1004aada:	4284      	cmp	r4, r0
1004aadc:	d85f      	bhi.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004aade:	42b4      	cmp	r4, r6
1004aae0:	d85d      	bhi.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004aae2:	2f00      	cmp	r7, #0
1004aae4:	d101      	bne.n	1004aaea <Gatt_Add_Charac_Desc+0x4e>
1004aae6:	42b4      	cmp	r4, r6
1004aae8:	d159      	bne.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004aaea:	a914      	add	r1, sp, #80	; 0x50
1004aaec:	4628      	mov	r0, r5
1004aaee:	f001 faab 	bl	1004c048 <Gatt_search_service_handle>
1004aaf2:	2800      	cmp	r0, #0
1004aaf4:	d106      	bne.n	1004ab04 <Gatt_Add_Charac_Desc+0x68>
1004aaf6:	aa15      	add	r2, sp, #84	; 0x54
1004aaf8:	9914      	ldr	r1, [sp, #80]	; 0x50
1004aafa:	9805      	ldr	r0, [sp, #20]
1004aafc:	f001 fa94 	bl	1004c028 <Gatt_search_handle>
1004ab00:	2800      	cmp	r0, #0
1004ab02:	d002      	beq.n	1004ab0a <Gatt_Add_Charac_Desc+0x6e>
1004ab04:	2060      	movs	r0, #96	; 0x60
1004ab06:	b019      	add	sp, #100	; 0x64
1004ab08:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ab0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
1004ab0c:	a911      	add	r1, sp, #68	; 0x44
1004ab0e:	4628      	mov	r0, r5
1004ab10:	3018      	adds	r0, #24
1004ab12:	f006 f9bb 	bl	10050e8c <List_Circular_Get_Size>
1004ab16:	a810      	add	r0, sp, #64	; 0x40
1004ab18:	8880      	ldrh	r0, [r0, #4]
1004ab1a:	2800      	cmp	r0, #0
1004ab1c:	d010      	beq.n	1004ab40 <Gatt_Add_Charac_Desc+0xa4>
1004ab1e:	4628      	mov	r0, r5
1004ab20:	a912      	add	r1, sp, #72	; 0x48
1004ab22:	3020      	adds	r0, #32
1004ab24:	f006 f9b2 	bl	10050e8c <List_Circular_Get_Size>
1004ab28:	a810      	add	r0, sp, #64	; 0x40
1004ab2a:	8883      	ldrh	r3, [r0, #4]
1004ab2c:	8900      	ldrh	r0, [r0, #8]
1004ab2e:	8d2a      	ldrh	r2, [r5, #40]	; 0x28
1004ab30:	1818      	adds	r0, r3, r0
1004ab32:	6a69      	ldr	r1, [r5, #36]	; 0x24
1004ab34:	1810      	adds	r0, r2, r0
1004ab36:	8b8a      	ldrh	r2, [r1, #28]
1004ab38:	4290      	cmp	r0, r2
1004ab3a:	d103      	bne.n	1004ab44 <Gatt_Add_Charac_Desc+0xa8>
1004ab3c:	2061      	movs	r0, #97	; 0x61
1004ab3e:	e7e2      	b.n	1004ab06 <Gatt_Add_Charac_Desc+0x6a>
1004ab40:	2048      	movs	r0, #72	; 0x48
1004ab42:	e7e0      	b.n	1004ab06 <Gatt_Add_Charac_Desc+0x6a>
1004ab44:	9815      	ldr	r0, [sp, #84]	; 0x54
1004ab46:	4b2c      	ldr	r3, [pc, #176]	; (1004abf8 <Gatt_Add_Charac_Desc+0x15c>)
1004ab48:	8902      	ldrh	r2, [r0, #8]
1004ab4a:	429a      	cmp	r2, r3
1004ab4c:	d127      	bne.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004ab4e:	2223      	movs	r2, #35	; 0x23
1004ab50:	5c12      	ldrb	r2, [r2, r0]
1004ab52:	2a01      	cmp	r2, #1
1004ab54:	d123      	bne.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004ab56:	6800      	ldr	r0, [r0, #0]
1004ab58:	6800      	ldr	r0, [r0, #0]
1004ab5a:	9016      	str	r0, [sp, #88]	; 0x58
1004ab5c:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004ab5e:	2801      	cmp	r0, #1
1004ab60:	d11f      	bne.n	1004aba2 <Gatt_Add_Charac_Desc+0x106>
1004ab62:	4668      	mov	r0, sp
1004ab64:	8e80      	ldrh	r0, [r0, #52]	; 0x34
1004ab66:	2229      	movs	r2, #41	; 0x29
1004ab68:	0212      	lsls	r2, r2, #8
1004ab6a:	1a80      	subs	r0, r0, r2
1004ab6c:	0003      	movs	r3, r0
1004ab6e:	f001 fd7c 	bl	1004c66a <__ARM_common_switch8>
1004ab72:	0406      	.short	0x0406
1004ab74:	07040418 	.word	0x07040418
1004ab78:	180a      	.short	0x180a
1004ab7a:	2c02      	cmp	r4, #2
1004ab7c:	d10f      	bne.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004ab7e:	e010      	b.n	1004aba2 <Gatt_Add_Charac_Desc+0x106>
1004ab80:	2c07      	cmp	r4, #7
1004ab82:	d10c      	bne.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004ab84:	e00d      	b.n	1004aba2 <Gatt_Add_Charac_Desc+0x106>
1004ab86:	2c04      	cmp	r4, #4
1004ab88:	d309      	bcc.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004ab8a:	07e0      	lsls	r0, r4, #31
1004ab8c:	d107      	bne.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004ab8e:	2f01      	cmp	r7, #1
1004ab90:	d107      	bne.n	1004aba2 <Gatt_Add_Charac_Desc+0x106>
1004ab92:	42a6      	cmp	r6, r4
1004ab94:	d303      	bcc.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004ab96:	2e04      	cmp	r6, #4
1004ab98:	d301      	bcc.n	1004ab9e <Gatt_Add_Charac_Desc+0x102>
1004ab9a:	07f0      	lsls	r0, r6, #31
1004ab9c:	d001      	beq.n	1004aba2 <Gatt_Add_Charac_Desc+0x106>
1004ab9e:	2042      	movs	r0, #66	; 0x42
1004aba0:	e7b1      	b.n	1004ab06 <Gatt_Add_Charac_Desc+0x6a>
1004aba2:	9802      	ldr	r0, [sp, #8]
1004aba4:	900b      	str	r0, [sp, #44]	; 0x2c
1004aba6:	9b03      	ldr	r3, [sp, #12]
1004aba8:	9a04      	ldr	r2, [sp, #16]
1004abaa:	930a      	str	r3, [sp, #40]	; 0x28
1004abac:	9209      	str	r2, [sp, #36]	; 0x24
1004abae:	9800      	ldr	r0, [sp, #0]
1004abb0:	9a01      	ldr	r2, [sp, #4]
1004abb2:	970c      	str	r7, [sp, #48]	; 0x30
1004abb4:	9008      	str	r0, [sp, #32]
1004abb6:	9606      	str	r6, [sp, #24]
1004abb8:	9405      	str	r4, [sp, #20]
1004abba:	9207      	str	r2, [sp, #28]
1004abbc:	a80d      	add	r0, sp, #52	; 0x34
1004abbe:	c81d      	ldmia	r0, {r0, r2, r3, r4}
1004abc0:	9001      	str	r0, [sp, #4]
1004abc2:	a802      	add	r0, sp, #8
1004abc4:	c01c      	stmia	r0!, {r2, r3, r4}
1004abc6:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004abc8:	460b      	mov	r3, r1
1004abca:	9000      	str	r0, [sp, #0]
1004abcc:	462a      	mov	r2, r5
1004abce:	9916      	ldr	r1, [sp, #88]	; 0x58
1004abd0:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004abd2:	f000 f9b1 	bl	1004af38 <Gatt_Add_Descriptor>
1004abd6:	2800      	cmp	r0, #0
1004abd8:	d195      	bne.n	1004ab06 <Gatt_Add_Charac_Desc+0x6a>
1004abda:	4668      	mov	r0, sp
1004abdc:	4906      	ldr	r1, [pc, #24]	; (1004abf8 <Gatt_Add_Charac_Desc+0x15c>)
1004abde:	8e80      	ldrh	r0, [r0, #52]	; 0x34
1004abe0:	31ff      	adds	r1, #255	; 0xff
1004abe2:	4288      	cmp	r0, r1
1004abe4:	d005      	beq.n	1004abf2 <Gatt_Add_Charac_Desc+0x156>
1004abe6:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004abe8:	8801      	ldrh	r1, [r0, #0]
1004abea:	2000      	movs	r0, #0
1004abec:	460a      	mov	r2, r1
1004abee:	f001 fa43 	bl	1004c078 <Ind_Service_Change_Charac>
1004abf2:	2000      	movs	r0, #0
1004abf4:	e787      	b.n	1004ab06 <Gatt_Add_Charac_Desc+0x6a>
1004abf6:	0000      	.short	0x0000
1004abf8:	00002803 	.word	0x00002803

1004abfc <Gatt_Add_Characteristic>:
1004abfc:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004abfe:	b0a5      	sub	sp, #148	; 0x94
1004ac00:	8808      	ldrh	r0, [r1, #0]
1004ac02:	901a      	str	r0, [sp, #104]	; 0x68
1004ac04:	7888      	ldrb	r0, [r1, #2]
1004ac06:	460c      	mov	r4, r1
1004ac08:	9011      	str	r0, [sp, #68]	; 0x44
1004ac0a:	2210      	movs	r2, #16
1004ac0c:	1d09      	adds	r1, r1, #4
1004ac0e:	a813      	add	r0, sp, #76	; 0x4c
1004ac10:	f7f9 fcae 	bl	10044570 <__aeabi_memcpy>
1004ac14:	8aa0      	ldrh	r0, [r4, #20]
1004ac16:	9010      	str	r0, [sp, #64]	; 0x40
1004ac18:	7da1      	ldrb	r1, [r4, #22]
1004ac1a:	4668      	mov	r0, sp
1004ac1c:	7201      	strb	r1, [r0, #8]
1004ac1e:	7de0      	ldrb	r0, [r4, #23]
1004ac20:	900f      	str	r0, [sp, #60]	; 0x3c
1004ac22:	7e20      	ldrb	r0, [r4, #24]
1004ac24:	9020      	str	r0, [sp, #128]	; 0x80
1004ac26:	7e67      	ldrb	r7, [r4, #25]
1004ac28:	7ea0      	ldrb	r0, [r4, #26]
1004ac2a:	901f      	str	r0, [sp, #124]	; 0x7c
1004ac2c:	2000      	movs	r0, #0
1004ac2e:	4606      	mov	r6, r0
1004ac30:	4601      	mov	r1, r0
1004ac32:	9012      	str	r0, [sp, #72]	; 0x48
1004ac34:	a820      	add	r0, sp, #128	; 0x80
1004ac36:	8101      	strh	r1, [r0, #8]
1004ac38:	200f      	movs	r0, #15
1004ac3a:	4cbb      	ldr	r4, [pc, #748]	; (1004af28 <Gatt_Add_Characteristic+0x32c>)
1004ac3c:	9023      	str	r0, [sp, #140]	; 0x8c
1004ac3e:	49bb      	ldr	r1, [pc, #748]	; (1004af2c <Gatt_Add_Characteristic+0x330>)
1004ac40:	6820      	ldr	r0, [r4, #0]
1004ac42:	1840      	adds	r0, r0, r1
1004ac44:	9019      	str	r0, [sp, #100]	; 0x64
1004ac46:	f000 fd03 	bl	1004b650 <Gatt_Server_Db_Check>
1004ac4a:	2800      	cmp	r0, #0
1004ac4c:	d10b      	bne.n	1004ac66 <Gatt_Add_Characteristic+0x6a>
1004ac4e:	2101      	movs	r1, #1
1004ac50:	9810      	ldr	r0, [sp, #64]	; 0x40
1004ac52:	0249      	lsls	r1, r1, #9
1004ac54:	4288      	cmp	r0, r1
1004ac56:	d85f      	bhi.n	1004ad18 <Gatt_Add_Characteristic+0x11c>
1004ac58:	a921      	add	r1, sp, #132	; 0x84
1004ac5a:	981a      	ldr	r0, [sp, #104]	; 0x68
1004ac5c:	f001 f9f4 	bl	1004c048 <Gatt_search_service_handle>
1004ac60:	2800      	cmp	r0, #0
1004ac62:	d002      	beq.n	1004ac6a <Gatt_Add_Characteristic+0x6e>
1004ac64:	2060      	movs	r0, #96	; 0x60
1004ac66:	b027      	add	sp, #156	; 0x9c
1004ac68:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ac6a:	9821      	ldr	r0, [sp, #132]	; 0x84
1004ac6c:	9017      	str	r0, [sp, #92]	; 0x5c
1004ac6e:	f006 f8b1 	bl	10050dd4 <Get_GAP_Handle>
1004ac72:	991a      	ldr	r1, [sp, #104]	; 0x68
1004ac74:	4288      	cmp	r0, r1
1004ac76:	d10c      	bne.n	1004ac92 <Gatt_Add_Characteristic+0x96>
1004ac78:	a802      	add	r0, sp, #8
1004ac7a:	9001      	str	r0, [sp, #4]
1004ac7c:	9816      	ldr	r0, [sp, #88]	; 0x58
1004ac7e:	9000      	str	r0, [sp, #0]
1004ac80:	ad13      	add	r5, sp, #76	; 0x4c
1004ac82:	cd0e      	ldmia	r5!, {r1, r2, r3}
1004ac84:	9811      	ldr	r0, [sp, #68]	; 0x44
1004ac86:	f006 f869 	bl	10050d5c <GAP_Notify_Add_Charac>
1004ac8a:	2800      	cmp	r0, #0
1004ac8c:	d001      	beq.n	1004ac92 <Gatt_Add_Characteristic+0x96>
1004ac8e:	2063      	movs	r0, #99	; 0x63
1004ac90:	e7e9      	b.n	1004ac66 <Gatt_Add_Characteristic+0x6a>
1004ac92:	4668      	mov	r0, sp
1004ac94:	7a01      	ldrb	r1, [r0, #8]
1004ac96:	0688      	lsls	r0, r1, #26
1004ac98:	0f80      	lsrs	r0, r0, #30
1004ac9a:	d005      	beq.n	1004aca8 <Gatt_Add_Characteristic+0xac>
1004ac9c:	2001      	movs	r0, #1
1004ac9e:	9012      	str	r0, [sp, #72]	; 0x48
1004aca0:	6820      	ldr	r0, [r4, #0]
1004aca2:	30a0      	adds	r0, #160	; 0xa0
1004aca4:	7b00      	ldrb	r0, [r0, #12]
1004aca6:	0046      	lsls	r6, r0, #1
1004aca8:	07c8      	lsls	r0, r1, #31
1004acaa:	d003      	beq.n	1004acb4 <Gatt_Add_Characteristic+0xb8>
1004acac:	9812      	ldr	r0, [sp, #72]	; 0x48
1004acae:	1c40      	adds	r0, r0, #1
1004acb0:	1cb6      	adds	r6, r6, #2
1004acb2:	9012      	str	r0, [sp, #72]	; 0x48
1004acb4:	0608      	lsls	r0, r1, #24
1004acb6:	d503      	bpl.n	1004acc0 <Gatt_Add_Characteristic+0xc4>
1004acb8:	9812      	ldr	r0, [sp, #72]	; 0x48
1004acba:	1c40      	adds	r0, r0, #1
1004acbc:	1cb6      	adds	r6, r6, #2
1004acbe:	9012      	str	r0, [sp, #72]	; 0x48
1004acc0:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004acc2:	a90d      	add	r1, sp, #52	; 0x34
1004acc4:	3018      	adds	r0, #24
1004acc6:	901d      	str	r0, [sp, #116]	; 0x74
1004acc8:	f006 f8e0 	bl	10050e8c <List_Circular_Get_Size>
1004accc:	4668      	mov	r0, sp
1004acce:	9c12      	ldr	r4, [sp, #72]	; 0x48
1004acd0:	8e80      	ldrh	r0, [r0, #52]	; 0x34
1004acd2:	1ca4      	adds	r4, r4, #2
1004acd4:	42a0      	cmp	r0, r4
1004acd6:	d337      	bcc.n	1004ad48 <Gatt_Add_Characteristic+0x14c>
1004acd8:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004acda:	a90e      	add	r1, sp, #56	; 0x38
1004acdc:	3020      	adds	r0, #32
1004acde:	9001      	str	r0, [sp, #4]
1004ace0:	f006 f8d4 	bl	10050e8c <List_Circular_Get_Size>
1004ace4:	4668      	mov	r0, sp
1004ace6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
1004ace8:	2900      	cmp	r1, #0
1004acea:	d00d      	beq.n	1004ad08 <Gatt_Add_Characteristic+0x10c>
1004acec:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004acee:	9a17      	ldr	r2, [sp, #92]	; 0x5c
1004acf0:	466b      	mov	r3, sp
1004acf2:	6a40      	ldr	r0, [r0, #36]	; 0x24
1004acf4:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
1004acf6:	8d12      	ldrh	r2, [r2, #40]	; 0x28
1004acf8:	1859      	adds	r1, r3, r1
1004acfa:	8b80      	ldrh	r0, [r0, #28]
1004acfc:	1851      	adds	r1, r2, r1
1004acfe:	1a08      	subs	r0, r1, r0
1004ad00:	42a0      	cmp	r0, r4
1004ad02:	d201      	bcs.n	1004ad08 <Gatt_Add_Characteristic+0x10c>
1004ad04:	2061      	movs	r0, #97	; 0x61
1004ad06:	e7ae      	b.n	1004ac66 <Gatt_Add_Characteristic+0x6a>
1004ad08:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004ad0a:	6984      	ldr	r4, [r0, #24]
1004ad0c:	9811      	ldr	r0, [sp, #68]	; 0x44
1004ad0e:	6825      	ldr	r5, [r4, #0]
1004ad10:	2801      	cmp	r0, #1
1004ad12:	d003      	beq.n	1004ad1c <Gatt_Add_Characteristic+0x120>
1004ad14:	2802      	cmp	r0, #2
1004ad16:	d003      	beq.n	1004ad20 <Gatt_Add_Characteristic+0x124>
1004ad18:	2042      	movs	r0, #66	; 0x42
1004ad1a:	e7a4      	b.n	1004ac66 <Gatt_Add_Characteristic+0x6a>
1004ad1c:	2005      	movs	r0, #5
1004ad1e:	e000      	b.n	1004ad22 <Gatt_Add_Characteristic+0x126>
1004ad20:	2013      	movs	r0, #19
1004ad22:	83e0      	strh	r0, [r4, #30]
1004ad24:	462a      	mov	r2, r5
1004ad26:	4639      	mov	r1, r7
1004ad28:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004ad2a:	f006 f865 	bl	10050df8 <Check_Encry_Key_Size>
1004ad2e:	2842      	cmp	r0, #66	; 0x42
1004ad30:	d099      	beq.n	1004ac66 <Gatt_Add_Characteristic+0x6a>
1004ad32:	9f19      	ldr	r7, [sp, #100]	; 0x64
1004ad34:	8be2      	ldrh	r2, [r4, #30]
1004ad36:	3740      	adds	r7, #64	; 0x40
1004ad38:	8b78      	ldrh	r0, [r7, #26]
1004ad3a:	8b39      	ldrh	r1, [r7, #24]
1004ad3c:	1a41      	subs	r1, r0, r1
1004ad3e:	9810      	ldr	r0, [sp, #64]	; 0x40
1004ad40:	1810      	adds	r0, r2, r0
1004ad42:	1980      	adds	r0, r0, r6
1004ad44:	4281      	cmp	r1, r0
1004ad46:	da01      	bge.n	1004ad4c <Gatt_Add_Characteristic+0x150>
1004ad48:	2048      	movs	r0, #72	; 0x48
1004ad4a:	e78c      	b.n	1004ac66 <Gatt_Add_Characteristic+0x6a>
1004ad4c:	a90e      	add	r1, sp, #56	; 0x38
1004ad4e:	9801      	ldr	r0, [sp, #4]
1004ad50:	f006 f89c 	bl	10050e8c <List_Circular_Get_Size>
1004ad54:	4668      	mov	r0, sp
1004ad56:	8f00      	ldrh	r0, [r0, #56]	; 0x38
1004ad58:	2800      	cmp	r0, #0
1004ad5a:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004ad5c:	d002      	beq.n	1004ad64 <Gatt_Add_Characteristic+0x168>
1004ad5e:	6a40      	ldr	r0, [r0, #36]	; 0x24
1004ad60:	8b80      	ldrh	r0, [r0, #28]
1004ad62:	e000      	b.n	1004ad66 <Gatt_Add_Characteristic+0x16a>
1004ad64:	8d00      	ldrh	r0, [r0, #40]	; 0x28
1004ad66:	9925      	ldr	r1, [sp, #148]	; 0x94
1004ad68:	1c40      	adds	r0, r0, #1
1004ad6a:	8008      	strh	r0, [r1, #0]
1004ad6c:	9825      	ldr	r0, [sp, #148]	; 0x94
1004ad6e:	2101      	movs	r1, #1
1004ad70:	8800      	ldrh	r0, [r0, #0]
1004ad72:	83a0      	strh	r0, [r4, #28]
1004ad74:	9825      	ldr	r0, [sp, #148]	; 0x94
1004ad76:	2202      	movs	r2, #2
1004ad78:	8800      	ldrh	r0, [r0, #0]
1004ad7a:	1c40      	adds	r0, r0, #1
1004ad7c:	83a8      	strh	r0, [r5, #28]
1004ad7e:	486c      	ldr	r0, [pc, #432]	; (1004af30 <Gatt_Add_Characteristic+0x334>)
1004ad80:	8120      	strh	r0, [r4, #8]
1004ad82:	4620      	mov	r0, r4
1004ad84:	3020      	adds	r0, #32
1004ad86:	9017      	str	r0, [sp, #92]	; 0x5c
1004ad88:	70c1      	strb	r1, [r0, #3]
1004ad8a:	2100      	movs	r1, #0
1004ad8c:	7081      	strb	r1, [r0, #2]
1004ad8e:	7181      	strb	r1, [r0, #6]
1004ad90:	9819      	ldr	r0, [sp, #100]	; 0x64
1004ad92:	8b39      	ldrh	r1, [r7, #24]
1004ad94:	6d40      	ldr	r0, [r0, #84]	; 0x54
1004ad96:	1840      	adds	r0, r0, r1
1004ad98:	4669      	mov	r1, sp
1004ad9a:	61a0      	str	r0, [r4, #24]
1004ad9c:	7a09      	ldrb	r1, [r1, #8]
1004ad9e:	7001      	strb	r1, [r0, #0]
1004ada0:	69a0      	ldr	r0, [r4, #24]
1004ada2:	4629      	mov	r1, r5
1004ada4:	311c      	adds	r1, #28
1004ada6:	1c40      	adds	r0, r0, #1
1004ada8:	f7f8 fa09 	bl	100431be <Osal_MemCpy>
1004adac:	9811      	ldr	r0, [sp, #68]	; 0x44
1004adae:	2801      	cmp	r0, #1
1004adb0:	69a0      	ldr	r0, [r4, #24]
1004adb2:	d07d      	beq.n	1004aeb0 <Gatt_Add_Characteristic+0x2b4>
1004adb4:	2210      	movs	r2, #16
1004adb6:	a913      	add	r1, sp, #76	; 0x4c
1004adb8:	1cc0      	adds	r0, r0, #3
1004adba:	f7f8 fa00 	bl	100431be <Osal_MemCpy>
1004adbe:	4628      	mov	r0, r5
1004adc0:	2210      	movs	r2, #16
1004adc2:	a913      	add	r1, sp, #76	; 0x4c
1004adc4:	3008      	adds	r0, #8
1004adc6:	f7f8 f9fa 	bl	100431be <Osal_MemCpy>
1004adca:	8b38      	ldrh	r0, [r7, #24]
1004adcc:	3013      	adds	r0, #19
1004adce:	8338      	strh	r0, [r7, #24]
1004add0:	462e      	mov	r6, r5
1004add2:	3620      	adds	r6, #32
1004add4:	9811      	ldr	r0, [sp, #68]	; 0x44
1004add6:	70f0      	strb	r0, [r6, #3]
1004add8:	9810      	ldr	r0, [sp, #64]	; 0x40
1004adda:	83e8      	strh	r0, [r5, #30]
1004addc:	981f      	ldr	r0, [sp, #124]	; 0x7c
1004adde:	70b0      	strb	r0, [r6, #2]
1004ade0:	9810      	ldr	r0, [sp, #64]	; 0x40
1004ade2:	8420      	strh	r0, [r4, #32]
1004ade4:	9810      	ldr	r0, [sp, #64]	; 0x40
1004ade6:	8428      	strh	r0, [r5, #32]
1004ade8:	9819      	ldr	r0, [sp, #100]	; 0x64
1004adea:	8b39      	ldrh	r1, [r7, #24]
1004adec:	6d40      	ldr	r0, [r0, #84]	; 0x54
1004adee:	1840      	adds	r0, r0, r1
1004adf0:	61a8      	str	r0, [r5, #24]
1004adf2:	2100      	movs	r1, #0
1004adf4:	9a10      	ldr	r2, [sp, #64]	; 0x40
1004adf6:	f7f8 f9e6 	bl	100431c6 <Osal_MemSet>
1004adfa:	8b39      	ldrh	r1, [r7, #24]
1004adfc:	9810      	ldr	r0, [sp, #64]	; 0x40
1004adfe:	1808      	adds	r0, r1, r0
1004ae00:	8338      	strh	r0, [r7, #24]
1004ae02:	9917      	ldr	r1, [sp, #92]	; 0x5c
1004ae04:	2001      	movs	r0, #1
1004ae06:	7108      	strb	r0, [r1, #4]
1004ae08:	9917      	ldr	r1, [sp, #92]	; 0x5c
1004ae0a:	2000      	movs	r0, #0
1004ae0c:	7148      	strb	r0, [r1, #5]
1004ae0e:	7130      	strb	r0, [r6, #4]
1004ae10:	4668      	mov	r0, sp
1004ae12:	7a00      	ldrb	r0, [r0, #8]
1004ae14:	0781      	lsls	r1, r0, #30
1004ae16:	d501      	bpl.n	1004ae1c <Gatt_Add_Characteristic+0x220>
1004ae18:	2101      	movs	r1, #1
1004ae1a:	7131      	strb	r1, [r6, #4]
1004ae1c:	0701      	lsls	r1, r0, #28
1004ae1e:	2702      	movs	r7, #2
1004ae20:	2900      	cmp	r1, #0
1004ae22:	da02      	bge.n	1004ae2a <Gatt_Add_Characteristic+0x22e>
1004ae24:	7931      	ldrb	r1, [r6, #4]
1004ae26:	4339      	orrs	r1, r7
1004ae28:	7131      	strb	r1, [r6, #4]
1004ae2a:	0741      	lsls	r1, r0, #29
1004ae2c:	d503      	bpl.n	1004ae36 <Gatt_Add_Characteristic+0x23a>
1004ae2e:	7931      	ldrb	r1, [r6, #4]
1004ae30:	2204      	movs	r2, #4
1004ae32:	4311      	orrs	r1, r2
1004ae34:	7131      	strb	r1, [r6, #4]
1004ae36:	0640      	lsls	r0, r0, #25
1004ae38:	d503      	bpl.n	1004ae42 <Gatt_Add_Characteristic+0x246>
1004ae3a:	7930      	ldrb	r0, [r6, #4]
1004ae3c:	2108      	movs	r1, #8
1004ae3e:	4308      	orrs	r0, r1
1004ae40:	7130      	strb	r0, [r6, #4]
1004ae42:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004ae44:	7170      	strb	r0, [r6, #5]
1004ae46:	9820      	ldr	r0, [sp, #128]	; 0x80
1004ae48:	71b0      	strb	r0, [r6, #6]
1004ae4a:	4621      	mov	r1, r4
1004ae4c:	981d      	ldr	r0, [sp, #116]	; 0x74
1004ae4e:	f006 f846 	bl	10050ede <List_Circular_Remove_Node>
1004ae52:	4621      	mov	r1, r4
1004ae54:	9801      	ldr	r0, [sp, #4]
1004ae56:	f006 f823 	bl	10050ea0 <List_Circular_Insert_Tail>
1004ae5a:	4629      	mov	r1, r5
1004ae5c:	981d      	ldr	r0, [sp, #116]	; 0x74
1004ae5e:	f006 f83e 	bl	10050ede <List_Circular_Remove_Node>
1004ae62:	4629      	mov	r1, r5
1004ae64:	9801      	ldr	r0, [sp, #4]
1004ae66:	f006 f81b 	bl	10050ea0 <List_Circular_Insert_Tail>
1004ae6a:	9812      	ldr	r0, [sp, #72]	; 0x48
1004ae6c:	2800      	cmp	r0, #0
1004ae6e:	d041      	beq.n	1004aef4 <Gatt_Add_Characteristic+0x2f8>
1004ae70:	4668      	mov	r0, sp
1004ae72:	991a      	ldr	r1, [sp, #104]	; 0x68
1004ae74:	8181      	strh	r1, [r0, #12]
1004ae76:	8ba1      	ldrh	r1, [r4, #28]
1004ae78:	81c1      	strh	r1, [r0, #14]
1004ae7a:	8407      	strh	r7, [r0, #32]
1004ae7c:	8447      	strh	r7, [r0, #34]	; 0x22
1004ae7e:	2401      	movs	r4, #1
1004ae80:	a808      	add	r0, sp, #32
1004ae82:	7104      	strb	r4, [r0, #4]
1004ae84:	a822      	add	r0, sp, #136	; 0x88
1004ae86:	900a      	str	r0, [sp, #40]	; 0x28
1004ae88:	a808      	add	r0, sp, #32
1004ae8a:	7384      	strb	r4, [r0, #14]
1004ae8c:	9923      	ldr	r1, [sp, #140]	; 0x8c
1004ae8e:	7341      	strb	r1, [r0, #13]
1004ae90:	990f      	ldr	r1, [sp, #60]	; 0x3c
1004ae92:	2038      	movs	r0, #56	; 0x38
1004ae94:	4001      	ands	r1, r0
1004ae96:	a808      	add	r0, sp, #32
1004ae98:	7301      	strb	r1, [r0, #12]
1004ae9a:	2107      	movs	r1, #7
1004ae9c:	73c1      	strb	r1, [r0, #15]
1004ae9e:	2500      	movs	r5, #0
1004aea0:	7405      	strb	r5, [r0, #16]
1004aea2:	4668      	mov	r0, sp
1004aea4:	7a00      	ldrb	r0, [r0, #8]
1004aea6:	07c0      	lsls	r0, r0, #31
1004aea8:	d008      	beq.n	1004aebc <Gatt_Add_Characteristic+0x2c0>
1004aeaa:	4822      	ldr	r0, [pc, #136]	; (1004af34 <Gatt_Add_Characteristic+0x338>)
1004aeac:	4669      	mov	r1, sp
1004aeae:	e000      	b.n	1004aeb2 <Gatt_Add_Characteristic+0x2b6>
1004aeb0:	e02b      	b.n	1004af0a <Gatt_Add_Characteristic+0x30e>
1004aeb2:	8208      	strh	r0, [r1, #16]
1004aeb4:	a903      	add	r1, sp, #12
1004aeb6:	a824      	add	r0, sp, #144	; 0x90
1004aeb8:	f7ff fdf0 	bl	1004aa9c <Gatt_Add_Charac_Desc>
1004aebc:	4668      	mov	r0, sp
1004aebe:	7a00      	ldrb	r0, [r0, #8]
1004aec0:	0680      	lsls	r0, r0, #26
1004aec2:	0f80      	lsrs	r0, r0, #30
1004aec4:	d007      	beq.n	1004aed6 <Gatt_Add_Characteristic+0x2da>
1004aec6:	481b      	ldr	r0, [pc, #108]	; (1004af34 <Gatt_Add_Characteristic+0x338>)
1004aec8:	4669      	mov	r1, sp
1004aeca:	1e40      	subs	r0, r0, #1
1004aecc:	8208      	strh	r0, [r1, #16]
1004aece:	a903      	add	r1, sp, #12
1004aed0:	a824      	add	r0, sp, #144	; 0x90
1004aed2:	f7ff fde3 	bl	1004aa9c <Gatt_Add_Charac_Desc>
1004aed6:	4668      	mov	r0, sp
1004aed8:	7a00      	ldrb	r0, [r0, #8]
1004aeda:	0600      	lsls	r0, r0, #24
1004aedc:	d50a      	bpl.n	1004aef4 <Gatt_Add_Characteristic+0x2f8>
1004aede:	2129      	movs	r1, #41	; 0x29
1004aee0:	0209      	lsls	r1, r1, #8
1004aee2:	4668      	mov	r0, sp
1004aee4:	8201      	strh	r1, [r0, #16]
1004aee6:	a808      	add	r0, sp, #32
1004aee8:	7344      	strb	r4, [r0, #13]
1004aeea:	7305      	strb	r5, [r0, #12]
1004aeec:	a903      	add	r1, sp, #12
1004aeee:	a824      	add	r0, sp, #144	; 0x90
1004aef0:	f7ff fdd4 	bl	1004aa9c <Gatt_Add_Charac_Desc>
1004aef4:	9825      	ldr	r0, [sp, #148]	; 0x94
1004aef6:	8801      	ldrh	r1, [r0, #0]
1004aef8:	9812      	ldr	r0, [sp, #72]	; 0x48
1004aefa:	1c40      	adds	r0, r0, #1
1004aefc:	1808      	adds	r0, r1, r0
1004aefe:	b282      	uxth	r2, r0
1004af00:	2000      	movs	r0, #0
1004af02:	f001 f8b9 	bl	1004c078 <Ind_Service_Change_Charac>
1004af06:	2000      	movs	r0, #0
1004af08:	e6ad      	b.n	1004ac66 <Gatt_Add_Characteristic+0x6a>
1004af0a:	2202      	movs	r2, #2
1004af0c:	a913      	add	r1, sp, #76	; 0x4c
1004af0e:	1cc0      	adds	r0, r0, #3
1004af10:	f7f8 f955 	bl	100431be <Osal_MemCpy>
1004af14:	4628      	mov	r0, r5
1004af16:	2202      	movs	r2, #2
1004af18:	a913      	add	r1, sp, #76	; 0x4c
1004af1a:	3008      	adds	r0, #8
1004af1c:	f7f8 f94f 	bl	100431be <Osal_MemCpy>
1004af20:	8b38      	ldrh	r0, [r7, #24]
1004af22:	1d40      	adds	r0, r0, #5
1004af24:	e753      	b.n	1004adce <Gatt_Add_Characteristic+0x1d2>
1004af26:	0000      	.short	0x0000
1004af28:	2000098c 	.word	0x2000098c
1004af2c:	0000072c 	.word	0x0000072c
1004af30:	00002803 	.word	0x00002803
1004af34:	00002903 	.word	0x00002903

1004af38 <Gatt_Add_Descriptor>:
1004af38:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004af3a:	4852      	ldr	r0, [pc, #328]	; (1004b084 <Gatt_Add_Descriptor+0x14c>)
1004af3c:	4a52      	ldr	r2, [pc, #328]	; (1004b088 <Gatt_Add_Descriptor+0x150>)
1004af3e:	6800      	ldr	r0, [r0, #0]
1004af40:	b087      	sub	sp, #28
1004af42:	1882      	adds	r2, r0, r2
1004af44:	9206      	str	r2, [sp, #24]
1004af46:	aa10      	add	r2, sp, #64	; 0x40
1004af48:	9b10      	ldr	r3, [sp, #64]	; 0x40
1004af4a:	2601      	movs	r6, #1
1004af4c:	9f16      	ldr	r7, [sp, #88]	; 0x58
1004af4e:	8892      	ldrh	r2, [r2, #4]
1004af50:	2b01      	cmp	r3, #1
1004af52:	d104      	bne.n	1004af5e <Gatt_Add_Descriptor+0x26>
1004af54:	4b4d      	ldr	r3, [pc, #308]	; (1004b08c <Gatt_Add_Descriptor+0x154>)
1004af56:	429a      	cmp	r2, r3
1004af58:	d101      	bne.n	1004af5e <Gatt_Add_Descriptor+0x26>
1004af5a:	30a0      	adds	r0, #160	; 0xa0
1004af5c:	7b06      	ldrb	r6, [r0, #12]
1004af5e:	9d06      	ldr	r5, [sp, #24]
1004af60:	4634      	mov	r4, r6
1004af62:	3540      	adds	r5, #64	; 0x40
1004af64:	8b68      	ldrh	r0, [r5, #26]
1004af66:	8b2b      	ldrh	r3, [r5, #24]
1004af68:	437c      	muls	r4, r7
1004af6a:	1ac3      	subs	r3, r0, r3
1004af6c:	9809      	ldr	r0, [sp, #36]	; 0x24
1004af6e:	3020      	adds	r0, #32
1004af70:	9003      	str	r0, [sp, #12]
1004af72:	42a3      	cmp	r3, r4
1004af74:	da22      	bge.n	1004afbc <Gatt_Add_Descriptor+0x84>
1004af76:	2048      	movs	r0, #72	; 0x48
1004af78:	b00b      	add	sp, #44	; 0x2c
1004af7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004af7c:	2023      	movs	r0, #35	; 0x23
1004af7e:	5c40      	ldrb	r0, [r0, r1]
1004af80:	2801      	cmp	r0, #1
1004af82:	d119      	bne.n	1004afb8 <Gatt_Add_Descriptor+0x80>
1004af84:	8908      	ldrh	r0, [r1, #8]
1004af86:	466c      	mov	r4, sp
1004af88:	8020      	strh	r0, [r4, #0]
1004af8a:	4298      	cmp	r0, r3
1004af8c:	d00c      	beq.n	1004afa8 <Gatt_Add_Descriptor+0x70>
1004af8e:	4c3f      	ldr	r4, [pc, #252]	; (1004b08c <Gatt_Add_Descriptor+0x154>)
1004af90:	1e64      	subs	r4, r4, #1
1004af92:	42a0      	cmp	r0, r4
1004af94:	d008      	beq.n	1004afa8 <Gatt_Add_Descriptor+0x70>
1004af96:	1c64      	adds	r4, r4, #1
1004af98:	42a0      	cmp	r0, r4
1004af9a:	d005      	beq.n	1004afa8 <Gatt_Add_Descriptor+0x70>
1004af9c:	1c64      	adds	r4, r4, #1
1004af9e:	42a0      	cmp	r0, r4
1004afa0:	d002      	beq.n	1004afa8 <Gatt_Add_Descriptor+0x70>
1004afa2:	1ca4      	adds	r4, r4, #2
1004afa4:	42a0      	cmp	r0, r4
1004afa6:	d107      	bne.n	1004afb8 <Gatt_Add_Descriptor+0x80>
1004afa8:	4c38      	ldr	r4, [pc, #224]	; (1004b08c <Gatt_Add_Descriptor+0x154>)
1004afaa:	3cff      	subs	r4, #255	; 0xff
1004afac:	42a0      	cmp	r0, r4
1004afae:	d001      	beq.n	1004afb4 <Gatt_Add_Descriptor+0x7c>
1004afb0:	4290      	cmp	r0, r2
1004afb2:	d101      	bne.n	1004afb8 <Gatt_Add_Descriptor+0x80>
1004afb4:	2062      	movs	r0, #98	; 0x62
1004afb6:	e7df      	b.n	1004af78 <Gatt_Add_Descriptor+0x40>
1004afb8:	6809      	ldr	r1, [r1, #0]
1004afba:	e001      	b.n	1004afc0 <Gatt_Add_Descriptor+0x88>
1004afbc:	2329      	movs	r3, #41	; 0x29
1004afbe:	021b      	lsls	r3, r3, #8
1004afc0:	9803      	ldr	r0, [sp, #12]
1004afc2:	4281      	cmp	r1, r0
1004afc4:	d1da      	bne.n	1004af7c <Gatt_Add_Descriptor+0x44>
1004afc6:	9809      	ldr	r0, [sp, #36]	; 0x24
1004afc8:	991b      	ldr	r1, [sp, #108]	; 0x6c
1004afca:	6984      	ldr	r4, [r0, #24]
1004afcc:	9818      	ldr	r0, [sp, #96]	; 0x60
1004afce:	4622      	mov	r2, r4
1004afd0:	f005 ff12 	bl	10050df8 <Check_Encry_Key_Size>
1004afd4:	2842      	cmp	r0, #66	; 0x42
1004afd6:	d0cf      	beq.n	1004af78 <Gatt_Add_Descriptor+0x40>
1004afd8:	981c      	ldr	r0, [sp, #112]	; 0x70
1004afda:	2801      	cmp	r0, #1
1004afdc:	d104      	bne.n	1004afe8 <Gatt_Add_Descriptor+0xb0>
1004afde:	9815      	ldr	r0, [sp, #84]	; 0x54
1004afe0:	4287      	cmp	r7, r0
1004afe2:	d201      	bcs.n	1004afe8 <Gatt_Add_Descriptor+0xb0>
1004afe4:	2042      	movs	r0, #66	; 0x42
1004afe6:	e7c7      	b.n	1004af78 <Gatt_Add_Descriptor+0x40>
1004afe8:	9815      	ldr	r0, [sp, #84]	; 0x54
1004afea:	83e0      	strh	r0, [r4, #30]
1004afec:	4620      	mov	r0, r4
1004afee:	3020      	adds	r0, #32
1004aff0:	991c      	ldr	r1, [sp, #112]	; 0x70
1004aff2:	9005      	str	r0, [sp, #20]
1004aff4:	7081      	strb	r1, [r0, #2]
1004aff6:	8427      	strh	r7, [r4, #32]
1004aff8:	980a      	ldr	r0, [sp, #40]	; 0x28
1004affa:	8b80      	ldrh	r0, [r0, #28]
1004affc:	1c40      	adds	r0, r0, #1
1004affe:	83a0      	strh	r0, [r4, #28]
1004b000:	9810      	ldr	r0, [sp, #64]	; 0x40
1004b002:	2801      	cmp	r0, #1
1004b004:	d014      	beq.n	1004b030 <Gatt_Add_Descriptor+0xf8>
1004b006:	4620      	mov	r0, r4
1004b008:	2210      	movs	r2, #16
1004b00a:	a911      	add	r1, sp, #68	; 0x44
1004b00c:	3008      	adds	r0, #8
1004b00e:	f7f8 f8d6 	bl	100431be <Osal_MemCpy>
1004b012:	9905      	ldr	r1, [sp, #20]
1004b014:	9810      	ldr	r0, [sp, #64]	; 0x40
1004b016:	70c8      	strb	r0, [r1, #3]
1004b018:	9806      	ldr	r0, [sp, #24]
1004b01a:	8b29      	ldrh	r1, [r5, #24]
1004b01c:	6d40      	ldr	r0, [r0, #84]	; 0x54
1004b01e:	1840      	adds	r0, r0, r1
1004b020:	61a0      	str	r0, [r4, #24]
1004b022:	8b29      	ldrh	r1, [r5, #24]
1004b024:	4638      	mov	r0, r7
1004b026:	4370      	muls	r0, r6
1004b028:	1808      	adds	r0, r1, r0
1004b02a:	8328      	strh	r0, [r5, #24]
1004b02c:	2500      	movs	r5, #0
1004b02e:	e00f      	b.n	1004b050 <Gatt_Add_Descriptor+0x118>
1004b030:	a811      	add	r0, sp, #68	; 0x44
1004b032:	c80f      	ldmia	r0, {r0, r1, r2, r3}
1004b034:	3408      	adds	r4, #8
1004b036:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1004b038:	3c18      	subs	r4, #24
1004b03a:	e7ea      	b.n	1004b012 <Gatt_Add_Descriptor+0xda>
1004b03c:	4628      	mov	r0, r5
1004b03e:	69a1      	ldr	r1, [r4, #24]
1004b040:	4378      	muls	r0, r7
1004b042:	1808      	adds	r0, r1, r0
1004b044:	9a15      	ldr	r2, [sp, #84]	; 0x54
1004b046:	9917      	ldr	r1, [sp, #92]	; 0x5c
1004b048:	f7f8 f8b9 	bl	100431be <Osal_MemCpy>
1004b04c:	1c6d      	adds	r5, r5, #1
1004b04e:	b2ed      	uxtb	r5, r5
1004b050:	42b5      	cmp	r5, r6
1004b052:	d3f3      	bcc.n	1004b03c <Gatt_Add_Descriptor+0x104>
1004b054:	9905      	ldr	r1, [sp, #20]
1004b056:	9818      	ldr	r0, [sp, #96]	; 0x60
1004b058:	7148      	strb	r0, [r1, #5]
1004b05a:	9905      	ldr	r1, [sp, #20]
1004b05c:	9819      	ldr	r0, [sp, #100]	; 0x64
1004b05e:	7108      	strb	r0, [r1, #4]
1004b060:	9905      	ldr	r1, [sp, #20]
1004b062:	981a      	ldr	r0, [sp, #104]	; 0x68
1004b064:	7188      	strb	r0, [r1, #6]
1004b066:	9809      	ldr	r0, [sp, #36]	; 0x24
1004b068:	4621      	mov	r1, r4
1004b06a:	3018      	adds	r0, #24
1004b06c:	f005 ff37 	bl	10050ede <List_Circular_Remove_Node>
1004b070:	4621      	mov	r1, r4
1004b072:	9803      	ldr	r0, [sp, #12]
1004b074:	f005 ff14 	bl	10050ea0 <List_Circular_Insert_Tail>
1004b078:	9807      	ldr	r0, [sp, #28]
1004b07a:	8ba1      	ldrh	r1, [r4, #28]
1004b07c:	8001      	strh	r1, [r0, #0]
1004b07e:	2000      	movs	r0, #0
1004b080:	e77a      	b.n	1004af78 <Gatt_Add_Descriptor+0x40>
1004b082:	0000      	.short	0x0000
1004b084:	2000098c 	.word	0x2000098c
1004b088:	0000072c 	.word	0x0000072c
1004b08c:	00002902 	.word	0x00002902

1004b090 <Gatt_Add_Service>:
1004b090:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004b092:	b08f      	sub	sp, #60	; 0x3c
1004b094:	4614      	mov	r4, r2
1004b096:	780e      	ldrb	r6, [r1, #0]
1004b098:	2210      	movs	r2, #16
1004b09a:	a805      	add	r0, sp, #20
1004b09c:	1c89      	adds	r1, r1, #2
1004b09e:	f7f9 fa67 	bl	10044570 <__aeabi_memcpy>
1004b0a2:	484f      	ldr	r0, [pc, #316]	; (1004b1e0 <Gatt_Add_Service+0x150>)
1004b0a4:	494f      	ldr	r1, [pc, #316]	; (1004b1e4 <Gatt_Add_Service+0x154>)
1004b0a6:	6800      	ldr	r0, [r0, #0]
1004b0a8:	1845      	adds	r5, r0, r1
1004b0aa:	f000 fad1 	bl	1004b650 <Gatt_Server_Db_Check>
1004b0ae:	2800      	cmp	r0, #0
1004b0b0:	d11e      	bne.n	1004b0f0 <Gatt_Add_Service+0x60>
1004b0b2:	2c00      	cmp	r4, #0
1004b0b4:	d057      	beq.n	1004b166 <Gatt_Add_Service+0xd6>
1004b0b6:	2e01      	cmp	r6, #1
1004b0b8:	d109      	bne.n	1004b0ce <Gatt_Add_Service+0x3e>
1004b0ba:	4668      	mov	r0, sp
1004b0bc:	8a80      	ldrh	r0, [r0, #20]
1004b0be:	494a      	ldr	r1, [pc, #296]	; (1004b1e8 <Gatt_Add_Service+0x158>)
1004b0c0:	4288      	cmp	r0, r1
1004b0c2:	d104      	bne.n	1004b0ce <Gatt_Add_Service+0x3e>
1004b0c4:	4628      	mov	r0, r5
1004b0c6:	68a9      	ldr	r1, [r5, #8]
1004b0c8:	3008      	adds	r0, #8
1004b0ca:	4281      	cmp	r1, r0
1004b0cc:	d14b      	bne.n	1004b166 <Gatt_Add_Service+0xd6>
1004b0ce:	4628      	mov	r0, r5
1004b0d0:	3010      	adds	r0, #16
1004b0d2:	6929      	ldr	r1, [r5, #16]
1004b0d4:	9003      	str	r0, [sp, #12]
1004b0d6:	4281      	cmp	r1, r0
1004b0d8:	d009      	beq.n	1004b0ee <Gatt_Add_Service+0x5e>
1004b0da:	a90a      	add	r1, sp, #40	; 0x28
1004b0dc:	4628      	mov	r0, r5
1004b0de:	f005 fed5 	bl	10050e8c <List_Circular_Get_Size>
1004b0e2:	4668      	mov	r0, sp
1004b0e4:	8d01      	ldrh	r1, [r0, #40]	; 0x28
1004b0e6:	1e60      	subs	r0, r4, #1
1004b0e8:	900d      	str	r0, [sp, #52]	; 0x34
1004b0ea:	4281      	cmp	r1, r0
1004b0ec:	d202      	bcs.n	1004b0f4 <Gatt_Add_Service+0x64>
1004b0ee:	2048      	movs	r0, #72	; 0x48
1004b0f0:	b013      	add	sp, #76	; 0x4c
1004b0f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b0f4:	4628      	mov	r0, r5
1004b0f6:	3008      	adds	r0, #8
1004b0f8:	a90c      	add	r1, sp, #48	; 0x30
1004b0fa:	9004      	str	r0, [sp, #16]
1004b0fc:	f005 fec6 	bl	10050e8c <List_Circular_Get_Size>
1004b100:	4668      	mov	r0, sp
1004b102:	8e00      	ldrh	r0, [r0, #48]	; 0x30
1004b104:	2800      	cmp	r0, #0
1004b106:	d014      	beq.n	1004b132 <Gatt_Add_Service+0xa2>
1004b108:	68ef      	ldr	r7, [r5, #12]
1004b10a:	a90a      	add	r1, sp, #40	; 0x28
1004b10c:	4638      	mov	r0, r7
1004b10e:	3018      	adds	r0, #24
1004b110:	f005 febc 	bl	10050e8c <List_Circular_Get_Size>
1004b114:	4638      	mov	r0, r7
1004b116:	3020      	adds	r0, #32
1004b118:	a90c      	add	r1, sp, #48	; 0x30
1004b11a:	f005 feb7 	bl	10050e8c <List_Circular_Get_Size>
1004b11e:	4668      	mov	r0, sp
1004b120:	8d39      	ldrh	r1, [r7, #40]	; 0x28
1004b122:	8d00      	ldrh	r0, [r0, #40]	; 0x28
1004b124:	1809      	adds	r1, r1, r0
1004b126:	4668      	mov	r0, sp
1004b128:	8e00      	ldrh	r0, [r0, #48]	; 0x30
1004b12a:	1c40      	adds	r0, r0, #1
1004b12c:	1808      	adds	r0, r1, r0
1004b12e:	b287      	uxth	r7, r0
1004b130:	e000      	b.n	1004b134 <Gatt_Add_Service+0xa4>
1004b132:	2701      	movs	r7, #1
1004b134:	2001      	movs	r0, #1
1004b136:	0400      	lsls	r0, r0, #16
1004b138:	1bc0      	subs	r0, r0, r7
1004b13a:	42a0      	cmp	r0, r4
1004b13c:	d201      	bcs.n	1004b142 <Gatt_Add_Service+0xb2>
1004b13e:	2061      	movs	r0, #97	; 0x61
1004b140:	e7d6      	b.n	1004b0f0 <Gatt_Add_Service+0x60>
1004b142:	692c      	ldr	r4, [r5, #16]
1004b144:	6828      	ldr	r0, [r5, #0]
1004b146:	9001      	str	r0, [sp, #4]
1004b148:	9812      	ldr	r0, [sp, #72]	; 0x48
1004b14a:	2801      	cmp	r0, #1
1004b14c:	d002      	beq.n	1004b154 <Gatt_Add_Service+0xc4>
1004b14e:	2802      	cmp	r0, #2
1004b150:	d003      	beq.n	1004b15a <Gatt_Add_Service+0xca>
1004b152:	e008      	b.n	1004b166 <Gatt_Add_Service+0xd6>
1004b154:	2005      	movs	r0, #5
1004b156:	02c0      	lsls	r0, r0, #11
1004b158:	e000      	b.n	1004b15c <Gatt_Add_Service+0xcc>
1004b15a:	4824      	ldr	r0, [pc, #144]	; (1004b1ec <Gatt_Add_Service+0x15c>)
1004b15c:	8560      	strh	r0, [r4, #42]	; 0x2a
1004b15e:	2e01      	cmp	r6, #1
1004b160:	d003      	beq.n	1004b16a <Gatt_Add_Service+0xda>
1004b162:	2e02      	cmp	r6, #2
1004b164:	d005      	beq.n	1004b172 <Gatt_Add_Service+0xe2>
1004b166:	2042      	movs	r0, #66	; 0x42
1004b168:	e7c2      	b.n	1004b0f0 <Gatt_Add_Service+0x60>
1004b16a:	4620      	mov	r0, r4
1004b16c:	3008      	adds	r0, #8
1004b16e:	2202      	movs	r2, #2
1004b170:	e002      	b.n	1004b178 <Gatt_Add_Service+0xe8>
1004b172:	4620      	mov	r0, r4
1004b174:	3008      	adds	r0, #8
1004b176:	2210      	movs	r2, #16
1004b178:	a905      	add	r1, sp, #20
1004b17a:	f7f8 f820 	bl	100431be <Osal_MemCpy>
1004b17e:	4620      	mov	r0, r4
1004b180:	4631      	mov	r1, r6
1004b182:	3020      	adds	r0, #32
1004b184:	4606      	mov	r6, r0
1004b186:	7301      	strb	r1, [r0, #12]
1004b188:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004b18a:	4621      	mov	r1, r4
1004b18c:	8007      	strh	r7, [r0, #0]
1004b18e:	8527      	strh	r7, [r4, #40]	; 0x28
1004b190:	9803      	ldr	r0, [sp, #12]
1004b192:	f005 fea4 	bl	10050ede <List_Circular_Remove_Node>
1004b196:	4621      	mov	r1, r4
1004b198:	9804      	ldr	r0, [sp, #16]
1004b19a:	f005 fe81 	bl	10050ea0 <List_Circular_Insert_Tail>
1004b19e:	4627      	mov	r7, r4
1004b1a0:	3718      	adds	r7, #24
1004b1a2:	61e7      	str	r7, [r4, #28]
1004b1a4:	6266      	str	r6, [r4, #36]	; 0x24
1004b1a6:	61a7      	str	r7, [r4, #24]
1004b1a8:	6226      	str	r6, [r4, #32]
1004b1aa:	980d      	ldr	r0, [sp, #52]	; 0x34
1004b1ac:	b284      	uxth	r4, r0
1004b1ae:	e00b      	b.n	1004b1c8 <Gatt_Add_Service+0x138>
1004b1b0:	4628      	mov	r0, r5
1004b1b2:	9901      	ldr	r1, [sp, #4]
1004b1b4:	f005 fe93 	bl	10050ede <List_Circular_Remove_Node>
1004b1b8:	4638      	mov	r0, r7
1004b1ba:	9901      	ldr	r1, [sp, #4]
1004b1bc:	f005 fe70 	bl	10050ea0 <List_Circular_Insert_Tail>
1004b1c0:	6828      	ldr	r0, [r5, #0]
1004b1c2:	1e64      	subs	r4, r4, #1
1004b1c4:	b2a4      	uxth	r4, r4
1004b1c6:	9001      	str	r0, [sp, #4]
1004b1c8:	2c00      	cmp	r4, #0
1004b1ca:	d1f1      	bne.n	1004b1b0 <Gatt_Add_Service+0x120>
1004b1cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004b1ce:	8801      	ldrh	r1, [r0, #0]
1004b1d0:	980d      	ldr	r0, [sp, #52]	; 0x34
1004b1d2:	1808      	adds	r0, r1, r0
1004b1d4:	b282      	uxth	r2, r0
1004b1d6:	2000      	movs	r0, #0
1004b1d8:	f000 ff4e 	bl	1004c078 <Ind_Service_Change_Charac>
1004b1dc:	2000      	movs	r0, #0
1004b1de:	e787      	b.n	1004b0f0 <Gatt_Add_Service+0x60>
1004b1e0:	2000098c 	.word	0x2000098c
1004b1e4:	0000072c 	.word	0x0000072c
1004b1e8:	00001801 	.word	0x00001801
1004b1ec:	00002801 	.word	0x00002801

1004b1f0 <Gatt_Appl_Auth_For_Read>:
1004b1f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004b1f2:	4606      	mov	r6, r0
1004b1f4:	4836      	ldr	r0, [pc, #216]	; (1004b2d0 <Gatt_Appl_Auth_For_Read+0xe0>)
1004b1f6:	460f      	mov	r7, r1
1004b1f8:	6800      	ldr	r0, [r0, #0]
1004b1fa:	4936      	ldr	r1, [pc, #216]	; (1004b2d4 <Gatt_Appl_Auth_For_Read+0xe4>)
1004b1fc:	b082      	sub	sp, #8
1004b1fe:	1844      	adds	r4, r0, r1
1004b200:	4630      	mov	r0, r6
1004b202:	f7ff f9dd 	bl	1004a5c0 <Find_Gatt_Client>
1004b206:	0005      	movs	r5, r0
1004b208:	d060      	beq.n	1004b2cc <Gatt_Appl_Auth_For_Read+0xdc>
1004b20a:	4620      	mov	r0, r4
1004b20c:	3024      	adds	r0, #36	; 0x24
1004b20e:	9000      	str	r0, [sp, #0]
1004b210:	f00a fe6a 	bl	10055ee8 <acl_list_is_empty>
1004b214:	2800      	cmp	r0, #0
1004b216:	d159      	bne.n	1004b2cc <Gatt_Appl_Auth_For_Read+0xdc>
1004b218:	6928      	ldr	r0, [r5, #16]
1004b21a:	0300      	lsls	r0, r0, #12
1004b21c:	d556      	bpl.n	1004b2cc <Gatt_Appl_Auth_For_Read+0xdc>
1004b21e:	9800      	ldr	r0, [sp, #0]
1004b220:	f00a fe1c 	bl	10055e5c <acl_list_first>
1004b224:	4604      	mov	r4, r0
1004b226:	e04f      	b.n	1004b2c8 <Gatt_Appl_Auth_For_Read+0xd8>
1004b228:	88a0      	ldrh	r0, [r4, #4]
1004b22a:	42b0      	cmp	r0, r6
1004b22c:	d14b      	bne.n	1004b2c6 <Gatt_Appl_Auth_For_Read+0xd6>
1004b22e:	2220      	movs	r2, #32
1004b230:	4631      	mov	r1, r6
1004b232:	2000      	movs	r0, #0
1004b234:	f005 fa72 	bl	1005071c <PM_Get_Pckt>
1004b238:	0006      	movs	r6, r0
1004b23a:	d018      	beq.n	1004b26e <Gatt_Appl_Auth_For_Read+0x7e>
1004b23c:	68a0      	ldr	r0, [r4, #8]
1004b23e:	2f00      	cmp	r7, #0
1004b240:	7b01      	ldrb	r1, [r0, #12]
1004b242:	7b42      	ldrb	r2, [r0, #13]
1004b244:	d015      	beq.n	1004b272 <Gatt_Appl_Auth_For_Read+0x82>
1004b246:	4633      	mov	r3, r6
1004b248:	9804      	ldr	r0, [sp, #16]
1004b24a:	f00b f9d3 	bl	100565f4 <ATT_fill_error_resp>
1004b24e:	2000      	movs	r0, #0
1004b250:	2201      	movs	r2, #1
1004b252:	6929      	ldr	r1, [r5, #16]
1004b254:	04d2      	lsls	r2, r2, #19
1004b256:	4391      	bics	r1, r2
1004b258:	6129      	str	r1, [r5, #16]
1004b25a:	2800      	cmp	r0, #0
1004b25c:	d02a      	beq.n	1004b2b4 <Gatt_Appl_Auth_For_Read+0xc4>
1004b25e:	2869      	cmp	r0, #105	; 0x69
1004b260:	d002      	beq.n	1004b268 <Gatt_Appl_Auth_For_Read+0x78>
1004b262:	4630      	mov	r0, r6
1004b264:	f7ff fbea 	bl	1004aa3c <GATT_Send_Packet>
1004b268:	2000      	movs	r0, #0
1004b26a:	b005      	add	sp, #20
1004b26c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b26e:	2064      	movs	r0, #100	; 0x64
1004b270:	e7fb      	b.n	1004b26a <Gatt_Appl_Auth_For_Read+0x7a>
1004b272:	290a      	cmp	r1, #10
1004b274:	d006      	beq.n	1004b284 <Gatt_Appl_Auth_For_Read+0x94>
1004b276:	290c      	cmp	r1, #12
1004b278:	d00a      	beq.n	1004b290 <Gatt_Appl_Auth_For_Read+0xa0>
1004b27a:	290e      	cmp	r1, #14
1004b27c:	d00e      	beq.n	1004b29c <Gatt_Appl_Auth_For_Read+0xac>
1004b27e:	2908      	cmp	r1, #8
1004b280:	d012      	beq.n	1004b2a8 <Gatt_Appl_Auth_For_Read+0xb8>
1004b282:	e023      	b.n	1004b2cc <Gatt_Appl_Auth_For_Read+0xdc>
1004b284:	4632      	mov	r2, r6
1004b286:	4621      	mov	r1, r4
1004b288:	4628      	mov	r0, r5
1004b28a:	f00c fa6f 	bl	1005776c <Read_Resp>
1004b28e:	e7df      	b.n	1004b250 <Gatt_Appl_Auth_For_Read+0x60>
1004b290:	4632      	mov	r2, r6
1004b292:	4621      	mov	r1, r4
1004b294:	4628      	mov	r0, r5
1004b296:	f00b fea3 	bl	10056fe0 <Read_Blob_Resp>
1004b29a:	e7d9      	b.n	1004b250 <Gatt_Appl_Auth_For_Read+0x60>
1004b29c:	4632      	mov	r2, r6
1004b29e:	4621      	mov	r1, r4
1004b2a0:	4628      	mov	r0, r5
1004b2a2:	f00c f999 	bl	100575d8 <Read_Multi_Resp>
1004b2a6:	e7d3      	b.n	1004b250 <Gatt_Appl_Auth_For_Read+0x60>
1004b2a8:	4632      	mov	r2, r6
1004b2aa:	4621      	mov	r1, r4
1004b2ac:	4628      	mov	r0, r5
1004b2ae:	f00c f829 	bl	10057304 <Read_By_Type_Resp>
1004b2b2:	e7cd      	b.n	1004b250 <Gatt_Appl_Auth_For_Read+0x60>
1004b2b4:	4621      	mov	r1, r4
1004b2b6:	9800      	ldr	r0, [sp, #0]
1004b2b8:	f00a fe1d 	bl	10055ef6 <acl_list_remove>
1004b2bc:	2101      	movs	r1, #1
1004b2be:	4620      	mov	r0, r4
1004b2c0:	f005 fa88 	bl	100507d4 <PM_Release_Acl_Pckt>
1004b2c4:	e7cd      	b.n	1004b262 <Gatt_Appl_Auth_For_Read+0x72>
1004b2c6:	6824      	ldr	r4, [r4, #0]
1004b2c8:	2c00      	cmp	r4, #0
1004b2ca:	d1ad      	bne.n	1004b228 <Gatt_Appl_Auth_For_Read+0x38>
1004b2cc:	2041      	movs	r0, #65	; 0x41
1004b2ce:	e7cc      	b.n	1004b26a <Gatt_Appl_Auth_For_Read+0x7a>
1004b2d0:	2000098c 	.word	0x2000098c
1004b2d4:	0000072c 	.word	0x0000072c

1004b2d8 <Gatt_Find_Srv_From_Handle>:
1004b2d8:	4602      	mov	r2, r0
1004b2da:	4808      	ldr	r0, [pc, #32]	; (1004b2fc <Gatt_Find_Srv_From_Handle+0x24>)
1004b2dc:	4908      	ldr	r1, [pc, #32]	; (1004b300 <Gatt_Find_Srv_From_Handle+0x28>)
1004b2de:	6800      	ldr	r0, [r0, #0]
1004b2e0:	1841      	adds	r1, r0, r1
1004b2e2:	6888      	ldr	r0, [r1, #8]
1004b2e4:	3108      	adds	r1, #8
1004b2e6:	e003      	b.n	1004b2f0 <Gatt_Find_Srv_From_Handle+0x18>
1004b2e8:	8d03      	ldrh	r3, [r0, #40]	; 0x28
1004b2ea:	4293      	cmp	r3, r2
1004b2ec:	d202      	bcs.n	1004b2f4 <Gatt_Find_Srv_From_Handle+0x1c>
1004b2ee:	6800      	ldr	r0, [r0, #0]
1004b2f0:	4288      	cmp	r0, r1
1004b2f2:	d1f9      	bne.n	1004b2e8 <Gatt_Find_Srv_From_Handle+0x10>
1004b2f4:	4288      	cmp	r0, r1
1004b2f6:	d100      	bne.n	1004b2fa <Gatt_Find_Srv_From_Handle+0x22>
1004b2f8:	2000      	movs	r0, #0
1004b2fa:	4770      	bx	lr
1004b2fc:	2000098c 	.word	0x2000098c
1004b300:	0000072c 	.word	0x0000072c

1004b304 <Gatt_Find_Srv_Owner_Of_Handle>:
1004b304:	4603      	mov	r3, r0
1004b306:	b510      	push	{r4, lr}
1004b308:	480e      	ldr	r0, [pc, #56]	; (1004b344 <Gatt_Find_Srv_Owner_Of_Handle+0x40>)
1004b30a:	490f      	ldr	r1, [pc, #60]	; (1004b348 <Gatt_Find_Srv_Owner_Of_Handle+0x44>)
1004b30c:	6800      	ldr	r0, [r0, #0]
1004b30e:	1841      	adds	r1, r0, r1
1004b310:	6888      	ldr	r0, [r1, #8]
1004b312:	3108      	adds	r1, #8
1004b314:	e003      	b.n	1004b31e <Gatt_Find_Srv_Owner_Of_Handle+0x1a>
1004b316:	8d14      	ldrh	r4, [r2, #40]	; 0x28
1004b318:	429c      	cmp	r4, r3
1004b31a:	d803      	bhi.n	1004b324 <Gatt_Find_Srv_Owner_Of_Handle+0x20>
1004b31c:	4610      	mov	r0, r2
1004b31e:	6802      	ldr	r2, [r0, #0]
1004b320:	428a      	cmp	r2, r1
1004b322:	d1f8      	bne.n	1004b316 <Gatt_Find_Srv_Owner_Of_Handle+0x12>
1004b324:	428a      	cmp	r2, r1
1004b326:	d10c      	bne.n	1004b342 <Gatt_Find_Srv_Owner_Of_Handle+0x3e>
1004b328:	8d01      	ldrh	r1, [r0, #40]	; 0x28
1004b32a:	4299      	cmp	r1, r3
1004b32c:	d209      	bcs.n	1004b342 <Gatt_Find_Srv_Owner_Of_Handle+0x3e>
1004b32e:	4601      	mov	r1, r0
1004b330:	6a02      	ldr	r2, [r0, #32]
1004b332:	3120      	adds	r1, #32
1004b334:	428a      	cmp	r2, r1
1004b336:	d003      	beq.n	1004b340 <Gatt_Find_Srv_Owner_Of_Handle+0x3c>
1004b338:	6a41      	ldr	r1, [r0, #36]	; 0x24
1004b33a:	8b89      	ldrh	r1, [r1, #28]
1004b33c:	4299      	cmp	r1, r3
1004b33e:	d200      	bcs.n	1004b342 <Gatt_Find_Srv_Owner_Of_Handle+0x3e>
1004b340:	2000      	movs	r0, #0
1004b342:	bd10      	pop	{r4, pc}
1004b344:	2000098c 	.word	0x2000098c
1004b348:	0000072c 	.word	0x0000072c

1004b34c <Gatt_Find_Timed_Out_Connection_Index>:
1004b34c:	4602      	mov	r2, r0
1004b34e:	b510      	push	{r4, lr}
1004b350:	480b      	ldr	r0, [pc, #44]	; (1004b380 <Gatt_Find_Timed_Out_Connection_Index+0x34>)
1004b352:	0512      	lsls	r2, r2, #20
1004b354:	6801      	ldr	r1, [r0, #0]
1004b356:	2009      	movs	r0, #9
1004b358:	0200      	lsls	r0, r0, #8
1004b35a:	1808      	adds	r0, r1, r0
1004b35c:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004b35e:	2000      	movs	r0, #0
1004b360:	0d12      	lsrs	r2, r2, #20
1004b362:	31a0      	adds	r1, #160	; 0xa0
1004b364:	7b09      	ldrb	r1, [r1, #12]
1004b366:	e007      	b.n	1004b378 <Gatt_Find_Timed_Out_Connection_Index+0x2c>
1004b368:	0144      	lsls	r4, r0, #5
1004b36a:	5b1c      	ldrh	r4, [r3, r4]
1004b36c:	0524      	lsls	r4, r4, #20
1004b36e:	0d24      	lsrs	r4, r4, #20
1004b370:	4294      	cmp	r4, r2
1004b372:	d003      	beq.n	1004b37c <Gatt_Find_Timed_Out_Connection_Index+0x30>
1004b374:	1c40      	adds	r0, r0, #1
1004b376:	b2c0      	uxtb	r0, r0
1004b378:	4281      	cmp	r1, r0
1004b37a:	d8f5      	bhi.n	1004b368 <Gatt_Find_Timed_Out_Connection_Index+0x1c>
1004b37c:	bd10      	pop	{r4, pc}
1004b37e:	0000      	.short	0x0000
1004b380:	2000098c 	.word	0x2000098c

1004b384 <Gatt_Flush_Pending_AclPacket_Lists>:
1004b384:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004b386:	4605      	mov	r5, r0
1004b388:	4617      	mov	r7, r2
1004b38a:	9801      	ldr	r0, [sp, #4]
1004b38c:	f00a fd66 	bl	10055e5c <acl_list_first>
1004b390:	052e      	lsls	r6, r5, #20
1004b392:	4604      	mov	r4, r0
1004b394:	0d36      	lsrs	r6, r6, #20
1004b396:	e00c      	b.n	1004b3b2 <Gatt_Flush_Pending_AclPacket_Lists+0x2e>
1004b398:	88a0      	ldrh	r0, [r4, #4]
1004b39a:	6825      	ldr	r5, [r4, #0]
1004b39c:	42b0      	cmp	r0, r6
1004b39e:	d107      	bne.n	1004b3b0 <Gatt_Flush_Pending_AclPacket_Lists+0x2c>
1004b3a0:	4621      	mov	r1, r4
1004b3a2:	9801      	ldr	r0, [sp, #4]
1004b3a4:	f00a fda7 	bl	10055ef6 <acl_list_remove>
1004b3a8:	4639      	mov	r1, r7
1004b3aa:	4620      	mov	r0, r4
1004b3ac:	f005 fa12 	bl	100507d4 <PM_Release_Acl_Pckt>
1004b3b0:	462c      	mov	r4, r5
1004b3b2:	2c00      	cmp	r4, #0
1004b3b4:	d1f0      	bne.n	1004b398 <Gatt_Flush_Pending_AclPacket_Lists+0x14>
1004b3b6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1004b3b8 <Gatt_Process_Q>:
1004b3b8:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b3ba:	b08b      	sub	sp, #44	; 0x2c
1004b3bc:	2000      	movs	r0, #0
1004b3be:	4963      	ldr	r1, [pc, #396]	; (1004b54c <Gatt_Process_Q+0x194>)
1004b3c0:	9002      	str	r0, [sp, #8]
1004b3c2:	4863      	ldr	r0, [pc, #396]	; (1004b550 <Gatt_Process_Q+0x198>)
1004b3c4:	680a      	ldr	r2, [r1, #0]
1004b3c6:	1814      	adds	r4, r2, r0
1004b3c8:	b672      	cpsid	i
1004b3ca:	4610      	mov	r0, r2
1004b3cc:	3040      	adds	r0, #64	; 0x40
1004b3ce:	79c5      	ldrb	r5, [r0, #7]
1004b3d0:	2302      	movs	r3, #2
1004b3d2:	431d      	orrs	r5, r3
1004b3d4:	71c5      	strb	r5, [r0, #7]
1004b3d6:	b662      	cpsie	i
1004b3d8:	4625      	mov	r5, r4
1004b3da:	3540      	adds	r5, #64	; 0x40
1004b3dc:	7a28      	ldrb	r0, [r5, #8]
1004b3de:	07c0      	lsls	r0, r0, #31
1004b3e0:	d07d      	beq.n	1004b4de <Gatt_Process_Q+0x126>
1004b3e2:	2009      	movs	r0, #9
1004b3e4:	0200      	lsls	r0, r0, #8
1004b3e6:	1810      	adds	r0, r2, r0
1004b3e8:	2600      	movs	r6, #0
1004b3ea:	6b47      	ldr	r7, [r0, #52]	; 0x34
1004b3ec:	e049      	b.n	1004b482 <Gatt_Process_Q+0xca>
1004b3ee:	0171      	lsls	r1, r6, #5
1004b3f0:	5a7a      	ldrh	r2, [r7, r1]
1004b3f2:	2a00      	cmp	r2, #0
1004b3f4:	d043      	beq.n	1004b47e <Gatt_Process_Q+0xc6>
1004b3f6:	19c9      	adds	r1, r1, r7
1004b3f8:	9106      	str	r1, [sp, #24]
1004b3fa:	6909      	ldr	r1, [r1, #16]
1004b3fc:	024a      	lsls	r2, r1, #9
1004b3fe:	d41e      	bmi.n	1004b43e <Gatt_Process_Q+0x86>
1004b400:	028a      	lsls	r2, r1, #10
1004b402:	d526      	bpl.n	1004b452 <Gatt_Process_Q+0x9a>
1004b404:	2102      	movs	r1, #2
1004b406:	9104      	str	r1, [sp, #16]
1004b408:	9906      	ldr	r1, [sp, #24]
1004b40a:	2301      	movs	r3, #1
1004b40c:	8809      	ldrh	r1, [r1, #0]
1004b40e:	0509      	lsls	r1, r1, #20
1004b410:	0d09      	lsrs	r1, r1, #20
1004b412:	9103      	str	r1, [sp, #12]
1004b414:	2137      	movs	r1, #55	; 0x37
1004b416:	0149      	lsls	r1, r1, #5
1004b418:	1841      	adds	r1, r0, r1
1004b41a:	7b09      	ldrb	r1, [r1, #12]
1004b41c:	0789      	lsls	r1, r1, #30
1004b41e:	d50e      	bpl.n	1004b43e <Gatt_Process_Q+0x86>
1004b420:	02d9      	lsls	r1, r3, #11
1004b422:	3008      	adds	r0, #8
1004b424:	1840      	adds	r0, r0, r1
1004b426:	2223      	movs	r2, #35	; 0x23
1004b428:	6940      	ldr	r0, [r0, #20]
1004b42a:	2102      	movs	r1, #2
1004b42c:	f009 fede 	bl	100551ec <aci_event_fifo_push_header>
1004b430:	0001      	movs	r1, r0
1004b432:	d004      	beq.n	1004b43e <Gatt_Process_Q+0x86>
1004b434:	9a03      	ldr	r2, [sp, #12]
1004b436:	808a      	strh	r2, [r1, #4]
1004b438:	9804      	ldr	r0, [sp, #16]
1004b43a:	f009 fec3 	bl	100551c4 <aci_event_fifo_push>
1004b43e:	9806      	ldr	r0, [sp, #24]
1004b440:	8800      	ldrh	r0, [r0, #0]
1004b442:	9000      	str	r0, [sp, #0]
1004b444:	9806      	ldr	r0, [sp, #24]
1004b446:	f000 f885 	bl	1004b554 <Gatt_Reset_To_Closed_State>
1004b44a:	9800      	ldr	r0, [sp, #0]
1004b44c:	f009 f826 	bl	1005449c <SMP_forget_device_by_conn_handle>
1004b450:	e015      	b.n	1004b47e <Gatt_Process_Q+0xc6>
1004b452:	0748      	lsls	r0, r1, #29
1004b454:	d513      	bpl.n	1004b47e <Gatt_Process_Q+0xc6>
1004b456:	9806      	ldr	r0, [sp, #24]
1004b458:	8800      	ldrh	r0, [r0, #0]
1004b45a:	0500      	lsls	r0, r0, #20
1004b45c:	0d00      	lsrs	r0, r0, #20
1004b45e:	f008 ffaf 	bl	100543c0 <SMP_check_is_device_bonded>
1004b462:	2800      	cmp	r0, #0
1004b464:	d105      	bne.n	1004b472 <Gatt_Process_Q+0xba>
1004b466:	9806      	ldr	r0, [sp, #24]
1004b468:	8800      	ldrh	r0, [r0, #0]
1004b46a:	0500      	lsls	r0, r0, #20
1004b46c:	0d00      	lsrs	r0, r0, #20
1004b46e:	f7ff f8e5 	bl	1004a63c <Check_For_Service_Change>
1004b472:	9906      	ldr	r1, [sp, #24]
1004b474:	2004      	movs	r0, #4
1004b476:	6909      	ldr	r1, [r1, #16]
1004b478:	4381      	bics	r1, r0
1004b47a:	9806      	ldr	r0, [sp, #24]
1004b47c:	6101      	str	r1, [r0, #16]
1004b47e:	1c76      	adds	r6, r6, #1
1004b480:	b2f6      	uxtb	r6, r6
1004b482:	4832      	ldr	r0, [pc, #200]	; (1004b54c <Gatt_Process_Q+0x194>)
1004b484:	21ac      	movs	r1, #172	; 0xac
1004b486:	6800      	ldr	r0, [r0, #0]
1004b488:	5c09      	ldrb	r1, [r1, r0]
1004b48a:	42b1      	cmp	r1, r6
1004b48c:	d8af      	bhi.n	1004b3ee <Gatt_Process_Q+0x36>
1004b48e:	f000 ff1b 	bl	1004c2c8 <Process_Peer_Server_Data>
1004b492:	4620      	mov	r0, r4
1004b494:	3024      	adds	r0, #36	; 0x24
1004b496:	4606      	mov	r6, r0
1004b498:	f00a fd26 	bl	10055ee8 <acl_list_is_empty>
1004b49c:	2801      	cmp	r0, #1
1004b49e:	d002      	beq.n	1004b4a6 <Gatt_Process_Q+0xee>
1004b4a0:	2001      	movs	r0, #1
1004b4a2:	f000 fe15 	bl	1004c0d0 <Process_Peer_Client_Data>
1004b4a6:	4620      	mov	r0, r4
1004b4a8:	3018      	adds	r0, #24
1004b4aa:	f00a fd1d 	bl	10055ee8 <acl_list_is_empty>
1004b4ae:	2801      	cmp	r0, #1
1004b4b0:	d002      	beq.n	1004b4b8 <Gatt_Process_Q+0x100>
1004b4b2:	2000      	movs	r0, #0
1004b4b4:	f000 fe0c 	bl	1004c0d0 <Process_Peer_Client_Data>
1004b4b8:	343c      	adds	r4, #60	; 0x3c
1004b4ba:	4620      	mov	r0, r4
1004b4bc:	f00a fd14 	bl	10055ee8 <acl_list_is_empty>
1004b4c0:	2801      	cmp	r0, #1
1004b4c2:	d00f      	beq.n	1004b4e4 <Gatt_Process_Q+0x12c>
1004b4c4:	a902      	add	r1, sp, #8
1004b4c6:	4620      	mov	r0, r4
1004b4c8:	f00a fd37 	bl	10055f3a <acl_list_remove_head>
1004b4cc:	2004      	movs	r0, #4
1004b4ce:	9902      	ldr	r1, [sp, #8]
1004b4d0:	f001 ff1c 	bl	1004d30c <L2C_Send_Data>
1004b4d4:	2800      	cmp	r0, #0
1004b4d6:	d0f0      	beq.n	1004b4ba <Gatt_Process_Q+0x102>
1004b4d8:	4620      	mov	r0, r4
1004b4da:	9902      	ldr	r1, [sp, #8]
1004b4dc:	e000      	b.n	1004b4e0 <Gatt_Process_Q+0x128>
1004b4de:	e032      	b.n	1004b546 <Gatt_Process_Q+0x18e>
1004b4e0:	f00a fcd9 	bl	10055e96 <acl_list_insert_head>
1004b4e4:	7a28      	ldrb	r0, [r5, #8]
1004b4e6:	0600      	lsls	r0, r0, #24
1004b4e8:	d52d      	bpl.n	1004b546 <Gatt_Process_Q+0x18e>
1004b4ea:	4630      	mov	r0, r6
1004b4ec:	f00a fcfc 	bl	10055ee8 <acl_list_is_empty>
1004b4f0:	2801      	cmp	r0, #1
1004b4f2:	d128      	bne.n	1004b546 <Gatt_Process_Q+0x18e>
1004b4f4:	2000      	movs	r0, #0
1004b4f6:	f005 f8ed 	bl	100506d4 <PM_Get_Available_Buffer>
1004b4fa:	8ba9      	ldrh	r1, [r5, #28]
1004b4fc:	3123      	adds	r1, #35	; 0x23
1004b4fe:	0949      	lsrs	r1, r1, #5
1004b500:	1c49      	adds	r1, r1, #1
1004b502:	b2c9      	uxtb	r1, r1
1004b504:	f7f4 feba 	bl	1004027c <__aeabi_uidivmod>
1004b508:	2800      	cmp	r0, #0
1004b50a:	d01c      	beq.n	1004b546 <Gatt_Process_Q+0x18e>
1004b50c:	4d0f      	ldr	r5, [pc, #60]	; (1004b54c <Gatt_Process_Q+0x194>)
1004b50e:	4604      	mov	r4, r0
1004b510:	6828      	ldr	r0, [r5, #0]
1004b512:	2301      	movs	r3, #1
1004b514:	02d9      	lsls	r1, r3, #11
1004b516:	3008      	adds	r0, #8
1004b518:	1840      	adds	r0, r0, r1
1004b51a:	2642      	movs	r6, #66	; 0x42
1004b51c:	2238      	movs	r2, #56	; 0x38
1004b51e:	6940      	ldr	r0, [r0, #20]
1004b520:	4631      	mov	r1, r6
1004b522:	f009 fe63 	bl	100551ec <aci_event_fifo_push_header>
1004b526:	0001      	movs	r1, r0
1004b528:	d00d      	beq.n	1004b546 <Gatt_Process_Q+0x18e>
1004b52a:	2200      	movs	r2, #0
1004b52c:	808a      	strh	r2, [r1, #4]
1004b52e:	80cc      	strh	r4, [r1, #6]
1004b530:	4630      	mov	r0, r6
1004b532:	f009 fe47 	bl	100551c4 <aci_event_fifo_push>
1004b536:	213b      	movs	r1, #59	; 0x3b
1004b538:	682a      	ldr	r2, [r5, #0]
1004b53a:	0149      	lsls	r1, r1, #5
1004b53c:	1851      	adds	r1, r2, r1
1004b53e:	7d0a      	ldrb	r2, [r1, #20]
1004b540:	2080      	movs	r0, #128	; 0x80
1004b542:	4382      	bics	r2, r0
1004b544:	750a      	strb	r2, [r1, #20]
1004b546:	b00b      	add	sp, #44	; 0x2c
1004b548:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b54a:	0000      	.short	0x0000
1004b54c:	2000098c 	.word	0x2000098c
1004b550:	0000072c 	.word	0x0000072c

1004b554 <Gatt_Reset_To_Closed_State>:
1004b554:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b556:	4604      	mov	r4, r0
1004b558:	483b      	ldr	r0, [pc, #236]	; (1004b648 <Gatt_Reset_To_Closed_State+0xf4>)
1004b55a:	493c      	ldr	r1, [pc, #240]	; (1004b64c <Gatt_Reset_To_Closed_State+0xf8>)
1004b55c:	6800      	ldr	r0, [r0, #0]
1004b55e:	b085      	sub	sp, #20
1004b560:	1845      	adds	r5, r0, r1
1004b562:	8a21      	ldrh	r1, [r4, #16]
1004b564:	0489      	lsls	r1, r1, #18
1004b566:	d519      	bpl.n	1004b59c <Gatt_Reset_To_Closed_State+0x48>
1004b568:	2102      	movs	r1, #2
1004b56a:	9104      	str	r1, [sp, #16]
1004b56c:	2137      	movs	r1, #55	; 0x37
1004b56e:	0149      	lsls	r1, r1, #5
1004b570:	1841      	adds	r1, r0, r1
1004b572:	7b89      	ldrb	r1, [r1, #14]
1004b574:	2641      	movs	r6, #65	; 0x41
1004b576:	8827      	ldrh	r7, [r4, #0]
1004b578:	2301      	movs	r3, #1
1004b57a:	07c9      	lsls	r1, r1, #31
1004b57c:	d00e      	beq.n	1004b59c <Gatt_Reset_To_Closed_State+0x48>
1004b57e:	02d9      	lsls	r1, r3, #11
1004b580:	3008      	adds	r0, #8
1004b582:	1840      	adds	r0, r0, r1
1004b584:	2231      	movs	r2, #49	; 0x31
1004b586:	6940      	ldr	r0, [r0, #20]
1004b588:	2102      	movs	r1, #2
1004b58a:	f009 fe2f 	bl	100551ec <aci_event_fifo_push_header>
1004b58e:	0001      	movs	r1, r0
1004b590:	d004      	beq.n	1004b59c <Gatt_Reset_To_Closed_State+0x48>
1004b592:	808f      	strh	r7, [r1, #4]
1004b594:	718e      	strb	r6, [r1, #6]
1004b596:	9804      	ldr	r0, [sp, #16]
1004b598:	f009 fe14 	bl	100551c4 <aci_event_fifo_push>
1004b59c:	4629      	mov	r1, r5
1004b59e:	8820      	ldrh	r0, [r4, #0]
1004b5a0:	2201      	movs	r2, #1
1004b5a2:	3118      	adds	r1, #24
1004b5a4:	f7ff feee 	bl	1004b384 <Gatt_Flush_Pending_AclPacket_Lists>
1004b5a8:	4629      	mov	r1, r5
1004b5aa:	8820      	ldrh	r0, [r4, #0]
1004b5ac:	2201      	movs	r2, #1
1004b5ae:	3130      	adds	r1, #48	; 0x30
1004b5b0:	f7ff fee8 	bl	1004b384 <Gatt_Flush_Pending_AclPacket_Lists>
1004b5b4:	4629      	mov	r1, r5
1004b5b6:	8820      	ldrh	r0, [r4, #0]
1004b5b8:	2201      	movs	r2, #1
1004b5ba:	3124      	adds	r1, #36	; 0x24
1004b5bc:	f7ff fee2 	bl	1004b384 <Gatt_Flush_Pending_AclPacket_Lists>
1004b5c0:	4629      	mov	r1, r5
1004b5c2:	8820      	ldrh	r0, [r4, #0]
1004b5c4:	2200      	movs	r2, #0
1004b5c6:	313c      	adds	r1, #60	; 0x3c
1004b5c8:	f7ff fedc 	bl	1004b384 <Gatt_Flush_Pending_AclPacket_Lists>
1004b5cc:	8820      	ldrh	r0, [r4, #0]
1004b5ce:	0500      	lsls	r0, r0, #20
1004b5d0:	0d00      	lsrs	r0, r0, #20
1004b5d2:	f7ff febb 	bl	1004b34c <Gatt_Find_Timed_Out_Connection_Index>
1004b5d6:	0085      	lsls	r5, r0, #2
1004b5d8:	4629      	mov	r1, r5
1004b5da:	3111      	adds	r1, #17
1004b5dc:	4668      	mov	r0, sp
1004b5de:	7301      	strb	r1, [r0, #12]
1004b5e0:	f001 fc6e 	bl	1004cec0 <Timer_StopOneShot>
1004b5e4:	4629      	mov	r1, r5
1004b5e6:	3112      	adds	r1, #18
1004b5e8:	4668      	mov	r0, sp
1004b5ea:	7301      	strb	r1, [r0, #12]
1004b5ec:	f001 fc68 	bl	1004cec0 <Timer_StopOneShot>
1004b5f0:	4629      	mov	r1, r5
1004b5f2:	3113      	adds	r1, #19
1004b5f4:	4668      	mov	r0, sp
1004b5f6:	7301      	strb	r1, [r0, #12]
1004b5f8:	f001 fc62 	bl	1004cec0 <Timer_StopOneShot>
1004b5fc:	4668      	mov	r0, sp
1004b5fe:	3514      	adds	r5, #20
1004b600:	7305      	strb	r5, [r0, #12]
1004b602:	f001 fc5d 	bl	1004cec0 <Timer_StopOneShot>
1004b606:	8820      	ldrh	r0, [r4, #0]
1004b608:	f000 fa3c 	bl	1004ba84 <Gatt_Store_Server_Database_And_Reset_CCCD>
1004b60c:	8820      	ldrh	r0, [r4, #0]
1004b60e:	0501      	lsls	r1, r0, #20
1004b610:	480d      	ldr	r0, [pc, #52]	; (1004b648 <Gatt_Reset_To_Closed_State+0xf4>)
1004b612:	0d09      	lsrs	r1, r1, #20
1004b614:	6802      	ldr	r2, [r0, #0]
1004b616:	2025      	movs	r0, #37	; 0x25
1004b618:	0180      	lsls	r0, r0, #6
1004b61a:	1810      	adds	r0, r2, r0
1004b61c:	8b02      	ldrh	r2, [r0, #24]
1004b61e:	4291      	cmp	r1, r2
1004b620:	d101      	bne.n	1004b626 <Gatt_Reset_To_Closed_State+0xd2>
1004b622:	2100      	movs	r1, #0
1004b624:	8301      	strh	r1, [r0, #24]
1004b626:	69e0      	ldr	r0, [r4, #28]
1004b628:	2800      	cmp	r0, #0
1004b62a:	d002      	beq.n	1004b632 <Gatt_Reset_To_Closed_State+0xde>
1004b62c:	2101      	movs	r1, #1
1004b62e:	f005 f8d1 	bl	100507d4 <PM_Release_Acl_Pckt>
1004b632:	2220      	movs	r2, #32
1004b634:	2100      	movs	r1, #0
1004b636:	4620      	mov	r0, r4
1004b638:	68a5      	ldr	r5, [r4, #8]
1004b63a:	f7f7 fdc4 	bl	100431c6 <Osal_MemSet>
1004b63e:	2017      	movs	r0, #23
1004b640:	60a5      	str	r5, [r4, #8]
1004b642:	8060      	strh	r0, [r4, #2]
1004b644:	b005      	add	sp, #20
1004b646:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b648:	2000098c 	.word	0x2000098c
1004b64c:	0000072c 	.word	0x0000072c

1004b650 <Gatt_Server_Db_Check>:
1004b650:	b510      	push	{r4, lr}
1004b652:	480b      	ldr	r0, [pc, #44]	; (1004b680 <Gatt_Server_Db_Check+0x30>)
1004b654:	490b      	ldr	r1, [pc, #44]	; (1004b684 <Gatt_Server_Db_Check+0x34>)
1004b656:	6800      	ldr	r0, [r0, #0]
1004b658:	1844      	adds	r4, r0, r1
1004b65a:	3440      	adds	r4, #64	; 0x40
1004b65c:	7a20      	ldrb	r0, [r4, #8]
1004b65e:	07c0      	lsls	r0, r0, #31
1004b660:	d009      	beq.n	1004b676 <Gatt_Server_Db_Check+0x26>
1004b662:	2000      	movs	r0, #0
1004b664:	f005 f836 	bl	100506d4 <PM_Get_Available_Buffer>
1004b668:	7a21      	ldrb	r1, [r4, #8]
1004b66a:	0789      	lsls	r1, r1, #30
1004b66c:	d501      	bpl.n	1004b672 <Gatt_Server_Db_Check+0x22>
1004b66e:	2800      	cmp	r0, #0
1004b670:	d003      	beq.n	1004b67a <Gatt_Server_Db_Check+0x2a>
1004b672:	2000      	movs	r0, #0
1004b674:	bd10      	pop	{r4, pc}
1004b676:	2047      	movs	r0, #71	; 0x47
1004b678:	bd10      	pop	{r4, pc}
1004b67a:	2064      	movs	r0, #100	; 0x64
1004b67c:	bd10      	pop	{r4, pc}
1004b67e:	0000      	.short	0x0000
1004b680:	2000098c 	.word	0x2000098c
1004b684:	0000072c 	.word	0x0000072c

1004b688 <Gatt_Server_Init>:
1004b688:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b68a:	a05f      	add	r0, pc, #380	; (adr r0, 1004b808 <Gatt_Server_Init+0x180>)
1004b68c:	b099      	sub	sp, #100	; 0x64
1004b68e:	6800      	ldr	r0, [r0, #0]
1004b690:	495e      	ldr	r1, [pc, #376]	; (1004b80c <Gatt_Server_Init+0x184>)
1004b692:	9015      	str	r0, [sp, #84]	; 0x54
1004b694:	4a5e      	ldr	r2, [pc, #376]	; (1004b810 <Gatt_Server_Init+0x188>)
1004b696:	6808      	ldr	r0, [r1, #0]
1004b698:	1884      	adds	r4, r0, r2
1004b69a:	2209      	movs	r2, #9
1004b69c:	0212      	lsls	r2, r2, #8
1004b69e:	1882      	adds	r2, r0, r2
1004b6a0:	6b52      	ldr	r2, [r2, #52]	; 0x34
1004b6a2:	4625      	mov	r5, r4
1004b6a4:	3540      	adds	r5, #64	; 0x40
1004b6a6:	9214      	str	r2, [sp, #80]	; 0x50
1004b6a8:	7a2a      	ldrb	r2, [r5, #8]
1004b6aa:	07d2      	lsls	r2, r2, #31
1004b6ac:	d002      	beq.n	1004b6b4 <Gatt_Server_Init+0x2c>
1004b6ae:	2062      	movs	r0, #98	; 0x62
1004b6b0:	b019      	add	sp, #100	; 0x64
1004b6b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b6b4:	8baa      	ldrh	r2, [r5, #28]
1004b6b6:	2301      	movs	r3, #1
1004b6b8:	025b      	lsls	r3, r3, #9
1004b6ba:	429a      	cmp	r2, r3
1004b6bc:	d901      	bls.n	1004b6c2 <Gatt_Server_Init+0x3a>
1004b6be:	83ab      	strh	r3, [r5, #28]
1004b6c0:	e003      	b.n	1004b6ca <Gatt_Server_Init+0x42>
1004b6c2:	2a17      	cmp	r2, #23
1004b6c4:	d201      	bcs.n	1004b6ca <Gatt_Server_Init+0x42>
1004b6c6:	2217      	movs	r2, #23
1004b6c8:	83aa      	strh	r2, [r5, #28]
1004b6ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
1004b6cc:	30a0      	adds	r0, #160	; 0xa0
1004b6ce:	9213      	str	r2, [sp, #76]	; 0x4c
1004b6d0:	7b06      	ldrb	r6, [r0, #12]
1004b6d2:	e00d      	b.n	1004b6f0 <Gatt_Server_Init+0x68>
1004b6d4:	1e76      	subs	r6, r6, #1
1004b6d6:	b2f6      	uxtb	r6, r6
1004b6d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004b6da:	0171      	lsls	r1, r6, #5
1004b6dc:	180f      	adds	r7, r1, r0
1004b6de:	68b8      	ldr	r0, [r7, #8]
1004b6e0:	900f      	str	r0, [sp, #60]	; 0x3c
1004b6e2:	4638      	mov	r0, r7
1004b6e4:	2220      	movs	r2, #32
1004b6e6:	2100      	movs	r1, #0
1004b6e8:	f7f7 fd6d 	bl	100431c6 <Osal_MemSet>
1004b6ec:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004b6ee:	60b8      	str	r0, [r7, #8]
1004b6f0:	2e00      	cmp	r6, #0
1004b6f2:	d1ef      	bne.n	1004b6d4 <Gatt_Server_Init+0x4c>
1004b6f4:	4620      	mov	r0, r4
1004b6f6:	3008      	adds	r0, #8
1004b6f8:	60e0      	str	r0, [r4, #12]
1004b6fa:	6064      	str	r4, [r4, #4]
1004b6fc:	60a0      	str	r0, [r4, #8]
1004b6fe:	6024      	str	r4, [r4, #0]
1004b700:	3008      	adds	r0, #8
1004b702:	9013      	str	r0, [sp, #76]	; 0x4c
1004b704:	6160      	str	r0, [r4, #20]
1004b706:	6120      	str	r0, [r4, #16]
1004b708:	22ff      	movs	r2, #255	; 0xff
1004b70a:	2100      	movs	r1, #0
1004b70c:	3008      	adds	r0, #8
1004b70e:	f00a fbba 	bl	10055e86 <acl_list_init>
1004b712:	4620      	mov	r0, r4
1004b714:	22ff      	movs	r2, #255	; 0xff
1004b716:	2100      	movs	r1, #0
1004b718:	3024      	adds	r0, #36	; 0x24
1004b71a:	f00a fbb4 	bl	10055e86 <acl_list_init>
1004b71e:	4620      	mov	r0, r4
1004b720:	7faa      	ldrb	r2, [r5, #30]
1004b722:	2100      	movs	r1, #0
1004b724:	3030      	adds	r0, #48	; 0x30
1004b726:	f00a fbae 	bl	10055e86 <acl_list_init>
1004b72a:	4620      	mov	r0, r4
1004b72c:	22ff      	movs	r2, #255	; 0xff
1004b72e:	2100      	movs	r1, #0
1004b730:	303c      	adds	r0, #60	; 0x3c
1004b732:	f00a fba8 	bl	10055e86 <acl_list_init>
1004b736:	2200      	movs	r2, #0
1004b738:	722a      	strb	r2, [r5, #8]
1004b73a:	4610      	mov	r0, r2
1004b73c:	2117      	movs	r1, #23
1004b73e:	4b33      	ldr	r3, [pc, #204]	; (1004b80c <Gatt_Server_Init+0x184>)
1004b740:	e005      	b.n	1004b74e <Gatt_Server_Init+0xc6>
1004b742:	9e14      	ldr	r6, [sp, #80]	; 0x50
1004b744:	0147      	lsls	r7, r0, #5
1004b746:	19be      	adds	r6, r7, r6
1004b748:	1c40      	adds	r0, r0, #1
1004b74a:	8071      	strh	r1, [r6, #2]
1004b74c:	b2c0      	uxtb	r0, r0
1004b74e:	681e      	ldr	r6, [r3, #0]
1004b750:	36a0      	adds	r6, #160	; 0xa0
1004b752:	7b36      	ldrb	r6, [r6, #12]
1004b754:	4286      	cmp	r6, r0
1004b756:	d8f4      	bhi.n	1004b742 <Gatt_Server_Init+0xba>
1004b758:	2000      	movs	r0, #0
1004b75a:	8328      	strh	r0, [r5, #24]
1004b75c:	8c2f      	ldrh	r7, [r5, #32]
1004b75e:	8c68      	ldrh	r0, [r5, #34]	; 0x22
1004b760:	2600      	movs	r6, #0
1004b762:	9014      	str	r0, [sp, #80]	; 0x50
1004b764:	e008      	b.n	1004b778 <Gatt_Server_Init+0xf0>
1004b766:	2028      	movs	r0, #40	; 0x28
1004b768:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
1004b76a:	4370      	muls	r0, r6
1004b76c:	1809      	adds	r1, r1, r0
1004b76e:	4620      	mov	r0, r4
1004b770:	f005 fb96 	bl	10050ea0 <List_Circular_Insert_Tail>
1004b774:	1c76      	adds	r6, r6, #1
1004b776:	b2b6      	uxth	r6, r6
1004b778:	42be      	cmp	r6, r7
1004b77a:	d3f4      	bcc.n	1004b766 <Gatt_Server_Init+0xde>
1004b77c:	2600      	movs	r6, #0
1004b77e:	e008      	b.n	1004b792 <Gatt_Server_Init+0x10a>
1004b780:	2030      	movs	r0, #48	; 0x30
1004b782:	6d21      	ldr	r1, [r4, #80]	; 0x50
1004b784:	4370      	muls	r0, r6
1004b786:	1809      	adds	r1, r1, r0
1004b788:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004b78a:	f005 fb89 	bl	10050ea0 <List_Circular_Insert_Tail>
1004b78e:	1c76      	adds	r6, r6, #1
1004b790:	b2b6      	uxth	r6, r6
1004b792:	9814      	ldr	r0, [sp, #80]	; 0x50
1004b794:	4286      	cmp	r6, r0
1004b796:	d3f3      	bcc.n	1004b780 <Gatt_Server_Init+0xf8>
1004b798:	2001      	movs	r0, #1
1004b79a:	f7ff f965 	bl	1004aa68 <GATT_Server_Set_Flag>
1004b79e:	2401      	movs	r4, #1
1004b7a0:	4668      	mov	r0, sp
1004b7a2:	7004      	strb	r4, [r0, #0]
1004b7a4:	491b      	ldr	r1, [pc, #108]	; (1004b814 <Gatt_Server_Init+0x18c>)
1004b7a6:	8041      	strh	r1, [r0, #2]
1004b7a8:	4623      	mov	r3, r4
1004b7aa:	2204      	movs	r2, #4
1004b7ac:	4669      	mov	r1, sp
1004b7ae:	a80c      	add	r0, sp, #48	; 0x30
1004b7b0:	f7ff fc6e 	bl	1004b090 <Gatt_Add_Service>
1004b7b4:	2800      	cmp	r0, #0
1004b7b6:	d122      	bne.n	1004b7fe <Gatt_Server_Init+0x176>
1004b7b8:	4668      	mov	r0, sp
1004b7ba:	8e01      	ldrh	r1, [r0, #48]	; 0x30
1004b7bc:	8281      	strh	r1, [r0, #20]
1004b7be:	4916      	ldr	r1, [pc, #88]	; (1004b818 <Gatt_Server_Init+0x190>)
1004b7c0:	8301      	strh	r1, [r0, #24]
1004b7c2:	2604      	movs	r6, #4
1004b7c4:	8506      	strh	r6, [r0, #40]	; 0x28
1004b7c6:	7584      	strb	r4, [r0, #22]
1004b7c8:	2120      	movs	r1, #32
1004b7ca:	a808      	add	r0, sp, #32
1004b7cc:	7281      	strb	r1, [r0, #10]
1004b7ce:	2400      	movs	r4, #0
1004b7d0:	72c4      	strb	r4, [r0, #11]
1004b7d2:	7304      	strb	r4, [r0, #12]
1004b7d4:	2107      	movs	r1, #7
1004b7d6:	7341      	strb	r1, [r0, #13]
1004b7d8:	7384      	strb	r4, [r0, #14]
1004b7da:	a905      	add	r1, sp, #20
1004b7dc:	a80d      	add	r0, sp, #52	; 0x34
1004b7de:	f7ff fa0d 	bl	1004abfc <Gatt_Add_Characteristic>
1004b7e2:	2800      	cmp	r0, #0
1004b7e4:	d10b      	bne.n	1004b7fe <Gatt_Server_Init+0x176>
1004b7e6:	4668      	mov	r0, sp
1004b7e8:	8704      	strh	r4, [r0, #56]	; 0x38
1004b7ea:	8746      	strh	r6, [r0, #58]	; 0x3a
1004b7ec:	8e81      	ldrh	r1, [r0, #52]	; 0x34
1004b7ee:	ab15      	add	r3, sp, #84	; 0x54
1004b7f0:	aa0e      	add	r2, sp, #56	; 0x38
1004b7f2:	8e00      	ldrh	r0, [r0, #48]	; 0x30
1004b7f4:	f000 f9fe 	bl	1004bbf4 <Gatt_Update_Charac_Value>
1004b7f8:	2800      	cmp	r0, #0
1004b7fa:	d100      	bne.n	1004b7fe <Gatt_Server_Init+0x176>
1004b7fc:	e758      	b.n	1004b6b0 <Gatt_Server_Init+0x28>
1004b7fe:	2000      	movs	r0, #0
1004b800:	7228      	strb	r0, [r5, #8]
1004b802:	2047      	movs	r0, #71	; 0x47
1004b804:	e754      	b.n	1004b6b0 <Gatt_Server_Init+0x28>
1004b806:	0000      	.short	0x0000
1004b808:	ffff0000 	.word	0xffff0000
1004b80c:	2000098c 	.word	0x2000098c
1004b810:	0000072c 	.word	0x0000072c
1004b814:	00001801 	.word	0x00001801
1004b818:	00002a05 	.word	0x00002a05

1004b81c <Gatt_Server_L2C_Handler>:
1004b81c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004b81e:	4604      	mov	r4, r0
1004b820:	4883      	ldr	r0, [pc, #524]	; (1004ba30 <Gatt_Server_L2C_Handler+0x214>)
1004b822:	460e      	mov	r6, r1
1004b824:	6800      	ldr	r0, [r0, #0]
1004b826:	4983      	ldr	r1, [pc, #524]	; (1004ba34 <Gatt_Server_L2C_Handler+0x218>)
1004b828:	1847      	adds	r7, r0, r1
1004b82a:	2048      	movs	r0, #72	; 0x48
1004b82c:	5dc0      	ldrb	r0, [r0, r7]
1004b82e:	07c0      	lsls	r0, r0, #31
1004b830:	d06f      	beq.n	1004b912 <Gatt_Server_L2C_Handler+0xf6>
1004b832:	88b0      	ldrh	r0, [r6, #4]
1004b834:	f7fe fec4 	bl	1004a5c0 <Find_Gatt_Client>
1004b838:	4605      	mov	r5, r0
1004b83a:	2c01      	cmp	r4, #1
1004b83c:	d002      	beq.n	1004b844 <Gatt_Server_L2C_Handler+0x28>
1004b83e:	2c00      	cmp	r4, #0
1004b840:	d068      	beq.n	1004b914 <Gatt_Server_L2C_Handler+0xf8>
1004b842:	e0f3      	b.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b844:	2d00      	cmp	r5, #0
1004b846:	d004      	beq.n	1004b852 <Gatt_Server_L2C_Handler+0x36>
1004b848:	6928      	ldr	r0, [r5, #16]
1004b84a:	0741      	lsls	r1, r0, #29
1004b84c:	d503      	bpl.n	1004b856 <Gatt_Server_L2C_Handler+0x3a>
1004b84e:	2045      	movs	r0, #69	; 0x45
1004b850:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004b852:	2101      	movs	r1, #1
1004b854:	e0c7      	b.n	1004b9e6 <Gatt_Server_L2C_Handler+0x1ca>
1004b856:	68b2      	ldr	r2, [r6, #8]
1004b858:	88f1      	ldrh	r1, [r6, #6]
1004b85a:	7b14      	ldrb	r4, [r2, #12]
1004b85c:	2900      	cmp	r1, #0
1004b85e:	d0f0      	beq.n	1004b842 <Gatt_Server_L2C_Handler+0x26>
1004b860:	0662      	lsls	r2, r4, #25
1004b862:	d50a      	bpl.n	1004b87a <Gatt_Server_L2C_Handler+0x5e>
1004b864:	8868      	ldrh	r0, [r5, #2]
1004b866:	4288      	cmp	r0, r1
1004b868:	d3f3      	bcc.n	1004b852 <Gatt_Server_L2C_Handler+0x36>
1004b86a:	2cd2      	cmp	r4, #210	; 0xd2
1004b86c:	d001      	beq.n	1004b872 <Gatt_Server_L2C_Handler+0x56>
1004b86e:	2c52      	cmp	r4, #82	; 0x52
1004b870:	d1ef      	bne.n	1004b852 <Gatt_Server_L2C_Handler+0x36>
1004b872:	4638      	mov	r0, r7
1004b874:	4631      	mov	r1, r6
1004b876:	3018      	adds	r0, #24
1004b878:	e048      	b.n	1004b90c <Gatt_Server_L2C_Handler+0xf0>
1004b87a:	06a1      	lsls	r1, r4, #26
1004b87c:	0e89      	lsrs	r1, r1, #26
1004b87e:	291e      	cmp	r1, #30
1004b880:	d849      	bhi.n	1004b916 <Gatt_Server_L2C_Handler+0xfa>
1004b882:	2c1e      	cmp	r4, #30
1004b884:	d120      	bne.n	1004b8c8 <Gatt_Server_L2C_Handler+0xac>
1004b886:	0701      	lsls	r1, r0, #28
1004b888:	d51e      	bpl.n	1004b8c8 <Gatt_Server_L2C_Handler+0xac>
1004b88a:	2108      	movs	r1, #8
1004b88c:	4388      	bics	r0, r1
1004b88e:	6128      	str	r0, [r5, #16]
1004b890:	8829      	ldrh	r1, [r5, #0]
1004b892:	2001      	movs	r0, #1
1004b894:	f005 faec 	bl	10050e70 <Stop_Gatt_Timer>
1004b898:	2101      	movs	r1, #1
1004b89a:	4630      	mov	r0, r6
1004b89c:	f004 ff9a 	bl	100507d4 <PM_Release_Acl_Pckt>
1004b8a0:	4863      	ldr	r0, [pc, #396]	; (1004ba30 <Gatt_Server_L2C_Handler+0x214>)
1004b8a2:	2301      	movs	r3, #1
1004b8a4:	6800      	ldr	r0, [r0, #0]
1004b8a6:	02d9      	lsls	r1, r3, #11
1004b8a8:	3008      	adds	r0, #8
1004b8aa:	1840      	adds	r0, r0, r1
1004b8ac:	2442      	movs	r4, #66	; 0x42
1004b8ae:	882d      	ldrh	r5, [r5, #0]
1004b8b0:	2239      	movs	r2, #57	; 0x39
1004b8b2:	6940      	ldr	r0, [r0, #20]
1004b8b4:	4621      	mov	r1, r4
1004b8b6:	f009 fc99 	bl	100551ec <aci_event_fifo_push_header>
1004b8ba:	0001      	movs	r1, r0
1004b8bc:	d003      	beq.n	1004b8c6 <Gatt_Server_L2C_Handler+0xaa>
1004b8be:	808d      	strh	r5, [r1, #4]
1004b8c0:	4620      	mov	r0, r4
1004b8c2:	f009 fc7f 	bl	100551c4 <aci_event_fifo_push>
1004b8c6:	e0b1      	b.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b8c8:	07e1      	lsls	r1, r4, #31
1004b8ca:	d00b      	beq.n	1004b8e4 <Gatt_Server_L2C_Handler+0xc8>
1004b8cc:	2c1d      	cmp	r4, #29
1004b8ce:	d01a      	beq.n	1004b906 <Gatt_Server_L2C_Handler+0xea>
1004b8d0:	2c1b      	cmp	r4, #27
1004b8d2:	d018      	beq.n	1004b906 <Gatt_Server_L2C_Handler+0xea>
1004b8d4:	0541      	lsls	r1, r0, #21
1004b8d6:	d433      	bmi.n	1004b940 <Gatt_Server_L2C_Handler+0x124>
1004b8d8:	2101      	movs	r1, #1
1004b8da:	0289      	lsls	r1, r1, #10
1004b8dc:	4308      	orrs	r0, r1
1004b8de:	61ee      	str	r6, [r5, #28]
1004b8e0:	6128      	str	r0, [r5, #16]
1004b8e2:	e0a3      	b.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b8e4:	06c0      	lsls	r0, r0, #27
1004b8e6:	d506      	bpl.n	1004b8f6 <Gatt_Server_L2C_Handler+0xda>
1004b8e8:	462b      	mov	r3, r5
1004b8ea:	2202      	movs	r2, #2
1004b8ec:	2103      	movs	r1, #3
1004b8ee:	2042      	movs	r0, #66	; 0x42
1004b8f0:	f000 fe7e 	bl	1004c5f0 <aci_hal_fw_error_event_push>
1004b8f4:	e7ad      	b.n	1004b852 <Gatt_Server_L2C_Handler+0x36>
1004b8f6:	8829      	ldrh	r1, [r5, #0]
1004b8f8:	2000      	movs	r0, #0
1004b8fa:	f005 faa7 	bl	10050e4c <Start_Gatt_Timer>
1004b8fe:	6929      	ldr	r1, [r5, #16]
1004b900:	2010      	movs	r0, #16
1004b902:	4301      	orrs	r1, r0
1004b904:	6129      	str	r1, [r5, #16]
1004b906:	4638      	mov	r0, r7
1004b908:	4631      	mov	r1, r6
1004b90a:	3024      	adds	r0, #36	; 0x24
1004b90c:	f00a fad6 	bl	10055ebc <acl_list_insert_tail>
1004b910:	e08c      	b.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b912:	e015      	b.n	1004b940 <Gatt_Server_L2C_Handler+0x124>
1004b914:	e016      	b.n	1004b944 <Gatt_Server_L2C_Handler+0x128>
1004b916:	8829      	ldrh	r1, [r5, #0]
1004b918:	2220      	movs	r2, #32
1004b91a:	2000      	movs	r0, #0
1004b91c:	f004 fefe 	bl	1005071c <PM_Get_Pckt>
1004b920:	0005      	movs	r5, r0
1004b922:	d00d      	beq.n	1004b940 <Gatt_Server_L2C_Handler+0x124>
1004b924:	2101      	movs	r1, #1
1004b926:	4630      	mov	r0, r6
1004b928:	f004 ff54 	bl	100507d4 <PM_Release_Acl_Pckt>
1004b92c:	462b      	mov	r3, r5
1004b92e:	2200      	movs	r2, #0
1004b930:	4621      	mov	r1, r4
1004b932:	2006      	movs	r0, #6
1004b934:	f00a fe5e 	bl	100565f4 <ATT_fill_error_resp>
1004b938:	4628      	mov	r0, r5
1004b93a:	f7ff f87f 	bl	1004aa3c <GATT_Send_Packet>
1004b93e:	e075      	b.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b940:	2041      	movs	r0, #65	; 0x41
1004b942:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004b944:	68b0      	ldr	r0, [r6, #8]
1004b946:	7b04      	ldrb	r4, [r0, #12]
1004b948:	2c1d      	cmp	r4, #29
1004b94a:	d03c      	beq.n	1004b9c6 <Gatt_Server_L2C_Handler+0x1aa>
1004b94c:	2c1b      	cmp	r4, #27
1004b94e:	d043      	beq.n	1004b9d8 <Gatt_Server_L2C_Handler+0x1bc>
1004b950:	2100      	movs	r1, #0
1004b952:	4630      	mov	r0, r6
1004b954:	f004 ff3e 	bl	100507d4 <PM_Release_Acl_Pckt>
1004b958:	2d00      	cmp	r5, #0
1004b95a:	d067      	beq.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b95c:	2c03      	cmp	r4, #3
1004b95e:	d046      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b960:	2c05      	cmp	r4, #5
1004b962:	d044      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b964:	2c07      	cmp	r4, #7
1004b966:	d042      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b968:	2c09      	cmp	r4, #9
1004b96a:	d040      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b96c:	2c0b      	cmp	r4, #11
1004b96e:	d03e      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b970:	2c0d      	cmp	r4, #13
1004b972:	d03c      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b974:	2c0f      	cmp	r4, #15
1004b976:	d03a      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b978:	2c11      	cmp	r4, #17
1004b97a:	d038      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b97c:	2c13      	cmp	r4, #19
1004b97e:	d036      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b980:	2c17      	cmp	r4, #23
1004b982:	d034      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b984:	2c19      	cmp	r4, #25
1004b986:	d032      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b988:	2c01      	cmp	r4, #1
1004b98a:	d030      	beq.n	1004b9ee <Gatt_Server_L2C_Handler+0x1d2>
1004b98c:	2c02      	cmp	r4, #2
1004b98e:	d035      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b990:	2c04      	cmp	r4, #4
1004b992:	d033      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b994:	2c06      	cmp	r4, #6
1004b996:	d031      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b998:	2c08      	cmp	r4, #8
1004b99a:	d02f      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b99c:	2c0a      	cmp	r4, #10
1004b99e:	d02d      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9a0:	2c0c      	cmp	r4, #12
1004b9a2:	d02b      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9a4:	2c0e      	cmp	r4, #14
1004b9a6:	d029      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9a8:	2c10      	cmp	r4, #16
1004b9aa:	d027      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9ac:	2c12      	cmp	r4, #18
1004b9ae:	d025      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9b0:	2c16      	cmp	r4, #22
1004b9b2:	d023      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9b4:	2c18      	cmp	r4, #24
1004b9b6:	d021      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9b8:	2c52      	cmp	r4, #82	; 0x52
1004b9ba:	d01f      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9bc:	2cd2      	cmp	r4, #210	; 0xd2
1004b9be:	d01d      	beq.n	1004b9fc <Gatt_Server_L2C_Handler+0x1e0>
1004b9c0:	2c1e      	cmp	r4, #30
1004b9c2:	d02f      	beq.n	1004ba24 <Gatt_Server_L2C_Handler+0x208>
1004b9c4:	e032      	b.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b9c6:	2d00      	cmp	r5, #0
1004b9c8:	d003      	beq.n	1004b9d2 <Gatt_Server_L2C_Handler+0x1b6>
1004b9ca:	8829      	ldrh	r1, [r5, #0]
1004b9cc:	2001      	movs	r0, #1
1004b9ce:	f005 fa3d 	bl	10050e4c <Start_Gatt_Timer>
1004b9d2:	4631      	mov	r1, r6
1004b9d4:	2002      	movs	r0, #2
1004b9d6:	e001      	b.n	1004b9dc <Gatt_Server_L2C_Handler+0x1c0>
1004b9d8:	4631      	mov	r1, r6
1004b9da:	2001      	movs	r0, #1
1004b9dc:	f000 fd52 	bl	1004c484 <Send_Notif_Or_Ind>
1004b9e0:	2800      	cmp	r0, #0
1004b9e2:	d023      	beq.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b9e4:	2100      	movs	r1, #0
1004b9e6:	4630      	mov	r0, r6
1004b9e8:	f004 fef4 	bl	100507d4 <PM_Release_Acl_Pckt>
1004b9ec:	e01e      	b.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004b9ee:	6929      	ldr	r1, [r5, #16]
1004b9f0:	2010      	movs	r0, #16
1004b9f2:	4381      	bics	r1, r0
1004b9f4:	6129      	str	r1, [r5, #16]
1004b9f6:	8829      	ldrh	r1, [r5, #0]
1004b9f8:	2000      	movs	r0, #0
1004b9fa:	e015      	b.n	1004ba28 <Gatt_Server_L2C_Handler+0x20c>
1004b9fc:	6928      	ldr	r0, [r5, #16]
1004b9fe:	2140      	movs	r1, #64	; 0x40
1004ba00:	4388      	bics	r0, r1
1004ba02:	6128      	str	r0, [r5, #16]
1004ba04:	0501      	lsls	r1, r0, #20
1004ba06:	d511      	bpl.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004ba08:	21ff      	movs	r1, #255	; 0xff
1004ba0a:	3101      	adds	r1, #1
1004ba0c:	4308      	orrs	r0, r1
1004ba0e:	6128      	str	r0, [r5, #16]
1004ba10:	8829      	ldrh	r1, [r5, #0]
1004ba12:	2002      	movs	r0, #2
1004ba14:	f005 fa1a 	bl	10050e4c <Start_Gatt_Timer>
1004ba18:	2001      	movs	r0, #1
1004ba1a:	6929      	ldr	r1, [r5, #16]
1004ba1c:	02c0      	lsls	r0, r0, #11
1004ba1e:	4381      	bics	r1, r0
1004ba20:	6129      	str	r1, [r5, #16]
1004ba22:	e003      	b.n	1004ba2c <Gatt_Server_L2C_Handler+0x210>
1004ba24:	8829      	ldrh	r1, [r5, #0]
1004ba26:	2003      	movs	r0, #3
1004ba28:	f005 fa22 	bl	10050e70 <Stop_Gatt_Timer>
1004ba2c:	2000      	movs	r0, #0
1004ba2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004ba30:	2000098c 	.word	0x2000098c
1004ba34:	0000072c 	.word	0x0000072c

1004ba38 <Gatt_Server_L2C_Handler_ISR>:
1004ba38:	b510      	push	{r4, lr}
1004ba3a:	4a10      	ldr	r2, [pc, #64]	; (1004ba7c <Gatt_Server_L2C_Handler_ISR+0x44>)
1004ba3c:	4b10      	ldr	r3, [pc, #64]	; (1004ba80 <Gatt_Server_L2C_Handler_ISR+0x48>)
1004ba3e:	6812      	ldr	r2, [r2, #0]
1004ba40:	18d2      	adds	r2, r2, r3
1004ba42:	3240      	adds	r2, #64	; 0x40
1004ba44:	7a12      	ldrb	r2, [r2, #8]
1004ba46:	07d2      	lsls	r2, r2, #31
1004ba48:	d006      	beq.n	1004ba58 <Gatt_Server_L2C_Handler_ISR+0x20>
1004ba4a:	2802      	cmp	r0, #2
1004ba4c:	d00a      	beq.n	1004ba64 <Gatt_Server_L2C_Handler_ISR+0x2c>
1004ba4e:	2805      	cmp	r0, #5
1004ba50:	d004      	beq.n	1004ba5c <Gatt_Server_L2C_Handler_ISR+0x24>
1004ba52:	280b      	cmp	r0, #11
1004ba54:	d110      	bne.n	1004ba78 <Gatt_Server_L2C_Handler_ISR+0x40>
1004ba56:	e001      	b.n	1004ba5c <Gatt_Server_L2C_Handler_ISR+0x24>
1004ba58:	2041      	movs	r0, #65	; 0x41
1004ba5a:	bd10      	pop	{r4, pc}
1004ba5c:	8848      	ldrh	r0, [r1, #2]
1004ba5e:	f7fe ffcb 	bl	1004a9f8 <GATT_Connection_Complete_Handler>
1004ba62:	e009      	b.n	1004ba78 <Gatt_Server_L2C_Handler_ISR+0x40>
1004ba64:	8848      	ldrh	r0, [r1, #2]
1004ba66:	f7fe fdab 	bl	1004a5c0 <Find_Gatt_Client>
1004ba6a:	2800      	cmp	r0, #0
1004ba6c:	d004      	beq.n	1004ba78 <Gatt_Server_L2C_Handler_ISR+0x40>
1004ba6e:	2201      	movs	r2, #1
1004ba70:	6901      	ldr	r1, [r0, #16]
1004ba72:	0592      	lsls	r2, r2, #22
1004ba74:	4311      	orrs	r1, r2
1004ba76:	6101      	str	r1, [r0, #16]
1004ba78:	2000      	movs	r0, #0
1004ba7a:	bd10      	pop	{r4, pc}
1004ba7c:	2000098c 	.word	0x2000098c
1004ba80:	0000072c 	.word	0x0000072c

1004ba84 <Gatt_Store_Server_Database_And_Reset_CCCD>:
1004ba84:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1004ba86:	b0ff      	sub	sp, #508	; 0x1fc
1004ba88:	b085      	sub	sp, #20
1004ba8a:	2047      	movs	r0, #71	; 0x47
1004ba8c:	9001      	str	r0, [sp, #4]
1004ba8e:	2000      	movs	r0, #0
1004ba90:	4669      	mov	r1, sp
1004ba92:	8008      	strh	r0, [r1, #0]
1004ba94:	4853      	ldr	r0, [pc, #332]	; (1004bbe4 <Gatt_Store_Server_Database_And_Reset_CCCD+0x160>)
1004ba96:	4954      	ldr	r1, [pc, #336]	; (1004bbe8 <Gatt_Store_Server_Database_And_Reset_CCCD+0x164>)
1004ba98:	6800      	ldr	r0, [r0, #0]
1004ba9a:	1847      	adds	r7, r0, r1
1004ba9c:	9884      	ldr	r0, [sp, #528]	; 0x210
1004ba9e:	f7fe fd8f 	bl	1004a5c0 <Find_Gatt_Client>
1004baa2:	9002      	str	r0, [sp, #8]
1004baa4:	2800      	cmp	r0, #0
1004baa6:	d074      	beq.n	1004bb92 <Gatt_Store_Server_Database_And_Reset_CCCD+0x10e>
1004baa8:	68b9      	ldr	r1, [r7, #8]
1004baaa:	3708      	adds	r7, #8
1004baac:	e04f      	b.n	1004bb4e <Gatt_Store_Server_Database_And_Reset_CCCD+0xca>
1004baae:	4668      	mov	r0, sp
1004bab0:	8800      	ldrh	r0, [r0, #0]
1004bab2:	460d      	mov	r5, r1
1004bab4:	ac04      	add	r4, sp, #16
1004bab6:	1820      	adds	r0, r4, r0
1004bab8:	466b      	mov	r3, sp
1004baba:	2202      	movs	r2, #2
1004babc:	3128      	adds	r1, #40	; 0x28
1004babe:	f000 fdc5 	bl	1004c64c <store_data>
1004bac2:	4668      	mov	r0, sp
1004bac4:	8800      	ldrh	r0, [r0, #0]
1004bac6:	4629      	mov	r1, r5
1004bac8:	1820      	adds	r0, r4, r0
1004baca:	466b      	mov	r3, sp
1004bacc:	2201      	movs	r2, #1
1004bace:	312c      	adds	r1, #44	; 0x2c
1004bad0:	f000 fdbc 	bl	1004c64c <store_data>
1004bad4:	462e      	mov	r6, r5
1004bad6:	3620      	adds	r6, #32
1004bad8:	7b30      	ldrb	r0, [r6, #12]
1004bada:	4669      	mov	r1, sp
1004badc:	2801      	cmp	r0, #1
1004bade:	8809      	ldrh	r1, [r1, #0]
1004bae0:	a804      	add	r0, sp, #16
1004bae2:	d009      	beq.n	1004baf8 <Gatt_Store_Server_Database_And_Reset_CCCD+0x74>
1004bae4:	1840      	adds	r0, r0, r1
1004bae6:	466b      	mov	r3, sp
1004bae8:	2210      	movs	r2, #16
1004baea:	4629      	mov	r1, r5
1004baec:	3108      	adds	r1, #8
1004baee:	f000 fdad 	bl	1004c64c <store_data>
1004baf2:	9001      	str	r0, [sp, #4]
1004baf4:	6a2c      	ldr	r4, [r5, #32]
1004baf6:	e027      	b.n	1004bb48 <Gatt_Store_Server_Database_And_Reset_CCCD+0xc4>
1004baf8:	1840      	adds	r0, r0, r1
1004bafa:	466b      	mov	r3, sp
1004bafc:	2202      	movs	r2, #2
1004bafe:	e7f4      	b.n	1004baea <Gatt_Store_Server_Database_And_Reset_CCCD+0x66>
1004bb00:	4669      	mov	r1, sp
1004bb02:	8809      	ldrh	r1, [r1, #0]
1004bb04:	a804      	add	r0, sp, #16
1004bb06:	1840      	adds	r0, r0, r1
1004bb08:	4621      	mov	r1, r4
1004bb0a:	466b      	mov	r3, sp
1004bb0c:	2202      	movs	r2, #2
1004bb0e:	311c      	adds	r1, #28
1004bb10:	f000 fd9c 	bl	1004c64c <store_data>
1004bb14:	4669      	mov	r1, sp
1004bb16:	8809      	ldrh	r1, [r1, #0]
1004bb18:	a804      	add	r0, sp, #16
1004bb1a:	1840      	adds	r0, r0, r1
1004bb1c:	4621      	mov	r1, r4
1004bb1e:	466b      	mov	r3, sp
1004bb20:	2201      	movs	r2, #1
1004bb22:	3123      	adds	r1, #35	; 0x23
1004bb24:	f000 fd92 	bl	1004c64c <store_data>
1004bb28:	2023      	movs	r0, #35	; 0x23
1004bb2a:	5d00      	ldrb	r0, [r0, r4]
1004bb2c:	4669      	mov	r1, sp
1004bb2e:	2801      	cmp	r0, #1
1004bb30:	8809      	ldrh	r1, [r1, #0]
1004bb32:	a804      	add	r0, sp, #16
1004bb34:	d030      	beq.n	1004bb98 <Gatt_Store_Server_Database_And_Reset_CCCD+0x114>
1004bb36:	1840      	adds	r0, r0, r1
1004bb38:	4621      	mov	r1, r4
1004bb3a:	466b      	mov	r3, sp
1004bb3c:	2210      	movs	r2, #16
1004bb3e:	3108      	adds	r1, #8
1004bb40:	f000 fd84 	bl	1004c64c <store_data>
1004bb44:	9001      	str	r0, [sp, #4]
1004bb46:	6824      	ldr	r4, [r4, #0]
1004bb48:	42b4      	cmp	r4, r6
1004bb4a:	d1d9      	bne.n	1004bb00 <Gatt_Store_Server_Database_And_Reset_CCCD+0x7c>
1004bb4c:	6829      	ldr	r1, [r5, #0]
1004bb4e:	42b9      	cmp	r1, r7
1004bb50:	d1ad      	bne.n	1004baae <Gatt_Store_Server_Database_And_Reset_CCCD+0x2a>
1004bb52:	9801      	ldr	r0, [sp, #4]
1004bb54:	2800      	cmp	r0, #0
1004bb56:	d11c      	bne.n	1004bb92 <Gatt_Store_Server_Database_And_Reset_CCCD+0x10e>
1004bb58:	4668      	mov	r0, sp
1004bb5a:	8800      	ldrh	r0, [r0, #0]
1004bb5c:	0781      	lsls	r1, r0, #30
1004bb5e:	d00a      	beq.n	1004bb76 <Gatt_Store_Server_Database_And_Reset_CCCD+0xf2>
1004bb60:	4a22      	ldr	r2, [pc, #136]	; (1004bbec <Gatt_Store_Server_Database_And_Reset_CCCD+0x168>)
1004bb62:	1d01      	adds	r1, r0, #4
1004bb64:	4011      	ands	r1, r2
1004bb66:	466a      	mov	r2, sp
1004bb68:	8011      	strh	r1, [r2, #0]
1004bb6a:	1a0a      	subs	r2, r1, r0
1004bb6c:	a904      	add	r1, sp, #16
1004bb6e:	1808      	adds	r0, r1, r0
1004bb70:	210b      	movs	r1, #11
1004bb72:	f7f7 fb28 	bl	100431c6 <Osal_MemSet>
1004bb76:	9802      	ldr	r0, [sp, #8]
1004bb78:	8800      	ldrh	r0, [r0, #0]
1004bb7a:	f008 fc21 	bl	100543c0 <SMP_check_is_device_bonded>
1004bb7e:	2800      	cmp	r0, #0
1004bb80:	d107      	bne.n	1004bb92 <Gatt_Store_Server_Database_And_Reset_CCCD+0x10e>
1004bb82:	9884      	ldr	r0, [sp, #528]	; 0x210
1004bb84:	4669      	mov	r1, sp
1004bb86:	0500      	lsls	r0, r0, #20
1004bb88:	0d00      	lsrs	r0, r0, #20
1004bb8a:	aa04      	add	r2, sp, #16
1004bb8c:	8809      	ldrh	r1, [r1, #0]
1004bb8e:	f006 fff3 	bl	10052b78 <SDB_flash_write_client_data>
1004bb92:	b07f      	add	sp, #508	; 0x1fc
1004bb94:	b006      	add	sp, #24
1004bb96:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004bb98:	1840      	adds	r0, r0, r1
1004bb9a:	4621      	mov	r1, r4
1004bb9c:	466b      	mov	r3, sp
1004bb9e:	2202      	movs	r2, #2
1004bba0:	3108      	adds	r1, #8
1004bba2:	f000 fd53 	bl	1004c64c <store_data>
1004bba6:	9001      	str	r0, [sp, #4]
1004bba8:	8920      	ldrh	r0, [r4, #8]
1004bbaa:	4911      	ldr	r1, [pc, #68]	; (1004bbf0 <Gatt_Store_Server_Database_And_Reset_CCCD+0x16c>)
1004bbac:	4288      	cmp	r0, r1
1004bbae:	d1ca      	bne.n	1004bb46 <Gatt_Store_Server_Database_And_Reset_CCCD+0xc2>
1004bbb0:	4620      	mov	r0, r4
1004bbb2:	9902      	ldr	r1, [sp, #8]
1004bbb4:	f7fe fee8 	bl	1004a988 <Find_Attr_Index>
1004bbb8:	0040      	lsls	r0, r0, #1
1004bbba:	69a1      	ldr	r1, [r4, #24]
1004bbbc:	9003      	str	r0, [sp, #12]
1004bbbe:	466a      	mov	r2, sp
1004bbc0:	1809      	adds	r1, r1, r0
1004bbc2:	8812      	ldrh	r2, [r2, #0]
1004bbc4:	a804      	add	r0, sp, #16
1004bbc6:	1880      	adds	r0, r0, r2
1004bbc8:	466b      	mov	r3, sp
1004bbca:	2202      	movs	r2, #2
1004bbcc:	f000 fd3e 	bl	1004c64c <store_data>
1004bbd0:	9001      	str	r0, [sp, #4]
1004bbd2:	69a1      	ldr	r1, [r4, #24]
1004bbd4:	9803      	ldr	r0, [sp, #12]
1004bbd6:	2202      	movs	r2, #2
1004bbd8:	1808      	adds	r0, r1, r0
1004bbda:	2100      	movs	r1, #0
1004bbdc:	f7f7 faf3 	bl	100431c6 <Osal_MemSet>
1004bbe0:	e7b1      	b.n	1004bb46 <Gatt_Store_Server_Database_And_Reset_CCCD+0xc2>
1004bbe2:	0000      	.short	0x0000
1004bbe4:	2000098c 	.word	0x2000098c
1004bbe8:	0000072c 	.word	0x0000072c
1004bbec:	0000fffc 	.word	0x0000fffc
1004bbf0:	00002902 	.word	0x00002902

1004bbf4 <Gatt_Update_Charac_Value>:
1004bbf4:	b5f0      	push	{r4, r5, r6, r7, lr}
1004bbf6:	4607      	mov	r7, r0
1004bbf8:	4817      	ldr	r0, [pc, #92]	; (1004bc58 <Gatt_Update_Charac_Value+0x64>)
1004bbfa:	460e      	mov	r6, r1
1004bbfc:	6800      	ldr	r0, [r0, #0]
1004bbfe:	213b      	movs	r1, #59	; 0x3b
1004bc00:	0149      	lsls	r1, r1, #5
1004bc02:	1840      	adds	r0, r0, r1
1004bc04:	7d00      	ldrb	r0, [r0, #20]
1004bc06:	b085      	sub	sp, #20
1004bc08:	461d      	mov	r5, r3
1004bc0a:	4614      	mov	r4, r2
1004bc0c:	07c0      	lsls	r0, r0, #31
1004bc0e:	d006      	beq.n	1004bc1e <Gatt_Update_Charac_Value+0x2a>
1004bc10:	a903      	add	r1, sp, #12
1004bc12:	4638      	mov	r0, r7
1004bc14:	f000 fa18 	bl	1004c048 <Gatt_search_service_handle>
1004bc18:	2800      	cmp	r0, #0
1004bc1a:	d10a      	bne.n	1004bc32 <Gatt_Update_Charac_Value+0x3e>
1004bc1c:	e002      	b.n	1004bc24 <Gatt_Update_Charac_Value+0x30>
1004bc1e:	2047      	movs	r0, #71	; 0x47
1004bc20:	b005      	add	sp, #20
1004bc22:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004bc24:	aa04      	add	r2, sp, #16
1004bc26:	4630      	mov	r0, r6
1004bc28:	9903      	ldr	r1, [sp, #12]
1004bc2a:	f000 f9fd 	bl	1004c028 <Gatt_search_handle>
1004bc2e:	2800      	cmp	r0, #0
1004bc30:	d001      	beq.n	1004bc36 <Gatt_Update_Charac_Value+0x42>
1004bc32:	2060      	movs	r0, #96	; 0x60
1004bc34:	e7f4      	b.n	1004bc20 <Gatt_Update_Charac_Value+0x2c>
1004bc36:	9904      	ldr	r1, [sp, #16]
1004bc38:	8822      	ldrh	r2, [r4, #0]
1004bc3a:	8860      	ldrh	r0, [r4, #2]
1004bc3c:	6809      	ldr	r1, [r1, #0]
1004bc3e:	2a00      	cmp	r2, #0
1004bc40:	d000      	beq.n	1004bc44 <Gatt_Update_Charac_Value+0x50>
1004bc42:	8c08      	ldrh	r0, [r1, #32]
1004bc44:	4632      	mov	r2, r6
1004bc46:	466e      	mov	r6, sp
1004bc48:	c631      	stmia	r6!, {r0, r4, r5}
1004bc4a:	2303      	movs	r3, #3
1004bc4c:	4639      	mov	r1, r7
1004bc4e:	2000      	movs	r0, #0
1004bc50:	f000 f804 	bl	1004bc5c <Gatt_Update_Charac_Value_Ext>
1004bc54:	e7e4      	b.n	1004bc20 <Gatt_Update_Charac_Value+0x2c>
1004bc56:	0000      	.short	0x0000
1004bc58:	2000098c 	.word	0x2000098c

1004bc5c <Gatt_Update_Charac_Value_Ext>:
1004bc5c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004bc5e:	2000      	movs	r0, #0
1004bc60:	b099      	sub	sp, #100	; 0x64
1004bc62:	9a23      	ldr	r2, [sp, #140]	; 0x8c
1004bc64:	900b      	str	r0, [sp, #44]	; 0x2c
1004bc66:	9012      	str	r0, [sp, #72]	; 0x48
1004bc68:	4605      	mov	r5, r0
1004bc6a:	9014      	str	r0, [sp, #80]	; 0x50
1004bc6c:	4606      	mov	r6, r0
1004bc6e:	9015      	str	r0, [sp, #84]	; 0x54
1004bc70:	461c      	mov	r4, r3
1004bc72:	48db      	ldr	r0, [pc, #876]	; (1004bfe0 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bc74:	460b      	mov	r3, r1
1004bc76:	6800      	ldr	r0, [r0, #0]
1004bc78:	49da      	ldr	r1, [pc, #872]	; (1004bfe4 <Gatt_Update_Charac_Value_Ext+0x388>)
1004bc7a:	9f22      	ldr	r7, [sp, #136]	; 0x88
1004bc7c:	1841      	adds	r1, r0, r1
1004bc7e:	9103      	str	r1, [sp, #12]
1004bc80:	2100      	movs	r1, #0
1004bc82:	9108      	str	r1, [sp, #32]
1004bc84:	9109      	str	r1, [sp, #36]	; 0x24
1004bc86:	8851      	ldrh	r1, [r2, #2]
1004bc88:	9106      	str	r1, [sp, #24]
1004bc8a:	8811      	ldrh	r1, [r2, #0]
1004bc8c:	910a      	str	r1, [sp, #40]	; 0x28
1004bc8e:	213b      	movs	r1, #59	; 0x3b
1004bc90:	0149      	lsls	r1, r1, #5
1004bc92:	1840      	adds	r0, r0, r1
1004bc94:	7d00      	ldrb	r0, [r0, #20]
1004bc96:	07c0      	lsls	r0, r0, #31
1004bc98:	d006      	beq.n	1004bca8 <Gatt_Update_Charac_Value_Ext+0x4c>
1004bc9a:	a90f      	add	r1, sp, #60	; 0x3c
1004bc9c:	4618      	mov	r0, r3
1004bc9e:	f000 f9d3 	bl	1004c048 <Gatt_search_service_handle>
1004bca2:	2800      	cmp	r0, #0
1004bca4:	d10a      	bne.n	1004bcbc <Gatt_Update_Charac_Value_Ext+0x60>
1004bca6:	e002      	b.n	1004bcae <Gatt_Update_Charac_Value_Ext+0x52>
1004bca8:	2047      	movs	r0, #71	; 0x47
1004bcaa:	b01d      	add	sp, #116	; 0x74
1004bcac:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004bcae:	aa10      	add	r2, sp, #64	; 0x40
1004bcb0:	990f      	ldr	r1, [sp, #60]	; 0x3c
1004bcb2:	981b      	ldr	r0, [sp, #108]	; 0x6c
1004bcb4:	f000 f9b8 	bl	1004c028 <Gatt_search_handle>
1004bcb8:	2800      	cmp	r0, #0
1004bcba:	d001      	beq.n	1004bcc0 <Gatt_Update_Charac_Value_Ext+0x64>
1004bcbc:	2060      	movs	r0, #96	; 0x60
1004bcbe:	e7f4      	b.n	1004bcaa <Gatt_Update_Charac_Value_Ext+0x4e>
1004bcc0:	9819      	ldr	r0, [sp, #100]	; 0x64
1004bcc2:	2800      	cmp	r0, #0
1004bcc4:	d003      	beq.n	1004bcce <Gatt_Update_Charac_Value_Ext+0x72>
1004bcc6:	0760      	lsls	r0, r4, #29
1004bcc8:	d501      	bpl.n	1004bcce <Gatt_Update_Charac_Value_Ext+0x72>
1004bcca:	2001      	movs	r0, #1
1004bccc:	e000      	b.n	1004bcd0 <Gatt_Update_Charac_Value_Ext+0x74>
1004bcce:	2000      	movs	r0, #0
1004bcd0:	9013      	str	r0, [sp, #76]	; 0x4c
1004bcd2:	07a0      	lsls	r0, r4, #30
1004bcd4:	0f80      	lsrs	r0, r0, #30
1004bcd6:	901c      	str	r0, [sp, #112]	; 0x70
1004bcd8:	9810      	ldr	r0, [sp, #64]	; 0x40
1004bcda:	9017      	str	r0, [sp, #92]	; 0x5c
1004bcdc:	3020      	adds	r0, #32
1004bcde:	78c0      	ldrb	r0, [r0, #3]
1004bce0:	2801      	cmp	r0, #1
1004bce2:	d140      	bne.n	1004bd66 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bce4:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004bce6:	4bc0      	ldr	r3, [pc, #768]	; (1004bfe8 <Gatt_Update_Charac_Value_Ext+0x38c>)
1004bce8:	8901      	ldrh	r1, [r0, #8]
1004bcea:	4299      	cmp	r1, r3
1004bcec:	d1f9      	bne.n	1004bce2 <Gatt_Update_Charac_Value_Ext+0x86>
1004bcee:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004bcf0:	9906      	ldr	r1, [sp, #24]
1004bcf2:	6804      	ldr	r4, [r0, #0]
1004bcf4:	980a      	ldr	r0, [sp, #40]	; 0x28
1004bcf6:	8c22      	ldrh	r2, [r4, #32]
1004bcf8:	1841      	adds	r1, r0, r1
1004bcfa:	4291      	cmp	r1, r2
1004bcfc:	d833      	bhi.n	1004bd66 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bcfe:	4620      	mov	r0, r4
1004bd00:	3020      	adds	r0, #32
1004bd02:	9016      	str	r0, [sp, #88]	; 0x58
1004bd04:	7880      	ldrb	r0, [r0, #2]
1004bd06:	2801      	cmp	r0, #1
1004bd08:	d016      	beq.n	1004bd38 <Gatt_Update_Charac_Value_Ext+0xdc>
1004bd0a:	8be0      	ldrh	r0, [r4, #30]
1004bd0c:	9004      	str	r0, [sp, #16]
1004bd0e:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004bd10:	6980      	ldr	r0, [r0, #24]
1004bd12:	7800      	ldrb	r0, [r0, #0]
1004bd14:	0680      	lsls	r0, r0, #26
1004bd16:	0f80      	lsrs	r0, r0, #30
1004bd18:	d07e      	beq.n	1004be18 <Gatt_Update_Charac_Value_Ext+0x1bc>
1004bd1a:	9803      	ldr	r0, [sp, #12]
1004bd1c:	3040      	adds	r0, #64	; 0x40
1004bd1e:	9018      	str	r0, [sp, #96]	; 0x60
1004bd20:	7a00      	ldrb	r0, [r0, #8]
1004bd22:	0780      	lsls	r0, r0, #30
1004bd24:	d578      	bpl.n	1004be18 <Gatt_Update_Charac_Value_Ext+0x1bc>
1004bd26:	981c      	ldr	r0, [sp, #112]	; 0x70
1004bd28:	2800      	cmp	r0, #0
1004bd2a:	d0f5      	beq.n	1004bd18 <Gatt_Update_Charac_Value_Ext+0xbc>
1004bd2c:	4fae      	ldr	r7, [pc, #696]	; (1004bfe8 <Gatt_Update_Charac_Value_Ext+0x38c>)
1004bd2e:	990f      	ldr	r1, [sp, #60]	; 0x3c
1004bd30:	37ff      	adds	r7, #255	; 0xff
1004bd32:	3120      	adds	r1, #32
1004bd34:	6820      	ldr	r0, [r4, #0]
1004bd36:	e014      	b.n	1004bd62 <Gatt_Update_Charac_Value_Ext+0x106>
1004bd38:	42ba      	cmp	r2, r7
1004bd3a:	d314      	bcc.n	1004bd66 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bd3c:	42b9      	cmp	r1, r7
1004bd3e:	d8dd      	bhi.n	1004bcfc <Gatt_Update_Charac_Value_Ext+0xa0>
1004bd40:	9704      	str	r7, [sp, #16]
1004bd42:	e7e4      	b.n	1004bd0e <Gatt_Update_Charac_Value_Ext+0xb2>
1004bd44:	8903      	ldrh	r3, [r0, #8]
1004bd46:	4aa8      	ldr	r2, [pc, #672]	; (1004bfe8 <Gatt_Update_Charac_Value_Ext+0x38c>)
1004bd48:	4293      	cmp	r3, r2
1004bd4a:	d103      	bne.n	1004bd54 <Gatt_Update_Charac_Value_Ext+0xf8>
1004bd4c:	2223      	movs	r2, #35	; 0x23
1004bd4e:	5c12      	ldrb	r2, [r2, r0]
1004bd50:	2a01      	cmp	r2, #1
1004bd52:	d008      	beq.n	1004bd66 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bd54:	42bb      	cmp	r3, r7
1004bd56:	d103      	bne.n	1004bd60 <Gatt_Update_Charac_Value_Ext+0x104>
1004bd58:	2223      	movs	r2, #35	; 0x23
1004bd5a:	5c12      	ldrb	r2, [r2, r0]
1004bd5c:	2a01      	cmp	r2, #1
1004bd5e:	d003      	beq.n	1004bd68 <Gatt_Update_Charac_Value_Ext+0x10c>
1004bd60:	6800      	ldr	r0, [r0, #0]
1004bd62:	4288      	cmp	r0, r1
1004bd64:	d1ee      	bne.n	1004bd44 <Gatt_Update_Charac_Value_Ext+0xe8>
1004bd66:	e134      	b.n	1004bfd2 <Gatt_Update_Charac_Value_Ext+0x376>
1004bd68:	9005      	str	r0, [sp, #20]
1004bd6a:	2800      	cmp	r0, #0
1004bd6c:	d0fb      	beq.n	1004bd66 <Gatt_Update_Charac_Value_Ext+0x10a>
1004bd6e:	489c      	ldr	r0, [pc, #624]	; (1004bfe0 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bd70:	2109      	movs	r1, #9
1004bd72:	6802      	ldr	r2, [r0, #0]
1004bd74:	0209      	lsls	r1, r1, #8
1004bd76:	1851      	adds	r1, r2, r1
1004bd78:	6b49      	ldr	r1, [r1, #52]	; 0x34
1004bd7a:	2700      	movs	r7, #0
1004bd7c:	9100      	str	r1, [sp, #0]
1004bd7e:	e062      	b.n	1004be46 <Gatt_Update_Charac_Value_Ext+0x1ea>
1004bd80:	0178      	lsls	r0, r7, #5
1004bd82:	9900      	ldr	r1, [sp, #0]
1004bd84:	9003      	str	r0, [sp, #12]
1004bd86:	5a08      	ldrh	r0, [r1, r0]
1004bd88:	0501      	lsls	r1, r0, #20
1004bd8a:	d05a      	beq.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004bd8c:	9919      	ldr	r1, [sp, #100]	; 0x64
1004bd8e:	2900      	cmp	r1, #0
1004bd90:	d001      	beq.n	1004bd96 <Gatt_Update_Charac_Value_Ext+0x13a>
1004bd92:	4288      	cmp	r0, r1
1004bd94:	d155      	bne.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004bd96:	9905      	ldr	r1, [sp, #20]
1004bd98:	007a      	lsls	r2, r7, #1
1004bd9a:	698b      	ldr	r3, [r1, #24]
1004bd9c:	1c51      	adds	r1, r2, #1
1004bd9e:	5c59      	ldrb	r1, [r3, r1]
1004bda0:	5c9a      	ldrb	r2, [r3, r2]
1004bda2:	0209      	lsls	r1, r1, #8
1004bda4:	1889      	adds	r1, r1, r2
1004bda6:	b289      	uxth	r1, r1
1004bda8:	910d      	str	r1, [sp, #52]	; 0x34
1004bdaa:	0789      	lsls	r1, r1, #30
1004bdac:	d049      	beq.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004bdae:	2202      	movs	r2, #2
1004bdb0:	9905      	ldr	r1, [sp, #20]
1004bdb2:	f00a fc9d 	bl	100566f0 <Att_Check_Perms>
1004bdb6:	2800      	cmp	r0, #0
1004bdb8:	d004      	beq.n	1004bdc4 <Gatt_Update_Charac_Value_Ext+0x168>
1004bdba:	9819      	ldr	r0, [sp, #100]	; 0x64
1004bdbc:	2800      	cmp	r0, #0
1004bdbe:	d040      	beq.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004bdc0:	2065      	movs	r0, #101	; 0x65
1004bdc2:	e772      	b.n	1004bcaa <Gatt_Update_Charac_Value_Ext+0x4e>
1004bdc4:	2000      	movs	r0, #0
1004bdc6:	a908      	add	r1, sp, #32
1004bdc8:	55c8      	strb	r0, [r1, r7]
1004bdca:	981c      	ldr	r0, [sp, #112]	; 0x70
1004bdcc:	07c0      	lsls	r0, r0, #31
1004bdce:	d018      	beq.n	1004be02 <Gatt_Update_Charac_Value_Ext+0x1a6>
1004bdd0:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004bdd2:	6980      	ldr	r0, [r0, #24]
1004bdd4:	7800      	ldrb	r0, [r0, #0]
1004bdd6:	06c0      	lsls	r0, r0, #27
1004bdd8:	d513      	bpl.n	1004be02 <Gatt_Update_Charac_Value_Ext+0x1a6>
1004bdda:	980d      	ldr	r0, [sp, #52]	; 0x34
1004bddc:	07c0      	lsls	r0, r0, #31
1004bdde:	d010      	beq.n	1004be02 <Gatt_Update_Charac_Value_Ext+0x1a6>
1004bde0:	2001      	movs	r0, #1
1004bde2:	55c8      	strb	r0, [r1, r7]
1004bde4:	4305      	orrs	r5, r0
1004bde6:	9a00      	ldr	r2, [sp, #0]
1004bde8:	9803      	ldr	r0, [sp, #12]
1004bdea:	1880      	adds	r0, r0, r2
1004bdec:	8840      	ldrh	r0, [r0, #2]
1004bdee:	9a15      	ldr	r2, [sp, #84]	; 0x54
1004bdf0:	4290      	cmp	r0, r2
1004bdf2:	d906      	bls.n	1004be02 <Gatt_Update_Charac_Value_Ext+0x1a6>
1004bdf4:	9015      	str	r0, [sp, #84]	; 0x54
1004bdf6:	9a00      	ldr	r2, [sp, #0]
1004bdf8:	9803      	ldr	r0, [sp, #12]
1004bdfa:	5a10      	ldrh	r0, [r2, r0]
1004bdfc:	0500      	lsls	r0, r0, #20
1004bdfe:	0d00      	lsrs	r0, r0, #20
1004be00:	9014      	str	r0, [sp, #80]	; 0x50
1004be02:	981c      	ldr	r0, [sp, #112]	; 0x70
1004be04:	0780      	lsls	r0, r0, #30
1004be06:	d51c      	bpl.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be08:	9817      	ldr	r0, [sp, #92]	; 0x5c
1004be0a:	6980      	ldr	r0, [r0, #24]
1004be0c:	7800      	ldrb	r0, [r0, #0]
1004be0e:	0680      	lsls	r0, r0, #26
1004be10:	d517      	bpl.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be12:	980d      	ldr	r0, [sp, #52]	; 0x34
1004be14:	0780      	lsls	r0, r0, #30
1004be16:	e000      	b.n	1004be1a <Gatt_Update_Charac_Value_Ext+0x1be>
1004be18:	e083      	b.n	1004bf22 <Gatt_Update_Charac_Value_Ext+0x2c6>
1004be1a:	d512      	bpl.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be1c:	2002      	movs	r0, #2
1004be1e:	5dca      	ldrb	r2, [r1, r7]
1004be20:	4305      	orrs	r5, r0
1004be22:	4302      	orrs	r2, r0
1004be24:	55ca      	strb	r2, [r1, r7]
1004be26:	9900      	ldr	r1, [sp, #0]
1004be28:	9803      	ldr	r0, [sp, #12]
1004be2a:	1840      	adds	r0, r0, r1
1004be2c:	8840      	ldrh	r0, [r0, #2]
1004be2e:	9915      	ldr	r1, [sp, #84]	; 0x54
1004be30:	4288      	cmp	r0, r1
1004be32:	d906      	bls.n	1004be42 <Gatt_Update_Charac_Value_Ext+0x1e6>
1004be34:	9015      	str	r0, [sp, #84]	; 0x54
1004be36:	9900      	ldr	r1, [sp, #0]
1004be38:	9803      	ldr	r0, [sp, #12]
1004be3a:	5a08      	ldrh	r0, [r1, r0]
1004be3c:	0500      	lsls	r0, r0, #20
1004be3e:	0d00      	lsrs	r0, r0, #20
1004be40:	9014      	str	r0, [sp, #80]	; 0x50
1004be42:	1c7f      	adds	r7, r7, #1
1004be44:	b2ff      	uxtb	r7, r7
1004be46:	4866      	ldr	r0, [pc, #408]	; (1004bfe0 <Gatt_Update_Charac_Value_Ext+0x384>)
1004be48:	6800      	ldr	r0, [r0, #0]
1004be4a:	30a0      	adds	r0, #160	; 0xa0
1004be4c:	7b03      	ldrb	r3, [r0, #12]
1004be4e:	42bb      	cmp	r3, r7
1004be50:	d896      	bhi.n	1004bd80 <Gatt_Update_Charac_Value_Ext+0x124>
1004be52:	2d00      	cmp	r5, #0
1004be54:	d065      	beq.n	1004bf22 <Gatt_Update_Charac_Value_Ext+0x2c6>
1004be56:	9818      	ldr	r0, [sp, #96]	; 0x60
1004be58:	7a00      	ldrb	r0, [r0, #8]
1004be5a:	0600      	lsls	r0, r0, #24
1004be5c:	d45f      	bmi.n	1004bf1e <Gatt_Update_Charac_Value_Ext+0x2c2>
1004be5e:	4860      	ldr	r0, [pc, #384]	; (1004bfe0 <Gatt_Update_Charac_Value_Ext+0x384>)
1004be60:	6801      	ldr	r1, [r0, #0]
1004be62:	2009      	movs	r0, #9
1004be64:	0200      	lsls	r0, r0, #8
1004be66:	1808      	adds	r0, r1, r0
1004be68:	6b41      	ldr	r1, [r0, #52]	; 0x34
1004be6a:	2000      	movs	r0, #0
1004be6c:	e01b      	b.n	1004bea6 <Gatt_Update_Charac_Value_Ext+0x24a>
1004be6e:	0142      	lsls	r2, r0, #5
1004be70:	5a8e      	ldrh	r6, [r1, r2]
1004be72:	0536      	lsls	r6, r6, #20
1004be74:	d015      	beq.n	1004bea2 <Gatt_Update_Charac_Value_Ext+0x246>
1004be76:	07ae      	lsls	r6, r5, #30
1004be78:	d50b      	bpl.n	1004be92 <Gatt_Update_Charac_Value_Ext+0x236>
1004be7a:	1856      	adds	r6, r2, r1
1004be7c:	6936      	ldr	r6, [r6, #16]
1004be7e:	07b7      	lsls	r7, r6, #30
1004be80:	d40d      	bmi.n	1004be9e <Gatt_Update_Charac_Value_Ext+0x242>
1004be82:	af08      	add	r7, sp, #32
1004be84:	5c3f      	ldrb	r7, [r7, r0]
1004be86:	07bf      	lsls	r7, r7, #30
1004be88:	d503      	bpl.n	1004be92 <Gatt_Update_Charac_Value_Ext+0x236>
1004be8a:	0736      	lsls	r6, r6, #28
1004be8c:	d501      	bpl.n	1004be92 <Gatt_Update_Charac_Value_Ext+0x236>
1004be8e:	2046      	movs	r0, #70	; 0x46
1004be90:	e70b      	b.n	1004bcaa <Gatt_Update_Charac_Value_Ext+0x4e>
1004be92:	07ee      	lsls	r6, r5, #31
1004be94:	d005      	beq.n	1004bea2 <Gatt_Update_Charac_Value_Ext+0x246>
1004be96:	1852      	adds	r2, r2, r1
1004be98:	7c12      	ldrb	r2, [r2, #16]
1004be9a:	07d2      	lsls	r2, r2, #31
1004be9c:	d001      	beq.n	1004bea2 <Gatt_Update_Charac_Value_Ext+0x246>
1004be9e:	2043      	movs	r0, #67	; 0x43
1004bea0:	e703      	b.n	1004bcaa <Gatt_Update_Charac_Value_Ext+0x4e>
1004bea2:	1c40      	adds	r0, r0, #1
1004bea4:	b2c0      	uxtb	r0, r0
1004bea6:	4283      	cmp	r3, r0
1004bea8:	d8e1      	bhi.n	1004be6e <Gatt_Update_Charac_Value_Ext+0x212>
1004beaa:	9815      	ldr	r0, [sp, #84]	; 0x54
1004beac:	1ec0      	subs	r0, r0, #3
1004beae:	b286      	uxth	r6, r0
1004beb0:	9804      	ldr	r0, [sp, #16]
1004beb2:	4286      	cmp	r6, r0
1004beb4:	d900      	bls.n	1004beb8 <Gatt_Update_Charac_Value_Ext+0x25c>
1004beb6:	4606      	mov	r6, r0
1004beb8:	07a8      	lsls	r0, r5, #30
1004beba:	d50f      	bpl.n	1004bedc <Gatt_Update_Charac_Value_Ext+0x280>
1004bebc:	2220      	movs	r2, #32
1004bebe:	2000      	movs	r0, #0
1004bec0:	9914      	ldr	r1, [sp, #80]	; 0x50
1004bec2:	f004 fc2b 	bl	1005071c <PM_Get_Pckt>
1004bec6:	9012      	str	r0, [sp, #72]	; 0x48
1004bec8:	2800      	cmp	r0, #0
1004beca:	d07d      	beq.n	1004bfc8 <Gatt_Update_Charac_Value_Ext+0x36c>
1004becc:	1cf0      	adds	r0, r6, #3
1004bece:	b282      	uxth	r2, r0
1004bed0:	2100      	movs	r1, #0
1004bed2:	9812      	ldr	r0, [sp, #72]	; 0x48
1004bed4:	f000 f8f4 	bl	1004c0c0 <Pm_Resize_Host_Acl_Pckt>
1004bed8:	2800      	cmp	r0, #0
1004beda:	d111      	bne.n	1004bf00 <Gatt_Update_Charac_Value_Ext+0x2a4>
1004bedc:	07e8      	lsls	r0, r5, #31
1004bede:	d020      	beq.n	1004bf22 <Gatt_Update_Charac_Value_Ext+0x2c6>
1004bee0:	2220      	movs	r2, #32
1004bee2:	2000      	movs	r0, #0
1004bee4:	9914      	ldr	r1, [sp, #80]	; 0x50
1004bee6:	f004 fc19 	bl	1005071c <PM_Get_Pckt>
1004beea:	900b      	str	r0, [sp, #44]	; 0x2c
1004beec:	2800      	cmp	r0, #0
1004beee:	d007      	beq.n	1004bf00 <Gatt_Update_Charac_Value_Ext+0x2a4>
1004bef0:	1cf0      	adds	r0, r6, #3
1004bef2:	b282      	uxth	r2, r0
1004bef4:	2100      	movs	r1, #0
1004bef6:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004bef8:	f000 f8e2 	bl	1004c0c0 <Pm_Resize_Host_Acl_Pckt>
1004befc:	2800      	cmp	r0, #0
1004befe:	d010      	beq.n	1004bf22 <Gatt_Update_Charac_Value_Ext+0x2c6>
1004bf00:	2080      	movs	r0, #128	; 0x80
1004bf02:	f7fe fdb1 	bl	1004aa68 <GATT_Server_Set_Flag>
1004bf06:	9812      	ldr	r0, [sp, #72]	; 0x48
1004bf08:	2800      	cmp	r0, #0
1004bf0a:	d002      	beq.n	1004bf12 <Gatt_Update_Charac_Value_Ext+0x2b6>
1004bf0c:	2100      	movs	r1, #0
1004bf0e:	f004 fc61 	bl	100507d4 <PM_Release_Acl_Pckt>
1004bf12:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004bf14:	2800      	cmp	r0, #0
1004bf16:	d002      	beq.n	1004bf1e <Gatt_Update_Charac_Value_Ext+0x2c2>
1004bf18:	2100      	movs	r1, #0
1004bf1a:	f004 fc5b 	bl	100507d4 <PM_Release_Acl_Pckt>
1004bf1e:	2064      	movs	r0, #100	; 0x64
1004bf20:	e6c3      	b.n	1004bcaa <Gatt_Update_Charac_Value_Ext+0x4e>
1004bf22:	69a1      	ldr	r1, [r4, #24]
1004bf24:	980a      	ldr	r0, [sp, #40]	; 0x28
1004bf26:	9a06      	ldr	r2, [sp, #24]
1004bf28:	1808      	adds	r0, r1, r0
1004bf2a:	9924      	ldr	r1, [sp, #144]	; 0x90
1004bf2c:	f7f7 f947 	bl	100431be <Osal_MemCpy>
1004bf30:	9816      	ldr	r0, [sp, #88]	; 0x58
1004bf32:	7880      	ldrb	r0, [r0, #2]
1004bf34:	2801      	cmp	r0, #1
1004bf36:	d101      	bne.n	1004bf3c <Gatt_Update_Charac_Value_Ext+0x2e0>
1004bf38:	9804      	ldr	r0, [sp, #16]
1004bf3a:	83e0      	strh	r0, [r4, #30]
1004bf3c:	2d00      	cmp	r5, #0
1004bf3e:	d046      	beq.n	1004bfce <Gatt_Update_Charac_Value_Ext+0x372>
1004bf40:	4b27      	ldr	r3, [pc, #156]	; (1004bfe0 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bf42:	2009      	movs	r0, #9
1004bf44:	6819      	ldr	r1, [r3, #0]
1004bf46:	0200      	lsls	r0, r0, #8
1004bf48:	1808      	adds	r0, r1, r0
1004bf4a:	6b41      	ldr	r1, [r0, #52]	; 0x34
1004bf4c:	2000      	movs	r0, #0
1004bf4e:	aa08      	add	r2, sp, #32
1004bf50:	e00c      	b.n	1004bf6c <Gatt_Update_Charac_Value_Ext+0x310>
1004bf52:	0143      	lsls	r3, r0, #5
1004bf54:	5acf      	ldrh	r7, [r1, r3]
1004bf56:	053f      	lsls	r7, r7, #20
1004bf58:	d006      	beq.n	1004bf68 <Gatt_Update_Charac_Value_Ext+0x30c>
1004bf5a:	185f      	adds	r7, r3, r1
1004bf5c:	46bc      	mov	ip, r7
1004bf5e:	693b      	ldr	r3, [r7, #16]
1004bf60:	5c17      	ldrb	r7, [r2, r0]
1004bf62:	433b      	orrs	r3, r7
1004bf64:	4667      	mov	r7, ip
1004bf66:	613b      	str	r3, [r7, #16]
1004bf68:	1c40      	adds	r0, r0, #1
1004bf6a:	b2c0      	uxtb	r0, r0
1004bf6c:	4b1c      	ldr	r3, [pc, #112]	; (1004bfe0 <Gatt_Update_Charac_Value_Ext+0x384>)
1004bf6e:	681b      	ldr	r3, [r3, #0]
1004bf70:	33a0      	adds	r3, #160	; 0xa0
1004bf72:	7b1b      	ldrb	r3, [r3, #12]
1004bf74:	4283      	cmp	r3, r0
1004bf76:	d8ec      	bhi.n	1004bf52 <Gatt_Update_Charac_Value_Ext+0x2f6>
1004bf78:	07a8      	lsls	r0, r5, #30
1004bf7a:	d50d      	bpl.n	1004bf98 <Gatt_Update_Charac_Value_Ext+0x33c>
1004bf7c:	9812      	ldr	r0, [sp, #72]	; 0x48
1004bf7e:	9000      	str	r0, [sp, #0]
1004bf80:	1cf0      	adds	r0, r6, #3
1004bf82:	b282      	uxth	r2, r0
1004bf84:	4621      	mov	r1, r4
1004bf86:	311c      	adds	r1, #28
1004bf88:	2002      	movs	r0, #2
1004bf8a:	69a3      	ldr	r3, [r4, #24]
1004bf8c:	f7fe fb36 	bl	1004a5fc <Build_Notif_Or_Ind>
1004bf90:	2002      	movs	r0, #2
1004bf92:	9912      	ldr	r1, [sp, #72]	; 0x48
1004bf94:	f000 fa76 	bl	1004c484 <Send_Notif_Or_Ind>
1004bf98:	07e8      	lsls	r0, r5, #31
1004bf9a:	d018      	beq.n	1004bfce <Gatt_Update_Charac_Value_Ext+0x372>
1004bf9c:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004bf9e:	9000      	str	r0, [sp, #0]
1004bfa0:	1cf6      	adds	r6, r6, #3
1004bfa2:	4621      	mov	r1, r4
1004bfa4:	b2b2      	uxth	r2, r6
1004bfa6:	311c      	adds	r1, #28
1004bfa8:	2001      	movs	r0, #1
1004bfaa:	69a3      	ldr	r3, [r4, #24]
1004bfac:	f7fe fb26 	bl	1004a5fc <Build_Notif_Or_Ind>
1004bfb0:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004bfb2:	2800      	cmp	r0, #0
1004bfb4:	d005      	beq.n	1004bfc2 <Gatt_Update_Charac_Value_Ext+0x366>
1004bfb6:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004bfb8:	2180      	movs	r1, #128	; 0x80
1004bfba:	7cc0      	ldrb	r0, [r0, #19]
1004bfbc:	4308      	orrs	r0, r1
1004bfbe:	990b      	ldr	r1, [sp, #44]	; 0x2c
1004bfc0:	74c8      	strb	r0, [r1, #19]
1004bfc2:	2001      	movs	r0, #1
1004bfc4:	990b      	ldr	r1, [sp, #44]	; 0x2c
1004bfc6:	e000      	b.n	1004bfca <Gatt_Update_Charac_Value_Ext+0x36e>
1004bfc8:	e005      	b.n	1004bfd6 <Gatt_Update_Charac_Value_Ext+0x37a>
1004bfca:	f000 fa5b 	bl	1004c484 <Send_Notif_Or_Ind>
1004bfce:	2000      	movs	r0, #0
1004bfd0:	e66b      	b.n	1004bcaa <Gatt_Update_Charac_Value_Ext+0x4e>
1004bfd2:	2042      	movs	r0, #66	; 0x42
1004bfd4:	e669      	b.n	1004bcaa <Gatt_Update_Charac_Value_Ext+0x4e>
1004bfd6:	2080      	movs	r0, #128	; 0x80
1004bfd8:	f7fe fd46 	bl	1004aa68 <GATT_Server_Set_Flag>
1004bfdc:	e79f      	b.n	1004bf1e <Gatt_Update_Charac_Value_Ext+0x2c2>
1004bfde:	0000      	.short	0x0000
1004bfe0:	2000098c 	.word	0x2000098c
1004bfe4:	0000072c 	.word	0x0000072c
1004bfe8:	00002803 	.word	0x00002803

1004bfec <Gatt_fetch_handle>:
1004bfec:	b5f0      	push	{r4, r5, r6, r7, lr}
1004bfee:	6884      	ldr	r4, [r0, #8]
1004bff0:	3008      	adds	r0, #8
1004bff2:	e015      	b.n	1004c020 <Gatt_fetch_handle+0x34>
1004bff4:	8d25      	ldrh	r5, [r4, #40]	; 0x28
1004bff6:	428d      	cmp	r5, r1
1004bff8:	d103      	bne.n	1004c002 <Gatt_fetch_handle+0x16>
1004bffa:	6014      	str	r4, [r2, #0]
1004bffc:	6018      	str	r0, [r3, #0]
1004bffe:	2001      	movs	r0, #1
1004c000:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c002:	4626      	mov	r6, r4
1004c004:	601c      	str	r4, [r3, #0]
1004c006:	3620      	adds	r6, #32
1004c008:	6a25      	ldr	r5, [r4, #32]
1004c00a:	e006      	b.n	1004c01a <Gatt_fetch_handle+0x2e>
1004c00c:	8baf      	ldrh	r7, [r5, #28]
1004c00e:	428f      	cmp	r7, r1
1004c010:	d102      	bne.n	1004c018 <Gatt_fetch_handle+0x2c>
1004c012:	2002      	movs	r0, #2
1004c014:	6015      	str	r5, [r2, #0]
1004c016:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c018:	682d      	ldr	r5, [r5, #0]
1004c01a:	42b5      	cmp	r5, r6
1004c01c:	d1f6      	bne.n	1004c00c <Gatt_fetch_handle+0x20>
1004c01e:	6824      	ldr	r4, [r4, #0]
1004c020:	4284      	cmp	r4, r0
1004c022:	d1e7      	bne.n	1004bff4 <Gatt_fetch_handle+0x8>
1004c024:	2000      	movs	r0, #0
1004c026:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004c028 <Gatt_search_handle>:
1004c028:	b510      	push	{r4, lr}
1004c02a:	6a0b      	ldr	r3, [r1, #32]
1004c02c:	3120      	adds	r1, #32
1004c02e:	e006      	b.n	1004c03e <Gatt_search_handle+0x16>
1004c030:	8b9c      	ldrh	r4, [r3, #28]
1004c032:	4284      	cmp	r4, r0
1004c034:	d102      	bne.n	1004c03c <Gatt_search_handle+0x14>
1004c036:	2000      	movs	r0, #0
1004c038:	6013      	str	r3, [r2, #0]
1004c03a:	bd10      	pop	{r4, pc}
1004c03c:	681b      	ldr	r3, [r3, #0]
1004c03e:	428b      	cmp	r3, r1
1004c040:	d1f6      	bne.n	1004c030 <Gatt_search_handle+0x8>
1004c042:	2041      	movs	r0, #65	; 0x41
1004c044:	bd10      	pop	{r4, pc}
	...

1004c048 <Gatt_search_service_handle>:
1004c048:	b510      	push	{r4, lr}
1004c04a:	4a09      	ldr	r2, [pc, #36]	; (1004c070 <Gatt_search_service_handle+0x28>)
1004c04c:	4b09      	ldr	r3, [pc, #36]	; (1004c074 <Gatt_search_service_handle+0x2c>)
1004c04e:	6812      	ldr	r2, [r2, #0]
1004c050:	18d2      	adds	r2, r2, r3
1004c052:	6893      	ldr	r3, [r2, #8]
1004c054:	3208      	adds	r2, #8
1004c056:	e006      	b.n	1004c066 <Gatt_search_service_handle+0x1e>
1004c058:	8d1c      	ldrh	r4, [r3, #40]	; 0x28
1004c05a:	4284      	cmp	r4, r0
1004c05c:	d102      	bne.n	1004c064 <Gatt_search_service_handle+0x1c>
1004c05e:	2000      	movs	r0, #0
1004c060:	600b      	str	r3, [r1, #0]
1004c062:	bd10      	pop	{r4, pc}
1004c064:	681b      	ldr	r3, [r3, #0]
1004c066:	4293      	cmp	r3, r2
1004c068:	d1f6      	bne.n	1004c058 <Gatt_search_service_handle+0x10>
1004c06a:	2041      	movs	r0, #65	; 0x41
1004c06c:	bd10      	pop	{r4, pc}
1004c06e:	0000      	.short	0x0000
1004c070:	2000098c 	.word	0x2000098c
1004c074:	0000072c 	.word	0x0000072c

1004c078 <Ind_Service_Change_Charac>:
1004c078:	b530      	push	{r4, r5, lr}
1004c07a:	4b0f      	ldr	r3, [pc, #60]	; (1004c0b8 <Ind_Service_Change_Charac+0x40>)
1004c07c:	4d0f      	ldr	r5, [pc, #60]	; (1004c0bc <Ind_Service_Change_Charac+0x44>)
1004c07e:	681b      	ldr	r3, [r3, #0]
1004c080:	4604      	mov	r4, r0
1004c082:	195b      	adds	r3, r3, r5
1004c084:	3340      	adds	r3, #64	; 0x40
1004c086:	7a1b      	ldrb	r3, [r3, #8]
1004c088:	2041      	movs	r0, #65	; 0x41
1004c08a:	b085      	sub	sp, #20
1004c08c:	079b      	lsls	r3, r3, #30
1004c08e:	d510      	bpl.n	1004c0b2 <Ind_Service_Change_Charac+0x3a>
1004c090:	466b      	mov	r3, sp
1004c092:	8199      	strh	r1, [r3, #12]
1004c094:	81da      	strh	r2, [r3, #14]
1004c096:	2000      	movs	r0, #0
1004c098:	8218      	strh	r0, [r3, #16]
1004c09a:	2004      	movs	r0, #4
1004c09c:	8258      	strh	r0, [r3, #18]
1004c09e:	aa03      	add	r2, sp, #12
1004c0a0:	a904      	add	r1, sp, #16
1004c0a2:	466d      	mov	r5, sp
1004c0a4:	c507      	stmia	r5!, {r0, r1, r2}
1004c0a6:	2302      	movs	r3, #2
1004c0a8:	461a      	mov	r2, r3
1004c0aa:	2101      	movs	r1, #1
1004c0ac:	4620      	mov	r0, r4
1004c0ae:	f7ff fdd5 	bl	1004bc5c <Gatt_Update_Charac_Value_Ext>
1004c0b2:	b005      	add	sp, #20
1004c0b4:	bd30      	pop	{r4, r5, pc}
1004c0b6:	0000      	.short	0x0000
1004c0b8:	2000098c 	.word	0x2000098c
1004c0bc:	0000072c 	.word	0x0000072c

1004c0c0 <Pm_Resize_Host_Acl_Pckt>:
1004c0c0:	b510      	push	{r4, lr}
1004c0c2:	1d12      	adds	r2, r2, #4
1004c0c4:	6880      	ldr	r0, [r0, #8]
1004c0c6:	b292      	uxth	r2, r2
1004c0c8:	f004 fba2 	bl	10050810 <PM_Resize_Pckt_Pdu_Size>
1004c0cc:	bd10      	pop	{r4, pc}
	...

1004c0d0 <Process_Peer_Client_Data>:
1004c0d0:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c0d2:	497b      	ldr	r1, [pc, #492]	; (1004c2c0 <Process_Peer_Client_Data+0x1f0>)
1004c0d4:	4a7b      	ldr	r2, [pc, #492]	; (1004c2c4 <Process_Peer_Client_Data+0x1f4>)
1004c0d6:	6809      	ldr	r1, [r1, #0]
1004c0d8:	b085      	sub	sp, #20
1004c0da:	188e      	adds	r6, r1, r2
1004c0dc:	2801      	cmp	r0, #1
1004c0de:	d006      	beq.n	1004c0ee <Process_Peer_Client_Data+0x1e>
1004c0e0:	4630      	mov	r0, r6
1004c0e2:	3018      	adds	r0, #24
1004c0e4:	9000      	str	r0, [sp, #0]
1004c0e6:	f009 feb9 	bl	10055e5c <acl_list_first>
1004c0ea:	4604      	mov	r4, r0
1004c0ec:	e0e5      	b.n	1004c2ba <Process_Peer_Client_Data+0x1ea>
1004c0ee:	4630      	mov	r0, r6
1004c0f0:	3024      	adds	r0, #36	; 0x24
1004c0f2:	9003      	str	r0, [sp, #12]
1004c0f4:	f009 feb2 	bl	10055e5c <acl_list_first>
1004c0f8:	4605      	mov	r5, r0
1004c0fa:	e0ba      	b.n	1004c272 <Process_Peer_Client_Data+0x1a2>
1004c0fc:	68a8      	ldr	r0, [r5, #8]
1004c0fe:	682f      	ldr	r7, [r5, #0]
1004c100:	7b00      	ldrb	r0, [r0, #12]
1004c102:	9002      	str	r0, [sp, #8]
1004c104:	88a8      	ldrh	r0, [r5, #4]
1004c106:	f7fe fa5b 	bl	1004a5c0 <Find_Gatt_Client>
1004c10a:	0004      	movs	r4, r0
1004c10c:	d073      	beq.n	1004c1f6 <Process_Peer_Client_Data+0x126>
1004c10e:	8821      	ldrh	r1, [r4, #0]
1004c110:	2220      	movs	r2, #32
1004c112:	2000      	movs	r0, #0
1004c114:	f004 fb02 	bl	1005071c <PM_Get_Pckt>
1004c118:	9001      	str	r0, [sp, #4]
1004c11a:	2800      	cmp	r0, #0
1004c11c:	d06c      	beq.n	1004c1f8 <Process_Peer_Client_Data+0x128>
1004c11e:	88e8      	ldrh	r0, [r5, #6]
1004c120:	8861      	ldrh	r1, [r4, #2]
1004c122:	4288      	cmp	r0, r1
1004c124:	d904      	bls.n	1004c130 <Process_Peer_Client_Data+0x60>
1004c126:	2200      	movs	r2, #0
1004c128:	2004      	movs	r0, #4
1004c12a:	9b01      	ldr	r3, [sp, #4]
1004c12c:	9902      	ldr	r1, [sp, #8]
1004c12e:	e020      	b.n	1004c172 <Process_Peer_Client_Data+0xa2>
1004c130:	2046      	movs	r0, #70	; 0x46
1004c132:	9000      	str	r0, [sp, #0]
1004c134:	9802      	ldr	r0, [sp, #8]
1004c136:	280e      	cmp	r0, #14
1004c138:	d04e      	beq.n	1004c1d8 <Process_Peer_Client_Data+0x108>
1004c13a:	dc0a      	bgt.n	1004c152 <Process_Peer_Client_Data+0x82>
1004c13c:	1e80      	subs	r0, r0, #2
1004c13e:	0003      	movs	r3, r0
1004c140:	f000 fa93 	bl	1004c66a <__ARM_common_switch8>
1004c144:	22131c0b 	.word	0x22131c0b
1004c148:	2f132913 	.word	0x2f132913
1004c14c:	41133813 	.word	0x41133813
1004c150:	0013      	.short	0x0013
1004c152:	2816      	cmp	r0, #22
1004c154:	d05a      	beq.n	1004c20c <Process_Peer_Client_Data+0x13c>
1004c156:	dc04      	bgt.n	1004c162 <Process_Peer_Client_Data+0x92>
1004c158:	2810      	cmp	r0, #16
1004c15a:	d046      	beq.n	1004c1ea <Process_Peer_Client_Data+0x11a>
1004c15c:	2812      	cmp	r0, #18
1004c15e:	d104      	bne.n	1004c16a <Process_Peer_Client_Data+0x9a>
1004c160:	e04b      	b.n	1004c1fa <Process_Peer_Client_Data+0x12a>
1004c162:	2818      	cmp	r0, #24
1004c164:	d05b      	beq.n	1004c21e <Process_Peer_Client_Data+0x14e>
1004c166:	281d      	cmp	r0, #29
1004c168:	d072      	beq.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c16a:	2200      	movs	r2, #0
1004c16c:	2006      	movs	r0, #6
1004c16e:	9b01      	ldr	r3, [sp, #4]
1004c170:	9902      	ldr	r1, [sp, #8]
1004c172:	f00a fa3f 	bl	100565f4 <ATT_fill_error_resp>
1004c176:	2000      	movs	r0, #0
1004c178:	9000      	str	r0, [sp, #0]
1004c17a:	e05c      	b.n	1004c236 <Process_Peer_Client_Data+0x166>
1004c17c:	4629      	mov	r1, r5
1004c17e:	4620      	mov	r0, r4
1004c180:	9a01      	ldr	r2, [sp, #4]
1004c182:	f00a fb43 	bl	1005680c <Exchg_Mtu_Resp>
1004c186:	e04f      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c188:	462a      	mov	r2, r5
1004c18a:	4621      	mov	r1, r4
1004c18c:	4630      	mov	r0, r6
1004c18e:	9b01      	ldr	r3, [sp, #4]
1004c190:	f00a fd6e 	bl	10056c70 <Find_Info_Resp>
1004c194:	e048      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c196:	4629      	mov	r1, r5
1004c198:	4620      	mov	r0, r4
1004c19a:	9a01      	ldr	r2, [sp, #4]
1004c19c:	f00a fc70 	bl	10056a80 <Find_By_Type_Val_Resp>
1004c1a0:	e042      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c1a2:	6920      	ldr	r0, [r4, #16]
1004c1a4:	0300      	lsls	r0, r0, #12
1004c1a6:	d453      	bmi.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c1a8:	4629      	mov	r1, r5
1004c1aa:	4620      	mov	r0, r4
1004c1ac:	9a01      	ldr	r2, [sp, #4]
1004c1ae:	f00b f8a9 	bl	10057304 <Read_By_Type_Resp>
1004c1b2:	e039      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c1b4:	6920      	ldr	r0, [r4, #16]
1004c1b6:	0300      	lsls	r0, r0, #12
1004c1b8:	d44a      	bmi.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c1ba:	4629      	mov	r1, r5
1004c1bc:	4620      	mov	r0, r4
1004c1be:	9a01      	ldr	r2, [sp, #4]
1004c1c0:	f00b fad4 	bl	1005776c <Read_Resp>
1004c1c4:	e030      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c1c6:	6920      	ldr	r0, [r4, #16]
1004c1c8:	0300      	lsls	r0, r0, #12
1004c1ca:	d441      	bmi.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c1cc:	4629      	mov	r1, r5
1004c1ce:	4620      	mov	r0, r4
1004c1d0:	9a01      	ldr	r2, [sp, #4]
1004c1d2:	f00a ff05 	bl	10056fe0 <Read_Blob_Resp>
1004c1d6:	e027      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c1d8:	6920      	ldr	r0, [r4, #16]
1004c1da:	0300      	lsls	r0, r0, #12
1004c1dc:	d438      	bmi.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c1de:	4629      	mov	r1, r5
1004c1e0:	4620      	mov	r0, r4
1004c1e2:	9a01      	ldr	r2, [sp, #4]
1004c1e4:	f00b f9f8 	bl	100575d8 <Read_Multi_Resp>
1004c1e8:	e01e      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c1ea:	4629      	mov	r1, r5
1004c1ec:	4620      	mov	r0, r4
1004c1ee:	9a01      	ldr	r2, [sp, #4]
1004c1f0:	f00a ff96 	bl	10057120 <Read_By_Grp_Type_Resp>
1004c1f4:	e018      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c1f6:	e033      	b.n	1004c260 <Process_Peer_Client_Data+0x190>
1004c1f8:	e03e      	b.n	1004c278 <Process_Peer_Client_Data+0x1a8>
1004c1fa:	6920      	ldr	r0, [r4, #16]
1004c1fc:	0380      	lsls	r0, r0, #14
1004c1fe:	d427      	bmi.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c200:	4629      	mov	r1, r5
1004c202:	4620      	mov	r0, r4
1004c204:	9a01      	ldr	r2, [sp, #4]
1004c206:	f00b fbdc 	bl	100579c2 <Write_Resp>
1004c20a:	e00d      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c20c:	6920      	ldr	r0, [r4, #16]
1004c20e:	0380      	lsls	r0, r0, #14
1004c210:	d41e      	bmi.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c212:	4629      	mov	r1, r5
1004c214:	4620      	mov	r0, r4
1004c216:	9a01      	ldr	r2, [sp, #4]
1004c218:	f00a fe26 	bl	10056e68 <Prepare_Write_Resp>
1004c21c:	e004      	b.n	1004c228 <Process_Peer_Client_Data+0x158>
1004c21e:	4629      	mov	r1, r5
1004c220:	4620      	mov	r0, r4
1004c222:	9a01      	ldr	r2, [sp, #4]
1004c224:	f00a fb4c 	bl	100568c0 <Exec_Write_Resp>
1004c228:	9000      	str	r0, [sp, #0]
1004c22a:	2845      	cmp	r0, #69	; 0x45
1004c22c:	d010      	beq.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c22e:	2869      	cmp	r0, #105	; 0x69
1004c230:	d00e      	beq.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c232:	2846      	cmp	r0, #70	; 0x46
1004c234:	d00c      	beq.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c236:	2101      	movs	r1, #1
1004c238:	6920      	ldr	r0, [r4, #16]
1004c23a:	0609      	lsls	r1, r1, #24
1004c23c:	4388      	bics	r0, r1
1004c23e:	6120      	str	r0, [r4, #16]
1004c240:	9801      	ldr	r0, [sp, #4]
1004c242:	f7fe fbfb 	bl	1004aa3c <GATT_Send_Packet>
1004c246:	9800      	ldr	r0, [sp, #0]
1004c248:	2800      	cmp	r0, #0
1004c24a:	d009      	beq.n	1004c260 <Process_Peer_Client_Data+0x190>
1004c24c:	e010      	b.n	1004c270 <Process_Peer_Client_Data+0x1a0>
1004c24e:	e7ff      	b.n	1004c250 <Process_Peer_Client_Data+0x180>
1004c250:	2100      	movs	r1, #0
1004c252:	9801      	ldr	r0, [sp, #4]
1004c254:	f004 fabe 	bl	100507d4 <PM_Release_Acl_Pckt>
1004c258:	9800      	ldr	r0, [sp, #0]
1004c25a:	2845      	cmp	r0, #69	; 0x45
1004c25c:	d00c      	beq.n	1004c278 <Process_Peer_Client_Data+0x1a8>
1004c25e:	e7f2      	b.n	1004c246 <Process_Peer_Client_Data+0x176>
1004c260:	4629      	mov	r1, r5
1004c262:	9803      	ldr	r0, [sp, #12]
1004c264:	f009 fe47 	bl	10055ef6 <acl_list_remove>
1004c268:	2101      	movs	r1, #1
1004c26a:	4628      	mov	r0, r5
1004c26c:	f004 fab2 	bl	100507d4 <PM_Release_Acl_Pckt>
1004c270:	463d      	mov	r5, r7
1004c272:	2d00      	cmp	r5, #0
1004c274:	d000      	beq.n	1004c278 <Process_Peer_Client_Data+0x1a8>
1004c276:	e741      	b.n	1004c0fc <Process_Peer_Client_Data+0x2c>
1004c278:	b005      	add	sp, #20
1004c27a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c27c:	68a0      	ldr	r0, [r4, #8]
1004c27e:	6826      	ldr	r6, [r4, #0]
1004c280:	7b07      	ldrb	r7, [r0, #12]
1004c282:	88a0      	ldrh	r0, [r4, #4]
1004c284:	f7fe f99c 	bl	1004a5c0 <Find_Gatt_Client>
1004c288:	0005      	movs	r5, r0
1004c28a:	d00d      	beq.n	1004c2a8 <Process_Peer_Client_Data+0x1d8>
1004c28c:	2f52      	cmp	r7, #82	; 0x52
1004c28e:	d001      	beq.n	1004c294 <Process_Peer_Client_Data+0x1c4>
1004c290:	2fd2      	cmp	r7, #210	; 0xd2
1004c292:	d106      	bne.n	1004c2a2 <Process_Peer_Client_Data+0x1d2>
1004c294:	6928      	ldr	r0, [r5, #16]
1004c296:	0340      	lsls	r0, r0, #13
1004c298:	d40e      	bmi.n	1004c2b8 <Process_Peer_Client_Data+0x1e8>
1004c29a:	4621      	mov	r1, r4
1004c29c:	4628      	mov	r0, r5
1004c29e:	f00b fafa 	bl	10057896 <Write_Cmd>
1004c2a2:	6928      	ldr	r0, [r5, #16]
1004c2a4:	0340      	lsls	r0, r0, #13
1004c2a6:	d407      	bmi.n	1004c2b8 <Process_Peer_Client_Data+0x1e8>
1004c2a8:	4621      	mov	r1, r4
1004c2aa:	9800      	ldr	r0, [sp, #0]
1004c2ac:	f009 fe23 	bl	10055ef6 <acl_list_remove>
1004c2b0:	2101      	movs	r1, #1
1004c2b2:	4620      	mov	r0, r4
1004c2b4:	f004 fa8e 	bl	100507d4 <PM_Release_Acl_Pckt>
1004c2b8:	4634      	mov	r4, r6
1004c2ba:	2c00      	cmp	r4, #0
1004c2bc:	d1de      	bne.n	1004c27c <Process_Peer_Client_Data+0x1ac>
1004c2be:	e7db      	b.n	1004c278 <Process_Peer_Client_Data+0x1a8>
1004c2c0:	2000098c 	.word	0x2000098c
1004c2c4:	0000072c 	.word	0x0000072c

1004c2c8 <Process_Peer_Server_Data>:
1004c2c8:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c2ca:	4858      	ldr	r0, [pc, #352]	; (1004c42c <Process_Peer_Server_Data+0x164>)
1004c2cc:	4a58      	ldr	r2, [pc, #352]	; (1004c430 <Process_Peer_Server_Data+0x168>)
1004c2ce:	6801      	ldr	r1, [r0, #0]
1004c2d0:	b085      	sub	sp, #20
1004c2d2:	188a      	adds	r2, r1, r2
1004c2d4:	9204      	str	r2, [sp, #16]
1004c2d6:	2209      	movs	r2, #9
1004c2d8:	0212      	lsls	r2, r2, #8
1004c2da:	1889      	adds	r1, r1, r2
1004c2dc:	2700      	movs	r7, #0
1004c2de:	6b4d      	ldr	r5, [r1, #52]	; 0x34
1004c2e0:	e095      	b.n	1004c40e <Process_Peer_Server_Data+0x146>
1004c2e2:	017e      	lsls	r6, r7, #5
1004c2e4:	5ba8      	ldrh	r0, [r5, r6]
1004c2e6:	2800      	cmp	r0, #0
1004c2e8:	d07b      	beq.n	1004c3e2 <Process_Peer_Server_Data+0x11a>
1004c2ea:	1970      	adds	r0, r6, r5
1004c2ec:	9000      	str	r0, [sp, #0]
1004c2ee:	69c0      	ldr	r0, [r0, #28]
1004c2f0:	2800      	cmp	r0, #0
1004c2f2:	d04b      	beq.n	1004c38c <Process_Peer_Server_Data+0xc4>
1004c2f4:	9900      	ldr	r1, [sp, #0]
1004c2f6:	6909      	ldr	r1, [r1, #16]
1004c2f8:	05ca      	lsls	r2, r1, #23
1004c2fa:	d532      	bpl.n	1004c362 <Process_Peer_Server_Data+0x9a>
1004c2fc:	054a      	lsls	r2, r1, #21
1004c2fe:	d530      	bpl.n	1004c362 <Process_Peer_Server_Data+0x9a>
1004c300:	6880      	ldr	r0, [r0, #8]
1004c302:	2401      	movs	r4, #1
1004c304:	02a4      	lsls	r4, r4, #10
1004c306:	7b00      	ldrb	r0, [r0, #12]
1004c308:	43a1      	bics	r1, r4
1004c30a:	9a00      	ldr	r2, [sp, #0]
1004c30c:	281d      	cmp	r0, #29
1004c30e:	6111      	str	r1, [r2, #16]
1004c310:	d039      	beq.n	1004c386 <Process_Peer_Server_Data+0xbe>
1004c312:	281b      	cmp	r0, #27
1004c314:	d037      	beq.n	1004c386 <Process_Peer_Server_Data+0xbe>
1004c316:	9a00      	ldr	r2, [sp, #0]
1004c318:	7b92      	ldrb	r2, [r2, #14]
1004c31a:	4282      	cmp	r2, r0
1004c31c:	d002      	beq.n	1004c324 <Process_Peer_Server_Data+0x5c>
1004c31e:	2801      	cmp	r0, #1
1004c320:	d002      	beq.n	1004c328 <Process_Peer_Server_Data+0x60>
1004c322:	e030      	b.n	1004c386 <Process_Peer_Server_Data+0xbe>
1004c324:	2801      	cmp	r0, #1
1004c326:	d106      	bne.n	1004c336 <Process_Peer_Server_Data+0x6e>
1004c328:	9800      	ldr	r0, [sp, #0]
1004c32a:	69c0      	ldr	r0, [r0, #28]
1004c32c:	6880      	ldr	r0, [r0, #8]
1004c32e:	7b40      	ldrb	r0, [r0, #13]
1004c330:	1c40      	adds	r0, r0, #1
1004c332:	4282      	cmp	r2, r0
1004c334:	d169      	bne.n	1004c40a <Process_Peer_Server_Data+0x142>
1004c336:	05c8      	lsls	r0, r1, #23
1004c338:	d509      	bpl.n	1004c34e <Process_Peer_Server_Data+0x86>
1004c33a:	5ba9      	ldrh	r1, [r5, r6]
1004c33c:	2002      	movs	r0, #2
1004c33e:	f004 fd97 	bl	10050e70 <Stop_Gatt_Timer>
1004c342:	9800      	ldr	r0, [sp, #0]
1004c344:	22ff      	movs	r2, #255	; 0xff
1004c346:	6901      	ldr	r1, [r0, #16]
1004c348:	3201      	adds	r2, #1
1004c34a:	4391      	bics	r1, r2
1004c34c:	6101      	str	r1, [r0, #16]
1004c34e:	9800      	ldr	r0, [sp, #0]
1004c350:	6981      	ldr	r1, [r0, #24]
1004c352:	4788      	blx	r1
1004c354:	2845      	cmp	r0, #69	; 0x45
1004c356:	d116      	bne.n	1004c386 <Process_Peer_Server_Data+0xbe>
1004c358:	9800      	ldr	r0, [sp, #0]
1004c35a:	6901      	ldr	r1, [r0, #16]
1004c35c:	4321      	orrs	r1, r4
1004c35e:	6101      	str	r1, [r0, #16]
1004c360:	e011      	b.n	1004c386 <Process_Peer_Server_Data+0xbe>
1004c362:	2101      	movs	r1, #1
1004c364:	f004 fa36 	bl	100507d4 <PM_Release_Acl_Pckt>
1004c368:	9800      	ldr	r0, [sp, #0]
1004c36a:	2100      	movs	r1, #0
1004c36c:	61c1      	str	r1, [r0, #28]
1004c36e:	9800      	ldr	r0, [sp, #0]
1004c370:	2201      	movs	r2, #1
1004c372:	6901      	ldr	r1, [r0, #16]
1004c374:	0292      	lsls	r2, r2, #10
1004c376:	4391      	bics	r1, r2
1004c378:	6101      	str	r1, [r0, #16]
1004c37a:	2202      	movs	r2, #2
1004c37c:	4611      	mov	r1, r2
1004c37e:	2042      	movs	r0, #66	; 0x42
1004c380:	9b00      	ldr	r3, [sp, #0]
1004c382:	f000 f935 	bl	1004c5f0 <aci_hal_fw_error_event_push>
1004c386:	5ba8      	ldrh	r0, [r5, r6]
1004c388:	2800      	cmp	r0, #0
1004c38a:	d03e      	beq.n	1004c40a <Process_Peer_Server_Data+0x142>
1004c38c:	9804      	ldr	r0, [sp, #16]
1004c38e:	3024      	adds	r0, #36	; 0x24
1004c390:	9001      	str	r0, [sp, #4]
1004c392:	f009 fd63 	bl	10055e5c <acl_list_first>
1004c396:	4604      	mov	r4, r0
1004c398:	e035      	b.n	1004c406 <Process_Peer_Server_Data+0x13e>
1004c39a:	6820      	ldr	r0, [r4, #0]
1004c39c:	9003      	str	r0, [sp, #12]
1004c39e:	68a0      	ldr	r0, [r4, #8]
1004c3a0:	5bab      	ldrh	r3, [r5, r6]
1004c3a2:	7b01      	ldrb	r1, [r0, #12]
1004c3a4:	88a0      	ldrh	r0, [r4, #4]
1004c3a6:	051a      	lsls	r2, r3, #20
1004c3a8:	0d12      	lsrs	r2, r2, #20
1004c3aa:	4290      	cmp	r0, r2
1004c3ac:	d101      	bne.n	1004c3b2 <Process_Peer_Server_Data+0xea>
1004c3ae:	291d      	cmp	r1, #29
1004c3b0:	d004      	beq.n	1004c3bc <Process_Peer_Server_Data+0xf4>
1004c3b2:	4290      	cmp	r0, r2
1004c3b4:	d126      	bne.n	1004c404 <Process_Peer_Server_Data+0x13c>
1004c3b6:	291b      	cmp	r1, #27
1004c3b8:	d032      	beq.n	1004c420 <Process_Peer_Server_Data+0x158>
1004c3ba:	e023      	b.n	1004c404 <Process_Peer_Server_Data+0x13c>
1004c3bc:	9900      	ldr	r1, [sp, #0]
1004c3be:	6909      	ldr	r1, [r1, #16]
1004c3c0:	04ca      	lsls	r2, r1, #19
1004c3c2:	d40f      	bmi.n	1004c3e4 <Process_Peer_Server_Data+0x11c>
1004c3c4:	2201      	movs	r2, #1
1004c3c6:	0312      	lsls	r2, r2, #12
1004c3c8:	9800      	ldr	r0, [sp, #0]
1004c3ca:	4311      	orrs	r1, r2
1004c3cc:	6101      	str	r1, [r0, #16]
1004c3ce:	5ba9      	ldrh	r1, [r5, r6]
1004c3d0:	2003      	movs	r0, #3
1004c3d2:	f004 fd3b 	bl	10050e4c <Start_Gatt_Timer>
1004c3d6:	5ba9      	ldrh	r1, [r5, r6]
1004c3d8:	4622      	mov	r2, r4
1004c3da:	2002      	movs	r0, #2
1004c3dc:	f000 f878 	bl	1004c4d0 <aci_gatt_indication_event_push>
1004c3e0:	e008      	b.n	1004c3f4 <Process_Peer_Server_Data+0x12c>
1004c3e2:	e012      	b.n	1004c40a <Process_Peer_Server_Data+0x142>
1004c3e4:	4669      	mov	r1, sp
1004c3e6:	8108      	strh	r0, [r1, #8]
1004c3e8:	ab02      	add	r3, sp, #8
1004c3ea:	2202      	movs	r2, #2
1004c3ec:	2103      	movs	r1, #3
1004c3ee:	2042      	movs	r0, #66	; 0x42
1004c3f0:	f000 f8fe 	bl	1004c5f0 <aci_hal_fw_error_event_push>
1004c3f4:	4621      	mov	r1, r4
1004c3f6:	9801      	ldr	r0, [sp, #4]
1004c3f8:	f009 fd7d 	bl	10055ef6 <acl_list_remove>
1004c3fc:	2101      	movs	r1, #1
1004c3fe:	4620      	mov	r0, r4
1004c400:	f004 f9e8 	bl	100507d4 <PM_Release_Acl_Pckt>
1004c404:	9c03      	ldr	r4, [sp, #12]
1004c406:	2c00      	cmp	r4, #0
1004c408:	d1c7      	bne.n	1004c39a <Process_Peer_Server_Data+0xd2>
1004c40a:	1c7f      	adds	r7, r7, #1
1004c40c:	b2ff      	uxtb	r7, r7
1004c40e:	4807      	ldr	r0, [pc, #28]	; (1004c42c <Process_Peer_Server_Data+0x164>)
1004c410:	6800      	ldr	r0, [r0, #0]
1004c412:	30a0      	adds	r0, #160	; 0xa0
1004c414:	7b00      	ldrb	r0, [r0, #12]
1004c416:	42b8      	cmp	r0, r7
1004c418:	d900      	bls.n	1004c41c <Process_Peer_Server_Data+0x154>
1004c41a:	e762      	b.n	1004c2e2 <Process_Peer_Server_Data+0x1a>
1004c41c:	b005      	add	sp, #20
1004c41e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c420:	4622      	mov	r2, r4
1004c422:	4619      	mov	r1, r3
1004c424:	2002      	movs	r0, #2
1004c426:	f000 f89b 	bl	1004c560 <aci_gatt_notification_event_push>
1004c42a:	e7e3      	b.n	1004c3f4 <Process_Peer_Server_Data+0x12c>
1004c42c:	2000098c 	.word	0x2000098c
1004c430:	0000072c 	.word	0x0000072c

1004c434 <Select_Next_Notification_Client>:
1004c434:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c436:	4694      	mov	ip, r2
1004c438:	2200      	movs	r2, #0
1004c43a:	800a      	strh	r2, [r1, #0]
1004c43c:	4663      	mov	r3, ip
1004c43e:	4c10      	ldr	r4, [pc, #64]	; (1004c480 <Select_Next_Notification_Client+0x4c>)
1004c440:	601a      	str	r2, [r3, #0]
1004c442:	2309      	movs	r3, #9
1004c444:	6822      	ldr	r2, [r4, #0]
1004c446:	021b      	lsls	r3, r3, #8
1004c448:	4686      	mov	lr, r0
1004c44a:	18d2      	adds	r2, r2, r3
1004c44c:	2041      	movs	r0, #65	; 0x41
1004c44e:	6b52      	ldr	r2, [r2, #52]	; 0x34
1004c450:	2300      	movs	r3, #0
1004c452:	e00f      	b.n	1004c474 <Select_Next_Notification_Client+0x40>
1004c454:	015d      	lsls	r5, r3, #5
1004c456:	18ad      	adds	r5, r5, r2
1004c458:	692f      	ldr	r7, [r5, #16]
1004c45a:	4676      	mov	r6, lr
1004c45c:	4237      	tst	r7, r6
1004c45e:	d007      	beq.n	1004c470 <Select_Next_Notification_Client+0x3c>
1004c460:	886f      	ldrh	r7, [r5, #2]
1004c462:	880e      	ldrh	r6, [r1, #0]
1004c464:	42b7      	cmp	r7, r6
1004c466:	d903      	bls.n	1004c470 <Select_Next_Notification_Client+0x3c>
1004c468:	800f      	strh	r7, [r1, #0]
1004c46a:	4660      	mov	r0, ip
1004c46c:	6005      	str	r5, [r0, #0]
1004c46e:	2000      	movs	r0, #0
1004c470:	1c5b      	adds	r3, r3, #1
1004c472:	b2db      	uxtb	r3, r3
1004c474:	6825      	ldr	r5, [r4, #0]
1004c476:	35a0      	adds	r5, #160	; 0xa0
1004c478:	7b2d      	ldrb	r5, [r5, #12]
1004c47a:	429d      	cmp	r5, r3
1004c47c:	d8ea      	bhi.n	1004c454 <Select_Next_Notification_Client+0x20>
1004c47e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c480:	2000098c 	.word	0x2000098c

1004c484 <Send_Notif_Or_Ind>:
1004c484:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004c486:	460c      	mov	r4, r1
1004c488:	4605      	mov	r5, r0
1004c48a:	466a      	mov	r2, sp
1004c48c:	a901      	add	r1, sp, #4
1004c48e:	f7ff ffd1 	bl	1004c434 <Select_Next_Notification_Client>
1004c492:	2800      	cmp	r0, #0
1004c494:	d001      	beq.n	1004c49a <Send_Notif_Or_Ind+0x16>
1004c496:	2041      	movs	r0, #65	; 0x41
1004c498:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004c49a:	4668      	mov	r0, sp
1004c49c:	88e1      	ldrh	r1, [r4, #6]
1004c49e:	8880      	ldrh	r0, [r0, #4]
1004c4a0:	4281      	cmp	r1, r0
1004c4a2:	d900      	bls.n	1004c4a6 <Send_Notif_Or_Ind+0x22>
1004c4a4:	80e0      	strh	r0, [r4, #6]
1004c4a6:	9800      	ldr	r0, [sp, #0]
1004c4a8:	8800      	ldrh	r0, [r0, #0]
1004c4aa:	80a0      	strh	r0, [r4, #4]
1004c4ac:	4620      	mov	r0, r4
1004c4ae:	f7fe fac5 	bl	1004aa3c <GATT_Send_Packet>
1004c4b2:	9800      	ldr	r0, [sp, #0]
1004c4b4:	2d01      	cmp	r5, #1
1004c4b6:	d007      	beq.n	1004c4c8 <Send_Notif_Or_Ind+0x44>
1004c4b8:	6901      	ldr	r1, [r0, #16]
1004c4ba:	2208      	movs	r2, #8
1004c4bc:	4311      	orrs	r1, r2
1004c4be:	2202      	movs	r2, #2
1004c4c0:	4391      	bics	r1, r2
1004c4c2:	6101      	str	r1, [r0, #16]
1004c4c4:	2000      	movs	r0, #0
1004c4c6:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004c4c8:	6901      	ldr	r1, [r0, #16]
1004c4ca:	0849      	lsrs	r1, r1, #1
1004c4cc:	0049      	lsls	r1, r1, #1
1004c4ce:	e7f8      	b.n	1004c4c2 <Send_Notif_Or_Ind+0x3e>

1004c4d0 <aci_gatt_indication_event_push>:
1004c4d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004c4d2:	4606      	mov	r6, r0
1004c4d4:	7990      	ldrb	r0, [r2, #6]
1004c4d6:	6891      	ldr	r1, [r2, #8]
1004c4d8:	1ec0      	subs	r0, r0, #3
1004c4da:	b082      	sub	sp, #8
1004c4dc:	4617      	mov	r7, r2
1004c4de:	b2c5      	uxtb	r5, r0
1004c4e0:	2202      	movs	r2, #2
1004c4e2:	4668      	mov	r0, sp
1004c4e4:	310d      	adds	r1, #13
1004c4e6:	f7f6 fe6a 	bl	100431be <Osal_MemCpy>
1004c4ea:	1d68      	adds	r0, r5, #5
1004c4ec:	2103      	movs	r1, #3
1004c4ee:	4308      	orrs	r0, r1
1004c4f0:	1c40      	adds	r0, r0, #1
1004c4f2:	0883      	lsrs	r3, r0, #2
1004c4f4:	4819      	ldr	r0, [pc, #100]	; (1004c55c <aci_gatt_indication_event_push+0x8c>)
1004c4f6:	06f1      	lsls	r1, r6, #27
1004c4f8:	d503      	bpl.n	1004c502 <aci_gatt_indication_event_push+0x32>
1004c4fa:	2232      	movs	r2, #50	; 0x32
1004c4fc:	21bf      	movs	r1, #191	; 0xbf
1004c4fe:	400e      	ands	r6, r1
1004c500:	e00a      	b.n	1004c518 <aci_gatt_indication_event_push+0x48>
1004c502:	2237      	movs	r2, #55	; 0x37
1004c504:	6801      	ldr	r1, [r0, #0]
1004c506:	0152      	lsls	r2, r2, #5
1004c508:	1889      	adds	r1, r1, r2
1004c50a:	7b49      	ldrb	r1, [r1, #13]
1004c50c:	0689      	lsls	r1, r1, #26
1004c50e:	d402      	bmi.n	1004c516 <aci_gatt_indication_event_push+0x46>
1004c510:	2000      	movs	r0, #0
1004c512:	b005      	add	sp, #20
1004c514:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c516:	222f      	movs	r2, #47	; 0x2f
1004c518:	0731      	lsls	r1, r6, #28
1004c51a:	6800      	ldr	r0, [r0, #0]
1004c51c:	0e89      	lsrs	r1, r1, #26
1004c51e:	1808      	adds	r0, r1, r0
1004c520:	2101      	movs	r1, #1
1004c522:	02c9      	lsls	r1, r1, #11
1004c524:	1840      	adds	r0, r0, r1
1004c526:	6940      	ldr	r0, [r0, #20]
1004c528:	4631      	mov	r1, r6
1004c52a:	f008 fe5f 	bl	100551ec <aci_event_fifo_push_header>
1004c52e:	0004      	movs	r4, r0
1004c530:	d011      	beq.n	1004c556 <aci_gatt_indication_event_push+0x86>
1004c532:	9803      	ldr	r0, [sp, #12]
1004c534:	80a0      	strh	r0, [r4, #4]
1004c536:	4668      	mov	r0, sp
1004c538:	8800      	ldrh	r0, [r0, #0]
1004c53a:	80e0      	strh	r0, [r4, #6]
1004c53c:	4623      	mov	r3, r4
1004c53e:	7225      	strb	r5, [r4, #8]
1004c540:	462a      	mov	r2, r5
1004c542:	2107      	movs	r1, #7
1004c544:	4638      	mov	r0, r7
1004c546:	3309      	adds	r3, #9
1004c548:	f004 f8a8 	bl	1005069c <PM_Copy_Pckt_Data>
1004c54c:	4621      	mov	r1, r4
1004c54e:	4630      	mov	r0, r6
1004c550:	f008 fe38 	bl	100551c4 <aci_event_fifo_push>
1004c554:	e7dc      	b.n	1004c510 <aci_gatt_indication_event_push+0x40>
1004c556:	2007      	movs	r0, #7
1004c558:	e7db      	b.n	1004c512 <aci_gatt_indication_event_push+0x42>
1004c55a:	0000      	.short	0x0000
1004c55c:	2000098c 	.word	0x2000098c

1004c560 <aci_gatt_notification_event_push>:
1004c560:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004c562:	4606      	mov	r6, r0
1004c564:	7990      	ldrb	r0, [r2, #6]
1004c566:	6891      	ldr	r1, [r2, #8]
1004c568:	1ec0      	subs	r0, r0, #3
1004c56a:	b082      	sub	sp, #8
1004c56c:	4617      	mov	r7, r2
1004c56e:	b2c5      	uxtb	r5, r0
1004c570:	2202      	movs	r2, #2
1004c572:	4668      	mov	r0, sp
1004c574:	310d      	adds	r1, #13
1004c576:	f7f6 fe22 	bl	100431be <Osal_MemCpy>
1004c57a:	1d68      	adds	r0, r5, #5
1004c57c:	2103      	movs	r1, #3
1004c57e:	4308      	orrs	r0, r1
1004c580:	1c40      	adds	r0, r0, #1
1004c582:	0883      	lsrs	r3, r0, #2
1004c584:	4819      	ldr	r0, [pc, #100]	; (1004c5ec <aci_gatt_notification_event_push+0x8c>)
1004c586:	06f1      	lsls	r1, r6, #27
1004c588:	d503      	bpl.n	1004c592 <aci_gatt_notification_event_push+0x32>
1004c58a:	2233      	movs	r2, #51	; 0x33
1004c58c:	21bf      	movs	r1, #191	; 0xbf
1004c58e:	400e      	ands	r6, r1
1004c590:	e00a      	b.n	1004c5a8 <aci_gatt_notification_event_push+0x48>
1004c592:	2237      	movs	r2, #55	; 0x37
1004c594:	6801      	ldr	r1, [r0, #0]
1004c596:	0152      	lsls	r2, r2, #5
1004c598:	1889      	adds	r1, r1, r2
1004c59a:	7b49      	ldrb	r1, [r1, #13]
1004c59c:	0649      	lsls	r1, r1, #25
1004c59e:	d402      	bmi.n	1004c5a6 <aci_gatt_notification_event_push+0x46>
1004c5a0:	2000      	movs	r0, #0
1004c5a2:	b005      	add	sp, #20
1004c5a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c5a6:	2230      	movs	r2, #48	; 0x30
1004c5a8:	0731      	lsls	r1, r6, #28
1004c5aa:	6800      	ldr	r0, [r0, #0]
1004c5ac:	0e89      	lsrs	r1, r1, #26
1004c5ae:	1808      	adds	r0, r1, r0
1004c5b0:	2101      	movs	r1, #1
1004c5b2:	02c9      	lsls	r1, r1, #11
1004c5b4:	1840      	adds	r0, r0, r1
1004c5b6:	6940      	ldr	r0, [r0, #20]
1004c5b8:	4631      	mov	r1, r6
1004c5ba:	f008 fe17 	bl	100551ec <aci_event_fifo_push_header>
1004c5be:	0004      	movs	r4, r0
1004c5c0:	d011      	beq.n	1004c5e6 <aci_gatt_notification_event_push+0x86>
1004c5c2:	9803      	ldr	r0, [sp, #12]
1004c5c4:	80a0      	strh	r0, [r4, #4]
1004c5c6:	4668      	mov	r0, sp
1004c5c8:	8800      	ldrh	r0, [r0, #0]
1004c5ca:	80e0      	strh	r0, [r4, #6]
1004c5cc:	4623      	mov	r3, r4
1004c5ce:	7225      	strb	r5, [r4, #8]
1004c5d0:	462a      	mov	r2, r5
1004c5d2:	2107      	movs	r1, #7
1004c5d4:	4638      	mov	r0, r7
1004c5d6:	3309      	adds	r3, #9
1004c5d8:	f004 f860 	bl	1005069c <PM_Copy_Pckt_Data>
1004c5dc:	4621      	mov	r1, r4
1004c5de:	4630      	mov	r0, r6
1004c5e0:	f008 fdf0 	bl	100551c4 <aci_event_fifo_push>
1004c5e4:	e7dc      	b.n	1004c5a0 <aci_gatt_notification_event_push+0x40>
1004c5e6:	2007      	movs	r0, #7
1004c5e8:	e7db      	b.n	1004c5a2 <aci_gatt_notification_event_push+0x42>
1004c5ea:	0000      	.short	0x0000
1004c5ec:	2000098c 	.word	0x2000098c

1004c5f0 <aci_hal_fw_error_event_push>:
1004c5f0:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004c5f2:	4605      	mov	r5, r0
1004c5f4:	2301      	movs	r3, #1
1004c5f6:	b081      	sub	sp, #4
1004c5f8:	4616      	mov	r6, r2
1004c5fa:	460f      	mov	r7, r1
1004c5fc:	06c0      	lsls	r0, r0, #27
1004c5fe:	d503      	bpl.n	1004c608 <aci_hal_fw_error_event_push+0x18>
1004c600:	2224      	movs	r2, #36	; 0x24
1004c602:	20bf      	movs	r0, #191	; 0xbf
1004c604:	4005      	ands	r5, r0
1004c606:	e000      	b.n	1004c60a <aci_hal_fw_error_event_push+0x1a>
1004c608:	2221      	movs	r2, #33	; 0x21
1004c60a:	490f      	ldr	r1, [pc, #60]	; (1004c648 <aci_hal_fw_error_event_push+0x58>)
1004c60c:	0728      	lsls	r0, r5, #28
1004c60e:	6809      	ldr	r1, [r1, #0]
1004c610:	0e80      	lsrs	r0, r0, #26
1004c612:	1840      	adds	r0, r0, r1
1004c614:	2101      	movs	r1, #1
1004c616:	02c9      	lsls	r1, r1, #11
1004c618:	1840      	adds	r0, r0, r1
1004c61a:	6940      	ldr	r0, [r0, #20]
1004c61c:	4629      	mov	r1, r5
1004c61e:	f008 fde5 	bl	100551ec <aci_event_fifo_push_header>
1004c622:	0004      	movs	r4, r0
1004c624:	d00d      	beq.n	1004c642 <aci_hal_fw_error_event_push+0x52>
1004c626:	7127      	strb	r7, [r4, #4]
1004c628:	7166      	strb	r6, [r4, #5]
1004c62a:	4632      	mov	r2, r6
1004c62c:	1da0      	adds	r0, r4, #6
1004c62e:	9904      	ldr	r1, [sp, #16]
1004c630:	f7f6 fdc5 	bl	100431be <Osal_MemCpy>
1004c634:	4621      	mov	r1, r4
1004c636:	4628      	mov	r0, r5
1004c638:	f008 fdc4 	bl	100551c4 <aci_event_fifo_push>
1004c63c:	2000      	movs	r0, #0
1004c63e:	b005      	add	sp, #20
1004c640:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c642:	2007      	movs	r0, #7
1004c644:	e7fb      	b.n	1004c63e <aci_hal_fw_error_event_push+0x4e>
1004c646:	0000      	.short	0x0000
1004c648:	2000098c 	.word	0x2000098c

1004c64c <store_data>:
1004c64c:	b510      	push	{r4, lr}
1004c64e:	881c      	ldrh	r4, [r3, #0]
1004c650:	18a4      	adds	r4, r4, r2
1004c652:	b2a4      	uxth	r4, r4
1004c654:	801c      	strh	r4, [r3, #0]
1004c656:	2301      	movs	r3, #1
1004c658:	025b      	lsls	r3, r3, #9
1004c65a:	429c      	cmp	r4, r3
1004c65c:	d803      	bhi.n	1004c666 <store_data+0x1a>
1004c65e:	f7f6 fdae 	bl	100431be <Osal_MemCpy>
1004c662:	2000      	movs	r0, #0
1004c664:	bd10      	pop	{r4, pc}
1004c666:	2041      	movs	r0, #65	; 0x41
1004c668:	bd10      	pop	{r4, pc}

1004c66a <__ARM_common_switch8>:
1004c66a:	b430      	push	{r4, r5}
1004c66c:	4674      	mov	r4, lr
1004c66e:	1e64      	subs	r4, r4, #1
1004c670:	7825      	ldrb	r5, [r4, #0]
1004c672:	1c64      	adds	r4, r4, #1
1004c674:	42ab      	cmp	r3, r5
1004c676:	d200      	bcs.n	1004c67a <__ARM_common_switch8+0x10>
1004c678:	461d      	mov	r5, r3
1004c67a:	5d63      	ldrb	r3, [r4, r5]
1004c67c:	005b      	lsls	r3, r3, #1
1004c67e:	18e3      	adds	r3, r4, r3
1004c680:	bc30      	pop	{r4, r5}
1004c682:	4718      	bx	r3

1004c684 <HAL_Flash_Store_Data>:
1004c684:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004c686:	4616      	mov	r6, r2
1004c688:	2400      	movs	r4, #0
1004c68a:	e01c      	b.n	1004c6c6 <HAL_Flash_Store_Data+0x42>
1004c68c:	9800      	ldr	r0, [sp, #0]
1004c68e:	4911      	ldr	r1, [pc, #68]	; (1004c6d4 <HAL_Flash_Store_Data+0x50>)
1004c690:	1900      	adds	r0, r0, r4
1004c692:	1840      	adds	r0, r0, r1
1004c694:	0881      	lsrs	r1, r0, #2
1004c696:	9801      	ldr	r0, [sp, #4]
1004c698:	0089      	lsls	r1, r1, #2
1004c69a:	1900      	adds	r0, r0, r4
1004c69c:	7842      	ldrb	r2, [r0, #1]
1004c69e:	7805      	ldrb	r5, [r0, #0]
1004c6a0:	0212      	lsls	r2, r2, #8
1004c6a2:	4315      	orrs	r5, r2
1004c6a4:	7882      	ldrb	r2, [r0, #2]
1004c6a6:	78c0      	ldrb	r0, [r0, #3]
1004c6a8:	0412      	lsls	r2, r2, #16
1004c6aa:	0600      	lsls	r0, r0, #24
1004c6ac:	4302      	orrs	r2, r0
1004c6ae:	4809      	ldr	r0, [pc, #36]	; (1004c6d4 <HAL_Flash_Store_Data+0x50>)
1004c6b0:	4315      	orrs	r5, r2
1004c6b2:	4240      	negs	r0, r0
1004c6b4:	180f      	adds	r7, r1, r0
1004c6b6:	4629      	mov	r1, r5
1004c6b8:	4638      	mov	r0, r7
1004c6ba:	f7f7 fbff 	bl	10043ebc <FLASH_ProgramWord>
1004c6be:	6838      	ldr	r0, [r7, #0]
1004c6c0:	4285      	cmp	r5, r0
1004c6c2:	d104      	bne.n	1004c6ce <HAL_Flash_Store_Data+0x4a>
1004c6c4:	1d24      	adds	r4, r4, #4
1004c6c6:	42b4      	cmp	r4, r6
1004c6c8:	d3e0      	bcc.n	1004c68c <HAL_Flash_Store_Data+0x8>
1004c6ca:	2000      	movs	r0, #0
1004c6cc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004c6ce:	20fb      	movs	r0, #251	; 0xfb
1004c6d0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004c6d2:	0000      	.short	0x0000
1004c6d4:	effc0000 	.word	0xeffc0000

1004c6d8 <HAL_Generate_Random_Bytes_To>:
1004c6d8:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c6da:	460e      	mov	r6, r1
1004c6dc:	4607      	mov	r7, r0
1004c6de:	2400      	movs	r4, #0
1004c6e0:	e007      	b.n	1004c6f2 <HAL_Generate_Random_Bytes_To+0x1a>
1004c6e2:	193d      	adds	r5, r7, r4
1004c6e4:	f000 f8b8 	bl	1004c858 <Hal_Get_Random_Number>
1004c6e8:	7028      	strb	r0, [r5, #0]
1004c6ea:	0a00      	lsrs	r0, r0, #8
1004c6ec:	7068      	strb	r0, [r5, #1]
1004c6ee:	1ca4      	adds	r4, r4, #2
1004c6f0:	b2e4      	uxtb	r4, r4
1004c6f2:	42b4      	cmp	r4, r6
1004c6f4:	d3f5      	bcc.n	1004c6e2 <HAL_Generate_Random_Bytes_To+0xa>
1004c6f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004c6f8 <HAL_Set_TX_Power_Level>:
1004c6f8:	b510      	push	{r4, lr}
1004c6fa:	2801      	cmp	r0, #1
1004c6fc:	d818      	bhi.n	1004c730 <HAL_Set_TX_Power_Level+0x38>
1004c6fe:	2907      	cmp	r1, #7
1004c700:	d816      	bhi.n	1004c730 <HAL_Set_TX_Power_Level+0x38>
1004c702:	4a0c      	ldr	r2, [pc, #48]	; (1004c734 <HAL_Set_TX_Power_Level+0x3c>)
1004c704:	6812      	ldr	r2, [r2, #0]
1004c706:	4613      	mov	r3, r2
1004c708:	3320      	adds	r3, #32
1004c70a:	7718      	strb	r0, [r3, #28]
1004c70c:	7759      	strb	r1, [r3, #29]
1004c70e:	0780      	lsls	r0, r0, #30
1004c710:	06c9      	lsls	r1, r1, #27
1004c712:	0e00      	lsrs	r0, r0, #24
1004c714:	0e09      	lsrs	r1, r1, #24
1004c716:	4301      	orrs	r1, r0
1004c718:	2000      	movs	r0, #0
1004c71a:	4b07      	ldr	r3, [pc, #28]	; (1004c738 <HAL_Set_TX_Power_Level+0x40>)
1004c71c:	32a0      	adds	r2, #160	; 0xa0
1004c71e:	e004      	b.n	1004c72a <HAL_Set_TX_Power_Level+0x32>
1004c720:	0184      	lsls	r4, r0, #6
1004c722:	18e4      	adds	r4, r4, r3
1004c724:	72a1      	strb	r1, [r4, #10]
1004c726:	1c40      	adds	r0, r0, #1
1004c728:	b2c0      	uxtb	r0, r0
1004c72a:	7b14      	ldrb	r4, [r2, #12]
1004c72c:	4284      	cmp	r4, r0
1004c72e:	d8f7      	bhi.n	1004c720 <HAL_Set_TX_Power_Level+0x28>
1004c730:	2000      	movs	r0, #0
1004c732:	bd10      	pop	{r4, pc}
1004c734:	2000098c 	.word	0x2000098c
1004c738:	20000100 	.word	0x20000100

1004c73c <HAL_Write_ConfigData>:
1004c73c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004c73e:	4f44      	ldr	r7, [pc, #272]	; (1004c850 <HAL_Write_ConfigData+0x114>)
1004c740:	4604      	mov	r4, r0
1004c742:	6838      	ldr	r0, [r7, #0]
1004c744:	b085      	sub	sp, #20
1004c746:	3078      	adds	r0, #120	; 0x78
1004c748:	4616      	mov	r6, r2
1004c74a:	460d      	mov	r5, r1
1004c74c:	2c00      	cmp	r4, #0
1004c74e:	d019      	beq.n	1004c784 <HAL_Write_ConfigData+0x48>
1004c750:	2c06      	cmp	r4, #6
1004c752:	d011      	beq.n	1004c778 <HAL_Write_ConfigData+0x3c>
1004c754:	2c08      	cmp	r4, #8
1004c756:	d00c      	beq.n	1004c772 <HAL_Write_ConfigData+0x36>
1004c758:	2c18      	cmp	r4, #24
1004c75a:	d00a      	beq.n	1004c772 <HAL_Write_ConfigData+0x36>
1004c75c:	2c28      	cmp	r4, #40	; 0x28
1004c75e:	d00b      	beq.n	1004c778 <HAL_Write_ConfigData+0x3c>
1004c760:	2c2a      	cmp	r4, #42	; 0x2a
1004c762:	d009      	beq.n	1004c778 <HAL_Write_ConfigData+0x3c>
1004c764:	2c2c      	cmp	r4, #44	; 0x2c
1004c766:	d00a      	beq.n	1004c77e <HAL_Write_ConfigData+0x42>
1004c768:	2c2e      	cmp	r4, #46	; 0x2e
1004c76a:	d00b      	beq.n	1004c784 <HAL_Write_ConfigData+0x48>
1004c76c:	2cd0      	cmp	r4, #208	; 0xd0
1004c76e:	d042      	beq.n	1004c7f6 <HAL_Write_ConfigData+0xba>
1004c770:	e043      	b.n	1004c7fa <HAL_Write_ConfigData+0xbe>
1004c772:	2d10      	cmp	r5, #16
1004c774:	d008      	beq.n	1004c788 <HAL_Write_ConfigData+0x4c>
1004c776:	e040      	b.n	1004c7fa <HAL_Write_ConfigData+0xbe>
1004c778:	2d02      	cmp	r5, #2
1004c77a:	d005      	beq.n	1004c788 <HAL_Write_ConfigData+0x4c>
1004c77c:	e03d      	b.n	1004c7fa <HAL_Write_ConfigData+0xbe>
1004c77e:	2d01      	cmp	r5, #1
1004c780:	d002      	beq.n	1004c788 <HAL_Write_ConfigData+0x4c>
1004c782:	e03a      	b.n	1004c7fa <HAL_Write_ConfigData+0xbe>
1004c784:	2d06      	cmp	r5, #6
1004c786:	d138      	bne.n	1004c7fa <HAL_Write_ConfigData+0xbe>
1004c788:	460a      	mov	r2, r1
1004c78a:	1900      	adds	r0, r0, r4
1004c78c:	4631      	mov	r1, r6
1004c78e:	f7f6 fd16 	bl	100431be <Osal_MemCpy>
1004c792:	2c2c      	cmp	r4, #44	; 0x2c
1004c794:	d128      	bne.n	1004c7e8 <HAL_Write_ConfigData+0xac>
1004c796:	7830      	ldrb	r0, [r6, #0]
1004c798:	2800      	cmp	r0, #0
1004c79a:	d025      	beq.n	1004c7e8 <HAL_Write_ConfigData+0xac>
1004c79c:	f000 f939 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004c7a0:	2801      	cmp	r0, #1
1004c7a2:	d024      	beq.n	1004c7ee <HAL_Write_ConfigData+0xb2>
1004c7a4:	201b      	movs	r0, #27
1004c7a6:	301f      	adds	r0, #31
1004c7a8:	0940      	lsrs	r0, r0, #5
1004c7aa:	1c40      	adds	r0, r0, #1
1004c7ac:	0041      	lsls	r1, r0, #1
1004c7ae:	1841      	adds	r1, r0, r1
1004c7b0:	2001      	movs	r0, #1
1004c7b2:	f003 ff7d 	bl	100506b0 <PM_Eng_Config>
1004c7b6:	f000 f92c 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004c7ba:	2801      	cmp	r0, #1
1004c7bc:	d019      	beq.n	1004c7f2 <HAL_Write_ConfigData+0xb6>
1004c7be:	201b      	movs	r0, #27
1004c7c0:	301f      	adds	r0, #31
1004c7c2:	0940      	lsrs	r0, r0, #5
1004c7c4:	0041      	lsls	r1, r0, #1
1004c7c6:	1841      	adds	r1, r0, r1
1004c7c8:	4822      	ldr	r0, [pc, #136]	; (1004c854 <HAL_Write_ConfigData+0x118>)
1004c7ca:	7840      	ldrb	r0, [r0, #1]
1004c7cc:	1a40      	subs	r0, r0, r1
1004c7ce:	1ec0      	subs	r0, r0, #3
1004c7d0:	b2c1      	uxtb	r1, r0
1004c7d2:	2000      	movs	r0, #0
1004c7d4:	f003 ff6c 	bl	100506b0 <PM_Eng_Config>
1004c7d8:	6838      	ldr	r0, [r7, #0]
1004c7da:	2240      	movs	r2, #64	; 0x40
1004c7dc:	3040      	adds	r0, #64	; 0x40
1004c7de:	7801      	ldrb	r1, [r0, #0]
1004c7e0:	4311      	orrs	r1, r2
1004c7e2:	22f9      	movs	r2, #249	; 0xf9
1004c7e4:	4011      	ands	r1, r2
1004c7e6:	7001      	strb	r1, [r0, #0]
1004c7e8:	2000      	movs	r0, #0
1004c7ea:	b005      	add	sp, #20
1004c7ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004c7ee:	20fb      	movs	r0, #251	; 0xfb
1004c7f0:	e7d9      	b.n	1004c7a6 <HAL_Write_ConfigData+0x6a>
1004c7f2:	20fb      	movs	r0, #251	; 0xfb
1004c7f4:	e7e4      	b.n	1004c7c0 <HAL_Write_ConfigData+0x84>
1004c7f6:	2d01      	cmp	r5, #1
1004c7f8:	d004      	beq.n	1004c804 <HAL_Write_ConfigData+0xc8>
1004c7fa:	f000 f90a 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004c7fe:	2801      	cmp	r0, #1
1004c800:	d004      	beq.n	1004c80c <HAL_Write_ConfigData+0xd0>
1004c802:	e007      	b.n	1004c814 <HAL_Write_ConfigData+0xd8>
1004c804:	7810      	ldrb	r0, [r2, #0]
1004c806:	f008 fbfc 	bl	10055002 <SMP_sc_force_debug_key_usage>
1004c80a:	e7ee      	b.n	1004c7ea <HAL_Write_ConfigData+0xae>
1004c80c:	2cd1      	cmp	r4, #209	; 0xd1
1004c80e:	d101      	bne.n	1004c814 <HAL_Write_ConfigData+0xd8>
1004c810:	2d08      	cmp	r5, #8
1004c812:	d001      	beq.n	1004c818 <HAL_Write_ConfigData+0xdc>
1004c814:	2012      	movs	r0, #18
1004c816:	e7e8      	b.n	1004c7ea <HAL_Write_ConfigData+0xae>
1004c818:	2202      	movs	r2, #2
1004c81a:	4631      	mov	r1, r6
1004c81c:	4668      	mov	r0, sp
1004c81e:	f7f6 fcce 	bl	100431be <Osal_MemCpy>
1004c822:	2202      	movs	r2, #2
1004c824:	1cb1      	adds	r1, r6, #2
1004c826:	a801      	add	r0, sp, #4
1004c828:	f7f6 fcc9 	bl	100431be <Osal_MemCpy>
1004c82c:	2202      	movs	r2, #2
1004c82e:	1d31      	adds	r1, r6, #4
1004c830:	a802      	add	r0, sp, #8
1004c832:	f7f6 fcc4 	bl	100431be <Osal_MemCpy>
1004c836:	2202      	movs	r2, #2
1004c838:	1db1      	adds	r1, r6, #6
1004c83a:	a803      	add	r0, sp, #12
1004c83c:	f7f6 fcbf 	bl	100431be <Osal_MemCpy>
1004c840:	4668      	mov	r0, sp
1004c842:	8983      	ldrh	r3, [r0, #12]
1004c844:	8902      	ldrh	r2, [r0, #8]
1004c846:	8881      	ldrh	r1, [r0, #4]
1004c848:	8800      	ldrh	r0, [r0, #0]
1004c84a:	f002 f859 	bl	1004e900 <ll_write_supported_data_ucfg>
1004c84e:	e7cc      	b.n	1004c7ea <HAL_Write_ConfigData+0xae>
1004c850:	2000098c 	.word	0x2000098c
1004c854:	200002ec 	.word	0x200002ec

1004c858 <Hal_Get_Random_Number>:
1004c858:	2100      	movs	r1, #0
1004c85a:	200b      	movs	r0, #11
1004c85c:	0700      	lsls	r0, r0, #28
1004c85e:	6802      	ldr	r2, [r0, #0]
1004c860:	0752      	lsls	r2, r2, #29
1004c862:	d50d      	bpl.n	1004c880 <Hal_Get_Random_Number+0x28>
1004c864:	6802      	ldr	r2, [r0, #0]
1004c866:	2304      	movs	r3, #4
1004c868:	439a      	bics	r2, r3
1004c86a:	6002      	str	r2, [r0, #0]
1004c86c:	6802      	ldr	r2, [r0, #0]
1004c86e:	2308      	movs	r3, #8
1004c870:	431a      	orrs	r2, r3
1004c872:	6002      	str	r2, [r0, #0]
1004c874:	e004      	b.n	1004c880 <Hal_Get_Random_Number+0x28>
1004c876:	1c49      	adds	r1, r1, #1
1004c878:	2905      	cmp	r1, #5
1004c87a:	dd01      	ble.n	1004c880 <Hal_Get_Random_Number+0x28>
1004c87c:	2000      	movs	r0, #0
1004c87e:	4770      	bx	lr
1004c880:	6842      	ldr	r2, [r0, #4]
1004c882:	0792      	lsls	r2, r2, #30
1004c884:	d5f7      	bpl.n	1004c876 <Hal_Get_Random_Number+0x1e>
1004c886:	6841      	ldr	r1, [r0, #4]
1004c888:	07c9      	lsls	r1, r1, #31
1004c88a:	d0fc      	beq.n	1004c886 <Hal_Get_Random_Number+0x2e>
1004c88c:	6880      	ldr	r0, [r0, #8]
1004c88e:	b280      	uxth	r0, r0
1004c890:	4770      	bx	lr

1004c892 <Hal_Get_Random_Number32>:
1004c892:	b510      	push	{r4, lr}
1004c894:	f7ff ffe0 	bl	1004c858 <Hal_Get_Random_Number>
1004c898:	4604      	mov	r4, r0
1004c89a:	f7ff ffdd 	bl	1004c858 <Hal_Get_Random_Number>
1004c89e:	0400      	lsls	r0, r0, #16
1004c8a0:	1820      	adds	r0, r4, r0
1004c8a2:	bd10      	pop	{r4, pc}

1004c8a4 <ble_HAL_Init>:
1004c8a4:	b510      	push	{r4, lr}
1004c8a6:	4804      	ldr	r0, [pc, #16]	; (1004c8b8 <ble_HAL_Init+0x14>)
1004c8a8:	4b04      	ldr	r3, [pc, #16]	; (1004c8bc <ble_HAL_Init+0x18>)
1004c8aa:	6800      	ldr	r0, [r0, #0]
1004c8ac:	2204      	movs	r2, #4
1004c8ae:	2100      	movs	r1, #0
1004c8b0:	18c0      	adds	r0, r0, r3
1004c8b2:	f7f6 fc88 	bl	100431c6 <Osal_MemSet>
1004c8b6:	bd10      	pop	{r4, pc}
1004c8b8:	2000098c 	.word	0x2000098c
1004c8bc:	00000704 	.word	0x00000704

1004c8c0 <char_copy>:
1004c8c0:	e004      	b.n	1004c8cc <char_copy+0xc>
1004c8c2:	7803      	ldrb	r3, [r0, #0]
1004c8c4:	700b      	strb	r3, [r1, #0]
1004c8c6:	1c40      	adds	r0, r0, #1
1004c8c8:	1c49      	adds	r1, r1, #1
1004c8ca:	1e52      	subs	r2, r2, #1
1004c8cc:	2a00      	cmp	r2, #0
1004c8ce:	d1f8      	bne.n	1004c8c2 <char_copy+0x2>
1004c8d0:	4770      	bx	lr
	...

1004c8d4 <hal_radio_activity_state_callback_check>:
1004c8d4:	b53e      	push	{r1, r2, r3, r4, r5, lr}
1004c8d6:	480b      	ldr	r0, [pc, #44]	; (1004c904 <hal_radio_activity_state_callback_check+0x30>)
1004c8d8:	aa01      	add	r2, sp, #4
1004c8da:	6804      	ldr	r4, [r0, #0]
1004c8dc:	4669      	mov	r1, sp
1004c8de:	a802      	add	r0, sp, #8
1004c8e0:	3468      	adds	r4, #104	; 0x68
1004c8e2:	f000 f81f 	bl	1004c924 <hal_read_radio_activity_state>
1004c8e6:	2800      	cmp	r0, #0
1004c8e8:	d00b      	beq.n	1004c902 <hal_radio_activity_state_callback_check+0x2e>
1004c8ea:	4668      	mov	r0, sp
1004c8ec:	7a00      	ldrb	r0, [r0, #8]
1004c8ee:	88e1      	ldrh	r1, [r4, #6]
1004c8f0:	2201      	movs	r2, #1
1004c8f2:	4082      	lsls	r2, r0
1004c8f4:	4211      	tst	r1, r2
1004c8f6:	d004      	beq.n	1004c902 <hal_radio_activity_state_callback_check+0x2e>
1004c8f8:	4669      	mov	r1, sp
1004c8fa:	7809      	ldrb	r1, [r1, #0]
1004c8fc:	9a01      	ldr	r2, [sp, #4]
1004c8fe:	f7fb fc42 	bl	10048186 <aci_hal_end_of_radio_activity_event>
1004c902:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
1004c904:	2000098c 	.word	0x2000098c

1004c908 <hal_radio_activity_state_init>:
1004c908:	4805      	ldr	r0, [pc, #20]	; (1004c920 <hal_radio_activity_state_init+0x18>)
1004c90a:	2100      	movs	r1, #0
1004c90c:	6800      	ldr	r0, [r0, #0]
1004c90e:	3068      	adds	r0, #104	; 0x68
1004c910:	7101      	strb	r1, [r0, #4]
1004c912:	7141      	strb	r1, [r0, #5]
1004c914:	6802      	ldr	r2, [r0, #0]
1004c916:	08d2      	lsrs	r2, r2, #3
1004c918:	00d2      	lsls	r2, r2, #3
1004c91a:	6002      	str	r2, [r0, #0]
1004c91c:	80c1      	strh	r1, [r0, #6]
1004c91e:	4770      	bx	lr
1004c920:	2000098c 	.word	0x2000098c

1004c924 <hal_read_radio_activity_state>:
1004c924:	b570      	push	{r4, r5, r6, lr}
1004c926:	4614      	mov	r4, r2
1004c928:	4a0d      	ldr	r2, [pc, #52]	; (1004c960 <hal_read_radio_activity_state+0x3c>)
1004c92a:	6813      	ldr	r3, [r2, #0]
1004c92c:	b672      	cpsid	i
1004c92e:	3368      	adds	r3, #104	; 0x68
1004c930:	791a      	ldrb	r2, [r3, #4]
1004c932:	2a00      	cmp	r2, #0
1004c934:	d001      	beq.n	1004c93a <hal_read_radio_activity_state+0x16>
1004c936:	2501      	movs	r5, #1
1004c938:	e000      	b.n	1004c93c <hal_read_radio_activity_state+0x18>
1004c93a:	2500      	movs	r5, #0
1004c93c:	2200      	movs	r2, #0
1004c93e:	711a      	strb	r2, [r3, #4]
1004c940:	795a      	ldrb	r2, [r3, #5]
1004c942:	7002      	strb	r2, [r0, #0]
1004c944:	7818      	ldrb	r0, [r3, #0]
1004c946:	0740      	lsls	r0, r0, #29
1004c948:	0f40      	lsrs	r0, r0, #29
1004c94a:	7008      	strb	r0, [r1, #0]
1004c94c:	6818      	ldr	r0, [r3, #0]
1004c94e:	0140      	lsls	r0, r0, #5
1004c950:	0a00      	lsrs	r0, r0, #8
1004c952:	f000 fae1 	bl	1004cf18 <Timer_sysTime32_convMachineTime>
1004c956:	6020      	str	r0, [r4, #0]
1004c958:	b662      	cpsie	i
1004c95a:	4628      	mov	r0, r5
1004c95c:	bd70      	pop	{r4, r5, r6, pc}
1004c95e:	0000      	.short	0x0000
1004c960:	2000098c 	.word	0x2000098c

1004c964 <set_string>:
1004c964:	e003      	b.n	1004c96e <set_string+0xa>
1004c966:	7008      	strb	r0, [r1, #0]
1004c968:	0a00      	lsrs	r0, r0, #8
1004c96a:	1c49      	adds	r1, r1, #1
1004c96c:	1e52      	subs	r2, r2, #1
1004c96e:	2a00      	cmp	r2, #0
1004c970:	d1f9      	bne.n	1004c966 <set_string+0x2>
1004c972:	4770      	bx	lr

1004c974 <Controller_Process_Q>:
1004c974:	b510      	push	{r4, lr}
1004c976:	f001 ff25 	bl	1004e7c4 <PRIV_u8OfflineProcessing_ucfg>
1004c97a:	f000 f847 	bl	1004ca0c <PKA_Offline_Processing_ucfg>
1004c97e:	f000 f848 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004c982:	2801      	cmp	r0, #1
1004c984:	d101      	bne.n	1004c98a <Controller_Process_Q+0x16>
1004c986:	f001 ff21 	bl	1004e7cc <Data_Len_Update_Offline_Processing_ucfg>
1004c98a:	f001 ff21 	bl	1004e7d0 <Disconnection_Offline_Processing>
1004c98e:	bd10      	pop	{r4, pc}

1004c990 <HCI_Init>:
1004c990:	b570      	push	{r4, r5, r6, lr}
1004c992:	4c1c      	ldr	r4, [pc, #112]	; (1004ca04 <HCI_Init+0x74>)
1004c994:	211b      	movs	r1, #27
1004c996:	6820      	ldr	r0, [r4, #0]
1004c998:	0189      	lsls	r1, r1, #6
1004c99a:	1841      	adds	r1, r0, r1
1004c99c:	2600      	movs	r6, #0
1004c99e:	760e      	strb	r6, [r1, #24]
1004c9a0:	4b19      	ldr	r3, [pc, #100]	; (1004ca08 <HCI_Init+0x78>)
1004c9a2:	764e      	strb	r6, [r1, #25]
1004c9a4:	2206      	movs	r2, #6
1004c9a6:	21ff      	movs	r1, #255	; 0xff
1004c9a8:	18c0      	adds	r0, r0, r3
1004c9aa:	f7f6 fc0c 	bl	100431c6 <Osal_MemSet>
1004c9ae:	2537      	movs	r5, #55	; 0x37
1004c9b0:	6820      	ldr	r0, [r4, #0]
1004c9b2:	016d      	lsls	r5, r5, #5
1004c9b4:	1940      	adds	r0, r0, r5
1004c9b6:	7006      	strb	r6, [r0, #0]
1004c9b8:	2120      	movs	r1, #32
1004c9ba:	7041      	strb	r1, [r0, #1]
1004c9bc:	f000 f829 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004c9c0:	2801      	cmp	r0, #1
1004c9c2:	d01c      	beq.n	1004c9fe <HCI_Init+0x6e>
1004c9c4:	201f      	movs	r0, #31
1004c9c6:	6821      	ldr	r1, [r4, #0]
1004c9c8:	4b0f      	ldr	r3, [pc, #60]	; (1004ca08 <HCI_Init+0x78>)
1004c9ca:	1949      	adds	r1, r1, r5
1004c9cc:	7088      	strb	r0, [r1, #2]
1004c9ce:	6820      	ldr	r0, [r4, #0]
1004c9d0:	3309      	adds	r3, #9
1004c9d2:	2207      	movs	r2, #7
1004c9d4:	2100      	movs	r1, #0
1004c9d6:	18c0      	adds	r0, r0, r3
1004c9d8:	f7f6 fbf5 	bl	100431c6 <Osal_MemSet>
1004c9dc:	4b0a      	ldr	r3, [pc, #40]	; (1004ca08 <HCI_Init+0x78>)
1004c9de:	6820      	ldr	r0, [r4, #0]
1004c9e0:	3310      	adds	r3, #16
1004c9e2:	2205      	movs	r2, #5
1004c9e4:	21ff      	movs	r1, #255	; 0xff
1004c9e6:	18c0      	adds	r0, r0, r3
1004c9e8:	f7f6 fbed 	bl	100431c6 <Osal_MemSet>
1004c9ec:	23df      	movs	r3, #223	; 0xdf
1004c9ee:	6820      	ldr	r0, [r4, #0]
1004c9f0:	00db      	lsls	r3, r3, #3
1004c9f2:	22ff      	movs	r2, #255	; 0xff
1004c9f4:	2100      	movs	r1, #0
1004c9f6:	18c0      	adds	r0, r0, r3
1004c9f8:	f009 fa45 	bl	10055e86 <acl_list_init>
1004c9fc:	bd70      	pop	{r4, r5, r6, pc}
1004c9fe:	205f      	movs	r0, #95	; 0x5f
1004ca00:	e7e1      	b.n	1004c9c6 <HCI_Init+0x36>
1004ca02:	0000      	.short	0x0000
1004ca04:	2000098c 	.word	0x2000098c
1004ca08:	000006da 	.word	0x000006da

1004ca0c <PKA_Offline_Processing_ucfg>:
1004ca0c:	4770      	bx	lr

1004ca0e <PRIV_controller_privacy_csr_ucfg>:
1004ca0e:	2000      	movs	r0, #0
1004ca10:	4770      	bx	lr

1004ca12 <data_length_extension_csr_ucfg>:
1004ca12:	2000      	movs	r0, #0
1004ca14:	4770      	bx	lr
	...

1004ca18 <hci_acl_Process_Q>:
1004ca18:	b570      	push	{r4, r5, r6, lr}
1004ca1a:	b672      	cpsid	i
1004ca1c:	4d18      	ldr	r5, [pc, #96]	; (1004ca80 <hci_acl_Process_Q+0x68>)
1004ca1e:	2340      	movs	r3, #64	; 0x40
1004ca20:	6828      	ldr	r0, [r5, #0]
1004ca22:	4601      	mov	r1, r0
1004ca24:	3040      	adds	r0, #64	; 0x40
1004ca26:	79c2      	ldrb	r2, [r0, #7]
1004ca28:	431a      	orrs	r2, r3
1004ca2a:	71c2      	strb	r2, [r0, #7]
1004ca2c:	b662      	cpsie	i
1004ca2e:	26df      	movs	r6, #223	; 0xdf
1004ca30:	00f6      	lsls	r6, r6, #3
1004ca32:	1988      	adds	r0, r1, r6
1004ca34:	f009 fa58 	bl	10055ee8 <acl_list_is_empty>
1004ca38:	2800      	cmp	r0, #0
1004ca3a:	d112      	bne.n	1004ca62 <hci_acl_Process_Q+0x4a>
1004ca3c:	6828      	ldr	r0, [r5, #0]
1004ca3e:	1980      	adds	r0, r0, r6
1004ca40:	f009 fa0c 	bl	10055e5c <acl_list_first>
1004ca44:	4604      	mov	r4, r0
1004ca46:	e00a      	b.n	1004ca5e <hci_acl_Process_Q+0x46>
1004ca48:	4620      	mov	r0, r4
1004ca4a:	f009 f949 	bl	10055ce0 <Acl_Transmit_Data>
1004ca4e:	2800      	cmp	r0, #0
1004ca50:	d107      	bne.n	1004ca62 <hci_acl_Process_Q+0x4a>
1004ca52:	6828      	ldr	r0, [r5, #0]
1004ca54:	4621      	mov	r1, r4
1004ca56:	1980      	adds	r0, r0, r6
1004ca58:	f009 fa4d 	bl	10055ef6 <acl_list_remove>
1004ca5c:	6824      	ldr	r4, [r4, #0]
1004ca5e:	2c00      	cmp	r4, #0
1004ca60:	d1f2      	bne.n	1004ca48 <hci_acl_Process_Q+0x30>
1004ca62:	6828      	ldr	r0, [r5, #0]
1004ca64:	1980      	adds	r0, r0, r6
1004ca66:	f009 fa3f 	bl	10055ee8 <acl_list_is_empty>
1004ca6a:	2801      	cmp	r0, #1
1004ca6c:	d007      	beq.n	1004ca7e <hci_acl_Process_Q+0x66>
1004ca6e:	b672      	cpsid	i
1004ca70:	6828      	ldr	r0, [r5, #0]
1004ca72:	22bf      	movs	r2, #191	; 0xbf
1004ca74:	3040      	adds	r0, #64	; 0x40
1004ca76:	79c1      	ldrb	r1, [r0, #7]
1004ca78:	4011      	ands	r1, r2
1004ca7a:	71c1      	strb	r1, [r0, #7]
1004ca7c:	b662      	cpsie	i
1004ca7e:	bd70      	pop	{r4, r5, r6, pc}
1004ca80:	2000098c 	.word	0x2000098c

1004ca84 <hci_le_encrypt>:
1004ca84:	b510      	push	{r4, lr}
1004ca86:	2300      	movs	r3, #0
1004ca88:	f002 fb50 	bl	1004f12c <LL_Encrypt_Plain_Data_ucfg>
1004ca8c:	bd10      	pop	{r4, pc}

1004ca8e <hci_le_long_term_key_request_reply>:
1004ca8e:	460a      	mov	r2, r1
1004ca90:	b510      	push	{r4, lr}
1004ca92:	4601      	mov	r1, r0
1004ca94:	2000      	movs	r0, #0
1004ca96:	f002 fb97 	bl	1004f1c8 <LL_Set_LTK>
1004ca9a:	bd10      	pop	{r4, pc}

1004ca9c <hci_le_long_term_key_requested_negative_reply>:
1004ca9c:	b510      	push	{r4, lr}
1004ca9e:	4601      	mov	r1, r0
1004caa0:	2200      	movs	r2, #0
1004caa2:	2041      	movs	r0, #65	; 0x41
1004caa4:	f002 fb90 	bl	1004f1c8 <LL_Set_LTK>
1004caa8:	bd10      	pop	{r4, pc}

1004caaa <hci_le_set_scan_response_data>:
1004caaa:	b510      	push	{r4, lr}
1004caac:	460a      	mov	r2, r1
1004caae:	281f      	cmp	r0, #31
1004cab0:	d901      	bls.n	1004cab6 <hci_le_set_scan_response_data+0xc>
1004cab2:	2012      	movs	r0, #18
1004cab4:	bd10      	pop	{r4, pc}
1004cab6:	4601      	mov	r1, r0
1004cab8:	4610      	mov	r0, r2
1004caba:	f005 fa61 	bl	10051f80 <LL_Set_Scan_Resp_Data>
1004cabe:	bd10      	pop	{r4, pc}

1004cac0 <hci_rx_acl_data>:
1004cac0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1004cac2:	4606      	mov	r6, r0
1004cac4:	2002      	movs	r0, #2
1004cac6:	9001      	str	r0, [sp, #4]
1004cac8:	88b0      	ldrh	r0, [r6, #4]
1004caca:	9000      	str	r0, [sp, #0]
1004cacc:	79b5      	ldrb	r5, [r6, #6]
1004cace:	2103      	movs	r1, #3
1004cad0:	1d68      	adds	r0, r5, #5
1004cad2:	4308      	orrs	r0, r1
1004cad4:	1c40      	adds	r0, r0, #1
1004cad6:	0883      	lsrs	r3, r0, #2
1004cad8:	4813      	ldr	r0, [pc, #76]	; (1004cb28 <hci_rx_acl_data+0x68>)
1004cada:	2102      	movs	r1, #2
1004cadc:	6800      	ldr	r0, [r0, #0]
1004cade:	028c      	lsls	r4, r1, #10
1004cae0:	3008      	adds	r0, #8
1004cae2:	1900      	adds	r0, r0, r4
1004cae4:	7b37      	ldrb	r7, [r6, #12]
1004cae6:	2211      	movs	r2, #17
1004cae8:	6940      	ldr	r0, [r0, #20]
1004caea:	f008 fb7f 	bl	100551ec <aci_event_fifo_push_header>
1004caee:	0004      	movs	r4, r0
1004caf0:	d017      	beq.n	1004cb22 <hci_rx_acl_data+0x62>
1004caf2:	9800      	ldr	r0, [sp, #0]
1004caf4:	80a0      	strh	r0, [r4, #4]
1004caf6:	2000      	movs	r0, #0
1004caf8:	71a7      	strb	r7, [r4, #6]
1004cafa:	71e0      	strb	r0, [r4, #7]
1004cafc:	4601      	mov	r1, r0
1004cafe:	4623      	mov	r3, r4
1004cb00:	8125      	strh	r5, [r4, #8]
1004cb02:	462a      	mov	r2, r5
1004cb04:	4630      	mov	r0, r6
1004cb06:	330a      	adds	r3, #10
1004cb08:	f003 fdc8 	bl	1005069c <PM_Copy_Pckt_Data>
1004cb0c:	4621      	mov	r1, r4
1004cb0e:	9801      	ldr	r0, [sp, #4]
1004cb10:	f008 fb58 	bl	100551c4 <aci_event_fifo_push>
1004cb14:	2400      	movs	r4, #0
1004cb16:	2101      	movs	r1, #1
1004cb18:	4630      	mov	r0, r6
1004cb1a:	f003 fe5b 	bl	100507d4 <PM_Release_Acl_Pckt>
1004cb1e:	4620      	mov	r0, r4
1004cb20:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004cb22:	2407      	movs	r4, #7
1004cb24:	e7fb      	b.n	1004cb1e <hci_rx_acl_data+0x5e>
1004cb26:	0000      	.short	0x0000
1004cb28:	2000098c 	.word	0x2000098c

1004cb2c <hci_tx_acl_data_done>:
1004cb2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004cb2e:	4607      	mov	r7, r0
1004cb30:	8885      	ldrh	r5, [r0, #4]
1004cb32:	480e      	ldr	r0, [pc, #56]	; (1004cb6c <hci_tx_acl_data_done+0x40>)
1004cb34:	2210      	movs	r2, #16
1004cb36:	6800      	ldr	r0, [r0, #0]
1004cb38:	01d4      	lsls	r4, r2, #7
1004cb3a:	3008      	adds	r0, #8
1004cb3c:	2602      	movs	r6, #2
1004cb3e:	1900      	adds	r0, r0, r4
1004cb40:	2301      	movs	r3, #1
1004cb42:	4631      	mov	r1, r6
1004cb44:	6940      	ldr	r0, [r0, #20]
1004cb46:	f008 fb51 	bl	100551ec <aci_event_fifo_push_header>
1004cb4a:	0001      	movs	r1, r0
1004cb4c:	d00c      	beq.n	1004cb68 <hci_tx_acl_data_done+0x3c>
1004cb4e:	808d      	strh	r5, [r1, #4]
1004cb50:	2201      	movs	r2, #1
1004cb52:	2400      	movs	r4, #0
1004cb54:	80ca      	strh	r2, [r1, #6]
1004cb56:	4630      	mov	r0, r6
1004cb58:	f008 fb34 	bl	100551c4 <aci_event_fifo_push>
1004cb5c:	2100      	movs	r1, #0
1004cb5e:	4638      	mov	r0, r7
1004cb60:	f003 fe38 	bl	100507d4 <PM_Release_Acl_Pckt>
1004cb64:	4620      	mov	r0, r4
1004cb66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004cb68:	2407      	movs	r4, #7
1004cb6a:	e7fb      	b.n	1004cb64 <hci_tx_acl_data_done+0x38>
1004cb6c:	2000098c 	.word	0x2000098c

1004cb70 <HAL_VTimerAcc_sysT32_ms>:
1004cb70:	4a07      	ldr	r2, [pc, #28]	; (1004cb90 <HAL_VTimerAcc_sysT32_ms+0x20>)
1004cb72:	4291      	cmp	r1, r2
1004cb74:	dc02      	bgt.n	1004cb7c <HAL_VTimerAcc_sysT32_ms+0xc>
1004cb76:	4252      	negs	r2, r2
1004cb78:	4291      	cmp	r1, r2
1004cb7a:	da00      	bge.n	1004cb7e <HAL_VTimerAcc_sysT32_ms+0xe>
1004cb7c:	4611      	mov	r1, r2
1004cb7e:	22ff      	movs	r2, #255	; 0xff
1004cb80:	3299      	adds	r2, #153	; 0x99
1004cb82:	4351      	muls	r1, r2
1004cb84:	120a      	asrs	r2, r1, #8
1004cb86:	1851      	adds	r1, r2, r1
1004cb88:	140a      	asrs	r2, r1, #16
1004cb8a:	1851      	adds	r1, r2, r1
1004cb8c:	1808      	adds	r0, r1, r0
1004cb8e:	4770      	bx	lr
1004cb90:	004fffff 	.word	0x004fffff

1004cb94 <HAL_VTimerDiff_ms_sysT32>:
1004cb94:	1a40      	subs	r0, r0, r1
1004cb96:	10c0      	asrs	r0, r0, #3
1004cb98:	0081      	lsls	r1, r0, #2
1004cb9a:	1840      	adds	r0, r0, r1
1004cb9c:	1200      	asrs	r0, r0, #8
1004cb9e:	4770      	bx	lr

1004cba0 <HAL_VTimerGetCurrentTime_sysT32>:
1004cba0:	b510      	push	{r4, lr}
1004cba2:	2009      	movs	r0, #9
1004cba4:	06c0      	lsls	r0, r0, #27
1004cba6:	6900      	ldr	r0, [r0, #16]
1004cba8:	0200      	lsls	r0, r0, #8
1004cbaa:	0a00      	lsrs	r0, r0, #8
1004cbac:	f000 f9b4 	bl	1004cf18 <Timer_sysTime32_convMachineTime>
1004cbb0:	bd10      	pop	{r4, pc}

1004cbb2 <HAL_VTimerStart_ms>:
1004cbb2:	b570      	push	{r4, r5, r6, lr}
1004cbb4:	460d      	mov	r5, r1
1004cbb6:	4604      	mov	r4, r0
1004cbb8:	f7ff fff2 	bl	1004cba0 <HAL_VTimerGetCurrentTime_sysT32>
1004cbbc:	4629      	mov	r1, r5
1004cbbe:	f7ff ffd7 	bl	1004cb70 <HAL_VTimerAcc_sysT32_ms>
1004cbc2:	4601      	mov	r1, r0
1004cbc4:	4620      	mov	r0, r4
1004cbc6:	f000 f801 	bl	1004cbcc <HAL_VTimerStart_sysT32>
1004cbca:	bd70      	pop	{r4, r5, r6, pc}

1004cbcc <HAL_VTimerStart_sysT32>:
1004cbcc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
1004cbce:	466a      	mov	r2, sp
1004cbd0:	303a      	adds	r0, #58	; 0x3a
1004cbd2:	7310      	strb	r0, [r2, #12]
1004cbd4:	4668      	mov	r0, sp
1004cbd6:	9102      	str	r1, [sp, #8]
1004cbd8:	f000 f938 	bl	1004ce4c <Timer_StartOneShot_sysTime32>
1004cbdc:	2800      	cmp	r0, #0
1004cbde:	d000      	beq.n	1004cbe2 <HAL_VTimerStart_sysT32+0x16>
1004cbe0:	2001      	movs	r0, #1
1004cbe2:	b004      	add	sp, #16
1004cbe4:	bd10      	pop	{r4, pc}

1004cbe6 <HAL_VTimer_Stop>:
1004cbe6:	b51f      	push	{r0, r1, r2, r3, r4, lr}
1004cbe8:	4669      	mov	r1, sp
1004cbea:	303a      	adds	r0, #58	; 0x3a
1004cbec:	7308      	strb	r0, [r1, #12]
1004cbee:	4668      	mov	r0, sp
1004cbf0:	f000 f966 	bl	1004cec0 <Timer_StopOneShot>
1004cbf4:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
	...

1004cbf8 <Set_Host_Timer_value>:
1004cbf8:	b530      	push	{r4, r5, lr}
1004cbfa:	f3ef 8110 	mrs	r1, PRIMASK
1004cbfe:	b672      	cpsid	i
1004cc00:	2209      	movs	r2, #9
1004cc02:	06d2      	lsls	r2, r2, #27
1004cc04:	6912      	ldr	r2, [r2, #16]
1004cc06:	25ff      	movs	r5, #255	; 0xff
1004cc08:	1a82      	subs	r2, r0, r2
1004cc0a:	0212      	lsls	r2, r2, #8
1004cc0c:	1214      	asrs	r4, r2, #8
1004cc0e:	4a0c      	ldr	r2, [pc, #48]	; (1004cc40 <Set_Host_Timer_value+0x48>)
1004cc10:	3591      	adds	r5, #145	; 0x91
1004cc12:	6813      	ldr	r3, [r2, #0]
1004cc14:	42ac      	cmp	r4, r5
1004cc16:	dc08      	bgt.n	1004cc2a <Set_Host_Timer_value+0x32>
1004cc18:	2201      	movs	r2, #1
1004cc1a:	0612      	lsls	r2, r2, #24
1004cc1c:	4390      	bics	r0, r2
1004cc1e:	461a      	mov	r2, r3
1004cc20:	3240      	adds	r2, #64	; 0x40
1004cc22:	79d4      	ldrb	r4, [r2, #7]
1004cc24:	25df      	movs	r5, #223	; 0xdf
1004cc26:	402c      	ands	r4, r5
1004cc28:	71d4      	strb	r4, [r2, #7]
1004cc2a:	01c2      	lsls	r2, r0, #7
1004cc2c:	2407      	movs	r4, #7
1004cc2e:	09d2      	lsrs	r2, r2, #7
1004cc30:	0224      	lsls	r4, r4, #8
1004cc32:	191b      	adds	r3, r3, r4
1004cc34:	625a      	str	r2, [r3, #36]	; 0x24
1004cc36:	4a03      	ldr	r2, [pc, #12]	; (1004cc44 <Set_Host_Timer_value+0x4c>)
1004cc38:	6090      	str	r0, [r2, #8]
1004cc3a:	f381 8810 	msr	PRIMASK, r1
1004cc3e:	bd30      	pop	{r4, r5, pc}
1004cc40:	2000098c 	.word	0x2000098c
1004cc44:	48000040 	.word	0x48000040

1004cc48 <TimerCallback>:
1004cc48:	b510      	push	{r4, lr}
1004cc4a:	0003      	movs	r3, r0
1004cc4c:	f7ff fd0d 	bl	1004c66a <__ARM_common_switch8>
1004cc50:	2d2d333a 	.word	0x2d2d333a
1004cc54:	30211e2d 	.word	0x30211e2d
1004cc58:	2a2a2a33 	.word	0x2a2a2a33
1004cc5c:	2a2a2a2a 	.word	0x2a2a2a2a
1004cc60:	24242a2a 	.word	0x24242a2a
1004cc64:	24242424 	.word	0x24242424
1004cc68:	24242424 	.word	0x24242424
1004cc6c:	24242424 	.word	0x24242424
1004cc70:	24242424 	.word	0x24242424
1004cc74:	24242424 	.word	0x24242424
1004cc78:	24242424 	.word	0x24242424
1004cc7c:	24242424 	.word	0x24242424
1004cc80:	27242424 	.word	0x27242424
1004cc84:	27272727 	.word	0x27272727
1004cc88:	33272727 	.word	0x33272727
1004cc8c:	f7fd fa00 	bl	1004a090 <GAP_LimDiscTimeoutcb>
1004cc90:	bd10      	pop	{r4, pc}
1004cc92:	f003 ff99 	bl	10050bc8 <GAP_PrivateAddrTimercb>
1004cc96:	bd10      	pop	{r4, pc}
1004cc98:	f7fd fef2 	bl	1004aa80 <GATT_TimeOut_Handler>
1004cc9c:	bd10      	pop	{r4, pc}
1004cc9e:	f000 fb5b 	bl	1004d358 <L2C_SigChan_Req_TimeOut_Handler>
1004cca2:	bd10      	pop	{r4, pc}
1004cca4:	f007 fade 	bl	10054264 <SMP_Protocol_Timer_cb>
1004cca8:	bd10      	pop	{r4, pc}
1004ccaa:	f007 fd4f 	bl	1005474c <SMP_repeated_attacks_timer_cb>
1004ccae:	bd10      	pop	{r4, pc}
1004ccb0:	f7fd f8b0 	bl	10049e14 <GAP_DiscProcTimeoutcb_ucfg>
1004ccb4:	bd10      	pop	{r4, pc}
1004ccb6:	383a      	subs	r0, #58	; 0x3a
1004ccb8:	b2c0      	uxtb	r0, r0
1004ccba:	2804      	cmp	r0, #4
1004ccbc:	d2fa      	bcs.n	1004ccb4 <TimerCallback+0x6c>
1004ccbe:	f7fa ffc7 	bl	10047c50 <HAL_VTimerTimeoutCallback>
1004ccc2:	bd10      	pop	{r4, pc}

1004ccc4 <Timer_ExpiryCallback>:
1004ccc4:	4803      	ldr	r0, [pc, #12]	; (1004ccd4 <Timer_ExpiryCallback+0x10>)
1004ccc6:	22df      	movs	r2, #223	; 0xdf
1004ccc8:	6800      	ldr	r0, [r0, #0]
1004ccca:	3040      	adds	r0, #64	; 0x40
1004cccc:	79c1      	ldrb	r1, [r0, #7]
1004ccce:	4011      	ands	r1, r2
1004ccd0:	71c1      	strb	r1, [r0, #7]
1004ccd2:	4770      	bx	lr
1004ccd4:	2000098c 	.word	0x2000098c

1004ccd8 <Timer_Init>:
1004ccd8:	b570      	push	{r4, r5, r6, lr}
1004ccda:	480b      	ldr	r0, [pc, #44]	; (1004cd08 <Timer_Init+0x30>)
1004ccdc:	21e1      	movs	r1, #225	; 0xe1
1004ccde:	6800      	ldr	r0, [r0, #0]
1004cce0:	00c9      	lsls	r1, r1, #3
1004cce2:	1844      	adds	r4, r0, r1
1004cce4:	4626      	mov	r6, r4
1004cce6:	6064      	str	r4, [r4, #4]
1004cce8:	3608      	adds	r6, #8
1004ccea:	6024      	str	r4, [r4, #0]
1004ccec:	60e6      	str	r6, [r4, #12]
1004ccee:	2500      	movs	r5, #0
1004ccf0:	60a6      	str	r6, [r4, #8]
1004ccf2:	6920      	ldr	r0, [r4, #16]
1004ccf4:	0129      	lsls	r1, r5, #4
1004ccf6:	1841      	adds	r1, r0, r1
1004ccf8:	4630      	mov	r0, r6
1004ccfa:	f004 f8d1 	bl	10050ea0 <List_Circular_Insert_Tail>
1004ccfe:	1c6d      	adds	r5, r5, #1
1004cd00:	b2ed      	uxtb	r5, r5
1004cd02:	2d0b      	cmp	r5, #11
1004cd04:	d3f5      	bcc.n	1004ccf2 <Timer_Init+0x1a>
1004cd06:	bd70      	pop	{r4, r5, r6, pc}
1004cd08:	2000098c 	.word	0x2000098c

1004cd0c <Timer_ProcessQ>:
1004cd0c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004cd0e:	2600      	movs	r6, #0
1004cd10:	b093      	sub	sp, #76	; 0x4c
1004cd12:	1e70      	subs	r0, r6, #1
1004cd14:	900e      	str	r0, [sp, #56]	; 0x38
1004cd16:	4842      	ldr	r0, [pc, #264]	; (1004ce20 <Timer_ProcessQ+0x114>)
1004cd18:	21e1      	movs	r1, #225	; 0xe1
1004cd1a:	6800      	ldr	r0, [r0, #0]
1004cd1c:	00c9      	lsls	r1, r1, #3
1004cd1e:	1844      	adds	r4, r0, r1
1004cd20:	2009      	movs	r0, #9
1004cd22:	06c0      	lsls	r0, r0, #27
1004cd24:	6900      	ldr	r0, [r0, #16]
1004cd26:	4637      	mov	r7, r6
1004cd28:	0205      	lsls	r5, r0, #8
1004cd2a:	0a2d      	lsrs	r5, r5, #8
1004cd2c:	b672      	cpsid	i
1004cd2e:	69a0      	ldr	r0, [r4, #24]
1004cd30:	4621      	mov	r1, r4
1004cd32:	1a28      	subs	r0, r5, r0
1004cd34:	0200      	lsls	r0, r0, #8
1004cd36:	0a00      	lsrs	r0, r0, #8
1004cd38:	3122      	adds	r1, #34	; 0x22
1004cd3a:	f005 faaf 	bl	1005229c <system_time_trans_ext>
1004cd3e:	6961      	ldr	r1, [r4, #20]
1004cd40:	61a5      	str	r5, [r4, #24]
1004cd42:	1840      	adds	r0, r0, r1
1004cd44:	6160      	str	r0, [r4, #20]
1004cd46:	4836      	ldr	r0, [pc, #216]	; (1004ce20 <Timer_ProcessQ+0x114>)
1004cd48:	6800      	ldr	r0, [r0, #0]
1004cd4a:	3040      	adds	r0, #64	; 0x40
1004cd4c:	79c1      	ldrb	r1, [r0, #7]
1004cd4e:	068a      	lsls	r2, r1, #26
1004cd50:	d463      	bmi.n	1004ce1a <Timer_ProcessQ+0x10e>
1004cd52:	2220      	movs	r2, #32
1004cd54:	4311      	orrs	r1, r2
1004cd56:	71c1      	strb	r1, [r0, #7]
1004cd58:	b662      	cpsie	i
1004cd5a:	6825      	ldr	r5, [r4, #0]
1004cd5c:	e014      	b.n	1004cd88 <Timer_ProcessQ+0x7c>
1004cd5e:	68a8      	ldr	r0, [r5, #8]
1004cd60:	6961      	ldr	r1, [r4, #20]
1004cd62:	1a40      	subs	r0, r0, r1
1004cd64:	2800      	cmp	r0, #0
1004cd66:	dc0a      	bgt.n	1004cd7e <Timer_ProcessQ+0x72>
1004cd68:	00ba      	lsls	r2, r7, #2
1004cd6a:	a801      	add	r0, sp, #4
1004cd6c:	1c76      	adds	r6, r6, #1
1004cd6e:	5085      	str	r5, [r0, r2]
1004cd70:	1c7f      	adds	r7, r7, #1
1004cd72:	b2f6      	uxtb	r6, r6
1004cd74:	b2ff      	uxtb	r7, r7
1004cd76:	7b28      	ldrb	r0, [r5, #12]
1004cd78:	f7ff ff66 	bl	1004cc48 <TimerCallback>
1004cd7c:	e003      	b.n	1004cd86 <Timer_ProcessQ+0x7a>
1004cd7e:	990e      	ldr	r1, [sp, #56]	; 0x38
1004cd80:	4288      	cmp	r0, r1
1004cd82:	d200      	bcs.n	1004cd86 <Timer_ProcessQ+0x7a>
1004cd84:	900e      	str	r0, [sp, #56]	; 0x38
1004cd86:	682d      	ldr	r5, [r5, #0]
1004cd88:	42a5      	cmp	r5, r4
1004cd8a:	d1e8      	bne.n	1004cd5e <Timer_ProcessQ+0x52>
1004cd8c:	4620      	mov	r0, r4
1004cd8e:	3008      	adds	r0, #8
1004cd90:	2500      	movs	r5, #0
1004cd92:	900c      	str	r0, [sp, #48]	; 0x30
1004cd94:	3018      	adds	r0, #24
1004cd96:	9012      	str	r0, [sp, #72]	; 0x48
1004cd98:	e018      	b.n	1004cdcc <Timer_ProcessQ+0xc0>
1004cd9a:	00af      	lsls	r7, r5, #2
1004cd9c:	a801      	add	r0, sp, #4
1004cd9e:	1e76      	subs	r6, r6, #1
1004cda0:	59c1      	ldr	r1, [r0, r7]
1004cda2:	b2f6      	uxtb	r6, r6
1004cda4:	4620      	mov	r0, r4
1004cda6:	f004 f89a 	bl	10050ede <List_Circular_Remove_Node>
1004cdaa:	a801      	add	r0, sp, #4
1004cdac:	59c1      	ldr	r1, [r0, r7]
1004cdae:	980c      	ldr	r0, [sp, #48]	; 0x30
1004cdb0:	f004 f876 	bl	10050ea0 <List_Circular_Insert_Tail>
1004cdb4:	a801      	add	r0, sp, #4
1004cdb6:	59c0      	ldr	r0, [r0, r7]
1004cdb8:	7b00      	ldrb	r0, [r0, #12]
1004cdba:	283a      	cmp	r0, #58	; 0x3a
1004cdbc:	d204      	bcs.n	1004cdc8 <Timer_ProcessQ+0xbc>
1004cdbe:	9812      	ldr	r0, [sp, #72]	; 0x48
1004cdc0:	9912      	ldr	r1, [sp, #72]	; 0x48
1004cdc2:	7800      	ldrb	r0, [r0, #0]
1004cdc4:	1e40      	subs	r0, r0, #1
1004cdc6:	7008      	strb	r0, [r1, #0]
1004cdc8:	1c6d      	adds	r5, r5, #1
1004cdca:	b2ed      	uxtb	r5, r5
1004cdcc:	2e00      	cmp	r6, #0
1004cdce:	d1e4      	bne.n	1004cd9a <Timer_ProcessQ+0x8e>
1004cdd0:	6820      	ldr	r0, [r4, #0]
1004cdd2:	42a0      	cmp	r0, r4
1004cdd4:	d017      	beq.n	1004ce06 <Timer_ProcessQ+0xfa>
1004cdd6:	253d      	movs	r5, #61	; 0x3d
1004cdd8:	046d      	lsls	r5, r5, #17
1004cdda:	4628      	mov	r0, r5
1004cddc:	f005 fa56 	bl	1005228c <system_time_trans>
1004cde0:	4601      	mov	r1, r0
1004cde2:	980e      	ldr	r0, [sp, #56]	; 0x38
1004cde4:	4281      	cmp	r1, r0
1004cde6:	d801      	bhi.n	1004cdec <Timer_ProcessQ+0xe0>
1004cde8:	4628      	mov	r0, r5
1004cdea:	e001      	b.n	1004cdf0 <Timer_ProcessQ+0xe4>
1004cdec:	f005 f9ec 	bl	100521c8 <machine_time_trans>
1004cdf0:	69a1      	ldr	r1, [r4, #24]
1004cdf2:	1808      	adds	r0, r1, r0
1004cdf4:	0200      	lsls	r0, r0, #8
1004cdf6:	2101      	movs	r1, #1
1004cdf8:	0a00      	lsrs	r0, r0, #8
1004cdfa:	0609      	lsls	r1, r1, #24
1004cdfc:	1840      	adds	r0, r0, r1
1004cdfe:	f7ff fefb 	bl	1004cbf8 <Set_Host_Timer_value>
1004ce02:	b013      	add	sp, #76	; 0x4c
1004ce04:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004ce06:	b672      	cpsid	i
1004ce08:	2000      	movs	r0, #0
1004ce0a:	4905      	ldr	r1, [pc, #20]	; (1004ce20 <Timer_ProcessQ+0x114>)
1004ce0c:	2207      	movs	r2, #7
1004ce0e:	6809      	ldr	r1, [r1, #0]
1004ce10:	0212      	lsls	r2, r2, #8
1004ce12:	1889      	adds	r1, r1, r2
1004ce14:	6248      	str	r0, [r1, #36]	; 0x24
1004ce16:	4903      	ldr	r1, [pc, #12]	; (1004ce24 <Timer_ProcessQ+0x118>)
1004ce18:	6088      	str	r0, [r1, #8]
1004ce1a:	b662      	cpsie	i
1004ce1c:	e7f1      	b.n	1004ce02 <Timer_ProcessQ+0xf6>
1004ce1e:	0000      	.short	0x0000
1004ce20:	2000098c 	.word	0x2000098c
1004ce24:	48000040 	.word	0x48000040

1004ce28 <Timer_StartOneShot>:
1004ce28:	b510      	push	{r4, lr}
1004ce2a:	4604      	mov	r4, r0
1004ce2c:	2009      	movs	r0, #9
1004ce2e:	06c0      	lsls	r0, r0, #27
1004ce30:	6900      	ldr	r0, [r0, #16]
1004ce32:	0200      	lsls	r0, r0, #8
1004ce34:	0a00      	lsrs	r0, r0, #8
1004ce36:	f000 f86f 	bl	1004cf18 <Timer_sysTime32_convMachineTime>
1004ce3a:	68a1      	ldr	r1, [r4, #8]
1004ce3c:	f7ff fe98 	bl	1004cb70 <HAL_VTimerAcc_sysT32_ms>
1004ce40:	60a0      	str	r0, [r4, #8]
1004ce42:	4620      	mov	r0, r4
1004ce44:	f000 f802 	bl	1004ce4c <Timer_StartOneShot_sysTime32>
1004ce48:	bd10      	pop	{r4, pc}
	...

1004ce4c <Timer_StartOneShot_sysTime32>:
1004ce4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004ce4e:	4d1b      	ldr	r5, [pc, #108]	; (1004cebc <Timer_StartOneShot_sysTime32+0x70>)
1004ce50:	4606      	mov	r6, r0
1004ce52:	21e1      	movs	r1, #225	; 0xe1
1004ce54:	6828      	ldr	r0, [r5, #0]
1004ce56:	00c9      	lsls	r1, r1, #3
1004ce58:	1844      	adds	r4, r0, r1
1004ce5a:	7b31      	ldrb	r1, [r6, #12]
1004ce5c:	1e48      	subs	r0, r1, #1
1004ce5e:	283e      	cmp	r0, #62	; 0x3e
1004ce60:	d301      	bcc.n	1004ce66 <Timer_StartOneShot_sysTime32+0x1a>
1004ce62:	2042      	movs	r0, #66	; 0x42
1004ce64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004ce66:	4620      	mov	r0, r4
1004ce68:	68a2      	ldr	r2, [r4, #8]
1004ce6a:	3008      	adds	r0, #8
1004ce6c:	4282      	cmp	r2, r0
1004ce6e:	d005      	beq.n	1004ce7c <Timer_StartOneShot_sysTime32+0x30>
1004ce70:	293a      	cmp	r1, #58	; 0x3a
1004ce72:	d205      	bcs.n	1004ce80 <Timer_StartOneShot_sysTime32+0x34>
1004ce74:	2120      	movs	r1, #32
1004ce76:	5d09      	ldrb	r1, [r1, r4]
1004ce78:	2907      	cmp	r1, #7
1004ce7a:	d301      	bcc.n	1004ce80 <Timer_StartOneShot_sysTime32+0x34>
1004ce7c:	2064      	movs	r0, #100	; 0x64
1004ce7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004ce80:	4669      	mov	r1, sp
1004ce82:	f004 f81f 	bl	10050ec4 <List_Circular_Remove_Head>
1004ce86:	2210      	movs	r2, #16
1004ce88:	4631      	mov	r1, r6
1004ce8a:	9800      	ldr	r0, [sp, #0]
1004ce8c:	f7f6 f997 	bl	100431be <Osal_MemCpy>
1004ce90:	4620      	mov	r0, r4
1004ce92:	9900      	ldr	r1, [sp, #0]
1004ce94:	f004 f804 	bl	10050ea0 <List_Circular_Insert_Tail>
1004ce98:	9800      	ldr	r0, [sp, #0]
1004ce9a:	7b00      	ldrb	r0, [r0, #12]
1004ce9c:	283a      	cmp	r0, #58	; 0x3a
1004ce9e:	d203      	bcs.n	1004cea8 <Timer_StartOneShot_sysTime32+0x5c>
1004cea0:	3420      	adds	r4, #32
1004cea2:	7820      	ldrb	r0, [r4, #0]
1004cea4:	1c40      	adds	r0, r0, #1
1004cea6:	7020      	strb	r0, [r4, #0]
1004cea8:	b672      	cpsid	i
1004ceaa:	6828      	ldr	r0, [r5, #0]
1004ceac:	22df      	movs	r2, #223	; 0xdf
1004ceae:	3040      	adds	r0, #64	; 0x40
1004ceb0:	79c1      	ldrb	r1, [r0, #7]
1004ceb2:	4011      	ands	r1, r2
1004ceb4:	71c1      	strb	r1, [r0, #7]
1004ceb6:	b662      	cpsie	i
1004ceb8:	2000      	movs	r0, #0
1004ceba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004cebc:	2000098c 	.word	0x2000098c

1004cec0 <Timer_StopOneShot>:
1004cec0:	b570      	push	{r4, r5, r6, lr}
1004cec2:	4e14      	ldr	r6, [pc, #80]	; (1004cf14 <Timer_StopOneShot+0x54>)
1004cec4:	22e1      	movs	r2, #225	; 0xe1
1004cec6:	6831      	ldr	r1, [r6, #0]
1004cec8:	00d2      	lsls	r2, r2, #3
1004ceca:	188d      	adds	r5, r1, r2
1004cecc:	682c      	ldr	r4, [r5, #0]
1004cece:	e01d      	b.n	1004cf0c <Timer_StopOneShot+0x4c>
1004ced0:	7b01      	ldrb	r1, [r0, #12]
1004ced2:	7b22      	ldrb	r2, [r4, #12]
1004ced4:	4291      	cmp	r1, r2
1004ced6:	d118      	bne.n	1004cf0a <Timer_StopOneShot+0x4a>
1004ced8:	4621      	mov	r1, r4
1004ceda:	4628      	mov	r0, r5
1004cedc:	f003 ffff 	bl	10050ede <List_Circular_Remove_Node>
1004cee0:	4628      	mov	r0, r5
1004cee2:	4621      	mov	r1, r4
1004cee4:	3008      	adds	r0, #8
1004cee6:	f003 ffdb 	bl	10050ea0 <List_Circular_Insert_Tail>
1004ceea:	7b20      	ldrb	r0, [r4, #12]
1004ceec:	283a      	cmp	r0, #58	; 0x3a
1004ceee:	d203      	bcs.n	1004cef8 <Timer_StopOneShot+0x38>
1004cef0:	3520      	adds	r5, #32
1004cef2:	7828      	ldrb	r0, [r5, #0]
1004cef4:	1e40      	subs	r0, r0, #1
1004cef6:	7028      	strb	r0, [r5, #0]
1004cef8:	b672      	cpsid	i
1004cefa:	6830      	ldr	r0, [r6, #0]
1004cefc:	22df      	movs	r2, #223	; 0xdf
1004cefe:	3040      	adds	r0, #64	; 0x40
1004cf00:	79c1      	ldrb	r1, [r0, #7]
1004cf02:	4011      	ands	r1, r2
1004cf04:	71c1      	strb	r1, [r0, #7]
1004cf06:	b662      	cpsie	i
1004cf08:	bd70      	pop	{r4, r5, r6, pc}
1004cf0a:	6824      	ldr	r4, [r4, #0]
1004cf0c:	42ac      	cmp	r4, r5
1004cf0e:	d1df      	bne.n	1004ced0 <Timer_StopOneShot+0x10>
1004cf10:	bd70      	pop	{r4, r5, r6, pc}
1004cf12:	0000      	.short	0x0000
1004cf14:	2000098c 	.word	0x2000098c

1004cf18 <Timer_sysTime32_convMachineTime>:
1004cf18:	b510      	push	{r4, lr}
1004cf1a:	4907      	ldr	r1, [pc, #28]	; (1004cf38 <Timer_sysTime32_convMachineTime+0x20>)
1004cf1c:	22e1      	movs	r2, #225	; 0xe1
1004cf1e:	6809      	ldr	r1, [r1, #0]
1004cf20:	00d2      	lsls	r2, r2, #3
1004cf22:	188c      	adds	r4, r1, r2
1004cf24:	69a1      	ldr	r1, [r4, #24]
1004cf26:	1a40      	subs	r0, r0, r1
1004cf28:	0200      	lsls	r0, r0, #8
1004cf2a:	0a00      	lsrs	r0, r0, #8
1004cf2c:	f005 f9ae 	bl	1005228c <system_time_trans>
1004cf30:	6961      	ldr	r1, [r4, #20]
1004cf32:	1808      	adds	r0, r1, r0
1004cf34:	bd10      	pop	{r4, pc}
1004cf36:	0000      	.short	0x0000
1004cf38:	2000098c 	.word	0x2000098c

1004cf3c <L2C_Build_Command_Reject_Pdu>:
1004cf3c:	b570      	push	{r4, r5, r6, lr}
1004cf3e:	460e      	mov	r6, r1
1004cf40:	4605      	mov	r5, r0
1004cf42:	4601      	mov	r1, r0
1004cf44:	2220      	movs	r2, #32
1004cf46:	2000      	movs	r0, #0
1004cf48:	f003 fbe8 	bl	1005071c <PM_Get_Pckt>
1004cf4c:	0004      	movs	r4, r0
1004cf4e:	d023      	beq.n	1004cf98 <L2C_Build_Command_Reject_Pdu+0x5c>
1004cf50:	4628      	mov	r0, r5
1004cf52:	f000 f86b 	bl	1004d02c <L2C_Get_Connection_Info>
1004cf56:	0005      	movs	r5, r0
1004cf58:	d027      	beq.n	1004cfaa <L2C_Build_Command_Reject_Pdu+0x6e>
1004cf5a:	7928      	ldrb	r0, [r5, #4]
1004cf5c:	42b0      	cmp	r0, r6
1004cf5e:	d124      	bne.n	1004cfaa <L2C_Build_Command_Reject_Pdu+0x6e>
1004cf60:	78a8      	ldrb	r0, [r5, #2]
1004cf62:	0780      	lsls	r0, r0, #30
1004cf64:	d41f      	bmi.n	1004cfa6 <L2C_Build_Command_Reject_Pdu+0x6a>
1004cf66:	68a0      	ldr	r0, [r4, #8]
1004cf68:	2101      	movs	r1, #1
1004cf6a:	7301      	strb	r1, [r0, #12]
1004cf6c:	68a0      	ldr	r0, [r4, #8]
1004cf6e:	2100      	movs	r1, #0
1004cf70:	7346      	strb	r6, [r0, #13]
1004cf72:	68a0      	ldr	r0, [r4, #8]
1004cf74:	2602      	movs	r6, #2
1004cf76:	7386      	strb	r6, [r0, #14]
1004cf78:	68a0      	ldr	r0, [r4, #8]
1004cf7a:	73c1      	strb	r1, [r0, #15]
1004cf7c:	68a0      	ldr	r0, [r4, #8]
1004cf7e:	7401      	strb	r1, [r0, #16]
1004cf80:	68a0      	ldr	r0, [r4, #8]
1004cf82:	7441      	strb	r1, [r0, #17]
1004cf84:	2006      	movs	r0, #6
1004cf86:	80e0      	strh	r0, [r4, #6]
1004cf88:	4621      	mov	r1, r4
1004cf8a:	2005      	movs	r0, #5
1004cf8c:	f000 f9be 	bl	1004d30c <L2C_Send_Data>
1004cf90:	2800      	cmp	r0, #0
1004cf92:	d003      	beq.n	1004cf9c <L2C_Build_Command_Reject_Pdu+0x60>
1004cf94:	2541      	movs	r5, #65	; 0x41
1004cf96:	e009      	b.n	1004cfac <L2C_Build_Command_Reject_Pdu+0x70>
1004cf98:	2564      	movs	r5, #100	; 0x64
1004cf9a:	e00b      	b.n	1004cfb4 <L2C_Build_Command_Reject_Pdu+0x78>
1004cf9c:	78a8      	ldrb	r0, [r5, #2]
1004cf9e:	4330      	orrs	r0, r6
1004cfa0:	70a8      	strb	r0, [r5, #2]
1004cfa2:	2500      	movs	r5, #0
1004cfa4:	e006      	b.n	1004cfb4 <L2C_Build_Command_Reject_Pdu+0x78>
1004cfa6:	2546      	movs	r5, #70	; 0x46
1004cfa8:	e000      	b.n	1004cfac <L2C_Build_Command_Reject_Pdu+0x70>
1004cfaa:	2542      	movs	r5, #66	; 0x42
1004cfac:	2100      	movs	r1, #0
1004cfae:	4620      	mov	r0, r4
1004cfb0:	f003 fc10 	bl	100507d4 <PM_Release_Acl_Pckt>
1004cfb4:	4628      	mov	r0, r5
1004cfb6:	bd70      	pop	{r4, r5, r6, pc}

1004cfb8 <L2C_Connection_Complete_Handler>:
1004cfb8:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004cfba:	4614      	mov	r4, r2
1004cfbc:	460d      	mov	r5, r1
1004cfbe:	2800      	cmp	r0, #0
1004cfc0:	d11e      	bne.n	1004d000 <L2C_Connection_Complete_Handler+0x48>
1004cfc2:	2d05      	cmp	r5, #5
1004cfc4:	d002      	beq.n	1004cfcc <L2C_Connection_Complete_Handler+0x14>
1004cfc6:	2d0b      	cmp	r5, #11
1004cfc8:	d007      	beq.n	1004cfda <L2C_Connection_Complete_Handler+0x22>
1004cfca:	e011      	b.n	1004cff0 <L2C_Connection_Complete_Handler+0x38>
1004cfcc:	7962      	ldrb	r2, [r4, #5]
1004cfce:	7921      	ldrb	r1, [r4, #4]
1004cfd0:	8860      	ldrh	r0, [r4, #2]
1004cfd2:	1da3      	adds	r3, r4, #6
1004cfd4:	f007 fb5e 	bl	10054694 <SMP_hci_le_connection_complete_evt_hndl>
1004cfd8:	e00a      	b.n	1004cff0 <L2C_Connection_Complete_Handler+0x38>
1004cfda:	4621      	mov	r1, r4
1004cfdc:	3112      	adds	r1, #18
1004cfde:	1f88      	subs	r0, r1, #6
1004cfe0:	9101      	str	r1, [sp, #4]
1004cfe2:	9000      	str	r0, [sp, #0]
1004cfe4:	7962      	ldrb	r2, [r4, #5]
1004cfe6:	7921      	ldrb	r1, [r4, #4]
1004cfe8:	8860      	ldrh	r0, [r4, #2]
1004cfea:	1da3      	adds	r3, r4, #6
1004cfec:	f007 fb69 	bl	100546c2 <SMP_hci_le_enhanced_connection_complete_evt_hndl>
1004cff0:	4621      	mov	r1, r4
1004cff2:	4628      	mov	r0, r5
1004cff4:	f7fe fd20 	bl	1004ba38 <Gatt_Server_L2C_Handler_ISR>
1004cff8:	4621      	mov	r1, r4
1004cffa:	4628      	mov	r0, r5
1004cffc:	f000 fab4 	bl	1004d568 <L2C_Signal_Channel_Handler_ISR>
1004d000:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

1004d002 <L2C_Connection_Complete_Signal_Handler>:
1004d002:	b570      	push	{r4, r5, r6, lr}
1004d004:	4605      	mov	r5, r0
1004d006:	460c      	mov	r4, r1
1004d008:	2000      	movs	r0, #0
1004d00a:	f000 f80f 	bl	1004d02c <L2C_Get_Connection_Info>
1004d00e:	2800      	cmp	r0, #0
1004d010:	d00b      	beq.n	1004d02a <L2C_Connection_Complete_Signal_Handler+0x28>
1004d012:	0529      	lsls	r1, r5, #20
1004d014:	0d09      	lsrs	r1, r1, #20
1004d016:	8001      	strh	r1, [r0, #0]
1004d018:	2100      	movs	r1, #0
1004d01a:	7081      	strb	r1, [r0, #2]
1004d01c:	2c00      	cmp	r4, #0
1004d01e:	d101      	bne.n	1004d024 <L2C_Connection_Complete_Signal_Handler+0x22>
1004d020:	2108      	movs	r1, #8
1004d022:	7081      	strb	r1, [r0, #2]
1004d024:	2101      	movs	r1, #1
1004d026:	7101      	strb	r1, [r0, #4]
1004d028:	70c1      	strb	r1, [r0, #3]
1004d02a:	bd70      	pop	{r4, r5, r6, pc}

1004d02c <L2C_Get_Connection_Info>:
1004d02c:	b530      	push	{r4, r5, lr}
1004d02e:	4602      	mov	r2, r0
1004d030:	480a      	ldr	r0, [pc, #40]	; (1004d05c <L2C_Get_Connection_Info+0x30>)
1004d032:	230f      	movs	r3, #15
1004d034:	6800      	ldr	r0, [r0, #0]
1004d036:	01db      	lsls	r3, r3, #7
1004d038:	2100      	movs	r1, #0
1004d03a:	18c3      	adds	r3, r0, r3
1004d03c:	30a0      	adds	r0, #160	; 0xa0
1004d03e:	7b04      	ldrb	r4, [r0, #12]
1004d040:	e007      	b.n	1004d052 <L2C_Get_Connection_Info+0x26>
1004d042:	6fd8      	ldr	r0, [r3, #124]	; 0x7c
1004d044:	010d      	lsls	r5, r1, #4
1004d046:	1940      	adds	r0, r0, r5
1004d048:	8805      	ldrh	r5, [r0, #0]
1004d04a:	4295      	cmp	r5, r2
1004d04c:	d004      	beq.n	1004d058 <L2C_Get_Connection_Info+0x2c>
1004d04e:	1c49      	adds	r1, r1, #1
1004d050:	b2c9      	uxtb	r1, r1
1004d052:	428c      	cmp	r4, r1
1004d054:	d8f5      	bhi.n	1004d042 <L2C_Get_Connection_Info+0x16>
1004d056:	2000      	movs	r0, #0
1004d058:	bd30      	pop	{r4, r5, pc}
1004d05a:	0000      	.short	0x0000
1004d05c:	2000098c 	.word	0x2000098c

1004d060 <L2C_Get_Connection_Info_Index>:
1004d060:	b530      	push	{r4, r5, lr}
1004d062:	490a      	ldr	r1, [pc, #40]	; (1004d08c <L2C_Get_Connection_Info_Index+0x2c>)
1004d064:	230f      	movs	r3, #15
1004d066:	6809      	ldr	r1, [r1, #0]
1004d068:	4602      	mov	r2, r0
1004d06a:	01db      	lsls	r3, r3, #7
1004d06c:	2000      	movs	r0, #0
1004d06e:	18cb      	adds	r3, r1, r3
1004d070:	31a0      	adds	r1, #160	; 0xa0
1004d072:	7b09      	ldrb	r1, [r1, #12]
1004d074:	e007      	b.n	1004d086 <L2C_Get_Connection_Info_Index+0x26>
1004d076:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
1004d078:	0105      	lsls	r5, r0, #4
1004d07a:	1964      	adds	r4, r4, r5
1004d07c:	8824      	ldrh	r4, [r4, #0]
1004d07e:	4294      	cmp	r4, r2
1004d080:	d003      	beq.n	1004d08a <L2C_Get_Connection_Info_Index+0x2a>
1004d082:	1c40      	adds	r0, r0, #1
1004d084:	b2c0      	uxtb	r0, r0
1004d086:	4281      	cmp	r1, r0
1004d088:	d8f5      	bhi.n	1004d076 <L2C_Get_Connection_Info_Index+0x16>
1004d08a:	bd30      	pop	{r4, r5, pc}
1004d08c:	2000098c 	.word	0x2000098c

1004d090 <L2C_Get_PDU_Len>:
1004d090:	6880      	ldr	r0, [r0, #8]
1004d092:	7a01      	ldrb	r1, [r0, #8]
1004d094:	7a40      	ldrb	r0, [r0, #9]
1004d096:	0200      	lsls	r0, r0, #8
1004d098:	1808      	adds	r0, r1, r0
1004d09a:	b280      	uxth	r0, r0
1004d09c:	4770      	bx	lr
	...

1004d0a0 <L2C_Init>:
1004d0a0:	b570      	push	{r4, r5, r6, lr}
1004d0a2:	2300      	movs	r3, #0
1004d0a4:	4a13      	ldr	r2, [pc, #76]	; (1004d0f4 <L2C_Init+0x54>)
1004d0a6:	e01d      	b.n	1004d0e4 <L2C_Init+0x44>
1004d0a8:	250f      	movs	r5, #15
1004d0aa:	01ed      	lsls	r5, r5, #7
1004d0ac:	1940      	adds	r0, r0, r5
1004d0ae:	0119      	lsls	r1, r3, #4
1004d0b0:	6fc6      	ldr	r6, [r0, #124]	; 0x7c
1004d0b2:	2400      	movs	r4, #0
1004d0b4:	1cc8      	adds	r0, r1, #3
1004d0b6:	5434      	strb	r4, [r6, r0]
1004d0b8:	6810      	ldr	r0, [r2, #0]
1004d0ba:	1940      	adds	r0, r0, r5
1004d0bc:	6fc6      	ldr	r6, [r0, #124]	; 0x7c
1004d0be:	1d08      	adds	r0, r1, #4
1004d0c0:	5434      	strb	r4, [r6, r0]
1004d0c2:	6810      	ldr	r0, [r2, #0]
1004d0c4:	1940      	adds	r0, r0, r5
1004d0c6:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004d0c8:	5244      	strh	r4, [r0, r1]
1004d0ca:	6810      	ldr	r0, [r2, #0]
1004d0cc:	1940      	adds	r0, r0, r5
1004d0ce:	6fc6      	ldr	r6, [r0, #124]	; 0x7c
1004d0d0:	4608      	mov	r0, r1
1004d0d2:	3008      	adds	r0, #8
1004d0d4:	5234      	strh	r4, [r6, r0]
1004d0d6:	6810      	ldr	r0, [r2, #0]
1004d0d8:	310c      	adds	r1, #12
1004d0da:	1940      	adds	r0, r0, r5
1004d0dc:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004d0de:	1c5b      	adds	r3, r3, #1
1004d0e0:	5044      	str	r4, [r0, r1]
1004d0e2:	b2db      	uxtb	r3, r3
1004d0e4:	6810      	ldr	r0, [r2, #0]
1004d0e6:	21ac      	movs	r1, #172	; 0xac
1004d0e8:	5c09      	ldrb	r1, [r1, r0]
1004d0ea:	4299      	cmp	r1, r3
1004d0ec:	d8dc      	bhi.n	1004d0a8 <L2C_Init+0x8>
1004d0ee:	2000      	movs	r0, #0
1004d0f0:	bd70      	pop	{r4, r5, r6, pc}
1004d0f2:	0000      	.short	0x0000
1004d0f4:	2000098c 	.word	0x2000098c

1004d0f8 <L2C_Mux_Acl_Packet>:
1004d0f8:	b510      	push	{r4, lr}
1004d0fa:	4602      	mov	r2, r0
1004d0fc:	6888      	ldr	r0, [r1, #8]
1004d0fe:	460c      	mov	r4, r1
1004d100:	7a81      	ldrb	r1, [r0, #10]
1004d102:	7ac0      	ldrb	r0, [r0, #11]
1004d104:	0200      	lsls	r0, r0, #8
1004d106:	1808      	adds	r0, r1, r0
1004d108:	b281      	uxth	r1, r0
1004d10a:	88e0      	ldrh	r0, [r4, #6]
1004d10c:	1f00      	subs	r0, r0, #4
1004d10e:	80e0      	strh	r0, [r4, #6]
1004d110:	2904      	cmp	r1, #4
1004d112:	d009      	beq.n	1004d128 <L2C_Mux_Acl_Packet+0x30>
1004d114:	2905      	cmp	r1, #5
1004d116:	d00c      	beq.n	1004d132 <L2C_Mux_Acl_Packet+0x3a>
1004d118:	2906      	cmp	r1, #6
1004d11a:	d00f      	beq.n	1004d13c <L2C_Mux_Acl_Packet+0x44>
1004d11c:	2101      	movs	r1, #1
1004d11e:	4620      	mov	r0, r4
1004d120:	f003 fb58 	bl	100507d4 <PM_Release_Acl_Pckt>
1004d124:	2000      	movs	r0, #0
1004d126:	bd10      	pop	{r4, pc}
1004d128:	4621      	mov	r1, r4
1004d12a:	4610      	mov	r0, r2
1004d12c:	f7fe fb76 	bl	1004b81c <Gatt_Server_L2C_Handler>
1004d130:	e008      	b.n	1004d144 <L2C_Mux_Acl_Packet+0x4c>
1004d132:	4621      	mov	r1, r4
1004d134:	4610      	mov	r0, r2
1004d136:	f000 f93f 	bl	1004d3b8 <L2C_Signal_Channel_Handler>
1004d13a:	e003      	b.n	1004d144 <L2C_Mux_Acl_Packet+0x4c>
1004d13c:	4621      	mov	r1, r4
1004d13e:	4610      	mov	r0, r2
1004d140:	f007 f8b2 	bl	100542a8 <SMP_acl_data_hndl>
1004d144:	2800      	cmp	r0, #0
1004d146:	d0ee      	beq.n	1004d126 <L2C_Mux_Acl_Packet+0x2e>
1004d148:	88e1      	ldrh	r1, [r4, #6]
1004d14a:	1d09      	adds	r1, r1, #4
1004d14c:	80e1      	strh	r1, [r4, #6]
1004d14e:	bd10      	pop	{r4, pc}

1004d150 <L2C_Rcv_Data>:
1004d150:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004d152:	b081      	sub	sp, #4
1004d154:	460d      	mov	r5, r1
1004d156:	2600      	movs	r6, #0
1004d158:	8888      	ldrh	r0, [r1, #4]
1004d15a:	f7ff ff67 	bl	1004d02c <L2C_Get_Connection_Info>
1004d15e:	0007      	movs	r7, r0
1004d160:	d056      	beq.n	1004d210 <L2C_Rcv_Data+0xc0>
1004d162:	7b28      	ldrb	r0, [r5, #12]
1004d164:	463c      	mov	r4, r7
1004d166:	3408      	adds	r4, #8
1004d168:	9000      	str	r0, [sp, #0]
1004d16a:	2802      	cmp	r0, #2
1004d16c:	68f8      	ldr	r0, [r7, #12]
1004d16e:	d033      	beq.n	1004d1d8 <L2C_Rcv_Data+0x88>
1004d170:	2800      	cmp	r0, #0
1004d172:	d045      	beq.n	1004d200 <L2C_Rcv_Data+0xb0>
1004d174:	88e8      	ldrh	r0, [r5, #6]
1004d176:	2800      	cmp	r0, #0
1004d178:	d010      	beq.n	1004d19c <L2C_Rcv_Data+0x4c>
1004d17a:	8821      	ldrh	r1, [r4, #0]
1004d17c:	1840      	adds	r0, r0, r1
1004d17e:	8020      	strh	r0, [r4, #0]
1004d180:	4628      	mov	r0, r5
1004d182:	f003 faa1 	bl	100506c8 <PM_Extract_Pdu_MBuff>
1004d186:	4601      	mov	r1, r0
1004d188:	6860      	ldr	r0, [r4, #4]
1004d18a:	6880      	ldr	r0, [r0, #8]
1004d18c:	f002 f9fc 	bl	1004f588 <Mem_Buff_Append>
1004d190:	2001      	movs	r0, #1
1004d192:	6861      	ldr	r1, [r4, #4]
1004d194:	f003 fa58 	bl	10050648 <PM_Compact>
1004d198:	2000      	movs	r0, #0
1004d19a:	80e8      	strh	r0, [r5, #6]
1004d19c:	8820      	ldrh	r0, [r4, #0]
1004d19e:	2804      	cmp	r0, #4
1004d1a0:	d328      	bcc.n	1004d1f4 <L2C_Rcv_Data+0xa4>
1004d1a2:	6860      	ldr	r0, [r4, #4]
1004d1a4:	f7ff ff74 	bl	1004d090 <L2C_Get_PDU_Len>
1004d1a8:	1d00      	adds	r0, r0, #4
1004d1aa:	8821      	ldrh	r1, [r4, #0]
1004d1ac:	b280      	uxth	r0, r0
1004d1ae:	4281      	cmp	r1, r0
1004d1b0:	d826      	bhi.n	1004d200 <L2C_Rcv_Data+0xb0>
1004d1b2:	4281      	cmp	r1, r0
1004d1b4:	d11b      	bne.n	1004d1ee <L2C_Rcv_Data+0x9e>
1004d1b6:	6861      	ldr	r1, [r4, #4]
1004d1b8:	80c8      	strh	r0, [r1, #6]
1004d1ba:	6861      	ldr	r1, [r4, #4]
1004d1bc:	9801      	ldr	r0, [sp, #4]
1004d1be:	f7ff ff9b 	bl	1004d0f8 <L2C_Mux_Acl_Packet>
1004d1c2:	4601      	mov	r1, r0
1004d1c4:	2000      	movs	r0, #0
1004d1c6:	2900      	cmp	r1, #0
1004d1c8:	d00e      	beq.n	1004d1e8 <L2C_Rcv_Data+0x98>
1004d1ca:	6861      	ldr	r1, [r4, #4]
1004d1cc:	42a9      	cmp	r1, r5
1004d1ce:	d101      	bne.n	1004d1d4 <L2C_Rcv_Data+0x84>
1004d1d0:	6060      	str	r0, [r4, #4]
1004d1d2:	8020      	strh	r0, [r4, #0]
1004d1d4:	2645      	movs	r6, #69	; 0x45
1004d1d6:	e01f      	b.n	1004d218 <L2C_Rcv_Data+0xc8>
1004d1d8:	2800      	cmp	r0, #0
1004d1da:	d001      	beq.n	1004d1e0 <L2C_Rcv_Data+0x90>
1004d1dc:	2645      	movs	r6, #69	; 0x45
1004d1de:	e7dd      	b.n	1004d19c <L2C_Rcv_Data+0x4c>
1004d1e0:	6065      	str	r5, [r4, #4]
1004d1e2:	88e8      	ldrh	r0, [r5, #6]
1004d1e4:	8020      	strh	r0, [r4, #0]
1004d1e6:	e7d9      	b.n	1004d19c <L2C_Rcv_Data+0x4c>
1004d1e8:	6060      	str	r0, [r4, #4]
1004d1ea:	8020      	strh	r0, [r4, #0]
1004d1ec:	e00b      	b.n	1004d206 <L2C_Rcv_Data+0xb6>
1004d1ee:	2e45      	cmp	r6, #69	; 0x45
1004d1f0:	d006      	beq.n	1004d200 <L2C_Rcv_Data+0xb0>
1004d1f2:	e008      	b.n	1004d206 <L2C_Rcv_Data+0xb6>
1004d1f4:	2e45      	cmp	r6, #69	; 0x45
1004d1f6:	d106      	bne.n	1004d206 <L2C_Rcv_Data+0xb6>
1004d1f8:	4638      	mov	r0, r7
1004d1fa:	f000 f9c7 	bl	1004d58c <L2C_discard_accumulated_acl_data>
1004d1fe:	e00b      	b.n	1004d218 <L2C_Rcv_Data+0xc8>
1004d200:	4638      	mov	r0, r7
1004d202:	f000 f9c3 	bl	1004d58c <L2C_discard_accumulated_acl_data>
1004d206:	2e00      	cmp	r6, #0
1004d208:	d106      	bne.n	1004d218 <L2C_Rcv_Data+0xc8>
1004d20a:	9800      	ldr	r0, [sp, #0]
1004d20c:	2801      	cmp	r0, #1
1004d20e:	d103      	bne.n	1004d218 <L2C_Rcv_Data+0xc8>
1004d210:	2101      	movs	r1, #1
1004d212:	4628      	mov	r0, r5
1004d214:	f003 fade 	bl	100507d4 <PM_Release_Acl_Pckt>
1004d218:	4630      	mov	r0, r6
1004d21a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1004d21c <L2C_Rcv_Event_Handler>:
1004d21c:	4602      	mov	r2, r0
1004d21e:	b510      	push	{r4, lr}
1004d220:	2000      	movs	r0, #0
1004d222:	2a00      	cmp	r2, #0
1004d224:	d005      	beq.n	1004d232 <L2C_Rcv_Event_Handler+0x16>
1004d226:	2a01      	cmp	r2, #1
1004d228:	d102      	bne.n	1004d230 <L2C_Rcv_Event_Handler+0x14>
1004d22a:	4610      	mov	r0, r2
1004d22c:	f7ff ff90 	bl	1004d150 <L2C_Rcv_Data>
1004d230:	bd10      	pop	{r4, pc}
1004d232:	4610      	mov	r0, r2
1004d234:	f7ff ff60 	bl	1004d0f8 <L2C_Mux_Acl_Packet>
1004d238:	bd10      	pop	{r4, pc}

1004d23a <L2C_Rcv_Event_Handler_ISR>:
1004d23a:	b570      	push	{r4, r5, r6, lr}
1004d23c:	4605      	mov	r5, r0
1004d23e:	1e80      	subs	r0, r0, #2
1004d240:	460c      	mov	r4, r1
1004d242:	0003      	movs	r3, r0
1004d244:	f7ff fa11 	bl	1004c66a <__ARM_common_switch8>
1004d248:	1d1d0c0a 	.word	0x1d1d0c0a
1004d24c:	0b0b1706 	.word	0x0b0b1706
1004d250:	0b060b0b 	.word	0x0b060b0b
1004d254:	460a      	mov	r2, r1
1004d256:	7820      	ldrb	r0, [r4, #0]
1004d258:	4629      	mov	r1, r5
1004d25a:	f7ff fead 	bl	1004cfb8 <L2C_Connection_Complete_Handler>
1004d25e:	bd70      	pop	{r4, r5, r6, pc}
1004d260:	4628      	mov	r0, r5
1004d262:	f7fe fbe9 	bl	1004ba38 <Gatt_Server_L2C_Handler_ISR>
1004d266:	8860      	ldrh	r0, [r4, #2]
1004d268:	f007 f964 	bl	10054534 <SMP_hci_disconnection_complete_evt_hndl>
1004d26c:	4621      	mov	r1, r4
1004d26e:	4628      	mov	r0, r5
1004d270:	f000 f97a 	bl	1004d568 <L2C_Signal_Channel_Handler_ISR>
1004d274:	bd70      	pop	{r4, r5, r6, pc}
1004d276:	894a      	ldrh	r2, [r1, #10]
1004d278:	8808      	ldrh	r0, [r1, #0]
1004d27a:	1ca1      	adds	r1, r4, #2
1004d27c:	f007 fa4a 	bl	10054714 <SMP_hci_le_long_term_key_request_evt_hndl>
1004d280:	bd70      	pop	{r4, r5, r6, pc}
1004d282:	8862      	ldrh	r2, [r4, #2]
1004d284:	7809      	ldrb	r1, [r1, #0]
1004d286:	4628      	mov	r0, r5
1004d288:	f007 f974 	bl	10054574 <SMP_hci_encryption_change_evt_hndl>
1004d28c:	bd70      	pop	{r4, r5, r6, pc}
	...

1004d290 <L2C_Reset_To_Closed_State>:
1004d290:	b5f0      	push	{r4, r5, r6, r7, lr}
1004d292:	b085      	sub	sp, #20
1004d294:	f7ff fee4 	bl	1004d060 <L2C_Get_Connection_Info_Index>
1004d298:	4d1b      	ldr	r5, [pc, #108]	; (1004d308 <L2C_Reset_To_Closed_State+0x78>)
1004d29a:	4604      	mov	r4, r0
1004d29c:	6828      	ldr	r0, [r5, #0]
1004d29e:	30a0      	adds	r0, #160	; 0xa0
1004d2a0:	7b00      	ldrb	r0, [r0, #12]
1004d2a2:	42a0      	cmp	r0, r4
1004d2a4:	d92d      	bls.n	1004d302 <L2C_Reset_To_Closed_State+0x72>
1004d2a6:	4620      	mov	r0, r4
1004d2a8:	3032      	adds	r0, #50	; 0x32
1004d2aa:	4669      	mov	r1, sp
1004d2ac:	7308      	strb	r0, [r1, #12]
1004d2ae:	4668      	mov	r0, sp
1004d2b0:	f7ff fe06 	bl	1004cec0 <Timer_StopOneShot>
1004d2b4:	260f      	movs	r6, #15
1004d2b6:	6828      	ldr	r0, [r5, #0]
1004d2b8:	01f6      	lsls	r6, r6, #7
1004d2ba:	1980      	adds	r0, r0, r6
1004d2bc:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
1004d2be:	2100      	movs	r1, #0
1004d2c0:	0124      	lsls	r4, r4, #4
1004d2c2:	5311      	strh	r1, [r2, r4]
1004d2c4:	6828      	ldr	r0, [r5, #0]
1004d2c6:	4627      	mov	r7, r4
1004d2c8:	1980      	adds	r0, r0, r6
1004d2ca:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
1004d2cc:	1ce0      	adds	r0, r4, #3
1004d2ce:	5411      	strb	r1, [r2, r0]
1004d2d0:	6828      	ldr	r0, [r5, #0]
1004d2d2:	370c      	adds	r7, #12
1004d2d4:	1980      	adds	r0, r0, r6
1004d2d6:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
1004d2d8:	1d20      	adds	r0, r4, #4
1004d2da:	5411      	strb	r1, [r2, r0]
1004d2dc:	6828      	ldr	r0, [r5, #0]
1004d2de:	1980      	adds	r0, r0, r6
1004d2e0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004d2e2:	59c0      	ldr	r0, [r0, r7]
1004d2e4:	2800      	cmp	r0, #0
1004d2e6:	d00c      	beq.n	1004d302 <L2C_Reset_To_Closed_State+0x72>
1004d2e8:	2101      	movs	r1, #1
1004d2ea:	f003 fa73 	bl	100507d4 <PM_Release_Acl_Pckt>
1004d2ee:	6829      	ldr	r1, [r5, #0]
1004d2f0:	2000      	movs	r0, #0
1004d2f2:	1989      	adds	r1, r1, r6
1004d2f4:	6fc9      	ldr	r1, [r1, #124]	; 0x7c
1004d2f6:	51c8      	str	r0, [r1, r7]
1004d2f8:	6829      	ldr	r1, [r5, #0]
1004d2fa:	1989      	adds	r1, r1, r6
1004d2fc:	6fc9      	ldr	r1, [r1, #124]	; 0x7c
1004d2fe:	3408      	adds	r4, #8
1004d300:	5308      	strh	r0, [r1, r4]
1004d302:	b005      	add	sp, #20
1004d304:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004d306:	0000      	.short	0x0000
1004d308:	2000098c 	.word	0x2000098c

1004d30c <L2C_Send_Data>:
1004d30c:	b510      	push	{r4, lr}
1004d30e:	460c      	mov	r4, r1
1004d310:	4601      	mov	r1, r0
1004d312:	2804      	cmp	r0, #4
1004d314:	d005      	beq.n	1004d322 <L2C_Send_Data+0x16>
1004d316:	2905      	cmp	r1, #5
1004d318:	d003      	beq.n	1004d322 <L2C_Send_Data+0x16>
1004d31a:	2906      	cmp	r1, #6
1004d31c:	d001      	beq.n	1004d322 <L2C_Send_Data+0x16>
1004d31e:	2050      	movs	r0, #80	; 0x50
1004d320:	bd10      	pop	{r4, pc}
1004d322:	68a0      	ldr	r0, [r4, #8]
1004d324:	79a2      	ldrb	r2, [r4, #6]
1004d326:	7202      	strb	r2, [r0, #8]
1004d328:	88e0      	ldrh	r0, [r4, #6]
1004d32a:	0a02      	lsrs	r2, r0, #8
1004d32c:	68a0      	ldr	r0, [r4, #8]
1004d32e:	7242      	strb	r2, [r0, #9]
1004d330:	68a0      	ldr	r0, [r4, #8]
1004d332:	7281      	strb	r1, [r0, #10]
1004d334:	68a0      	ldr	r0, [r4, #8]
1004d336:	0a09      	lsrs	r1, r1, #8
1004d338:	72c1      	strb	r1, [r0, #11]
1004d33a:	88e0      	ldrh	r0, [r4, #6]
1004d33c:	1d00      	adds	r0, r0, #4
1004d33e:	80e0      	strh	r0, [r4, #6]
1004d340:	2002      	movs	r0, #2
1004d342:	7320      	strb	r0, [r4, #12]
1004d344:	4620      	mov	r0, r4
1004d346:	f008 fccb 	bl	10055ce0 <Acl_Transmit_Data>
1004d34a:	2800      	cmp	r0, #0
1004d34c:	d0e8      	beq.n	1004d320 <L2C_Send_Data+0x14>
1004d34e:	88e0      	ldrh	r0, [r4, #6]
1004d350:	1f00      	subs	r0, r0, #4
1004d352:	80e0      	strh	r0, [r4, #6]
1004d354:	2041      	movs	r0, #65	; 0x41
1004d356:	bd10      	pop	{r4, pc}

1004d358 <L2C_SigChan_Req_TimeOut_Handler>:
1004d358:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d35a:	3832      	subs	r0, #50	; 0x32
1004d35c:	0601      	lsls	r1, r0, #24
1004d35e:	2002      	movs	r0, #2
1004d360:	4d14      	ldr	r5, [pc, #80]	; (1004d3b4 <L2C_SigChan_Req_TimeOut_Handler+0x5c>)
1004d362:	9000      	str	r0, [sp, #0]
1004d364:	260f      	movs	r6, #15
1004d366:	6828      	ldr	r0, [r5, #0]
1004d368:	01f6      	lsls	r6, r6, #7
1004d36a:	0d0c      	lsrs	r4, r1, #20
1004d36c:	1982      	adds	r2, r0, r6
1004d36e:	2137      	movs	r1, #55	; 0x37
1004d370:	0149      	lsls	r1, r1, #5
1004d372:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
1004d374:	1841      	adds	r1, r0, r1
1004d376:	7ac9      	ldrb	r1, [r1, #11]
1004d378:	5b17      	ldrh	r7, [r2, r4]
1004d37a:	2301      	movs	r3, #1
1004d37c:	0749      	lsls	r1, r1, #29
1004d37e:	d50d      	bpl.n	1004d39c <L2C_SigChan_Req_TimeOut_Handler+0x44>
1004d380:	02d9      	lsls	r1, r3, #11
1004d382:	3008      	adds	r0, #8
1004d384:	1840      	adds	r0, r0, r1
1004d386:	221e      	movs	r2, #30
1004d388:	6940      	ldr	r0, [r0, #20]
1004d38a:	2102      	movs	r1, #2
1004d38c:	f007 ff2e 	bl	100551ec <aci_event_fifo_push_header>
1004d390:	0001      	movs	r1, r0
1004d392:	d003      	beq.n	1004d39c <L2C_SigChan_Req_TimeOut_Handler+0x44>
1004d394:	808f      	strh	r7, [r1, #4]
1004d396:	9800      	ldr	r0, [sp, #0]
1004d398:	f007 ff14 	bl	100551c4 <aci_event_fifo_push>
1004d39c:	6829      	ldr	r1, [r5, #0]
1004d39e:	2000      	movs	r0, #0
1004d3a0:	1989      	adds	r1, r1, r6
1004d3a2:	6fca      	ldr	r2, [r1, #124]	; 0x7c
1004d3a4:	1d21      	adds	r1, r4, #4
1004d3a6:	5450      	strb	r0, [r2, r1]
1004d3a8:	6829      	ldr	r1, [r5, #0]
1004d3aa:	1989      	adds	r1, r1, r6
1004d3ac:	6fc9      	ldr	r1, [r1, #124]	; 0x7c
1004d3ae:	1ce4      	adds	r4, r4, #3
1004d3b0:	5508      	strb	r0, [r1, r4]
1004d3b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d3b4:	2000098c 	.word	0x2000098c

1004d3b8 <L2C_Signal_Channel_Handler>:
1004d3b8:	b5f0      	push	{r4, r5, r6, r7, lr}
1004d3ba:	460d      	mov	r5, r1
1004d3bc:	b08d      	sub	sp, #52	; 0x34
1004d3be:	2100      	movs	r1, #0
1004d3c0:	910a      	str	r1, [sp, #40]	; 0x28
1004d3c2:	68a9      	ldr	r1, [r5, #8]
1004d3c4:	2800      	cmp	r0, #0
1004d3c6:	7b0f      	ldrb	r7, [r1, #12]
1004d3c8:	d002      	beq.n	1004d3d0 <L2C_Signal_Channel_Handler+0x18>
1004d3ca:	2801      	cmp	r0, #1
1004d3cc:	d022      	beq.n	1004d414 <L2C_Signal_Channel_Handler+0x5c>
1004d3ce:	e0c3      	b.n	1004d558 <L2C_Signal_Channel_Handler+0x1a0>
1004d3d0:	88a8      	ldrh	r0, [r5, #4]
1004d3d2:	f7ff fe45 	bl	1004d060 <L2C_Get_Connection_Info_Index>
1004d3d6:	4e62      	ldr	r6, [pc, #392]	; (1004d560 <L2C_Signal_Channel_Handler+0x1a8>)
1004d3d8:	4604      	mov	r4, r0
1004d3da:	6830      	ldr	r0, [r6, #0]
1004d3dc:	30a0      	adds	r0, #160	; 0xa0
1004d3de:	7b00      	ldrb	r0, [r0, #12]
1004d3e0:	42a0      	cmp	r0, r4
1004d3e2:	d915      	bls.n	1004d410 <L2C_Signal_Channel_Handler+0x58>
1004d3e4:	2f12      	cmp	r7, #18
1004d3e6:	d108      	bne.n	1004d3fa <L2C_Signal_Channel_Handler+0x42>
1004d3e8:	485e      	ldr	r0, [pc, #376]	; (1004d564 <L2C_Signal_Channel_Handler+0x1ac>)
1004d3ea:	9002      	str	r0, [sp, #8]
1004d3ec:	4620      	mov	r0, r4
1004d3ee:	3032      	adds	r0, #50	; 0x32
1004d3f0:	4669      	mov	r1, sp
1004d3f2:	7308      	strb	r0, [r1, #12]
1004d3f4:	4668      	mov	r0, sp
1004d3f6:	f7ff fd17 	bl	1004ce28 <Timer_StartOneShot>
1004d3fa:	200f      	movs	r0, #15
1004d3fc:	6831      	ldr	r1, [r6, #0]
1004d3fe:	01c0      	lsls	r0, r0, #7
1004d400:	1808      	adds	r0, r1, r0
1004d402:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004d404:	0121      	lsls	r1, r4, #4
1004d406:	1840      	adds	r0, r0, r1
1004d408:	7881      	ldrb	r1, [r0, #2]
1004d40a:	22fd      	movs	r2, #253	; 0xfd
1004d40c:	4011      	ands	r1, r2
1004d40e:	7081      	strb	r1, [r0, #2]
1004d410:	2100      	movs	r1, #0
1004d412:	e09e      	b.n	1004d552 <L2C_Signal_Channel_Handler+0x19a>
1004d414:	88a8      	ldrh	r0, [r5, #4]
1004d416:	f7ff fe23 	bl	1004d060 <L2C_Get_Connection_Info_Index>
1004d41a:	4606      	mov	r6, r0
1004d41c:	4850      	ldr	r0, [pc, #320]	; (1004d560 <L2C_Signal_Channel_Handler+0x1a8>)
1004d41e:	22ac      	movs	r2, #172	; 0xac
1004d420:	6801      	ldr	r1, [r0, #0]
1004d422:	5c52      	ldrb	r2, [r2, r1]
1004d424:	42b2      	cmp	r2, r6
1004d426:	d918      	bls.n	1004d45a <L2C_Signal_Channel_Handler+0xa2>
1004d428:	200f      	movs	r0, #15
1004d42a:	01c0      	lsls	r0, r0, #7
1004d42c:	1808      	adds	r0, r1, r0
1004d42e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1004d430:	0132      	lsls	r2, r6, #4
1004d432:	1884      	adds	r4, r0, r2
1004d434:	78a2      	ldrb	r2, [r4, #2]
1004d436:	0710      	lsls	r0, r2, #28
1004d438:	d510      	bpl.n	1004d45c <L2C_Signal_Channel_Handler+0xa4>
1004d43a:	2f12      	cmp	r7, #18
1004d43c:	d110      	bne.n	1004d460 <L2C_Signal_Channel_Handler+0xa8>
1004d43e:	0750      	lsls	r0, r2, #29
1004d440:	d410      	bmi.n	1004d464 <L2C_Signal_Channel_Handler+0xac>
1004d442:	88a9      	ldrh	r1, [r5, #4]
1004d444:	462a      	mov	r2, r5
1004d446:	2042      	movs	r0, #66	; 0x42
1004d448:	f000 f8ce 	bl	1004d5e8 <aci_l2cap_connection_update_req_event_push>
1004d44c:	78a0      	ldrb	r0, [r4, #2]
1004d44e:	2104      	movs	r1, #4
1004d450:	4308      	orrs	r0, r1
1004d452:	70a0      	strb	r0, [r4, #2]
1004d454:	68a8      	ldr	r0, [r5, #8]
1004d456:	7b40      	ldrb	r0, [r0, #13]
1004d458:	7120      	strb	r0, [r4, #4]
1004d45a:	e079      	b.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d45c:	2f13      	cmp	r7, #19
1004d45e:	d00a      	beq.n	1004d476 <L2C_Signal_Channel_Handler+0xbe>
1004d460:	2f01      	cmp	r7, #1
1004d462:	d041      	beq.n	1004d4e8 <L2C_Signal_Channel_Handler+0x130>
1004d464:	68a8      	ldr	r0, [r5, #8]
1004d466:	7b41      	ldrb	r1, [r0, #13]
1004d468:	88a8      	ldrh	r0, [r5, #4]
1004d46a:	f7ff fd67 	bl	1004cf3c <L2C_Build_Command_Reject_Pdu>
1004d46e:	900a      	str	r0, [sp, #40]	; 0x28
1004d470:	2800      	cmp	r0, #0
1004d472:	d06d      	beq.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d474:	e070      	b.n	1004d558 <L2C_Signal_Channel_Handler+0x1a0>
1004d476:	68a8      	ldr	r0, [r5, #8]
1004d478:	78e7      	ldrb	r7, [r4, #3]
1004d47a:	7b43      	ldrb	r3, [r0, #13]
1004d47c:	42bb      	cmp	r3, r7
1004d47e:	d167      	bne.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d480:	0752      	lsls	r2, r2, #29
1004d482:	d565      	bpl.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d484:	7c02      	ldrb	r2, [r0, #16]
1004d486:	7c40      	ldrb	r0, [r0, #17]
1004d488:	2301      	movs	r3, #1
1004d48a:	0200      	lsls	r0, r0, #8
1004d48c:	1810      	adds	r0, r2, r0
1004d48e:	b287      	uxth	r7, r0
1004d490:	2042      	movs	r0, #66	; 0x42
1004d492:	9004      	str	r0, [sp, #16]
1004d494:	88a8      	ldrh	r0, [r5, #4]
1004d496:	9006      	str	r0, [sp, #24]
1004d498:	2037      	movs	r0, #55	; 0x37
1004d49a:	0140      	lsls	r0, r0, #5
1004d49c:	1808      	adds	r0, r1, r0
1004d49e:	7ac0      	ldrb	r0, [r0, #11]
1004d4a0:	0780      	lsls	r0, r0, #30
1004d4a2:	d50f      	bpl.n	1004d4c4 <L2C_Signal_Channel_Handler+0x10c>
1004d4a4:	02d8      	lsls	r0, r3, #11
1004d4a6:	3108      	adds	r1, #8
1004d4a8:	1808      	adds	r0, r1, r0
1004d4aa:	221d      	movs	r2, #29
1004d4ac:	6940      	ldr	r0, [r0, #20]
1004d4ae:	9904      	ldr	r1, [sp, #16]
1004d4b0:	f007 fe9c 	bl	100551ec <aci_event_fifo_push_header>
1004d4b4:	0001      	movs	r1, r0
1004d4b6:	d005      	beq.n	1004d4c4 <L2C_Signal_Channel_Handler+0x10c>
1004d4b8:	9a06      	ldr	r2, [sp, #24]
1004d4ba:	808a      	strh	r2, [r1, #4]
1004d4bc:	80cf      	strh	r7, [r1, #6]
1004d4be:	9804      	ldr	r0, [sp, #16]
1004d4c0:	f007 fe80 	bl	100551c4 <aci_event_fifo_push>
1004d4c4:	78a0      	ldrb	r0, [r4, #2]
1004d4c6:	21fb      	movs	r1, #251	; 0xfb
1004d4c8:	4008      	ands	r0, r1
1004d4ca:	70a0      	strb	r0, [r4, #2]
1004d4cc:	78e0      	ldrb	r0, [r4, #3]
1004d4ce:	1c40      	adds	r0, r0, #1
1004d4d0:	0600      	lsls	r0, r0, #24
1004d4d2:	0e00      	lsrs	r0, r0, #24
1004d4d4:	70e0      	strb	r0, [r4, #3]
1004d4d6:	d101      	bne.n	1004d4dc <L2C_Signal_Channel_Handler+0x124>
1004d4d8:	2001      	movs	r0, #1
1004d4da:	70e0      	strb	r0, [r4, #3]
1004d4dc:	4668      	mov	r0, sp
1004d4de:	3632      	adds	r6, #50	; 0x32
1004d4e0:	7306      	strb	r6, [r0, #12]
1004d4e2:	f7ff fced 	bl	1004cec0 <Timer_StopOneShot>
1004d4e6:	e033      	b.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d4e8:	0710      	lsls	r0, r2, #28
1004d4ea:	d431      	bmi.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d4ec:	68a8      	ldr	r0, [r5, #8]
1004d4ee:	78e1      	ldrb	r1, [r4, #3]
1004d4f0:	7b40      	ldrb	r0, [r0, #13]
1004d4f2:	4288      	cmp	r0, r1
1004d4f4:	d12c      	bne.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d4f6:	0750      	lsls	r0, r2, #29
1004d4f8:	d52a      	bpl.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d4fa:	20fb      	movs	r0, #251	; 0xfb
1004d4fc:	4002      	ands	r2, r0
1004d4fe:	70a2      	strb	r2, [r4, #2]
1004d500:	78e0      	ldrb	r0, [r4, #3]
1004d502:	1c40      	adds	r0, r0, #1
1004d504:	0600      	lsls	r0, r0, #24
1004d506:	0e00      	lsrs	r0, r0, #24
1004d508:	70e0      	strb	r0, [r4, #3]
1004d50a:	d101      	bne.n	1004d510 <L2C_Signal_Channel_Handler+0x158>
1004d50c:	2001      	movs	r0, #1
1004d50e:	70e0      	strb	r0, [r4, #3]
1004d510:	4668      	mov	r0, sp
1004d512:	3632      	adds	r6, #50	; 0x32
1004d514:	7306      	strb	r6, [r0, #12]
1004d516:	f7ff fcd3 	bl	1004cec0 <Timer_StopOneShot>
1004d51a:	4811      	ldr	r0, [pc, #68]	; (1004d560 <L2C_Signal_Channel_Handler+0x1a8>)
1004d51c:	2220      	movs	r2, #32
1004d51e:	6800      	ldr	r0, [r0, #0]
1004d520:	0191      	lsls	r1, r2, #6
1004d522:	3008      	adds	r0, #8
1004d524:	1840      	adds	r0, r0, r1
1004d526:	2442      	movs	r4, #66	; 0x42
1004d528:	88ae      	ldrh	r6, [r5, #4]
1004d52a:	2302      	movs	r3, #2
1004d52c:	6940      	ldr	r0, [r0, #20]
1004d52e:	4621      	mov	r1, r4
1004d530:	f007 fe5c 	bl	100551ec <aci_event_fifo_push_header>
1004d534:	0001      	movs	r1, r0
1004d536:	d00b      	beq.n	1004d550 <L2C_Signal_Channel_Handler+0x198>
1004d538:	68a8      	ldr	r0, [r5, #8]
1004d53a:	7b43      	ldrb	r3, [r0, #13]
1004d53c:	7b87      	ldrb	r7, [r0, #14]
1004d53e:	7bc0      	ldrb	r0, [r0, #15]
1004d540:	808e      	strh	r6, [r1, #4]
1004d542:	0200      	lsls	r0, r0, #8
1004d544:	1838      	adds	r0, r7, r0
1004d546:	718b      	strb	r3, [r1, #6]
1004d548:	8108      	strh	r0, [r1, #8]
1004d54a:	4620      	mov	r0, r4
1004d54c:	f007 fe3a 	bl	100551c4 <aci_event_fifo_push>
1004d550:	2101      	movs	r1, #1
1004d552:	4628      	mov	r0, r5
1004d554:	f003 f93e 	bl	100507d4 <PM_Release_Acl_Pckt>
1004d558:	980a      	ldr	r0, [sp, #40]	; 0x28
1004d55a:	b00d      	add	sp, #52	; 0x34
1004d55c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004d55e:	0000      	.short	0x0000
1004d560:	2000098c 	.word	0x2000098c
1004d564:	00007530 	.word	0x00007530

1004d568 <L2C_Signal_Channel_Handler_ISR>:
1004d568:	b510      	push	{r4, lr}
1004d56a:	2802      	cmp	r0, #2
1004d56c:	d009      	beq.n	1004d582 <L2C_Signal_Channel_Handler_ISR+0x1a>
1004d56e:	2805      	cmp	r0, #5
1004d570:	d001      	beq.n	1004d576 <L2C_Signal_Channel_Handler_ISR+0xe>
1004d572:	280b      	cmp	r0, #11
1004d574:	d108      	bne.n	1004d588 <L2C_Signal_Channel_Handler_ISR+0x20>
1004d576:	4608      	mov	r0, r1
1004d578:	7909      	ldrb	r1, [r1, #4]
1004d57a:	8840      	ldrh	r0, [r0, #2]
1004d57c:	f7ff fd41 	bl	1004d002 <L2C_Connection_Complete_Signal_Handler>
1004d580:	e002      	b.n	1004d588 <L2C_Signal_Channel_Handler_ISR+0x20>
1004d582:	8848      	ldrh	r0, [r1, #2]
1004d584:	f7ff fe84 	bl	1004d290 <L2C_Reset_To_Closed_State>
1004d588:	2000      	movs	r0, #0
1004d58a:	bd10      	pop	{r4, pc}

1004d58c <L2C_discard_accumulated_acl_data>:
1004d58c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d58e:	4605      	mov	r5, r0
1004d590:	7880      	ldrb	r0, [r0, #2]
1004d592:	2110      	movs	r1, #16
1004d594:	4308      	orrs	r0, r1
1004d596:	70a8      	strb	r0, [r5, #2]
1004d598:	2042      	movs	r0, #66	; 0x42
1004d59a:	9000      	str	r0, [sp, #0]
1004d59c:	4811      	ldr	r0, [pc, #68]	; (1004d5e4 <L2C_discard_accumulated_acl_data+0x58>)
1004d59e:	01c9      	lsls	r1, r1, #7
1004d5a0:	6800      	ldr	r0, [r0, #0]
1004d5a2:	2701      	movs	r7, #1
1004d5a4:	3008      	adds	r0, #8
1004d5a6:	1840      	adds	r0, r0, r1
1004d5a8:	2602      	movs	r6, #2
1004d5aa:	463b      	mov	r3, r7
1004d5ac:	2221      	movs	r2, #33	; 0x21
1004d5ae:	6940      	ldr	r0, [r0, #20]
1004d5b0:	9900      	ldr	r1, [sp, #0]
1004d5b2:	f007 fe1b 	bl	100551ec <aci_event_fifo_push_header>
1004d5b6:	0004      	movs	r4, r0
1004d5b8:	d00a      	beq.n	1004d5d0 <L2C_discard_accumulated_acl_data+0x44>
1004d5ba:	7127      	strb	r7, [r4, #4]
1004d5bc:	7166      	strb	r6, [r4, #5]
1004d5be:	4632      	mov	r2, r6
1004d5c0:	4629      	mov	r1, r5
1004d5c2:	1da0      	adds	r0, r4, #6
1004d5c4:	f7f5 fdfb 	bl	100431be <Osal_MemCpy>
1004d5c8:	4621      	mov	r1, r4
1004d5ca:	9800      	ldr	r0, [sp, #0]
1004d5cc:	f007 fdfa 	bl	100551c4 <aci_event_fifo_push>
1004d5d0:	68e8      	ldr	r0, [r5, #12]
1004d5d2:	2800      	cmp	r0, #0
1004d5d4:	d005      	beq.n	1004d5e2 <L2C_discard_accumulated_acl_data+0x56>
1004d5d6:	2101      	movs	r1, #1
1004d5d8:	f003 f8fc 	bl	100507d4 <PM_Release_Acl_Pckt>
1004d5dc:	2000      	movs	r0, #0
1004d5de:	60e8      	str	r0, [r5, #12]
1004d5e0:	8128      	strh	r0, [r5, #8]
1004d5e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d5e4:	2000098c 	.word	0x2000098c

1004d5e8 <aci_l2cap_connection_update_req_event_push>:
1004d5e8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1004d5ea:	2304      	movs	r3, #4
1004d5ec:	4604      	mov	r4, r0
1004d5ee:	06c1      	lsls	r1, r0, #27
1004d5f0:	4822      	ldr	r0, [pc, #136]	; (1004d67c <aci_l2cap_connection_update_req_event_push+0x94>)
1004d5f2:	4615      	mov	r5, r2
1004d5f4:	6800      	ldr	r0, [r0, #0]
1004d5f6:	d503      	bpl.n	1004d600 <aci_l2cap_connection_update_req_event_push+0x18>
1004d5f8:	2222      	movs	r2, #34	; 0x22
1004d5fa:	21bf      	movs	r1, #191	; 0xbf
1004d5fc:	400c      	ands	r4, r1
1004d5fe:	e006      	b.n	1004d60e <aci_l2cap_connection_update_req_event_push+0x26>
1004d600:	2137      	movs	r1, #55	; 0x37
1004d602:	0149      	lsls	r1, r1, #5
1004d604:	1841      	adds	r1, r0, r1
1004d606:	7ac9      	ldrb	r1, [r1, #11]
1004d608:	07c9      	lsls	r1, r1, #31
1004d60a:	d032      	beq.n	1004d672 <aci_l2cap_connection_update_req_event_push+0x8a>
1004d60c:	221f      	movs	r2, #31
1004d60e:	0721      	lsls	r1, r4, #28
1004d610:	0e89      	lsrs	r1, r1, #26
1004d612:	1808      	adds	r0, r1, r0
1004d614:	2101      	movs	r1, #1
1004d616:	02c9      	lsls	r1, r1, #11
1004d618:	1840      	adds	r0, r0, r1
1004d61a:	6940      	ldr	r0, [r0, #20]
1004d61c:	4621      	mov	r1, r4
1004d61e:	f007 fde5 	bl	100551ec <aci_event_fifo_push_header>
1004d622:	0001      	movs	r1, r0
1004d624:	d027      	beq.n	1004d676 <aci_l2cap_connection_update_req_event_push+0x8e>
1004d626:	68aa      	ldr	r2, [r5, #8]
1004d628:	1d08      	adds	r0, r1, #4
1004d62a:	7b57      	ldrb	r7, [r2, #13]
1004d62c:	7bd5      	ldrb	r5, [r2, #15]
1004d62e:	7b93      	ldrb	r3, [r2, #14]
1004d630:	46be      	mov	lr, r7
1004d632:	022d      	lsls	r5, r5, #8
1004d634:	195f      	adds	r7, r3, r5
1004d636:	7c55      	ldrb	r5, [r2, #17]
1004d638:	7c13      	ldrb	r3, [r2, #16]
1004d63a:	022d      	lsls	r5, r5, #8
1004d63c:	195e      	adds	r6, r3, r5
1004d63e:	7cd5      	ldrb	r5, [r2, #19]
1004d640:	7c93      	ldrb	r3, [r2, #18]
1004d642:	46bc      	mov	ip, r7
1004d644:	022d      	lsls	r5, r5, #8
1004d646:	195d      	adds	r5, r3, r5
1004d648:	7d57      	ldrb	r7, [r2, #21]
1004d64a:	7d13      	ldrb	r3, [r2, #20]
1004d64c:	023f      	lsls	r7, r7, #8
1004d64e:	19db      	adds	r3, r3, r7
1004d650:	7d97      	ldrb	r7, [r2, #22]
1004d652:	7dd2      	ldrb	r2, [r2, #23]
1004d654:	0212      	lsls	r2, r2, #8
1004d656:	18ba      	adds	r2, r7, r2
1004d658:	9f01      	ldr	r7, [sp, #4]
1004d65a:	8007      	strh	r7, [r0, #0]
1004d65c:	4677      	mov	r7, lr
1004d65e:	7087      	strb	r7, [r0, #2]
1004d660:	4667      	mov	r7, ip
1004d662:	8087      	strh	r7, [r0, #4]
1004d664:	80c6      	strh	r6, [r0, #6]
1004d666:	8105      	strh	r5, [r0, #8]
1004d668:	8143      	strh	r3, [r0, #10]
1004d66a:	8182      	strh	r2, [r0, #12]
1004d66c:	4620      	mov	r0, r4
1004d66e:	f007 fda9 	bl	100551c4 <aci_event_fifo_push>
1004d672:	2000      	movs	r0, #0
1004d674:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004d676:	2007      	movs	r0, #7
1004d678:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004d67a:	0000      	.short	0x0000
1004d67c:	2000098c 	.word	0x2000098c

1004d680 <Data_Length_Update_Control_ISR_ucfg>:
1004d680:	2000      	movs	r0, #0
1004d682:	4770      	bx	lr

1004d684 <RAL_Isr>:
1004d684:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d686:	2609      	movs	r6, #9
1004d688:	06f6      	lsls	r6, r6, #27
1004d68a:	6831      	ldr	r1, [r6, #0]
1004d68c:	487a      	ldr	r0, [pc, #488]	; (1004d878 <RAL_Isr+0x1f4>)
1004d68e:	4a7b      	ldr	r2, [pc, #492]	; (1004d87c <RAL_Isr+0x1f8>)
1004d690:	6081      	str	r1, [r0, #8]
1004d692:	6813      	ldr	r3, [r2, #0]
1004d694:	2241      	movs	r2, #65	; 0x41
1004d696:	0152      	lsls	r2, r2, #5
1004d698:	189d      	adds	r5, r3, r2
1004d69a:	2200      	movs	r2, #0
1004d69c:	7002      	strb	r2, [r0, #0]
1004d69e:	7042      	strb	r2, [r0, #1]
1004d6a0:	6182      	str	r2, [r0, #24]
1004d6a2:	61c2      	str	r2, [r0, #28]
1004d6a4:	7102      	strb	r2, [r0, #4]
1004d6a6:	7142      	strb	r2, [r0, #5]
1004d6a8:	7182      	strb	r2, [r0, #6]
1004d6aa:	4a75      	ldr	r2, [pc, #468]	; (1004d880 <RAL_Isr+0x1fc>)
1004d6ac:	8812      	ldrh	r2, [r2, #0]
1004d6ae:	14f4      	asrs	r4, r6, #19
1004d6b0:	0752      	lsls	r2, r2, #29
1004d6b2:	0f52      	lsrs	r2, r2, #29
1004d6b4:	7082      	strb	r2, [r0, #2]
1004d6b6:	191c      	adds	r4, r3, r4
1004d6b8:	2758      	movs	r7, #88	; 0x58
1004d6ba:	6b24      	ldr	r4, [r4, #48]	; 0x30
1004d6bc:	4357      	muls	r7, r2
1004d6be:	19e7      	adds	r7, r4, r7
1004d6c0:	4c70      	ldr	r4, [pc, #448]	; (1004d884 <RAL_Isr+0x200>)
1004d6c2:	0192      	lsls	r2, r2, #6
1004d6c4:	1912      	adds	r2, r2, r4
1004d6c6:	60c7      	str	r7, [r0, #12]
1004d6c8:	6102      	str	r2, [r0, #16]
1004d6ca:	78ba      	ldrb	r2, [r7, #2]
1004d6cc:	70c2      	strb	r2, [r0, #3]
1004d6ce:	0757      	lsls	r7, r2, #29
1004d6d0:	0f7f      	lsrs	r7, r7, #29
1004d6d2:	0388      	lsls	r0, r1, #14
1004d6d4:	0f80      	lsrs	r0, r0, #30
1004d6d6:	d17c      	bne.n	1004d7d2 <RAL_Isr+0x14e>
1004d6d8:	4a69      	ldr	r2, [pc, #420]	; (1004d880 <RAL_Isr+0x1fc>)
1004d6da:	8e18      	ldrh	r0, [r3, #48]	; 0x30
1004d6dc:	8050      	strh	r0, [r2, #2]
1004d6de:	486a      	ldr	r0, [pc, #424]	; (1004d888 <RAL_Isr+0x204>)
1004d6e0:	4c65      	ldr	r4, [pc, #404]	; (1004d878 <RAL_Isr+0x1f4>)
1004d6e2:	4001      	ands	r1, r0
1004d6e4:	1390      	asrs	r0, r2, #14
1004d6e6:	4281      	cmp	r1, r0
1004d6e8:	d104      	bne.n	1004d6f4 <RAL_Isr+0x70>
1004d6ea:	f7ff faeb 	bl	1004ccc4 <Timer_ExpiryCallback>
1004d6ee:	68a0      	ldr	r0, [r4, #8]
1004d6f0:	6030      	str	r0, [r6, #0]
1004d6f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d6f4:	f002 ff66 	bl	100505c4 <Is_Flash_Write_On_Going>
1004d6f8:	2800      	cmp	r0, #0
1004d6fa:	d107      	bne.n	1004d70c <RAL_Isr+0x88>
1004d6fc:	485f      	ldr	r0, [pc, #380]	; (1004d87c <RAL_Isr+0x1f8>)
1004d6fe:	8800      	ldrh	r0, [r0, #0]
1004d700:	3050      	adds	r0, #80	; 0x50
1004d702:	b281      	uxth	r1, r0
1004d704:	2001      	movs	r0, #1
1004d706:	0400      	lsls	r0, r0, #16
1004d708:	1808      	adds	r0, r1, r0
1004d70a:	60f0      	str	r0, [r6, #12]
1004d70c:	495b      	ldr	r1, [pc, #364]	; (1004d87c <RAL_Isr+0x1f8>)
1004d70e:	2000      	movs	r0, #0
1004d710:	6809      	ldr	r1, [r1, #0]
1004d712:	3140      	adds	r1, #64	; 0x40
1004d714:	71c8      	strb	r0, [r1, #7]
1004d716:	68e1      	ldr	r1, [r4, #12]
1004d718:	73c8      	strb	r0, [r1, #15]
1004d71a:	495c      	ldr	r1, [pc, #368]	; (1004d88c <RAL_Isr+0x208>)
1004d71c:	00b8      	lsls	r0, r7, #2
1004d71e:	5808      	ldr	r0, [r1, r0]
1004d720:	4780      	blx	r0
1004d722:	68a0      	ldr	r0, [r4, #8]
1004d724:	2800      	cmp	r0, #0
1004d726:	da06      	bge.n	1004d736 <RAL_Isr+0xb2>
1004d728:	f002 ff4c 	bl	100505c4 <Is_Flash_Write_On_Going>
1004d72c:	2800      	cmp	r0, #0
1004d72e:	d102      	bne.n	1004d736 <RAL_Isr+0xb2>
1004d730:	78a0      	ldrb	r0, [r4, #2]
1004d732:	f001 f8e7 	bl	1004e904 <read_rssi>
1004d736:	2f01      	cmp	r7, #1
1004d738:	d004      	beq.n	1004d744 <RAL_Isr+0xc0>
1004d73a:	2f02      	cmp	r7, #2
1004d73c:	d019      	beq.n	1004d772 <RAL_Isr+0xee>
1004d73e:	2f05      	cmp	r7, #5
1004d740:	d017      	beq.n	1004d772 <RAL_Isr+0xee>
1004d742:	e03f      	b.n	1004d7c4 <RAL_Isr+0x140>
1004d744:	68a0      	ldr	r0, [r4, #8]
1004d746:	01c0      	lsls	r0, r0, #7
1004d748:	d53c      	bpl.n	1004d7c4 <RAL_Isr+0x140>
1004d74a:	f002 ff3b 	bl	100505c4 <Is_Flash_Write_On_Going>
1004d74e:	2800      	cmp	r0, #0
1004d750:	d138      	bne.n	1004d7c4 <RAL_Isr+0x140>
1004d752:	68a0      	ldr	r0, [r4, #8]
1004d754:	0340      	lsls	r0, r0, #13
1004d756:	7e28      	ldrb	r0, [r5, #24]
1004d758:	d405      	bmi.n	1004d766 <RAL_Isr+0xe2>
1004d75a:	2802      	cmp	r0, #2
1004d75c:	d032      	beq.n	1004d7c4 <RAL_Isr+0x140>
1004d75e:	7960      	ldrb	r0, [r4, #5]
1004d760:	2800      	cmp	r0, #0
1004d762:	d009      	beq.n	1004d778 <RAL_Isr+0xf4>
1004d764:	e02e      	b.n	1004d7c4 <RAL_Isr+0x140>
1004d766:	2802      	cmp	r0, #2
1004d768:	d006      	beq.n	1004d778 <RAL_Isr+0xf4>
1004d76a:	79a0      	ldrb	r0, [r4, #6]
1004d76c:	2801      	cmp	r0, #1
1004d76e:	d003      	beq.n	1004d778 <RAL_Isr+0xf4>
1004d770:	e028      	b.n	1004d7c4 <RAL_Isr+0x140>
1004d772:	7820      	ldrb	r0, [r4, #0]
1004d774:	2801      	cmp	r0, #1
1004d776:	d125      	bne.n	1004d7c4 <RAL_Isr+0x140>
1004d778:	4846      	ldr	r0, [pc, #280]	; (1004d894 <RAL_Isr+0x210>)
1004d77a:	4945      	ldr	r1, [pc, #276]	; (1004d890 <RAL_Isr+0x20c>)
1004d77c:	6001      	str	r1, [r0, #0]
1004d77e:	2123      	movs	r1, #35	; 0x23
1004d780:	6041      	str	r1, [r0, #4]
1004d782:	2164      	movs	r1, #100	; 0x64
1004d784:	4668      	mov	r0, sp
1004d786:	7001      	strb	r1, [r0, #0]
1004d788:	466a      	mov	r2, sp
1004d78a:	7810      	ldrb	r0, [r2, #0]
1004d78c:	1e40      	subs	r0, r0, #1
1004d78e:	7010      	strb	r0, [r2, #0]
1004d790:	68f0      	ldr	r0, [r6, #12]
1004d792:	03c0      	lsls	r0, r0, #15
1004d794:	d502      	bpl.n	1004d79c <RAL_Isr+0x118>
1004d796:	7810      	ldrb	r0, [r2, #0]
1004d798:	2800      	cmp	r0, #0
1004d79a:	d1f5      	bne.n	1004d788 <RAL_Isr+0x104>
1004d79c:	7810      	ldrb	r0, [r2, #0]
1004d79e:	483d      	ldr	r0, [pc, #244]	; (1004d894 <RAL_Isr+0x210>)
1004d7a0:	b282      	uxth	r2, r0
1004d7a2:	2001      	movs	r0, #1
1004d7a4:	0400      	lsls	r0, r0, #16
1004d7a6:	1810      	adds	r0, r2, r0
1004d7a8:	60f0      	str	r0, [r6, #12]
1004d7aa:	4668      	mov	r0, sp
1004d7ac:	7001      	strb	r1, [r0, #0]
1004d7ae:	4669      	mov	r1, sp
1004d7b0:	7808      	ldrb	r0, [r1, #0]
1004d7b2:	1e40      	subs	r0, r0, #1
1004d7b4:	7008      	strb	r0, [r1, #0]
1004d7b6:	68f0      	ldr	r0, [r6, #12]
1004d7b8:	03c0      	lsls	r0, r0, #15
1004d7ba:	d502      	bpl.n	1004d7c2 <RAL_Isr+0x13e>
1004d7bc:	7808      	ldrb	r0, [r1, #0]
1004d7be:	2800      	cmp	r0, #0
1004d7c0:	d1f5      	bne.n	1004d7ae <RAL_Isr+0x12a>
1004d7c2:	7808      	ldrb	r0, [r1, #0]
1004d7c4:	6920      	ldr	r0, [r4, #16]
1004d7c6:	9000      	str	r0, [sp, #0]
1004d7c8:	4629      	mov	r1, r5
1004d7ca:	69a3      	ldr	r3, [r4, #24]
1004d7cc:	68e2      	ldr	r2, [r4, #12]
1004d7ce:	69e0      	ldr	r0, [r4, #28]
1004d7d0:	e000      	b.n	1004d7d4 <RAL_Isr+0x150>
1004d7d2:	e035      	b.n	1004d840 <RAL_Isr+0x1bc>
1004d7d4:	f001 f9aa 	bl	1004eb2c <isr_event_handler>
1004d7d8:	4629      	mov	r1, r5
1004d7da:	6923      	ldr	r3, [r4, #16]
1004d7dc:	68e2      	ldr	r2, [r4, #12]
1004d7de:	69e0      	ldr	r0, [r4, #28]
1004d7e0:	f00a fb76 	bl	10057ed0 <isr_postproc>
1004d7e4:	7820      	ldrb	r0, [r4, #0]
1004d7e6:	2801      	cmp	r0, #1
1004d7e8:	d12a      	bne.n	1004d840 <RAL_Isr+0x1bc>
1004d7ea:	68e0      	ldr	r0, [r4, #12]
1004d7ec:	6a00      	ldr	r0, [r0, #32]
1004d7ee:	2800      	cmp	r0, #0
1004d7f0:	d026      	beq.n	1004d840 <RAL_Isr+0x1bc>
1004d7f2:	6800      	ldr	r0, [r0, #0]
1004d7f4:	2800      	cmp	r0, #0
1004d7f6:	d023      	beq.n	1004d840 <RAL_Isr+0x1bc>
1004d7f8:	2700      	movs	r7, #0
1004d7fa:	7cc1      	ldrb	r1, [r0, #19]
1004d7fc:	6805      	ldr	r5, [r0, #0]
1004d7fe:	09c9      	lsrs	r1, r1, #7
1004d800:	d01c      	beq.n	1004d83c <RAL_Isr+0x1b8>
1004d802:	68e2      	ldr	r2, [r4, #12]
1004d804:	6a11      	ldr	r1, [r2, #32]
1004d806:	4281      	cmp	r1, r0
1004d808:	d108      	bne.n	1004d81c <RAL_Isr+0x198>
1004d80a:	680b      	ldr	r3, [r1, #0]
1004d80c:	6213      	str	r3, [r2, #32]
1004d80e:	600f      	str	r7, [r1, #0]
1004d810:	68e1      	ldr	r1, [r4, #12]
1004d812:	6a0a      	ldr	r2, [r1, #32]
1004d814:	2a00      	cmp	r2, #0
1004d816:	d10e      	bne.n	1004d836 <RAL_Isr+0x1b2>
1004d818:	624f      	str	r7, [r1, #36]	; 0x24
1004d81a:	e00c      	b.n	1004d836 <RAL_Isr+0x1b2>
1004d81c:	680a      	ldr	r2, [r1, #0]
1004d81e:	4282      	cmp	r2, r0
1004d820:	d003      	beq.n	1004d82a <RAL_Isr+0x1a6>
1004d822:	4611      	mov	r1, r2
1004d824:	6812      	ldr	r2, [r2, #0]
1004d826:	4282      	cmp	r2, r0
1004d828:	d1fb      	bne.n	1004d822 <RAL_Isr+0x19e>
1004d82a:	600d      	str	r5, [r1, #0]
1004d82c:	68e2      	ldr	r2, [r4, #12]
1004d82e:	6a53      	ldr	r3, [r2, #36]	; 0x24
1004d830:	4283      	cmp	r3, r0
1004d832:	d100      	bne.n	1004d836 <RAL_Isr+0x1b2>
1004d834:	6251      	str	r1, [r2, #36]	; 0x24
1004d836:	2100      	movs	r1, #0
1004d838:	f002 ffcc 	bl	100507d4 <PM_Release_Acl_Pckt>
1004d83c:	0028      	movs	r0, r5
1004d83e:	d1dc      	bne.n	1004d7fa <RAL_Isr+0x176>
1004d840:	4c0d      	ldr	r4, [pc, #52]	; (1004d878 <RAL_Isr+0x1f4>)
1004d842:	8920      	ldrh	r0, [r4, #8]
1004d844:	0400      	lsls	r0, r0, #16
1004d846:	d501      	bpl.n	1004d84c <RAL_Isr+0x1c8>
1004d848:	f7ff fa3c 	bl	1004ccc4 <Timer_ExpiryCallback>
1004d84c:	68a2      	ldr	r2, [r4, #8]
1004d84e:	4912      	ldr	r1, [pc, #72]	; (1004d898 <RAL_Isr+0x214>)
1004d850:	03d0      	lsls	r0, r2, #15
1004d852:	d506      	bpl.n	1004d862 <RAL_Isr+0x1de>
1004d854:	4809      	ldr	r0, [pc, #36]	; (1004d87c <RAL_Isr+0x1f8>)
1004d856:	2402      	movs	r4, #2
1004d858:	6800      	ldr	r0, [r0, #0]
1004d85a:	1840      	adds	r0, r0, r1
1004d85c:	6803      	ldr	r3, [r0, #0]
1004d85e:	4323      	orrs	r3, r4
1004d860:	6003      	str	r3, [r0, #0]
1004d862:	0390      	lsls	r0, r2, #14
1004d864:	d506      	bpl.n	1004d874 <RAL_Isr+0x1f0>
1004d866:	4805      	ldr	r0, [pc, #20]	; (1004d87c <RAL_Isr+0x1f8>)
1004d868:	2304      	movs	r3, #4
1004d86a:	6800      	ldr	r0, [r0, #0]
1004d86c:	1840      	adds	r0, r0, r1
1004d86e:	6801      	ldr	r1, [r0, #0]
1004d870:	4319      	orrs	r1, r3
1004d872:	6001      	str	r1, [r0, #0]
1004d874:	6032      	str	r2, [r6, #0]
1004d876:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d878:	20000944 	.word	0x20000944
1004d87c:	2000098c 	.word	0x2000098c
1004d880:	200000c0 	.word	0x200000c0
1004d884:	200000cc 	.word	0x200000cc
1004d888:	fffb8000 	.word	0xfffb8000
1004d88c:	2000096c 	.word	0x2000096c
1004d890:	02012302 	.word	0x02012302
1004d894:	20000964 	.word	0x20000964
1004d898:	00000800 	.word	0x00000800

1004d89c <copy_4_u32>:
1004d89c:	68ca      	ldr	r2, [r1, #12]
1004d89e:	6002      	str	r2, [r0, #0]
1004d8a0:	688a      	ldr	r2, [r1, #8]
1004d8a2:	6042      	str	r2, [r0, #4]
1004d8a4:	684a      	ldr	r2, [r1, #4]
1004d8a6:	6082      	str	r2, [r0, #8]
1004d8a8:	6809      	ldr	r1, [r1, #0]
1004d8aa:	60c1      	str	r1, [r0, #12]
1004d8ac:	4770      	bx	lr
	...

1004d8b0 <copy_tx_data_packet>:
1004d8b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004d8b2:	460c      	mov	r4, r1
1004d8b4:	88ca      	ldrh	r2, [r1, #6]
1004d8b6:	8a09      	ldrh	r1, [r1, #16]
1004d8b8:	3040      	adds	r0, #64	; 0x40
1004d8ba:	1a52      	subs	r2, r2, r1
1004d8bc:	8880      	ldrh	r0, [r0, #4]
1004d8be:	2610      	movs	r6, #16
1004d8c0:	b295      	uxth	r5, r2
1004d8c2:	42a8      	cmp	r0, r5
1004d8c4:	d205      	bcs.n	1004d8d2 <copy_tx_data_packet+0x22>
1004d8c6:	4605      	mov	r5, r0
1004d8c8:	7ce0      	ldrb	r0, [r4, #19]
1004d8ca:	0640      	lsls	r0, r0, #25
1004d8cc:	0e40      	lsrs	r0, r0, #25
1004d8ce:	74e0      	strb	r0, [r4, #19]
1004d8d0:	e003      	b.n	1004d8da <copy_tx_data_packet+0x2a>
1004d8d2:	6820      	ldr	r0, [r4, #0]
1004d8d4:	2800      	cmp	r0, #0
1004d8d6:	d100      	bne.n	1004d8da <copy_tx_data_packet+0x2a>
1004d8d8:	2600      	movs	r6, #0
1004d8da:	2900      	cmp	r1, #0
1004d8dc:	d104      	bne.n	1004d8e8 <copy_tx_data_packet+0x38>
1004d8de:	7b20      	ldrb	r0, [r4, #12]
1004d8e0:	0780      	lsls	r0, r0, #30
1004d8e2:	d501      	bpl.n	1004d8e8 <copy_tx_data_packet+0x38>
1004d8e4:	2002      	movs	r0, #2
1004d8e6:	e000      	b.n	1004d8ea <copy_tx_data_packet+0x3a>
1004d8e8:	2001      	movs	r0, #1
1004d8ea:	06cf      	lsls	r7, r1, #27
1004d8ec:	4306      	orrs	r6, r0
1004d8ee:	0eff      	lsrs	r7, r7, #27
1004d8f0:	19e8      	adds	r0, r5, r7
1004d8f2:	b282      	uxth	r2, r0
1004d8f4:	480e      	ldr	r0, [pc, #56]	; (1004d930 <copy_tx_data_packet+0x80>)
1004d8f6:	69a1      	ldr	r1, [r4, #24]
1004d8f8:	6803      	ldr	r3, [r0, #0]
1004d8fa:	2009      	movs	r0, #9
1004d8fc:	0200      	lsls	r0, r0, #8
1004d8fe:	1818      	adds	r0, r3, r0
1004d900:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
1004d902:	1d00      	adds	r0, r0, #4
1004d904:	f001 fe49 	bl	1004f59a <Mem_Buff_Block_Copy>
1004d908:	6160      	str	r0, [r4, #20]
1004d90a:	4809      	ldr	r0, [pc, #36]	; (1004d930 <copy_tx_data_packet+0x80>)
1004d90c:	74a5      	strb	r5, [r4, #18]
1004d90e:	6801      	ldr	r1, [r0, #0]
1004d910:	2009      	movs	r0, #9
1004d912:	0200      	lsls	r0, r0, #8
1004d914:	1808      	adds	r0, r1, r0
1004d916:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
1004d918:	1cb8      	adds	r0, r7, #2
1004d91a:	540e      	strb	r6, [r1, r0]
1004d91c:	4804      	ldr	r0, [pc, #16]	; (1004d930 <copy_tx_data_packet+0x80>)
1004d91e:	6801      	ldr	r1, [r0, #0]
1004d920:	2009      	movs	r0, #9
1004d922:	0200      	lsls	r0, r0, #8
1004d924:	1808      	adds	r0, r1, r0
1004d926:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
1004d928:	1cff      	adds	r7, r7, #3
1004d92a:	55c5      	strb	r5, [r0, r7]
1004d92c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004d92e:	0000      	.short	0x0000
1004d930:	2000098c 	.word	0x2000098c

1004d934 <encrypt>:
1004d934:	b418      	push	{r3, r4}
1004d936:	6801      	ldr	r1, [r0, #0]
1004d938:	4a18      	ldr	r2, [pc, #96]	; (1004d99c <encrypt+0x68>)
1004d93a:	68cb      	ldr	r3, [r1, #12]
1004d93c:	6013      	str	r3, [r2, #0]
1004d93e:	688c      	ldr	r4, [r1, #8]
1004d940:	2301      	movs	r3, #1
1004d942:	6054      	str	r4, [r2, #4]
1004d944:	684c      	ldr	r4, [r1, #4]
1004d946:	6094      	str	r4, [r2, #8]
1004d948:	6809      	ldr	r1, [r1, #0]
1004d94a:	60d1      	str	r1, [r2, #12]
1004d94c:	6841      	ldr	r1, [r0, #4]
1004d94e:	4a14      	ldr	r2, [pc, #80]	; (1004d9a0 <encrypt+0x6c>)
1004d950:	68cc      	ldr	r4, [r1, #12]
1004d952:	6014      	str	r4, [r2, #0]
1004d954:	688c      	ldr	r4, [r1, #8]
1004d956:	6054      	str	r4, [r2, #4]
1004d958:	684c      	ldr	r4, [r1, #4]
1004d95a:	6094      	str	r4, [r2, #8]
1004d95c:	6809      	ldr	r1, [r1, #0]
1004d95e:	60d1      	str	r1, [r2, #12]
1004d960:	2164      	movs	r1, #100	; 0x64
1004d962:	466a      	mov	r2, sp
1004d964:	7011      	strb	r1, [r2, #0]
1004d966:	2209      	movs	r2, #9
1004d968:	06d2      	lsls	r2, r2, #27
1004d96a:	466c      	mov	r4, sp
1004d96c:	7821      	ldrb	r1, [r4, #0]
1004d96e:	1e49      	subs	r1, r1, #1
1004d970:	7021      	strb	r1, [r4, #0]
1004d972:	6951      	ldr	r1, [r2, #20]
1004d974:	04c9      	lsls	r1, r1, #19
1004d976:	d402      	bmi.n	1004d97e <encrypt+0x4a>
1004d978:	7821      	ldrb	r1, [r4, #0]
1004d97a:	2900      	cmp	r1, #0
1004d97c:	d1f5      	bne.n	1004d96a <encrypt+0x36>
1004d97e:	7822      	ldrb	r2, [r4, #0]
1004d980:	7022      	strb	r2, [r4, #0]
1004d982:	4a08      	ldr	r2, [pc, #32]	; (1004d9a4 <encrypt+0x70>)
1004d984:	6881      	ldr	r1, [r0, #8]
1004d986:	68d4      	ldr	r4, [r2, #12]
1004d988:	600c      	str	r4, [r1, #0]
1004d98a:	6894      	ldr	r4, [r2, #8]
1004d98c:	604c      	str	r4, [r1, #4]
1004d98e:	6854      	ldr	r4, [r2, #4]
1004d990:	608c      	str	r4, [r1, #8]
1004d992:	6812      	ldr	r2, [r2, #0]
1004d994:	60ca      	str	r2, [r1, #12]
1004d996:	7303      	strb	r3, [r0, #12]
1004d998:	bc18      	pop	{r3, r4}
1004d99a:	4770      	bx	lr
1004d99c:	48000018 	.word	0x48000018
1004d9a0:	48000028 	.word	0x48000028
1004d9a4:	48000038 	.word	0x48000038

1004d9a8 <isr_advertise_state>:
1004d9a8:	b5f0      	push	{r4, r5, r6, r7, lr}
1004d9aa:	48e2      	ldr	r0, [pc, #904]	; (1004dd34 <isr_advertise_state+0x38c>)
1004d9ac:	2141      	movs	r1, #65	; 0x41
1004d9ae:	6800      	ldr	r0, [r0, #0]
1004d9b0:	0149      	lsls	r1, r1, #5
1004d9b2:	4ae1      	ldr	r2, [pc, #900]	; (1004dd38 <isr_advertise_state+0x390>)
1004d9b4:	1844      	adds	r4, r0, r1
1004d9b6:	b095      	sub	sp, #84	; 0x54
1004d9b8:	1882      	adds	r2, r0, r2
1004d9ba:	9203      	str	r2, [sp, #12]
1004d9bc:	4adf      	ldr	r2, [pc, #892]	; (1004dd3c <isr_advertise_state+0x394>)
1004d9be:	6892      	ldr	r2, [r2, #8]
1004d9c0:	01d3      	lsls	r3, r2, #7
1004d9c2:	d57d      	bpl.n	1004dac0 <isr_advertise_state+0x118>
1004d9c4:	0353      	lsls	r3, r2, #13
1004d9c6:	4add      	ldr	r2, [pc, #884]	; (1004dd3c <isr_advertise_state+0x394>)
1004d9c8:	6912      	ldr	r2, [r2, #16]
1004d9ca:	d47a      	bmi.n	1004dac2 <isr_advertise_state+0x11a>
1004d9cc:	89d1      	ldrh	r1, [r2, #14]
1004d9ce:	2001      	movs	r0, #1
1004d9d0:	0740      	lsls	r0, r0, #29
1004d9d2:	1809      	adds	r1, r1, r0
1004d9d4:	8849      	ldrh	r1, [r1, #2]
1004d9d6:	180e      	adds	r6, r1, r0
1004d9d8:	8991      	ldrh	r1, [r2, #12]
1004d9da:	1809      	adds	r1, r1, r0
1004d9dc:	8849      	ldrh	r1, [r1, #2]
1004d9de:	180f      	adds	r7, r1, r0
1004d9e0:	7830      	ldrb	r0, [r6, #0]
1004d9e2:	a906      	add	r1, sp, #24
1004d9e4:	0705      	lsls	r5, r0, #28
1004d9e6:	0f2d      	lsrs	r5, r5, #28
1004d9e8:	4630      	mov	r0, r6
1004d9ea:	f003 fbd5 	bl	10051198 <get_scan_addr>
1004d9ee:	48d3      	ldr	r0, [pc, #844]	; (1004dd3c <isr_advertise_state+0x394>)
1004d9f0:	6880      	ldr	r0, [r0, #8]
1004d9f2:	2800      	cmp	r0, #0
1004d9f4:	da66      	bge.n	1004dac4 <isr_advertise_state+0x11c>
1004d9f6:	2102      	movs	r1, #2
1004d9f8:	a812      	add	r0, sp, #72	; 0x48
1004d9fa:	2d03      	cmp	r5, #3
1004d9fc:	d002      	beq.n	1004da04 <isr_advertise_state+0x5c>
1004d9fe:	2d05      	cmp	r5, #5
1004da00:	d06a      	beq.n	1004dad8 <isr_advertise_state+0x130>
1004da02:	e15f      	b.n	1004dcc4 <isr_advertise_state+0x31c>
1004da04:	4dcd      	ldr	r5, [pc, #820]	; (1004dd3c <isr_advertise_state+0x394>)
1004da06:	78ea      	ldrb	r2, [r5, #3]
1004da08:	06d2      	lsls	r2, r2, #27
1004da0a:	d55b      	bpl.n	1004dac4 <isr_advertise_state+0x11c>
1004da0c:	2201      	movs	r2, #1
1004da0e:	716a      	strb	r2, [r5, #5]
1004da10:	4ac8      	ldr	r2, [pc, #800]	; (1004dd34 <isr_advertise_state+0x38c>)
1004da12:	6812      	ldr	r2, [r2, #0]
1004da14:	32e0      	adds	r2, #224	; 0xe0
1004da16:	7c12      	ldrb	r2, [r2, #16]
1004da18:	2a00      	cmp	r2, #0
1004da1a:	d021      	beq.n	1004da60 <isr_advertise_state+0xb8>
1004da1c:	aa08      	add	r2, sp, #32
1004da1e:	7011      	strb	r1, [r2, #0]
1004da20:	900b      	str	r0, [sp, #44]	; 0x2c
1004da22:	9803      	ldr	r0, [sp, #12]
1004da24:	900c      	str	r0, [sp, #48]	; 0x30
1004da26:	9609      	str	r6, [sp, #36]	; 0x24
1004da28:	a80f      	add	r0, sp, #60	; 0x3c
1004da2a:	900e      	str	r0, [sp, #56]	; 0x38
1004da2c:	970a      	str	r7, [sp, #40]	; 0x28
1004da2e:	940d      	str	r4, [sp, #52]	; 0x34
1004da30:	4610      	mov	r0, r2
1004da32:	f000 fec5 	bl	1004e7c0 <PRIV_u32ProcessAdvPacket_ucfg>
1004da36:	7128      	strb	r0, [r5, #4]
1004da38:	7928      	ldrb	r0, [r5, #4]
1004da3a:	2801      	cmp	r0, #1
1004da3c:	d042      	beq.n	1004dac4 <isr_advertise_state+0x11c>
1004da3e:	2001      	movs	r0, #1
1004da40:	0600      	lsls	r0, r0, #24
1004da42:	61a8      	str	r0, [r5, #24]
1004da44:	6928      	ldr	r0, [r5, #16]
1004da46:	8a01      	ldrh	r1, [r0, #16]
1004da48:	4620      	mov	r0, r4
1004da4a:	3080      	adds	r0, #128	; 0x80
1004da4c:	6a02      	ldr	r2, [r0, #32]
1004da4e:	8011      	strh	r1, [r2, #0]
1004da50:	8c01      	ldrh	r1, [r0, #32]
1004da52:	6928      	ldr	r0, [r5, #16]
1004da54:	8201      	strh	r1, [r0, #16]
1004da56:	7a81      	ldrb	r1, [r0, #10]
1004da58:	2280      	movs	r2, #128	; 0x80
1004da5a:	4311      	orrs	r1, r2
1004da5c:	7281      	strb	r1, [r0, #10]
1004da5e:	e131      	b.n	1004dcc4 <isr_advertise_state+0x31c>
1004da60:	a904      	add	r1, sp, #16
1004da62:	4630      	mov	r0, r6
1004da64:	f003 fb8e 	bl	10051184 <get_adv_addr>
1004da68:	1cb0      	adds	r0, r6, #2
1004da6a:	4601      	mov	r1, r0
1004da6c:	780a      	ldrb	r2, [r1, #0]
1004da6e:	7973      	ldrb	r3, [r6, #5]
1004da70:	4610      	mov	r0, r2
1004da72:	784a      	ldrb	r2, [r1, #1]
1004da74:	0212      	lsls	r2, r2, #8
1004da76:	4310      	orrs	r0, r2
1004da78:	788a      	ldrb	r2, [r1, #2]
1004da7a:	78c9      	ldrb	r1, [r1, #3]
1004da7c:	0412      	lsls	r2, r2, #16
1004da7e:	4310      	orrs	r0, r2
1004da80:	0609      	lsls	r1, r1, #24
1004da82:	4308      	orrs	r0, r1
1004da84:	0202      	lsls	r2, r0, #8
1004da86:	7830      	ldrb	r0, [r6, #0]
1004da88:	7a31      	ldrb	r1, [r6, #8]
1004da8a:	0640      	lsls	r0, r0, #25
1004da8c:	0fc0      	lsrs	r0, r0, #31
1004da8e:	4302      	orrs	r2, r0
1004da90:	4618      	mov	r0, r3
1004da92:	79b3      	ldrb	r3, [r6, #6]
1004da94:	0609      	lsls	r1, r1, #24
1004da96:	021b      	lsls	r3, r3, #8
1004da98:	4318      	orrs	r0, r3
1004da9a:	79f3      	ldrb	r3, [r6, #7]
1004da9c:	041b      	lsls	r3, r3, #16
1004da9e:	4318      	orrs	r0, r3
1004daa0:	4308      	orrs	r0, r1
1004daa2:	0201      	lsls	r1, r0, #8
1004daa4:	4610      	mov	r0, r2
1004daa6:	f000 fe5f 	bl	1004e768 <PRIV_SearchAddrInWhiteList>
1004daaa:	9904      	ldr	r1, [sp, #16]
1004daac:	6822      	ldr	r2, [r4, #0]
1004daae:	4291      	cmp	r1, r2
1004dab0:	d1c2      	bne.n	1004da38 <isr_advertise_state+0x90>
1004dab2:	9905      	ldr	r1, [sp, #20]
1004dab4:	6862      	ldr	r2, [r4, #4]
1004dab6:	4291      	cmp	r1, r2
1004dab8:	d1be      	bne.n	1004da38 <isr_advertise_state+0x90>
1004daba:	2801      	cmp	r0, #1
1004dabc:	d006      	beq.n	1004dacc <isr_advertise_state+0x124>
1004dabe:	e002      	b.n	1004dac6 <isr_advertise_state+0x11e>
1004dac0:	e12f      	b.n	1004dd22 <isr_advertise_state+0x37a>
1004dac2:	e085      	b.n	1004dbd0 <isr_advertise_state+0x228>
1004dac4:	e07e      	b.n	1004dbc4 <isr_advertise_state+0x21c>
1004dac6:	78e8      	ldrb	r0, [r5, #3]
1004dac8:	0640      	lsls	r0, r0, #25
1004daca:	d502      	bpl.n	1004dad2 <isr_advertise_state+0x12a>
1004dacc:	2000      	movs	r0, #0
1004dace:	7128      	strb	r0, [r5, #4]
1004dad0:	e7b5      	b.n	1004da3e <isr_advertise_state+0x96>
1004dad2:	2001      	movs	r0, #1
1004dad4:	7128      	strb	r0, [r5, #4]
1004dad6:	e0f5      	b.n	1004dcc4 <isr_advertise_state+0x31c>
1004dad8:	4d98      	ldr	r5, [pc, #608]	; (1004dd3c <isr_advertise_state+0x394>)
1004dada:	78ea      	ldrb	r2, [r5, #3]
1004dadc:	0712      	lsls	r2, r2, #28
1004dade:	d571      	bpl.n	1004dbc4 <isr_advertise_state+0x21c>
1004dae0:	2200      	movs	r2, #0
1004dae2:	2309      	movs	r3, #9
1004dae4:	06db      	lsls	r3, r3, #27
1004dae6:	605a      	str	r2, [r3, #4]
1004dae8:	4a92      	ldr	r2, [pc, #584]	; (1004dd34 <isr_advertise_state+0x38c>)
1004daea:	6812      	ldr	r2, [r2, #0]
1004daec:	32e0      	adds	r2, #224	; 0xe0
1004daee:	7c12      	ldrb	r2, [r2, #16]
1004daf0:	2a00      	cmp	r2, #0
1004daf2:	d025      	beq.n	1004db40 <isr_advertise_state+0x198>
1004daf4:	aa08      	add	r2, sp, #32
1004daf6:	7011      	strb	r1, [r2, #0]
1004daf8:	900b      	str	r0, [sp, #44]	; 0x2c
1004dafa:	9803      	ldr	r0, [sp, #12]
1004dafc:	900c      	str	r0, [sp, #48]	; 0x30
1004dafe:	9609      	str	r6, [sp, #36]	; 0x24
1004db00:	a80f      	add	r0, sp, #60	; 0x3c
1004db02:	900e      	str	r0, [sp, #56]	; 0x38
1004db04:	970a      	str	r7, [sp, #40]	; 0x28
1004db06:	940d      	str	r4, [sp, #52]	; 0x34
1004db08:	4610      	mov	r0, r2
1004db0a:	f000 fe59 	bl	1004e7c0 <PRIV_u32ProcessAdvPacket_ucfg>
1004db0e:	7128      	strb	r0, [r5, #4]
1004db10:	2801      	cmp	r0, #1
1004db12:	d058      	beq.n	1004dbc6 <isr_advertise_state+0x21e>
1004db14:	6928      	ldr	r0, [r5, #16]
1004db16:	9000      	str	r0, [sp, #0]
1004db18:	ab06      	add	r3, sp, #24
1004db1a:	4621      	mov	r1, r4
1004db1c:	4630      	mov	r0, r6
1004db1e:	68ea      	ldr	r2, [r5, #12]
1004db20:	f003 fb44 	bl	100511ac <go_to_connect>
1004db24:	4983      	ldr	r1, [pc, #524]	; (1004dd34 <isr_advertise_state+0x38c>)
1004db26:	2000      	movs	r0, #0
1004db28:	6809      	ldr	r1, [r1, #0]
1004db2a:	3120      	adds	r1, #32
1004db2c:	74c8      	strb	r0, [r1, #19]
1004db2e:	4620      	mov	r0, r4
1004db30:	30c0      	adds	r0, #192	; 0xc0
1004db32:	7bc1      	ldrb	r1, [r0, #15]
1004db34:	78aa      	ldrb	r2, [r5, #2]
1004db36:	4291      	cmp	r1, r2
1004db38:	d144      	bne.n	1004dbc4 <isr_advertise_state+0x21c>
1004db3a:	2108      	movs	r1, #8
1004db3c:	73c1      	strb	r1, [r0, #15]
1004db3e:	e0c1      	b.n	1004dcc4 <isr_advertise_state+0x31c>
1004db40:	a904      	add	r1, sp, #16
1004db42:	4630      	mov	r0, r6
1004db44:	f003 fb1e 	bl	10051184 <get_adv_addr>
1004db48:	1cb0      	adds	r0, r6, #2
1004db4a:	4601      	mov	r1, r0
1004db4c:	780a      	ldrb	r2, [r1, #0]
1004db4e:	7973      	ldrb	r3, [r6, #5]
1004db50:	4610      	mov	r0, r2
1004db52:	784a      	ldrb	r2, [r1, #1]
1004db54:	0212      	lsls	r2, r2, #8
1004db56:	4310      	orrs	r0, r2
1004db58:	788a      	ldrb	r2, [r1, #2]
1004db5a:	78c9      	ldrb	r1, [r1, #3]
1004db5c:	0412      	lsls	r2, r2, #16
1004db5e:	4310      	orrs	r0, r2
1004db60:	0609      	lsls	r1, r1, #24
1004db62:	4308      	orrs	r0, r1
1004db64:	0202      	lsls	r2, r0, #8
1004db66:	7830      	ldrb	r0, [r6, #0]
1004db68:	7a31      	ldrb	r1, [r6, #8]
1004db6a:	0640      	lsls	r0, r0, #25
1004db6c:	0fc0      	lsrs	r0, r0, #31
1004db6e:	4302      	orrs	r2, r0
1004db70:	4618      	mov	r0, r3
1004db72:	79b3      	ldrb	r3, [r6, #6]
1004db74:	0609      	lsls	r1, r1, #24
1004db76:	021b      	lsls	r3, r3, #8
1004db78:	4318      	orrs	r0, r3
1004db7a:	79f3      	ldrb	r3, [r6, #7]
1004db7c:	041b      	lsls	r3, r3, #16
1004db7e:	4318      	orrs	r0, r3
1004db80:	4308      	orrs	r0, r1
1004db82:	0201      	lsls	r1, r0, #8
1004db84:	4610      	mov	r0, r2
1004db86:	f000 fdef 	bl	1004e768 <PRIV_SearchAddrInWhiteList>
1004db8a:	2101      	movs	r1, #1
1004db8c:	7129      	strb	r1, [r5, #4]
1004db8e:	9904      	ldr	r1, [sp, #16]
1004db90:	6822      	ldr	r2, [r4, #0]
1004db92:	4291      	cmp	r1, r2
1004db94:	d117      	bne.n	1004dbc6 <isr_advertise_state+0x21e>
1004db96:	9905      	ldr	r1, [sp, #20]
1004db98:	6862      	ldr	r2, [r4, #4]
1004db9a:	4291      	cmp	r1, r2
1004db9c:	d113      	bne.n	1004dbc6 <isr_advertise_state+0x21e>
1004db9e:	2801      	cmp	r0, #1
1004dba0:	d002      	beq.n	1004dba8 <isr_advertise_state+0x200>
1004dba2:	78e8      	ldrb	r0, [r5, #3]
1004dba4:	0600      	lsls	r0, r0, #24
1004dba6:	d50e      	bpl.n	1004dbc6 <isr_advertise_state+0x21e>
1004dba8:	78e8      	ldrb	r0, [r5, #3]
1004dbaa:	0680      	lsls	r0, r0, #26
1004dbac:	d507      	bpl.n	1004dbbe <isr_advertise_state+0x216>
1004dbae:	9806      	ldr	r0, [sp, #24]
1004dbb0:	68a1      	ldr	r1, [r4, #8]
1004dbb2:	4288      	cmp	r0, r1
1004dbb4:	d107      	bne.n	1004dbc6 <isr_advertise_state+0x21e>
1004dbb6:	9807      	ldr	r0, [sp, #28]
1004dbb8:	68e1      	ldr	r1, [r4, #12]
1004dbba:	4288      	cmp	r0, r1
1004dbbc:	d103      	bne.n	1004dbc6 <isr_advertise_state+0x21e>
1004dbbe:	2000      	movs	r0, #0
1004dbc0:	7128      	strb	r0, [r5, #4]
1004dbc2:	e7a7      	b.n	1004db14 <isr_advertise_state+0x16c>
1004dbc4:	e07e      	b.n	1004dcc4 <isr_advertise_state+0x31c>
1004dbc6:	20a4      	movs	r0, #164	; 0xa4
1004dbc8:	6929      	ldr	r1, [r5, #16]
1004dbca:	5b00      	ldrh	r0, [r0, r4]
1004dbcc:	8208      	strh	r0, [r1, #16]
1004dbce:	e079      	b.n	1004dcc4 <isr_advertise_state+0x31c>
1004dbd0:	4b5a      	ldr	r3, [pc, #360]	; (1004dd3c <isr_advertise_state+0x394>)
1004dbd2:	8995      	ldrh	r5, [r2, #12]
1004dbd4:	22a0      	movs	r2, #160	; 0xa0
1004dbd6:	5b12      	ldrh	r2, [r2, r4]
1004dbd8:	b292      	uxth	r2, r2
1004dbda:	4295      	cmp	r5, r2
1004dbdc:	d101      	bne.n	1004dbe2 <isr_advertise_state+0x23a>
1004dbde:	2201      	movs	r2, #1
1004dbe0:	719a      	strb	r2, [r3, #6]
1004dbe2:	2223      	movs	r2, #35	; 0x23
1004dbe4:	0152      	lsls	r2, r2, #5
1004dbe6:	1882      	adds	r2, r0, r2
1004dbe8:	7992      	ldrb	r2, [r2, #6]
1004dbea:	4d52      	ldr	r5, [pc, #328]	; (1004dd34 <isr_advertise_state+0x38c>)
1004dbec:	2a01      	cmp	r2, #1
1004dbee:	d169      	bne.n	1004dcc4 <isr_advertise_state+0x31c>
1004dbf0:	2211      	movs	r2, #17
1004dbf2:	0192      	lsls	r2, r2, #6
1004dbf4:	1883      	adds	r3, r0, r2
1004dbf6:	7d9b      	ldrb	r3, [r3, #22]
1004dbf8:	2bff      	cmp	r3, #255	; 0xff
1004dbfa:	d063      	beq.n	1004dcc4 <isr_advertise_state+0x31c>
1004dbfc:	2137      	movs	r1, #55	; 0x37
1004dbfe:	434b      	muls	r3, r1
1004dc00:	181a      	adds	r2, r3, r0
1004dc02:	32ff      	adds	r2, #255	; 0xff
1004dc04:	3241      	adds	r2, #65	; 0x41
1004dc06:	9403      	str	r4, [sp, #12]
1004dc08:	7b50      	ldrb	r0, [r2, #13]
1004dc0a:	2800      	cmp	r0, #0
1004dc0c:	d136      	bne.n	1004dc7c <isr_advertise_state+0x2d4>
1004dc0e:	2109      	movs	r1, #9
1004dc10:	0209      	lsls	r1, r1, #8
1004dc12:	682e      	ldr	r6, [r5, #0]
1004dc14:	7813      	ldrb	r3, [r2, #0]
1004dc16:	1876      	adds	r6, r6, r1
1004dc18:	6d37      	ldr	r7, [r6, #80]	; 0x50
1004dc1a:	4606      	mov	r6, r0
1004dc1c:	362a      	adds	r6, #42	; 0x2a
1004dc1e:	55bb      	strb	r3, [r7, r6]
1004dc20:	682e      	ldr	r6, [r5, #0]
1004dc22:	1c52      	adds	r2, r2, #1
1004dc24:	1876      	adds	r6, r6, r1
1004dc26:	6d37      	ldr	r7, [r6, #80]	; 0x50
1004dc28:	4606      	mov	r6, r0
1004dc2a:	3652      	adds	r6, #82	; 0x52
1004dc2c:	55bb      	strb	r3, [r7, r6]
1004dc2e:	682e      	ldr	r6, [r5, #0]
1004dc30:	1876      	adds	r6, r6, r1
1004dc32:	6d37      	ldr	r7, [r6, #80]	; 0x50
1004dc34:	4606      	mov	r6, r0
1004dc36:	367a      	adds	r6, #122	; 0x7a
1004dc38:	55bb      	strb	r3, [r7, r6]
1004dc3a:	682e      	ldr	r6, [r5, #0]
1004dc3c:	1876      	adds	r6, r6, r1
1004dc3e:	6d37      	ldr	r7, [r6, #80]	; 0x50
1004dc40:	4606      	mov	r6, r0
1004dc42:	36a2      	adds	r6, #162	; 0xa2
1004dc44:	1c40      	adds	r0, r0, #1
1004dc46:	b2c0      	uxtb	r0, r0
1004dc48:	55bb      	strb	r3, [r7, r6]
1004dc4a:	2806      	cmp	r0, #6
1004dc4c:	d3e1      	bcc.n	1004dc12 <isr_advertise_state+0x26a>
1004dc4e:	6828      	ldr	r0, [r5, #0]
1004dc50:	2240      	movs	r2, #64	; 0x40
1004dc52:	1841      	adds	r1, r0, r1
1004dc54:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004dc56:	3020      	adds	r0, #32
1004dc58:	7a03      	ldrb	r3, [r0, #8]
1004dc5a:	4313      	orrs	r3, r2
1004dc5c:	7203      	strb	r3, [r0, #8]
1004dc5e:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004dc60:	3040      	adds	r0, #64	; 0x40
1004dc62:	7c03      	ldrb	r3, [r0, #16]
1004dc64:	4313      	orrs	r3, r2
1004dc66:	7403      	strb	r3, [r0, #16]
1004dc68:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004dc6a:	3060      	adds	r0, #96	; 0x60
1004dc6c:	7e03      	ldrb	r3, [r0, #24]
1004dc6e:	4313      	orrs	r3, r2
1004dc70:	7603      	strb	r3, [r0, #24]
1004dc72:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004dc74:	30a0      	adds	r0, #160	; 0xa0
1004dc76:	7801      	ldrb	r1, [r0, #0]
1004dc78:	4311      	orrs	r1, r2
1004dc7a:	7001      	strb	r1, [r0, #0]
1004dc7c:	9803      	ldr	r0, [sp, #12]
1004dc7e:	7e00      	ldrb	r0, [r0, #24]
1004dc80:	2801      	cmp	r0, #1
1004dc82:	d119      	bne.n	1004dcb8 <isr_advertise_state+0x310>
1004dc84:	2111      	movs	r1, #17
1004dc86:	6828      	ldr	r0, [r5, #0]
1004dc88:	0189      	lsls	r1, r1, #6
1004dc8a:	1841      	adds	r1, r0, r1
1004dc8c:	7d89      	ldrb	r1, [r1, #22]
1004dc8e:	2237      	movs	r2, #55	; 0x37
1004dc90:	4351      	muls	r1, r2
1004dc92:	1809      	adds	r1, r1, r0
1004dc94:	20ff      	movs	r0, #255	; 0xff
1004dc96:	302f      	adds	r0, #47	; 0x2f
1004dc98:	5c40      	ldrb	r0, [r0, r1]
1004dc9a:	2800      	cmp	r0, #0
1004dc9c:	d10c      	bne.n	1004dcb8 <isr_advertise_state+0x310>
1004dc9e:	9803      	ldr	r0, [sp, #12]
1004dca0:	31ff      	adds	r1, #255	; 0xff
1004dca2:	6b40      	ldr	r0, [r0, #52]	; 0x34
1004dca4:	3148      	adds	r1, #72	; 0x48
1004dca6:	3008      	adds	r0, #8
1004dca8:	f000 fc9f 	bl	1004e5ea <__ARM_common_memcpy1_6>
1004dcac:	9803      	ldr	r0, [sp, #12]
1004dcae:	2280      	movs	r2, #128	; 0x80
1004dcb0:	6b40      	ldr	r0, [r0, #52]	; 0x34
1004dcb2:	7801      	ldrb	r1, [r0, #0]
1004dcb4:	4311      	orrs	r1, r2
1004dcb6:	7001      	strb	r1, [r0, #0]
1004dcb8:	2123      	movs	r1, #35	; 0x23
1004dcba:	682a      	ldr	r2, [r5, #0]
1004dcbc:	2000      	movs	r0, #0
1004dcbe:	0149      	lsls	r1, r1, #5
1004dcc0:	1851      	adds	r1, r2, r1
1004dcc2:	7188      	strb	r0, [r1, #6]
1004dcc4:	481d      	ldr	r0, [pc, #116]	; (1004dd3c <isr_advertise_state+0x394>)
1004dcc6:	6902      	ldr	r2, [r0, #16]
1004dcc8:	7a91      	ldrb	r1, [r2, #10]
1004dcca:	0609      	lsls	r1, r1, #24
1004dccc:	d529      	bpl.n	1004dd22 <isr_advertise_state+0x37a>
1004dcce:	8a15      	ldrh	r5, [r2, #16]
1004dcd0:	4623      	mov	r3, r4
1004dcd2:	3380      	adds	r3, #128	; 0x80
1004dcd4:	8c99      	ldrh	r1, [r3, #36]	; 0x24
1004dcd6:	b289      	uxth	r1, r1
1004dcd8:	428d      	cmp	r5, r1
1004dcda:	d122      	bne.n	1004dd22 <isr_advertise_state+0x37a>
1004dcdc:	252f      	movs	r5, #47	; 0x2f
1004dcde:	8a19      	ldrh	r1, [r3, #16]
1004dce0:	5d2d      	ldrb	r5, [r5, r4]
1004dce2:	72d5      	strb	r5, [r2, #11]
1004dce4:	2200      	movs	r2, #0
1004dce6:	2509      	movs	r5, #9
1004dce8:	06ed      	lsls	r5, r5, #27
1004dcea:	606a      	str	r2, [r5, #4]
1004dcec:	25ff      	movs	r5, #255	; 0xff
1004dcee:	1e4a      	subs	r2, r1, #1
1004dcf0:	3555      	adds	r5, #85	; 0x55
1004dcf2:	42aa      	cmp	r2, r5
1004dcf4:	d800      	bhi.n	1004dcf8 <isr_advertise_state+0x350>
1004dcf6:	821a      	strh	r2, [r3, #16]
1004dcf8:	2900      	cmp	r1, #0
1004dcfa:	d104      	bne.n	1004dd06 <isr_advertise_state+0x35e>
1004dcfc:	2101      	movs	r1, #1
1004dcfe:	6181      	str	r1, [r0, #24]
1004dd00:	7880      	ldrb	r0, [r0, #2]
1004dd02:	f002 f909 	bl	1004ff18 <cancel_current_master>
1004dd06:	480b      	ldr	r0, [pc, #44]	; (1004dd34 <isr_advertise_state+0x38c>)
1004dd08:	6801      	ldr	r1, [r0, #0]
1004dd0a:	2009      	movs	r0, #9
1004dd0c:	0200      	lsls	r0, r0, #8
1004dd0e:	1808      	adds	r0, r1, r0
1004dd10:	7840      	ldrb	r0, [r0, #1]
1004dd12:	2800      	cmp	r0, #0
1004dd14:	d002      	beq.n	1004dd1c <isr_advertise_state+0x374>
1004dd16:	2001      	movs	r0, #1
1004dd18:	f004 fbe4 	bl	100524e4 <slave_advance>
1004dd1c:	2001      	movs	r0, #1
1004dd1e:	f008 f923 	bl	10055f68 <advance_wakeup_timer>
1004dd22:	4806      	ldr	r0, [pc, #24]	; (1004dd3c <isr_advertise_state+0x394>)
1004dd24:	6880      	ldr	r0, [r0, #8]
1004dd26:	0340      	lsls	r0, r0, #13
1004dd28:	d502      	bpl.n	1004dd30 <isr_advertise_state+0x388>
1004dd2a:	4620      	mov	r0, r4
1004dd2c:	f003 f970 	bl	10051010 <isr_postproc_encrypt_data>
1004dd30:	b015      	add	sp, #84	; 0x54
1004dd32:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004dd34:	2000098c 	.word	0x2000098c
1004dd38:	00000904 	.word	0x00000904
1004dd3c:	20000944 	.word	0x20000944

1004dd40 <isr_connect_slave_state>:
1004dd40:	b5f0      	push	{r4, r5, r6, r7, lr}
1004dd42:	48fe      	ldr	r0, [pc, #1016]	; (1004e13c <isr_connect_slave_state+0x3fc>)
1004dd44:	4efe      	ldr	r6, [pc, #1016]	; (1004e140 <isr_connect_slave_state+0x400>)
1004dd46:	6801      	ldr	r1, [r0, #0]
1004dd48:	2041      	movs	r0, #65	; 0x41
1004dd4a:	0140      	lsls	r0, r0, #5
1004dd4c:	68b2      	ldr	r2, [r6, #8]
1004dd4e:	180c      	adds	r4, r1, r0
1004dd50:	b085      	sub	sp, #20
1004dd52:	01d0      	lsls	r0, r2, #7
1004dd54:	d573      	bpl.n	1004de3e <isr_connect_slave_state+0xfe>
1004dd56:	4620      	mov	r0, r4
1004dd58:	3080      	adds	r0, #128	; 0x80
1004dd5a:	9000      	str	r0, [sp, #0]
1004dd5c:	6b80      	ldr	r0, [r0, #56]	; 0x38
1004dd5e:	7a81      	ldrb	r1, [r0, #10]
1004dd60:	23ee      	movs	r3, #238	; 0xee
1004dd62:	4019      	ands	r1, r3
1004dd64:	7281      	strb	r1, [r0, #10]
1004dd66:	4630      	mov	r0, r6
1004dd68:	0351      	lsls	r1, r2, #13
1004dd6a:	2501      	movs	r5, #1
1004dd6c:	68c0      	ldr	r0, [r0, #12]
1004dd6e:	2900      	cmp	r1, #0
1004dd70:	db42      	blt.n	1004ddf8 <isr_connect_slave_state+0xb8>
1004dd72:	0151      	lsls	r1, r2, #5
1004dd74:	d505      	bpl.n	1004dd82 <isr_connect_slave_state+0x42>
1004dd76:	2000      	movs	r0, #0
1004dd78:	2109      	movs	r1, #9
1004dd7a:	06c9      	lsls	r1, r1, #27
1004dd7c:	6048      	str	r0, [r1, #4]
1004dd7e:	7035      	strb	r5, [r6, #0]
1004dd80:	e036      	b.n	1004ddf0 <isr_connect_slave_state+0xb0>
1004dd82:	0051      	lsls	r1, r2, #1
1004dd84:	d512      	bpl.n	1004ddac <isr_connect_slave_state+0x6c>
1004dd86:	78c1      	ldrb	r1, [r0, #3]
1004dd88:	1e49      	subs	r1, r1, #1
1004dd8a:	0609      	lsls	r1, r1, #24
1004dd8c:	0e09      	lsrs	r1, r1, #24
1004dd8e:	70c1      	strb	r1, [r0, #3]
1004dd90:	d103      	bne.n	1004dd9a <isr_connect_slave_state+0x5a>
1004dd92:	2209      	movs	r2, #9
1004dd94:	06d2      	lsls	r2, r2, #27
1004dd96:	6051      	str	r1, [r2, #4]
1004dd98:	7035      	strb	r5, [r6, #0]
1004dd9a:	7941      	ldrb	r1, [r0, #5]
1004dd9c:	060a      	lsls	r2, r1, #24
1004dd9e:	d527      	bpl.n	1004ddf0 <isr_connect_slave_state+0xb0>
1004dda0:	0649      	lsls	r1, r1, #25
1004dda2:	0e49      	lsrs	r1, r1, #25
1004dda4:	7141      	strb	r1, [r0, #5]
1004dda6:	6981      	ldr	r1, [r0, #24]
1004dda8:	6141      	str	r1, [r0, #20]
1004ddaa:	e021      	b.n	1004ddf0 <isr_connect_slave_state+0xb0>
1004ddac:	49e5      	ldr	r1, [pc, #916]	; (1004e144 <isr_connect_slave_state+0x404>)
1004ddae:	420a      	tst	r2, r1
1004ddb0:	d00a      	beq.n	1004ddc8 <isr_connect_slave_state+0x88>
1004ddb2:	4621      	mov	r1, r4
1004ddb4:	3120      	adds	r1, #32
1004ddb6:	708d      	strb	r5, [r1, #2]
1004ddb8:	0252      	lsls	r2, r2, #9
1004ddba:	d502      	bpl.n	1004ddc2 <isr_connect_slave_state+0x82>
1004ddbc:	2203      	movs	r2, #3
1004ddbe:	708a      	strb	r2, [r1, #2]
1004ddc0:	e000      	b.n	1004ddc4 <isr_connect_slave_state+0x84>
1004ddc2:	708d      	strb	r5, [r1, #2]
1004ddc4:	6981      	ldr	r1, [r0, #24]
1004ddc6:	6141      	str	r1, [r0, #20]
1004ddc8:	7901      	ldrb	r1, [r0, #4]
1004ddca:	4622      	mov	r2, r4
1004ddcc:	70c1      	strb	r1, [r0, #3]
1004ddce:	3240      	adds	r2, #64	; 0x40
1004ddd0:	7991      	ldrb	r1, [r2, #6]
1004ddd2:	2900      	cmp	r1, #0
1004ddd4:	d008      	beq.n	1004dde8 <isr_connect_slave_state+0xa8>
1004ddd6:	2109      	movs	r1, #9
1004ddd8:	06c9      	lsls	r1, r1, #27
1004ddda:	6889      	ldr	r1, [r1, #8]
1004dddc:	64a1      	str	r1, [r4, #72]	; 0x48
1004ddde:	2100      	movs	r1, #0
1004dde0:	2302      	movs	r3, #2
1004dde2:	64e1      	str	r1, [r4, #76]	; 0x4c
1004dde4:	7793      	strb	r3, [r2, #30]
1004dde6:	65a1      	str	r1, [r4, #88]	; 0x58
1004dde8:	7941      	ldrb	r1, [r0, #5]
1004ddea:	0649      	lsls	r1, r1, #25
1004ddec:	0e49      	lsrs	r1, r1, #25
1004ddee:	7141      	strb	r1, [r0, #5]
1004ddf0:	2000      	movs	r0, #0
1004ddf2:	2146      	movs	r1, #70	; 0x46
1004ddf4:	5508      	strb	r0, [r1, r4]
1004ddf6:	e039      	b.n	1004de6c <isr_connect_slave_state+0x12c>
1004ddf8:	6931      	ldr	r1, [r6, #16]
1004ddfa:	898a      	ldrh	r2, [r1, #12]
1004ddfc:	2101      	movs	r1, #1
1004ddfe:	0749      	lsls	r1, r1, #29
1004de00:	1852      	adds	r2, r2, r1
1004de02:	8852      	ldrh	r2, [r2, #2]
1004de04:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004de06:	1852      	adds	r2, r2, r1
1004de08:	4293      	cmp	r3, r2
1004de0a:	d109      	bne.n	1004de20 <isr_connect_slave_state+0xe0>
1004de0c:	7892      	ldrb	r2, [r2, #2]
1004de0e:	2a14      	cmp	r2, #20
1004de10:	d106      	bne.n	1004de20 <isr_connect_slave_state+0xe0>
1004de12:	4603      	mov	r3, r0
1004de14:	3340      	adds	r3, #64	; 0x40
1004de16:	7d1a      	ldrb	r2, [r3, #20]
1004de18:	27df      	movs	r7, #223	; 0xdf
1004de1a:	403a      	ands	r2, r7
1004de1c:	432a      	orrs	r2, r5
1004de1e:	751a      	strb	r2, [r3, #20]
1004de20:	6a80      	ldr	r0, [r0, #40]	; 0x28
1004de22:	8840      	ldrh	r0, [r0, #2]
1004de24:	1840      	adds	r0, r0, r1
1004de26:	217d      	movs	r1, #125	; 0x7d
1004de28:	7800      	ldrb	r0, [r0, #0]
1004de2a:	5d09      	ldrb	r1, [r1, r4]
1004de2c:	4308      	orrs	r0, r1
1004de2e:	06c0      	lsls	r0, r0, #27
1004de30:	d406      	bmi.n	1004de40 <isr_connect_slave_state+0x100>
1004de32:	2000      	movs	r0, #0
1004de34:	2109      	movs	r1, #9
1004de36:	7035      	strb	r5, [r6, #0]
1004de38:	06c9      	lsls	r1, r1, #27
1004de3a:	6048      	str	r0, [r1, #4]
1004de3c:	e010      	b.n	1004de60 <isr_connect_slave_state+0x120>
1004de3e:	e282      	b.n	1004e346 <isr_connect_slave_state+0x606>
1004de40:	6d60      	ldr	r0, [r4, #84]	; 0x54
1004de42:	f004 f9c1 	bl	100521c8 <machine_time_trans>
1004de46:	4601      	mov	r1, r0
1004de48:	2009      	movs	r0, #9
1004de4a:	06c0      	lsls	r0, r0, #27
1004de4c:	6902      	ldr	r2, [r0, #16]
1004de4e:	6d23      	ldr	r3, [r4, #80]	; 0x50
1004de50:	1ad2      	subs	r2, r2, r3
1004de52:	0212      	lsls	r2, r2, #8
1004de54:	0a12      	lsrs	r2, r2, #8
1004de56:	4291      	cmp	r1, r2
1004de58:	d202      	bcs.n	1004de60 <isr_connect_slave_state+0x120>
1004de5a:	7035      	strb	r5, [r6, #0]
1004de5c:	2100      	movs	r1, #0
1004de5e:	6041      	str	r1, [r0, #4]
1004de60:	68f0      	ldr	r0, [r6, #12]
1004de62:	2201      	movs	r2, #1
1004de64:	6901      	ldr	r1, [r0, #16]
1004de66:	03d2      	lsls	r2, r2, #15
1004de68:	4391      	bics	r1, r2
1004de6a:	6101      	str	r1, [r0, #16]
1004de6c:	68b2      	ldr	r2, [r6, #8]
1004de6e:	0250      	lsls	r0, r2, #9
1004de70:	d513      	bpl.n	1004de9a <isr_connect_slave_state+0x15a>
1004de72:	6930      	ldr	r0, [r6, #16]
1004de74:	8980      	ldrh	r0, [r0, #12]
1004de76:	2101      	movs	r1, #1
1004de78:	0749      	lsls	r1, r1, #29
1004de7a:	1840      	adds	r0, r0, r1
1004de7c:	8840      	ldrh	r0, [r0, #2]
1004de7e:	1840      	adds	r0, r0, r1
1004de80:	6170      	str	r0, [r6, #20]
1004de82:	68f1      	ldr	r1, [r6, #12]
1004de84:	6b4b      	ldr	r3, [r1, #52]	; 0x34
1004de86:	4283      	cmp	r3, r0
1004de88:	d107      	bne.n	1004de9a <isr_connect_slave_state+0x15a>
1004de8a:	7880      	ldrb	r0, [r0, #2]
1004de8c:	280d      	cmp	r0, #13
1004de8e:	d104      	bne.n	1004de9a <isr_connect_slave_state+0x15a>
1004de90:	2001      	movs	r0, #1
1004de92:	690b      	ldr	r3, [r1, #16]
1004de94:	0400      	lsls	r0, r0, #16
1004de96:	4383      	bics	r3, r0
1004de98:	610b      	str	r3, [r1, #16]
1004de9a:	4637      	mov	r7, r6
1004de9c:	2a00      	cmp	r2, #0
1004de9e:	da48      	bge.n	1004df32 <isr_connect_slave_state+0x1f2>
1004dea0:	9800      	ldr	r0, [sp, #0]
1004dea2:	6b80      	ldr	r0, [r0, #56]	; 0x38
1004dea4:	8841      	ldrh	r1, [r0, #2]
1004dea6:	2001      	movs	r0, #1
1004dea8:	0740      	lsls	r0, r0, #29
1004deaa:	1808      	adds	r0, r1, r0
1004deac:	61f8      	str	r0, [r7, #28]
1004deae:	2009      	movs	r0, #9
1004deb0:	06c0      	lsls	r0, r0, #27
1004deb2:	6940      	ldr	r0, [r0, #20]
1004deb4:	0dc0      	lsrs	r0, r0, #23
1004deb6:	07c0      	lsls	r0, r0, #31
1004deb8:	d008      	beq.n	1004decc <isr_connect_slave_state+0x18c>
1004deba:	2000      	movs	r0, #0
1004debc:	2109      	movs	r1, #9
1004debe:	707d      	strb	r5, [r7, #1]
1004dec0:	06c9      	lsls	r1, r1, #27
1004dec2:	6048      	str	r0, [r1, #4]
1004dec4:	703d      	strb	r5, [r7, #0]
1004dec6:	48a0      	ldr	r0, [pc, #640]	; (1004e148 <isr_connect_slave_state+0x408>)
1004dec8:	61b0      	str	r0, [r6, #24]
1004deca:	e0f1      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004decc:	68f8      	ldr	r0, [r7, #12]
1004dece:	2141      	movs	r1, #65	; 0x41
1004ded0:	6900      	ldr	r0, [r0, #16]
1004ded2:	0149      	lsls	r1, r1, #5
1004ded4:	4208      	tst	r0, r1
1004ded6:	d00a      	beq.n	1004deee <isr_connect_slave_state+0x1ae>
1004ded8:	f7fe fd9b 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004dedc:	2801      	cmp	r0, #1
1004dede:	d029      	beq.n	1004df34 <isr_connect_slave_state+0x1f4>
1004dee0:	221c      	movs	r2, #28
1004dee2:	69f9      	ldr	r1, [r7, #28]
1004dee4:	7848      	ldrb	r0, [r1, #1]
1004dee6:	4202      	tst	r2, r0
1004dee8:	d001      	beq.n	1004deee <isr_connect_slave_state+0x1ae>
1004deea:	1f00      	subs	r0, r0, #4
1004deec:	7048      	strb	r0, [r1, #1]
1004deee:	69f8      	ldr	r0, [r7, #28]
1004def0:	227d      	movs	r2, #125	; 0x7d
1004def2:	7801      	ldrb	r1, [r0, #0]
1004def4:	5511      	strb	r1, [r2, r4]
1004def6:	43c9      	mvns	r1, r1
1004def8:	0789      	lsls	r1, r1, #30
1004defa:	d01d      	beq.n	1004df38 <isr_connect_slave_state+0x1f8>
1004defc:	68f8      	ldr	r0, [r7, #12]
1004defe:	6900      	ldr	r0, [r0, #16]
1004df00:	03c0      	lsls	r0, r0, #15
1004df02:	d56f      	bpl.n	1004dfe4 <isr_connect_slave_state+0x2a4>
1004df04:	f7fe fd85 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004df08:	2801      	cmp	r0, #1
1004df0a:	d06c      	beq.n	1004dfe6 <isr_connect_slave_state+0x2a6>
1004df0c:	201f      	movs	r0, #31
1004df0e:	69f9      	ldr	r1, [r7, #28]
1004df10:	7849      	ldrb	r1, [r1, #1]
1004df12:	4208      	tst	r0, r1
1004df14:	d066      	beq.n	1004dfe4 <isr_connect_slave_state+0x2a4>
1004df16:	2000      	movs	r0, #0
1004df18:	2109      	movs	r1, #9
1004df1a:	707d      	strb	r5, [r7, #1]
1004df1c:	06c9      	lsls	r1, r1, #27
1004df1e:	6048      	str	r0, [r1, #4]
1004df20:	703d      	strb	r5, [r7, #0]
1004df22:	4889      	ldr	r0, [pc, #548]	; (1004e148 <isr_connect_slave_state+0x408>)
1004df24:	61b8      	str	r0, [r7, #24]
1004df26:	68f8      	ldr	r0, [r7, #12]
1004df28:	2101      	movs	r1, #1
1004df2a:	6902      	ldr	r2, [r0, #16]
1004df2c:	0409      	lsls	r1, r1, #16
1004df2e:	438a      	bics	r2, r1
1004df30:	6102      	str	r2, [r0, #16]
1004df32:	e0bd      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004df34:	22fc      	movs	r2, #252	; 0xfc
1004df36:	e7d4      	b.n	1004dee2 <isr_connect_slave_state+0x1a2>
1004df38:	7886      	ldrb	r6, [r0, #2]
1004df3a:	7841      	ldrb	r1, [r0, #1]
1004df3c:	2e1a      	cmp	r6, #26
1004df3e:	d274      	bcs.n	1004e02a <isr_connect_slave_state+0x2ea>
1004df40:	4a82      	ldr	r2, [pc, #520]	; (1004e14c <isr_connect_slave_state+0x40c>)
1004df42:	5d92      	ldrb	r2, [r2, r6]
1004df44:	2aff      	cmp	r2, #255	; 0xff
1004df46:	d070      	beq.n	1004e02a <isr_connect_slave_state+0x2ea>
1004df48:	428a      	cmp	r2, r1
1004df4a:	d16e      	bne.n	1004e02a <isr_connect_slave_state+0x2ea>
1004df4c:	2e02      	cmp	r6, #2
1004df4e:	d014      	beq.n	1004df7a <isr_connect_slave_state+0x23a>
1004df50:	68f9      	ldr	r1, [r7, #12]
1004df52:	794a      	ldrb	r2, [r1, #5]
1004df54:	06d2      	lsls	r2, r2, #27
1004df56:	d459      	bmi.n	1004e00c <isr_connect_slave_state+0x2cc>
1004df58:	2e06      	cmp	r6, #6
1004df5a:	d015      	beq.n	1004df88 <isr_connect_slave_state+0x248>
1004df5c:	690a      	ldr	r2, [r1, #16]
1004df5e:	03d3      	lsls	r3, r2, #15
1004df60:	d527      	bpl.n	1004dfb2 <isr_connect_slave_state+0x272>
1004df62:	2000      	movs	r0, #0
1004df64:	2209      	movs	r2, #9
1004df66:	707d      	strb	r5, [r7, #1]
1004df68:	06d2      	lsls	r2, r2, #27
1004df6a:	6050      	str	r0, [r2, #4]
1004df6c:	703d      	strb	r5, [r7, #0]
1004df6e:	4876      	ldr	r0, [pc, #472]	; (1004e148 <isr_connect_slave_state+0x408>)
1004df70:	61b8      	str	r0, [r7, #24]
1004df72:	690a      	ldr	r2, [r1, #16]
1004df74:	1100      	asrs	r0, r0, #4
1004df76:	4382      	bics	r2, r0
1004df78:	e05b      	b.n	1004e032 <isr_connect_slave_state+0x2f2>
1004df7a:	68f8      	ldr	r0, [r7, #12]
1004df7c:	6b40      	ldr	r0, [r0, #52]	; 0x34
1004df7e:	6005      	str	r5, [r0, #0]
1004df80:	68f9      	ldr	r1, [r7, #12]
1004df82:	2023      	movs	r0, #35	; 0x23
1004df84:	7148      	strb	r0, [r1, #5]
1004df86:	e093      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004df88:	2201      	movs	r2, #1
1004df8a:	69b8      	ldr	r0, [r7, #24]
1004df8c:	0392      	lsls	r2, r2, #14
1004df8e:	4310      	orrs	r0, r2
1004df90:	61b8      	str	r0, [r7, #24]
1004df92:	4a6f      	ldr	r2, [pc, #444]	; (1004e150 <isr_connect_slave_state+0x410>)
1004df94:	6908      	ldr	r0, [r1, #16]
1004df96:	4010      	ands	r0, r2
1004df98:	2215      	movs	r2, #21
1004df9a:	0252      	lsls	r2, r2, #9
1004df9c:	4310      	orrs	r0, r2
1004df9e:	6108      	str	r0, [r1, #16]
1004dfa0:	4620      	mov	r0, r4
1004dfa2:	30c0      	adds	r0, #192	; 0xc0
1004dfa4:	7bc1      	ldrb	r1, [r0, #15]
1004dfa6:	78ba      	ldrb	r2, [r7, #2]
1004dfa8:	4291      	cmp	r1, r2
1004dfaa:	d12f      	bne.n	1004e00c <isr_connect_slave_state+0x2cc>
1004dfac:	2108      	movs	r1, #8
1004dfae:	73c1      	strb	r1, [r0, #15]
1004dfb0:	e07e      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004dfb2:	2e00      	cmp	r6, #0
1004dfb4:	d018      	beq.n	1004dfe8 <isr_connect_slave_state+0x2a8>
1004dfb6:	2e01      	cmp	r6, #1
1004dfb8:	d029      	beq.n	1004e00e <isr_connect_slave_state+0x2ce>
1004dfba:	2e03      	cmp	r6, #3
1004dfbc:	d02c      	beq.n	1004e018 <isr_connect_slave_state+0x2d8>
1004dfbe:	2e0a      	cmp	r6, #10
1004dfc0:	d034      	beq.n	1004e02c <isr_connect_slave_state+0x2ec>
1004dfc2:	2e0b      	cmp	r6, #11
1004dfc4:	d037      	beq.n	1004e036 <isr_connect_slave_state+0x2f6>
1004dfc6:	2e08      	cmp	r6, #8
1004dfc8:	d038      	beq.n	1004e03c <isr_connect_slave_state+0x2fc>
1004dfca:	2e09      	cmp	r6, #9
1004dfcc:	d039      	beq.n	1004e042 <isr_connect_slave_state+0x302>
1004dfce:	2e0c      	cmp	r6, #12
1004dfd0:	d03a      	beq.n	1004e048 <isr_connect_slave_state+0x308>
1004dfd2:	4602      	mov	r2, r0
1004dfd4:	4b5f      	ldr	r3, [pc, #380]	; (1004e154 <isr_connect_slave_state+0x414>)
1004dfd6:	4631      	mov	r1, r6
1004dfd8:	2001      	movs	r0, #1
1004dfda:	f7ff fb51 	bl	1004d680 <Data_Length_Update_Control_ISR_ucfg>
1004dfde:	2800      	cmp	r0, #0
1004dfe0:	d166      	bne.n	1004e0b0 <isr_connect_slave_state+0x370>
1004dfe2:	e049      	b.n	1004e078 <isr_connect_slave_state+0x338>
1004dfe4:	e05b      	b.n	1004e09e <isr_connect_slave_state+0x35e>
1004dfe6:	e058      	b.n	1004e09a <isr_connect_slave_state+0x35a>
1004dfe8:	460a      	mov	r2, r1
1004dfea:	4621      	mov	r1, r4
1004dfec:	f003 fa51 	bl	10051492 <unpack_update_request>
1004dff0:	69f8      	ldr	r0, [r7, #28]
1004dff2:	7981      	ldrb	r1, [r0, #6]
1004dff4:	79c0      	ldrb	r0, [r0, #7]
1004dff6:	0200      	lsls	r0, r0, #8
1004dff8:	4308      	orrs	r0, r1
1004dffa:	4957      	ldr	r1, [pc, #348]	; (1004e158 <isr_connect_slave_state+0x418>)
1004dffc:	0240      	lsls	r0, r0, #9
1004dffe:	1840      	adds	r0, r0, r1
1004e000:	4956      	ldr	r1, [pc, #344]	; (1004e15c <isr_connect_slave_state+0x41c>)
1004e002:	6a89      	ldr	r1, [r1, #40]	; 0x28
1004e004:	4281      	cmp	r1, r0
1004e006:	d800      	bhi.n	1004e00a <isr_connect_slave_state+0x2ca>
1004e008:	4608      	mov	r0, r1
1004e00a:	6560      	str	r0, [r4, #84]	; 0x54
1004e00c:	e050      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004e00e:	460a      	mov	r2, r1
1004e010:	4621      	mov	r1, r4
1004e012:	f003 fa27 	bl	10051464 <unpack_channel_map>
1004e016:	e04b      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004e018:	69b8      	ldr	r0, [r7, #24]
1004e01a:	2380      	movs	r3, #128	; 0x80
1004e01c:	4318      	orrs	r0, r3
1004e01e:	61b8      	str	r0, [r7, #24]
1004e020:	2041      	movs	r0, #65	; 0x41
1004e022:	0400      	lsls	r0, r0, #16
1004e024:	4302      	orrs	r2, r0
1004e026:	610a      	str	r2, [r1, #16]
1004e028:	e042      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004e02a:	e027      	b.n	1004e07c <isr_connect_slave_state+0x33c>
1004e02c:	2089      	movs	r0, #137	; 0x89
1004e02e:	01c0      	lsls	r0, r0, #7
1004e030:	e005      	b.n	1004e03e <isr_connect_slave_state+0x2fe>
1004e032:	610a      	str	r2, [r1, #16]
1004e034:	e03c      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004e036:	484a      	ldr	r0, [pc, #296]	; (1004e160 <isr_connect_slave_state+0x420>)
1004e038:	4002      	ands	r2, r0
1004e03a:	e7fa      	b.n	1004e032 <isr_connect_slave_state+0x2f2>
1004e03c:	2010      	movs	r0, #16
1004e03e:	4302      	orrs	r2, r0
1004e040:	e7f7      	b.n	1004e032 <isr_connect_slave_state+0x2f2>
1004e042:	2001      	movs	r0, #1
1004e044:	0300      	lsls	r0, r0, #12
1004e046:	e026      	b.n	1004e096 <isr_connect_slave_state+0x356>
1004e048:	0796      	lsls	r6, r2, #30
1004e04a:	2304      	movs	r3, #4
1004e04c:	2e00      	cmp	r6, #0
1004e04e:	da08      	bge.n	1004e062 <isr_connect_slave_state+0x322>
1004e050:	69be      	ldr	r6, [r7, #24]
1004e052:	431e      	orrs	r6, r3
1004e054:	2302      	movs	r3, #2
1004e056:	439a      	bics	r2, r3
1004e058:	2308      	movs	r3, #8
1004e05a:	61be      	str	r6, [r7, #24]
1004e05c:	26cf      	movs	r6, #207	; 0xcf
1004e05e:	5533      	strb	r3, [r6, r4]
1004e060:	e002      	b.n	1004e068 <isr_connect_slave_state+0x328>
1004e062:	07d6      	lsls	r6, r2, #31
1004e064:	d100      	bne.n	1004e068 <isr_connect_slave_state+0x328>
1004e066:	431a      	orrs	r2, r3
1004e068:	432a      	orrs	r2, r5
1004e06a:	610a      	str	r2, [r1, #16]
1004e06c:	2205      	movs	r2, #5
1004e06e:	1cc0      	adds	r0, r0, #3
1004e070:	312c      	adds	r1, #44	; 0x2c
1004e072:	f7fe fc25 	bl	1004c8c0 <char_copy>
1004e076:	e01b      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004e078:	2e07      	cmp	r6, #7
1004e07a:	d006      	beq.n	1004e08a <isr_connect_slave_state+0x34a>
1004e07c:	68f8      	ldr	r0, [r7, #12]
1004e07e:	2208      	movs	r2, #8
1004e080:	6901      	ldr	r1, [r0, #16]
1004e082:	4311      	orrs	r1, r2
1004e084:	6101      	str	r1, [r0, #16]
1004e086:	71c6      	strb	r6, [r0, #7]
1004e088:	e012      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004e08a:	69f8      	ldr	r0, [r7, #28]
1004e08c:	78c0      	ldrb	r0, [r0, #3]
1004e08e:	280e      	cmp	r0, #14
1004e090:	d10e      	bne.n	1004e0b0 <isr_connect_slave_state+0x370>
1004e092:	2001      	movs	r0, #1
1004e094:	0680      	lsls	r0, r0, #26
1004e096:	61b8      	str	r0, [r7, #24]
1004e098:	e00a      	b.n	1004e0b0 <isr_connect_slave_state+0x370>
1004e09a:	20ff      	movs	r0, #255	; 0xff
1004e09c:	e737      	b.n	1004df0e <isr_connect_slave_state+0x1ce>
1004e09e:	4621      	mov	r1, r4
1004e0a0:	68fb      	ldr	r3, [r7, #12]
1004e0a2:	693a      	ldr	r2, [r7, #16]
1004e0a4:	69f8      	ldr	r0, [r7, #28]
1004e0a6:	f00a f80d 	bl	100580c4 <LL_receive_data>
1004e0aa:	69b9      	ldr	r1, [r7, #24]
1004e0ac:	4308      	orrs	r0, r1
1004e0ae:	61b8      	str	r0, [r7, #24]
1004e0b0:	4f23      	ldr	r7, [pc, #140]	; (1004e140 <isr_connect_slave_state+0x400>)
1004e0b2:	68f8      	ldr	r0, [r7, #12]
1004e0b4:	6939      	ldr	r1, [r7, #16]
1004e0b6:	6a06      	ldr	r6, [r0, #32]
1004e0b8:	8a0a      	ldrh	r2, [r1, #16]
1004e0ba:	2301      	movs	r3, #1
1004e0bc:	075b      	lsls	r3, r3, #29
1004e0be:	18d2      	adds	r2, r2, r3
1004e0c0:	9201      	str	r2, [sp, #4]
1004e0c2:	8852      	ldrh	r2, [r2, #2]
1004e0c4:	18d2      	adds	r2, r2, r3
1004e0c6:	2300      	movs	r3, #0
1004e0c8:	617a      	str	r2, [r7, #20]
1004e0ca:	9302      	str	r3, [sp, #8]
1004e0cc:	68bb      	ldr	r3, [r7, #8]
1004e0ce:	2711      	movs	r7, #17
1004e0d0:	04bf      	lsls	r7, r7, #18
1004e0d2:	423b      	tst	r3, r7
1004e0d4:	d11e      	bne.n	1004e114 <isr_connect_slave_state+0x3d4>
1004e0d6:	015f      	lsls	r7, r3, #5
1004e0d8:	d41c      	bmi.n	1004e114 <isr_connect_slave_state+0x3d4>
1004e0da:	6b47      	ldr	r7, [r0, #52]	; 0x34
1004e0dc:	4297      	cmp	r7, r2
1004e0de:	d001      	beq.n	1004e0e4 <isr_connect_slave_state+0x3a4>
1004e0e0:	2701      	movs	r7, #1
1004e0e2:	e000      	b.n	1004e0e6 <isr_connect_slave_state+0x3a6>
1004e0e4:	2700      	movs	r7, #0
1004e0e6:	9703      	str	r7, [sp, #12]
1004e0e8:	4290      	cmp	r0, r2
1004e0ea:	d001      	beq.n	1004e0f0 <isr_connect_slave_state+0x3b0>
1004e0ec:	2701      	movs	r7, #1
1004e0ee:	e000      	b.n	1004e0f2 <isr_connect_slave_state+0x3b2>
1004e0f0:	2700      	movs	r7, #0
1004e0f2:	46bc      	mov	ip, r7
1004e0f4:	2e00      	cmp	r6, #0
1004e0f6:	d00d      	beq.n	1004e114 <isr_connect_slave_state+0x3d4>
1004e0f8:	9f03      	ldr	r7, [sp, #12]
1004e0fa:	2f00      	cmp	r7, #0
1004e0fc:	d00a      	beq.n	1004e114 <isr_connect_slave_state+0x3d4>
1004e0fe:	4667      	mov	r7, ip
1004e100:	2f00      	cmp	r7, #0
1004e102:	d007      	beq.n	1004e114 <isr_connect_slave_state+0x3d4>
1004e104:	7cf7      	ldrb	r7, [r6, #19]
1004e106:	09ff      	lsrs	r7, r7, #7
1004e108:	d004      	beq.n	1004e114 <isr_connect_slave_state+0x3d4>
1004e10a:	6837      	ldr	r7, [r6, #0]
1004e10c:	2f00      	cmp	r7, #0
1004e10e:	d001      	beq.n	1004e114 <isr_connect_slave_state+0x3d4>
1004e110:	2701      	movs	r7, #1
1004e112:	9702      	str	r7, [sp, #8]
1004e114:	025b      	lsls	r3, r3, #9
1004e116:	d402      	bmi.n	1004e11e <isr_connect_slave_state+0x3de>
1004e118:	9b02      	ldr	r3, [sp, #8]
1004e11a:	2b00      	cmp	r3, #0
1004e11c:	d075      	beq.n	1004e20a <isr_connect_slave_state+0x4ca>
1004e11e:	7943      	ldrb	r3, [r0, #5]
1004e120:	079f      	lsls	r7, r3, #30
1004e122:	d501      	bpl.n	1004e128 <isr_connect_slave_state+0x3e8>
1004e124:	2e00      	cmp	r6, #0
1004e126:	d01d      	beq.n	1004e164 <isr_connect_slave_state+0x424>
1004e128:	085b      	lsrs	r3, r3, #1
1004e12a:	005b      	lsls	r3, r3, #1
1004e12c:	6b47      	ldr	r7, [r0, #52]	; 0x34
1004e12e:	4297      	cmp	r7, r2
1004e130:	d157      	bne.n	1004e1e2 <isr_connect_slave_state+0x4a2>
1004e132:	7143      	strb	r3, [r0, #5]
1004e134:	7893      	ldrb	r3, [r2, #2]
1004e136:	2b04      	cmp	r3, #4
1004e138:	d019      	beq.n	1004e16e <isr_connect_slave_state+0x42e>
1004e13a:	e02a      	b.n	1004e192 <isr_connect_slave_state+0x452>
1004e13c:	2000098c 	.word	0x2000098c
1004e140:	20000944 	.word	0x20000944
1004e144:	80400000 	.word	0x80400000
1004e148:	00100008 	.word	0x00100008
1004e14c:	10058f28 	.word	0x10058f28
1004e150:	fffefbdf 	.word	0xfffefbdf
1004e154:	2000095c 	.word	0x2000095c
1004e158:	fffffd9a 	.word	0xfffffd9a
1004e15c:	200002cc 	.word	0x200002cc
1004e160:	fffeffbf 	.word	0xfffeffbf
1004e164:	432b      	orrs	r3, r5
1004e166:	461f      	mov	r7, r3
1004e168:	432f      	orrs	r7, r5
1004e16a:	7147      	strb	r7, [r0, #5]
1004e16c:	e7de      	b.n	1004e12c <isr_connect_slave_state+0x3ec>
1004e16e:	4623      	mov	r3, r4
1004e170:	33c0      	adds	r3, #192	; 0xc0
1004e172:	7bdf      	ldrb	r7, [r3, #15]
1004e174:	2f08      	cmp	r7, #8
1004e176:	d105      	bne.n	1004e184 <isr_connect_slave_state+0x444>
1004e178:	4fe2      	ldr	r7, [pc, #904]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e17a:	78bf      	ldrb	r7, [r7, #2]
1004e17c:	73df      	strb	r7, [r3, #15]
1004e17e:	277d      	movs	r7, #125	; 0x7d
1004e180:	027f      	lsls	r7, r7, #9
1004e182:	819f      	strh	r7, [r3, #12]
1004e184:	4bdf      	ldr	r3, [pc, #892]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e186:	2701      	movs	r7, #1
1004e188:	699b      	ldr	r3, [r3, #24]
1004e18a:	06ff      	lsls	r7, r7, #27
1004e18c:	433b      	orrs	r3, r7
1004e18e:	4fdd      	ldr	r7, [pc, #884]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e190:	61bb      	str	r3, [r7, #24]
1004e192:	7943      	ldrb	r3, [r0, #5]
1004e194:	06db      	lsls	r3, r3, #27
1004e196:	d50c      	bpl.n	1004e1b2 <isr_connect_slave_state+0x472>
1004e198:	4bda      	ldr	r3, [pc, #872]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e19a:	2709      	movs	r7, #9
1004e19c:	705d      	strb	r5, [r3, #1]
1004e19e:	2300      	movs	r3, #0
1004e1a0:	06ff      	lsls	r7, r7, #27
1004e1a2:	607b      	str	r3, [r7, #4]
1004e1a4:	4bd7      	ldr	r3, [pc, #860]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e1a6:	4fd8      	ldr	r7, [pc, #864]	; (1004e508 <isr_connect_slave_state+0x7c8>)
1004e1a8:	701d      	strb	r5, [r3, #0]
1004e1aa:	699b      	ldr	r3, [r3, #24]
1004e1ac:	433b      	orrs	r3, r7
1004e1ae:	4fd5      	ldr	r7, [pc, #852]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e1b0:	61bb      	str	r3, [r7, #24]
1004e1b2:	7892      	ldrb	r2, [r2, #2]
1004e1b4:	2a15      	cmp	r2, #21
1004e1b6:	d132      	bne.n	1004e21e <isr_connect_slave_state+0x4de>
1004e1b8:	4607      	mov	r7, r0
1004e1ba:	3740      	adds	r7, #64	; 0x40
1004e1bc:	7d3a      	ldrb	r2, [r7, #20]
1004e1be:	23fd      	movs	r3, #253	; 0xfd
1004e1c0:	401a      	ands	r2, r3
1004e1c2:	46bc      	mov	ip, r7
1004e1c4:	753a      	strb	r2, [r7, #20]
1004e1c6:	0713      	lsls	r3, r2, #28
1004e1c8:	d529      	bpl.n	1004e21e <isr_connect_slave_state+0x4de>
1004e1ca:	4bce      	ldr	r3, [pc, #824]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e1cc:	2701      	movs	r7, #1
1004e1ce:	699b      	ldr	r3, [r3, #24]
1004e1d0:	067f      	lsls	r7, r7, #25
1004e1d2:	433b      	orrs	r3, r7
1004e1d4:	4fcb      	ldr	r7, [pc, #812]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e1d6:	61bb      	str	r3, [r7, #24]
1004e1d8:	23f7      	movs	r3, #247	; 0xf7
1004e1da:	401a      	ands	r2, r3
1004e1dc:	4663      	mov	r3, ip
1004e1de:	751a      	strb	r2, [r3, #20]
1004e1e0:	e01d      	b.n	1004e21e <isr_connect_slave_state+0x4de>
1004e1e2:	4282      	cmp	r2, r0
1004e1e4:	d01b      	beq.n	1004e21e <isr_connect_slave_state+0x4de>
1004e1e6:	8a33      	ldrh	r3, [r6, #16]
1004e1e8:	7cb7      	ldrb	r7, [r6, #18]
1004e1ea:	2200      	movs	r2, #0
1004e1ec:	19db      	adds	r3, r3, r7
1004e1ee:	8233      	strh	r3, [r6, #16]
1004e1f0:	6973      	ldr	r3, [r6, #20]
1004e1f2:	61b3      	str	r3, [r6, #24]
1004e1f4:	74b2      	strb	r2, [r6, #18]
1004e1f6:	8a33      	ldrh	r3, [r6, #16]
1004e1f8:	88f7      	ldrh	r7, [r6, #6]
1004e1fa:	42bb      	cmp	r3, r7
1004e1fc:	d202      	bcs.n	1004e204 <isr_connect_slave_state+0x4c4>
1004e1fe:	7cf7      	ldrb	r7, [r6, #19]
1004e200:	09ff      	lsrs	r7, r7, #7
1004e202:	d003      	beq.n	1004e20c <isr_connect_slave_state+0x4cc>
1004e204:	6836      	ldr	r6, [r6, #0]
1004e206:	2220      	movs	r2, #32
1004e208:	e005      	b.n	1004e216 <isr_connect_slave_state+0x4d6>
1004e20a:	e068      	b.n	1004e2de <isr_connect_slave_state+0x59e>
1004e20c:	06db      	lsls	r3, r3, #27
1004e20e:	d102      	bne.n	1004e216 <isr_connect_slave_state+0x4d6>
1004e210:	69b3      	ldr	r3, [r6, #24]
1004e212:	681b      	ldr	r3, [r3, #0]
1004e214:	61b3      	str	r3, [r6, #24]
1004e216:	4bbb      	ldr	r3, [pc, #748]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e218:	699f      	ldr	r7, [r3, #24]
1004e21a:	433a      	orrs	r2, r7
1004e21c:	619a      	str	r2, [r3, #24]
1004e21e:	7942      	ldrb	r2, [r0, #5]
1004e220:	2700      	movs	r7, #0
1004e222:	07d2      	lsls	r2, r2, #31
1004e224:	d017      	beq.n	1004e256 <isr_connect_slave_state+0x516>
1004e226:	4ab7      	ldr	r2, [pc, #732]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e228:	6b43      	ldr	r3, [r0, #52]	; 0x34
1004e22a:	6153      	str	r3, [r2, #20]
1004e22c:	789a      	ldrb	r2, [r3, #2]
1004e22e:	2a05      	cmp	r2, #5
1004e230:	d13b      	bne.n	1004e2aa <isr_connect_slave_state+0x56a>
1004e232:	6902      	ldr	r2, [r0, #16]
1004e234:	2320      	movs	r3, #32
1004e236:	431a      	orrs	r2, r3
1004e238:	6102      	str	r2, [r0, #16]
1004e23a:	2000      	movs	r0, #0
1004e23c:	7008      	strb	r0, [r1, #0]
1004e23e:	7148      	strb	r0, [r1, #5]
1004e240:	7048      	strb	r0, [r1, #1]
1004e242:	7188      	strb	r0, [r1, #6]
1004e244:	7088      	strb	r0, [r1, #2]
1004e246:	71c8      	strb	r0, [r1, #7]
1004e248:	70c8      	strb	r0, [r1, #3]
1004e24a:	7208      	strb	r0, [r1, #8]
1004e24c:	7108      	strb	r0, [r1, #4]
1004e24e:	7248      	strb	r0, [r1, #9]
1004e250:	2080      	movs	r0, #128	; 0x80
1004e252:	7248      	strb	r0, [r1, #9]
1004e254:	e029      	b.n	1004e2aa <isr_connect_slave_state+0x56a>
1004e256:	2e00      	cmp	r6, #0
1004e258:	d00a      	beq.n	1004e270 <isr_connect_slave_state+0x530>
1004e25a:	f007 fdef 	bl	10055e3c <isr_Acl_Data_TX_Cmpl_Queue_Full>
1004e25e:	2800      	cmp	r0, #0
1004e260:	d106      	bne.n	1004e270 <isr_connect_slave_state+0x530>
1004e262:	48a8      	ldr	r0, [pc, #672]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e264:	2233      	movs	r2, #51	; 0x33
1004e266:	68c1      	ldr	r1, [r0, #12]
1004e268:	0152      	lsls	r2, r2, #5
1004e26a:	6909      	ldr	r1, [r1, #16]
1004e26c:	4211      	tst	r1, r2
1004e26e:	d009      	beq.n	1004e284 <isr_connect_slave_state+0x544>
1004e270:	49a4      	ldr	r1, [pc, #656]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e272:	2201      	movs	r2, #1
1004e274:	68c8      	ldr	r0, [r1, #12]
1004e276:	6148      	str	r0, [r1, #20]
1004e278:	8005      	strh	r5, [r0, #0]
1004e27a:	6901      	ldr	r1, [r0, #16]
1004e27c:	03d2      	lsls	r2, r2, #15
1004e27e:	4311      	orrs	r1, r2
1004e280:	6101      	str	r1, [r0, #16]
1004e282:	e012      	b.n	1004e2aa <isr_connect_slave_state+0x56a>
1004e284:	4aa1      	ldr	r2, [pc, #644]	; (1004e50c <isr_connect_slave_state+0x7cc>)
1004e286:	7c31      	ldrb	r1, [r6, #16]
1004e288:	6813      	ldr	r3, [r2, #0]
1004e28a:	2209      	movs	r2, #9
1004e28c:	0212      	lsls	r2, r2, #8
1004e28e:	06c9      	lsls	r1, r1, #27
1004e290:	189a      	adds	r2, r3, r2
1004e292:	0ec9      	lsrs	r1, r1, #27
1004e294:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
1004e296:	2701      	movs	r7, #1
1004e298:	1c89      	adds	r1, r1, #2
1004e29a:	1889      	adds	r1, r1, r2
1004e29c:	6141      	str	r1, [r0, #20]
1004e29e:	9a01      	ldr	r2, [sp, #4]
1004e2a0:	8051      	strh	r1, [r2, #2]
1004e2a2:	4631      	mov	r1, r6
1004e2a4:	68c0      	ldr	r0, [r0, #12]
1004e2a6:	f7ff fb03 	bl	1004d8b0 <copy_tx_data_packet>
1004e2aa:	4e96      	ldr	r6, [pc, #600]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e2ac:	2121      	movs	r1, #33	; 0x21
1004e2ae:	68f0      	ldr	r0, [r6, #12]
1004e2b0:	0189      	lsls	r1, r1, #6
1004e2b2:	6900      	ldr	r0, [r0, #16]
1004e2b4:	4208      	tst	r0, r1
1004e2b6:	d00a      	beq.n	1004e2ce <isr_connect_slave_state+0x58e>
1004e2b8:	f7fe fbab 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004e2bc:	2801      	cmp	r0, #1
1004e2be:	d009      	beq.n	1004e2d4 <isr_connect_slave_state+0x594>
1004e2c0:	221f      	movs	r2, #31
1004e2c2:	6971      	ldr	r1, [r6, #20]
1004e2c4:	7848      	ldrb	r0, [r1, #1]
1004e2c6:	4202      	tst	r2, r0
1004e2c8:	d001      	beq.n	1004e2ce <isr_connect_slave_state+0x58e>
1004e2ca:	1d00      	adds	r0, r0, #4
1004e2cc:	7048      	strb	r0, [r1, #1]
1004e2ce:	2f00      	cmp	r7, #0
1004e2d0:	d002      	beq.n	1004e2d8 <isr_connect_slave_state+0x598>
1004e2d2:	e004      	b.n	1004e2de <isr_connect_slave_state+0x59e>
1004e2d4:	22ff      	movs	r2, #255	; 0xff
1004e2d6:	e7f4      	b.n	1004e2c2 <isr_connect_slave_state+0x582>
1004e2d8:	9901      	ldr	r1, [sp, #4]
1004e2da:	8ab0      	ldrh	r0, [r6, #20]
1004e2dc:	8048      	strh	r0, [r1, #2]
1004e2de:	4e89      	ldr	r6, [pc, #548]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e2e0:	68f2      	ldr	r2, [r6, #12]
1004e2e2:	6910      	ldr	r0, [r2, #16]
1004e2e4:	0641      	lsls	r1, r0, #25
1004e2e6:	0f89      	lsrs	r1, r1, #30
1004e2e8:	d01e      	beq.n	1004e328 <isr_connect_slave_state+0x5e8>
1004e2ea:	0680      	lsls	r0, r0, #26
1004e2ec:	7831      	ldrb	r1, [r6, #0]
1004e2ee:	0fc0      	lsrs	r0, r0, #31
1004e2f0:	2901      	cmp	r1, #1
1004e2f2:	d002      	beq.n	1004e2fa <isr_connect_slave_state+0x5ba>
1004e2f4:	68b1      	ldr	r1, [r6, #8]
1004e2f6:	0349      	lsls	r1, r1, #13
1004e2f8:	d50b      	bpl.n	1004e312 <isr_connect_slave_state+0x5d2>
1004e2fa:	2800      	cmp	r0, #0
1004e2fc:	6930      	ldr	r0, [r6, #16]
1004e2fe:	d003      	beq.n	1004e308 <isr_connect_slave_state+0x5c8>
1004e300:	7dc1      	ldrb	r1, [r0, #23]
1004e302:	2308      	movs	r3, #8
1004e304:	4319      	orrs	r1, r3
1004e306:	e00a      	b.n	1004e31e <isr_connect_slave_state+0x5de>
1004e308:	7dc3      	ldrb	r3, [r0, #23]
1004e30a:	21f7      	movs	r1, #247	; 0xf7
1004e30c:	400b      	ands	r3, r1
1004e30e:	75c3      	strb	r3, [r0, #23]
1004e310:	e00a      	b.n	1004e328 <isr_connect_slave_state+0x5e8>
1004e312:	2800      	cmp	r0, #0
1004e314:	6930      	ldr	r0, [r6, #16]
1004e316:	7dc1      	ldrb	r1, [r0, #23]
1004e318:	d003      	beq.n	1004e322 <isr_connect_slave_state+0x5e2>
1004e31a:	23f7      	movs	r3, #247	; 0xf7
1004e31c:	4019      	ands	r1, r3
1004e31e:	75c1      	strb	r1, [r0, #23]
1004e320:	e002      	b.n	1004e328 <isr_connect_slave_state+0x5e8>
1004e322:	2308      	movs	r3, #8
1004e324:	4319      	orrs	r1, r3
1004e326:	75c1      	strb	r1, [r0, #23]
1004e328:	4621      	mov	r1, r4
1004e32a:	6933      	ldr	r3, [r6, #16]
1004e32c:	69f0      	ldr	r0, [r6, #28]
1004e32e:	f002 fde7 	bl	10050f00 <isr_postproc1>
1004e332:	7830      	ldrb	r0, [r6, #0]
1004e334:	2801      	cmp	r0, #1
1004e336:	d008      	beq.n	1004e34a <isr_connect_slave_state+0x60a>
1004e338:	9900      	ldr	r1, [sp, #0]
1004e33a:	4875      	ldr	r0, [pc, #468]	; (1004e510 <isr_connect_slave_state+0x7d0>)
1004e33c:	6b89      	ldr	r1, [r1, #56]	; 0x38
1004e33e:	2203      	movs	r2, #3
1004e340:	1d09      	adds	r1, r1, #4
1004e342:	f7fe fb0f 	bl	1004c964 <set_string>
1004e346:	b005      	add	sp, #20
1004e348:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004e34a:	486e      	ldr	r0, [pc, #440]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e34c:	2101      	movs	r1, #1
1004e34e:	68c2      	ldr	r2, [r0, #12]
1004e350:	6900      	ldr	r0, [r0, #16]
1004e352:	7953      	ldrb	r3, [r2, #5]
1004e354:	7ac7      	ldrb	r7, [r0, #11]
1004e356:	469c      	mov	ip, r3
1004e358:	2320      	movs	r3, #32
1004e35a:	5c1e      	ldrb	r6, [r3, r0]
1004e35c:	2300      	movs	r3, #0
1004e35e:	7283      	strb	r3, [r0, #10]
1004e360:	4620      	mov	r0, r4
1004e362:	3020      	adds	r0, #32
1004e364:	9001      	str	r0, [sp, #4]
1004e366:	7880      	ldrb	r0, [r0, #2]
1004e368:	2803      	cmp	r0, #3
1004e36a:	d11b      	bne.n	1004e3a4 <isr_connect_slave_state+0x664>
1004e36c:	7993      	ldrb	r3, [r2, #6]
1004e36e:	4865      	ldr	r0, [pc, #404]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e370:	2b00      	cmp	r3, #0
1004e372:	d117      	bne.n	1004e3a4 <isr_connect_slave_state+0x664>
1004e374:	4663      	mov	r3, ip
1004e376:	069b      	lsls	r3, r3, #26
1004e378:	0f9b      	lsrs	r3, r3, #30
1004e37a:	d113      	bne.n	1004e3a4 <isr_connect_slave_state+0x664>
1004e37c:	4b63      	ldr	r3, [pc, #396]	; (1004e50c <isr_connect_slave_state+0x7cc>)
1004e37e:	681b      	ldr	r3, [r3, #0]
1004e380:	3320      	adds	r3, #32
1004e382:	7cdb      	ldrb	r3, [r3, #19]
1004e384:	2b00      	cmp	r3, #0
1004e386:	d10d      	bne.n	1004e3a4 <isr_connect_slave_state+0x664>
1004e388:	6a13      	ldr	r3, [r2, #32]
1004e38a:	2b00      	cmp	r3, #0
1004e38c:	d10a      	bne.n	1004e3a4 <isr_connect_slave_state+0x664>
1004e38e:	23cf      	movs	r3, #207	; 0xcf
1004e390:	5d1b      	ldrb	r3, [r3, r4]
1004e392:	7880      	ldrb	r0, [r0, #2]
1004e394:	4283      	cmp	r3, r0
1004e396:	d005      	beq.n	1004e3a4 <isr_connect_slave_state+0x664>
1004e398:	8990      	ldrh	r0, [r2, #12]
1004e39a:	1c41      	adds	r1, r0, #1
1004e39c:	4370      	muls	r0, r6
1004e39e:	19c0      	adds	r0, r0, r7
1004e3a0:	b289      	uxth	r1, r1
1004e3a2:	b287      	uxth	r7, r0
1004e3a4:	8f10      	ldrh	r0, [r2, #56]	; 0x38
1004e3a6:	8913      	ldrh	r3, [r2, #8]
1004e3a8:	0040      	lsls	r0, r0, #1
1004e3aa:	4348      	muls	r0, r1
1004e3ac:	1859      	adds	r1, r3, r1
1004e3ae:	8111      	strh	r1, [r2, #8]
1004e3b0:	9901      	ldr	r1, [sp, #4]
1004e3b2:	7889      	ldrb	r1, [r1, #2]
1004e3b4:	2900      	cmp	r1, #0
1004e3b6:	d102      	bne.n	1004e3be <isr_connect_slave_state+0x67e>
1004e3b8:	6951      	ldr	r1, [r2, #20]
1004e3ba:	1a09      	subs	r1, r1, r0
1004e3bc:	6151      	str	r1, [r2, #20]
1004e3be:	9900      	ldr	r1, [sp, #0]
1004e3c0:	6b8e      	ldr	r6, [r1, #56]	; 0x38
1004e3c2:	7ab1      	ldrb	r1, [r6, #10]
1004e3c4:	2311      	movs	r3, #17
1004e3c6:	4319      	orrs	r1, r3
1004e3c8:	72b1      	strb	r1, [r6, #10]
1004e3ca:	4621      	mov	r1, r4
1004e3cc:	4b4d      	ldr	r3, [pc, #308]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e3ce:	31c0      	adds	r1, #192	; 0xc0
1004e3d0:	7bce      	ldrb	r6, [r1, #15]
1004e3d2:	789b      	ldrb	r3, [r3, #2]
1004e3d4:	429e      	cmp	r6, r3
1004e3d6:	d10a      	bne.n	1004e3ee <isr_connect_slave_state+0x6ae>
1004e3d8:	898b      	ldrh	r3, [r1, #12]
1004e3da:	1a1b      	subs	r3, r3, r0
1004e3dc:	818b      	strh	r3, [r1, #12]
1004e3de:	d510      	bpl.n	1004e402 <isr_connect_slave_state+0x6c2>
1004e3e0:	4e48      	ldr	r6, [pc, #288]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e3e2:	4b4c      	ldr	r3, [pc, #304]	; (1004e514 <isr_connect_slave_state+0x7d4>)
1004e3e4:	7075      	strb	r5, [r6, #1]
1004e3e6:	69b1      	ldr	r1, [r6, #24]
1004e3e8:	4319      	orrs	r1, r3
1004e3ea:	61b1      	str	r1, [r6, #24]
1004e3ec:	e009      	b.n	1004e402 <isr_connect_slave_state+0x6c2>
1004e3ee:	6953      	ldr	r3, [r2, #20]
1004e3f0:	4944      	ldr	r1, [pc, #272]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e3f2:	2b00      	cmp	r3, #0
1004e3f4:	dc05      	bgt.n	1004e402 <isr_connect_slave_state+0x6c2>
1004e3f6:	460e      	mov	r6, r1
1004e3f8:	704d      	strb	r5, [r1, #1]
1004e3fa:	6989      	ldr	r1, [r1, #24]
1004e3fc:	4b46      	ldr	r3, [pc, #280]	; (1004e518 <isr_connect_slave_state+0x7d8>)
1004e3fe:	4319      	orrs	r1, r3
1004e400:	61b1      	str	r1, [r6, #24]
1004e402:	4661      	mov	r1, ip
1004e404:	0689      	lsls	r1, r1, #26
1004e406:	d505      	bpl.n	1004e414 <isr_connect_slave_state+0x6d4>
1004e408:	493e      	ldr	r1, [pc, #248]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e40a:	4e44      	ldr	r6, [pc, #272]	; (1004e51c <isr_connect_slave_state+0x7dc>)
1004e40c:	704d      	strb	r5, [r1, #1]
1004e40e:	698b      	ldr	r3, [r1, #24]
1004e410:	4333      	orrs	r3, r6
1004e412:	618b      	str	r3, [r1, #24]
1004e414:	7911      	ldrb	r1, [r2, #4]
1004e416:	4626      	mov	r6, r4
1004e418:	70d1      	strb	r1, [r2, #3]
1004e41a:	3640      	adds	r6, #64	; 0x40
1004e41c:	71b5      	strb	r5, [r6, #6]
1004e41e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
1004e420:	b280      	uxth	r0, r0
1004e422:	1808      	adds	r0, r1, r0
1004e424:	64e0      	str	r0, [r4, #76]	; 0x4c
1004e426:	7990      	ldrb	r0, [r2, #6]
1004e428:	21fb      	movs	r1, #251	; 0xfb
1004e42a:	4008      	ands	r0, r1
1004e42c:	7190      	strb	r0, [r2, #6]
1004e42e:	07c0      	lsls	r0, r0, #31
1004e430:	d01a      	beq.n	1004e468 <isr_connect_slave_state+0x728>
1004e432:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
1004e434:	8911      	ldrh	r1, [r2, #8]
1004e436:	1a40      	subs	r0, r0, r1
1004e438:	2101      	movs	r1, #1
1004e43a:	b280      	uxth	r0, r0
1004e43c:	03c9      	lsls	r1, r1, #15
1004e43e:	4288      	cmp	r0, r1
1004e440:	d306      	bcc.n	1004e450 <isr_connect_slave_state+0x710>
1004e442:	4830      	ldr	r0, [pc, #192]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e444:	4a36      	ldr	r2, [pc, #216]	; (1004e520 <isr_connect_slave_state+0x7e0>)
1004e446:	7045      	strb	r5, [r0, #1]
1004e448:	6981      	ldr	r1, [r0, #24]
1004e44a:	4311      	orrs	r1, r2
1004e44c:	6181      	str	r1, [r0, #24]
1004e44e:	e00b      	b.n	1004e468 <isr_connect_slave_state+0x728>
1004e450:	2800      	cmp	r0, #0
1004e452:	d109      	bne.n	1004e468 <isr_connect_slave_state+0x728>
1004e454:	2301      	movs	r3, #1
1004e456:	2100      	movs	r1, #0
1004e458:	4620      	mov	r0, r4
1004e45a:	f002 fdf7 	bl	1005104c <LL_update_proc>
1004e45e:	4929      	ldr	r1, [pc, #164]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e460:	6989      	ldr	r1, [r1, #24]
1004e462:	4308      	orrs	r0, r1
1004e464:	4927      	ldr	r1, [pc, #156]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e466:	6188      	str	r0, [r1, #24]
1004e468:	4826      	ldr	r0, [pc, #152]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e46a:	68c1      	ldr	r1, [r0, #12]
1004e46c:	798a      	ldrb	r2, [r1, #6]
1004e46e:	0790      	lsls	r0, r2, #30
1004e470:	d524      	bpl.n	1004e4bc <isr_connect_slave_state+0x77c>
1004e472:	8f33      	ldrh	r3, [r6, #56]	; 0x38
1004e474:	890e      	ldrh	r6, [r1, #8]
1004e476:	4823      	ldr	r0, [pc, #140]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e478:	1b9b      	subs	r3, r3, r6
1004e47a:	1c5b      	adds	r3, r3, #1
1004e47c:	2601      	movs	r6, #1
1004e47e:	b29b      	uxth	r3, r3
1004e480:	03f6      	lsls	r6, r6, #15
1004e482:	42b3      	cmp	r3, r6
1004e484:	d305      	bcc.n	1004e492 <isr_connect_slave_state+0x752>
1004e486:	7045      	strb	r5, [r0, #1]
1004e488:	4a25      	ldr	r2, [pc, #148]	; (1004e520 <isr_connect_slave_state+0x7e0>)
1004e48a:	6981      	ldr	r1, [r0, #24]
1004e48c:	4311      	orrs	r1, r2
1004e48e:	6181      	str	r1, [r0, #24]
1004e490:	e014      	b.n	1004e4bc <isr_connect_slave_state+0x77c>
1004e492:	2b00      	cmp	r3, #0
1004e494:	d112      	bne.n	1004e4bc <isr_connect_slave_state+0x77c>
1004e496:	23fd      	movs	r3, #253	; 0xfd
1004e498:	401a      	ands	r2, r3
1004e49a:	718a      	strb	r2, [r1, #6]
1004e49c:	6902      	ldr	r2, [r0, #16]
1004e49e:	9900      	ldr	r1, [sp, #0]
1004e4a0:	3221      	adds	r2, #33	; 0x21
1004e4a2:	6849      	ldr	r1, [r1, #4]
1004e4a4:	7011      	strb	r1, [r2, #0]
1004e4a6:	0a0b      	lsrs	r3, r1, #8
1004e4a8:	7053      	strb	r3, [r2, #1]
1004e4aa:	0c0b      	lsrs	r3, r1, #16
1004e4ac:	7093      	strb	r3, [r2, #2]
1004e4ae:	0e09      	lsrs	r1, r1, #24
1004e4b0:	70d1      	strb	r1, [r2, #3]
1004e4b2:	3460      	adds	r4, #96	; 0x60
1004e4b4:	6900      	ldr	r0, [r0, #16]
1004e4b6:	7ee1      	ldrb	r1, [r4, #27]
1004e4b8:	3020      	adds	r0, #32
1004e4ba:	7141      	strb	r1, [r0, #5]
1004e4bc:	4638      	mov	r0, r7
1004e4be:	f003 fe67 	bl	10052190 <modulo_37>
1004e4c2:	4910      	ldr	r1, [pc, #64]	; (1004e504 <isr_connect_slave_state+0x7c4>)
1004e4c4:	690a      	ldr	r2, [r1, #16]
1004e4c6:	72d0      	strb	r0, [r2, #11]
1004e4c8:	9801      	ldr	r0, [sp, #4]
1004e4ca:	2600      	movs	r6, #0
1004e4cc:	7086      	strb	r6, [r0, #2]
1004e4ce:	7848      	ldrb	r0, [r1, #1]
1004e4d0:	2800      	cmp	r0, #0
1004e4d2:	d002      	beq.n	1004e4da <isr_connect_slave_state+0x79a>
1004e4d4:	7888      	ldrb	r0, [r1, #2]
1004e4d6:	f001 fd1f 	bl	1004ff18 <cancel_current_master>
1004e4da:	4c0c      	ldr	r4, [pc, #48]	; (1004e50c <isr_connect_slave_state+0x7cc>)
1004e4dc:	2158      	movs	r1, #88	; 0x58
1004e4de:	6820      	ldr	r0, [r4, #0]
1004e4e0:	540d      	strb	r5, [r1, r0]
1004e4e2:	2109      	movs	r1, #9
1004e4e4:	0209      	lsls	r1, r1, #8
1004e4e6:	1840      	adds	r0, r0, r1
1004e4e8:	7840      	ldrb	r0, [r0, #1]
1004e4ea:	2800      	cmp	r0, #0
1004e4ec:	d002      	beq.n	1004e4f4 <isr_connect_slave_state+0x7b4>
1004e4ee:	2001      	movs	r0, #1
1004e4f0:	f003 fff8 	bl	100524e4 <slave_advance>
1004e4f4:	2001      	movs	r0, #1
1004e4f6:	f007 fd37 	bl	10055f68 <advance_wakeup_timer>
1004e4fa:	6820      	ldr	r0, [r4, #0]
1004e4fc:	3040      	adds	r0, #64	; 0x40
1004e4fe:	7606      	strb	r6, [r0, #24]
1004e500:	b005      	add	sp, #20
1004e502:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004e504:	20000944 	.word	0x20000944
1004e508:	00010008 	.word	0x00010008
1004e50c:	2000098c 	.word	0x2000098c
1004e510:	003000fa 	.word	0x003000fa
1004e514:	00408008 	.word	0x00408008
1004e518:	00040008 	.word	0x00040008
1004e51c:	00020008 	.word	0x00020008
1004e520:	00080008 	.word	0x00080008

1004e524 <isr_test_rx_state>:
1004e524:	480a      	ldr	r0, [pc, #40]	; (1004e550 <isr_test_rx_state+0x2c>)
1004e526:	2141      	movs	r1, #65	; 0x41
1004e528:	6800      	ldr	r0, [r0, #0]
1004e52a:	0149      	lsls	r1, r1, #5
1004e52c:	1840      	adds	r0, r0, r1
1004e52e:	2109      	movs	r1, #9
1004e530:	06c9      	lsls	r1, r1, #27
1004e532:	690a      	ldr	r2, [r1, #16]
1004e534:	6502      	str	r2, [r0, #80]	; 0x50
1004e536:	2200      	movs	r2, #0
1004e538:	3080      	adds	r0, #128	; 0x80
1004e53a:	6a40      	ldr	r0, [r0, #36]	; 0x24
1004e53c:	7282      	strb	r2, [r0, #10]
1004e53e:	6808      	ldr	r0, [r1, #0]
1004e540:	2800      	cmp	r0, #0
1004e542:	da04      	bge.n	1004e54e <isr_test_rx_state+0x2a>
1004e544:	4803      	ldr	r0, [pc, #12]	; (1004e554 <isr_test_rx_state+0x30>)
1004e546:	68c1      	ldr	r1, [r0, #12]
1004e548:	8908      	ldrh	r0, [r1, #8]
1004e54a:	1c40      	adds	r0, r0, #1
1004e54c:	8108      	strh	r0, [r1, #8]
1004e54e:	4770      	bx	lr
1004e550:	2000098c 	.word	0x2000098c
1004e554:	20000944 	.word	0x20000944

1004e558 <isr_test_tx_state>:
1004e558:	b510      	push	{r4, lr}
1004e55a:	4816      	ldr	r0, [pc, #88]	; (1004e5b4 <isr_test_tx_state+0x5c>)
1004e55c:	2141      	movs	r1, #65	; 0x41
1004e55e:	6800      	ldr	r0, [r0, #0]
1004e560:	0149      	lsls	r1, r1, #5
1004e562:	1844      	adds	r4, r0, r1
1004e564:	20a4      	movs	r0, #164	; 0xa4
1004e566:	5900      	ldr	r0, [r0, r4]
1004e568:	7a81      	ldrb	r1, [r0, #10]
1004e56a:	0849      	lsrs	r1, r1, #1
1004e56c:	0049      	lsls	r1, r1, #1
1004e56e:	7281      	strb	r1, [r0, #10]
1004e570:	f7fe fa4f 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004e574:	2801      	cmp	r0, #1
1004e576:	d014      	beq.n	1004e5a2 <isr_test_tx_state+0x4a>
1004e578:	20ff      	movs	r0, #255	; 0xff
1004e57a:	3001      	adds	r0, #1
1004e57c:	f003 fe24 	bl	100521c8 <machine_time_trans>
1004e580:	6d21      	ldr	r1, [r4, #80]	; 0x50
1004e582:	1840      	adds	r0, r0, r1
1004e584:	0200      	lsls	r0, r0, #8
1004e586:	0a00      	lsrs	r0, r0, #8
1004e588:	6520      	str	r0, [r4, #80]	; 0x50
1004e58a:	2101      	movs	r1, #1
1004e58c:	0649      	lsls	r1, r1, #25
1004e58e:	1840      	adds	r0, r0, r1
1004e590:	2109      	movs	r1, #9
1004e592:	06c9      	lsls	r1, r1, #27
1004e594:	6048      	str	r0, [r1, #4]
1004e596:	4808      	ldr	r0, [pc, #32]	; (1004e5b8 <isr_test_tx_state+0x60>)
1004e598:	68c1      	ldr	r1, [r0, #12]
1004e59a:	8908      	ldrh	r0, [r1, #8]
1004e59c:	1c40      	adds	r0, r0, #1
1004e59e:	8108      	strh	r0, [r1, #8]
1004e5a0:	bd10      	pop	{r4, pc}
1004e5a2:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
1004e5a4:	f003 fe10 	bl	100521c8 <machine_time_trans>
1004e5a8:	6d21      	ldr	r1, [r4, #80]	; 0x50
1004e5aa:	1840      	adds	r0, r0, r1
1004e5ac:	0200      	lsls	r0, r0, #8
1004e5ae:	0a00      	lsrs	r0, r0, #8
1004e5b0:	6520      	str	r0, [r4, #80]	; 0x50
1004e5b2:	e7ea      	b.n	1004e58a <isr_test_tx_state+0x32>
1004e5b4:	2000098c 	.word	0x2000098c
1004e5b8:	20000944 	.word	0x20000944

1004e5bc <isr_unknown_state>:
1004e5bc:	b510      	push	{r4, lr}
1004e5be:	2000      	movs	r0, #0
1004e5c0:	2109      	movs	r1, #9
1004e5c2:	06c9      	lsls	r1, r1, #27
1004e5c4:	6048      	str	r0, [r1, #4]
1004e5c6:	4807      	ldr	r0, [pc, #28]	; (1004e5e4 <isr_unknown_state+0x28>)
1004e5c8:	14c9      	asrs	r1, r1, #19
1004e5ca:	6800      	ldr	r0, [r0, #0]
1004e5cc:	1840      	adds	r0, r0, r1
1004e5ce:	7840      	ldrb	r0, [r0, #1]
1004e5d0:	2800      	cmp	r0, #0
1004e5d2:	d002      	beq.n	1004e5da <isr_unknown_state+0x1e>
1004e5d4:	2001      	movs	r0, #1
1004e5d6:	f003 ff85 	bl	100524e4 <slave_advance>
1004e5da:	2001      	movs	r0, #1
1004e5dc:	f007 fcc4 	bl	10055f68 <advance_wakeup_timer>
1004e5e0:	bd10      	pop	{r4, pc}
1004e5e2:	0000      	.short	0x0000
1004e5e4:	2000098c 	.word	0x2000098c

1004e5e8 <state_func_call_init_csr_ucfg>:
1004e5e8:	4770      	bx	lr

1004e5ea <__ARM_common_memcpy1_6>:
1004e5ea:	780a      	ldrb	r2, [r1, #0]
1004e5ec:	7002      	strb	r2, [r0, #0]
1004e5ee:	784b      	ldrb	r3, [r1, #1]
1004e5f0:	7043      	strb	r3, [r0, #1]
1004e5f2:	788a      	ldrb	r2, [r1, #2]
1004e5f4:	7082      	strb	r2, [r0, #2]
1004e5f6:	78ca      	ldrb	r2, [r1, #3]
1004e5f8:	70c2      	strb	r2, [r0, #3]
1004e5fa:	790b      	ldrb	r3, [r1, #4]
1004e5fc:	7103      	strb	r3, [r0, #4]
1004e5fe:	794a      	ldrb	r2, [r1, #5]
1004e600:	7142      	strb	r2, [r0, #5]
1004e602:	4770      	bx	lr

1004e604 <LL_LE_Clear_White_List>:
1004e604:	b510      	push	{r4, lr}
1004e606:	4c08      	ldr	r4, [pc, #32]	; (1004e628 <LL_LE_Clear_White_List+0x24>)
1004e608:	232f      	movs	r3, #47	; 0x2f
1004e60a:	6820      	ldr	r0, [r4, #0]
1004e60c:	015b      	lsls	r3, r3, #5
1004e60e:	22f8      	movs	r2, #248	; 0xf8
1004e610:	21ff      	movs	r1, #255	; 0xff
1004e612:	18c0      	adds	r0, r0, r3
1004e614:	f7f4 fdd7 	bl	100431c6 <Osal_MemSet>
1004e618:	2217      	movs	r2, #23
1004e61a:	6821      	ldr	r1, [r4, #0]
1004e61c:	2000      	movs	r0, #0
1004e61e:	0192      	lsls	r2, r2, #6
1004e620:	1889      	adds	r1, r1, r2
1004e622:	7708      	strb	r0, [r1, #28]
1004e624:	bd10      	pop	{r4, pc}
1004e626:	0000      	.short	0x0000
1004e628:	2000098c 	.word	0x2000098c

1004e62c <PRIVWHIT_u8SearchAddrInList>:
1004e62c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004e62e:	4a1d      	ldr	r2, [pc, #116]	; (1004e6a4 <PRIVWHIT_u8SearchAddrInList+0x78>)
1004e630:	2304      	movs	r3, #4
1004e632:	6812      	ldr	r2, [r2, #0]
1004e634:	2800      	cmp	r0, #0
1004e636:	d00a      	beq.n	1004e64e <PRIVWHIT_u8SearchAddrInList+0x22>
1004e638:	2801      	cmp	r0, #1
1004e63a:	d026      	beq.n	1004e68a <PRIVWHIT_u8SearchAddrInList+0x5e>
1004e63c:	2802      	cmp	r0, #2
1004e63e:	d028      	beq.n	1004e692 <PRIVWHIT_u8SearchAddrInList+0x66>
1004e640:	242f      	movs	r4, #47	; 0x2f
1004e642:	0164      	lsls	r4, r4, #5
1004e644:	1912      	adds	r2, r2, r4
1004e646:	4696      	mov	lr, r2
1004e648:	2803      	cmp	r0, #3
1004e64a:	d024      	beq.n	1004e696 <PRIVWHIT_u8SearchAddrInList+0x6a>
1004e64c:	e002      	b.n	1004e654 <PRIVWHIT_u8SearchAddrInList+0x28>
1004e64e:	4816      	ldr	r0, [pc, #88]	; (1004e6a8 <PRIVWHIT_u8SearchAddrInList+0x7c>)
1004e650:	1812      	adds	r2, r2, r0
1004e652:	4696      	mov	lr, r2
1004e654:	200f      	movs	r0, #15
1004e656:	4684      	mov	ip, r0
1004e658:	2001      	movs	r0, #1
1004e65a:	4098      	lsls	r0, r3
1004e65c:	b2c3      	uxtb	r3, r0
1004e65e:	2600      	movs	r6, #0
1004e660:	085b      	lsrs	r3, r3, #1
1004e662:	18f0      	adds	r0, r6, r3
1004e664:	b2c0      	uxtb	r0, r0
1004e666:	4560      	cmp	r0, ip
1004e668:	d20b      	bcs.n	1004e682 <PRIVWHIT_u8SearchAddrInList+0x56>
1004e66a:	00c2      	lsls	r2, r0, #3
1004e66c:	4674      	mov	r4, lr
1004e66e:	1914      	adds	r4, r2, r4
1004e670:	2207      	movs	r2, #7
1004e672:	1e52      	subs	r2, r2, #1
1004e674:	5c8d      	ldrb	r5, [r1, r2]
1004e676:	5ca7      	ldrb	r7, [r4, r2]
1004e678:	1bed      	subs	r5, r5, r7
1004e67a:	d00f      	beq.n	1004e69c <PRIVWHIT_u8SearchAddrInList+0x70>
1004e67c:	2d00      	cmp	r5, #0
1004e67e:	dd00      	ble.n	1004e682 <PRIVWHIT_u8SearchAddrInList+0x56>
1004e680:	4606      	mov	r6, r0
1004e682:	2b00      	cmp	r3, #0
1004e684:	d1ec      	bne.n	1004e660 <PRIVWHIT_u8SearchAddrInList+0x34>
1004e686:	20ff      	movs	r0, #255	; 0xff
1004e688:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004e68a:	249d      	movs	r4, #157	; 0x9d
1004e68c:	00e4      	lsls	r4, r4, #3
1004e68e:	1912      	adds	r2, r2, r4
1004e690:	e7d9      	b.n	1004e646 <PRIVWHIT_u8SearchAddrInList+0x1a>
1004e692:	4c06      	ldr	r4, [pc, #24]	; (1004e6ac <PRIVWHIT_u8SearchAddrInList+0x80>)
1004e694:	e7d6      	b.n	1004e644 <PRIVWHIT_u8SearchAddrInList+0x18>
1004e696:	2305      	movs	r3, #5
1004e698:	201f      	movs	r0, #31
1004e69a:	e7dc      	b.n	1004e656 <PRIVWHIT_u8SearchAddrInList+0x2a>
1004e69c:	2a00      	cmp	r2, #0
1004e69e:	d1e8      	bne.n	1004e672 <PRIVWHIT_u8SearchAddrInList+0x46>
1004e6a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004e6a2:	0000      	.short	0x0000
1004e6a4:	2000098c 	.word	0x2000098c
1004e6a8:	0000046c 	.word	0x0000046c
1004e6ac:	00000564 	.word	0x00000564

1004e6b0 <PRIVWHIT_vInit_Struct>:
1004e6b0:	b570      	push	{r4, r5, r6, lr}
1004e6b2:	4d2a      	ldr	r5, [pc, #168]	; (1004e75c <PRIVWHIT_vInit_Struct+0xac>)
1004e6b4:	4a28      	ldr	r2, [pc, #160]	; (1004e758 <PRIVWHIT_vInit_Struct+0xa8>)
1004e6b6:	6828      	ldr	r0, [r5, #0]
1004e6b8:	2100      	movs	r1, #0
1004e6ba:	30ff      	adds	r0, #255	; 0xff
1004e6bc:	301b      	adds	r0, #27
1004e6be:	f7f4 fd82 	bl	100431c6 <Osal_MemSet>
1004e6c2:	6828      	ldr	r0, [r5, #0]
1004e6c4:	21ff      	movs	r1, #255	; 0xff
1004e6c6:	22f2      	movs	r2, #242	; 0xf2
1004e6c8:	5411      	strb	r1, [r2, r0]
1004e6ca:	2211      	movs	r2, #17
1004e6cc:	0192      	lsls	r2, r2, #6
1004e6ce:	1882      	adds	r2, r0, r2
1004e6d0:	7611      	strb	r1, [r2, #24]
1004e6d2:	7651      	strb	r1, [r2, #25]
1004e6d4:	7691      	strb	r1, [r2, #26]
1004e6d6:	4a22      	ldr	r2, [pc, #136]	; (1004e760 <PRIVWHIT_vInit_Struct+0xb0>)
1004e6d8:	21f4      	movs	r1, #244	; 0xf4
1004e6da:	500a      	str	r2, [r1, r0]
1004e6dc:	232f      	movs	r3, #47	; 0x2f
1004e6de:	015b      	lsls	r3, r3, #5
1004e6e0:	22f8      	movs	r2, #248	; 0xf8
1004e6e2:	21ff      	movs	r1, #255	; 0xff
1004e6e4:	18c0      	adds	r0, r0, r3
1004e6e6:	f7f4 fd6e 	bl	100431c6 <Osal_MemSet>
1004e6ea:	4b1e      	ldr	r3, [pc, #120]	; (1004e764 <PRIVWHIT_vInit_Struct+0xb4>)
1004e6ec:	6828      	ldr	r0, [r5, #0]
1004e6ee:	2278      	movs	r2, #120	; 0x78
1004e6f0:	21ff      	movs	r1, #255	; 0xff
1004e6f2:	18c0      	adds	r0, r0, r3
1004e6f4:	f7f4 fd67 	bl	100431c6 <Osal_MemSet>
1004e6f8:	4b1a      	ldr	r3, [pc, #104]	; (1004e764 <PRIVWHIT_vInit_Struct+0xb4>)
1004e6fa:	6828      	ldr	r0, [r5, #0]
1004e6fc:	33f8      	adds	r3, #248	; 0xf8
1004e6fe:	2278      	movs	r2, #120	; 0x78
1004e700:	21ff      	movs	r1, #255	; 0xff
1004e702:	18c0      	adds	r0, r0, r3
1004e704:	f7f4 fd5f 	bl	100431c6 <Osal_MemSet>
1004e708:	239d      	movs	r3, #157	; 0x9d
1004e70a:	6828      	ldr	r0, [r5, #0]
1004e70c:	00db      	lsls	r3, r3, #3
1004e70e:	2278      	movs	r2, #120	; 0x78
1004e710:	21ff      	movs	r1, #255	; 0xff
1004e712:	18c0      	adds	r0, r0, r3
1004e714:	f7f4 fd57 	bl	100431c6 <Osal_MemSet>
1004e718:	2623      	movs	r6, #35	; 0x23
1004e71a:	6828      	ldr	r0, [r5, #0]
1004e71c:	0176      	lsls	r6, r6, #5
1004e71e:	2400      	movs	r4, #0
1004e720:	1981      	adds	r1, r0, r6
1004e722:	720c      	strb	r4, [r1, #8]
1004e724:	2127      	movs	r1, #39	; 0x27
1004e726:	0149      	lsls	r1, r1, #5
1004e728:	1841      	adds	r1, r0, r1
1004e72a:	710c      	strb	r4, [r1, #4]
1004e72c:	212b      	movs	r1, #43	; 0x2b
1004e72e:	0149      	lsls	r1, r1, #5
1004e730:	1841      	adds	r1, r0, r1
1004e732:	700c      	strb	r4, [r1, #0]
1004e734:	2117      	movs	r1, #23
1004e736:	0189      	lsls	r1, r1, #6
1004e738:	1840      	adds	r0, r0, r1
1004e73a:	7704      	strb	r4, [r0, #28]
1004e73c:	f7fe fa30 	bl	1004cba0 <HAL_VTimerGetCurrentTime_sysT32>
1004e740:	6829      	ldr	r1, [r5, #0]
1004e742:	2301      	movs	r3, #1
1004e744:	460a      	mov	r2, r1
1004e746:	3280      	adds	r2, #128	; 0x80
1004e748:	6790      	str	r0, [r2, #120]	; 0x78
1004e74a:	1988      	adds	r0, r1, r6
1004e74c:	7104      	strb	r4, [r0, #4]
1004e74e:	31e0      	adds	r1, #224	; 0xe0
1004e750:	744b      	strb	r3, [r1, #17]
1004e752:	67d4      	str	r4, [r2, #124]	; 0x7c
1004e754:	7184      	strb	r4, [r0, #6]
1004e756:	bd70      	pop	{r4, r5, r6, pc}
1004e758:	00000339 	.word	0x00000339
1004e75c:	2000098c 	.word	0x2000098c
1004e760:	00015f90 	.word	0x00015f90
1004e764:	0000046c 	.word	0x0000046c

1004e768 <PRIV_SearchAddrInWhiteList>:
1004e768:	b4f0      	push	{r4, r5, r6, r7}
1004e76a:	4a14      	ldr	r2, [pc, #80]	; (1004e7bc <PRIV_SearchAddrInWhiteList+0x54>)
1004e76c:	232f      	movs	r3, #47	; 0x2f
1004e76e:	6812      	ldr	r2, [r2, #0]
1004e770:	015b      	lsls	r3, r3, #5
1004e772:	18d2      	adds	r2, r2, r3
1004e774:	4694      	mov	ip, r2
1004e776:	271f      	movs	r7, #31
1004e778:	2220      	movs	r2, #32
1004e77a:	2400      	movs	r4, #0
1004e77c:	0852      	lsrs	r2, r2, #1
1004e77e:	18a3      	adds	r3, r4, r2
1004e780:	b2db      	uxtb	r3, r3
1004e782:	42bb      	cmp	r3, r7
1004e784:	d214      	bcs.n	1004e7b0 <PRIV_SearchAddrInWhiteList+0x48>
1004e786:	00dd      	lsls	r5, r3, #3
1004e788:	4465      	add	r5, ip
1004e78a:	682e      	ldr	r6, [r5, #0]
1004e78c:	686d      	ldr	r5, [r5, #4]
1004e78e:	022d      	lsls	r5, r5, #8
1004e790:	42a9      	cmp	r1, r5
1004e792:	d803      	bhi.n	1004e79c <PRIV_SearchAddrInWhiteList+0x34>
1004e794:	42a9      	cmp	r1, r5
1004e796:	d10b      	bne.n	1004e7b0 <PRIV_SearchAddrInWhiteList+0x48>
1004e798:	42b0      	cmp	r0, r6
1004e79a:	d309      	bcc.n	1004e7b0 <PRIV_SearchAddrInWhiteList+0x48>
1004e79c:	461c      	mov	r4, r3
1004e79e:	42b0      	cmp	r0, r6
1004e7a0:	d106      	bne.n	1004e7b0 <PRIV_SearchAddrInWhiteList+0x48>
1004e7a2:	42a9      	cmp	r1, r5
1004e7a4:	d104      	bne.n	1004e7b0 <PRIV_SearchAddrInWhiteList+0x48>
1004e7a6:	2bff      	cmp	r3, #255	; 0xff
1004e7a8:	d004      	beq.n	1004e7b4 <PRIV_SearchAddrInWhiteList+0x4c>
1004e7aa:	bcf0      	pop	{r4, r5, r6, r7}
1004e7ac:	2001      	movs	r0, #1
1004e7ae:	4770      	bx	lr
1004e7b0:	2a00      	cmp	r2, #0
1004e7b2:	d1e3      	bne.n	1004e77c <PRIV_SearchAddrInWhiteList+0x14>
1004e7b4:	bcf0      	pop	{r4, r5, r6, r7}
1004e7b6:	2000      	movs	r0, #0
1004e7b8:	4770      	bx	lr
1004e7ba:	0000      	.short	0x0000
1004e7bc:	2000098c 	.word	0x2000098c

1004e7c0 <PRIV_u32ProcessAdvPacket_ucfg>:
1004e7c0:	201f      	movs	r0, #31
1004e7c2:	4770      	bx	lr

1004e7c4 <PRIV_u8OfflineProcessing_ucfg>:
1004e7c4:	2000      	movs	r0, #0
1004e7c6:	4770      	bx	lr

1004e7c8 <PRIV_vGeneratePrivateAddress_ucfg>:
1004e7c8:	4770      	bx	lr

1004e7ca <PRIV_vGenerate_hci_le_enhanced_connection_complete_event_ucfg>:
1004e7ca:	4770      	bx	lr

1004e7cc <Data_Len_Update_Offline_Processing_ucfg>:
1004e7cc:	4770      	bx	lr
	...

1004e7d0 <Disconnection_Offline_Processing>:
1004e7d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004e7d2:	4e10      	ldr	r6, [pc, #64]	; (1004e814 <Disconnection_Offline_Processing+0x44>)
1004e7d4:	6830      	ldr	r0, [r6, #0]
1004e7d6:	3020      	adds	r0, #32
1004e7d8:	7dc5      	ldrb	r5, [r0, #23]
1004e7da:	2d00      	cmp	r5, #0
1004e7dc:	d019      	beq.n	1004e812 <Disconnection_Offline_Processing+0x42>
1004e7de:	2400      	movs	r4, #0
1004e7e0:	2709      	movs	r7, #9
1004e7e2:	023f      	lsls	r7, r7, #8
1004e7e4:	e010      	b.n	1004e808 <Disconnection_Offline_Processing+0x38>
1004e7e6:	07e9      	lsls	r1, r5, #31
1004e7e8:	d00b      	beq.n	1004e802 <Disconnection_Offline_Processing+0x32>
1004e7ea:	19c0      	adds	r0, r0, r7
1004e7ec:	6b01      	ldr	r1, [r0, #48]	; 0x30
1004e7ee:	2058      	movs	r0, #88	; 0x58
1004e7f0:	4360      	muls	r0, r4
1004e7f2:	1808      	adds	r0, r1, r0
1004e7f4:	3040      	adds	r0, #64	; 0x40
1004e7f6:	7d41      	ldrb	r1, [r0, #21]
1004e7f8:	4620      	mov	r0, r4
1004e7fa:	f000 f82d 	bl	1004e858 <LL_Send_Disconnection_Req>
1004e7fe:	2800      	cmp	r0, #0
1004e800:	d007      	beq.n	1004e812 <Disconnection_Offline_Processing+0x42>
1004e802:	086d      	lsrs	r5, r5, #1
1004e804:	1c64      	adds	r4, r4, #1
1004e806:	b2e4      	uxtb	r4, r4
1004e808:	6830      	ldr	r0, [r6, #0]
1004e80a:	21ac      	movs	r1, #172	; 0xac
1004e80c:	5c09      	ldrb	r1, [r1, r0]
1004e80e:	42a1      	cmp	r1, r4
1004e810:	d8e9      	bhi.n	1004e7e6 <Disconnection_Offline_Processing+0x16>
1004e812:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e814:	2000098c 	.word	0x2000098c

1004e818 <LL_Data_Length_Change_Event_ucfg>:
1004e818:	2000      	movs	r0, #0
1004e81a:	4770      	bx	lr

1004e81c <LL_Disconnect_Link>:
1004e81c:	b570      	push	{r4, r5, r6, lr}
1004e81e:	460d      	mov	r5, r1
1004e820:	490b      	ldr	r1, [pc, #44]	; (1004e850 <LL_Disconnect_Link+0x34>)
1004e822:	2400      	movs	r4, #0
1004e824:	4288      	cmp	r0, r1
1004e826:	d804      	bhi.n	1004e832 <LL_Disconnect_Link+0x16>
1004e828:	2103      	movs	r1, #3
1004e82a:	f001 fc6d 	bl	10050108 <get_connection_no>
1004e82e:	2808      	cmp	r0, #8
1004e830:	d301      	bcc.n	1004e836 <LL_Disconnect_Link+0x1a>
1004e832:	2402      	movs	r4, #2
1004e834:	e00a      	b.n	1004e84c <LL_Disconnect_Link+0x30>
1004e836:	4907      	ldr	r1, [pc, #28]	; (1004e854 <LL_Disconnect_Link+0x38>)
1004e838:	2201      	movs	r2, #1
1004e83a:	6809      	ldr	r1, [r1, #0]
1004e83c:	3120      	adds	r1, #32
1004e83e:	7dc9      	ldrb	r1, [r1, #23]
1004e840:	4082      	lsls	r2, r0
1004e842:	4211      	tst	r1, r2
1004e844:	d102      	bne.n	1004e84c <LL_Disconnect_Link+0x30>
1004e846:	4629      	mov	r1, r5
1004e848:	f000 f806 	bl	1004e858 <LL_Send_Disconnection_Req>
1004e84c:	4620      	mov	r0, r4
1004e84e:	bd70      	pop	{r4, r5, r6, pc}
1004e850:	00000eff 	.word	0x00000eff
1004e854:	2000098c 	.word	0x2000098c

1004e858 <LL_Send_Disconnection_Req>:
1004e858:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004e85a:	4606      	mov	r6, r0
1004e85c:	4825      	ldr	r0, [pc, #148]	; (1004e8f4 <LL_Send_Disconnection_Req+0x9c>)
1004e85e:	460f      	mov	r7, r1
1004e860:	6800      	ldr	r0, [r0, #0]
1004e862:	2141      	movs	r1, #65	; 0x41
1004e864:	0149      	lsls	r1, r1, #5
1004e866:	1844      	adds	r4, r0, r1
1004e868:	2109      	movs	r1, #9
1004e86a:	0209      	lsls	r1, r1, #8
1004e86c:	1840      	adds	r0, r0, r1
1004e86e:	6b01      	ldr	r1, [r0, #48]	; 0x30
1004e870:	2058      	movs	r0, #88	; 0x58
1004e872:	4370      	muls	r0, r6
1004e874:	180d      	adds	r5, r1, r0
1004e876:	4630      	mov	r0, r6
1004e878:	f001 fcc8 	bl	1005020c <is_slave>
1004e87c:	2800      	cmp	r0, #0
1004e87e:	d016      	beq.n	1004e8ae <LL_Send_Disconnection_Req+0x56>
1004e880:	4620      	mov	r0, r4
1004e882:	30cf      	adds	r0, #207	; 0xcf
1004e884:	34cc      	adds	r4, #204	; 0xcc
1004e886:	b672      	cpsid	i
1004e888:	7802      	ldrb	r2, [r0, #0]
1004e88a:	2101      	movs	r1, #1
1004e88c:	40b1      	lsls	r1, r6
1004e88e:	2a08      	cmp	r2, #8
1004e890:	d302      	bcc.n	1004e898 <LL_Send_Disconnection_Req+0x40>
1004e892:	796a      	ldrb	r2, [r5, #5]
1004e894:	0792      	lsls	r2, r2, #30
1004e896:	d00e      	beq.n	1004e8b6 <LL_Send_Disconnection_Req+0x5e>
1004e898:	7968      	ldrb	r0, [r5, #5]
1004e89a:	0780      	lsls	r0, r0, #30
1004e89c:	d426      	bmi.n	1004e8ec <LL_Send_Disconnection_Req+0x94>
1004e89e:	4815      	ldr	r0, [pc, #84]	; (1004e8f4 <LL_Send_Disconnection_Req+0x9c>)
1004e8a0:	6800      	ldr	r0, [r0, #0]
1004e8a2:	3020      	adds	r0, #32
1004e8a4:	7dc2      	ldrb	r2, [r0, #23]
1004e8a6:	430a      	orrs	r2, r1
1004e8a8:	75c2      	strb	r2, [r0, #23]
1004e8aa:	203a      	movs	r0, #58	; 0x3a
1004e8ac:	e01f      	b.n	1004e8ee <LL_Send_Disconnection_Req+0x96>
1004e8ae:	4620      	mov	r0, r4
1004e8b0:	30ce      	adds	r0, #206	; 0xce
1004e8b2:	34ca      	adds	r4, #202	; 0xca
1004e8b4:	e7e7      	b.n	1004e886 <LL_Send_Disconnection_Req+0x2e>
1004e8b6:	067a      	lsls	r2, r7, #25
1004e8b8:	4b0f      	ldr	r3, [pc, #60]	; (1004e8f8 <LL_Send_Disconnection_Req+0xa0>)
1004e8ba:	0852      	lsrs	r2, r2, #1
1004e8bc:	18d2      	adds	r2, r2, r3
1004e8be:	6b6b      	ldr	r3, [r5, #52]	; 0x34
1004e8c0:	601a      	str	r2, [r3, #0]
1004e8c2:	063a      	lsls	r2, r7, #24
1004e8c4:	d401      	bmi.n	1004e8ca <LL_Send_Disconnection_Req+0x72>
1004e8c6:	2213      	movs	r2, #19
1004e8c8:	e000      	b.n	1004e8cc <LL_Send_Disconnection_Req+0x74>
1004e8ca:	2212      	movs	r2, #18
1004e8cc:	796b      	ldrb	r3, [r5, #5]
1004e8ce:	4313      	orrs	r3, r2
1004e8d0:	716b      	strb	r3, [r5, #5]
1004e8d2:	7006      	strb	r6, [r0, #0]
1004e8d4:	8b28      	ldrh	r0, [r5, #24]
1004e8d6:	8020      	strh	r0, [r4, #0]
1004e8d8:	3540      	adds	r5, #64	; 0x40
1004e8da:	4806      	ldr	r0, [pc, #24]	; (1004e8f4 <LL_Send_Disconnection_Req+0x9c>)
1004e8dc:	756f      	strb	r7, [r5, #21]
1004e8de:	6800      	ldr	r0, [r0, #0]
1004e8e0:	3020      	adds	r0, #32
1004e8e2:	7dc2      	ldrb	r2, [r0, #23]
1004e8e4:	438a      	bics	r2, r1
1004e8e6:	75c2      	strb	r2, [r0, #23]
1004e8e8:	2000      	movs	r0, #0
1004e8ea:	e000      	b.n	1004e8ee <LL_Send_Disconnection_Req+0x96>
1004e8ec:	200c      	movs	r0, #12
1004e8ee:	b662      	cpsie	i
1004e8f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e8f2:	0000      	.short	0x0000
1004e8f4:	2000098c 	.word	0x2000098c
1004e8f8:	00020203 	.word	0x00020203

1004e8fc <LL_Send_Length_Resp_ucfg>:
1004e8fc:	201f      	movs	r0, #31
1004e8fe:	4770      	bx	lr

1004e900 <ll_write_supported_data_ucfg>:
1004e900:	2042      	movs	r0, #66	; 0x42
1004e902:	4770      	bx	lr

1004e904 <read_rssi>:
1004e904:	b518      	push	{r3, r4, lr}
1004e906:	491c      	ldr	r1, [pc, #112]	; (1004e978 <read_rssi+0x74>)
1004e908:	2209      	movs	r2, #9
1004e90a:	6809      	ldr	r1, [r1, #0]
1004e90c:	0212      	lsls	r2, r2, #8
1004e90e:	188a      	adds	r2, r1, r2
1004e910:	2358      	movs	r3, #88	; 0x58
1004e912:	6b12      	ldr	r2, [r2, #48]	; 0x30
1004e914:	4358      	muls	r0, r3
1004e916:	1812      	adds	r2, r2, r0
1004e918:	2064      	movs	r0, #100	; 0x64
1004e91a:	466b      	mov	r3, sp
1004e91c:	7018      	strb	r0, [r3, #0]
1004e91e:	2309      	movs	r3, #9
1004e920:	06db      	lsls	r3, r3, #27
1004e922:	466c      	mov	r4, sp
1004e924:	7820      	ldrb	r0, [r4, #0]
1004e926:	1e40      	subs	r0, r0, #1
1004e928:	7020      	strb	r0, [r4, #0]
1004e92a:	68d8      	ldr	r0, [r3, #12]
1004e92c:	03c0      	lsls	r0, r0, #15
1004e92e:	d502      	bpl.n	1004e936 <read_rssi+0x32>
1004e930:	7820      	ldrb	r0, [r4, #0]
1004e932:	2800      	cmp	r0, #0
1004e934:	d1f5      	bne.n	1004e922 <read_rssi+0x1e>
1004e936:	7820      	ldrb	r0, [r4, #0]
1004e938:	6d08      	ldr	r0, [r1, #80]	; 0x50
1004e93a:	6d49      	ldr	r1, [r1, #84]	; 0x54
1004e93c:	0c03      	lsrs	r3, r0, #16
1004e93e:	0a18      	lsrs	r0, r3, #8
1004e940:	0200      	lsls	r0, r0, #8
1004e942:	b2c9      	uxtb	r1, r1
1004e944:	4308      	orrs	r0, r1
1004e946:	b2d9      	uxtb	r1, r3
1004e948:	2800      	cmp	r0, #0
1004e94a:	d001      	beq.n	1004e950 <read_rssi+0x4c>
1004e94c:	290b      	cmp	r1, #11
1004e94e:	d901      	bls.n	1004e954 <read_rssi+0x50>
1004e950:	207f      	movs	r0, #127	; 0x7f
1004e952:	e00e      	b.n	1004e972 <read_rssi+0x6e>
1004e954:	2306      	movs	r3, #6
1004e956:	4359      	muls	r1, r3
1004e958:	397f      	subs	r1, #127	; 0x7f
1004e95a:	e001      	b.n	1004e960 <read_rssi+0x5c>
1004e95c:	0840      	lsrs	r0, r0, #1
1004e95e:	1d89      	adds	r1, r1, #6
1004e960:	281e      	cmp	r0, #30
1004e962:	d8fb      	bhi.n	1004e95c <read_rssi+0x58>
1004e964:	23ff      	movs	r3, #255	; 0xff
1004e966:	33a2      	adds	r3, #162	; 0xa2
1004e968:	4358      	muls	r0, r3
1004e96a:	4b04      	ldr	r3, [pc, #16]	; (1004e97c <read_rssi+0x78>)
1004e96c:	18c0      	adds	r0, r0, r3
1004e96e:	0a80      	lsrs	r0, r0, #10
1004e970:	1840      	adds	r0, r0, r1
1004e972:	7390      	strb	r0, [r2, #14]
1004e974:	bd18      	pop	{r3, r4, pc}
1004e976:	0000      	.short	0x0000
1004e978:	2000098c 	.word	0x2000098c
1004e97c:	000046a0 	.word	0x000046a0

1004e980 <Reclassify_All_Channels_ucfg>:
1004e980:	4770      	bx	lr
	...

1004e984 <hci_encryption_change_event_push>:
1004e984:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004e986:	461d      	mov	r5, r3
1004e988:	460f      	mov	r7, r1
1004e98a:	2302      	movs	r3, #2
1004e98c:	4604      	mov	r4, r0
1004e98e:	06c1      	lsls	r1, r0, #27
1004e990:	4812      	ldr	r0, [pc, #72]	; (1004e9dc <hci_encryption_change_event_push+0x58>)
1004e992:	4616      	mov	r6, r2
1004e994:	6800      	ldr	r0, [r0, #0]
1004e996:	d503      	bpl.n	1004e9a0 <hci_encryption_change_event_push+0x1c>
1004e998:	2203      	movs	r2, #3
1004e99a:	21bf      	movs	r1, #191	; 0xbf
1004e99c:	400c      	ands	r4, r1
1004e99e:	e008      	b.n	1004e9b2 <hci_encryption_change_event_push+0x2e>
1004e9a0:	211b      	movs	r1, #27
1004e9a2:	0189      	lsls	r1, r1, #6
1004e9a4:	1841      	adds	r1, r0, r1
1004e9a6:	7e89      	ldrb	r1, [r1, #26]
1004e9a8:	0609      	lsls	r1, r1, #24
1004e9aa:	d401      	bmi.n	1004e9b0 <hci_encryption_change_event_push+0x2c>
1004e9ac:	2000      	movs	r0, #0
1004e9ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e9b0:	2201      	movs	r2, #1
1004e9b2:	0721      	lsls	r1, r4, #28
1004e9b4:	0e89      	lsrs	r1, r1, #26
1004e9b6:	1808      	adds	r0, r1, r0
1004e9b8:	2101      	movs	r1, #1
1004e9ba:	02c9      	lsls	r1, r1, #11
1004e9bc:	1840      	adds	r0, r0, r1
1004e9be:	6940      	ldr	r0, [r0, #20]
1004e9c0:	4621      	mov	r1, r4
1004e9c2:	f006 fc13 	bl	100551ec <aci_event_fifo_push_header>
1004e9c6:	0001      	movs	r1, r0
1004e9c8:	d006      	beq.n	1004e9d8 <hci_encryption_change_event_push+0x54>
1004e9ca:	710f      	strb	r7, [r1, #4]
1004e9cc:	80ce      	strh	r6, [r1, #6]
1004e9ce:	720d      	strb	r5, [r1, #8]
1004e9d0:	4620      	mov	r0, r4
1004e9d2:	f006 fbf7 	bl	100551c4 <aci_event_fifo_push>
1004e9d6:	e7e9      	b.n	1004e9ac <hci_encryption_change_event_push+0x28>
1004e9d8:	2007      	movs	r0, #7
1004e9da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004e9dc:	2000098c 	.word	0x2000098c

1004e9e0 <hci_encryption_key_refresh_complete_event_push>:
1004e9e0:	b570      	push	{r4, r5, r6, lr}
1004e9e2:	460e      	mov	r6, r1
1004e9e4:	2301      	movs	r3, #1
1004e9e6:	4604      	mov	r4, r0
1004e9e8:	06c1      	lsls	r1, r0, #27
1004e9ea:	4812      	ldr	r0, [pc, #72]	; (1004ea34 <hci_encryption_key_refresh_complete_event_push+0x54>)
1004e9ec:	4615      	mov	r5, r2
1004e9ee:	6800      	ldr	r0, [r0, #0]
1004e9f0:	d503      	bpl.n	1004e9fa <hci_encryption_key_refresh_complete_event_push+0x1a>
1004e9f2:	2204      	movs	r2, #4
1004e9f4:	21bf      	movs	r1, #191	; 0xbf
1004e9f6:	400c      	ands	r4, r1
1004e9f8:	e008      	b.n	1004ea0c <hci_encryption_key_refresh_complete_event_push+0x2c>
1004e9fa:	211b      	movs	r1, #27
1004e9fc:	0189      	lsls	r1, r1, #6
1004e9fe:	1841      	adds	r1, r0, r1
1004ea00:	7fc9      	ldrb	r1, [r1, #31]
1004ea02:	0609      	lsls	r1, r1, #24
1004ea04:	d401      	bmi.n	1004ea0a <hci_encryption_key_refresh_complete_event_push+0x2a>
1004ea06:	2000      	movs	r0, #0
1004ea08:	bd70      	pop	{r4, r5, r6, pc}
1004ea0a:	2202      	movs	r2, #2
1004ea0c:	0721      	lsls	r1, r4, #28
1004ea0e:	0e89      	lsrs	r1, r1, #26
1004ea10:	1808      	adds	r0, r1, r0
1004ea12:	2101      	movs	r1, #1
1004ea14:	02c9      	lsls	r1, r1, #11
1004ea16:	1840      	adds	r0, r0, r1
1004ea18:	6940      	ldr	r0, [r0, #20]
1004ea1a:	4621      	mov	r1, r4
1004ea1c:	f006 fbe6 	bl	100551ec <aci_event_fifo_push_header>
1004ea20:	0001      	movs	r1, r0
1004ea22:	d005      	beq.n	1004ea30 <hci_encryption_key_refresh_complete_event_push+0x50>
1004ea24:	710e      	strb	r6, [r1, #4]
1004ea26:	80cd      	strh	r5, [r1, #6]
1004ea28:	4620      	mov	r0, r4
1004ea2a:	f006 fbcb 	bl	100551c4 <aci_event_fifo_push>
1004ea2e:	e7ea      	b.n	1004ea06 <hci_encryption_key_refresh_complete_event_push+0x26>
1004ea30:	2007      	movs	r0, #7
1004ea32:	bd70      	pop	{r4, r5, r6, pc}
1004ea34:	2000098c 	.word	0x2000098c

1004ea38 <hci_le_connection_complete_event_push>:
1004ea38:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004ea3a:	461f      	mov	r7, r3
1004ea3c:	2305      	movs	r3, #5
1004ea3e:	4606      	mov	r6, r0
1004ea40:	06c1      	lsls	r1, r0, #27
1004ea42:	481e      	ldr	r0, [pc, #120]	; (1004eabc <hci_le_connection_complete_event_push+0x84>)
1004ea44:	b081      	sub	sp, #4
1004ea46:	6800      	ldr	r0, [r0, #0]
1004ea48:	d503      	bpl.n	1004ea52 <hci_le_connection_complete_event_push+0x1a>
1004ea4a:	2205      	movs	r2, #5
1004ea4c:	21bf      	movs	r1, #191	; 0xbf
1004ea4e:	400e      	ands	r6, r1
1004ea50:	e009      	b.n	1004ea66 <hci_le_connection_complete_event_push+0x2e>
1004ea52:	2137      	movs	r1, #55	; 0x37
1004ea54:	0149      	lsls	r1, r1, #5
1004ea56:	1841      	adds	r1, r0, r1
1004ea58:	784a      	ldrb	r2, [r1, #1]
1004ea5a:	0692      	lsls	r2, r2, #26
1004ea5c:	d529      	bpl.n	1004eab2 <hci_le_connection_complete_event_push+0x7a>
1004ea5e:	7889      	ldrb	r1, [r1, #2]
1004ea60:	07c9      	lsls	r1, r1, #31
1004ea62:	d026      	beq.n	1004eab2 <hci_le_connection_complete_event_push+0x7a>
1004ea64:	2203      	movs	r2, #3
1004ea66:	0731      	lsls	r1, r6, #28
1004ea68:	0e89      	lsrs	r1, r1, #26
1004ea6a:	1808      	adds	r0, r1, r0
1004ea6c:	2101      	movs	r1, #1
1004ea6e:	02c9      	lsls	r1, r1, #11
1004ea70:	1840      	adds	r0, r0, r1
1004ea72:	6940      	ldr	r0, [r0, #20]
1004ea74:	4631      	mov	r1, r6
1004ea76:	f006 fbb9 	bl	100551ec <aci_event_fifo_push_header>
1004ea7a:	0004      	movs	r4, r0
1004ea7c:	d01c      	beq.n	1004eab8 <hci_le_connection_complete_event_push+0x80>
1004ea7e:	9802      	ldr	r0, [sp, #8]
1004ea80:	7120      	strb	r0, [r4, #4]
1004ea82:	9803      	ldr	r0, [sp, #12]
1004ea84:	80e0      	strh	r0, [r4, #6]
1004ea86:	7227      	strb	r7, [r4, #8]
1004ea88:	980a      	ldr	r0, [sp, #40]	; 0x28
1004ea8a:	7260      	strb	r0, [r4, #9]
1004ea8c:	4620      	mov	r0, r4
1004ea8e:	1d25      	adds	r5, r4, #4
1004ea90:	2206      	movs	r2, #6
1004ea92:	300a      	adds	r0, #10
1004ea94:	990b      	ldr	r1, [sp, #44]	; 0x2c
1004ea96:	f7f4 fb92 	bl	100431be <Osal_MemCpy>
1004ea9a:	980c      	ldr	r0, [sp, #48]	; 0x30
1004ea9c:	81a8      	strh	r0, [r5, #12]
1004ea9e:	980d      	ldr	r0, [sp, #52]	; 0x34
1004eaa0:	81e8      	strh	r0, [r5, #14]
1004eaa2:	980e      	ldr	r0, [sp, #56]	; 0x38
1004eaa4:	8228      	strh	r0, [r5, #16]
1004eaa6:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004eaa8:	74a8      	strb	r0, [r5, #18]
1004eaaa:	4621      	mov	r1, r4
1004eaac:	4630      	mov	r0, r6
1004eaae:	f006 fb89 	bl	100551c4 <aci_event_fifo_push>
1004eab2:	2000      	movs	r0, #0
1004eab4:	b005      	add	sp, #20
1004eab6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004eab8:	2007      	movs	r0, #7
1004eaba:	e7fb      	b.n	1004eab4 <hci_le_connection_complete_event_push+0x7c>
1004eabc:	2000098c 	.word	0x2000098c

1004eac0 <hci_le_connection_update_complete_event_push>:
1004eac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004eac2:	461d      	mov	r5, r3
1004eac4:	460f      	mov	r7, r1
1004eac6:	2303      	movs	r3, #3
1004eac8:	4604      	mov	r4, r0
1004eaca:	06c1      	lsls	r1, r0, #27
1004eacc:	4816      	ldr	r0, [pc, #88]	; (1004eb28 <hci_le_connection_update_complete_event_push+0x68>)
1004eace:	4616      	mov	r6, r2
1004ead0:	6800      	ldr	r0, [r0, #0]
1004ead2:	d503      	bpl.n	1004eadc <hci_le_connection_update_complete_event_push+0x1c>
1004ead4:	2210      	movs	r2, #16
1004ead6:	21bf      	movs	r1, #191	; 0xbf
1004ead8:	400c      	ands	r4, r1
1004eada:	e00b      	b.n	1004eaf4 <hci_le_connection_update_complete_event_push+0x34>
1004eadc:	2137      	movs	r1, #55	; 0x37
1004eade:	0149      	lsls	r1, r1, #5
1004eae0:	1841      	adds	r1, r0, r1
1004eae2:	784a      	ldrb	r2, [r1, #1]
1004eae4:	0692      	lsls	r2, r2, #26
1004eae6:	d502      	bpl.n	1004eaee <hci_le_connection_update_complete_event_push+0x2e>
1004eae8:	7889      	ldrb	r1, [r1, #2]
1004eaea:	0749      	lsls	r1, r1, #29
1004eaec:	d401      	bmi.n	1004eaf2 <hci_le_connection_update_complete_event_push+0x32>
1004eaee:	2000      	movs	r0, #0
1004eaf0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004eaf2:	220d      	movs	r2, #13
1004eaf4:	0721      	lsls	r1, r4, #28
1004eaf6:	0e89      	lsrs	r1, r1, #26
1004eaf8:	1808      	adds	r0, r1, r0
1004eafa:	2101      	movs	r1, #1
1004eafc:	02c9      	lsls	r1, r1, #11
1004eafe:	1840      	adds	r0, r0, r1
1004eb00:	6940      	ldr	r0, [r0, #20]
1004eb02:	4621      	mov	r1, r4
1004eb04:	f006 fb72 	bl	100551ec <aci_event_fifo_push_header>
1004eb08:	0001      	movs	r1, r0
1004eb0a:	d00a      	beq.n	1004eb22 <hci_le_connection_update_complete_event_push+0x62>
1004eb0c:	710f      	strb	r7, [r1, #4]
1004eb0e:	80ce      	strh	r6, [r1, #6]
1004eb10:	810d      	strh	r5, [r1, #8]
1004eb12:	9a06      	ldr	r2, [sp, #24]
1004eb14:	814a      	strh	r2, [r1, #10]
1004eb16:	9a07      	ldr	r2, [sp, #28]
1004eb18:	818a      	strh	r2, [r1, #12]
1004eb1a:	4620      	mov	r0, r4
1004eb1c:	f006 fb52 	bl	100551c4 <aci_event_fifo_push>
1004eb20:	e7e5      	b.n	1004eaee <hci_le_connection_update_complete_event_push+0x2e>
1004eb22:	2007      	movs	r0, #7
1004eb24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004eb26:	0000      	.short	0x0000
1004eb28:	2000098c 	.word	0x2000098c

1004eb2c <isr_event_handler>:
1004eb2c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004eb2e:	4606      	mov	r6, r0
1004eb30:	b08d      	sub	sp, #52	; 0x34
1004eb32:	8950      	ldrh	r0, [r2, #10]
1004eb34:	9006      	str	r0, [sp, #24]
1004eb36:	48ff      	ldr	r0, [pc, #1020]	; (1004ef34 <isr_event_handler+0x408>)
1004eb38:	2109      	movs	r1, #9
1004eb3a:	6800      	ldr	r0, [r0, #0]
1004eb3c:	0209      	lsls	r1, r1, #8
1004eb3e:	900b      	str	r0, [sp, #44]	; 0x2c
1004eb40:	1840      	adds	r0, r0, r1
1004eb42:	6b00      	ldr	r0, [r0, #48]	; 0x30
1004eb44:	900a      	str	r0, [sp, #40]	; 0x28
1004eb46:	7951      	ldrb	r1, [r2, #5]
1004eb48:	461d      	mov	r5, r3
1004eb4a:	4614      	mov	r4, r2
1004eb4c:	0648      	lsls	r0, r1, #25
1004eb4e:	d401      	bmi.n	1004eb54 <isr_event_handler+0x28>
1004eb50:	07e8      	lsls	r0, r5, #31
1004eb52:	d057      	beq.n	1004ec04 <isr_event_handler+0xd8>
1004eb54:	2000      	movs	r0, #0
1004eb56:	9007      	str	r0, [sp, #28]
1004eb58:	8f20      	ldrh	r0, [r4, #56]	; 0x38
1004eb5a:	9000      	str	r0, [sp, #0]
1004eb5c:	89a0      	ldrh	r0, [r4, #12]
1004eb5e:	69a3      	ldr	r3, [r4, #24]
1004eb60:	4684      	mov	ip, r0
1004eb62:	78a0      	ldrb	r0, [r4, #2]
1004eb64:	0740      	lsls	r0, r0, #29
1004eb66:	0f40      	lsrs	r0, r0, #29
1004eb68:	2805      	cmp	r0, #5
1004eb6a:	d02d      	beq.n	1004ebc8 <isr_event_handler+0x9c>
1004eb6c:	2803      	cmp	r0, #3
1004eb6e:	d02b      	beq.n	1004ebc8 <isr_event_handler+0x9c>
1004eb70:	2001      	movs	r0, #1
1004eb72:	9009      	str	r0, [sp, #36]	; 0x24
1004eb74:	20bf      	movs	r0, #191	; 0xbf
1004eb76:	4001      	ands	r1, r0
1004eb78:	7161      	strb	r1, [r4, #5]
1004eb7a:	990e      	ldr	r1, [sp, #56]	; 0x38
1004eb7c:	07ef      	lsls	r7, r5, #31
1004eb7e:	4608      	mov	r0, r1
1004eb80:	3040      	adds	r0, #64	; 0x40
1004eb82:	3110      	adds	r1, #16
1004eb84:	2f00      	cmp	r7, #0
1004eb86:	d00a      	beq.n	1004eb9e <isr_event_handler+0x72>
1004eb88:	2200      	movs	r2, #0
1004eb8a:	213c      	movs	r1, #60	; 0x3c
1004eb8c:	9107      	str	r1, [sp, #28]
1004eb8e:	990e      	ldr	r1, [sp, #56]	; 0x38
1004eb90:	9206      	str	r2, [sp, #24]
1004eb92:	9200      	str	r2, [sp, #0]
1004eb94:	8382      	strh	r2, [r0, #28]
1004eb96:	4694      	mov	ip, r2
1004eb98:	4613      	mov	r3, r2
1004eb9a:	8082      	strh	r2, [r0, #4]
1004eb9c:	3108      	adds	r1, #8
1004eb9e:	2737      	movs	r7, #55	; 0x37
1004eba0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
1004eba2:	017f      	lsls	r7, r7, #5
1004eba4:	19d2      	adds	r2, r2, r7
1004eba6:	7857      	ldrb	r7, [r2, #1]
1004eba8:	06bf      	lsls	r7, r7, #26
1004ebaa:	d50f      	bpl.n	1004ebcc <isr_event_handler+0xa0>
1004ebac:	78d7      	ldrb	r7, [r2, #3]
1004ebae:	07bf      	lsls	r7, r7, #30
1004ebb0:	d50c      	bpl.n	1004ebcc <isr_event_handler+0xa0>
1004ebb2:	8880      	ldrh	r0, [r0, #4]
1004ebb4:	4662      	mov	r2, ip
1004ebb6:	9302      	str	r3, [sp, #8]
1004ebb8:	9201      	str	r2, [sp, #4]
1004ebba:	9003      	str	r0, [sp, #12]
1004ebbc:	9b06      	ldr	r3, [sp, #24]
1004ebbe:	9a07      	ldr	r2, [sp, #28]
1004ebc0:	9809      	ldr	r0, [sp, #36]	; 0x24
1004ebc2:	f7ff fe02 	bl	1004e7ca <PRIV_vGenerate_hci_le_enhanced_connection_complete_event_ucfg>
1004ebc6:	e01d      	b.n	1004ec04 <isr_event_handler+0xd8>
1004ebc8:	2000      	movs	r0, #0
1004ebca:	e7d2      	b.n	1004eb72 <isr_event_handler+0x46>
1004ebcc:	031a      	lsls	r2, r3, #12
1004ebce:	7900      	ldrb	r0, [r0, #4]
1004ebd0:	0c13      	lsrs	r3, r2, #16
1004ebd2:	9a00      	ldr	r2, [sp, #0]
1004ebd4:	4667      	mov	r7, ip
1004ebd6:	9703      	str	r7, [sp, #12]
1004ebd8:	9304      	str	r3, [sp, #16]
1004ebda:	9202      	str	r2, [sp, #8]
1004ebdc:	9005      	str	r0, [sp, #20]
1004ebde:	6848      	ldr	r0, [r1, #4]
1004ebe0:	9101      	str	r1, [sp, #4]
1004ebe2:	0200      	lsls	r0, r0, #8
1004ebe4:	0e00      	lsrs	r0, r0, #24
1004ebe6:	9000      	str	r0, [sp, #0]
1004ebe8:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004ebea:	30a0      	adds	r0, #160	; 0xa0
1004ebec:	7900      	ldrb	r0, [r0, #4]
1004ebee:	07c0      	lsls	r0, r0, #31
1004ebf0:	d001      	beq.n	1004ebf6 <isr_event_handler+0xca>
1004ebf2:	2000      	movs	r0, #0
1004ebf4:	e000      	b.n	1004ebf8 <isr_event_handler+0xcc>
1004ebf6:	2010      	movs	r0, #16
1004ebf8:	3080      	adds	r0, #128	; 0x80
1004ebfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
1004ebfc:	9a06      	ldr	r2, [sp, #24]
1004ebfe:	9907      	ldr	r1, [sp, #28]
1004ec00:	f7ff ff1a 	bl	1004ea38 <hci_le_connection_complete_event_push>
1004ec04:	9f0e      	ldr	r7, [sp, #56]	; 0x38
1004ec06:	0728      	lsls	r0, r5, #28
1004ec08:	37c0      	adds	r7, #192	; 0xc0
1004ec0a:	2800      	cmp	r0, #0
1004ec0c:	da73      	bge.n	1004ecf6 <isr_event_handler+0x1ca>
1004ec0e:	6920      	ldr	r0, [r4, #16]
1004ec10:	03e9      	lsls	r1, r5, #15
1004ec12:	d501      	bpl.n	1004ec18 <isr_event_handler+0xec>
1004ec14:	2116      	movs	r1, #22
1004ec16:	e017      	b.n	1004ec48 <isr_event_handler+0x11c>
1004ec18:	03a9      	lsls	r1, r5, #14
1004ec1a:	d501      	bpl.n	1004ec20 <isr_event_handler+0xf4>
1004ec1c:	2113      	movs	r1, #19
1004ec1e:	e013      	b.n	1004ec48 <isr_event_handler+0x11c>
1004ec20:	0329      	lsls	r1, r5, #12
1004ec22:	d501      	bpl.n	1004ec28 <isr_event_handler+0xfc>
1004ec24:	2128      	movs	r1, #40	; 0x28
1004ec26:	e00f      	b.n	1004ec48 <isr_event_handler+0x11c>
1004ec28:	02e9      	lsls	r1, r5, #11
1004ec2a:	d501      	bpl.n	1004ec30 <isr_event_handler+0x104>
1004ec2c:	213d      	movs	r1, #61	; 0x3d
1004ec2e:	e00b      	b.n	1004ec48 <isr_event_handler+0x11c>
1004ec30:	0269      	lsls	r1, r5, #9
1004ec32:	d501      	bpl.n	1004ec38 <isr_event_handler+0x10c>
1004ec34:	2122      	movs	r1, #34	; 0x22
1004ec36:	e007      	b.n	1004ec48 <isr_event_handler+0x11c>
1004ec38:	0369      	lsls	r1, r5, #13
1004ec3a:	d529      	bpl.n	1004ec90 <isr_event_handler+0x164>
1004ec3c:	7961      	ldrb	r1, [r4, #5]
1004ec3e:	0609      	lsls	r1, r1, #24
1004ec40:	d401      	bmi.n	1004ec46 <isr_event_handler+0x11a>
1004ec42:	2108      	movs	r1, #8
1004ec44:	e000      	b.n	1004ec48 <isr_event_handler+0x11c>
1004ec46:	213e      	movs	r1, #62	; 0x3e
1004ec48:	9101      	str	r1, [sp, #4]
1004ec4a:	7bb9      	ldrb	r1, [r7, #14]
1004ec4c:	2258      	movs	r2, #88	; 0x58
1004ec4e:	4351      	muls	r1, r2
1004ec50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1004ec52:	1889      	adds	r1, r1, r2
1004ec54:	42a1      	cmp	r1, r4
1004ec56:	d101      	bne.n	1004ec5c <isr_event_handler+0x130>
1004ec58:	2108      	movs	r1, #8
1004ec5a:	73b9      	strb	r1, [r7, #14]
1004ec5c:	7bf9      	ldrb	r1, [r7, #15]
1004ec5e:	2258      	movs	r2, #88	; 0x58
1004ec60:	4351      	muls	r1, r2
1004ec62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
1004ec64:	1889      	adds	r1, r1, r2
1004ec66:	42a1      	cmp	r1, r4
1004ec68:	d101      	bne.n	1004ec6e <isr_event_handler+0x142>
1004ec6a:	2108      	movs	r1, #8
1004ec6c:	73f9      	strb	r1, [r7, #15]
1004ec6e:	2105      	movs	r1, #5
1004ec70:	0289      	lsls	r1, r1, #10
1004ec72:	4208      	tst	r0, r1
1004ec74:	d022      	beq.n	1004ecbc <isr_event_handler+0x190>
1004ec76:	0428      	lsls	r0, r5, #16
1004ec78:	d520      	bpl.n	1004ecbc <isr_event_handler+0x190>
1004ec7a:	8a20      	ldrh	r0, [r4, #16]
1004ec7c:	0440      	lsls	r0, r0, #17
1004ec7e:	48ad      	ldr	r0, [pc, #692]	; (1004ef34 <isr_event_handler+0x408>)
1004ec80:	6800      	ldr	r0, [r0, #0]
1004ec82:	d50e      	bpl.n	1004eca2 <isr_event_handler+0x176>
1004ec84:	30a0      	adds	r0, #160	; 0xa0
1004ec86:	7900      	ldrb	r0, [r0, #4]
1004ec88:	07c0      	lsls	r0, r0, #31
1004ec8a:	d003      	beq.n	1004ec94 <isr_event_handler+0x168>
1004ec8c:	2000      	movs	r0, #0
1004ec8e:	e002      	b.n	1004ec96 <isr_event_handler+0x16a>
1004ec90:	211f      	movs	r1, #31
1004ec92:	e7d9      	b.n	1004ec48 <isr_event_handler+0x11c>
1004ec94:	2010      	movs	r0, #16
1004ec96:	3080      	adds	r0, #128	; 0x80
1004ec98:	9a06      	ldr	r2, [sp, #24]
1004ec9a:	9901      	ldr	r1, [sp, #4]
1004ec9c:	f7ff fea0 	bl	1004e9e0 <hci_encryption_key_refresh_complete_event_push>
1004eca0:	e00c      	b.n	1004ecbc <isr_event_handler+0x190>
1004eca2:	30a0      	adds	r0, #160	; 0xa0
1004eca4:	7900      	ldrb	r0, [r0, #4]
1004eca6:	07c0      	lsls	r0, r0, #31
1004eca8:	d001      	beq.n	1004ecae <isr_event_handler+0x182>
1004ecaa:	2000      	movs	r0, #0
1004ecac:	e000      	b.n	1004ecb0 <isr_event_handler+0x184>
1004ecae:	2010      	movs	r0, #16
1004ecb0:	2300      	movs	r3, #0
1004ecb2:	3080      	adds	r0, #128	; 0x80
1004ecb4:	9a06      	ldr	r2, [sp, #24]
1004ecb6:	9901      	ldr	r1, [sp, #4]
1004ecb8:	f7ff fe64 	bl	1004e984 <hci_encryption_change_event_push>
1004ecbc:	6a20      	ldr	r0, [r4, #32]
1004ecbe:	2800      	cmp	r0, #0
1004ecc0:	d001      	beq.n	1004ecc6 <isr_event_handler+0x19a>
1004ecc2:	f007 f83f 	bl	10055d44 <Acl_Tx_Cmpl_Pkt_Handler>
1004ecc6:	2700      	movs	r7, #0
1004ecc8:	6227      	str	r7, [r4, #32]
1004ecca:	489a      	ldr	r0, [pc, #616]	; (1004ef34 <isr_event_handler+0x408>)
1004eccc:	6267      	str	r7, [r4, #36]	; 0x24
1004ecce:	6800      	ldr	r0, [r0, #0]
1004ecd0:	21a4      	movs	r1, #164	; 0xa4
1004ecd2:	5c09      	ldrb	r1, [r1, r0]
1004ecd4:	07c9      	lsls	r1, r1, #31
1004ecd6:	d001      	beq.n	1004ecdc <isr_event_handler+0x1b0>
1004ecd8:	2500      	movs	r5, #0
1004ecda:	e000      	b.n	1004ecde <isr_event_handler+0x1b2>
1004ecdc:	2510      	movs	r5, #16
1004ecde:	9906      	ldr	r1, [sp, #24]
1004ece0:	9103      	str	r1, [sp, #12]
1004ece2:	9901      	ldr	r1, [sp, #4]
1004ece4:	2302      	movs	r3, #2
1004ece6:	3580      	adds	r5, #128	; 0x80
1004ece8:	9105      	str	r1, [sp, #20]
1004ecea:	06e9      	lsls	r1, r5, #27
1004ecec:	d504      	bpl.n	1004ecf8 <isr_event_handler+0x1cc>
1004ecee:	2202      	movs	r2, #2
1004ecf0:	21bf      	movs	r1, #191	; 0xbf
1004ecf2:	400d      	ands	r5, r1
1004ecf4:	e007      	b.n	1004ed06 <isr_event_handler+0x1da>
1004ecf6:	e01d      	b.n	1004ed34 <isr_event_handler+0x208>
1004ecf8:	211b      	movs	r1, #27
1004ecfa:	0189      	lsls	r1, r1, #6
1004ecfc:	1841      	adds	r1, r0, r1
1004ecfe:	7e89      	ldrb	r1, [r1, #26]
1004ed00:	06c9      	lsls	r1, r1, #27
1004ed02:	d514      	bpl.n	1004ed2e <isr_event_handler+0x202>
1004ed04:	2200      	movs	r2, #0
1004ed06:	0729      	lsls	r1, r5, #28
1004ed08:	0e89      	lsrs	r1, r1, #26
1004ed0a:	1809      	adds	r1, r1, r0
1004ed0c:	2001      	movs	r0, #1
1004ed0e:	02c0      	lsls	r0, r0, #11
1004ed10:	1808      	adds	r0, r1, r0
1004ed12:	6940      	ldr	r0, [r0, #20]
1004ed14:	4629      	mov	r1, r5
1004ed16:	f006 fa69 	bl	100551ec <aci_event_fifo_push_header>
1004ed1a:	0001      	movs	r1, r0
1004ed1c:	d007      	beq.n	1004ed2e <isr_event_handler+0x202>
1004ed1e:	710f      	strb	r7, [r1, #4]
1004ed20:	9a03      	ldr	r2, [sp, #12]
1004ed22:	80ca      	strh	r2, [r1, #6]
1004ed24:	9a05      	ldr	r2, [sp, #20]
1004ed26:	720a      	strb	r2, [r1, #8]
1004ed28:	4628      	mov	r0, r5
1004ed2a:	f006 fa4b 	bl	100551c4 <aci_event_fifo_push>
1004ed2e:	2500      	movs	r5, #0
1004ed30:	6127      	str	r7, [r4, #16]
1004ed32:	e18d      	b.n	1004f050 <isr_event_handler+0x524>
1004ed34:	0668      	lsls	r0, r5, #25
1004ed36:	d520      	bpl.n	1004ed7a <isr_event_handler+0x24e>
1004ed38:	78a0      	ldrb	r0, [r4, #2]
1004ed3a:	0740      	lsls	r0, r0, #29
1004ed3c:	0f40      	lsrs	r0, r0, #29
1004ed3e:	2805      	cmp	r0, #5
1004ed40:	d101      	bne.n	1004ed46 <isr_event_handler+0x21a>
1004ed42:	69a1      	ldr	r1, [r4, #24]
1004ed44:	6161      	str	r1, [r4, #20]
1004ed46:	2100      	movs	r1, #0
1004ed48:	2805      	cmp	r0, #5
1004ed4a:	d00b      	beq.n	1004ed64 <isr_event_handler+0x238>
1004ed4c:	8b20      	ldrh	r0, [r4, #24]
1004ed4e:	89a2      	ldrh	r2, [r4, #12]
1004ed50:	0400      	lsls	r0, r0, #16
1004ed52:	0d00      	lsrs	r0, r0, #20
1004ed54:	9001      	str	r0, [sp, #4]
1004ed56:	9200      	str	r2, [sp, #0]
1004ed58:	8f23      	ldrh	r3, [r4, #56]	; 0x38
1004ed5a:	2080      	movs	r0, #128	; 0x80
1004ed5c:	9a06      	ldr	r2, [sp, #24]
1004ed5e:	f7ff feaf 	bl	1004eac0 <hci_le_connection_update_complete_event_push>
1004ed62:	e175      	b.n	1004f050 <isr_event_handler+0x524>
1004ed64:	6b60      	ldr	r0, [r4, #52]	; 0x34
1004ed66:	8943      	ldrh	r3, [r0, #10]
1004ed68:	8902      	ldrh	r2, [r0, #8]
1004ed6a:	9301      	str	r3, [sp, #4]
1004ed6c:	9200      	str	r2, [sp, #0]
1004ed6e:	88c3      	ldrh	r3, [r0, #6]
1004ed70:	2080      	movs	r0, #128	; 0x80
1004ed72:	9a06      	ldr	r2, [sp, #24]
1004ed74:	f7ff fea4 	bl	1004eac0 <hci_le_connection_update_complete_event_push>
1004ed78:	e06a      	b.n	1004ee50 <isr_event_handler+0x324>
1004ed7a:	0768      	lsls	r0, r5, #29
1004ed7c:	d523      	bpl.n	1004edc6 <isr_event_handler+0x29a>
1004ed7e:	2080      	movs	r0, #128	; 0x80
1004ed80:	9000      	str	r0, [sp, #0]
1004ed82:	486c      	ldr	r0, [pc, #432]	; (1004ef34 <isr_event_handler+0x408>)
1004ed84:	211b      	movs	r1, #27
1004ed86:	6800      	ldr	r0, [r0, #0]
1004ed88:	0189      	lsls	r1, r1, #6
1004ed8a:	1841      	adds	r1, r0, r1
1004ed8c:	7ec9      	ldrb	r1, [r1, #27]
1004ed8e:	2302      	movs	r3, #2
1004ed90:	9f06      	ldr	r7, [sp, #24]
1004ed92:	0709      	lsls	r1, r1, #28
1004ed94:	d5cd      	bpl.n	1004ed32 <isr_event_handler+0x206>
1004ed96:	0299      	lsls	r1, r3, #10
1004ed98:	1840      	adds	r0, r0, r1
1004ed9a:	220c      	movs	r2, #12
1004ed9c:	6940      	ldr	r0, [r0, #20]
1004ed9e:	9900      	ldr	r1, [sp, #0]
1004eda0:	f006 fa24 	bl	100551ec <aci_event_fifo_push_header>
1004eda4:	0001      	movs	r1, r0
1004eda6:	d0c4      	beq.n	1004ed32 <isr_event_handler+0x206>
1004eda8:	808f      	strh	r7, [r1, #4]
1004edaa:	78f2      	ldrb	r2, [r6, #3]
1004edac:	718a      	strb	r2, [r1, #6]
1004edae:	7933      	ldrb	r3, [r6, #4]
1004edb0:	7972      	ldrb	r2, [r6, #5]
1004edb2:	0212      	lsls	r2, r2, #8
1004edb4:	431a      	orrs	r2, r3
1004edb6:	810a      	strh	r2, [r1, #8]
1004edb8:	79b3      	ldrb	r3, [r6, #6]
1004edba:	79f2      	ldrb	r2, [r6, #7]
1004edbc:	0212      	lsls	r2, r2, #8
1004edbe:	431a      	orrs	r2, r3
1004edc0:	814a      	strh	r2, [r1, #10]
1004edc2:	9800      	ldr	r0, [sp, #0]
1004edc4:	e142      	b.n	1004f04c <isr_event_handler+0x520>
1004edc6:	0528      	lsls	r0, r5, #20
1004edc8:	0f80      	lsrs	r0, r0, #30
1004edca:	d006      	beq.n	1004edda <isr_event_handler+0x2ae>
1004edcc:	980e      	ldr	r0, [sp, #56]	; 0x38
1004edce:	4669      	mov	r1, sp
1004edd0:	c131      	stmia	r1!, {r0, r4, r5}
1004edd2:	4668      	mov	r0, sp
1004edd4:	f000 f9a8 	bl	1004f128 <isr_event_handler_scan_data_ucfg>
1004edd8:	e13a      	b.n	1004f050 <isr_event_handler+0x524>
1004edda:	4857      	ldr	r0, [pc, #348]	; (1004ef38 <isr_event_handler+0x40c>)
1004eddc:	4205      	tst	r5, r0
1004edde:	d03d      	beq.n	1004ee5c <isr_event_handler+0x330>
1004ede0:	04e8      	lsls	r0, r5, #19
1004ede2:	d501      	bpl.n	1004ede8 <isr_event_handler+0x2bc>
1004ede4:	2000      	movs	r0, #0
1004ede6:	e000      	b.n	1004edea <isr_event_handler+0x2be>
1004ede8:	201a      	movs	r0, #26
1004edea:	9007      	str	r0, [sp, #28]
1004edec:	9806      	ldr	r0, [sp, #24]
1004edee:	9004      	str	r0, [sp, #16]
1004edf0:	1cf0      	adds	r0, r6, #3
1004edf2:	9002      	str	r0, [sp, #8]
1004edf4:	2180      	movs	r1, #128	; 0x80
1004edf6:	484f      	ldr	r0, [pc, #316]	; (1004ef34 <isr_event_handler+0x408>)
1004edf8:	9100      	str	r1, [sp, #0]
1004edfa:	6801      	ldr	r1, [r0, #0]
1004edfc:	2037      	movs	r0, #55	; 0x37
1004edfe:	0140      	lsls	r0, r0, #5
1004ee00:	1808      	adds	r0, r1, r0
1004ee02:	7842      	ldrb	r2, [r0, #1]
1004ee04:	2303      	movs	r3, #3
1004ee06:	0692      	lsls	r2, r2, #26
1004ee08:	d51a      	bpl.n	1004ee40 <isr_event_handler+0x314>
1004ee0a:	7880      	ldrb	r0, [r0, #2]
1004ee0c:	0700      	lsls	r0, r0, #28
1004ee0e:	d517      	bpl.n	1004ee40 <isr_event_handler+0x314>
1004ee10:	2001      	movs	r0, #1
1004ee12:	02c0      	lsls	r0, r0, #11
1004ee14:	1808      	adds	r0, r1, r0
1004ee16:	220e      	movs	r2, #14
1004ee18:	6940      	ldr	r0, [r0, #20]
1004ee1a:	9900      	ldr	r1, [sp, #0]
1004ee1c:	f006 f9e6 	bl	100551ec <aci_event_fifo_push_header>
1004ee20:	9005      	str	r0, [sp, #20]
1004ee22:	2800      	cmp	r0, #0
1004ee24:	d00c      	beq.n	1004ee40 <isr_event_handler+0x314>
1004ee26:	9907      	ldr	r1, [sp, #28]
1004ee28:	7101      	strb	r1, [r0, #4]
1004ee2a:	9904      	ldr	r1, [sp, #16]
1004ee2c:	80c1      	strh	r1, [r0, #6]
1004ee2e:	2208      	movs	r2, #8
1004ee30:	3008      	adds	r0, #8
1004ee32:	9902      	ldr	r1, [sp, #8]
1004ee34:	f7f4 f9c3 	bl	100431be <Osal_MemCpy>
1004ee38:	9905      	ldr	r1, [sp, #20]
1004ee3a:	9800      	ldr	r0, [sp, #0]
1004ee3c:	f006 f9c2 	bl	100551c4 <aci_event_fifo_push>
1004ee40:	78a0      	ldrb	r0, [r4, #2]
1004ee42:	0740      	lsls	r0, r0, #29
1004ee44:	0f40      	lsrs	r0, r0, #29
1004ee46:	2805      	cmp	r0, #5
1004ee48:	d002      	beq.n	1004ee50 <isr_event_handler+0x324>
1004ee4a:	2802      	cmp	r0, #2
1004ee4c:	d003      	beq.n	1004ee56 <isr_event_handler+0x32a>
1004ee4e:	e0ff      	b.n	1004f050 <isr_event_handler+0x524>
1004ee50:	2008      	movs	r0, #8
1004ee52:	73b8      	strb	r0, [r7, #14]
1004ee54:	e0fc      	b.n	1004f050 <isr_event_handler+0x524>
1004ee56:	2008      	movs	r0, #8
1004ee58:	73f8      	strb	r0, [r7, #15]
1004ee5a:	e0f9      	b.n	1004f050 <isr_event_handler+0x524>
1004ee5c:	0468      	lsls	r0, r5, #17
1004ee5e:	d524      	bpl.n	1004eeaa <isr_event_handler+0x37e>
1004ee60:	8a20      	ldrh	r0, [r4, #16]
1004ee62:	0440      	lsls	r0, r0, #17
1004ee64:	4833      	ldr	r0, [pc, #204]	; (1004ef34 <isr_event_handler+0x408>)
1004ee66:	6800      	ldr	r0, [r0, #0]
1004ee68:	d50c      	bpl.n	1004ee84 <isr_event_handler+0x358>
1004ee6a:	30a0      	adds	r0, #160	; 0xa0
1004ee6c:	7900      	ldrb	r0, [r0, #4]
1004ee6e:	07c0      	lsls	r0, r0, #31
1004ee70:	d001      	beq.n	1004ee76 <isr_event_handler+0x34a>
1004ee72:	2000      	movs	r0, #0
1004ee74:	e000      	b.n	1004ee78 <isr_event_handler+0x34c>
1004ee76:	2010      	movs	r0, #16
1004ee78:	2100      	movs	r1, #0
1004ee7a:	3080      	adds	r0, #128	; 0x80
1004ee7c:	9a06      	ldr	r2, [sp, #24]
1004ee7e:	f7ff fdaf 	bl	1004e9e0 <hci_encryption_key_refresh_complete_event_push>
1004ee82:	e00c      	b.n	1004ee9e <isr_event_handler+0x372>
1004ee84:	30a0      	adds	r0, #160	; 0xa0
1004ee86:	7900      	ldrb	r0, [r0, #4]
1004ee88:	07c0      	lsls	r0, r0, #31
1004ee8a:	d001      	beq.n	1004ee90 <isr_event_handler+0x364>
1004ee8c:	2000      	movs	r0, #0
1004ee8e:	e000      	b.n	1004ee92 <isr_event_handler+0x366>
1004ee90:	2010      	movs	r0, #16
1004ee92:	2301      	movs	r3, #1
1004ee94:	2100      	movs	r1, #0
1004ee96:	3080      	adds	r0, #128	; 0x80
1004ee98:	9a06      	ldr	r2, [sp, #24]
1004ee9a:	f7ff fd73 	bl	1004e984 <hci_encryption_change_event_push>
1004ee9e:	78a0      	ldrb	r0, [r4, #2]
1004eea0:	0740      	lsls	r0, r0, #29
1004eea2:	0f40      	lsrs	r0, r0, #29
1004eea4:	2805      	cmp	r0, #5
1004eea6:	d0d3      	beq.n	1004ee50 <isr_event_handler+0x324>
1004eea8:	e0d2      	b.n	1004f050 <isr_event_handler+0x524>
1004eeaa:	0228      	lsls	r0, r5, #8
1004eeac:	d51e      	bpl.n	1004eeec <isr_event_handler+0x3c0>
1004eeae:	8a20      	ldrh	r0, [r4, #16]
1004eeb0:	0500      	lsls	r0, r0, #20
1004eeb2:	d51a      	bpl.n	1004eeea <isr_event_handler+0x3be>
1004eeb4:	481f      	ldr	r0, [pc, #124]	; (1004ef34 <isr_event_handler+0x408>)
1004eeb6:	78f1      	ldrb	r1, [r6, #3]
1004eeb8:	6800      	ldr	r0, [r0, #0]
1004eeba:	30a0      	adds	r0, #160	; 0xa0
1004eebc:	7900      	ldrb	r0, [r0, #4]
1004eebe:	07c0      	lsls	r0, r0, #31
1004eec0:	d001      	beq.n	1004eec6 <isr_event_handler+0x39a>
1004eec2:	2000      	movs	r0, #0
1004eec4:	e000      	b.n	1004eec8 <isr_event_handler+0x39c>
1004eec6:	2010      	movs	r0, #16
1004eec8:	2300      	movs	r3, #0
1004eeca:	3080      	adds	r0, #128	; 0x80
1004eecc:	9a06      	ldr	r2, [sp, #24]
1004eece:	f7ff fd59 	bl	1004e984 <hci_encryption_change_event_push>
1004eed2:	78a0      	ldrb	r0, [r4, #2]
1004eed4:	0740      	lsls	r0, r0, #29
1004eed6:	0f40      	lsrs	r0, r0, #29
1004eed8:	2805      	cmp	r0, #5
1004eeda:	d101      	bne.n	1004eee0 <isr_event_handler+0x3b4>
1004eedc:	2008      	movs	r0, #8
1004eede:	73b8      	strb	r0, [r7, #14]
1004eee0:	2143      	movs	r1, #67	; 0x43
1004eee2:	6920      	ldr	r0, [r4, #16]
1004eee4:	0289      	lsls	r1, r1, #10
1004eee6:	4388      	bics	r0, r1
1004eee8:	6120      	str	r0, [r4, #16]
1004eeea:	e0b1      	b.n	1004f050 <isr_event_handler+0x524>
1004eeec:	990e      	ldr	r1, [sp, #56]	; 0x38
1004eeee:	062a      	lsls	r2, r5, #24
1004eef0:	3180      	adds	r1, #128	; 0x80
1004eef2:	4812      	ldr	r0, [pc, #72]	; (1004ef3c <isr_event_handler+0x410>)
1004eef4:	9100      	str	r1, [sp, #0]
1004eef6:	2a00      	cmp	r2, #0
1004eef8:	da2c      	bge.n	1004ef54 <isr_event_handler+0x428>
1004eefa:	4631      	mov	r1, r6
1004eefc:	310d      	adds	r1, #13
1004eefe:	9101      	str	r1, [sp, #4]
1004ef00:	a902      	add	r1, sp, #8
1004ef02:	9107      	str	r1, [sp, #28]
1004ef04:	490b      	ldr	r1, [pc, #44]	; (1004ef34 <isr_event_handler+0x408>)
1004ef06:	9f16      	ldr	r7, [sp, #88]	; 0x58
1004ef08:	6809      	ldr	r1, [r1, #0]
1004ef0a:	2208      	movs	r2, #8
1004ef0c:	1809      	adds	r1, r1, r0
1004ef0e:	1cf0      	adds	r0, r6, #3
1004ef10:	3726      	adds	r7, #38	; 0x26
1004ef12:	f7fd fcd5 	bl	1004c8c0 <char_copy>
1004ef16:	7af1      	ldrb	r1, [r6, #11]
1004ef18:	7b30      	ldrb	r0, [r6, #12]
1004ef1a:	2208      	movs	r2, #8
1004ef1c:	0200      	lsls	r0, r0, #8
1004ef1e:	4308      	orrs	r0, r1
1004ef20:	9900      	ldr	r1, [sp, #0]
1004ef22:	83c8      	strh	r0, [r1, #30]
1004ef24:	9907      	ldr	r1, [sp, #28]
1004ef26:	9801      	ldr	r0, [sp, #4]
1004ef28:	f7fd fcca 	bl	1004c8c0 <char_copy>
1004ef2c:	2204      	movs	r2, #4
1004ef2e:	4639      	mov	r1, r7
1004ef30:	9801      	ldr	r0, [sp, #4]
1004ef32:	e005      	b.n	1004ef40 <isr_event_handler+0x414>
1004ef34:	2000098c 	.word	0x2000098c
1004ef38:	04001000 	.word	0x04001000
1004ef3c:	00000964 	.word	0x00000964
1004ef40:	3008      	adds	r0, #8
1004ef42:	f7fd fcbd 	bl	1004c8c0 <char_copy>
1004ef46:	9800      	ldr	r0, [sp, #0]
1004ef48:	9902      	ldr	r1, [sp, #8]
1004ef4a:	63c1      	str	r1, [r0, #60]	; 0x3c
1004ef4c:	9800      	ldr	r0, [sp, #0]
1004ef4e:	9903      	ldr	r1, [sp, #12]
1004ef50:	6401      	str	r1, [r0, #64]	; 0x40
1004ef52:	e07d      	b.n	1004f050 <isr_event_handler+0x524>
1004ef54:	0129      	lsls	r1, r5, #4
1004ef56:	d53e      	bpl.n	1004efd6 <isr_event_handler+0x4aa>
1004ef58:	4971      	ldr	r1, [pc, #452]	; (1004f120 <isr_event_handler+0x5f4>)
1004ef5a:	22a4      	movs	r2, #164	; 0xa4
1004ef5c:	6809      	ldr	r1, [r1, #0]
1004ef5e:	5c52      	ldrb	r2, [r2, r1]
1004ef60:	07d2      	lsls	r2, r2, #31
1004ef62:	d001      	beq.n	1004ef68 <isr_event_handler+0x43c>
1004ef64:	2700      	movs	r7, #0
1004ef66:	e000      	b.n	1004ef6a <isr_event_handler+0x43e>
1004ef68:	2710      	movs	r7, #16
1004ef6a:	1808      	adds	r0, r1, r0
1004ef6c:	9003      	str	r0, [sp, #12]
1004ef6e:	9a06      	ldr	r2, [sp, #24]
1004ef70:	9800      	ldr	r0, [sp, #0]
1004ef72:	9202      	str	r2, [sp, #8]
1004ef74:	8bc0      	ldrh	r0, [r0, #30]
1004ef76:	2303      	movs	r3, #3
1004ef78:	3780      	adds	r7, #128	; 0x80
1004ef7a:	9005      	str	r0, [sp, #20]
1004ef7c:	06f8      	lsls	r0, r7, #27
1004ef7e:	d503      	bpl.n	1004ef88 <isr_event_handler+0x45c>
1004ef80:	2206      	movs	r2, #6
1004ef82:	20bf      	movs	r0, #191	; 0xbf
1004ef84:	4007      	ands	r7, r0
1004ef86:	e009      	b.n	1004ef9c <isr_event_handler+0x470>
1004ef88:	2037      	movs	r0, #55	; 0x37
1004ef8a:	0140      	lsls	r0, r0, #5
1004ef8c:	1808      	adds	r0, r1, r0
1004ef8e:	7842      	ldrb	r2, [r0, #1]
1004ef90:	0692      	lsls	r2, r2, #26
1004ef92:	d55d      	bpl.n	1004f050 <isr_event_handler+0x524>
1004ef94:	7880      	ldrb	r0, [r0, #2]
1004ef96:	06c0      	lsls	r0, r0, #27
1004ef98:	d55a      	bpl.n	1004f050 <isr_event_handler+0x524>
1004ef9a:	2204      	movs	r2, #4
1004ef9c:	0738      	lsls	r0, r7, #28
1004ef9e:	0e80      	lsrs	r0, r0, #26
1004efa0:	1841      	adds	r1, r0, r1
1004efa2:	2001      	movs	r0, #1
1004efa4:	02c0      	lsls	r0, r0, #11
1004efa6:	1808      	adds	r0, r1, r0
1004efa8:	6940      	ldr	r0, [r0, #20]
1004efaa:	4639      	mov	r1, r7
1004efac:	f006 f91e 	bl	100551ec <aci_event_fifo_push_header>
1004efb0:	9004      	str	r0, [sp, #16]
1004efb2:	2800      	cmp	r0, #0
1004efb4:	d04c      	beq.n	1004f050 <isr_event_handler+0x524>
1004efb6:	1d00      	adds	r0, r0, #4
1004efb8:	9000      	str	r0, [sp, #0]
1004efba:	9902      	ldr	r1, [sp, #8]
1004efbc:	8001      	strh	r1, [r0, #0]
1004efbe:	9800      	ldr	r0, [sp, #0]
1004efc0:	2208      	movs	r2, #8
1004efc2:	1c80      	adds	r0, r0, #2
1004efc4:	9903      	ldr	r1, [sp, #12]
1004efc6:	f7f4 f8fa 	bl	100431be <Osal_MemCpy>
1004efca:	9800      	ldr	r0, [sp, #0]
1004efcc:	9905      	ldr	r1, [sp, #20]
1004efce:	8141      	strh	r1, [r0, #10]
1004efd0:	4638      	mov	r0, r7
1004efd2:	9904      	ldr	r1, [sp, #16]
1004efd4:	e03a      	b.n	1004f04c <isr_event_handler+0x520>
1004efd6:	02a8      	lsls	r0, r5, #10
1004efd8:	d509      	bpl.n	1004efee <isr_event_handler+0x4c2>
1004efda:	2008      	movs	r0, #8
1004efdc:	73b8      	strb	r0, [r7, #14]
1004efde:	4851      	ldr	r0, [pc, #324]	; (1004f124 <isr_event_handler+0x5f8>)
1004efe0:	8800      	ldrh	r0, [r0, #0]
1004efe2:	0740      	lsls	r0, r0, #29
1004efe4:	0f40      	lsrs	r0, r0, #29
1004efe6:	1c40      	adds	r0, r0, #1
1004efe8:	f7ff fcca 	bl	1004e980 <Reclassify_All_Channels_ucfg>
1004efec:	e030      	b.n	1004f050 <isr_event_handler+0x524>
1004efee:	01a8      	lsls	r0, r5, #6
1004eff0:	d52e      	bpl.n	1004f050 <isr_event_handler+0x524>
1004eff2:	2080      	movs	r0, #128	; 0x80
1004eff4:	9001      	str	r0, [sp, #4]
1004eff6:	4620      	mov	r0, r4
1004eff8:	3040      	adds	r0, #64	; 0x40
1004effa:	8841      	ldrh	r1, [r0, #2]
1004effc:	9109      	str	r1, [sp, #36]	; 0x24
1004effe:	8a01      	ldrh	r1, [r0, #16]
1004f000:	9108      	str	r1, [sp, #32]
1004f002:	88c1      	ldrh	r1, [r0, #6]
1004f004:	9104      	str	r1, [sp, #16]
1004f006:	8a40      	ldrh	r0, [r0, #18]
1004f008:	9007      	str	r0, [sp, #28]
1004f00a:	4845      	ldr	r0, [pc, #276]	; (1004f120 <isr_event_handler+0x5f4>)
1004f00c:	2137      	movs	r1, #55	; 0x37
1004f00e:	6800      	ldr	r0, [r0, #0]
1004f010:	0149      	lsls	r1, r1, #5
1004f012:	1841      	adds	r1, r0, r1
1004f014:	784a      	ldrb	r2, [r1, #1]
1004f016:	9f06      	ldr	r7, [sp, #24]
1004f018:	2303      	movs	r3, #3
1004f01a:	0692      	lsls	r2, r2, #26
1004f01c:	d518      	bpl.n	1004f050 <isr_event_handler+0x524>
1004f01e:	7889      	ldrb	r1, [r1, #2]
1004f020:	0649      	lsls	r1, r1, #25
1004f022:	d515      	bpl.n	1004f050 <isr_event_handler+0x524>
1004f024:	2101      	movs	r1, #1
1004f026:	02c9      	lsls	r1, r1, #11
1004f028:	1840      	adds	r0, r0, r1
1004f02a:	2206      	movs	r2, #6
1004f02c:	6940      	ldr	r0, [r0, #20]
1004f02e:	9901      	ldr	r1, [sp, #4]
1004f030:	f006 f8dc 	bl	100551ec <aci_event_fifo_push_header>
1004f034:	0001      	movs	r1, r0
1004f036:	d00b      	beq.n	1004f050 <isr_event_handler+0x524>
1004f038:	808f      	strh	r7, [r1, #4]
1004f03a:	9a09      	ldr	r2, [sp, #36]	; 0x24
1004f03c:	80ca      	strh	r2, [r1, #6]
1004f03e:	9a08      	ldr	r2, [sp, #32]
1004f040:	810a      	strh	r2, [r1, #8]
1004f042:	9a04      	ldr	r2, [sp, #16]
1004f044:	814a      	strh	r2, [r1, #10]
1004f046:	9a07      	ldr	r2, [sp, #28]
1004f048:	818a      	strh	r2, [r1, #12]
1004f04a:	9801      	ldr	r0, [sp, #4]
1004f04c:	f006 f8ba 	bl	100551c4 <aci_event_fifo_push>
1004f050:	06a8      	lsls	r0, r5, #26
1004f052:	d50a      	bpl.n	1004f06a <isr_event_handler+0x53e>
1004f054:	6a20      	ldr	r0, [r4, #32]
1004f056:	6801      	ldr	r1, [r0, #0]
1004f058:	6221      	str	r1, [r4, #32]
1004f05a:	2100      	movs	r1, #0
1004f05c:	6001      	str	r1, [r0, #0]
1004f05e:	6a22      	ldr	r2, [r4, #32]
1004f060:	2a00      	cmp	r2, #0
1004f062:	d100      	bne.n	1004f066 <isr_event_handler+0x53a>
1004f064:	6261      	str	r1, [r4, #36]	; 0x24
1004f066:	f006 fe6d 	bl	10055d44 <Acl_Tx_Cmpl_Pkt_Handler>
1004f06a:	06e8      	lsls	r0, r5, #27
1004f06c:	d51a      	bpl.n	1004f0a4 <isr_event_handler+0x578>
1004f06e:	f7fd fcd0 	bl	1004ca12 <data_length_extension_csr_ucfg>
1004f072:	2801      	cmp	r0, #1
1004f074:	d052      	beq.n	1004f11c <isr_event_handler+0x5f0>
1004f076:	271f      	movs	r7, #31
1004f078:	7870      	ldrb	r0, [r6, #1]
1004f07a:	1cb1      	adds	r1, r6, #2
1004f07c:	4007      	ands	r7, r0
1004f07e:	69e0      	ldr	r0, [r4, #28]
1004f080:	463a      	mov	r2, r7
1004f082:	6880      	ldr	r0, [r0, #8]
1004f084:	f000 faad 	bl	1004f5e2 <Mem_Buff_Block_Write>
1004f088:	69e0      	ldr	r0, [r4, #28]
1004f08a:	80c7      	strh	r7, [r0, #6]
1004f08c:	69e0      	ldr	r0, [r4, #28]
1004f08e:	2700      	movs	r7, #0
1004f090:	6007      	str	r7, [r0, #0]
1004f092:	7831      	ldrb	r1, [r6, #0]
1004f094:	69e0      	ldr	r0, [r4, #28]
1004f096:	0789      	lsls	r1, r1, #30
1004f098:	0f89      	lsrs	r1, r1, #30
1004f09a:	7301      	strb	r1, [r0, #12]
1004f09c:	69e0      	ldr	r0, [r4, #28]
1004f09e:	f006 fe01 	bl	10055ca4 <Acl_Rcv_Pkt_Handler>
1004f0a2:	61e7      	str	r7, [r4, #28]
1004f0a4:	01e8      	lsls	r0, r5, #7
1004f0a6:	d537      	bpl.n	1004f118 <isr_event_handler+0x5ec>
1004f0a8:	9816      	ldr	r0, [sp, #88]	; 0x58
1004f0aa:	89c1      	ldrh	r1, [r0, #14]
1004f0ac:	2001      	movs	r0, #1
1004f0ae:	0740      	lsls	r0, r0, #29
1004f0b0:	1809      	adds	r1, r1, r0
1004f0b2:	8849      	ldrh	r1, [r1, #2]
1004f0b4:	1808      	adds	r0, r1, r0
1004f0b6:	7801      	ldrb	r1, [r0, #0]
1004f0b8:	0649      	lsls	r1, r1, #25
1004f0ba:	0fcd      	lsrs	r5, r1, #31
1004f0bc:	a907      	add	r1, sp, #28
1004f0be:	f002 f86b 	bl	10051198 <get_scan_addr>
1004f0c2:	20a1      	movs	r0, #161	; 0xa1
1004f0c4:	9001      	str	r0, [sp, #4]
1004f0c6:	7ba6      	ldrb	r6, [r4, #14]
1004f0c8:	9807      	ldr	r0, [sp, #28]
1004f0ca:	9009      	str	r0, [sp, #36]	; 0x24
1004f0cc:	9808      	ldr	r0, [sp, #32]
1004f0ce:	900a      	str	r0, [sp, #40]	; 0x28
1004f0d0:	4813      	ldr	r0, [pc, #76]	; (1004f120 <isr_event_handler+0x5f4>)
1004f0d2:	2107      	movs	r1, #7
1004f0d4:	6800      	ldr	r0, [r0, #0]
1004f0d6:	0209      	lsls	r1, r1, #8
1004f0d8:	1841      	adds	r1, r0, r1
1004f0da:	7909      	ldrb	r1, [r1, #4]
1004f0dc:	2302      	movs	r3, #2
1004f0de:	07c9      	lsls	r1, r1, #31
1004f0e0:	d01a      	beq.n	1004f118 <isr_event_handler+0x5ec>
1004f0e2:	0299      	lsls	r1, r3, #10
1004f0e4:	1d00      	adds	r0, r0, #4
1004f0e6:	1840      	adds	r0, r0, r1
1004f0e8:	220f      	movs	r2, #15
1004f0ea:	6940      	ldr	r0, [r0, #20]
1004f0ec:	9901      	ldr	r1, [sp, #4]
1004f0ee:	f006 f87d 	bl	100551ec <aci_event_fifo_push_header>
1004f0f2:	0004      	movs	r4, r0
1004f0f4:	d010      	beq.n	1004f118 <isr_event_handler+0x5ec>
1004f0f6:	7126      	strb	r6, [r4, #4]
1004f0f8:	1d27      	adds	r7, r4, #4
1004f0fa:	7165      	strb	r5, [r4, #5]
1004f0fc:	2204      	movs	r2, #4
1004f0fe:	a909      	add	r1, sp, #36	; 0x24
1004f100:	1da0      	adds	r0, r4, #6
1004f102:	f7f4 f85c 	bl	100431be <Osal_MemCpy>
1004f106:	2204      	movs	r2, #4
1004f108:	a90a      	add	r1, sp, #40	; 0x28
1004f10a:	1db8      	adds	r0, r7, #6
1004f10c:	f7f4 f857 	bl	100431be <Osal_MemCpy>
1004f110:	4621      	mov	r1, r4
1004f112:	9801      	ldr	r0, [sp, #4]
1004f114:	f006 f856 	bl	100551c4 <aci_event_fifo_push>
1004f118:	b011      	add	sp, #68	; 0x44
1004f11a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f11c:	27ff      	movs	r7, #255	; 0xff
1004f11e:	e7ab      	b.n	1004f078 <isr_event_handler+0x54c>
1004f120:	2000098c 	.word	0x2000098c
1004f124:	200000c0 	.word	0x200000c0

1004f128 <isr_event_handler_scan_data_ucfg>:
1004f128:	4770      	bx	lr
	...

1004f12c <LL_Encrypt_Plain_Data_ucfg>:
1004f12c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004f12e:	460c      	mov	r4, r1
1004f130:	b091      	sub	sp, #68	; 0x44
1004f132:	4601      	mov	r1, r0
1004f134:	2210      	movs	r2, #16
1004f136:	a804      	add	r0, sp, #16
1004f138:	f7f4 f841 	bl	100431be <Osal_MemCpy>
1004f13c:	2210      	movs	r2, #16
1004f13e:	4621      	mov	r1, r4
1004f140:	a808      	add	r0, sp, #32
1004f142:	f7f4 f83c 	bl	100431be <Osal_MemCpy>
1004f146:	a804      	add	r0, sp, #16
1004f148:	9000      	str	r0, [sp, #0]
1004f14a:	a808      	add	r0, sp, #32
1004f14c:	9001      	str	r0, [sp, #4]
1004f14e:	a80c      	add	r0, sp, #48	; 0x30
1004f150:	9002      	str	r0, [sp, #8]
1004f152:	2600      	movs	r6, #0
1004f154:	4668      	mov	r0, sp
1004f156:	7306      	strb	r6, [r0, #12]
1004f158:	4818      	ldr	r0, [pc, #96]	; (1004f1bc <LL_Encrypt_Plain_Data_ucfg+0x90>)
1004f15a:	2141      	movs	r1, #65	; 0x41
1004f15c:	6800      	ldr	r0, [r0, #0]
1004f15e:	0149      	lsls	r1, r1, #5
1004f160:	1845      	adds	r5, r0, r1
1004f162:	2709      	movs	r7, #9
1004f164:	06ff      	lsls	r7, r7, #27
1004f166:	462c      	mov	r4, r5
1004f168:	3480      	adds	r4, #128	; 0x80
1004f16a:	b672      	cpsid	i
1004f16c:	4668      	mov	r0, sp
1004f16e:	7b00      	ldrb	r0, [r0, #12]
1004f170:	2800      	cmp	r0, #0
1004f172:	d008      	beq.n	1004f186 <LL_Encrypt_Plain_Data_ucfg+0x5a>
1004f174:	b662      	cpsie	i
1004f176:	2210      	movs	r2, #16
1004f178:	a90c      	add	r1, sp, #48	; 0x30
1004f17a:	9813      	ldr	r0, [sp, #76]	; 0x4c
1004f17c:	f7f4 f81f 	bl	100431be <Osal_MemCpy>
1004f180:	2000      	movs	r0, #0
1004f182:	b015      	add	sp, #84	; 0x54
1004f184:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f186:	6d28      	ldr	r0, [r5, #80]	; 0x50
1004f188:	6939      	ldr	r1, [r7, #16]
1004f18a:	1a40      	subs	r0, r0, r1
1004f18c:	490c      	ldr	r1, [pc, #48]	; (1004f1c0 <LL_Encrypt_Plain_Data_ucfg+0x94>)
1004f18e:	0200      	lsls	r0, r0, #8
1004f190:	8809      	ldrh	r1, [r1, #0]
1004f192:	0a00      	lsrs	r0, r0, #8
1004f194:	0709      	lsls	r1, r1, #28
1004f196:	d50b      	bpl.n	1004f1b0 <LL_Encrypt_Plain_Data_ucfg+0x84>
1004f198:	9914      	ldr	r1, [sp, #80]	; 0x50
1004f19a:	2900      	cmp	r1, #0
1004f19c:	d108      	bne.n	1004f1b0 <LL_Encrypt_Plain_Data_ucfg+0x84>
1004f19e:	4909      	ldr	r1, [pc, #36]	; (1004f1c4 <LL_Encrypt_Plain_Data_ucfg+0x98>)
1004f1a0:	38ff      	subs	r0, #255	; 0xff
1004f1a2:	4288      	cmp	r0, r1
1004f1a4:	d304      	bcc.n	1004f1b0 <LL_Encrypt_Plain_Data_ucfg+0x84>
1004f1a6:	4668      	mov	r0, sp
1004f1a8:	7306      	strb	r6, [r0, #12]
1004f1aa:	6460      	str	r0, [r4, #68]	; 0x44
1004f1ac:	bf30      	wfi
1004f1ae:	e003      	b.n	1004f1b8 <LL_Encrypt_Plain_Data_ucfg+0x8c>
1004f1b0:	4668      	mov	r0, sp
1004f1b2:	6466      	str	r6, [r4, #68]	; 0x44
1004f1b4:	f7fe fbbe 	bl	1004d934 <encrypt>
1004f1b8:	b662      	cpsie	i
1004f1ba:	e7d6      	b.n	1004f16a <LL_Encrypt_Plain_Data_ucfg+0x3e>
1004f1bc:	2000098c 	.word	0x2000098c
1004f1c0:	200000c0 	.word	0x200000c0
1004f1c4:	007fff02 	.word	0x007fff02

1004f1c8 <LL_Set_LTK>:
1004f1c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004f1ca:	4614      	mov	r4, r2
1004f1cc:	460a      	mov	r2, r1
1004f1ce:	4605      	mov	r5, r0
1004f1d0:	2101      	movs	r1, #1
1004f1d2:	4610      	mov	r0, r2
1004f1d4:	f000 ff98 	bl	10050108 <get_connection_no>
1004f1d8:	4601      	mov	r1, r0
1004f1da:	2808      	cmp	r0, #8
1004f1dc:	d301      	bcc.n	1004f1e2 <LL_Set_LTK+0x1a>
1004f1de:	2002      	movs	r0, #2
1004f1e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004f1e2:	481c      	ldr	r0, [pc, #112]	; (1004f254 <LL_Set_LTK+0x8c>)
1004f1e4:	2209      	movs	r2, #9
1004f1e6:	6800      	ldr	r0, [r0, #0]
1004f1e8:	0212      	lsls	r2, r2, #8
1004f1ea:	1880      	adds	r0, r0, r2
1004f1ec:	6b02      	ldr	r2, [r0, #48]	; 0x30
1004f1ee:	2058      	movs	r0, #88	; 0x58
1004f1f0:	4348      	muls	r0, r1
1004f1f2:	1810      	adds	r0, r2, r0
1004f1f4:	4a18      	ldr	r2, [pc, #96]	; (1004f258 <LL_Set_LTK+0x90>)
1004f1f6:	0189      	lsls	r1, r1, #6
1004f1f8:	188b      	adds	r3, r1, r2
1004f1fa:	6b42      	ldr	r2, [r0, #52]	; 0x34
1004f1fc:	2d00      	cmp	r5, #0
1004f1fe:	d007      	beq.n	1004f210 <LL_Set_LTK+0x48>
1004f200:	4916      	ldr	r1, [pc, #88]	; (1004f25c <LL_Set_LTK+0x94>)
1004f202:	b672      	cpsid	i
1004f204:	7943      	ldrb	r3, [r0, #5]
1004f206:	079b      	lsls	r3, r3, #30
1004f208:	d00d      	beq.n	1004f226 <LL_Set_LTK+0x5e>
1004f20a:	b662      	cpsie	i
1004f20c:	203a      	movs	r0, #58	; 0x3a
1004f20e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004f210:	2100      	movs	r1, #0
1004f212:	185f      	adds	r7, r3, r1
1004f214:	5c66      	ldrb	r6, [r4, r1]
1004f216:	3720      	adds	r7, #32
1004f218:	73be      	strb	r6, [r7, #14]
1004f21a:	1c49      	adds	r1, r1, #1
1004f21c:	b2c9      	uxtb	r1, r1
1004f21e:	2910      	cmp	r1, #16
1004f220:	d3f7      	bcc.n	1004f212 <LL_Set_LTK+0x4a>
1004f222:	490f      	ldr	r1, [pc, #60]	; (1004f260 <LL_Set_LTK+0x98>)
1004f224:	e7ed      	b.n	1004f202 <LL_Set_LTK+0x3a>
1004f226:	6011      	str	r1, [r2, #0]
1004f228:	7941      	ldrb	r1, [r0, #5]
1004f22a:	2201      	movs	r2, #1
1004f22c:	4311      	orrs	r1, r2
1004f22e:	7141      	strb	r1, [r0, #5]
1004f230:	2d00      	cmp	r5, #0
1004f232:	d009      	beq.n	1004f248 <LL_Set_LTK+0x80>
1004f234:	4807      	ldr	r0, [pc, #28]	; (1004f254 <LL_Set_LTK+0x8c>)
1004f236:	2247      	movs	r2, #71	; 0x47
1004f238:	6800      	ldr	r0, [r0, #0]
1004f23a:	2108      	movs	r1, #8
1004f23c:	0152      	lsls	r2, r2, #5
1004f23e:	1880      	adds	r0, r0, r2
1004f240:	73c1      	strb	r1, [r0, #15]
1004f242:	b662      	cpsie	i
1004f244:	2000      	movs	r0, #0
1004f246:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004f248:	2201      	movs	r2, #1
1004f24a:	6901      	ldr	r1, [r0, #16]
1004f24c:	0452      	lsls	r2, r2, #17
1004f24e:	4311      	orrs	r1, r2
1004f250:	6101      	str	r1, [r0, #16]
1004f252:	e7f6      	b.n	1004f242 <LL_Set_LTK+0x7a>
1004f254:	2000098c 	.word	0x2000098c
1004f258:	200000cc 	.word	0x200000cc
1004f25c:	060d0203 	.word	0x060d0203
1004f260:	00050103 	.word	0x00050103

1004f264 <Dynamic_allocator>:
1004f264:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004f266:	b081      	sub	sp, #4
1004f268:	2213      	movs	r2, #19
1004f26a:	01d2      	lsls	r2, r2, #7
1004f26c:	2101      	movs	r1, #1
1004f26e:	a801      	add	r0, sp, #4
1004f270:	f000 f92b 	bl	1004f4ca <Mem_assign>
1004f274:	4c91      	ldr	r4, [pc, #580]	; (1004f4bc <Dynamic_allocator+0x258>)
1004f276:	2204      	movs	r2, #4
1004f278:	6020      	str	r0, [r4, #0]
1004f27a:	2143      	movs	r1, #67	; 0x43
1004f27c:	a801      	add	r0, sp, #4
1004f27e:	f000 f924 	bl	1004f4ca <Mem_assign>
1004f282:	2501      	movs	r5, #1
1004f284:	6821      	ldr	r1, [r4, #0]
1004f286:	02ed      	lsls	r5, r5, #11
1004f288:	1949      	adds	r1, r1, r5
1004f28a:	6088      	str	r0, [r1, #8]
1004f28c:	2204      	movs	r2, #4
1004f28e:	2143      	movs	r1, #67	; 0x43
1004f290:	a801      	add	r0, sp, #4
1004f292:	f000 f91a 	bl	1004f4ca <Mem_assign>
1004f296:	6821      	ldr	r1, [r4, #0]
1004f298:	2204      	movs	r2, #4
1004f29a:	1949      	adds	r1, r1, r5
1004f29c:	60c8      	str	r0, [r1, #12]
1004f29e:	21ff      	movs	r1, #255	; 0xff
1004f2a0:	3184      	adds	r1, #132	; 0x84
1004f2a2:	a801      	add	r0, sp, #4
1004f2a4:	f000 f911 	bl	1004f4ca <Mem_assign>
1004f2a8:	6821      	ldr	r1, [r4, #0]
1004f2aa:	220c      	movs	r2, #12
1004f2ac:	1949      	adds	r1, r1, r5
1004f2ae:	4d84      	ldr	r5, [pc, #528]	; (1004f4c0 <Dynamic_allocator+0x25c>)
1004f2b0:	6108      	str	r0, [r1, #16]
1004f2b2:	7fa9      	ldrb	r1, [r5, #30]
1004f2b4:	a801      	add	r0, sp, #4
1004f2b6:	310b      	adds	r1, #11
1004f2b8:	f000 f907 	bl	1004f4ca <Mem_assign>
1004f2bc:	2609      	movs	r6, #9
1004f2be:	6821      	ldr	r1, [r4, #0]
1004f2c0:	0236      	lsls	r6, r6, #8
1004f2c2:	1989      	adds	r1, r1, r6
1004f2c4:	6548      	str	r0, [r1, #84]	; 0x54
1004f2c6:	7fa9      	ldrb	r1, [r5, #30]
1004f2c8:	2220      	movs	r2, #32
1004f2ca:	a801      	add	r0, sp, #4
1004f2cc:	f000 f8fd 	bl	1004f4ca <Mem_assign>
1004f2d0:	6821      	ldr	r1, [r4, #0]
1004f2d2:	2210      	movs	r2, #16
1004f2d4:	1989      	adds	r1, r1, r6
1004f2d6:	6448      	str	r0, [r1, #68]	; 0x44
1004f2d8:	7fa9      	ldrb	r1, [r5, #30]
1004f2da:	a801      	add	r0, sp, #4
1004f2dc:	f000 f8f5 	bl	1004f4ca <Mem_assign>
1004f2e0:	6821      	ldr	r1, [r4, #0]
1004f2e2:	2228      	movs	r2, #40	; 0x28
1004f2e4:	1989      	adds	r1, r1, r6
1004f2e6:	6488      	str	r0, [r1, #72]	; 0x48
1004f2e8:	2105      	movs	r1, #5
1004f2ea:	a801      	add	r0, sp, #4
1004f2ec:	f000 f8ed 	bl	1004f4ca <Mem_assign>
1004f2f0:	6821      	ldr	r1, [r4, #0]
1004f2f2:	2230      	movs	r2, #48	; 0x30
1004f2f4:	1989      	adds	r1, r1, r6
1004f2f6:	6508      	str	r0, [r1, #80]	; 0x50
1004f2f8:	2105      	movs	r1, #5
1004f2fa:	a801      	add	r0, sp, #4
1004f2fc:	f000 f8e5 	bl	1004f4ca <Mem_assign>
1004f300:	6821      	ldr	r1, [r4, #0]
1004f302:	22ff      	movs	r2, #255	; 0xff
1004f304:	1989      	adds	r1, r1, r6
1004f306:	64c8      	str	r0, [r1, #76]	; 0x4c
1004f308:	3201      	adds	r2, #1
1004f30a:	2101      	movs	r1, #1
1004f30c:	a801      	add	r0, sp, #4
1004f30e:	f000 f8dc 	bl	1004f4ca <Mem_assign>
1004f312:	6821      	ldr	r1, [r4, #0]
1004f314:	2258      	movs	r2, #88	; 0x58
1004f316:	1989      	adds	r1, r1, r6
1004f318:	65c8      	str	r0, [r1, #92]	; 0x5c
1004f31a:	7fa9      	ldrb	r1, [r5, #30]
1004f31c:	a801      	add	r0, sp, #4
1004f31e:	f000 f8d4 	bl	1004f4ca <Mem_assign>
1004f322:	6821      	ldr	r1, [r4, #0]
1004f324:	2220      	movs	r2, #32
1004f326:	1989      	adds	r1, r1, r6
1004f328:	6308      	str	r0, [r1, #48]	; 0x30
1004f32a:	7fa9      	ldrb	r1, [r5, #30]
1004f32c:	a801      	add	r0, sp, #4
1004f32e:	f000 f8cc 	bl	1004f4ca <Mem_assign>
1004f332:	6821      	ldr	r1, [r4, #0]
1004f334:	1989      	adds	r1, r1, r6
1004f336:	6348      	str	r0, [r1, #52]	; 0x34
1004f338:	8baa      	ldrh	r2, [r5, #28]
1004f33a:	2101      	movs	r1, #1
1004f33c:	a801      	add	r0, sp, #4
1004f33e:	f000 f8c4 	bl	1004f4ca <Mem_assign>
1004f342:	270f      	movs	r7, #15
1004f344:	6821      	ldr	r1, [r4, #0]
1004f346:	01ff      	lsls	r7, r7, #7
1004f348:	19c9      	adds	r1, r1, r7
1004f34a:	6008      	str	r0, [r1, #0]
1004f34c:	8b29      	ldrh	r1, [r5, #24]
1004f34e:	2228      	movs	r2, #40	; 0x28
1004f350:	a801      	add	r0, sp, #4
1004f352:	f000 f8ba 	bl	1004f4ca <Mem_assign>
1004f356:	2107      	movs	r1, #7
1004f358:	6822      	ldr	r2, [r4, #0]
1004f35a:	0209      	lsls	r1, r1, #8
1004f35c:	1851      	adds	r1, r2, r1
1004f35e:	6788      	str	r0, [r1, #120]	; 0x78
1004f360:	8b69      	ldrh	r1, [r5, #26]
1004f362:	2230      	movs	r2, #48	; 0x30
1004f364:	a801      	add	r0, sp, #4
1004f366:	f000 f8b0 	bl	1004f4ca <Mem_assign>
1004f36a:	2107      	movs	r1, #7
1004f36c:	6822      	ldr	r2, [r4, #0]
1004f36e:	0209      	lsls	r1, r1, #8
1004f370:	1851      	adds	r1, r2, r1
1004f372:	67c8      	str	r0, [r1, #124]	; 0x7c
1004f374:	220c      	movs	r2, #12
1004f376:	2101      	movs	r1, #1
1004f378:	a801      	add	r0, sp, #4
1004f37a:	f000 f8a6 	bl	1004f4ca <Mem_assign>
1004f37e:	6821      	ldr	r1, [r4, #0]
1004f380:	220c      	movs	r2, #12
1004f382:	1989      	adds	r1, r1, r6
1004f384:	62c8      	str	r0, [r1, #44]	; 0x2c
1004f386:	2101      	movs	r1, #1
1004f388:	a801      	add	r0, sp, #4
1004f38a:	f000 f89e 	bl	1004f4ca <Mem_assign>
1004f38e:	6821      	ldr	r1, [r4, #0]
1004f390:	2228      	movs	r2, #40	; 0x28
1004f392:	1989      	adds	r1, r1, r6
1004f394:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
1004f396:	6088      	str	r0, [r1, #8]
1004f398:	4628      	mov	r0, r5
1004f39a:	3020      	adds	r0, #32
1004f39c:	9000      	str	r0, [sp, #0]
1004f39e:	7841      	ldrb	r1, [r0, #1]
1004f3a0:	a801      	add	r0, sp, #4
1004f3a2:	f000 f892 	bl	1004f4ca <Mem_assign>
1004f3a6:	6821      	ldr	r1, [r4, #0]
1004f3a8:	2204      	movs	r2, #4
1004f3aa:	1989      	adds	r1, r1, r6
1004f3ac:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
1004f3ae:	6889      	ldr	r1, [r1, #8]
1004f3b0:	6088      	str	r0, [r1, #8]
1004f3b2:	9800      	ldr	r0, [sp, #0]
1004f3b4:	7841      	ldrb	r1, [r0, #1]
1004f3b6:	a801      	add	r0, sp, #4
1004f3b8:	1c49      	adds	r1, r1, #1
1004f3ba:	f000 f886 	bl	1004f4ca <Mem_assign>
1004f3be:	6821      	ldr	r1, [r4, #0]
1004f3c0:	2210      	movs	r2, #16
1004f3c2:	1989      	adds	r1, r1, r6
1004f3c4:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
1004f3c6:	6889      	ldr	r1, [r1, #8]
1004f3c8:	6048      	str	r0, [r1, #4]
1004f3ca:	7fa9      	ldrb	r1, [r5, #30]
1004f3cc:	a801      	add	r0, sp, #4
1004f3ce:	f000 f87c 	bl	1004f4ca <Mem_assign>
1004f3d2:	6821      	ldr	r1, [r4, #0]
1004f3d4:	2202      	movs	r2, #2
1004f3d6:	19c9      	adds	r1, r1, r7
1004f3d8:	67c8      	str	r0, [r1, #124]	; 0x7c
1004f3da:	7fa9      	ldrb	r1, [r5, #30]
1004f3dc:	a801      	add	r0, sp, #4
1004f3de:	f000 f874 	bl	1004f4ca <Mem_assign>
1004f3e2:	6821      	ldr	r1, [r4, #0]
1004f3e4:	2202      	movs	r2, #2
1004f3e6:	19c9      	adds	r1, r1, r7
1004f3e8:	6548      	str	r0, [r1, #84]	; 0x54
1004f3ea:	7fa9      	ldrb	r1, [r5, #30]
1004f3ec:	a801      	add	r0, sp, #4
1004f3ee:	f000 f86c 	bl	1004f4ca <Mem_assign>
1004f3f2:	6821      	ldr	r1, [r4, #0]
1004f3f4:	2202      	movs	r2, #2
1004f3f6:	19c9      	adds	r1, r1, r7
1004f3f8:	6588      	str	r0, [r1, #88]	; 0x58
1004f3fa:	7fa9      	ldrb	r1, [r5, #30]
1004f3fc:	a801      	add	r0, sp, #4
1004f3fe:	f000 f864 	bl	1004f4ca <Mem_assign>
1004f402:	6821      	ldr	r1, [r4, #0]
1004f404:	2202      	movs	r2, #2
1004f406:	19c9      	adds	r1, r1, r7
1004f408:	65c8      	str	r0, [r1, #92]	; 0x5c
1004f40a:	7fa9      	ldrb	r1, [r5, #30]
1004f40c:	a801      	add	r0, sp, #4
1004f40e:	f000 f85c 	bl	1004f4ca <Mem_assign>
1004f412:	6821      	ldr	r1, [r4, #0]
1004f414:	2201      	movs	r2, #1
1004f416:	19c9      	adds	r1, r1, r7
1004f418:	6608      	str	r0, [r1, #96]	; 0x60
1004f41a:	7fa9      	ldrb	r1, [r5, #30]
1004f41c:	a801      	add	r0, sp, #4
1004f41e:	1c49      	adds	r1, r1, #1
1004f420:	f000 f853 	bl	1004f4ca <Mem_assign>
1004f424:	6821      	ldr	r1, [r4, #0]
1004f426:	2210      	movs	r2, #16
1004f428:	19c9      	adds	r1, r1, r7
1004f42a:	6788      	str	r0, [r1, #120]	; 0x78
1004f42c:	210b      	movs	r1, #11
1004f42e:	a801      	add	r0, sp, #4
1004f430:	f000 f84b 	bl	1004f4ca <Mem_assign>
1004f434:	2107      	movs	r1, #7
1004f436:	6822      	ldr	r2, [r4, #0]
1004f438:	0209      	lsls	r1, r1, #8
1004f43a:	1851      	adds	r1, r2, r1
1004f43c:	6188      	str	r0, [r1, #24]
1004f43e:	2204      	movs	r2, #4
1004f440:	2180      	movs	r1, #128	; 0x80
1004f442:	a801      	add	r0, sp, #4
1004f444:	f000 f841 	bl	1004f4ca <Mem_assign>
1004f448:	6821      	ldr	r1, [r4, #0]
1004f44a:	1989      	adds	r1, r1, r6
1004f44c:	6388      	str	r0, [r1, #56]	; 0x38
1004f44e:	9a02      	ldr	r2, [sp, #8]
1004f450:	20dc      	movs	r0, #220	; 0xdc
1004f452:	4342      	muls	r2, r0
1004f454:	2101      	movs	r1, #1
1004f456:	a801      	add	r0, sp, #4
1004f458:	3244      	adds	r2, #68	; 0x44
1004f45a:	f000 f836 	bl	1004f4ca <Mem_assign>
1004f45e:	6821      	ldr	r1, [r4, #0]
1004f460:	1989      	adds	r1, r1, r6
1004f462:	63c8      	str	r0, [r1, #60]	; 0x3c
1004f464:	9a02      	ldr	r2, [sp, #8]
1004f466:	20d8      	movs	r0, #216	; 0xd8
1004f468:	4342      	muls	r2, r0
1004f46a:	2101      	movs	r1, #1
1004f46c:	a801      	add	r0, sp, #4
1004f46e:	322c      	adds	r2, #44	; 0x2c
1004f470:	f000 f82b 	bl	1004f4ca <Mem_assign>
1004f474:	6821      	ldr	r1, [r4, #0]
1004f476:	22f0      	movs	r2, #240	; 0xf0
1004f478:	1989      	adds	r1, r1, r6
1004f47a:	6408      	str	r0, [r1, #64]	; 0x40
1004f47c:	2101      	movs	r1, #1
1004f47e:	a801      	add	r0, sp, #4
1004f480:	f000 f823 	bl	1004f4ca <Mem_assign>
1004f484:	4c0f      	ldr	r4, [pc, #60]	; (1004f4c4 <Dynamic_allocator+0x260>)
1004f486:	227c      	movs	r2, #124	; 0x7c
1004f488:	6020      	str	r0, [r4, #0]
1004f48a:	7fa9      	ldrb	r1, [r5, #30]
1004f48c:	a801      	add	r0, sp, #4
1004f48e:	f000 f81c 	bl	1004f4ca <Mem_assign>
1004f492:	6821      	ldr	r1, [r4, #0]
1004f494:	2208      	movs	r2, #8
1004f496:	67c8      	str	r0, [r1, #124]	; 0x7c
1004f498:	2103      	movs	r1, #3
1004f49a:	a801      	add	r0, sp, #4
1004f49c:	f000 f815 	bl	1004f4ca <Mem_assign>
1004f4a0:	6821      	ldr	r1, [r4, #0]
1004f4a2:	2228      	movs	r2, #40	; 0x28
1004f4a4:	3180      	adds	r1, #128	; 0x80
1004f4a6:	6008      	str	r0, [r1, #0]
1004f4a8:	2101      	movs	r1, #1
1004f4aa:	a801      	add	r0, sp, #4
1004f4ac:	f000 f80d 	bl	1004f4ca <Mem_assign>
1004f4b0:	6821      	ldr	r1, [r4, #0]
1004f4b2:	3180      	adds	r1, #128	; 0x80
1004f4b4:	6048      	str	r0, [r1, #4]
1004f4b6:	9801      	ldr	r0, [sp, #4]
1004f4b8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1004f4ba:	0000      	.short	0x0000
1004f4bc:	2000098c 	.word	0x2000098c
1004f4c0:	200002cc 	.word	0x200002cc
1004f4c4:	20000990 	.word	0x20000990

1004f4c8 <Dynamic_allocator_noRet>:
1004f4c8:	4770      	bx	lr

1004f4ca <Mem_assign>:
1004f4ca:	b510      	push	{r4, lr}
1004f4cc:	4603      	mov	r3, r0
1004f4ce:	6800      	ldr	r0, [r0, #0]
1004f4d0:	2403      	movs	r4, #3
1004f4d2:	1e40      	subs	r0, r0, #1
1004f4d4:	4320      	orrs	r0, r4
1004f4d6:	4351      	muls	r1, r2
1004f4d8:	1c40      	adds	r0, r0, #1
1004f4da:	1841      	adds	r1, r0, r1
1004f4dc:	6019      	str	r1, [r3, #0]
1004f4de:	bd10      	pop	{r4, pc}

1004f4e0 <mem_alloc_ctx_init>:
1004f4e0:	b5f0      	push	{r4, r5, r6, r7, lr}
1004f4e2:	4827      	ldr	r0, [pc, #156]	; (1004f580 <mem_alloc_ctx_init+0xa0>)
1004f4e4:	2109      	movs	r1, #9
1004f4e6:	6803      	ldr	r3, [r0, #0]
1004f4e8:	0209      	lsls	r1, r1, #8
1004f4ea:	185c      	adds	r4, r3, r1
1004f4ec:	6d60      	ldr	r0, [r4, #84]	; 0x54
1004f4ee:	2211      	movs	r2, #17
1004f4f0:	01d2      	lsls	r2, r2, #7
1004f4f2:	4605      	mov	r5, r0
1004f4f4:	189a      	adds	r2, r3, r2
1004f4f6:	350c      	adds	r5, #12
1004f4f8:	6455      	str	r5, [r2, #68]	; 0x44
1004f4fa:	6410      	str	r0, [r2, #64]	; 0x40
1004f4fc:	350c      	adds	r5, #12
1004f4fe:	6495      	str	r5, [r2, #72]	; 0x48
1004f500:	350c      	adds	r5, #12
1004f502:	64d5      	str	r5, [r2, #76]	; 0x4c
1004f504:	350c      	adds	r5, #12
1004f506:	6515      	str	r5, [r2, #80]	; 0x50
1004f508:	350c      	adds	r5, #12
1004f50a:	6555      	str	r5, [r2, #84]	; 0x54
1004f50c:	350c      	adds	r5, #12
1004f50e:	6595      	str	r5, [r2, #88]	; 0x58
1004f510:	4602      	mov	r2, r0
1004f512:	3254      	adds	r2, #84	; 0x54
1004f514:	6062      	str	r2, [r4, #4]
1004f516:	320c      	adds	r2, #12
1004f518:	60a2      	str	r2, [r4, #8]
1004f51a:	320c      	adds	r2, #12
1004f51c:	60e2      	str	r2, [r4, #12]
1004f51e:	3078      	adds	r0, #120	; 0x78
1004f520:	6120      	str	r0, [r4, #16]
1004f522:	2000      	movs	r0, #0
1004f524:	4a17      	ldr	r2, [pc, #92]	; (1004f584 <mem_alloc_ctx_init+0xa4>)
1004f526:	185c      	adds	r4, r3, r1
1004f528:	e011      	b.n	1004f54e <mem_alloc_ctx_init+0x6e>
1004f52a:	6c63      	ldr	r3, [r4, #68]	; 0x44
1004f52c:	0145      	lsls	r5, r0, #5
1004f52e:	195e      	adds	r6, r3, r5
1004f530:	2358      	movs	r3, #88	; 0x58
1004f532:	4343      	muls	r3, r0
1004f534:	461d      	mov	r5, r3
1004f536:	6b27      	ldr	r7, [r4, #48]	; 0x30
1004f538:	3334      	adds	r3, #52	; 0x34
1004f53a:	50fe      	str	r6, [r7, r3]
1004f53c:	230c      	movs	r3, #12
1004f53e:	4343      	muls	r3, r0
1004f540:	6d66      	ldr	r6, [r4, #84]	; 0x54
1004f542:	3384      	adds	r3, #132	; 0x84
1004f544:	18f3      	adds	r3, r6, r3
1004f546:	3528      	adds	r5, #40	; 0x28
1004f548:	6b26      	ldr	r6, [r4, #48]	; 0x30
1004f54a:	1c40      	adds	r0, r0, #1
1004f54c:	5173      	str	r3, [r6, r5]
1004f54e:	7f93      	ldrb	r3, [r2, #30]
1004f550:	4283      	cmp	r3, r0
1004f552:	d8ea      	bhi.n	1004f52a <mem_alloc_ctx_init+0x4a>
1004f554:	4b0a      	ldr	r3, [pc, #40]	; (1004f580 <mem_alloc_ctx_init+0xa0>)
1004f556:	2000      	movs	r0, #0
1004f558:	681c      	ldr	r4, [r3, #0]
1004f55a:	1864      	adds	r4, r4, r1
1004f55c:	e007      	b.n	1004f56e <mem_alloc_ctx_init+0x8e>
1004f55e:	6ca5      	ldr	r5, [r4, #72]	; 0x48
1004f560:	0106      	lsls	r6, r0, #4
1004f562:	19ae      	adds	r6, r5, r6
1004f564:	0145      	lsls	r5, r0, #5
1004f566:	3508      	adds	r5, #8
1004f568:	6b67      	ldr	r7, [r4, #52]	; 0x34
1004f56a:	1c40      	adds	r0, r0, #1
1004f56c:	517e      	str	r6, [r7, r5]
1004f56e:	7f95      	ldrb	r5, [r2, #30]
1004f570:	4285      	cmp	r5, r0
1004f572:	d8f4      	bhi.n	1004f55e <mem_alloc_ctx_init+0x7e>
1004f574:	68d0      	ldr	r0, [r2, #12]
1004f576:	681a      	ldr	r2, [r3, #0]
1004f578:	1851      	adds	r1, r2, r1
1004f57a:	6608      	str	r0, [r1, #96]	; 0x60
1004f57c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f57e:	0000      	.short	0x0000
1004f580:	2000098c 	.word	0x2000098c
1004f584:	200002cc 	.word	0x200002cc

1004f588 <Mem_Buff_Append>:
1004f588:	6802      	ldr	r2, [r0, #0]
1004f58a:	2a00      	cmp	r2, #0
1004f58c:	d003      	beq.n	1004f596 <Mem_Buff_Append+0xe>
1004f58e:	4610      	mov	r0, r2
1004f590:	6812      	ldr	r2, [r2, #0]
1004f592:	2a00      	cmp	r2, #0
1004f594:	d1fb      	bne.n	1004f58e <Mem_Buff_Append+0x6>
1004f596:	6001      	str	r1, [r0, #0]
1004f598:	4770      	bx	lr

1004f59a <Mem_Buff_Block_Copy>:
1004f59a:	b570      	push	{r4, r5, r6, lr}
1004f59c:	460c      	mov	r4, r1
1004f59e:	211f      	movs	r1, #31
1004f5a0:	1e52      	subs	r2, r2, #1
1004f5a2:	430a      	orrs	r2, r1
1004f5a4:	4605      	mov	r5, r0
1004f5a6:	1c52      	adds	r2, r2, #1
1004f5a8:	2000      	movs	r0, #0
1004f5aa:	0411      	lsls	r1, r2, #16
1004f5ac:	0d4e      	lsrs	r6, r1, #21
1004f5ae:	d017      	beq.n	1004f5e0 <Mem_Buff_Block_Copy+0x46>
1004f5b0:	4621      	mov	r1, r4
1004f5b2:	3108      	adds	r1, #8
1004f5b4:	1a6a      	subs	r2, r5, r1
1004f5b6:	4628      	mov	r0, r5
1004f5b8:	2a00      	cmp	r2, #0
1004f5ba:	dd01      	ble.n	1004f5c0 <Mem_Buff_Block_Copy+0x26>
1004f5bc:	2a08      	cmp	r2, #8
1004f5be:	db03      	blt.n	1004f5c8 <Mem_Buff_Block_Copy+0x2e>
1004f5c0:	2220      	movs	r2, #32
1004f5c2:	f7f8 fdeb 	bl	1004819c <__aeabi_memmove>
1004f5c6:	e004      	b.n	1004f5d2 <Mem_Buff_Block_Copy+0x38>
1004f5c8:	2208      	movs	r2, #8
1004f5ca:	c908      	ldmia	r1!, {r3}
1004f5cc:	1e52      	subs	r2, r2, #1
1004f5ce:	c008      	stmia	r0!, {r3}
1004f5d0:	d1fb      	bne.n	1004f5ca <Mem_Buff_Block_Copy+0x30>
1004f5d2:	3520      	adds	r5, #32
1004f5d4:	4620      	mov	r0, r4
1004f5d6:	1e76      	subs	r6, r6, #1
1004f5d8:	6824      	ldr	r4, [r4, #0]
1004f5da:	0436      	lsls	r6, r6, #16
1004f5dc:	0c36      	lsrs	r6, r6, #16
1004f5de:	d1e7      	bne.n	1004f5b0 <Mem_Buff_Block_Copy+0x16>
1004f5e0:	bd70      	pop	{r4, r5, r6, pc}

1004f5e2 <Mem_Buff_Block_Write>:
1004f5e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004f5e4:	4604      	mov	r4, r0
1004f5e6:	460d      	mov	r5, r1
1004f5e8:	1e50      	subs	r0, r2, #1
1004f5ea:	211f      	movs	r1, #31
1004f5ec:	4308      	orrs	r0, r1
1004f5ee:	1c40      	adds	r0, r0, #1
1004f5f0:	0400      	lsls	r0, r0, #16
1004f5f2:	4616      	mov	r6, r2
1004f5f4:	0d47      	lsrs	r7, r0, #21
1004f5f6:	d01e      	beq.n	1004f636 <Mem_Buff_Block_Write+0x54>
1004f5f8:	4620      	mov	r0, r4
1004f5fa:	3008      	adds	r0, #8
1004f5fc:	4629      	mov	r1, r5
1004f5fe:	1a42      	subs	r2, r0, r1
1004f600:	2a00      	cmp	r2, #0
1004f602:	dd01      	ble.n	1004f608 <Mem_Buff_Block_Write+0x26>
1004f604:	2a08      	cmp	r2, #8
1004f606:	db03      	blt.n	1004f610 <Mem_Buff_Block_Write+0x2e>
1004f608:	2220      	movs	r2, #32
1004f60a:	f7f8 fdc7 	bl	1004819c <__aeabi_memmove>
1004f60e:	e004      	b.n	1004f61a <Mem_Buff_Block_Write+0x38>
1004f610:	2208      	movs	r2, #8
1004f612:	c908      	ldmia	r1!, {r3}
1004f614:	1e52      	subs	r2, r2, #1
1004f616:	c008      	stmia	r0!, {r3}
1004f618:	d1fb      	bne.n	1004f612 <Mem_Buff_Block_Write+0x30>
1004f61a:	3520      	adds	r5, #32
1004f61c:	2e20      	cmp	r6, #32
1004f61e:	d201      	bcs.n	1004f624 <Mem_Buff_Block_Write+0x42>
1004f620:	4630      	mov	r0, r6
1004f622:	e000      	b.n	1004f626 <Mem_Buff_Block_Write+0x44>
1004f624:	2020      	movs	r0, #32
1004f626:	80a0      	strh	r0, [r4, #4]
1004f628:	1a30      	subs	r0, r6, r0
1004f62a:	1e7f      	subs	r7, r7, #1
1004f62c:	6824      	ldr	r4, [r4, #0]
1004f62e:	043f      	lsls	r7, r7, #16
1004f630:	b286      	uxth	r6, r0
1004f632:	0c3f      	lsrs	r7, r7, #16
1004f634:	d1e0      	bne.n	1004f5f8 <Mem_Buff_Block_Write+0x16>
1004f636:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1004f638 <Mem_Buff_Clone>:
1004f638:	b570      	push	{r4, r5, r6, lr}
1004f63a:	460c      	mov	r4, r1
1004f63c:	4605      	mov	r5, r0
1004f63e:	e00a      	b.n	1004f656 <Mem_Buff_Clone+0x1e>
1004f640:	4621      	mov	r1, r4
1004f642:	4628      	mov	r0, r5
1004f644:	88a2      	ldrh	r2, [r4, #4]
1004f646:	3108      	adds	r1, #8
1004f648:	3008      	adds	r0, #8
1004f64a:	f7f3 fdb8 	bl	100431be <Osal_MemCpy>
1004f64e:	88a0      	ldrh	r0, [r4, #4]
1004f650:	80a8      	strh	r0, [r5, #4]
1004f652:	682d      	ldr	r5, [r5, #0]
1004f654:	6824      	ldr	r4, [r4, #0]
1004f656:	2d00      	cmp	r5, #0
1004f658:	d001      	beq.n	1004f65e <Mem_Buff_Clone+0x26>
1004f65a:	2c00      	cmp	r4, #0
1004f65c:	d1f0      	bne.n	1004f640 <Mem_Buff_Clone+0x8>
1004f65e:	4325      	orrs	r5, r4
1004f660:	d001      	beq.n	1004f666 <Mem_Buff_Clone+0x2e>
1004f662:	2047      	movs	r0, #71	; 0x47
1004f664:	bd70      	pop	{r4, r5, r6, pc}
1004f666:	2000      	movs	r0, #0
1004f668:	bd70      	pop	{r4, r5, r6, pc}

1004f66a <Mem_Buff_Cmp>:
1004f66a:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004f66c:	b081      	sub	sp, #4
1004f66e:	461d      	mov	r5, r3
1004f670:	4669      	mov	r1, sp
1004f672:	2a00      	cmp	r2, #0
1004f674:	d009      	beq.n	1004f68a <Mem_Buff_Cmp+0x20>
1004f676:	2800      	cmp	r0, #0
1004f678:	d00c      	beq.n	1004f694 <Mem_Buff_Cmp+0x2a>
1004f67a:	8884      	ldrh	r4, [r0, #4]
1004f67c:	4294      	cmp	r4, r2
1004f67e:	d804      	bhi.n	1004f68a <Mem_Buff_Cmp+0x20>
1004f680:	1b12      	subs	r2, r2, r4
1004f682:	0412      	lsls	r2, r2, #16
1004f684:	6800      	ldr	r0, [r0, #0]
1004f686:	0c12      	lsrs	r2, r2, #16
1004f688:	d1f5      	bne.n	1004f676 <Mem_Buff_Cmp+0xc>
1004f68a:	800a      	strh	r2, [r1, #0]
1004f68c:	0004      	movs	r4, r0
1004f68e:	d001      	beq.n	1004f694 <Mem_Buff_Cmp+0x2a>
1004f690:	2600      	movs	r6, #0
1004f692:	e01f      	b.n	1004f6d4 <Mem_Buff_Cmp+0x6a>
1004f694:	4618      	mov	r0, r3
1004f696:	b005      	add	sp, #20
1004f698:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f69a:	4668      	mov	r0, sp
1004f69c:	88a1      	ldrh	r1, [r4, #4]
1004f69e:	8800      	ldrh	r0, [r0, #0]
1004f6a0:	4281      	cmp	r1, r0
1004f6a2:	d913      	bls.n	1004f6cc <Mem_Buff_Cmp+0x62>
1004f6a4:	1a09      	subs	r1, r1, r0
1004f6a6:	b28f      	uxth	r7, r1
1004f6a8:	42af      	cmp	r7, r5
1004f6aa:	d300      	bcc.n	1004f6ae <Mem_Buff_Cmp+0x44>
1004f6ac:	462f      	mov	r7, r5
1004f6ae:	9902      	ldr	r1, [sp, #8]
1004f6b0:	1820      	adds	r0, r4, r0
1004f6b2:	1989      	adds	r1, r1, r6
1004f6b4:	463a      	mov	r2, r7
1004f6b6:	3008      	adds	r0, #8
1004f6b8:	f7f3 fd89 	bl	100431ce <Osal_MemCmp>
1004f6bc:	2800      	cmp	r0, #0
1004f6be:	d1ea      	bne.n	1004f696 <Mem_Buff_Cmp+0x2c>
1004f6c0:	19f0      	adds	r0, r6, r7
1004f6c2:	b286      	uxth	r6, r0
1004f6c4:	2000      	movs	r0, #0
1004f6c6:	4669      	mov	r1, sp
1004f6c8:	8008      	strh	r0, [r1, #0]
1004f6ca:	e002      	b.n	1004f6d2 <Mem_Buff_Cmp+0x68>
1004f6cc:	1a40      	subs	r0, r0, r1
1004f6ce:	4669      	mov	r1, sp
1004f6d0:	8008      	strh	r0, [r1, #0]
1004f6d2:	6824      	ldr	r4, [r4, #0]
1004f6d4:	42b5      	cmp	r5, r6
1004f6d6:	d901      	bls.n	1004f6dc <Mem_Buff_Cmp+0x72>
1004f6d8:	2c00      	cmp	r4, #0
1004f6da:	d1de      	bne.n	1004f69a <Mem_Buff_Cmp+0x30>
1004f6dc:	1ba8      	subs	r0, r5, r6
1004f6de:	b005      	add	sp, #20
1004f6e0:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004f6e2 <Mem_Buff_Compact>:
1004f6e2:	2900      	cmp	r1, #0
1004f6e4:	d059      	beq.n	1004f79a <Mem_Buff_Compact+0xb8>
1004f6e6:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1004f6e8:	b08f      	sub	sp, #60	; 0x3c
1004f6ea:	460c      	mov	r4, r1
1004f6ec:	88a0      	ldrh	r0, [r4, #4]
1004f6ee:	2820      	cmp	r0, #32
1004f6f0:	d013      	beq.n	1004f71a <Mem_Buff_Compact+0x38>
1004f6f2:	2c00      	cmp	r4, #0
1004f6f4:	d014      	beq.n	1004f720 <Mem_Buff_Compact+0x3e>
1004f6f6:	9402      	str	r4, [sp, #8]
1004f6f8:	9802      	ldr	r0, [sp, #8]
1004f6fa:	6800      	ldr	r0, [r0, #0]
1004f6fc:	9002      	str	r0, [sp, #8]
1004f6fe:	2800      	cmp	r0, #0
1004f700:	d02e      	beq.n	1004f760 <Mem_Buff_Compact+0x7e>
1004f702:	8886      	ldrh	r6, [r0, #4]
1004f704:	4601      	mov	r1, r0
1004f706:	4632      	mov	r2, r6
1004f708:	3108      	adds	r1, #8
1004f70a:	a806      	add	r0, sp, #24
1004f70c:	f7f3 fd57 	bl	100431be <Osal_MemCpy>
1004f710:	2700      	movs	r7, #0
1004f712:	88a0      	ldrh	r0, [r4, #4]
1004f714:	2820      	cmp	r0, #32
1004f716:	d005      	beq.n	1004f724 <Mem_Buff_Compact+0x42>
1004f718:	e007      	b.n	1004f72a <Mem_Buff_Compact+0x48>
1004f71a:	6824      	ldr	r4, [r4, #0]
1004f71c:	2c00      	cmp	r4, #0
1004f71e:	d1e5      	bne.n	1004f6ec <Mem_Buff_Compact+0xa>
1004f720:	b011      	add	sp, #68	; 0x44
1004f722:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f724:	6824      	ldr	r4, [r4, #0]
1004f726:	2000      	movs	r0, #0
1004f728:	80a0      	strh	r0, [r4, #4]
1004f72a:	2e00      	cmp	r6, #0
1004f72c:	d0e4      	beq.n	1004f6f8 <Mem_Buff_Compact+0x16>
1004f72e:	b280      	uxth	r0, r0
1004f730:	2120      	movs	r1, #32
1004f732:	1a09      	subs	r1, r1, r0
1004f734:	b28d      	uxth	r5, r1
1004f736:	42ae      	cmp	r6, r5
1004f738:	d200      	bcs.n	1004f73c <Mem_Buff_Compact+0x5a>
1004f73a:	4635      	mov	r5, r6
1004f73c:	4622      	mov	r2, r4
1004f73e:	3208      	adds	r2, #8
1004f740:	a906      	add	r1, sp, #24
1004f742:	1880      	adds	r0, r0, r2
1004f744:	19c9      	adds	r1, r1, r7
1004f746:	462a      	mov	r2, r5
1004f748:	f7f3 fd39 	bl	100431be <Osal_MemCpy>
1004f74c:	1b70      	subs	r0, r6, r5
1004f74e:	b286      	uxth	r6, r0
1004f750:	1978      	adds	r0, r7, r5
1004f752:	b287      	uxth	r7, r0
1004f754:	88a0      	ldrh	r0, [r4, #4]
1004f756:	1940      	adds	r0, r0, r5
1004f758:	80a0      	strh	r0, [r4, #4]
1004f75a:	2e00      	cmp	r6, #0
1004f75c:	d1d9      	bne.n	1004f712 <Mem_Buff_Compact+0x30>
1004f75e:	e7cb      	b.n	1004f6f8 <Mem_Buff_Compact+0x16>
1004f760:	6820      	ldr	r0, [r4, #0]
1004f762:	2800      	cmp	r0, #0
1004f764:	d0dc      	beq.n	1004f720 <Mem_Buff_Compact+0x3e>
1004f766:	2100      	movs	r1, #0
1004f768:	6021      	str	r1, [r4, #0]
1004f76a:	990f      	ldr	r1, [sp, #60]	; 0x3c
1004f76c:	b672      	cpsid	i
1004f76e:	780a      	ldrb	r2, [r1, #0]
1004f770:	2a00      	cmp	r2, #0
1004f772:	d003      	beq.n	1004f77c <Mem_Buff_Compact+0x9a>
1004f774:	684b      	ldr	r3, [r1, #4]
1004f776:	0092      	lsls	r2, r2, #2
1004f778:	589a      	ldr	r2, [r3, r2]
1004f77a:	6010      	str	r0, [r2, #0]
1004f77c:	2300      	movs	r3, #0
1004f77e:	8083      	strh	r3, [r0, #4]
1004f780:	780a      	ldrb	r2, [r1, #0]
1004f782:	1c52      	adds	r2, r2, #1
1004f784:	b2d2      	uxtb	r2, r2
1004f786:	700a      	strb	r2, [r1, #0]
1004f788:	684c      	ldr	r4, [r1, #4]
1004f78a:	0092      	lsls	r2, r2, #2
1004f78c:	50a0      	str	r0, [r4, r2]
1004f78e:	6800      	ldr	r0, [r0, #0]
1004f790:	2800      	cmp	r0, #0
1004f792:	d1f4      	bne.n	1004f77e <Mem_Buff_Compact+0x9c>
1004f794:	b662      	cpsie	i
1004f796:	b011      	add	sp, #68	; 0x44
1004f798:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f79a:	4770      	bx	lr

1004f79c <Mem_Buff_Get>:
1004f79c:	1e49      	subs	r1, r1, #1
1004f79e:	04c9      	lsls	r1, r1, #19
1004f7a0:	0e09      	lsrs	r1, r1, #24
1004f7a2:	b672      	cpsid	i
1004f7a4:	7802      	ldrb	r2, [r0, #0]
1004f7a6:	428a      	cmp	r2, r1
1004f7a8:	d90c      	bls.n	1004f7c4 <Mem_Buff_Get+0x28>
1004f7aa:	1a51      	subs	r1, r2, r1
1004f7ac:	b2c9      	uxtb	r1, r1
1004f7ae:	1e4a      	subs	r2, r1, #1
1004f7b0:	b2d3      	uxtb	r3, r2
1004f7b2:	7003      	strb	r3, [r0, #0]
1004f7b4:	6842      	ldr	r2, [r0, #4]
1004f7b6:	0088      	lsls	r0, r1, #2
1004f7b8:	5810      	ldr	r0, [r2, r0]
1004f7ba:	0099      	lsls	r1, r3, #2
1004f7bc:	5852      	ldr	r2, [r2, r1]
1004f7be:	2100      	movs	r1, #0
1004f7c0:	6011      	str	r1, [r2, #0]
1004f7c2:	e000      	b.n	1004f7c6 <Mem_Buff_Get+0x2a>
1004f7c4:	2000      	movs	r0, #0
1004f7c6:	b662      	cpsie	i
1004f7c8:	4770      	bx	lr

1004f7ca <Mem_Buff_Get_Chain_Count>:
1004f7ca:	2100      	movs	r1, #0
1004f7cc:	2800      	cmp	r0, #0
1004f7ce:	d004      	beq.n	1004f7da <Mem_Buff_Get_Chain_Count+0x10>
1004f7d0:	1c49      	adds	r1, r1, #1
1004f7d2:	6800      	ldr	r0, [r0, #0]
1004f7d4:	b2c9      	uxtb	r1, r1
1004f7d6:	2800      	cmp	r0, #0
1004f7d8:	d1fa      	bne.n	1004f7d0 <Mem_Buff_Get_Chain_Count+0x6>
1004f7da:	4608      	mov	r0, r1
1004f7dc:	4770      	bx	lr

1004f7de <Mem_Buff_Get_Chain_Size>:
1004f7de:	2100      	movs	r1, #0
1004f7e0:	2800      	cmp	r0, #0
1004f7e2:	d004      	beq.n	1004f7ee <Mem_Buff_Get_Chain_Size+0x10>
1004f7e4:	1c49      	adds	r1, r1, #1
1004f7e6:	6800      	ldr	r0, [r0, #0]
1004f7e8:	b2c9      	uxtb	r1, r1
1004f7ea:	2800      	cmp	r0, #0
1004f7ec:	d1fa      	bne.n	1004f7e4 <Mem_Buff_Get_Chain_Size+0x6>
1004f7ee:	0148      	lsls	r0, r1, #5
1004f7f0:	4770      	bx	lr

1004f7f2 <Mem_Buff_Init>:
1004f7f2:	b470      	push	{r4, r5, r6}
1004f7f4:	7841      	ldrb	r1, [r0, #1]
1004f7f6:	2900      	cmp	r1, #0
1004f7f8:	d02d      	beq.n	1004f856 <Mem_Buff_Init+0x64>
1004f7fa:	6886      	ldr	r6, [r0, #8]
1004f7fc:	2e00      	cmp	r6, #0
1004f7fe:	d02a      	beq.n	1004f856 <Mem_Buff_Init+0x64>
1004f800:	2500      	movs	r5, #0
1004f802:	7005      	strb	r5, [r0, #0]
1004f804:	6841      	ldr	r1, [r0, #4]
1004f806:	462a      	mov	r2, r5
1004f808:	600d      	str	r5, [r1, #0]
1004f80a:	7841      	ldrb	r1, [r0, #1]
1004f80c:	2900      	cmp	r1, #0
1004f80e:	d91f      	bls.n	1004f850 <Mem_Buff_Init+0x5e>
1004f810:	2128      	movs	r1, #40	; 0x28
1004f812:	4351      	muls	r1, r2
1004f814:	1989      	adds	r1, r1, r6
1004f816:	2300      	movs	r3, #0
1004f818:	600b      	str	r3, [r1, #0]
1004f81a:	2900      	cmp	r1, #0
1004f81c:	d013      	beq.n	1004f846 <Mem_Buff_Init+0x54>
1004f81e:	b672      	cpsid	i
1004f820:	7803      	ldrb	r3, [r0, #0]
1004f822:	2b00      	cmp	r3, #0
1004f824:	d003      	beq.n	1004f82e <Mem_Buff_Init+0x3c>
1004f826:	6844      	ldr	r4, [r0, #4]
1004f828:	009b      	lsls	r3, r3, #2
1004f82a:	58e3      	ldr	r3, [r4, r3]
1004f82c:	6019      	str	r1, [r3, #0]
1004f82e:	808d      	strh	r5, [r1, #4]
1004f830:	7803      	ldrb	r3, [r0, #0]
1004f832:	1c5b      	adds	r3, r3, #1
1004f834:	b2db      	uxtb	r3, r3
1004f836:	7003      	strb	r3, [r0, #0]
1004f838:	6844      	ldr	r4, [r0, #4]
1004f83a:	009b      	lsls	r3, r3, #2
1004f83c:	50e1      	str	r1, [r4, r3]
1004f83e:	6809      	ldr	r1, [r1, #0]
1004f840:	2900      	cmp	r1, #0
1004f842:	d1f4      	bne.n	1004f82e <Mem_Buff_Init+0x3c>
1004f844:	b662      	cpsie	i
1004f846:	1c52      	adds	r2, r2, #1
1004f848:	7841      	ldrb	r1, [r0, #1]
1004f84a:	b2d2      	uxtb	r2, r2
1004f84c:	4291      	cmp	r1, r2
1004f84e:	d8df      	bhi.n	1004f810 <Mem_Buff_Init+0x1e>
1004f850:	bc70      	pop	{r4, r5, r6}
1004f852:	2000      	movs	r0, #0
1004f854:	4770      	bx	lr
1004f856:	bc70      	pop	{r4, r5, r6}
1004f858:	2047      	movs	r0, #71	; 0x47
1004f85a:	4770      	bx	lr

1004f85c <Mem_Buff_Read>:
1004f85c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004f85e:	461d      	mov	r5, r3
1004f860:	460e      	mov	r6, r1
1004f862:	466b      	mov	r3, sp
1004f864:	2a00      	cmp	r2, #0
1004f866:	d009      	beq.n	1004f87c <Mem_Buff_Read+0x20>
1004f868:	2800      	cmp	r0, #0
1004f86a:	d024      	beq.n	1004f8b6 <Mem_Buff_Read+0x5a>
1004f86c:	8884      	ldrh	r4, [r0, #4]
1004f86e:	4294      	cmp	r4, r2
1004f870:	d804      	bhi.n	1004f87c <Mem_Buff_Read+0x20>
1004f872:	1b12      	subs	r2, r2, r4
1004f874:	0412      	lsls	r2, r2, #16
1004f876:	6800      	ldr	r0, [r0, #0]
1004f878:	0c12      	lsrs	r2, r2, #16
1004f87a:	d1f5      	bne.n	1004f868 <Mem_Buff_Read+0xc>
1004f87c:	801a      	strh	r2, [r3, #0]
1004f87e:	0004      	movs	r4, r0
1004f880:	d019      	beq.n	1004f8b6 <Mem_Buff_Read+0x5a>
1004f882:	e014      	b.n	1004f8ae <Mem_Buff_Read+0x52>
1004f884:	4668      	mov	r0, sp
1004f886:	88a1      	ldrh	r1, [r4, #4]
1004f888:	8800      	ldrh	r0, [r0, #0]
1004f88a:	1a09      	subs	r1, r1, r0
1004f88c:	b28f      	uxth	r7, r1
1004f88e:	42af      	cmp	r7, r5
1004f890:	d300      	bcc.n	1004f894 <Mem_Buff_Read+0x38>
1004f892:	462f      	mov	r7, r5
1004f894:	1821      	adds	r1, r4, r0
1004f896:	463a      	mov	r2, r7
1004f898:	4630      	mov	r0, r6
1004f89a:	3108      	adds	r1, #8
1004f89c:	f7f3 fc8f 	bl	100431be <Osal_MemCpy>
1004f8a0:	19f6      	adds	r6, r6, r7
1004f8a2:	1be8      	subs	r0, r5, r7
1004f8a4:	b285      	uxth	r5, r0
1004f8a6:	6824      	ldr	r4, [r4, #0]
1004f8a8:	2000      	movs	r0, #0
1004f8aa:	4669      	mov	r1, sp
1004f8ac:	8008      	strh	r0, [r1, #0]
1004f8ae:	2d00      	cmp	r5, #0
1004f8b0:	d003      	beq.n	1004f8ba <Mem_Buff_Read+0x5e>
1004f8b2:	2c00      	cmp	r4, #0
1004f8b4:	d1e6      	bne.n	1004f884 <Mem_Buff_Read+0x28>
1004f8b6:	2041      	movs	r0, #65	; 0x41
1004f8b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1004f8ba:	2000      	movs	r0, #0
1004f8bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1004f8be <Mem_Buff_Release>:
1004f8be:	2900      	cmp	r1, #0
1004f8c0:	d017      	beq.n	1004f8f2 <Mem_Buff_Release+0x34>
1004f8c2:	b672      	cpsid	i
1004f8c4:	7802      	ldrb	r2, [r0, #0]
1004f8c6:	2a00      	cmp	r2, #0
1004f8c8:	d003      	beq.n	1004f8d2 <Mem_Buff_Release+0x14>
1004f8ca:	6843      	ldr	r3, [r0, #4]
1004f8cc:	0092      	lsls	r2, r2, #2
1004f8ce:	589a      	ldr	r2, [r3, r2]
1004f8d0:	6011      	str	r1, [r2, #0]
1004f8d2:	b410      	push	{r4}
1004f8d4:	2300      	movs	r3, #0
1004f8d6:	808b      	strh	r3, [r1, #4]
1004f8d8:	7802      	ldrb	r2, [r0, #0]
1004f8da:	1c52      	adds	r2, r2, #1
1004f8dc:	b2d2      	uxtb	r2, r2
1004f8de:	7002      	strb	r2, [r0, #0]
1004f8e0:	6844      	ldr	r4, [r0, #4]
1004f8e2:	0092      	lsls	r2, r2, #2
1004f8e4:	50a1      	str	r1, [r4, r2]
1004f8e6:	6809      	ldr	r1, [r1, #0]
1004f8e8:	2900      	cmp	r1, #0
1004f8ea:	d1f4      	bne.n	1004f8d6 <Mem_Buff_Release+0x18>
1004f8ec:	b662      	cpsie	i
1004f8ee:	bc10      	pop	{r4}
1004f8f0:	4770      	bx	lr
1004f8f2:	4770      	bx	lr

1004f8f4 <Mem_Buff_Resize>:
1004f8f4:	b430      	push	{r4, r5}
1004f8f6:	2400      	movs	r4, #0
1004f8f8:	1e0b      	subs	r3, r1, #0
1004f8fa:	d022      	beq.n	1004f942 <Mem_Buff_Resize+0x4e>
1004f8fc:	3420      	adds	r4, #32
1004f8fe:	b2a4      	uxth	r4, r4
1004f900:	4294      	cmp	r4, r2
1004f902:	d31a      	bcc.n	1004f93a <Mem_Buff_Resize+0x46>
1004f904:	680a      	ldr	r2, [r1, #0]
1004f906:	2a00      	cmp	r2, #0
1004f908:	d035      	beq.n	1004f976 <Mem_Buff_Resize+0x82>
1004f90a:	b672      	cpsid	i
1004f90c:	7803      	ldrb	r3, [r0, #0]
1004f90e:	2b00      	cmp	r3, #0
1004f910:	d003      	beq.n	1004f91a <Mem_Buff_Resize+0x26>
1004f912:	6844      	ldr	r4, [r0, #4]
1004f914:	009b      	lsls	r3, r3, #2
1004f916:	58e3      	ldr	r3, [r4, r3]
1004f918:	601a      	str	r2, [r3, #0]
1004f91a:	2400      	movs	r4, #0
1004f91c:	8094      	strh	r4, [r2, #4]
1004f91e:	7803      	ldrb	r3, [r0, #0]
1004f920:	1c5b      	adds	r3, r3, #1
1004f922:	b2db      	uxtb	r3, r3
1004f924:	7003      	strb	r3, [r0, #0]
1004f926:	6845      	ldr	r5, [r0, #4]
1004f928:	009b      	lsls	r3, r3, #2
1004f92a:	50ea      	str	r2, [r5, r3]
1004f92c:	6812      	ldr	r2, [r2, #0]
1004f92e:	2a00      	cmp	r2, #0
1004f930:	d1f4      	bne.n	1004f91c <Mem_Buff_Resize+0x28>
1004f932:	b662      	cpsie	i
1004f934:	2000      	movs	r0, #0
1004f936:	6008      	str	r0, [r1, #0]
1004f938:	e01d      	b.n	1004f976 <Mem_Buff_Resize+0x82>
1004f93a:	460b      	mov	r3, r1
1004f93c:	6809      	ldr	r1, [r1, #0]
1004f93e:	2900      	cmp	r1, #0
1004f940:	d1dc      	bne.n	1004f8fc <Mem_Buff_Resize+0x8>
1004f942:	1b11      	subs	r1, r2, r4
1004f944:	1e49      	subs	r1, r1, #1
1004f946:	04c9      	lsls	r1, r1, #19
1004f948:	0e0a      	lsrs	r2, r1, #24
1004f94a:	b672      	cpsid	i
1004f94c:	7801      	ldrb	r1, [r0, #0]
1004f94e:	4291      	cmp	r1, r2
1004f950:	d90c      	bls.n	1004f96c <Mem_Buff_Resize+0x78>
1004f952:	1a89      	subs	r1, r1, r2
1004f954:	b2c9      	uxtb	r1, r1
1004f956:	1e4a      	subs	r2, r1, #1
1004f958:	b2d2      	uxtb	r2, r2
1004f95a:	7002      	strb	r2, [r0, #0]
1004f95c:	6840      	ldr	r0, [r0, #4]
1004f95e:	0089      	lsls	r1, r1, #2
1004f960:	0092      	lsls	r2, r2, #2
1004f962:	5841      	ldr	r1, [r0, r1]
1004f964:	5882      	ldr	r2, [r0, r2]
1004f966:	2000      	movs	r0, #0
1004f968:	6010      	str	r0, [r2, #0]
1004f96a:	e000      	b.n	1004f96e <Mem_Buff_Resize+0x7a>
1004f96c:	2100      	movs	r1, #0
1004f96e:	b662      	cpsie	i
1004f970:	6019      	str	r1, [r3, #0]
1004f972:	2900      	cmp	r1, #0
1004f974:	d002      	beq.n	1004f97c <Mem_Buff_Resize+0x88>
1004f976:	bc30      	pop	{r4, r5}
1004f978:	2000      	movs	r0, #0
1004f97a:	4770      	bx	lr
1004f97c:	bc30      	pop	{r4, r5}
1004f97e:	2047      	movs	r0, #71	; 0x47
1004f980:	4770      	bx	lr

1004f982 <Mem_Buff_Write>:
1004f982:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004f984:	4604      	mov	r4, r0
1004f986:	0950      	lsrs	r0, r2, #5
1004f988:	0600      	lsls	r0, r0, #24
1004f98a:	b081      	sub	sp, #4
1004f98c:	461f      	mov	r7, r3
1004f98e:	0e00      	lsrs	r0, r0, #24
1004f990:	d006      	beq.n	1004f9a0 <Mem_Buff_Write+0x1e>
1004f992:	2c00      	cmp	r4, #0
1004f994:	d023      	beq.n	1004f9de <Mem_Buff_Write+0x5c>
1004f996:	1e40      	subs	r0, r0, #1
1004f998:	6824      	ldr	r4, [r4, #0]
1004f99a:	0600      	lsls	r0, r0, #24
1004f99c:	0e00      	lsrs	r0, r0, #24
1004f99e:	d1f8      	bne.n	1004f992 <Mem_Buff_Write+0x10>
1004f9a0:	06d6      	lsls	r6, r2, #27
1004f9a2:	0ef6      	lsrs	r6, r6, #27
1004f9a4:	e017      	b.n	1004f9d6 <Mem_Buff_Write+0x54>
1004f9a6:	2020      	movs	r0, #32
1004f9a8:	1b85      	subs	r5, r0, r6
1004f9aa:	42bd      	cmp	r5, r7
1004f9ac:	d300      	bcc.n	1004f9b0 <Mem_Buff_Write+0x2e>
1004f9ae:	463d      	mov	r5, r7
1004f9b0:	19a0      	adds	r0, r4, r6
1004f9b2:	462a      	mov	r2, r5
1004f9b4:	3008      	adds	r0, #8
1004f9b6:	9902      	ldr	r1, [sp, #8]
1004f9b8:	f7f3 fc01 	bl	100431be <Osal_MemCpy>
1004f9bc:	9802      	ldr	r0, [sp, #8]
1004f9be:	1971      	adds	r1, r6, r5
1004f9c0:	1940      	adds	r0, r0, r5
1004f9c2:	9002      	str	r0, [sp, #8]
1004f9c4:	1b78      	subs	r0, r7, r5
1004f9c6:	b287      	uxth	r7, r0
1004f9c8:	88a0      	ldrh	r0, [r4, #4]
1004f9ca:	4288      	cmp	r0, r1
1004f9cc:	d201      	bcs.n	1004f9d2 <Mem_Buff_Write+0x50>
1004f9ce:	19a8      	adds	r0, r5, r6
1004f9d0:	80a0      	strh	r0, [r4, #4]
1004f9d2:	6824      	ldr	r4, [r4, #0]
1004f9d4:	2600      	movs	r6, #0
1004f9d6:	2f00      	cmp	r7, #0
1004f9d8:	d004      	beq.n	1004f9e4 <Mem_Buff_Write+0x62>
1004f9da:	2c00      	cmp	r4, #0
1004f9dc:	d1e3      	bne.n	1004f9a6 <Mem_Buff_Write+0x24>
1004f9de:	2041      	movs	r0, #65	; 0x41
1004f9e0:	b005      	add	sp, #20
1004f9e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004f9e4:	2000      	movs	r0, #0
1004f9e6:	b005      	add	sp, #20
1004f9e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

1004f9ec <adapt_slot>:
1004f9ec:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1004f9ee:	b08f      	sub	sp, #60	; 0x3c
1004f9f0:	9e1a      	ldr	r6, [sp, #104]	; 0x68
1004f9f2:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004f9f4:	f000 fcb0 	bl	10050358 <nsar_updateSlotListEntry>
1004f9f8:	4992      	ldr	r1, [pc, #584]	; (1004fc44 <adapt_slot+0x258>)
1004f9fa:	207b      	movs	r0, #123	; 0x7b
1004f9fc:	680a      	ldr	r2, [r1, #0]
1004f9fe:	0100      	lsls	r0, r0, #4
1004fa00:	1815      	adds	r5, r2, r0
1004fa02:	4610      	mov	r0, r2
1004fa04:	3036      	adds	r0, #54	; 0x36
1004fa06:	4684      	mov	ip, r0
1004fa08:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004fa0a:	2808      	cmp	r0, #8
1004fa0c:	d022      	beq.n	1004fa54 <adapt_slot+0x68>
1004fa0e:	4604      	mov	r4, r0
1004fa10:	2001      	movs	r0, #1
1004fa12:	4603      	mov	r3, r0
1004fa14:	40a3      	lsls	r3, r4
1004fa16:	243a      	movs	r4, #58	; 0x3a
1004fa18:	5d64      	ldrb	r4, [r4, r5]
1004fa1a:	0727      	lsls	r7, r4, #28
1004fa1c:	0f3f      	lsrs	r7, r7, #28
1004fa1e:	4604      	mov	r4, r0
1004fa20:	40bc      	lsls	r4, r7
1004fa22:	4323      	orrs	r3, r4
1004fa24:	4664      	mov	r4, ip
1004fa26:	7824      	ldrb	r4, [r4, #0]
1004fa28:	0724      	lsls	r4, r4, #28
1004fa2a:	0f24      	lsrs	r4, r4, #28
1004fa2c:	40a0      	lsls	r0, r4
1004fa2e:	4303      	orrs	r3, r0
1004fa30:	7d28      	ldrb	r0, [r5, #20]
1004fa32:	4398      	bics	r0, r3
1004fa34:	d011      	beq.n	1004fa5a <adapt_slot+0x6e>
1004fa36:	6868      	ldr	r0, [r5, #4]
1004fa38:	9001      	str	r0, [sp, #4]
1004fa3a:	2001      	movs	r0, #1
1004fa3c:	2400      	movs	r4, #0
1004fa3e:	900c      	str	r0, [sp, #48]	; 0x30
1004fa40:	6ca8      	ldr	r0, [r5, #72]	; 0x48
1004fa42:	32a0      	adds	r2, #160	; 0xa0
1004fa44:	9006      	str	r0, [sp, #24]
1004fa46:	7b12      	ldrb	r2, [r2, #12]
1004fa48:	4627      	mov	r7, r4
1004fa4a:	5c80      	ldrb	r0, [r0, r2]
1004fa4c:	46a4      	mov	ip, r4
1004fa4e:	4696      	mov	lr, r2
1004fa50:	940d      	str	r4, [sp, #52]	; 0x34
1004fa52:	e030      	b.n	1004fab6 <adapt_slot+0xca>
1004fa54:	2082      	movs	r0, #130	; 0x82
1004fa56:	b013      	add	sp, #76	; 0x4c
1004fa58:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004fa5a:	9811      	ldr	r0, [sp, #68]	; 0x44
1004fa5c:	9b18      	ldr	r3, [sp, #96]	; 0x60
1004fa5e:	6802      	ldr	r2, [r0, #0]
1004fa60:	9812      	ldr	r0, [sp, #72]	; 0x48
1004fa62:	6800      	ldr	r0, [r0, #0]
1004fa64:	1810      	adds	r0, r2, r0
1004fa66:	2200      	movs	r2, #0
1004fa68:	0840      	lsrs	r0, r0, #1
1004fa6a:	801a      	strh	r2, [r3, #0]
1004fa6c:	0a40      	lsrs	r0, r0, #9
1004fa6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
1004fa70:	0240      	lsls	r0, r0, #9
1004fa72:	6018      	str	r0, [r3, #0]
1004fa74:	9b12      	ldr	r3, [sp, #72]	; 0x48
1004fa76:	6018      	str	r0, [r3, #0]
1004fa78:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
1004fa7a:	801a      	strh	r2, [r3, #0]
1004fa7c:	4a72      	ldr	r2, [pc, #456]	; (1004fc48 <adapt_slot+0x25c>)
1004fa7e:	1880      	adds	r0, r0, r2
1004fa80:	6832      	ldr	r2, [r6, #0]
1004fa82:	4282      	cmp	r2, r0
1004fa84:	d801      	bhi.n	1004fa8a <adapt_slot+0x9e>
1004fa86:	4610      	mov	r0, r2
1004fa88:	e000      	b.n	1004fa8c <adapt_slot+0xa0>
1004fa8a:	6030      	str	r0, [r6, #0]
1004fa8c:	0980      	lsrs	r0, r0, #6
1004fa8e:	6030      	str	r0, [r6, #0]
1004fa90:	6808      	ldr	r0, [r1, #0]
1004fa92:	30a0      	adds	r0, #160	; 0xa0
1004fa94:	7b01      	ldrb	r1, [r0, #12]
1004fa96:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004fa98:	f000 fbde 	bl	10050258 <nsar_insertSlotListEntry>
1004fa9c:	e0cd      	b.n	1004fc3a <adapt_slot+0x24e>
1004fa9e:	6a6a      	ldr	r2, [r5, #36]	; 0x24
1004faa0:	0041      	lsls	r1, r0, #1
1004faa2:	6aab      	ldr	r3, [r5, #40]	; 0x28
1004faa4:	5a52      	ldrh	r2, [r2, r1]
1004faa6:	5a59      	ldrh	r1, [r3, r1]
1004faa8:	1851      	adds	r1, r2, r1
1004faaa:	0189      	lsls	r1, r1, #6
1004faac:	4561      	cmp	r1, ip
1004faae:	d900      	bls.n	1004fab2 <adapt_slot+0xc6>
1004fab0:	468c      	mov	ip, r1
1004fab2:	9906      	ldr	r1, [sp, #24]
1004fab4:	5c08      	ldrb	r0, [r1, r0]
1004fab6:	4586      	cmp	lr, r0
1004fab8:	d1f1      	bne.n	1004fa9e <adapt_slot+0xb2>
1004faba:	4863      	ldr	r0, [pc, #396]	; (1004fc48 <adapt_slot+0x25c>)
1004fabc:	9912      	ldr	r1, [sp, #72]	; 0x48
1004fabe:	4240      	negs	r0, r0
1004fac0:	6809      	ldr	r1, [r1, #0]
1004fac2:	9a01      	ldr	r2, [sp, #4]
1004fac4:	4460      	add	r0, ip
1004fac6:	9102      	str	r1, [sp, #8]
1004fac8:	4291      	cmp	r1, r2
1004faca:	d802      	bhi.n	1004fad2 <adapt_slot+0xe6>
1004facc:	9910      	ldr	r1, [sp, #64]	; 0x40
1004face:	07c9      	lsls	r1, r1, #31
1004fad0:	d001      	beq.n	1004fad6 <adapt_slot+0xea>
1004fad2:	4614      	mov	r4, r2
1004fad4:	e032      	b.n	1004fb3c <adapt_slot+0x150>
1004fad6:	9911      	ldr	r1, [sp, #68]	; 0x44
1004fad8:	6809      	ldr	r1, [r1, #0]
1004fada:	9106      	str	r1, [sp, #24]
1004fadc:	4281      	cmp	r1, r0
1004fade:	d900      	bls.n	1004fae2 <adapt_slot+0xf6>
1004fae0:	4608      	mov	r0, r1
1004fae2:	900a      	str	r0, [sp, #40]	; 0x28
1004fae4:	4610      	mov	r0, r2
1004fae6:	9902      	ldr	r1, [sp, #8]
1004fae8:	f7f0 fbc8 	bl	1004027c <__aeabi_uidivmod>
1004faec:	9008      	str	r0, [sp, #32]
1004faee:	9906      	ldr	r1, [sp, #24]
1004faf0:	9801      	ldr	r0, [sp, #4]
1004faf2:	f7f0 fbc3 	bl	1004027c <__aeabi_uidivmod>
1004faf6:	1c40      	adds	r0, r0, #1
1004faf8:	9009      	str	r0, [sp, #36]	; 0x24
1004fafa:	9808      	ldr	r0, [sp, #32]
1004fafc:	2800      	cmp	r0, #0
1004fafe:	d100      	bne.n	1004fb02 <adapt_slot+0x116>
1004fb00:	2001      	movs	r0, #1
1004fb02:	9909      	ldr	r1, [sp, #36]	; 0x24
1004fb04:	9006      	str	r0, [sp, #24]
1004fb06:	4288      	cmp	r0, r1
1004fb08:	980d      	ldr	r0, [sp, #52]	; 0x34
1004fb0a:	d815      	bhi.n	1004fb38 <adapt_slot+0x14c>
1004fb0c:	2800      	cmp	r0, #0
1004fb0e:	d115      	bne.n	1004fb3c <adapt_slot+0x150>
1004fb10:	9906      	ldr	r1, [sp, #24]
1004fb12:	9801      	ldr	r0, [sp, #4]
1004fb14:	f7f0 fbb2 	bl	1004027c <__aeabi_uidivmod>
1004fb18:	05c1      	lsls	r1, r0, #23
1004fb1a:	d10a      	bne.n	1004fb32 <adapt_slot+0x146>
1004fb1c:	990a      	ldr	r1, [sp, #40]	; 0x28
1004fb1e:	4288      	cmp	r0, r1
1004fb20:	d307      	bcc.n	1004fb32 <adapt_slot+0x146>
1004fb22:	9902      	ldr	r1, [sp, #8]
1004fb24:	4281      	cmp	r1, r0
1004fb26:	d304      	bcc.n	1004fb32 <adapt_slot+0x146>
1004fb28:	4604      	mov	r4, r0
1004fb2a:	2101      	movs	r1, #1
1004fb2c:	9806      	ldr	r0, [sp, #24]
1004fb2e:	910d      	str	r1, [sp, #52]	; 0x34
1004fb30:	900c      	str	r0, [sp, #48]	; 0x30
1004fb32:	9806      	ldr	r0, [sp, #24]
1004fb34:	1c40      	adds	r0, r0, #1
1004fb36:	e7e4      	b.n	1004fb02 <adapt_slot+0x116>
1004fb38:	2800      	cmp	r0, #0
1004fb3a:	d003      	beq.n	1004fb44 <adapt_slot+0x158>
1004fb3c:	9911      	ldr	r1, [sp, #68]	; 0x44
1004fb3e:	4620      	mov	r0, r4
1004fb40:	6809      	ldr	r1, [r1, #0]
1004fb42:	e004      	b.n	1004fb4e <adapt_slot+0x162>
1004fb44:	2084      	movs	r0, #132	; 0x84
1004fb46:	e786      	b.n	1004fa56 <adapt_slot+0x6a>
1004fb48:	1900      	adds	r0, r0, r4
1004fb4a:	1c7f      	adds	r7, r7, #1
1004fb4c:	b2bf      	uxth	r7, r7
1004fb4e:	4281      	cmp	r1, r0
1004fb50:	d8fa      	bhi.n	1004fb48 <adapt_slot+0x15c>
1004fb52:	9902      	ldr	r1, [sp, #8]
1004fb54:	4281      	cmp	r1, r0
1004fb56:	d204      	bcs.n	1004fb62 <adapt_slot+0x176>
1004fb58:	9910      	ldr	r1, [sp, #64]	; 0x40
1004fb5a:	0789      	lsls	r1, r1, #30
1004fb5c:	d401      	bmi.n	1004fb62 <adapt_slot+0x176>
1004fb5e:	2085      	movs	r0, #133	; 0x85
1004fb60:	e779      	b.n	1004fa56 <adapt_slot+0x6a>
1004fb62:	9911      	ldr	r1, [sp, #68]	; 0x44
1004fb64:	aa03      	add	r2, sp, #12
1004fb66:	6008      	str	r0, [r1, #0]
1004fb68:	9812      	ldr	r0, [sp, #72]	; 0x48
1004fb6a:	6004      	str	r4, [r0, #0]
1004fb6c:	6831      	ldr	r1, [r6, #0]
1004fb6e:	203f      	movs	r0, #63	; 0x3f
1004fb70:	1e49      	subs	r1, r1, #1
1004fb72:	4301      	orrs	r1, r0
1004fb74:	1c49      	adds	r1, r1, #1
1004fb76:	4620      	mov	r0, r4
1004fb78:	6031      	str	r1, [r6, #0]
1004fb7a:	f000 fb7b 	bl	10050274 <nsar_searchBestFreeSlot>
1004fb7e:	2800      	cmp	r0, #0
1004fb80:	d00a      	beq.n	1004fb98 <adapt_slot+0x1ac>
1004fb82:	e00e      	b.n	1004fba2 <adapt_slot+0x1b6>
1004fb84:	6830      	ldr	r0, [r6, #0]
1004fb86:	087f      	lsrs	r7, r7, #1
1004fb88:	0840      	lsrs	r0, r0, #1
1004fb8a:	6030      	str	r0, [r6, #0]
1004fb8c:	9919      	ldr	r1, [sp, #100]	; 0x64
1004fb8e:	0849      	lsrs	r1, r1, #1
1004fb90:	9119      	str	r1, [sp, #100]	; 0x64
1004fb92:	9905      	ldr	r1, [sp, #20]
1004fb94:	4281      	cmp	r1, r0
1004fb96:	d204      	bcs.n	1004fba2 <adapt_slot+0x1b6>
1004fb98:	9810      	ldr	r0, [sp, #64]	; 0x40
1004fb9a:	0740      	lsls	r0, r0, #29
1004fb9c:	d501      	bpl.n	1004fba2 <adapt_slot+0x1b6>
1004fb9e:	2f00      	cmp	r7, #0
1004fba0:	d1f0      	bne.n	1004fb84 <adapt_slot+0x198>
1004fba2:	9805      	ldr	r0, [sp, #20]
1004fba4:	6831      	ldr	r1, [r6, #0]
1004fba6:	4288      	cmp	r0, r1
1004fba8:	d908      	bls.n	1004fbbc <adapt_slot+0x1d0>
1004fbaa:	203f      	movs	r0, #63	; 0x3f
1004fbac:	1e49      	subs	r1, r1, #1
1004fbae:	4301      	orrs	r1, r0
1004fbb0:	1c49      	adds	r1, r1, #1
1004fbb2:	aa03      	add	r2, sp, #12
1004fbb4:	4620      	mov	r0, r4
1004fbb6:	6031      	str	r1, [r6, #0]
1004fbb8:	f000 fb5c 	bl	10050274 <nsar_searchBestFreeSlot>
1004fbbc:	9905      	ldr	r1, [sp, #20]
1004fbbe:	9819      	ldr	r0, [sp, #100]	; 0x64
1004fbc0:	4281      	cmp	r1, r0
1004fbc2:	d33c      	bcc.n	1004fc3e <adapt_slot+0x252>
1004fbc4:	4608      	mov	r0, r1
1004fbc6:	2103      	movs	r1, #3
1004fbc8:	0209      	lsls	r1, r1, #8
1004fbca:	4288      	cmp	r0, r1
1004fbcc:	d337      	bcc.n	1004fc3e <adapt_slot+0x252>
1004fbce:	980c      	ldr	r0, [sp, #48]	; 0x30
1004fbd0:	9008      	str	r0, [sp, #32]
1004fbd2:	1e40      	subs	r0, r0, #1
1004fbd4:	9009      	str	r0, [sp, #36]	; 0x24
1004fbd6:	4668      	mov	r0, sp
1004fbd8:	7b01      	ldrb	r1, [r0, #12]
1004fbda:	980f      	ldr	r0, [sp, #60]	; 0x3c
1004fbdc:	f000 fb3c 	bl	10050258 <nsar_insertSlotListEntry>
1004fbe0:	b672      	cpsid	i
1004fbe2:	4918      	ldr	r1, [pc, #96]	; (1004fc44 <adapt_slot+0x258>)
1004fbe4:	6caa      	ldr	r2, [r5, #72]	; 0x48
1004fbe6:	6808      	ldr	r0, [r1, #0]
1004fbe8:	30a0      	adds	r0, #160	; 0xa0
1004fbea:	7b00      	ldrb	r0, [r0, #12]
1004fbec:	5c10      	ldrb	r0, [r2, r0]
1004fbee:	e012      	b.n	1004fc16 <adapt_slot+0x22a>
1004fbf0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
1004fbf2:	0041      	lsls	r1, r0, #1
1004fbf4:	469c      	mov	ip, r3
1004fbf6:	5a5a      	ldrh	r2, [r3, r1]
1004fbf8:	9b08      	ldr	r3, [sp, #32]
1004fbfa:	435a      	muls	r2, r3
1004fbfc:	4663      	mov	r3, ip
1004fbfe:	525a      	strh	r2, [r3, r1]
1004fc00:	6b2b      	ldr	r3, [r5, #48]	; 0x30
1004fc02:	469c      	mov	ip, r3
1004fc04:	5a5a      	ldrh	r2, [r3, r1]
1004fc06:	9b08      	ldr	r3, [sp, #32]
1004fc08:	435a      	muls	r2, r3
1004fc0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
1004fc0c:	18d2      	adds	r2, r2, r3
1004fc0e:	4663      	mov	r3, ip
1004fc10:	525a      	strh	r2, [r3, r1]
1004fc12:	6ca9      	ldr	r1, [r5, #72]	; 0x48
1004fc14:	5c08      	ldrb	r0, [r1, r0]
1004fc16:	490b      	ldr	r1, [pc, #44]	; (1004fc44 <adapt_slot+0x258>)
1004fc18:	6809      	ldr	r1, [r1, #0]
1004fc1a:	31a0      	adds	r1, #160	; 0xa0
1004fc1c:	7b09      	ldrb	r1, [r1, #12]
1004fc1e:	4281      	cmp	r1, r0
1004fc20:	d1e6      	bne.n	1004fbf0 <adapt_slot+0x204>
1004fc22:	606c      	str	r4, [r5, #4]
1004fc24:	b662      	cpsie	i
1004fc26:	9804      	ldr	r0, [sp, #16]
1004fc28:	0280      	lsls	r0, r0, #10
1004fc2a:	0c01      	lsrs	r1, r0, #16
1004fc2c:	981b      	ldr	r0, [sp, #108]	; 0x6c
1004fc2e:	8001      	strh	r1, [r0, #0]
1004fc30:	9805      	ldr	r0, [sp, #20]
1004fc32:	0980      	lsrs	r0, r0, #6
1004fc34:	6030      	str	r0, [r6, #0]
1004fc36:	9818      	ldr	r0, [sp, #96]	; 0x60
1004fc38:	8007      	strh	r7, [r0, #0]
1004fc3a:	2000      	movs	r0, #0
1004fc3c:	e70b      	b.n	1004fa56 <adapt_slot+0x6a>
1004fc3e:	2086      	movs	r0, #134	; 0x86
1004fc40:	e709      	b.n	1004fa56 <adapt_slot+0x6a>
1004fc42:	0000      	.short	0x0000
1004fc44:	2000098c 	.word	0x2000098c
1004fc48:	fffffd9a 	.word	0xfffffd9a

1004fc4c <advance_slave_timing_MultiSlave>:
1004fc4c:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1004fc4e:	4ab0      	ldr	r2, [pc, #704]	; (1004ff10 <advance_slave_timing_MultiSlave+0x2c4>)
1004fc50:	217b      	movs	r1, #123	; 0x7b
1004fc52:	6810      	ldr	r0, [r2, #0]
1004fc54:	0109      	lsls	r1, r1, #4
1004fc56:	b090      	sub	sp, #64	; 0x40
1004fc58:	1841      	adds	r1, r0, r1
1004fc5a:	9104      	str	r1, [sp, #16]
1004fc5c:	2141      	movs	r1, #65	; 0x41
1004fc5e:	0149      	lsls	r1, r1, #5
1004fc60:	1845      	adds	r5, r0, r1
1004fc62:	4604      	mov	r4, r0
1004fc64:	34c0      	adds	r4, #192	; 0xc0
1004fc66:	4601      	mov	r1, r0
1004fc68:	3136      	adds	r1, #54	; 0x36
1004fc6a:	910d      	str	r1, [sp, #52]	; 0x34
1004fc6c:	2100      	movs	r1, #0
1004fc6e:	9102      	str	r1, [sp, #8]
1004fc70:	49a8      	ldr	r1, [pc, #672]	; (1004ff14 <advance_slave_timing_MultiSlave+0x2c8>)
1004fc72:	7a49      	ldrb	r1, [r1, #9]
1004fc74:	00c9      	lsls	r1, r1, #3
1004fc76:	910c      	str	r1, [sp, #48]	; 0x30
1004fc78:	6a81      	ldr	r1, [r0, #40]	; 0x28
1004fc7a:	910b      	str	r1, [sp, #44]	; 0x2c
1004fc7c:	9904      	ldr	r1, [sp, #16]
1004fc7e:	3120      	adds	r1, #32
1004fc80:	910e      	str	r1, [sp, #56]	; 0x38
1004fc82:	7e89      	ldrb	r1, [r1, #26]
1004fc84:	9107      	str	r1, [sp, #28]
1004fc86:	2908      	cmp	r1, #8
1004fc88:	d27e      	bcs.n	1004fd88 <advance_slave_timing_MultiSlave+0x13c>
1004fc8a:	2109      	movs	r1, #9
1004fc8c:	0209      	lsls	r1, r1, #8
1004fc8e:	1840      	adds	r0, r0, r1
1004fc90:	6b01      	ldr	r1, [r0, #48]	; 0x30
1004fc92:	4617      	mov	r7, r2
1004fc94:	9807      	ldr	r0, [sp, #28]
1004fc96:	2258      	movs	r2, #88	; 0x58
1004fc98:	4350      	muls	r0, r2
1004fc9a:	1808      	adds	r0, r1, r0
1004fc9c:	9008      	str	r0, [sp, #32]
1004fc9e:	9807      	ldr	r0, [sp, #28]
1004fca0:	0181      	lsls	r1, r0, #6
1004fca2:	489c      	ldr	r0, [pc, #624]	; (1004ff14 <advance_slave_timing_MultiSlave+0x2c8>)
1004fca4:	300c      	adds	r0, #12
1004fca6:	1808      	adds	r0, r1, r0
1004fca8:	900a      	str	r0, [sp, #40]	; 0x28
1004fcaa:	7ac0      	ldrb	r0, [r0, #11]
1004fcac:	462e      	mov	r6, r5
1004fcae:	3640      	adds	r6, #64	; 0x40
1004fcb0:	9009      	str	r0, [sp, #36]	; 0x24
1004fcb2:	8bb0      	ldrh	r0, [r6, #28]
1004fcb4:	f002 fadc 	bl	10052270 <set_sca>
1004fcb8:	6839      	ldr	r1, [r7, #0]
1004fcba:	3140      	adds	r1, #64	; 0x40
1004fcbc:	8e09      	ldrh	r1, [r1, #48]	; 0x30
1004fcbe:	1840      	adds	r0, r0, r1
1004fcc0:	b280      	uxth	r0, r0
1004fcc2:	9003      	str	r0, [sp, #12]
1004fcc4:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
1004fcc6:	9803      	ldr	r0, [sp, #12]
1004fcc8:	f002 fa70 	bl	100521ac <WindowWiden1>
1004fccc:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
1004fcce:	0209      	lsls	r1, r1, #8
1004fcd0:	1a0f      	subs	r7, r1, r0
1004fcd2:	7fb0      	ldrb	r0, [r6, #30]
1004fcd4:	f002 fafa 	bl	100522cc <time_offset1>
1004fcd8:	1838      	adds	r0, r7, r0
1004fcda:	f002 fa75 	bl	100521c8 <machine_time_trans>
1004fcde:	6ca9      	ldr	r1, [r5, #72]	; 0x48
1004fce0:	1841      	adds	r1, r0, r1
1004fce2:	980c      	ldr	r0, [sp, #48]	; 0x30
1004fce4:	1a08      	subs	r0, r1, r0
1004fce6:	0200      	lsls	r0, r0, #8
1004fce8:	0a00      	lsrs	r0, r0, #8
1004fcea:	9001      	str	r0, [sp, #4]
1004fcec:	9910      	ldr	r1, [sp, #64]	; 0x40
1004fcee:	1a41      	subs	r1, r0, r1
1004fcf0:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004fcf2:	1a08      	subs	r0, r1, r0
1004fcf4:	0200      	lsls	r0, r0, #8
1004fcf6:	2101      	movs	r1, #1
1004fcf8:	0a00      	lsrs	r0, r0, #8
1004fcfa:	05c9      	lsls	r1, r1, #23
1004fcfc:	4288      	cmp	r0, r1
1004fcfe:	d27d      	bcs.n	1004fdfc <advance_slave_timing_MultiSlave+0x1b0>
1004fd00:	9904      	ldr	r1, [sp, #16]
1004fd02:	9801      	ldr	r0, [sp, #4]
1004fd04:	6348      	str	r0, [r1, #52]	; 0x34
1004fd06:	9809      	ldr	r0, [sp, #36]	; 0x24
1004fd08:	f002 fa42 	bl	10052190 <modulo_37>
1004fd0c:	990a      	ldr	r1, [sp, #40]	; 0x28
1004fd0e:	72c8      	strb	r0, [r1, #11]
1004fd10:	980d      	ldr	r0, [sp, #52]	; 0x34
1004fd12:	7800      	ldrb	r0, [r0, #0]
1004fd14:	43c1      	mvns	r1, r0
1004fd16:	0709      	lsls	r1, r1, #28
1004fd18:	d006      	beq.n	1004fd28 <advance_slave_timing_MultiSlave+0xdc>
1004fd1a:	0741      	lsls	r1, r0, #29
1004fd1c:	9807      	ldr	r0, [sp, #28]
1004fd1e:	0f49      	lsrs	r1, r1, #29
1004fd20:	0740      	lsls	r0, r0, #29
1004fd22:	0f40      	lsrs	r0, r0, #29
1004fd24:	4281      	cmp	r1, r0
1004fd26:	d12b      	bne.n	1004fd80 <advance_slave_timing_MultiSlave+0x134>
1004fd28:	980e      	ldr	r0, [sp, #56]	; 0x38
1004fd2a:	2108      	movs	r1, #8
1004fd2c:	7e80      	ldrb	r0, [r0, #26]
1004fd2e:	4308      	orrs	r0, r1
1004fd30:	990d      	ldr	r1, [sp, #52]	; 0x34
1004fd32:	7008      	strb	r0, [r1, #0]
1004fd34:	6ca8      	ldr	r0, [r5, #72]	; 0x48
1004fd36:	6020      	str	r0, [r4, #0]
1004fd38:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
1004fd3a:	6060      	str	r0, [r4, #4]
1004fd3c:	9801      	ldr	r0, [sp, #4]
1004fd3e:	60a0      	str	r0, [r4, #8]
1004fd40:	9802      	ldr	r0, [sp, #8]
1004fd42:	60e0      	str	r0, [r4, #12]
1004fd44:	6da8      	ldr	r0, [r5, #88]	; 0x58
1004fd46:	6120      	str	r0, [r4, #16]
1004fd48:	6d68      	ldr	r0, [r5, #84]	; 0x54
1004fd4a:	6160      	str	r0, [r4, #20]
1004fd4c:	8bb0      	ldrh	r0, [r6, #28]
1004fd4e:	8320      	strh	r0, [r4, #24]
1004fd50:	7fb0      	ldrb	r0, [r6, #30]
1004fd52:	76a0      	strb	r0, [r4, #26]
1004fd54:	4628      	mov	r0, r5
1004fd56:	3060      	adds	r0, #96	; 0x60
1004fd58:	7801      	ldrb	r1, [r0, #0]
1004fd5a:	76e1      	strb	r1, [r4, #27]
1004fd5c:	8cb1      	ldrh	r1, [r6, #36]	; 0x24
1004fd5e:	83a1      	strh	r1, [r4, #28]
1004fd60:	8d31      	ldrh	r1, [r6, #40]	; 0x28
1004fd62:	83e1      	strh	r1, [r4, #30]
1004fd64:	8db1      	ldrh	r1, [r6, #44]	; 0x2c
1004fd66:	8421      	strh	r1, [r4, #32]
1004fd68:	8e31      	ldrh	r1, [r6, #48]	; 0x30
1004fd6a:	8461      	strh	r1, [r4, #34]	; 0x22
1004fd6c:	8eb1      	ldrh	r1, [r6, #52]	; 0x34
1004fd6e:	84a1      	strh	r1, [r4, #36]	; 0x24
1004fd70:	8f31      	ldrh	r1, [r6, #56]	; 0x38
1004fd72:	84e1      	strh	r1, [r4, #38]	; 0x26
1004fd74:	7ec1      	ldrb	r1, [r0, #27]
1004fd76:	2028      	movs	r0, #40	; 0x28
1004fd78:	5501      	strb	r1, [r0, r4]
1004fd7a:	2084      	movs	r0, #132	; 0x84
1004fd7c:	5940      	ldr	r0, [r0, r5]
1004fd7e:	62e0      	str	r0, [r4, #44]	; 0x2c
1004fd80:	980d      	ldr	r0, [sp, #52]	; 0x34
1004fd82:	7800      	ldrb	r0, [r0, #0]
1004fd84:	0742      	lsls	r2, r0, #29
1004fd86:	e000      	b.n	1004fd8a <advance_slave_timing_MultiSlave+0x13e>
1004fd88:	e07b      	b.n	1004fe82 <advance_slave_timing_MultiSlave+0x236>
1004fd8a:	9907      	ldr	r1, [sp, #28]
1004fd8c:	0f52      	lsrs	r2, r2, #29
1004fd8e:	0749      	lsls	r1, r1, #29
1004fd90:	0f49      	lsrs	r1, r1, #29
1004fd92:	428a      	cmp	r2, r1
1004fd94:	d061      	beq.n	1004fe5a <advance_slave_timing_MultiSlave+0x20e>
1004fd96:	21f7      	movs	r1, #247	; 0xf7
1004fd98:	4008      	ands	r0, r1
1004fd9a:	990d      	ldr	r1, [sp, #52]	; 0x34
1004fd9c:	4f5c      	ldr	r7, [pc, #368]	; (1004ff10 <advance_slave_timing_MultiSlave+0x2c4>)
1004fd9e:	7008      	strb	r0, [r1, #0]
1004fda0:	0740      	lsls	r0, r0, #29
1004fda2:	0f40      	lsrs	r0, r0, #29
1004fda4:	9007      	str	r0, [sp, #28]
1004fda6:	2009      	movs	r0, #9
1004fda8:	6839      	ldr	r1, [r7, #0]
1004fdaa:	0200      	lsls	r0, r0, #8
1004fdac:	1808      	adds	r0, r1, r0
1004fdae:	6b01      	ldr	r1, [r0, #48]	; 0x30
1004fdb0:	9807      	ldr	r0, [sp, #28]
1004fdb2:	2258      	movs	r2, #88	; 0x58
1004fdb4:	4350      	muls	r0, r2
1004fdb6:	1808      	adds	r0, r1, r0
1004fdb8:	9004      	str	r0, [sp, #16]
1004fdba:	9807      	ldr	r0, [sp, #28]
1004fdbc:	0181      	lsls	r1, r0, #6
1004fdbe:	4855      	ldr	r0, [pc, #340]	; (1004ff14 <advance_slave_timing_MultiSlave+0x2c8>)
1004fdc0:	300c      	adds	r0, #12
1004fdc2:	1808      	adds	r0, r1, r0
1004fdc4:	900a      	str	r0, [sp, #40]	; 0x28
1004fdc6:	7ac0      	ldrb	r0, [r0, #11]
1004fdc8:	9009      	str	r0, [sp, #36]	; 0x24
1004fdca:	8b20      	ldrh	r0, [r4, #24]
1004fdcc:	f002 fa50 	bl	10052270 <set_sca>
1004fdd0:	6839      	ldr	r1, [r7, #0]
1004fdd2:	3140      	adds	r1, #64	; 0x40
1004fdd4:	8e09      	ldrh	r1, [r1, #48]	; 0x30
1004fdd6:	1840      	adds	r0, r0, r1
1004fdd8:	b280      	uxth	r0, r0
1004fdda:	9003      	str	r0, [sp, #12]
1004fddc:	6861      	ldr	r1, [r4, #4]
1004fdde:	9803      	ldr	r0, [sp, #12]
1004fde0:	f002 f9e4 	bl	100521ac <WindowWiden1>
1004fde4:	6861      	ldr	r1, [r4, #4]
1004fde6:	0209      	lsls	r1, r1, #8
1004fde8:	1a0f      	subs	r7, r1, r0
1004fdea:	7ea0      	ldrb	r0, [r4, #26]
1004fdec:	f002 fa6e 	bl	100522cc <time_offset1>
1004fdf0:	1838      	adds	r0, r7, r0
1004fdf2:	f002 f9e9 	bl	100521c8 <machine_time_trans>
1004fdf6:	6821      	ldr	r1, [r4, #0]
1004fdf8:	1841      	adds	r1, r0, r1
1004fdfa:	e000      	b.n	1004fdfe <advance_slave_timing_MultiSlave+0x1b2>
1004fdfc:	e043      	b.n	1004fe86 <advance_slave_timing_MultiSlave+0x23a>
1004fdfe:	980c      	ldr	r0, [sp, #48]	; 0x30
1004fe00:	1a08      	subs	r0, r1, r0
1004fe02:	0207      	lsls	r7, r0, #8
1004fe04:	9810      	ldr	r0, [sp, #64]	; 0x40
1004fe06:	0a3f      	lsrs	r7, r7, #8
1004fe08:	1a39      	subs	r1, r7, r0
1004fe0a:	980b      	ldr	r0, [sp, #44]	; 0x2c
1004fe0c:	1a08      	subs	r0, r1, r0
1004fe0e:	0200      	lsls	r0, r0, #8
1004fe10:	2101      	movs	r1, #1
1004fe12:	0a00      	lsrs	r0, r0, #8
1004fe14:	05c9      	lsls	r1, r1, #23
1004fe16:	4288      	cmp	r0, r1
1004fe18:	d257      	bcs.n	1004feca <advance_slave_timing_MultiSlave+0x27e>
1004fe1a:	60a7      	str	r7, [r4, #8]
1004fe1c:	9809      	ldr	r0, [sp, #36]	; 0x24
1004fe1e:	f002 f9b7 	bl	10052190 <modulo_37>
1004fe22:	990a      	ldr	r1, [sp, #40]	; 0x28
1004fe24:	72c8      	strb	r0, [r1, #11]
1004fe26:	9801      	ldr	r0, [sp, #4]
1004fe28:	9908      	ldr	r1, [sp, #32]
1004fe2a:	1bc0      	subs	r0, r0, r7
1004fe2c:	0200      	lsls	r0, r0, #8
1004fe2e:	7949      	ldrb	r1, [r1, #5]
1004fe30:	0a00      	lsrs	r0, r0, #8
1004fe32:	2290      	movs	r2, #144	; 0x90
1004fe34:	4211      	tst	r1, r2
1004fe36:	d110      	bne.n	1004fe5a <advance_slave_timing_MultiSlave+0x20e>
1004fe38:	2101      	movs	r1, #1
1004fe3a:	05c9      	lsls	r1, r1, #23
1004fe3c:	4288      	cmp	r0, r1
1004fe3e:	d30a      	bcc.n	1004fe56 <advance_slave_timing_MultiSlave+0x20a>
1004fe40:	9804      	ldr	r0, [sp, #16]
1004fe42:	7bc1      	ldrb	r1, [r0, #15]
1004fe44:	9808      	ldr	r0, [sp, #32]
1004fe46:	7bc0      	ldrb	r0, [r0, #15]
1004fe48:	1c40      	adds	r0, r0, #1
1004fe4a:	4281      	cmp	r1, r0
1004fe4c:	d803      	bhi.n	1004fe56 <advance_slave_timing_MultiSlave+0x20a>
1004fe4e:	9804      	ldr	r0, [sp, #16]
1004fe50:	7940      	ldrb	r0, [r0, #5]
1004fe52:	06c0      	lsls	r0, r0, #27
1004fe54:	d501      	bpl.n	1004fe5a <advance_slave_timing_MultiSlave+0x20e>
1004fe56:	f002 fc45 	bl	100526e4 <swap_slaves>
1004fe5a:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
1004fe5c:	9803      	ldr	r0, [sp, #12]
1004fe5e:	f002 f9aa 	bl	100521b6 <WindowWiden2>
1004fe62:	4604      	mov	r4, r0
1004fe64:	7fb0      	ldrb	r0, [r6, #30]
1004fe66:	f002 fa39 	bl	100522dc <time_offset2>
1004fe6a:	6da9      	ldr	r1, [r5, #88]	; 0x58
1004fe6c:	1820      	adds	r0, r4, r0
1004fe6e:	1840      	adds	r0, r0, r1
1004fe70:	2107      	movs	r1, #7
1004fe72:	0509      	lsls	r1, r1, #20
1004fe74:	4308      	orrs	r0, r1
1004fe76:	3580      	adds	r5, #128	; 0x80
1004fe78:	6ba9      	ldr	r1, [r5, #56]	; 0x38
1004fe7a:	2203      	movs	r2, #3
1004fe7c:	1d09      	adds	r1, r1, #4
1004fe7e:	f7fc fd71 	bl	1004c964 <set_string>
1004fe82:	b011      	add	sp, #68	; 0x44
1004fe84:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004fe86:	9808      	ldr	r0, [sp, #32]
1004fe88:	8f00      	ldrh	r0, [r0, #56]	; 0x38
1004fe8a:	0041      	lsls	r1, r0, #1
1004fe8c:	980a      	ldr	r0, [sp, #40]	; 0x28
1004fe8e:	3020      	adds	r0, #32
1004fe90:	7802      	ldrb	r2, [r0, #0]
1004fe92:	9809      	ldr	r0, [sp, #36]	; 0x24
1004fe94:	1810      	adds	r0, r2, r0
1004fe96:	b280      	uxth	r0, r0
1004fe98:	9009      	str	r0, [sp, #36]	; 0x24
1004fe9a:	9808      	ldr	r0, [sp, #32]
1004fe9c:	9a08      	ldr	r2, [sp, #32]
1004fe9e:	8900      	ldrh	r0, [r0, #8]
1004fea0:	1c40      	adds	r0, r0, #1
1004fea2:	8110      	strh	r0, [r2, #8]
1004fea4:	9808      	ldr	r0, [sp, #32]
1004fea6:	6940      	ldr	r0, [r0, #20]
1004fea8:	1a42      	subs	r2, r0, r1
1004feaa:	9808      	ldr	r0, [sp, #32]
1004feac:	6142      	str	r2, [r0, #20]
1004feae:	9808      	ldr	r0, [sp, #32]
1004feb0:	7bc0      	ldrb	r0, [r0, #15]
1004feb2:	28ff      	cmp	r0, #255	; 0xff
1004feb4:	d202      	bcs.n	1004febc <advance_slave_timing_MultiSlave+0x270>
1004feb6:	9a08      	ldr	r2, [sp, #32]
1004feb8:	1c40      	adds	r0, r0, #1
1004feba:	73d0      	strb	r0, [r2, #15]
1004febc:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
1004febe:	1840      	adds	r0, r0, r1
1004fec0:	64e8      	str	r0, [r5, #76]	; 0x4c
1004fec2:	9807      	ldr	r0, [sp, #28]
1004fec4:	f008 f948 	bl	10058158 <cancel_slave>
1004fec8:	e6fc      	b.n	1004fcc4 <advance_slave_timing_MultiSlave+0x78>
1004feca:	9804      	ldr	r0, [sp, #16]
1004fecc:	990a      	ldr	r1, [sp, #40]	; 0x28
1004fece:	8f00      	ldrh	r0, [r0, #56]	; 0x38
1004fed0:	0040      	lsls	r0, r0, #1
1004fed2:	3120      	adds	r1, #32
1004fed4:	780a      	ldrb	r2, [r1, #0]
1004fed6:	9909      	ldr	r1, [sp, #36]	; 0x24
1004fed8:	1851      	adds	r1, r2, r1
1004feda:	b289      	uxth	r1, r1
1004fedc:	9109      	str	r1, [sp, #36]	; 0x24
1004fede:	9904      	ldr	r1, [sp, #16]
1004fee0:	9a04      	ldr	r2, [sp, #16]
1004fee2:	8909      	ldrh	r1, [r1, #8]
1004fee4:	1c49      	adds	r1, r1, #1
1004fee6:	8111      	strh	r1, [r2, #8]
1004fee8:	9904      	ldr	r1, [sp, #16]
1004feea:	6949      	ldr	r1, [r1, #20]
1004feec:	1a0a      	subs	r2, r1, r0
1004feee:	9904      	ldr	r1, [sp, #16]
1004fef0:	614a      	str	r2, [r1, #20]
1004fef2:	9904      	ldr	r1, [sp, #16]
1004fef4:	7bc9      	ldrb	r1, [r1, #15]
1004fef6:	29ff      	cmp	r1, #255	; 0xff
1004fef8:	d202      	bcs.n	1004ff00 <advance_slave_timing_MultiSlave+0x2b4>
1004fefa:	9a04      	ldr	r2, [sp, #16]
1004fefc:	1c49      	adds	r1, r1, #1
1004fefe:	73d1      	strb	r1, [r2, #15]
1004ff00:	6861      	ldr	r1, [r4, #4]
1004ff02:	1808      	adds	r0, r1, r0
1004ff04:	6060      	str	r0, [r4, #4]
1004ff06:	9807      	ldr	r0, [sp, #28]
1004ff08:	f008 f926 	bl	10058158 <cancel_slave>
1004ff0c:	e766      	b.n	1004fddc <advance_slave_timing_MultiSlave+0x190>
1004ff0e:	0000      	.short	0x0000
1004ff10:	2000098c 	.word	0x2000098c
1004ff14:	200000c0 	.word	0x200000c0

1004ff18 <cancel_current_master>:
1004ff18:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1004ff1a:	4967      	ldr	r1, [pc, #412]	; (100500b8 <cancel_current_master+0x1a0>)
1004ff1c:	2241      	movs	r2, #65	; 0x41
1004ff1e:	6808      	ldr	r0, [r1, #0]
1004ff20:	0152      	lsls	r2, r2, #5
1004ff22:	b082      	sub	sp, #8
1004ff24:	1882      	adds	r2, r0, r2
1004ff26:	9200      	str	r2, [sp, #0]
1004ff28:	227b      	movs	r2, #123	; 0x7b
1004ff2a:	0112      	lsls	r2, r2, #4
1004ff2c:	1886      	adds	r6, r0, r2
1004ff2e:	22ac      	movs	r2, #172	; 0xac
1004ff30:	5c15      	ldrb	r5, [r2, r0]
1004ff32:	4604      	mov	r4, r0
1004ff34:	4603      	mov	r3, r0
1004ff36:	9a02      	ldr	r2, [sp, #8]
1004ff38:	34c0      	adds	r4, #192	; 0xc0
1004ff3a:	3336      	adds	r3, #54	; 0x36
1004ff3c:	4295      	cmp	r5, r2
1004ff3e:	d97d      	bls.n	1005003c <cancel_current_master+0x124>
1004ff40:	2109      	movs	r1, #9
1004ff42:	0209      	lsls	r1, r1, #8
1004ff44:	1840      	adds	r0, r0, r1
1004ff46:	4617      	mov	r7, r2
1004ff48:	2158      	movs	r1, #88	; 0x58
1004ff4a:	6b00      	ldr	r0, [r0, #48]	; 0x30
1004ff4c:	434f      	muls	r7, r1
1004ff4e:	2500      	movs	r5, #0
1004ff50:	1cb9      	adds	r1, r7, #2
1004ff52:	5445      	strb	r5, [r0, r1]
1004ff54:	9802      	ldr	r0, [sp, #8]
1004ff56:	f000 f959 	bl	1005020c <is_slave>
1004ff5a:	2800      	cmp	r0, #0
1004ff5c:	d10c      	bne.n	1004ff78 <cancel_current_master+0x60>
1004ff5e:	4856      	ldr	r0, [pc, #344]	; (100500b8 <cancel_current_master+0x1a0>)
1004ff60:	1dbf      	adds	r7, r7, #6
1004ff62:	6801      	ldr	r1, [r0, #0]
1004ff64:	2009      	movs	r0, #9
1004ff66:	0200      	lsls	r0, r0, #8
1004ff68:	1808      	adds	r0, r1, r0
1004ff6a:	6b00      	ldr	r0, [r0, #48]	; 0x30
1004ff6c:	5dc0      	ldrb	r0, [r0, r7]
1004ff6e:	2800      	cmp	r0, #0
1004ff70:	d002      	beq.n	1004ff78 <cancel_current_master+0x60>
1004ff72:	9800      	ldr	r0, [sp, #0]
1004ff74:	30c0      	adds	r0, #192	; 0xc0
1004ff76:	7205      	strb	r5, [r0, #8]
1004ff78:	b672      	cpsid	i
1004ff7a:	484f      	ldr	r0, [pc, #316]	; (100500b8 <cancel_current_master+0x1a0>)
1004ff7c:	9d02      	ldr	r5, [sp, #8]
1004ff7e:	6807      	ldr	r7, [r0, #0]
1004ff80:	2001      	movs	r0, #1
1004ff82:	4639      	mov	r1, r7
1004ff84:	3120      	adds	r1, #32
1004ff86:	7dca      	ldrb	r2, [r1, #23]
1004ff88:	40a8      	lsls	r0, r5
1004ff8a:	4382      	bics	r2, r0
1004ff8c:	75ca      	strb	r2, [r1, #23]
1004ff8e:	7d31      	ldrb	r1, [r6, #20]
1004ff90:	4381      	bics	r1, r0
1004ff92:	7531      	strb	r1, [r6, #20]
1004ff94:	7819      	ldrb	r1, [r3, #0]
1004ff96:	0708      	lsls	r0, r1, #28
1004ff98:	d47a      	bmi.n	10050090 <cancel_current_master+0x178>
1004ff9a:	074a      	lsls	r2, r1, #29
1004ff9c:	9802      	ldr	r0, [sp, #8]
1004ff9e:	0f52      	lsrs	r2, r2, #29
1004ffa0:	4282      	cmp	r2, r0
1004ffa2:	d07c      	beq.n	1005009e <cancel_current_master+0x186>
1004ffa4:	4630      	mov	r0, r6
1004ffa6:	3020      	adds	r0, #32
1004ffa8:	7e82      	ldrb	r2, [r0, #26]
1004ffaa:	0755      	lsls	r5, r2, #29
1004ffac:	9a02      	ldr	r2, [sp, #8]
1004ffae:	0f6d      	lsrs	r5, r5, #29
1004ffb0:	4295      	cmp	r5, r2
1004ffb2:	d176      	bne.n	100500a2 <cancel_current_master+0x18a>
1004ffb4:	7681      	strb	r1, [r0, #26]
1004ffb6:	200f      	movs	r0, #15
1004ffb8:	7018      	strb	r0, [r3, #0]
1004ffba:	2241      	movs	r2, #65	; 0x41
1004ffbc:	68a0      	ldr	r0, [r4, #8]
1004ffbe:	0152      	lsls	r2, r2, #5
1004ffc0:	6370      	str	r0, [r6, #52]	; 0x34
1004ffc2:	18bd      	adds	r5, r7, r2
1004ffc4:	6da8      	ldr	r0, [r5, #88]	; 0x58
1004ffc6:	6921      	ldr	r1, [r4, #16]
1004ffc8:	65a9      	str	r1, [r5, #88]	; 0x58
1004ffca:	6120      	str	r0, [r4, #16]
1004ffcc:	6d68      	ldr	r0, [r5, #84]	; 0x54
1004ffce:	6961      	ldr	r1, [r4, #20]
1004ffd0:	6569      	str	r1, [r5, #84]	; 0x54
1004ffd2:	6160      	str	r0, [r4, #20]
1004ffd4:	4621      	mov	r1, r4
1004ffd6:	4628      	mov	r0, r5
1004ffd8:	3118      	adds	r1, #24
1004ffda:	305c      	adds	r0, #92	; 0x5c
1004ffdc:	f000 fab2 	bl	10050544 <swap_u16>
1004ffe0:	4836      	ldr	r0, [pc, #216]	; (100500bc <cancel_current_master+0x1a4>)
1004ffe2:	7ea3      	ldrb	r3, [r4, #26]
1004ffe4:	1839      	adds	r1, r7, r0
1004ffe6:	780a      	ldrb	r2, [r1, #0]
1004ffe8:	700b      	strb	r3, [r1, #0]
1004ffea:	76a2      	strb	r2, [r4, #26]
1004ffec:	6ca8      	ldr	r0, [r5, #72]	; 0x48
1004ffee:	6821      	ldr	r1, [r4, #0]
1004fff0:	64a9      	str	r1, [r5, #72]	; 0x48
1004fff2:	6020      	str	r0, [r4, #0]
1004fff4:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
1004fff6:	6861      	ldr	r1, [r4, #4]
1004fff8:	64e9      	str	r1, [r5, #76]	; 0x4c
1004fffa:	6060      	str	r0, [r4, #4]
1004fffc:	2011      	movs	r0, #17
1004fffe:	01c0      	lsls	r0, r0, #7
10050000:	1839      	adds	r1, r7, r0
10050002:	780a      	ldrb	r2, [r1, #0]
10050004:	7ee3      	ldrb	r3, [r4, #27]
10050006:	700b      	strb	r3, [r1, #0]
10050008:	4621      	mov	r1, r4
1005000a:	4628      	mov	r0, r5
1005000c:	76e2      	strb	r2, [r4, #27]
1005000e:	311c      	adds	r1, #28
10050010:	3064      	adds	r0, #100	; 0x64
10050012:	f000 fa97 	bl	10050544 <swap_u16>
10050016:	4621      	mov	r1, r4
10050018:	4628      	mov	r0, r5
1005001a:	311e      	adds	r1, #30
1005001c:	3068      	adds	r0, #104	; 0x68
1005001e:	f000 fa91 	bl	10050544 <swap_u16>
10050022:	4621      	mov	r1, r4
10050024:	4628      	mov	r0, r5
10050026:	3120      	adds	r1, #32
10050028:	306c      	adds	r0, #108	; 0x6c
1005002a:	f000 fa8b 	bl	10050544 <swap_u16>
1005002e:	4621      	mov	r1, r4
10050030:	4628      	mov	r0, r5
10050032:	3122      	adds	r1, #34	; 0x22
10050034:	3070      	adds	r0, #112	; 0x70
10050036:	f000 fa85 	bl	10050544 <swap_u16>
1005003a:	e000      	b.n	1005003e <cancel_current_master+0x126>
1005003c:	e03b      	b.n	100500b6 <cancel_current_master+0x19e>
1005003e:	4621      	mov	r1, r4
10050040:	4628      	mov	r0, r5
10050042:	3124      	adds	r1, #36	; 0x24
10050044:	3074      	adds	r0, #116	; 0x74
10050046:	f000 fa7d 	bl	10050544 <swap_u16>
1005004a:	4621      	mov	r1, r4
1005004c:	4628      	mov	r0, r5
1005004e:	3126      	adds	r1, #38	; 0x26
10050050:	3078      	adds	r0, #120	; 0x78
10050052:	f000 fa77 	bl	10050544 <swap_u16>
10050056:	4819      	ldr	r0, [pc, #100]	; (100500bc <cancel_current_master+0x1a4>)
10050058:	3580      	adds	r5, #128	; 0x80
1005005a:	301d      	adds	r0, #29
1005005c:	1839      	adds	r1, r7, r0
1005005e:	4620      	mov	r0, r4
10050060:	3028      	adds	r0, #40	; 0x28
10050062:	780a      	ldrb	r2, [r1, #0]
10050064:	7803      	ldrb	r3, [r0, #0]
10050066:	700b      	strb	r3, [r1, #0]
10050068:	7002      	strb	r2, [r0, #0]
1005006a:	4814      	ldr	r0, [pc, #80]	; (100500bc <cancel_current_master+0x1a4>)
1005006c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
1005006e:	3026      	adds	r0, #38	; 0x26
10050070:	1838      	adds	r0, r7, r0
10050072:	6801      	ldr	r1, [r0, #0]
10050074:	6002      	str	r2, [r0, #0]
10050076:	62e1      	str	r1, [r4, #44]	; 0x2c
10050078:	2107      	movs	r1, #7
1005007a:	68e0      	ldr	r0, [r4, #12]
1005007c:	0509      	lsls	r1, r1, #20
1005007e:	4308      	orrs	r0, r1
10050080:	6ba9      	ldr	r1, [r5, #56]	; 0x38
10050082:	2203      	movs	r2, #3
10050084:	1d09      	adds	r1, r1, #4
10050086:	f7fc fc6d 	bl	1004c964 <set_string>
1005008a:	e00a      	b.n	100500a2 <cancel_current_master+0x18a>
1005008c:	e000      	b.n	10050090 <cancel_current_master+0x178>
1005008e:	e006      	b.n	1005009e <cancel_current_master+0x186>
10050090:	203a      	movs	r0, #58	; 0x3a
10050092:	5d80      	ldrb	r0, [r0, r6]
10050094:	0741      	lsls	r1, r0, #29
10050096:	9802      	ldr	r0, [sp, #8]
10050098:	0f49      	lsrs	r1, r1, #29
1005009a:	4281      	cmp	r1, r0
1005009c:	d101      	bne.n	100500a2 <cancel_current_master+0x18a>
1005009e:	200f      	movs	r0, #15
100500a0:	7018      	strb	r0, [r3, #0]
100500a2:	3620      	adds	r6, #32
100500a4:	7eb0      	ldrb	r0, [r6, #26]
100500a6:	0741      	lsls	r1, r0, #29
100500a8:	9802      	ldr	r0, [sp, #8]
100500aa:	0f49      	lsrs	r1, r1, #29
100500ac:	4281      	cmp	r1, r0
100500ae:	d101      	bne.n	100500b4 <cancel_current_master+0x19c>
100500b0:	200f      	movs	r0, #15
100500b2:	76b0      	strb	r0, [r6, #26]
100500b4:	b662      	cpsie	i
100500b6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100500b8:	2000098c 	.word	0x2000098c
100500bc:	0000087e 	.word	0x0000087e

100500c0 <get_advertiser>:
100500c0:	b570      	push	{r4, r5, r6, lr}
100500c2:	4810      	ldr	r0, [pc, #64]	; (10050104 <get_advertiser+0x44>)
100500c4:	2409      	movs	r4, #9
100500c6:	6802      	ldr	r2, [r0, #0]
100500c8:	207b      	movs	r0, #123	; 0x7b
100500ca:	0100      	lsls	r0, r0, #4
100500cc:	1810      	adds	r0, r2, r0
100500ce:	7d03      	ldrb	r3, [r0, #20]
100500d0:	0224      	lsls	r4, r4, #8
100500d2:	2008      	movs	r0, #8
100500d4:	2100      	movs	r1, #0
100500d6:	1914      	adds	r4, r2, r4
100500d8:	32a0      	adds	r2, #160	; 0xa0
100500da:	7b15      	ldrb	r5, [r2, #12]
100500dc:	e00e      	b.n	100500fc <get_advertiser+0x3c>
100500de:	07da      	lsls	r2, r3, #31
100500e0:	d009      	beq.n	100500f6 <get_advertiser+0x36>
100500e2:	2258      	movs	r2, #88	; 0x58
100500e4:	434a      	muls	r2, r1
100500e6:	6b26      	ldr	r6, [r4, #48]	; 0x30
100500e8:	1c92      	adds	r2, r2, #2
100500ea:	5cb2      	ldrb	r2, [r6, r2]
100500ec:	0752      	lsls	r2, r2, #29
100500ee:	0f52      	lsrs	r2, r2, #29
100500f0:	2a01      	cmp	r2, #1
100500f2:	d100      	bne.n	100500f6 <get_advertiser+0x36>
100500f4:	4608      	mov	r0, r1
100500f6:	085b      	lsrs	r3, r3, #1
100500f8:	1c49      	adds	r1, r1, #1
100500fa:	b2c9      	uxtb	r1, r1
100500fc:	428d      	cmp	r5, r1
100500fe:	d8ee      	bhi.n	100500de <get_advertiser+0x1e>
10050100:	bd70      	pop	{r4, r5, r6, pc}
10050102:	0000      	.short	0x0000
10050104:	2000098c 	.word	0x2000098c

10050108 <get_connection_no>:
10050108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005010a:	4607      	mov	r7, r0
1005010c:	481f      	ldr	r0, [pc, #124]	; (1005018c <get_connection_no+0x84>)
1005010e:	2609      	movs	r6, #9
10050110:	6805      	ldr	r5, [r0, #0]
10050112:	207b      	movs	r0, #123	; 0x7b
10050114:	0100      	lsls	r0, r0, #4
10050116:	182c      	adds	r4, r5, r0
10050118:	4628      	mov	r0, r5
1005011a:	3036      	adds	r0, #54	; 0x36
1005011c:	0236      	lsls	r6, r6, #8
1005011e:	053f      	lsls	r7, r7, #20
10050120:	4684      	mov	ip, r0
10050122:	0d3f      	lsrs	r7, r7, #20
10050124:	19ae      	adds	r6, r5, r6
10050126:	7d23      	ldrb	r3, [r4, #20]
10050128:	2008      	movs	r0, #8
1005012a:	2200      	movs	r2, #0
1005012c:	35a0      	adds	r5, #160	; 0xa0
1005012e:	9700      	str	r7, [sp, #0]
10050130:	46b6      	mov	lr, r6
10050132:	7b2d      	ldrb	r5, [r5, #12]
10050134:	e00e      	b.n	10050154 <get_connection_no+0x4c>
10050136:	07de      	lsls	r6, r3, #31
10050138:	d009      	beq.n	1005014e <get_connection_no+0x46>
1005013a:	4676      	mov	r6, lr
1005013c:	6b36      	ldr	r6, [r6, #48]	; 0x30
1005013e:	2758      	movs	r7, #88	; 0x58
10050140:	4357      	muls	r7, r2
10050142:	19f6      	adds	r6, r6, r7
10050144:	8976      	ldrh	r6, [r6, #10]
10050146:	9f00      	ldr	r7, [sp, #0]
10050148:	42b7      	cmp	r7, r6
1005014a:	d100      	bne.n	1005014e <get_connection_no+0x46>
1005014c:	4610      	mov	r0, r2
1005014e:	085b      	lsrs	r3, r3, #1
10050150:	1c52      	adds	r2, r2, #1
10050152:	b2d2      	uxtb	r2, r2
10050154:	4295      	cmp	r5, r2
10050156:	d8ee      	bhi.n	10050136 <get_connection_no+0x2e>
10050158:	3420      	adds	r4, #32
1005015a:	7ea2      	ldrb	r2, [r4, #26]
1005015c:	0712      	lsls	r2, r2, #28
1005015e:	0f12      	lsrs	r2, r2, #28
10050160:	4282      	cmp	r2, r0
10050162:	d102      	bne.n	1005016a <get_connection_no+0x62>
10050164:	07cb      	lsls	r3, r1, #31
10050166:	d100      	bne.n	1005016a <get_connection_no+0x62>
10050168:	2008      	movs	r0, #8
1005016a:	4282      	cmp	r2, r0
1005016c:	d007      	beq.n	1005017e <get_connection_no+0x76>
1005016e:	4662      	mov	r2, ip
10050170:	7812      	ldrb	r2, [r2, #0]
10050172:	0713      	lsls	r3, r2, #28
10050174:	d407      	bmi.n	10050186 <get_connection_no+0x7e>
10050176:	0752      	lsls	r2, r2, #29
10050178:	0f52      	lsrs	r2, r2, #29
1005017a:	4282      	cmp	r2, r0
1005017c:	d103      	bne.n	10050186 <get_connection_no+0x7e>
1005017e:	07c9      	lsls	r1, r1, #31
10050180:	d100      	bne.n	10050184 <get_connection_no+0x7c>
10050182:	2008      	movs	r0, #8
10050184:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10050186:	0789      	lsls	r1, r1, #30
10050188:	d5fb      	bpl.n	10050182 <get_connection_no+0x7a>
1005018a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005018c:	2000098c 	.word	0x2000098c

10050190 <get_next_free_slot>:
10050190:	b510      	push	{r4, lr}
10050192:	480b      	ldr	r0, [pc, #44]	; (100501c0 <get_next_free_slot+0x30>)
10050194:	2100      	movs	r1, #0
10050196:	6803      	ldr	r3, [r0, #0]
10050198:	207b      	movs	r0, #123	; 0x7b
1005019a:	0100      	lsls	r0, r0, #4
1005019c:	1818      	adds	r0, r3, r0
1005019e:	7d02      	ldrb	r2, [r0, #20]
100501a0:	2008      	movs	r0, #8
100501a2:	33a0      	adds	r3, #160	; 0xa0
100501a4:	7b1b      	ldrb	r3, [r3, #12]
100501a6:	e005      	b.n	100501b4 <get_next_free_slot+0x24>
100501a8:	07d4      	lsls	r4, r2, #31
100501aa:	d100      	bne.n	100501ae <get_next_free_slot+0x1e>
100501ac:	4608      	mov	r0, r1
100501ae:	0852      	lsrs	r2, r2, #1
100501b0:	1c49      	adds	r1, r1, #1
100501b2:	b2c9      	uxtb	r1, r1
100501b4:	428b      	cmp	r3, r1
100501b6:	d901      	bls.n	100501bc <get_next_free_slot+0x2c>
100501b8:	2808      	cmp	r0, #8
100501ba:	d0f5      	beq.n	100501a8 <get_next_free_slot+0x18>
100501bc:	bd10      	pop	{r4, pc}
100501be:	0000      	.short	0x0000
100501c0:	2000098c 	.word	0x2000098c

100501c4 <get_scan_connection>:
100501c4:	b570      	push	{r4, r5, r6, lr}
100501c6:	4810      	ldr	r0, [pc, #64]	; (10050208 <get_scan_connection+0x44>)
100501c8:	2409      	movs	r4, #9
100501ca:	6802      	ldr	r2, [r0, #0]
100501cc:	207b      	movs	r0, #123	; 0x7b
100501ce:	0100      	lsls	r0, r0, #4
100501d0:	1811      	adds	r1, r2, r0
100501d2:	7d0b      	ldrb	r3, [r1, #20]
100501d4:	0224      	lsls	r4, r4, #8
100501d6:	2008      	movs	r0, #8
100501d8:	2100      	movs	r1, #0
100501da:	1915      	adds	r5, r2, r4
100501dc:	32a0      	adds	r2, #160	; 0xa0
100501de:	7b12      	ldrb	r2, [r2, #12]
100501e0:	e00e      	b.n	10050200 <get_scan_connection+0x3c>
100501e2:	2458      	movs	r4, #88	; 0x58
100501e4:	434c      	muls	r4, r1
100501e6:	6b2e      	ldr	r6, [r5, #48]	; 0x30
100501e8:	1ca4      	adds	r4, r4, #2
100501ea:	5d34      	ldrb	r4, [r6, r4]
100501ec:	0764      	lsls	r4, r4, #29
100501ee:	0f64      	lsrs	r4, r4, #29
100501f0:	2c03      	cmp	r4, #3
100501f2:	d102      	bne.n	100501fa <get_scan_connection+0x36>
100501f4:	07dc      	lsls	r4, r3, #31
100501f6:	d000      	beq.n	100501fa <get_scan_connection+0x36>
100501f8:	4608      	mov	r0, r1
100501fa:	085b      	lsrs	r3, r3, #1
100501fc:	1c49      	adds	r1, r1, #1
100501fe:	b2c9      	uxtb	r1, r1
10050200:	428a      	cmp	r2, r1
10050202:	d8ee      	bhi.n	100501e2 <get_scan_connection+0x1e>
10050204:	bd70      	pop	{r4, r5, r6, pc}
10050206:	0000      	.short	0x0000
10050208:	2000098c 	.word	0x2000098c

1005020c <is_slave>:
1005020c:	490b      	ldr	r1, [pc, #44]	; (1005023c <is_slave+0x30>)
1005020e:	227b      	movs	r2, #123	; 0x7b
10050210:	6809      	ldr	r1, [r1, #0]
10050212:	0112      	lsls	r2, r2, #4
10050214:	188a      	adds	r2, r1, r2
10050216:	3220      	adds	r2, #32
10050218:	7e92      	ldrb	r2, [r2, #26]
1005021a:	3136      	adds	r1, #54	; 0x36
1005021c:	0712      	lsls	r2, r2, #28
1005021e:	0f12      	lsrs	r2, r2, #28
10050220:	4282      	cmp	r2, r0
10050222:	d006      	beq.n	10050232 <is_slave+0x26>
10050224:	7809      	ldrb	r1, [r1, #0]
10050226:	070a      	lsls	r2, r1, #28
10050228:	d405      	bmi.n	10050236 <is_slave+0x2a>
1005022a:	0749      	lsls	r1, r1, #29
1005022c:	0f49      	lsrs	r1, r1, #29
1005022e:	4281      	cmp	r1, r0
10050230:	d101      	bne.n	10050236 <is_slave+0x2a>
10050232:	2001      	movs	r0, #1
10050234:	4770      	bx	lr
10050236:	2000      	movs	r0, #0
10050238:	4770      	bx	lr
1005023a:	0000      	.short	0x0000
1005023c:	2000098c 	.word	0x2000098c

10050240 <nsar_init>:
10050240:	4804      	ldr	r0, [pc, #16]	; (10050254 <nsar_init+0x14>)
10050242:	217b      	movs	r1, #123	; 0x7b
10050244:	6800      	ldr	r0, [r0, #0]
10050246:	0109      	lsls	r1, r1, #4
10050248:	1841      	adds	r1, r0, r1
1005024a:	30a0      	adds	r0, #160	; 0xa0
1005024c:	7b00      	ldrb	r0, [r0, #12]
1005024e:	6c89      	ldr	r1, [r1, #72]	; 0x48
10050250:	5408      	strb	r0, [r1, r0]
10050252:	4770      	bx	lr
10050254:	2000098c 	.word	0x2000098c

10050258 <nsar_insertSlotListEntry>:
10050258:	b510      	push	{r4, lr}
1005025a:	4a05      	ldr	r2, [pc, #20]	; (10050270 <nsar_insertSlotListEntry+0x18>)
1005025c:	237b      	movs	r3, #123	; 0x7b
1005025e:	6812      	ldr	r2, [r2, #0]
10050260:	011b      	lsls	r3, r3, #4
10050262:	18d2      	adds	r2, r2, r3
10050264:	6c93      	ldr	r3, [r2, #72]	; 0x48
10050266:	5c5c      	ldrb	r4, [r3, r1]
10050268:	541c      	strb	r4, [r3, r0]
1005026a:	6c92      	ldr	r2, [r2, #72]	; 0x48
1005026c:	5450      	strb	r0, [r2, r1]
1005026e:	bd10      	pop	{r4, pc}
10050270:	2000098c 	.word	0x2000098c

10050274 <nsar_searchBestFreeSlot>:
10050274:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10050276:	4607      	mov	r7, r0
10050278:	4615      	mov	r5, r2
1005027a:	482d      	ldr	r0, [pc, #180]	; (10050330 <nsar_searchBestFreeSlot+0xbc>)
1005027c:	227b      	movs	r2, #123	; 0x7b
1005027e:	6801      	ldr	r1, [r0, #0]
10050280:	0112      	lsls	r2, r2, #4
10050282:	188e      	adds	r6, r1, r2
10050284:	b08a      	sub	sp, #40	; 0x28
10050286:	2200      	movs	r2, #0
10050288:	60af      	str	r7, [r5, #8]
1005028a:	9207      	str	r2, [sp, #28]
1005028c:	9202      	str	r2, [sp, #8]
1005028e:	31a0      	adds	r1, #160	; 0xa0
10050290:	7b09      	ldrb	r1, [r1, #12]
10050292:	466a      	mov	r2, sp
10050294:	7111      	strb	r1, [r2, #4]
10050296:	7029      	strb	r1, [r5, #0]
10050298:	6801      	ldr	r1, [r0, #0]
1005029a:	6cb2      	ldr	r2, [r6, #72]	; 0x48
1005029c:	31a0      	adds	r1, #160	; 0xa0
1005029e:	7b09      	ldrb	r1, [r1, #12]
100502a0:	5c54      	ldrb	r4, [r2, r1]
100502a2:	e023      	b.n	100502ec <nsar_searchBestFreeSlot+0x78>
100502a4:	6a70      	ldr	r0, [r6, #36]	; 0x24
100502a6:	0061      	lsls	r1, r4, #1
100502a8:	5a40      	ldrh	r0, [r0, r1]
100502aa:	0180      	lsls	r0, r0, #6
100502ac:	9000      	str	r0, [sp, #0]
100502ae:	6ab0      	ldr	r0, [r6, #40]	; 0x28
100502b0:	5a40      	ldrh	r0, [r0, r1]
100502b2:	9902      	ldr	r1, [sp, #8]
100502b4:	0180      	lsls	r0, r0, #6
100502b6:	9004      	str	r0, [sp, #16]
100502b8:	9800      	ldr	r0, [sp, #0]
100502ba:	1a41      	subs	r1, r0, r1
100502bc:	2005      	movs	r0, #5
100502be:	01c0      	lsls	r0, r0, #7
100502c0:	9103      	str	r1, [sp, #12]
100502c2:	4281      	cmp	r1, r0
100502c4:	d301      	bcc.n	100502ca <nsar_searchBestFreeSlot+0x56>
100502c6:	1a08      	subs	r0, r1, r0
100502c8:	9003      	str	r0, [sp, #12]
100502ca:	ab05      	add	r3, sp, #20
100502cc:	462a      	mov	r2, r5
100502ce:	a901      	add	r1, sp, #4
100502d0:	980b      	ldr	r0, [sp, #44]	; 0x2c
100502d2:	f000 f82f 	bl	10050334 <nsar_updateBestFreeSlot>
100502d6:	9904      	ldr	r1, [sp, #16]
100502d8:	9800      	ldr	r0, [sp, #0]
100502da:	1841      	adds	r1, r0, r1
100502dc:	2005      	movs	r0, #5
100502de:	01c0      	lsls	r0, r0, #7
100502e0:	1808      	adds	r0, r1, r0
100502e2:	9002      	str	r0, [sp, #8]
100502e4:	4668      	mov	r0, sp
100502e6:	7104      	strb	r4, [r0, #4]
100502e8:	6cb0      	ldr	r0, [r6, #72]	; 0x48
100502ea:	5d04      	ldrb	r4, [r0, r4]
100502ec:	4810      	ldr	r0, [pc, #64]	; (10050330 <nsar_searchBestFreeSlot+0xbc>)
100502ee:	6800      	ldr	r0, [r0, #0]
100502f0:	30a0      	adds	r0, #160	; 0xa0
100502f2:	7b00      	ldrb	r0, [r0, #12]
100502f4:	42a0      	cmp	r0, r4
100502f6:	d1d5      	bne.n	100502a4 <nsar_searchBestFreeSlot+0x30>
100502f8:	9802      	ldr	r0, [sp, #8]
100502fa:	1a39      	subs	r1, r7, r0
100502fc:	2005      	movs	r0, #5
100502fe:	01c0      	lsls	r0, r0, #7
10050300:	9103      	str	r1, [sp, #12]
10050302:	4281      	cmp	r1, r0
10050304:	d201      	bcs.n	1005030a <nsar_searchBestFreeSlot+0x96>
10050306:	2000      	movs	r0, #0
10050308:	e000      	b.n	1005030c <nsar_searchBestFreeSlot+0x98>
1005030a:	1a08      	subs	r0, r1, r0
1005030c:	9003      	str	r0, [sp, #12]
1005030e:	ab05      	add	r3, sp, #20
10050310:	462a      	mov	r2, r5
10050312:	a901      	add	r1, sp, #4
10050314:	980b      	ldr	r0, [sp, #44]	; 0x2c
10050316:	f000 f80d 	bl	10050334 <nsar_updateBestFreeSlot>
1005031a:	68a8      	ldr	r0, [r5, #8]
1005031c:	1a38      	subs	r0, r7, r0
1005031e:	d003      	beq.n	10050328 <nsar_searchBestFreeSlot+0xb4>
10050320:	990b      	ldr	r1, [sp, #44]	; 0x2c
10050322:	60a9      	str	r1, [r5, #8]
10050324:	b00d      	add	sp, #52	; 0x34
10050326:	bdf0      	pop	{r4, r5, r6, r7, pc}
10050328:	ac05      	add	r4, sp, #20
1005032a:	cc0e      	ldmia	r4!, {r1, r2, r3}
1005032c:	c50e      	stmia	r5!, {r1, r2, r3}
1005032e:	e7f9      	b.n	10050324 <nsar_searchBestFreeSlot+0xb0>
10050330:	2000098c 	.word	0x2000098c

10050334 <nsar_updateBestFreeSlot>:
10050334:	b5f0      	push	{r4, r5, r6, r7, lr}
10050336:	688c      	ldr	r4, [r1, #8]
10050338:	689d      	ldr	r5, [r3, #8]
1005033a:	42a5      	cmp	r5, r4
1005033c:	d803      	bhi.n	10050346 <nsar_updateBestFreeSlot+0x12>
1005033e:	c960      	ldmia	r1!, {r5, r6}
10050340:	4627      	mov	r7, r4
10050342:	c3e0      	stmia	r3!, {r5, r6, r7}
10050344:	3908      	subs	r1, #8
10050346:	42a0      	cmp	r0, r4
10050348:	d804      	bhi.n	10050354 <nsar_updateBestFreeSlot+0x20>
1005034a:	6890      	ldr	r0, [r2, #8]
1005034c:	42a0      	cmp	r0, r4
1005034e:	d901      	bls.n	10050354 <nsar_updateBestFreeSlot+0x20>
10050350:	c90b      	ldmia	r1, {r0, r1, r3}
10050352:	c20b      	stmia	r2!, {r0, r1, r3}
10050354:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10050358 <nsar_updateSlotListEntry>:
10050358:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
1005035a:	4b19      	ldr	r3, [pc, #100]	; (100503c0 <nsar_updateSlotListEntry+0x68>)
1005035c:	217b      	movs	r1, #123	; 0x7b
1005035e:	6818      	ldr	r0, [r3, #0]
10050360:	0109      	lsls	r1, r1, #4
10050362:	4602      	mov	r2, r0
10050364:	3236      	adds	r2, #54	; 0x36
10050366:	1841      	adds	r1, r0, r1
10050368:	4696      	mov	lr, r2
1005036a:	30a0      	adds	r0, #160	; 0xa0
1005036c:	7b02      	ldrb	r2, [r0, #12]
1005036e:	6c88      	ldr	r0, [r1, #72]	; 0x48
10050370:	5c80      	ldrb	r0, [r0, r2]
10050372:	460c      	mov	r4, r1
10050374:	3420      	adds	r4, #32
10050376:	46a4      	mov	ip, r4
10050378:	e01b      	b.n	100503b2 <nsar_updateSlotListEntry+0x5a>
1005037a:	6c8d      	ldr	r5, [r1, #72]	; 0x48
1005037c:	5c2c      	ldrb	r4, [r5, r0]
1005037e:	9e00      	ldr	r6, [sp, #0]
10050380:	42b0      	cmp	r0, r6
10050382:	d012      	beq.n	100503aa <nsar_updateSlotListEntry+0x52>
10050384:	4666      	mov	r6, ip
10050386:	7eb6      	ldrb	r6, [r6, #26]
10050388:	0736      	lsls	r6, r6, #28
1005038a:	0f36      	lsrs	r6, r6, #28
1005038c:	4286      	cmp	r6, r0
1005038e:	d00c      	beq.n	100503aa <nsar_updateSlotListEntry+0x52>
10050390:	4676      	mov	r6, lr
10050392:	7836      	ldrb	r6, [r6, #0]
10050394:	0777      	lsls	r7, r6, #29
10050396:	0f7f      	lsrs	r7, r7, #29
10050398:	4287      	cmp	r7, r0
1005039a:	d101      	bne.n	100503a0 <nsar_updateSlotListEntry+0x48>
1005039c:	0736      	lsls	r6, r6, #28
1005039e:	d504      	bpl.n	100503aa <nsar_updateSlotListEntry+0x52>
100503a0:	2601      	movs	r6, #1
100503a2:	7d0f      	ldrb	r7, [r1, #20]
100503a4:	4086      	lsls	r6, r0
100503a6:	423e      	tst	r6, r7
100503a8:	d101      	bne.n	100503ae <nsar_updateSlotListEntry+0x56>
100503aa:	54ac      	strb	r4, [r5, r2]
100503ac:	e000      	b.n	100503b0 <nsar_updateSlotListEntry+0x58>
100503ae:	4602      	mov	r2, r0
100503b0:	4620      	mov	r0, r4
100503b2:	681c      	ldr	r4, [r3, #0]
100503b4:	34a0      	adds	r4, #160	; 0xa0
100503b6:	7b24      	ldrb	r4, [r4, #12]
100503b8:	4284      	cmp	r4, r0
100503ba:	d1de      	bne.n	1005037a <nsar_updateSlotListEntry+0x22>
100503bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100503be:	0000      	.short	0x0000
100503c0:	2000098c 	.word	0x2000098c

100503c4 <schedule_advertise_slot>:
100503c4:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100503c6:	4e29      	ldr	r6, [pc, #164]	; (1005046c <schedule_advertise_slot+0xa8>)
100503c8:	4607      	mov	r7, r0
100503ca:	b089      	sub	sp, #36	; 0x24
100503cc:	217b      	movs	r1, #123	; 0x7b
100503ce:	6830      	ldr	r0, [r6, #0]
100503d0:	0109      	lsls	r1, r1, #4
100503d2:	1845      	adds	r5, r0, r1
100503d4:	4926      	ldr	r1, [pc, #152]	; (10050470 <schedule_advertise_slot+0xac>)
100503d6:	ab05      	add	r3, sp, #20
100503d8:	aa07      	add	r2, sp, #28
100503da:	a806      	add	r0, sp, #24
100503dc:	466c      	mov	r4, sp
100503de:	9107      	str	r1, [sp, #28]
100503e0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
100503e2:	ab0c      	add	r3, sp, #48	; 0x30
100503e4:	aa0b      	add	r2, sp, #44	; 0x2c
100503e6:	2101      	movs	r1, #1
100503e8:	4638      	mov	r0, r7
100503ea:	f7ff faff 	bl	1004f9ec <adapt_slot>
100503ee:	9000      	str	r0, [sp, #0]
100503f0:	2800      	cmp	r0, #0
100503f2:	d138      	bne.n	10050466 <schedule_advertise_slot+0xa2>
100503f4:	980c      	ldr	r0, [sp, #48]	; 0x30
100503f6:	6068      	str	r0, [r5, #4]
100503f8:	4669      	mov	r1, sp
100503fa:	6a6a      	ldr	r2, [r5, #36]	; 0x24
100503fc:	8a89      	ldrh	r1, [r1, #20]
100503fe:	0078      	lsls	r0, r7, #1
10050400:	5211      	strh	r1, [r2, r0]
10050402:	6aaa      	ldr	r2, [r5, #40]	; 0x28
10050404:	9907      	ldr	r1, [sp, #28]
10050406:	5211      	strh	r1, [r2, r0]
10050408:	6aea      	ldr	r2, [r5, #44]	; 0x2c
1005040a:	2100      	movs	r1, #0
1005040c:	5211      	strh	r1, [r2, r0]
1005040e:	4669      	mov	r1, sp
10050410:	6b2a      	ldr	r2, [r5, #48]	; 0x30
10050412:	8b09      	ldrh	r1, [r1, #24]
10050414:	5211      	strh	r1, [r2, r0]
10050416:	2009      	movs	r0, #9
10050418:	6832      	ldr	r2, [r6, #0]
1005041a:	0200      	lsls	r0, r0, #8
1005041c:	1812      	adds	r2, r2, r0
1005041e:	463c      	mov	r4, r7
10050420:	2358      	movs	r3, #88	; 0x58
10050422:	6b12      	ldr	r2, [r2, #48]	; 0x30
10050424:	435c      	muls	r4, r3
10050426:	2100      	movs	r1, #0
10050428:	1d63      	adds	r3, r4, #5
1005042a:	54d1      	strb	r1, [r2, r3]
1005042c:	6832      	ldr	r2, [r6, #0]
1005042e:	990a      	ldr	r1, [sp, #40]	; 0x28
10050430:	1812      	adds	r2, r2, r0
10050432:	6b12      	ldr	r2, [r2, #48]	; 0x30
10050434:	1ca3      	adds	r3, r4, #2
10050436:	54d1      	strb	r1, [r2, r3]
10050438:	6832      	ldr	r2, [r6, #0]
1005043a:	2100      	movs	r1, #0
1005043c:	1812      	adds	r2, r2, r0
1005043e:	6b12      	ldr	r2, [r2, #48]	; 0x30
10050440:	43c9      	mvns	r1, r1
10050442:	3308      	adds	r3, #8
10050444:	52d1      	strh	r1, [r2, r3]
10050446:	6832      	ldr	r2, [r6, #0]
10050448:	2100      	movs	r1, #0
1005044a:	1810      	adds	r0, r2, r0
1005044c:	6b00      	ldr	r0, [r0, #48]	; 0x30
1005044e:	340f      	adds	r4, #15
10050450:	5501      	strb	r1, [r0, r4]
10050452:	b672      	cpsid	i
10050454:	7d29      	ldrb	r1, [r5, #20]
10050456:	2001      	movs	r0, #1
10050458:	40b8      	lsls	r0, r7
1005045a:	4308      	orrs	r0, r1
1005045c:	7528      	strb	r0, [r5, #20]
1005045e:	b662      	cpsie	i
10050460:	4608      	mov	r0, r1
10050462:	f000 f807 	bl	10050474 <start_timebase>
10050466:	9800      	ldr	r0, [sp, #0]
10050468:	b00d      	add	sp, #52	; 0x34
1005046a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005046c:	2000098c 	.word	0x2000098c
10050470:	00001770 	.word	0x00001770

10050474 <start_timebase>:
10050474:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10050476:	4f30      	ldr	r7, [pc, #192]	; (10050538 <start_timebase+0xc4>)
10050478:	4605      	mov	r5, r0
1005047a:	207b      	movs	r0, #123	; 0x7b
1005047c:	683e      	ldr	r6, [r7, #0]
1005047e:	0100      	lsls	r0, r0, #4
10050480:	1834      	adds	r4, r6, r0
10050482:	2041      	movs	r0, #65	; 0x41
10050484:	0140      	lsls	r0, r0, #5
10050486:	1830      	adds	r0, r6, r0
10050488:	9000      	str	r0, [sp, #0]
1005048a:	482c      	ldr	r0, [pc, #176]	; (1005053c <start_timebase+0xc8>)
1005048c:	3636      	adds	r6, #54	; 0x36
1005048e:	f001 fe9b 	bl	100521c8 <machine_time_trans>
10050492:	492b      	ldr	r1, [pc, #172]	; (10050540 <start_timebase+0xcc>)
10050494:	7a4a      	ldrb	r2, [r1, #9]
10050496:	00d2      	lsls	r2, r2, #3
10050498:	1880      	adds	r0, r0, r2
1005049a:	2d00      	cmp	r5, #0
1005049c:	d036      	beq.n	1005050c <start_timebase+0x98>
1005049e:	7831      	ldrb	r1, [r6, #0]
100504a0:	074a      	lsls	r2, r1, #29
100504a2:	468e      	mov	lr, r1
100504a4:	213a      	movs	r1, #58	; 0x3a
100504a6:	5d09      	ldrb	r1, [r1, r4]
100504a8:	0f52      	lsrs	r2, r2, #29
100504aa:	074b      	lsls	r3, r1, #29
100504ac:	0f5b      	lsrs	r3, r3, #29
100504ae:	4694      	mov	ip, r2
100504b0:	429a      	cmp	r2, r3
100504b2:	d106      	bne.n	100504c2 <start_timebase+0x4e>
100504b4:	070e      	lsls	r6, r1, #28
100504b6:	0f36      	lsrs	r6, r6, #28
100504b8:	2201      	movs	r2, #1
100504ba:	40b2      	lsls	r2, r6
100504bc:	462e      	mov	r6, r5
100504be:	4396      	bics	r6, r2
100504c0:	d00d      	beq.n	100504de <start_timebase+0x6a>
100504c2:	459c      	cmp	ip, r3
100504c4:	d021      	beq.n	1005050a <start_timebase+0x96>
100504c6:	070b      	lsls	r3, r1, #28
100504c8:	2101      	movs	r1, #1
100504ca:	0f1b      	lsrs	r3, r3, #28
100504cc:	460a      	mov	r2, r1
100504ce:	409a      	lsls	r2, r3
100504d0:	4673      	mov	r3, lr
100504d2:	071b      	lsls	r3, r3, #28
100504d4:	0f1b      	lsrs	r3, r3, #28
100504d6:	4099      	lsls	r1, r3
100504d8:	430a      	orrs	r2, r1
100504da:	4395      	bics	r5, r2
100504dc:	d115      	bne.n	1005050a <start_timebase+0x96>
100504de:	2109      	movs	r1, #9
100504e0:	06c9      	lsls	r1, r1, #27
100504e2:	6909      	ldr	r1, [r1, #16]
100504e4:	2201      	movs	r2, #1
100504e6:	1808      	adds	r0, r1, r0
100504e8:	0200      	lsls	r0, r0, #8
100504ea:	2100      	movs	r1, #0
100504ec:	0a00      	lsrs	r0, r0, #8
100504ee:	6461      	str	r1, [r4, #68]	; 0x44
100504f0:	6020      	str	r0, [r4, #0]
100504f2:	6839      	ldr	r1, [r7, #0]
100504f4:	02d2      	lsls	r2, r2, #11
100504f6:	1889      	adds	r1, r1, r2
100504f8:	6f09      	ldr	r1, [r1, #112]	; 0x70
100504fa:	1a40      	subs	r0, r0, r1
100504fc:	0200      	lsls	r0, r0, #8
100504fe:	1200      	asrs	r0, r0, #8
10050500:	2800      	cmp	r0, #0
10050502:	dc02      	bgt.n	1005050a <start_timebase+0x96>
10050504:	2000      	movs	r0, #0
10050506:	f005 fd2f 	bl	10055f68 <advance_wakeup_timer>
1005050a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005050c:	2248      	movs	r2, #72	; 0x48
1005050e:	800a      	strh	r2, [r1, #0]
10050510:	0611      	lsls	r1, r2, #24
10050512:	6909      	ldr	r1, [r1, #16]
10050514:	2500      	movs	r5, #0
10050516:	1808      	adds	r0, r1, r0
10050518:	0200      	lsls	r0, r0, #8
1005051a:	9900      	ldr	r1, [sp, #0]
1005051c:	0a00      	lsrs	r0, r0, #8
1005051e:	6508      	str	r0, [r1, #80]	; 0x50
10050520:	6465      	str	r5, [r4, #68]	; 0x44
10050522:	6020      	str	r0, [r4, #0]
10050524:	4628      	mov	r0, r5
10050526:	f005 fd1f 	bl	10055f68 <advance_wakeup_timer>
1005052a:	6838      	ldr	r0, [r7, #0]
1005052c:	3068      	adds	r0, #104	; 0x68
1005052e:	7145      	strb	r5, [r0, #5]
10050530:	f7fc f9d0 	bl	1004c8d4 <hal_radio_activity_state_callback_check>
10050534:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10050536:	0000      	.short	0x0000
10050538:	2000098c 	.word	0x2000098c
1005053c:	00000266 	.word	0x00000266
10050540:	200000c0 	.word	0x200000c0

10050544 <swap_u16>:
10050544:	8802      	ldrh	r2, [r0, #0]
10050546:	880b      	ldrh	r3, [r1, #0]
10050548:	8003      	strh	r3, [r0, #0]
1005054a:	800a      	strh	r2, [r1, #0]
1005054c:	4770      	bx	lr
	...

10050550 <timebase_start_connect>:
10050550:	480b      	ldr	r0, [pc, #44]	; (10050580 <timebase_start_connect+0x30>)
10050552:	217b      	movs	r1, #123	; 0x7b
10050554:	6800      	ldr	r0, [r0, #0]
10050556:	0109      	lsls	r1, r1, #4
10050558:	1840      	adds	r0, r0, r1
1005055a:	490a      	ldr	r1, [pc, #40]	; (10050584 <timebase_start_connect+0x34>)
1005055c:	8809      	ldrh	r1, [r1, #0]
1005055e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10050560:	0749      	lsls	r1, r1, #29
10050562:	8c02      	ldrh	r2, [r0, #32]
10050564:	0f09      	lsrs	r1, r1, #28
10050566:	525a      	strh	r2, [r3, r1]
10050568:	6b03      	ldr	r3, [r0, #48]	; 0x30
1005056a:	8bc2      	ldrh	r2, [r0, #30]
1005056c:	525a      	strh	r2, [r3, r1]
1005056e:	6a83      	ldr	r3, [r0, #40]	; 0x28
10050570:	8c42      	ldrh	r2, [r0, #34]	; 0x22
10050572:	525a      	strh	r2, [r3, r1]
10050574:	6a43      	ldr	r3, [r0, #36]	; 0x24
10050576:	8b82      	ldrh	r2, [r0, #28]
10050578:	525a      	strh	r2, [r3, r1]
1005057a:	6981      	ldr	r1, [r0, #24]
1005057c:	6041      	str	r1, [r0, #4]
1005057e:	4770      	bx	lr
10050580:	2000098c 	.word	0x2000098c
10050584:	200000c0 	.word	0x200000c0

10050588 <Flash_Write_Flagged>:
10050588:	b570      	push	{r4, r5, r6, lr}
1005058a:	460c      	mov	r4, r1
1005058c:	4e0b      	ldr	r6, [pc, #44]	; (100505bc <Flash_Write_Flagged+0x34>)
1005058e:	0081      	lsls	r1, r0, #2
10050590:	480b      	ldr	r0, [pc, #44]	; (100505c0 <Flash_Write_Flagged+0x38>)
10050592:	6832      	ldr	r2, [r6, #0]
10050594:	180d      	adds	r5, r1, r0
10050596:	2301      	movs	r3, #1
10050598:	3220      	adds	r2, #32
1005059a:	77d3      	strb	r3, [r2, #31]
1005059c:	4621      	mov	r1, r4
1005059e:	4628      	mov	r0, r5
100505a0:	f7f3 fc8c 	bl	10043ebc <FLASH_ProgramWord>
100505a4:	6828      	ldr	r0, [r5, #0]
100505a6:	2100      	movs	r1, #0
100505a8:	4284      	cmp	r4, r0
100505aa:	d101      	bne.n	100505b0 <Flash_Write_Flagged+0x28>
100505ac:	4608      	mov	r0, r1
100505ae:	e000      	b.n	100505b2 <Flash_Write_Flagged+0x2a>
100505b0:	20fb      	movs	r0, #251	; 0xfb
100505b2:	6832      	ldr	r2, [r6, #0]
100505b4:	3220      	adds	r2, #32
100505b6:	77d1      	strb	r1, [r2, #31]
100505b8:	bd70      	pop	{r4, r5, r6, pc}
100505ba:	0000      	.short	0x0000
100505bc:	2000098c 	.word	0x2000098c
100505c0:	10040000 	.word	0x10040000

100505c4 <Is_Flash_Write_On_Going>:
100505c4:	4802      	ldr	r0, [pc, #8]	; (100505d0 <Is_Flash_Write_On_Going+0xc>)
100505c6:	6800      	ldr	r0, [r0, #0]
100505c8:	3020      	adds	r0, #32
100505ca:	7fc0      	ldrb	r0, [r0, #31]
100505cc:	4770      	bx	lr
100505ce:	0000      	.short	0x0000
100505d0:	2000098c 	.word	0x2000098c

100505d4 <PM_Check_And_Set>:
100505d4:	b570      	push	{r4, r5, r6, lr}
100505d6:	4a12      	ldr	r2, [pc, #72]	; (10050620 <PM_Check_And_Set+0x4c>)
100505d8:	2309      	movs	r3, #9
100505da:	6812      	ldr	r2, [r2, #0]
100505dc:	021b      	lsls	r3, r3, #8
100505de:	18d2      	adds	r2, r2, r3
100505e0:	2301      	movs	r3, #1
100505e2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
100505e4:	4383      	bics	r3, r0
100505e6:	005b      	lsls	r3, r3, #1
100505e8:	1e49      	subs	r1, r1, #1
100505ea:	2441      	movs	r4, #65	; 0x41
100505ec:	189b      	adds	r3, r3, r2
100505ee:	0949      	lsrs	r1, r1, #5
100505f0:	1c49      	adds	r1, r1, #1
100505f2:	b2c9      	uxtb	r1, r1
100505f4:	b672      	cpsid	i
100505f6:	7915      	ldrb	r5, [r2, #4]
100505f8:	428d      	cmp	r5, r1
100505fa:	d30e      	bcc.n	1005061a <PM_Check_And_Set+0x46>
100505fc:	781e      	ldrb	r6, [r3, #0]
100505fe:	785b      	ldrb	r3, [r3, #1]
10050600:	19ad      	adds	r5, r5, r6
10050602:	b2ed      	uxtb	r5, r5
10050604:	185b      	adds	r3, r3, r1
10050606:	42ab      	cmp	r3, r5
10050608:	d807      	bhi.n	1005061a <PM_Check_And_Set+0x46>
1005060a:	0040      	lsls	r0, r0, #1
1005060c:	5c13      	ldrb	r3, [r2, r0]
1005060e:	2400      	movs	r4, #0
10050610:	185b      	adds	r3, r3, r1
10050612:	5413      	strb	r3, [r2, r0]
10050614:	7910      	ldrb	r0, [r2, #4]
10050616:	1a40      	subs	r0, r0, r1
10050618:	7110      	strb	r0, [r2, #4]
1005061a:	b662      	cpsie	i
1005061c:	4620      	mov	r0, r4
1005061e:	bd70      	pop	{r4, r5, r6, pc}
10050620:	2000098c 	.word	0x2000098c

10050624 <PM_Clone_Pckt>:
10050624:	b570      	push	{r4, r5, r6, lr}
10050626:	000d      	movs	r5, r1
10050628:	4604      	mov	r4, r0
1005062a:	d00a      	beq.n	10050642 <PM_Clone_Pckt+0x1e>
1005062c:	2c00      	cmp	r4, #0
1005062e:	d008      	beq.n	10050642 <PM_Clone_Pckt+0x1e>
10050630:	68a9      	ldr	r1, [r5, #8]
10050632:	68a0      	ldr	r0, [r4, #8]
10050634:	f7ff f800 	bl	1004f638 <Mem_Buff_Clone>
10050638:	2800      	cmp	r0, #0
1005063a:	d101      	bne.n	10050640 <PM_Clone_Pckt+0x1c>
1005063c:	88e9      	ldrh	r1, [r5, #6]
1005063e:	80e1      	strh	r1, [r4, #6]
10050640:	bd70      	pop	{r4, r5, r6, pc}
10050642:	2041      	movs	r0, #65	; 0x41
10050644:	bd70      	pop	{r4, r5, r6, pc}
	...

10050648 <PM_Compact>:
10050648:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1005064a:	460f      	mov	r7, r1
1005064c:	4812      	ldr	r0, [pc, #72]	; (10050698 <PM_Compact+0x50>)
1005064e:	2109      	movs	r1, #9
10050650:	6800      	ldr	r0, [r0, #0]
10050652:	0209      	lsls	r1, r1, #8
10050654:	1840      	adds	r0, r0, r1
10050656:	68be      	ldr	r6, [r7, #8]
10050658:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
1005065a:	b081      	sub	sp, #4
1005065c:	4630      	mov	r0, r6
1005065e:	f7ff f8b4 	bl	1004f7ca <Mem_Buff_Get_Chain_Count>
10050662:	4605      	mov	r5, r0
10050664:	88f8      	ldrh	r0, [r7, #6]
10050666:	1e40      	subs	r0, r0, #1
10050668:	0940      	lsrs	r0, r0, #5
1005066a:	1c40      	adds	r0, r0, #1
1005066c:	b2c0      	uxtb	r0, r0
1005066e:	42a8      	cmp	r0, r5
10050670:	d211      	bcs.n	10050696 <PM_Compact+0x4e>
10050672:	4631      	mov	r1, r6
10050674:	68a0      	ldr	r0, [r4, #8]
10050676:	f7ff f834 	bl	1004f6e2 <Mem_Buff_Compact>
1005067a:	4630      	mov	r0, r6
1005067c:	f7ff f8a5 	bl	1004f7ca <Mem_Buff_Get_Chain_Count>
10050680:	1a28      	subs	r0, r5, r0
10050682:	b672      	cpsid	i
10050684:	9901      	ldr	r1, [sp, #4]
10050686:	0049      	lsls	r1, r1, #1
10050688:	5c62      	ldrb	r2, [r4, r1]
1005068a:	1a12      	subs	r2, r2, r0
1005068c:	5462      	strb	r2, [r4, r1]
1005068e:	7921      	ldrb	r1, [r4, #4]
10050690:	1808      	adds	r0, r1, r0
10050692:	7120      	strb	r0, [r4, #4]
10050694:	b662      	cpsie	i
10050696:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10050698:	2000098c 	.word	0x2000098c

1005069c <PM_Copy_Pckt_Data>:
1005069c:	b510      	push	{r4, lr}
1005069e:	461c      	mov	r4, r3
100506a0:	4613      	mov	r3, r2
100506a2:	460a      	mov	r2, r1
100506a4:	6880      	ldr	r0, [r0, #8]
100506a6:	4621      	mov	r1, r4
100506a8:	f7ff f8d8 	bl	1004f85c <Mem_Buff_Read>
100506ac:	bd10      	pop	{r4, pc}
	...

100506b0 <PM_Eng_Config>:
100506b0:	4a04      	ldr	r2, [pc, #16]	; (100506c4 <PM_Eng_Config+0x14>)
100506b2:	2309      	movs	r3, #9
100506b4:	6812      	ldr	r2, [r2, #0]
100506b6:	021b      	lsls	r3, r3, #8
100506b8:	18d2      	adds	r2, r2, r3
100506ba:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
100506bc:	0040      	lsls	r0, r0, #1
100506be:	1880      	adds	r0, r0, r2
100506c0:	7041      	strb	r1, [r0, #1]
100506c2:	4770      	bx	lr
100506c4:	2000098c 	.word	0x2000098c

100506c8 <PM_Extract_Pdu_MBuff>:
100506c8:	2200      	movs	r2, #0
100506ca:	6881      	ldr	r1, [r0, #8]
100506cc:	3808      	subs	r0, #8
100506ce:	6002      	str	r2, [r0, #0]
100506d0:	4608      	mov	r0, r1
100506d2:	4770      	bx	lr

100506d4 <PM_Get_Available_Buffer>:
100506d4:	490d      	ldr	r1, [pc, #52]	; (1005070c <PM_Get_Available_Buffer+0x38>)
100506d6:	2209      	movs	r2, #9
100506d8:	6809      	ldr	r1, [r1, #0]
100506da:	0212      	lsls	r2, r2, #8
100506dc:	1889      	adds	r1, r1, r2
100506de:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
100506e0:	b672      	cpsid	i
100506e2:	2201      	movs	r2, #1
100506e4:	4382      	bics	r2, r0
100506e6:	0050      	lsls	r0, r2, #1
100506e8:	1842      	adds	r2, r0, r1
100506ea:	4b08      	ldr	r3, [pc, #32]	; (1005070c <PM_Get_Available_Buffer+0x38>)
100506ec:	5c09      	ldrb	r1, [r1, r0]
100506ee:	2009      	movs	r0, #9
100506f0:	681b      	ldr	r3, [r3, #0]
100506f2:	0200      	lsls	r0, r0, #8
100506f4:	1818      	adds	r0, r3, r0
100506f6:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
100506f8:	7852      	ldrb	r2, [r2, #1]
100506fa:	7900      	ldrb	r0, [r0, #4]
100506fc:	428a      	cmp	r2, r1
100506fe:	d902      	bls.n	10050706 <PM_Get_Available_Buffer+0x32>
10050700:	1a51      	subs	r1, r2, r1
10050702:	1a40      	subs	r0, r0, r1
10050704:	b2c0      	uxtb	r0, r0
10050706:	b662      	cpsie	i
10050708:	4770      	bx	lr
1005070a:	0000      	.short	0x0000
1005070c:	2000098c 	.word	0x2000098c

10050710 <PM_Get_Mem_Buff_Count>:
10050710:	b510      	push	{r4, lr}
10050712:	6880      	ldr	r0, [r0, #8]
10050714:	f7ff f859 	bl	1004f7ca <Mem_Buff_Get_Chain_Count>
10050718:	bd10      	pop	{r4, pc}
	...

1005071c <PM_Get_Pckt>:
1005071c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005071e:	460d      	mov	r5, r1
10050720:	490e      	ldr	r1, [pc, #56]	; (1005075c <PM_Get_Pckt+0x40>)
10050722:	2309      	movs	r3, #9
10050724:	6809      	ldr	r1, [r1, #0]
10050726:	021b      	lsls	r3, r3, #8
10050728:	18c9      	adds	r1, r1, r3
1005072a:	6ace      	ldr	r6, [r1, #44]	; 0x2c
1005072c:	211f      	movs	r1, #31
1005072e:	1e52      	subs	r2, r2, #1
10050730:	430a      	orrs	r2, r1
10050732:	321d      	adds	r2, #29
10050734:	b297      	uxth	r7, r2
10050736:	2400      	movs	r4, #0
10050738:	4639      	mov	r1, r7
1005073a:	f7ff ff4b 	bl	100505d4 <PM_Check_And_Set>
1005073e:	2800      	cmp	r0, #0
10050740:	d10a      	bne.n	10050758 <PM_Get_Pckt+0x3c>
10050742:	4639      	mov	r1, r7
10050744:	68b0      	ldr	r0, [r6, #8]
10050746:	f7ff f829 	bl	1004f79c <Mem_Buff_Get>
1005074a:	4604      	mov	r4, r0
1005074c:	3408      	adds	r4, #8
1005074e:	6800      	ldr	r0, [r0, #0]
10050750:	60a0      	str	r0, [r4, #8]
10050752:	2000      	movs	r0, #0
10050754:	74e0      	strb	r0, [r4, #19]
10050756:	80a5      	strh	r5, [r4, #4]
10050758:	4620      	mov	r0, r4
1005075a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005075c:	2000098c 	.word	0x2000098c

10050760 <PM_Init>:
10050760:	b570      	push	{r4, r5, r6, lr}
10050762:	4817      	ldr	r0, [pc, #92]	; (100507c0 <PM_Init+0x60>)
10050764:	2109      	movs	r1, #9
10050766:	6800      	ldr	r0, [r0, #0]
10050768:	0209      	lsls	r1, r1, #8
1005076a:	1840      	adds	r0, r0, r1
1005076c:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
1005076e:	2204      	movs	r2, #4
10050770:	2100      	movs	r1, #0
10050772:	4620      	mov	r0, r4
10050774:	f7f2 fd27 	bl	100431c6 <Osal_MemSet>
10050778:	4d12      	ldr	r5, [pc, #72]	; (100507c4 <PM_Init+0x64>)
1005077a:	8c68      	ldrh	r0, [r5, #34]	; 0x22
1005077c:	3023      	adds	r0, #35	; 0x23
1005077e:	0940      	lsrs	r0, r0, #5
10050780:	1c40      	adds	r0, r0, #1
10050782:	b2c1      	uxtb	r1, r0
10050784:	2000      	movs	r0, #0
10050786:	f7ff ff93 	bl	100506b0 <PM_Eng_Config>
1005078a:	8c68      	ldrh	r0, [r5, #34]	; 0x22
1005078c:	7fa9      	ldrb	r1, [r5, #30]
1005078e:	3023      	adds	r0, #35	; 0x23
10050790:	0940      	lsrs	r0, r0, #5
10050792:	1c80      	adds	r0, r0, #2
10050794:	4348      	muls	r0, r1
10050796:	1c40      	adds	r0, r0, #1
10050798:	b2c1      	uxtb	r1, r0
1005079a:	2001      	movs	r0, #1
1005079c:	f7ff ff88 	bl	100506b0 <PM_Eng_Config>
100507a0:	4628      	mov	r0, r5
100507a2:	3020      	adds	r0, #32
100507a4:	68a1      	ldr	r1, [r4, #8]
100507a6:	7840      	ldrb	r0, [r0, #1]
100507a8:	7048      	strb	r0, [r1, #1]
100507aa:	68a0      	ldr	r0, [r4, #8]
100507ac:	f7ff f821 	bl	1004f7f2 <Mem_Buff_Init>
100507b0:	68a0      	ldr	r0, [r4, #8]
100507b2:	b672      	cpsid	i
100507b4:	7800      	ldrb	r0, [r0, #0]
100507b6:	b662      	cpsie	i
100507b8:	7120      	strb	r0, [r4, #4]
100507ba:	2000      	movs	r0, #0
100507bc:	bd70      	pop	{r4, r5, r6, pc}
100507be:	0000      	.short	0x0000
100507c0:	2000098c 	.word	0x2000098c
100507c4:	200002cc 	.word	0x200002cc

100507c8 <PM_Pckt_Cmp>:
100507c8:	b510      	push	{r4, lr}
100507ca:	6880      	ldr	r0, [r0, #8]
100507cc:	f7fe ff4d 	bl	1004f66a <Mem_Buff_Cmp>
100507d0:	bd10      	pop	{r4, pc}
	...

100507d4 <PM_Release_Acl_Pckt>:
100507d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100507d6:	460e      	mov	r6, r1
100507d8:	490c      	ldr	r1, [pc, #48]	; (1005080c <PM_Release_Acl_Pckt+0x38>)
100507da:	2209      	movs	r2, #9
100507dc:	6809      	ldr	r1, [r1, #0]
100507de:	0212      	lsls	r2, r2, #8
100507e0:	1889      	adds	r1, r1, r2
100507e2:	3808      	subs	r0, #8
100507e4:	4607      	mov	r7, r0
100507e6:	6acc      	ldr	r4, [r1, #44]	; 0x2c
100507e8:	f7fe ffef 	bl	1004f7ca <Mem_Buff_Get_Chain_Count>
100507ec:	4605      	mov	r5, r0
100507ee:	4639      	mov	r1, r7
100507f0:	68a0      	ldr	r0, [r4, #8]
100507f2:	f7ff f864 	bl	1004f8be <Mem_Buff_Release>
100507f6:	b672      	cpsid	i
100507f8:	0071      	lsls	r1, r6, #1
100507fa:	5c60      	ldrb	r0, [r4, r1]
100507fc:	1b40      	subs	r0, r0, r5
100507fe:	5460      	strb	r0, [r4, r1]
10050800:	7920      	ldrb	r0, [r4, #4]
10050802:	1940      	adds	r0, r0, r5
10050804:	7120      	strb	r0, [r4, #4]
10050806:	b662      	cpsie	i
10050808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005080a:	0000      	.short	0x0000
1005080c:	2000098c 	.word	0x2000098c

10050810 <PM_Resize_Pckt_Pdu_Size>:
10050810:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10050812:	4607      	mov	r7, r0
10050814:	4818      	ldr	r0, [pc, #96]	; (10050878 <PM_Resize_Pckt_Pdu_Size+0x68>)
10050816:	2109      	movs	r1, #9
10050818:	6800      	ldr	r0, [r0, #0]
1005081a:	0209      	lsls	r1, r1, #8
1005081c:	1840      	adds	r0, r0, r1
1005081e:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
10050820:	2041      	movs	r0, #65	; 0x41
10050822:	4616      	mov	r6, r2
10050824:	2f00      	cmp	r7, #0
10050826:	d011      	beq.n	1005084c <PM_Resize_Pckt_Pdu_Size+0x3c>
10050828:	4638      	mov	r0, r7
1005082a:	f7fe ffd8 	bl	1004f7de <Mem_Buff_Get_Chain_Size>
1005082e:	4605      	mov	r5, r0
10050830:	42b0      	cmp	r0, r6
10050832:	d20c      	bcs.n	1005084e <PM_Resize_Pckt_Pdu_Size+0x3e>
10050834:	1a30      	subs	r0, r6, r0
10050836:	b281      	uxth	r1, r0
10050838:	9801      	ldr	r0, [sp, #4]
1005083a:	f7ff fecb 	bl	100505d4 <PM_Check_And_Set>
1005083e:	2800      	cmp	r0, #0
10050840:	d104      	bne.n	1005084c <PM_Resize_Pckt_Pdu_Size+0x3c>
10050842:	4632      	mov	r2, r6
10050844:	4639      	mov	r1, r7
10050846:	68a0      	ldr	r0, [r4, #8]
10050848:	f7ff f854 	bl	1004f8f4 <Mem_Buff_Resize>
1005084c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005084e:	4632      	mov	r2, r6
10050850:	4639      	mov	r1, r7
10050852:	68a0      	ldr	r0, [r4, #8]
10050854:	f7ff f84e 	bl	1004f8f4 <Mem_Buff_Resize>
10050858:	1e6d      	subs	r5, r5, #1
1005085a:	1e76      	subs	r6, r6, #1
1005085c:	0969      	lsrs	r1, r5, #5
1005085e:	0972      	lsrs	r2, r6, #5
10050860:	1a89      	subs	r1, r1, r2
10050862:	b672      	cpsid	i
10050864:	9a01      	ldr	r2, [sp, #4]
10050866:	0052      	lsls	r2, r2, #1
10050868:	5ca3      	ldrb	r3, [r4, r2]
1005086a:	1a5b      	subs	r3, r3, r1
1005086c:	54a3      	strb	r3, [r4, r2]
1005086e:	7922      	ldrb	r2, [r4, #4]
10050870:	1851      	adds	r1, r2, r1
10050872:	7121      	strb	r1, [r4, #4]
10050874:	b662      	cpsie	i
10050876:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10050878:	2000098c 	.word	0x2000098c

1005087c <PM_Write_Pckt_Data>:
1005087c:	b510      	push	{r4, lr}
1005087e:	461c      	mov	r4, r3
10050880:	4613      	mov	r3, r2
10050882:	460a      	mov	r2, r1
10050884:	6880      	ldr	r0, [r0, #8]
10050886:	4621      	mov	r1, r4
10050888:	f7ff f87b 	bl	1004f982 <Mem_Buff_Write>
1005088c:	bd10      	pop	{r4, pc}

1005088e <Accu_Handles_Requiring_Auth>:
1005088e:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10050890:	88c8      	ldrh	r0, [r1, #6]
10050892:	2500      	movs	r5, #0
10050894:	1e40      	subs	r0, r0, #1
10050896:	b083      	sub	sp, #12
10050898:	460e      	mov	r6, r1
1005089a:	b287      	uxth	r7, r0
1005089c:	2401      	movs	r4, #1
1005089e:	e027      	b.n	100508f0 <Accu_Handles_Requiring_Auth+0x62>
100508a0:	68b0      	ldr	r0, [r6, #8]
100508a2:	2202      	movs	r2, #2
100508a4:	3008      	adds	r0, #8
100508a6:	1901      	adds	r1, r0, r4
100508a8:	4668      	mov	r0, sp
100508aa:	1d09      	adds	r1, r1, #4
100508ac:	f7f2 fc87 	bl	100431be <Osal_MemCpy>
100508b0:	4668      	mov	r0, sp
100508b2:	8800      	ldrh	r0, [r0, #0]
100508b4:	f7fa fd26 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
100508b8:	0001      	movs	r1, r0
100508ba:	d01d      	beq.n	100508f8 <Accu_Handles_Requiring_Auth+0x6a>
100508bc:	4668      	mov	r0, sp
100508be:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
100508c0:	8800      	ldrh	r0, [r0, #0]
100508c2:	4282      	cmp	r2, r0
100508c4:	d012      	beq.n	100508ec <Accu_Handles_Requiring_Auth+0x5e>
100508c6:	aa01      	add	r2, sp, #4
100508c8:	f7fb fbae 	bl	1004c028 <Gatt_search_handle>
100508cc:	2800      	cmp	r0, #0
100508ce:	d10d      	bne.n	100508ec <Accu_Handles_Requiring_Auth+0x5e>
100508d0:	9901      	ldr	r1, [sp, #4]
100508d2:	2026      	movs	r0, #38	; 0x26
100508d4:	5c40      	ldrb	r0, [r0, r1]
100508d6:	0740      	lsls	r0, r0, #29
100508d8:	d508      	bpl.n	100508ec <Accu_Handles_Requiring_Auth+0x5e>
100508da:	9806      	ldr	r0, [sp, #24]
100508dc:	006a      	lsls	r2, r5, #1
100508de:	1810      	adds	r0, r2, r0
100508e0:	2202      	movs	r2, #2
100508e2:	311c      	adds	r1, #28
100508e4:	f7f2 fc6b 	bl	100431be <Osal_MemCpy>
100508e8:	1c6d      	adds	r5, r5, #1
100508ea:	b2ad      	uxth	r5, r5
100508ec:	1ca4      	adds	r4, r4, #2
100508ee:	b2a4      	uxth	r4, r4
100508f0:	42bc      	cmp	r4, r7
100508f2:	d3d5      	bcc.n	100508a0 <Accu_Handles_Requiring_Auth+0x12>
100508f4:	980c      	ldr	r0, [sp, #48]	; 0x30
100508f6:	8005      	strh	r5, [r0, #0]
100508f8:	b007      	add	sp, #28
100508fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

100508fc <Accu_UuidTypes_Requiring_Auth>:
100508fc:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100508fe:	4607      	mov	r7, r0
10050900:	b083      	sub	sp, #12
10050902:	2000      	movs	r0, #0
10050904:	9000      	str	r0, [sp, #0]
10050906:	980d      	ldr	r0, [sp, #52]	; 0x34
10050908:	f7fa fcfc 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
1005090c:	9906      	ldr	r1, [sp, #24]
1005090e:	4605      	mov	r5, r0
10050910:	310c      	adds	r1, #12
10050912:	9101      	str	r1, [sp, #4]
10050914:	2800      	cmp	r0, #0
10050916:	d026      	beq.n	10050966 <Accu_UuidTypes_Requiring_Auth+0x6a>
10050918:	3708      	adds	r7, #8
1005091a:	42bd      	cmp	r5, r7
1005091c:	d023      	beq.n	10050966 <Accu_UuidTypes_Requiring_Auth+0x6a>
1005091e:	8d28      	ldrh	r0, [r5, #40]	; 0x28
10050920:	990e      	ldr	r1, [sp, #56]	; 0x38
10050922:	4288      	cmp	r0, r1
10050924:	d81f      	bhi.n	10050966 <Accu_UuidTypes_Requiring_Auth+0x6a>
10050926:	990d      	ldr	r1, [sp, #52]	; 0x34
10050928:	4288      	cmp	r0, r1
1005092a:	d313      	bcc.n	10050954 <Accu_UuidTypes_Requiring_Auth+0x58>
1005092c:	990e      	ldr	r1, [sp, #56]	; 0x38
1005092e:	4288      	cmp	r0, r1
10050930:	d810      	bhi.n	10050954 <Accu_UuidTypes_Requiring_Auth+0x58>
10050932:	4629      	mov	r1, r5
10050934:	2202      	movs	r2, #2
10050936:	312a      	adds	r1, #42	; 0x2a
10050938:	9801      	ldr	r0, [sp, #4]
1005093a:	f7f2 fc40 	bl	100431be <Osal_MemCpy>
1005093e:	2210      	movs	r2, #16
10050940:	990c      	ldr	r1, [sp, #48]	; 0x30
10050942:	9806      	ldr	r0, [sp, #24]
10050944:	f7f2 fc43 	bl	100431ce <Osal_MemCmp>
10050948:	2800      	cmp	r0, #0
1005094a:	d009      	beq.n	10050960 <Accu_UuidTypes_Requiring_Auth+0x64>
1005094c:	8d29      	ldrh	r1, [r5, #40]	; 0x28
1005094e:	980e      	ldr	r0, [sp, #56]	; 0x38
10050950:	4281      	cmp	r1, r0
10050952:	d008      	beq.n	10050966 <Accu_UuidTypes_Requiring_Auth+0x6a>
10050954:	462e      	mov	r6, r5
10050956:	6a2c      	ldr	r4, [r5, #32]
10050958:	3620      	adds	r6, #32
1005095a:	42b4      	cmp	r4, r6
1005095c:	d13f      	bne.n	100509de <Accu_UuidTypes_Requiring_Auth+0xe2>
1005095e:	e040      	b.n	100509e2 <Accu_UuidTypes_Requiring_Auth+0xe6>
10050960:	9805      	ldr	r0, [sp, #20]
10050962:	2100      	movs	r1, #0
10050964:	8001      	strh	r1, [r0, #0]
10050966:	b007      	add	sp, #28
10050968:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005096a:	8ba1      	ldrh	r1, [r4, #28]
1005096c:	980d      	ldr	r0, [sp, #52]	; 0x34
1005096e:	4281      	cmp	r1, r0
10050970:	d334      	bcc.n	100509dc <Accu_UuidTypes_Requiring_Auth+0xe0>
10050972:	980e      	ldr	r0, [sp, #56]	; 0x38
10050974:	4281      	cmp	r1, r0
10050976:	d834      	bhi.n	100509e2 <Accu_UuidTypes_Requiring_Auth+0xe6>
10050978:	4620      	mov	r0, r4
1005097a:	3020      	adds	r0, #32
1005097c:	9002      	str	r0, [sp, #8]
1005097e:	78c0      	ldrb	r0, [r0, #3]
10050980:	2801      	cmp	r0, #1
10050982:	d008      	beq.n	10050996 <Accu_UuidTypes_Requiring_Auth+0x9a>
10050984:	4620      	mov	r0, r4
10050986:	3008      	adds	r0, #8
10050988:	2210      	movs	r2, #16
1005098a:	990c      	ldr	r1, [sp, #48]	; 0x30
1005098c:	f7f2 fc1f 	bl	100431ce <Osal_MemCmp>
10050990:	2800      	cmp	r0, #0
10050992:	d008      	beq.n	100509a6 <Accu_UuidTypes_Requiring_Auth+0xaa>
10050994:	e022      	b.n	100509dc <Accu_UuidTypes_Requiring_Auth+0xe0>
10050996:	4621      	mov	r1, r4
10050998:	2202      	movs	r2, #2
1005099a:	3108      	adds	r1, #8
1005099c:	9801      	ldr	r0, [sp, #4]
1005099e:	f7f2 fc0e 	bl	100431be <Osal_MemCpy>
100509a2:	9806      	ldr	r0, [sp, #24]
100509a4:	e7f0      	b.n	10050988 <Accu_UuidTypes_Requiring_Auth+0x8c>
100509a6:	9802      	ldr	r0, [sp, #8]
100509a8:	7980      	ldrb	r0, [r0, #6]
100509aa:	0740      	lsls	r0, r0, #29
100509ac:	d516      	bpl.n	100509dc <Accu_UuidTypes_Requiring_Auth+0xe0>
100509ae:	9800      	ldr	r0, [sp, #0]
100509b0:	2800      	cmp	r0, #0
100509b2:	d101      	bne.n	100509b8 <Accu_UuidTypes_Requiring_Auth+0xbc>
100509b4:	8be0      	ldrh	r0, [r4, #30]
100509b6:	9000      	str	r0, [sp, #0]
100509b8:	8be1      	ldrh	r1, [r4, #30]
100509ba:	4281      	cmp	r1, r0
100509bc:	d111      	bne.n	100509e2 <Accu_UuidTypes_Requiring_Auth+0xe6>
100509be:	9805      	ldr	r0, [sp, #20]
100509c0:	2202      	movs	r2, #2
100509c2:	8800      	ldrh	r0, [r0, #0]
100509c4:	0041      	lsls	r1, r0, #1
100509c6:	9804      	ldr	r0, [sp, #16]
100509c8:	1808      	adds	r0, r1, r0
100509ca:	4621      	mov	r1, r4
100509cc:	311c      	adds	r1, #28
100509ce:	f7f2 fbf6 	bl	100431be <Osal_MemCpy>
100509d2:	9805      	ldr	r0, [sp, #20]
100509d4:	9905      	ldr	r1, [sp, #20]
100509d6:	8800      	ldrh	r0, [r0, #0]
100509d8:	1c40      	adds	r0, r0, #1
100509da:	8008      	strh	r0, [r1, #0]
100509dc:	6824      	ldr	r4, [r4, #0]
100509de:	42b4      	cmp	r4, r6
100509e0:	d1c3      	bne.n	1005096a <Accu_UuidTypes_Requiring_Auth+0x6e>
100509e2:	682d      	ldr	r5, [r5, #0]
100509e4:	e799      	b.n	1005091a <Accu_UuidTypes_Requiring_Auth+0x1e>
	...

100509e8 <GAP_Privacy1v2>:
100509e8:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100509ea:	4607      	mov	r7, r0
100509ec:	4873      	ldr	r0, [pc, #460]	; (10050bbc <GAP_Privacy1v2+0x1d4>)
100509ee:	460d      	mov	r5, r1
100509f0:	6804      	ldr	r4, [r0, #0]
100509f2:	b08f      	sub	sp, #60	; 0x3c
100509f4:	34ae      	adds	r4, #174	; 0xae
100509f6:	78a1      	ldrb	r1, [r4, #2]
100509f8:	461e      	mov	r6, r3
100509fa:	06c8      	lsls	r0, r1, #27
100509fc:	d502      	bpl.n	10050a04 <GAP_Privacy1v2+0x1c>
100509fe:	78e0      	ldrb	r0, [r4, #3]
10050a00:	06c0      	lsls	r0, r0, #27
10050a02:	d47d      	bmi.n	10050b00 <GAP_Privacy1v2+0x118>
10050a04:	0688      	lsls	r0, r1, #26
10050a06:	d507      	bpl.n	10050a18 <GAP_Privacy1v2+0x30>
10050a08:	78e0      	ldrb	r0, [r4, #3]
10050a0a:	0680      	lsls	r0, r0, #26
10050a0c:	0f80      	lsrs	r0, r0, #30
10050a0e:	d003      	beq.n	10050a18 <GAP_Privacy1v2+0x30>
10050a10:	2f02      	cmp	r7, #2
10050a12:	d001      	beq.n	10050a18 <GAP_Privacy1v2+0x30>
10050a14:	2e00      	cmp	r6, #0
10050a16:	d073      	beq.n	10050b00 <GAP_Privacy1v2+0x118>
10050a18:	0688      	lsls	r0, r1, #26
10050a1a:	0f80      	lsrs	r0, r0, #30
10050a1c:	d006      	beq.n	10050a2c <GAP_Privacy1v2+0x44>
10050a1e:	2f02      	cmp	r7, #2
10050a20:	d008      	beq.n	10050a34 <GAP_Privacy1v2+0x4c>
10050a22:	2f03      	cmp	r7, #3
10050a24:	d006      	beq.n	10050a34 <GAP_Privacy1v2+0x4c>
10050a26:	2e00      	cmp	r6, #0
10050a28:	d06a      	beq.n	10050b00 <GAP_Privacy1v2+0x118>
10050a2a:	e003      	b.n	10050a34 <GAP_Privacy1v2+0x4c>
10050a2c:	2f01      	cmp	r7, #1
10050a2e:	d001      	beq.n	10050a34 <GAP_Privacy1v2+0x4c>
10050a30:	2f00      	cmp	r7, #0
10050a32:	d1f8      	bne.n	10050a26 <GAP_Privacy1v2+0x3e>
10050a34:	0688      	lsls	r0, r1, #26
10050a36:	d403      	bmi.n	10050a40 <GAP_Privacy1v2+0x58>
10050a38:	2d00      	cmp	r5, #0
10050a3a:	d001      	beq.n	10050a40 <GAP_Privacy1v2+0x58>
10050a3c:	2d01      	cmp	r5, #1
10050a3e:	d15f      	bne.n	10050b00 <GAP_Privacy1v2+0x118>
10050a40:	2e00      	cmp	r6, #0
10050a42:	d106      	bne.n	10050a52 <GAP_Privacy1v2+0x6a>
10050a44:	2030      	movs	r0, #48	; 0x30
10050a46:	4001      	ands	r1, r0
10050a48:	4638      	mov	r0, r7
10050a4a:	f000 fd52 	bl	100514f2 <LL_Allow_Address_Setting>
10050a4e:	2800      	cmp	r0, #0
10050a50:	d156      	bne.n	10050b00 <GAP_Privacy1v2+0x118>
10050a52:	9911      	ldr	r1, [sp, #68]	; 0x44
10050a54:	2000      	movs	r0, #0
10050a56:	7008      	strb	r0, [r1, #0]
10050a58:	78a1      	ldrb	r1, [r4, #2]
10050a5a:	0689      	lsls	r1, r1, #26
10050a5c:	0f8a      	lsrs	r2, r1, #30
10050a5e:	d07d      	beq.n	10050b5c <GAP_Privacy1v2+0x174>
10050a60:	a90c      	add	r1, sp, #48	; 0x30
10050a62:	a808      	add	r0, sp, #32
10050a64:	f000 ff88 	bl	10051978 <LL_Get_AdvAddress>
10050a68:	9007      	str	r0, [sp, #28]
10050a6a:	a90d      	add	r1, sp, #52	; 0x34
10050a6c:	a80a      	add	r0, sp, #40	; 0x28
10050a6e:	f000 ffbf 	bl	100519f0 <LL_Get_ScanAddress>
10050a72:	9006      	str	r0, [sp, #24]
10050a74:	9807      	ldr	r0, [sp, #28]
10050a76:	2800      	cmp	r0, #0
10050a78:	d002      	beq.n	10050a80 <GAP_Privacy1v2+0x98>
10050a7a:	9806      	ldr	r0, [sp, #24]
10050a7c:	2800      	cmp	r0, #0
10050a7e:	d101      	bne.n	10050a84 <GAP_Privacy1v2+0x9c>
10050a80:	2e01      	cmp	r6, #1
10050a82:	d158      	bne.n	10050b36 <GAP_Privacy1v2+0x14e>
10050a84:	2f02      	cmp	r7, #2
10050a86:	a804      	add	r0, sp, #16
10050a88:	d007      	beq.n	10050a9a <GAP_Privacy1v2+0xb2>
10050a8a:	f000 f8cb 	bl	10050c24 <Generate_Non_Resolvable_Private_Address>
10050a8e:	2e00      	cmp	r6, #0
10050a90:	d03c      	beq.n	10050b0c <GAP_Privacy1v2+0x124>
10050a92:	9807      	ldr	r0, [sp, #28]
10050a94:	2800      	cmp	r0, #0
10050a96:	d003      	beq.n	10050aa0 <GAP_Privacy1v2+0xb8>
10050a98:	e012      	b.n	10050ac0 <GAP_Privacy1v2+0xd8>
10050a9a:	f003 fab9 	bl	10054010 <SM_Generate_Resolvable_Private_Address>
10050a9e:	e7f6      	b.n	10050a8e <GAP_Privacy1v2+0xa6>
10050aa0:	4f46      	ldr	r7, [pc, #280]	; (10050bbc <GAP_Privacy1v2+0x1d4>)
10050aa2:	4847      	ldr	r0, [pc, #284]	; (10050bc0 <GAP_Privacy1v2+0x1d8>)
10050aa4:	683b      	ldr	r3, [r7, #0]
10050aa6:	2206      	movs	r2, #6
10050aa8:	a908      	add	r1, sp, #32
10050aaa:	1818      	adds	r0, r3, r0
10050aac:	f7f2 fb8f 	bl	100431ce <Osal_MemCmp>
10050ab0:	2800      	cmp	r0, #0
10050ab2:	6838      	ldr	r0, [r7, #0]
10050ab4:	d008      	beq.n	10050ac8 <GAP_Privacy1v2+0xe0>
10050ab6:	3040      	adds	r0, #64	; 0x40
10050ab8:	7e41      	ldrb	r1, [r0, #25]
10050aba:	0849      	lsrs	r1, r1, #1
10050abc:	0049      	lsls	r1, r1, #1
10050abe:	7641      	strb	r1, [r0, #25]
10050ac0:	9806      	ldr	r0, [sp, #24]
10050ac2:	2800      	cmp	r0, #0
10050ac4:	d005      	beq.n	10050ad2 <GAP_Privacy1v2+0xea>
10050ac6:	e014      	b.n	10050af2 <GAP_Privacy1v2+0x10a>
10050ac8:	3040      	adds	r0, #64	; 0x40
10050aca:	7e41      	ldrb	r1, [r0, #25]
10050acc:	2201      	movs	r2, #1
10050ace:	4311      	orrs	r1, r2
10050ad0:	e7f5      	b.n	10050abe <GAP_Privacy1v2+0xd6>
10050ad2:	4f3a      	ldr	r7, [pc, #232]	; (10050bbc <GAP_Privacy1v2+0x1d4>)
10050ad4:	483a      	ldr	r0, [pc, #232]	; (10050bc0 <GAP_Privacy1v2+0x1d8>)
10050ad6:	683b      	ldr	r3, [r7, #0]
10050ad8:	2206      	movs	r2, #6
10050ada:	a90a      	add	r1, sp, #40	; 0x28
10050adc:	1818      	adds	r0, r3, r0
10050ade:	f7f2 fb76 	bl	100431ce <Osal_MemCmp>
10050ae2:	2800      	cmp	r0, #0
10050ae4:	6838      	ldr	r0, [r7, #0]
10050ae6:	d00c      	beq.n	10050b02 <GAP_Privacy1v2+0x11a>
10050ae8:	3040      	adds	r0, #64	; 0x40
10050aea:	7e41      	ldrb	r1, [r0, #25]
10050aec:	22fd      	movs	r2, #253	; 0xfd
10050aee:	4011      	ands	r1, r2
10050af0:	7641      	strb	r1, [r0, #25]
10050af2:	9807      	ldr	r0, [sp, #28]
10050af4:	2800      	cmp	r0, #0
10050af6:	d009      	beq.n	10050b0c <GAP_Privacy1v2+0x124>
10050af8:	9806      	ldr	r0, [sp, #24]
10050afa:	2800      	cmp	r0, #0
10050afc:	d006      	beq.n	10050b0c <GAP_Privacy1v2+0x124>
10050afe:	e01a      	b.n	10050b36 <GAP_Privacy1v2+0x14e>
10050b00:	e043      	b.n	10050b8a <GAP_Privacy1v2+0x1a2>
10050b02:	3040      	adds	r0, #64	; 0x40
10050b04:	7e41      	ldrb	r1, [r0, #25]
10050b06:	2202      	movs	r2, #2
10050b08:	4311      	orrs	r1, r2
10050b0a:	e7f1      	b.n	10050af0 <GAP_Privacy1v2+0x108>
10050b0c:	482b      	ldr	r0, [pc, #172]	; (10050bbc <GAP_Privacy1v2+0x1d4>)
10050b0e:	2206      	movs	r2, #6
10050b10:	6803      	ldr	r3, [r0, #0]
10050b12:	482b      	ldr	r0, [pc, #172]	; (10050bc0 <GAP_Privacy1v2+0x1d8>)
10050b14:	a904      	add	r1, sp, #16
10050b16:	1818      	adds	r0, r3, r0
10050b18:	f7f2 fb51 	bl	100431be <Osal_MemCpy>
10050b1c:	2005      	movs	r0, #5
10050b1e:	4669      	mov	r1, sp
10050b20:	7308      	strb	r0, [r1, #12]
10050b22:	2e00      	cmp	r6, #0
10050b24:	d102      	bne.n	10050b2c <GAP_Privacy1v2+0x144>
10050b26:	4608      	mov	r0, r1
10050b28:	f7fc f9ca 	bl	1004cec0 <Timer_StopOneShot>
10050b2c:	4825      	ldr	r0, [pc, #148]	; (10050bc4 <GAP_Privacy1v2+0x1dc>)
10050b2e:	9002      	str	r0, [sp, #8]
10050b30:	4668      	mov	r0, sp
10050b32:	f7fc f979 	bl	1004ce28 <Timer_StartOneShot>
10050b36:	78a0      	ldrb	r0, [r4, #2]
10050b38:	0680      	lsls	r0, r0, #26
10050b3a:	d511      	bpl.n	10050b60 <GAP_Privacy1v2+0x178>
10050b3c:	9811      	ldr	r0, [sp, #68]	; 0x44
10050b3e:	2103      	movs	r1, #3
10050b40:	7001      	strb	r1, [r0, #0]
10050b42:	7920      	ldrb	r0, [r4, #4]
10050b44:	06c1      	lsls	r1, r0, #27
10050b46:	d503      	bpl.n	10050b50 <GAP_Privacy1v2+0x168>
10050b48:	2d00      	cmp	r5, #0
10050b4a:	d001      	beq.n	10050b50 <GAP_Privacy1v2+0x168>
10050b4c:	2d02      	cmp	r5, #2
10050b4e:	d11c      	bne.n	10050b8a <GAP_Privacy1v2+0x1a2>
10050b50:	0680      	lsls	r0, r0, #26
10050b52:	d505      	bpl.n	10050b60 <GAP_Privacy1v2+0x178>
10050b54:	2d01      	cmp	r5, #1
10050b56:	d003      	beq.n	10050b60 <GAP_Privacy1v2+0x178>
10050b58:	2d03      	cmp	r5, #3
10050b5a:	e000      	b.n	10050b5e <GAP_Privacy1v2+0x176>
10050b5c:	e018      	b.n	10050b90 <GAP_Privacy1v2+0x1a8>
10050b5e:	d114      	bne.n	10050b8a <GAP_Privacy1v2+0x1a2>
10050b60:	78a0      	ldrb	r0, [r4, #2]
10050b62:	06c0      	lsls	r0, r0, #27
10050b64:	d527      	bpl.n	10050bb6 <GAP_Privacy1v2+0x1ce>
10050b66:	9911      	ldr	r1, [sp, #68]	; 0x44
10050b68:	2001      	movs	r0, #1
10050b6a:	7008      	strb	r0, [r1, #0]
10050b6c:	7920      	ldrb	r0, [r4, #4]
10050b6e:	06c1      	lsls	r1, r0, #27
10050b70:	d501      	bpl.n	10050b76 <GAP_Privacy1v2+0x18e>
10050b72:	2d00      	cmp	r5, #0
10050b74:	d109      	bne.n	10050b8a <GAP_Privacy1v2+0x1a2>
10050b76:	0681      	lsls	r1, r0, #26
10050b78:	d501      	bpl.n	10050b7e <GAP_Privacy1v2+0x196>
10050b7a:	2d01      	cmp	r5, #1
10050b7c:	d105      	bne.n	10050b8a <GAP_Privacy1v2+0x1a2>
10050b7e:	0600      	lsls	r0, r0, #24
10050b80:	d519      	bpl.n	10050bb6 <GAP_Privacy1v2+0x1ce>
10050b82:	2d00      	cmp	r5, #0
10050b84:	d017      	beq.n	10050bb6 <GAP_Privacy1v2+0x1ce>
10050b86:	2d01      	cmp	r5, #1
10050b88:	d015      	beq.n	10050bb6 <GAP_Privacy1v2+0x1ce>
10050b8a:	2042      	movs	r0, #66	; 0x42
10050b8c:	b013      	add	sp, #76	; 0x4c
10050b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10050b90:	2f01      	cmp	r7, #1
10050b92:	d101      	bne.n	10050b98 <GAP_Privacy1v2+0x1b0>
10050b94:	2e00      	cmp	r6, #0
10050b96:	d003      	beq.n	10050ba0 <GAP_Privacy1v2+0x1b8>
10050b98:	0f89      	lsrs	r1, r1, #30
10050b9a:	4331      	orrs	r1, r6
10050b9c:	d009      	beq.n	10050bb2 <GAP_Privacy1v2+0x1ca>
10050b9e:	e00a      	b.n	10050bb6 <GAP_Privacy1v2+0x1ce>
10050ba0:	4806      	ldr	r0, [pc, #24]	; (10050bbc <GAP_Privacy1v2+0x1d4>)
10050ba2:	2206      	movs	r2, #6
10050ba4:	6803      	ldr	r3, [r0, #0]
10050ba6:	4806      	ldr	r0, [pc, #24]	; (10050bc0 <GAP_Privacy1v2+0x1d8>)
10050ba8:	1d61      	adds	r1, r4, #5
10050baa:	1818      	adds	r0, r3, r0
10050bac:	f7f2 fb07 	bl	100431be <Osal_MemCpy>
10050bb0:	2001      	movs	r0, #1
10050bb2:	9911      	ldr	r1, [sp, #68]	; 0x44
10050bb4:	7008      	strb	r0, [r1, #0]
10050bb6:	2000      	movs	r0, #0
10050bb8:	e7e8      	b.n	10050b8c <GAP_Privacy1v2+0x1a4>
10050bba:	0000      	.short	0x0000
10050bbc:	2000098c 	.word	0x2000098c
10050bc0:	000006ef 	.word	0x000006ef
10050bc4:	000dbba0 	.word	0x000dbba0

10050bc8 <GAP_PrivateAddrTimercb>:
10050bc8:	b53e      	push	{r1, r2, r3, r4, r5, lr}
10050bca:	f7ff fa79 	bl	100500c0 <get_advertiser>
10050bce:	4604      	mov	r4, r0
10050bd0:	f7ff faf8 	bl	100501c4 <get_scan_connection>
10050bd4:	2c08      	cmp	r4, #8
10050bd6:	d101      	bne.n	10050bdc <GAP_PrivateAddrTimercb+0x14>
10050bd8:	2808      	cmp	r0, #8
10050bda:	d013      	beq.n	10050c04 <GAP_PrivateAddrTimercb+0x3c>
10050bdc:	480a      	ldr	r0, [pc, #40]	; (10050c08 <GAP_PrivateAddrTimercb+0x40>)
10050bde:	490b      	ldr	r1, [pc, #44]	; (10050c0c <GAP_PrivateAddrTimercb+0x44>)
10050be0:	6800      	ldr	r0, [r0, #0]
10050be2:	2206      	movs	r2, #6
10050be4:	1841      	adds	r1, r0, r1
10050be6:	4668      	mov	r0, sp
10050be8:	f7f2 fae9 	bl	100431be <Osal_MemCpy>
10050bec:	4668      	mov	r0, sp
10050bee:	7940      	ldrb	r0, [r0, #5]
10050bf0:	0640      	lsls	r0, r0, #25
10050bf2:	d501      	bpl.n	10050bf8 <GAP_PrivateAddrTimercb+0x30>
10050bf4:	2002      	movs	r0, #2
10050bf6:	e000      	b.n	10050bfa <GAP_PrivateAddrTimercb+0x32>
10050bf8:	2003      	movs	r0, #3
10050bfa:	2301      	movs	r3, #1
10050bfc:	aa02      	add	r2, sp, #8
10050bfe:	2100      	movs	r1, #0
10050c00:	f7ff fef2 	bl	100509e8 <GAP_Privacy1v2>
10050c04:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
10050c06:	0000      	.short	0x0000
10050c08:	2000098c 	.word	0x2000098c
10050c0c:	000006ef 	.word	0x000006ef

10050c10 <GapIsPrivacySupported>:
10050c10:	4803      	ldr	r0, [pc, #12]	; (10050c20 <GapIsPrivacySupported+0x10>)
10050c12:	6800      	ldr	r0, [r0, #0]
10050c14:	30ae      	adds	r0, #174	; 0xae
10050c16:	7880      	ldrb	r0, [r0, #2]
10050c18:	0680      	lsls	r0, r0, #26
10050c1a:	0f80      	lsrs	r0, r0, #30
10050c1c:	4770      	bx	lr
10050c1e:	0000      	.short	0x0000
10050c20:	2000098c 	.word	0x2000098c

10050c24 <Generate_Non_Resolvable_Private_Address>:
10050c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10050c26:	4e20      	ldr	r6, [pc, #128]	; (10050ca8 <Generate_Non_Resolvable_Private_Address+0x84>)
10050c28:	4604      	mov	r4, r0
10050c2a:	6835      	ldr	r5, [r6, #0]
10050c2c:	35ae      	adds	r5, #174	; 0xae
10050c2e:	f7fb fe13 	bl	1004c858 <Hal_Get_Random_Number>
10050c32:	7020      	strb	r0, [r4, #0]
10050c34:	0a00      	lsrs	r0, r0, #8
10050c36:	7060      	strb	r0, [r4, #1]
10050c38:	f7fb fe0e 	bl	1004c858 <Hal_Get_Random_Number>
10050c3c:	70a0      	strb	r0, [r4, #2]
10050c3e:	0a00      	lsrs	r0, r0, #8
10050c40:	70e0      	strb	r0, [r4, #3]
10050c42:	f7fb fe09 	bl	1004c858 <Hal_Get_Random_Number>
10050c46:	b2c2      	uxtb	r2, r0
10050c48:	0480      	lsls	r0, r0, #18
10050c4a:	0e83      	lsrs	r3, r0, #26
10050c4c:	7122      	strb	r2, [r4, #4]
10050c4e:	2100      	movs	r1, #0
10050c50:	7163      	strb	r3, [r4, #5]
10050c52:	4608      	mov	r0, r1
10050c54:	5c27      	ldrb	r7, [r4, r0]
10050c56:	1c40      	adds	r0, r0, #1
10050c58:	1879      	adds	r1, r7, r1
10050c5a:	b2c0      	uxtb	r0, r0
10050c5c:	b289      	uxth	r1, r1
10050c5e:	2806      	cmp	r0, #6
10050c60:	d3f8      	bcc.n	10050c54 <Generate_Non_Resolvable_Private_Address+0x30>
10050c62:	2900      	cmp	r1, #0
10050c64:	d0e3      	beq.n	10050c2e <Generate_Non_Resolvable_Private_Address+0xa>
10050c66:	7820      	ldrb	r0, [r4, #0]
10050c68:	28ff      	cmp	r0, #255	; 0xff
10050c6a:	d10c      	bne.n	10050c86 <Generate_Non_Resolvable_Private_Address+0x62>
10050c6c:	7860      	ldrb	r0, [r4, #1]
10050c6e:	28ff      	cmp	r0, #255	; 0xff
10050c70:	d109      	bne.n	10050c86 <Generate_Non_Resolvable_Private_Address+0x62>
10050c72:	78a0      	ldrb	r0, [r4, #2]
10050c74:	28ff      	cmp	r0, #255	; 0xff
10050c76:	d106      	bne.n	10050c86 <Generate_Non_Resolvable_Private_Address+0x62>
10050c78:	78e0      	ldrb	r0, [r4, #3]
10050c7a:	28ff      	cmp	r0, #255	; 0xff
10050c7c:	d103      	bne.n	10050c86 <Generate_Non_Resolvable_Private_Address+0x62>
10050c7e:	2aff      	cmp	r2, #255	; 0xff
10050c80:	d101      	bne.n	10050c86 <Generate_Non_Resolvable_Private_Address+0x62>
10050c82:	2bff      	cmp	r3, #255	; 0xff
10050c84:	d0d3      	beq.n	10050c2e <Generate_Non_Resolvable_Private_Address+0xa>
10050c86:	2206      	movs	r2, #6
10050c88:	1d69      	adds	r1, r5, #5
10050c8a:	4620      	mov	r0, r4
10050c8c:	f7f2 fa9f 	bl	100431ce <Osal_MemCmp>
10050c90:	2800      	cmp	r0, #0
10050c92:	d0cc      	beq.n	10050c2e <Generate_Non_Resolvable_Private_Address+0xa>
10050c94:	6831      	ldr	r1, [r6, #0]
10050c96:	2206      	movs	r2, #6
10050c98:	4620      	mov	r0, r4
10050c9a:	3178      	adds	r1, #120	; 0x78
10050c9c:	f7f2 fa97 	bl	100431ce <Osal_MemCmp>
10050ca0:	2800      	cmp	r0, #0
10050ca2:	d0c4      	beq.n	10050c2e <Generate_Non_Resolvable_Private_Address+0xa>
10050ca4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10050ca6:	0000      	.short	0x0000
10050ca8:	2000098c 	.word	0x2000098c

10050cac <GAP_Delete_ADType>:
10050cac:	b570      	push	{r4, r5, r6, lr}
10050cae:	b092      	sub	sp, #72	; 0x48
10050cb0:	4606      	mov	r6, r0
10050cb2:	2220      	movs	r2, #32
10050cb4:	a121      	add	r1, pc, #132	; (adr r1, 10050d3c <GAP_Delete_ADType+0x90>)
10050cb6:	a801      	add	r0, sp, #4
10050cb8:	f7f3 fc5e 	bl	10044578 <__aeabi_memcpy4>
10050cbc:	2120      	movs	r1, #32
10050cbe:	a809      	add	r0, sp, #36	; 0x24
10050cc0:	f7f3 fc5e 	bl	10044580 <__aeabi_memclr4>
10050cc4:	210a      	movs	r1, #10
10050cc6:	4668      	mov	r0, sp
10050cc8:	7001      	strb	r1, [r0, #0]
10050cca:	2400      	movs	r4, #0
10050ccc:	4625      	mov	r5, r4
10050cce:	4669      	mov	r1, sp
10050cd0:	a801      	add	r0, sp, #4
10050cd2:	f000 fe71 	bl	100519b8 <LL_Get_Adv_Data>
10050cd6:	4668      	mov	r0, sp
10050cd8:	7802      	ldrb	r2, [r0, #0]
10050cda:	a901      	add	r1, sp, #4
10050cdc:	a809      	add	r0, sp, #36	; 0x24
10050cde:	f7f2 fa6e 	bl	100431be <Osal_MemCpy>
10050ce2:	a801      	add	r0, sp, #4
10050ce4:	e024      	b.n	10050d30 <GAP_Delete_ADType+0x84>
10050ce6:	5d01      	ldrb	r1, [r0, r4]
10050ce8:	1c49      	adds	r1, r1, #1
10050cea:	b2c9      	uxtb	r1, r1
10050cec:	4291      	cmp	r1, r2
10050cee:	d823      	bhi.n	10050d38 <GAP_Delete_ADType+0x8c>
10050cf0:	1903      	adds	r3, r0, r4
10050cf2:	785b      	ldrb	r3, [r3, #1]
10050cf4:	42b3      	cmp	r3, r6
10050cf6:	d114      	bne.n	10050d22 <GAP_Delete_ADType+0x76>
10050cf8:	466b      	mov	r3, sp
10050cfa:	781a      	ldrb	r2, [r3, #0]
10050cfc:	1a52      	subs	r2, r2, r1
10050cfe:	1861      	adds	r1, r4, r1
10050d00:	b2c9      	uxtb	r1, r1
10050d02:	1841      	adds	r1, r0, r1
10050d04:	b2d2      	uxtb	r2, r2
10050d06:	a809      	add	r0, sp, #36	; 0x24
10050d08:	701a      	strb	r2, [r3, #0]
10050d0a:	1940      	adds	r0, r0, r5
10050d0c:	f7f2 fa57 	bl	100431be <Osal_MemCpy>
10050d10:	466b      	mov	r3, sp
10050d12:	7818      	ldrb	r0, [r3, #0]
10050d14:	1828      	adds	r0, r5, r0
10050d16:	b2c1      	uxtb	r1, r0
10050d18:	a809      	add	r0, sp, #36	; 0x24
10050d1a:	f000 ff77 	bl	10051c0c <LL_Set_Adv_Data>
10050d1e:	b012      	add	sp, #72	; 0x48
10050d20:	bd70      	pop	{r4, r5, r6, pc}
10050d22:	1a52      	subs	r2, r2, r1
10050d24:	466b      	mov	r3, sp
10050d26:	701a      	strb	r2, [r3, #0]
10050d28:	1862      	adds	r2, r4, r1
10050d2a:	1869      	adds	r1, r5, r1
10050d2c:	b2d4      	uxtb	r4, r2
10050d2e:	b2cd      	uxtb	r5, r1
10050d30:	4669      	mov	r1, sp
10050d32:	780a      	ldrb	r2, [r1, #0]
10050d34:	2a00      	cmp	r2, #0
10050d36:	d1d6      	bne.n	10050ce6 <GAP_Delete_ADType+0x3a>
10050d38:	201f      	movs	r0, #31
10050d3a:	e7f0      	b.n	10050d1e <GAP_Delete_ADType+0x72>
10050d3c:	0201ff02 	.word	0x0201ff02
10050d40:	02030401 	.word	0x02030401
10050d44:	0000fc8f 	.word	0x0000fc8f
	...

10050d5c <GAP_Notify_Add_Charac>:
10050d5c:	b40f      	push	{r0, r1, r2, r3}
10050d5e:	b510      	push	{r4, lr}
10050d60:	9c07      	ldr	r4, [sp, #28]
10050d62:	2801      	cmp	r0, #1
10050d64:	d12d      	bne.n	10050dc2 <GAP_Notify_Add_Charac+0x66>
10050d66:	4668      	mov	r0, sp
10050d68:	8980      	ldrh	r0, [r0, #12]
10050d6a:	4917      	ldr	r1, [pc, #92]	; (10050dc8 <GAP_Notify_Add_Charac+0x6c>)
10050d6c:	4288      	cmp	r0, r1
10050d6e:	d110      	bne.n	10050d92 <GAP_Notify_Add_Charac+0x36>
10050d70:	a803      	add	r0, sp, #12
10050d72:	c80f      	ldmia	r0, {r0, r1, r2, r3}
10050d74:	f000 f84c 	bl	10050e10 <GATT_Num_Charac_Present>
10050d78:	2800      	cmp	r0, #0
10050d7a:	d11d      	bne.n	10050db8 <GAP_Notify_Add_Charac+0x5c>
10050d7c:	f001 feda 	bl	10052b34 <SDB_Get_Number_Of_Valid_Records>
10050d80:	28fa      	cmp	r0, #250	; 0xfa
10050d82:	d01e      	beq.n	10050dc2 <GAP_Notify_Add_Charac+0x66>
10050d84:	2801      	cmp	r0, #1
10050d86:	d91c      	bls.n	10050dc2 <GAP_Notify_Add_Charac+0x66>
10050d88:	7820      	ldrb	r0, [r4, #0]
10050d8a:	21f3      	movs	r1, #243	; 0xf3
10050d8c:	4008      	ands	r0, r1
10050d8e:	7020      	strb	r0, [r4, #0]
10050d90:	e017      	b.n	10050dc2 <GAP_Notify_Add_Charac+0x66>
10050d92:	490d      	ldr	r1, [pc, #52]	; (10050dc8 <GAP_Notify_Add_Charac+0x6c>)
10050d94:	1c49      	adds	r1, r1, #1
10050d96:	4288      	cmp	r0, r1
10050d98:	d008      	beq.n	10050dac <GAP_Notify_Add_Charac+0x50>
10050d9a:	1ec9      	subs	r1, r1, #3
10050d9c:	4288      	cmp	r0, r1
10050d9e:	d005      	beq.n	10050dac <GAP_Notify_Add_Charac+0x50>
10050da0:	1c49      	adds	r1, r1, #1
10050da2:	4288      	cmp	r0, r1
10050da4:	d002      	beq.n	10050dac <GAP_Notify_Add_Charac+0x50>
10050da6:	1cc9      	adds	r1, r1, #3
10050da8:	4288      	cmp	r0, r1
10050daa:	d10a      	bne.n	10050dc2 <GAP_Notify_Add_Charac+0x66>
10050dac:	ac03      	add	r4, sp, #12
10050dae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10050db0:	f000 f82e 	bl	10050e10 <GATT_Num_Charac_Present>
10050db4:	2800      	cmp	r0, #0
10050db6:	d000      	beq.n	10050dba <GAP_Notify_Add_Charac+0x5e>
10050db8:	2063      	movs	r0, #99	; 0x63
10050dba:	bc10      	pop	{r4}
10050dbc:	bc08      	pop	{r3}
10050dbe:	b004      	add	sp, #16
10050dc0:	4718      	bx	r3
10050dc2:	2000      	movs	r0, #0
10050dc4:	e7f9      	b.n	10050dba <GAP_Notify_Add_Charac+0x5e>
10050dc6:	0000      	.short	0x0000
10050dc8:	00002a02 	.word	0x00002a02

10050dcc <GAP_Terminate_Link>:
10050dcc:	b510      	push	{r4, lr}
10050dce:	f7fd fd25 	bl	1004e81c <LL_Disconnect_Link>
10050dd2:	bd10      	pop	{r4, pc}

10050dd4 <Get_GAP_Handle>:
10050dd4:	4802      	ldr	r0, [pc, #8]	; (10050de0 <Get_GAP_Handle+0xc>)
10050dd6:	6800      	ldr	r0, [r0, #0]
10050dd8:	30ae      	adds	r0, #174	; 0xae
10050dda:	8800      	ldrh	r0, [r0, #0]
10050ddc:	4770      	bx	lr
10050dde:	0000      	.short	0x0000
10050de0:	2000098c 	.word	0x2000098c

10050de4 <Get_StaticRandAddr>:
10050de4:	b510      	push	{r4, lr}
10050de6:	4903      	ldr	r1, [pc, #12]	; (10050df4 <Get_StaticRandAddr+0x10>)
10050de8:	2206      	movs	r2, #6
10050dea:	6809      	ldr	r1, [r1, #0]
10050dec:	31b3      	adds	r1, #179	; 0xb3
10050dee:	f7f2 f9e6 	bl	100431be <Osal_MemCpy>
10050df2:	bd10      	pop	{r4, pc}
10050df4:	2000098c 	.word	0x2000098c

10050df8 <Check_Encry_Key_Size>:
10050df8:	2324      	movs	r3, #36	; 0x24
10050dfa:	4218      	tst	r0, r3
10050dfc:	d004      	beq.n	10050e08 <Check_Encry_Key_Size+0x10>
10050dfe:	1fc8      	subs	r0, r1, #7
10050e00:	2809      	cmp	r0, #9
10050e02:	d803      	bhi.n	10050e0c <Check_Encry_Key_Size+0x14>
10050e04:	3220      	adds	r2, #32
10050e06:	71d1      	strb	r1, [r2, #7]
10050e08:	2000      	movs	r0, #0
10050e0a:	4770      	bx	lr
10050e0c:	2042      	movs	r0, #66	; 0x42
10050e0e:	4770      	bx	lr

10050e10 <GATT_Num_Charac_Present>:
10050e10:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10050e12:	b082      	sub	sp, #8
10050e14:	2400      	movs	r4, #0
10050e16:	f7ff ffdd 	bl	10050dd4 <Get_GAP_Handle>
10050e1a:	4669      	mov	r1, sp
10050e1c:	f7fb f914 	bl	1004c048 <Gatt_search_service_handle>
10050e20:	9a00      	ldr	r2, [sp, #0]
10050e22:	4668      	mov	r0, sp
10050e24:	6a11      	ldr	r1, [r2, #32]
10050e26:	8900      	ldrh	r0, [r0, #8]
10050e28:	3220      	adds	r2, #32
10050e2a:	e009      	b.n	10050e40 <GATT_Num_Charac_Present+0x30>
10050e2c:	2323      	movs	r3, #35	; 0x23
10050e2e:	5c5b      	ldrb	r3, [r3, r1]
10050e30:	2b01      	cmp	r3, #1
10050e32:	d104      	bne.n	10050e3e <GATT_Num_Charac_Present+0x2e>
10050e34:	890b      	ldrh	r3, [r1, #8]
10050e36:	4283      	cmp	r3, r0
10050e38:	d101      	bne.n	10050e3e <GATT_Num_Charac_Present+0x2e>
10050e3a:	1c64      	adds	r4, r4, #1
10050e3c:	b2e4      	uxtb	r4, r4
10050e3e:	6809      	ldr	r1, [r1, #0]
10050e40:	4291      	cmp	r1, r2
10050e42:	d1f3      	bne.n	10050e2c <GATT_Num_Charac_Present+0x1c>
10050e44:	4620      	mov	r0, r4
10050e46:	b006      	add	sp, #24
10050e48:	bd10      	pop	{r4, pc}
	...

10050e4c <Start_Gatt_Timer>:
10050e4c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10050e4e:	4604      	mov	r4, r0
10050e50:	4806      	ldr	r0, [pc, #24]	; (10050e6c <Start_Gatt_Timer+0x20>)
10050e52:	9002      	str	r0, [sp, #8]
10050e54:	4608      	mov	r0, r1
10050e56:	f7fa fa79 	bl	1004b34c <Gatt_Find_Timed_Out_Connection_Index>
10050e5a:	0080      	lsls	r0, r0, #2
10050e5c:	1900      	adds	r0, r0, r4
10050e5e:	4669      	mov	r1, sp
10050e60:	3011      	adds	r0, #17
10050e62:	7308      	strb	r0, [r1, #12]
10050e64:	4668      	mov	r0, sp
10050e66:	f7fb ffdf 	bl	1004ce28 <Timer_StartOneShot>
10050e6a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}
10050e6c:	00007530 	.word	0x00007530

10050e70 <Stop_Gatt_Timer>:
10050e70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10050e72:	4604      	mov	r4, r0
10050e74:	4608      	mov	r0, r1
10050e76:	f7fa fa69 	bl	1004b34c <Gatt_Find_Timed_Out_Connection_Index>
10050e7a:	0080      	lsls	r0, r0, #2
10050e7c:	1900      	adds	r0, r0, r4
10050e7e:	4669      	mov	r1, sp
10050e80:	3011      	adds	r0, #17
10050e82:	7308      	strb	r0, [r1, #12]
10050e84:	4668      	mov	r0, sp
10050e86:	f7fc f81b 	bl	1004cec0 <Timer_StopOneShot>
10050e8a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

10050e8c <List_Circular_Get_Size>:
10050e8c:	6802      	ldr	r2, [r0, #0]
10050e8e:	2300      	movs	r3, #0
10050e90:	800b      	strh	r3, [r1, #0]
10050e92:	4282      	cmp	r2, r0
10050e94:	d003      	beq.n	10050e9e <List_Circular_Get_Size+0x12>
10050e96:	b29b      	uxth	r3, r3
10050e98:	6812      	ldr	r2, [r2, #0]
10050e9a:	1c5b      	adds	r3, r3, #1
10050e9c:	e7f8      	b.n	10050e90 <List_Circular_Get_Size+0x4>
10050e9e:	4770      	bx	lr

10050ea0 <List_Circular_Insert_Tail>:
10050ea0:	6008      	str	r0, [r1, #0]
10050ea2:	6842      	ldr	r2, [r0, #4]
10050ea4:	604a      	str	r2, [r1, #4]
10050ea6:	6842      	ldr	r2, [r0, #4]
10050ea8:	6011      	str	r1, [r2, #0]
10050eaa:	6041      	str	r1, [r0, #4]
10050eac:	4770      	bx	lr

10050eae <List_Circular_Node_Present>:
10050eae:	6802      	ldr	r2, [r0, #0]
10050eb0:	e004      	b.n	10050ebc <List_Circular_Node_Present+0xe>
10050eb2:	428a      	cmp	r2, r1
10050eb4:	d101      	bne.n	10050eba <List_Circular_Node_Present+0xc>
10050eb6:	2001      	movs	r0, #1
10050eb8:	4770      	bx	lr
10050eba:	6812      	ldr	r2, [r2, #0]
10050ebc:	4282      	cmp	r2, r0
10050ebe:	d1f8      	bne.n	10050eb2 <List_Circular_Node_Present+0x4>
10050ec0:	2000      	movs	r0, #0
10050ec2:	4770      	bx	lr

10050ec4 <List_Circular_Remove_Head>:
10050ec4:	6802      	ldr	r2, [r0, #0]
10050ec6:	600a      	str	r2, [r1, #0]
10050ec8:	6812      	ldr	r2, [r2, #0]
10050eca:	6002      	str	r2, [r0, #0]
10050ecc:	680a      	ldr	r2, [r1, #0]
10050ece:	6812      	ldr	r2, [r2, #0]
10050ed0:	6050      	str	r0, [r2, #4]
10050ed2:	680a      	ldr	r2, [r1, #0]
10050ed4:	2000      	movs	r0, #0
10050ed6:	6010      	str	r0, [r2, #0]
10050ed8:	6809      	ldr	r1, [r1, #0]
10050eda:	6048      	str	r0, [r1, #4]
10050edc:	4770      	bx	lr

10050ede <List_Circular_Remove_Node>:
10050ede:	b500      	push	{lr}
10050ee0:	460b      	mov	r3, r1
10050ee2:	f7ff ffe4 	bl	10050eae <List_Circular_Node_Present>
10050ee6:	2800      	cmp	r0, #0
10050ee8:	d008      	beq.n	10050efc <List_Circular_Remove_Node+0x1e>
10050eea:	cb03      	ldmia	r3!, {r0, r1}
10050eec:	3b08      	subs	r3, #8
10050eee:	6008      	str	r0, [r1, #0]
10050ef0:	cb03      	ldmia	r3!, {r0, r1}
10050ef2:	6041      	str	r1, [r0, #4]
10050ef4:	2000      	movs	r0, #0
10050ef6:	3b08      	subs	r3, #8
10050ef8:	6018      	str	r0, [r3, #0]
10050efa:	6058      	str	r0, [r3, #4]
10050efc:	bd00      	pop	{pc}
	...

10050f00 <isr_postproc1>:
10050f00:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10050f02:	6915      	ldr	r5, [r2, #16]
10050f04:	461e      	mov	r6, r3
10050f06:	03a8      	lsls	r0, r5, #14
10050f08:	362e      	adds	r6, #46	; 0x2e
10050f0a:	b089      	sub	sp, #36	; 0x24
10050f0c:	461c      	mov	r4, r3
10050f0e:	4617      	mov	r7, r2
10050f10:	2800      	cmp	r0, #0
10050f12:	da32      	bge.n	10050f7a <isr_postproc1+0x7a>
10050f14:	2210      	movs	r2, #16
10050f16:	4669      	mov	r1, sp
10050f18:	4630      	mov	r0, r6
10050f1a:	f7fb fcd1 	bl	1004c8c0 <char_copy>
10050f1e:	2409      	movs	r4, #9
10050f20:	06e4      	lsls	r4, r4, #27
10050f22:	9803      	ldr	r0, [sp, #12]
10050f24:	61a0      	str	r0, [r4, #24]
10050f26:	9802      	ldr	r0, [sp, #8]
10050f28:	61e0      	str	r0, [r4, #28]
10050f2a:	9801      	ldr	r0, [sp, #4]
10050f2c:	6220      	str	r0, [r4, #32]
10050f2e:	9800      	ldr	r0, [sp, #0]
10050f30:	6260      	str	r0, [r4, #36]	; 0x24
10050f32:	4835      	ldr	r0, [pc, #212]	; (10051008 <isr_postproc1+0x108>)
10050f34:	6801      	ldr	r1, [r0, #0]
10050f36:	14e0      	asrs	r0, r4, #19
10050f38:	1808      	adds	r0, r1, r0
10050f3a:	6f01      	ldr	r1, [r0, #112]	; 0x70
10050f3c:	62a1      	str	r1, [r4, #40]	; 0x28
10050f3e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
10050f40:	62e0      	str	r0, [r4, #44]	; 0x2c
10050f42:	980a      	ldr	r0, [sp, #40]	; 0x28
10050f44:	3080      	adds	r0, #128	; 0x80
10050f46:	6c01      	ldr	r1, [r0, #64]	; 0x40
10050f48:	6321      	str	r1, [r4, #48]	; 0x30
10050f4a:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
10050f4c:	6360      	str	r0, [r4, #52]	; 0x34
10050f4e:	f000 f86a 	bl	10051026 <wait_for_aes_ready>
10050f52:	6ba0      	ldr	r0, [r4, #56]	; 0x38
10050f54:	9003      	str	r0, [sp, #12]
10050f56:	6be0      	ldr	r0, [r4, #60]	; 0x3c
10050f58:	9002      	str	r0, [sp, #8]
10050f5a:	482c      	ldr	r0, [pc, #176]	; (1005100c <isr_postproc1+0x10c>)
10050f5c:	6801      	ldr	r1, [r0, #0]
10050f5e:	9101      	str	r1, [sp, #4]
10050f60:	6840      	ldr	r0, [r0, #4]
10050f62:	9000      	str	r0, [sp, #0]
10050f64:	2210      	movs	r2, #16
10050f66:	4631      	mov	r1, r6
10050f68:	4668      	mov	r0, sp
10050f6a:	f7fb fca9 	bl	1004c8c0 <char_copy>
10050f6e:	2001      	movs	r0, #1
10050f70:	0440      	lsls	r0, r0, #17
10050f72:	4385      	bics	r5, r0
10050f74:	613d      	str	r5, [r7, #16]
10050f76:	b00d      	add	sp, #52	; 0x34
10050f78:	bdf0      	pop	{r4, r5, r6, r7, pc}
10050f7a:	05e8      	lsls	r0, r5, #23
10050f7c:	d53c      	bpl.n	10050ff8 <isr_postproc1+0xf8>
10050f7e:	a805      	add	r0, sp, #20
10050f80:	4601      	mov	r1, r0
10050f82:	9000      	str	r0, [sp, #0]
10050f84:	2210      	movs	r2, #16
10050f86:	4630      	mov	r0, r6
10050f88:	f7fb fc9a 	bl	1004c8c0 <char_copy>
10050f8c:	20ff      	movs	r0, #255	; 0xff
10050f8e:	3001      	adds	r0, #1
10050f90:	4385      	bics	r5, r0
10050f92:	2041      	movs	r0, #65	; 0x41
10050f94:	0280      	lsls	r0, r0, #10
10050f96:	4305      	orrs	r5, r0
10050f98:	613d      	str	r5, [r7, #16]
10050f9a:	9809      	ldr	r0, [sp, #36]	; 0x24
10050f9c:	2208      	movs	r2, #8
10050f9e:	a901      	add	r1, sp, #4
10050fa0:	1cc0      	adds	r0, r0, #3
10050fa2:	f7fb fc8d 	bl	1004c8c0 <char_copy>
10050fa6:	9809      	ldr	r0, [sp, #36]	; 0x24
10050fa8:	4621      	mov	r1, r4
10050faa:	2204      	movs	r2, #4
10050fac:	312a      	adds	r1, #42	; 0x2a
10050fae:	300b      	adds	r0, #11
10050fb0:	f7fb fc86 	bl	1004c8c0 <char_copy>
10050fb4:	4815      	ldr	r0, [pc, #84]	; (1005100c <isr_postproc1+0x10c>)
10050fb6:	a905      	add	r1, sp, #20
10050fb8:	3828      	subs	r0, #40	; 0x28
10050fba:	f7fc fc6f 	bl	1004d89c <copy_4_u32>
10050fbe:	2409      	movs	r4, #9
10050fc0:	06e4      	lsls	r4, r4, #27
10050fc2:	9802      	ldr	r0, [sp, #8]
10050fc4:	62a0      	str	r0, [r4, #40]	; 0x28
10050fc6:	9801      	ldr	r0, [sp, #4]
10050fc8:	62e0      	str	r0, [r4, #44]	; 0x2c
10050fca:	6b78      	ldr	r0, [r7, #52]	; 0x34
10050fcc:	2208      	movs	r2, #8
10050fce:	a903      	add	r1, sp, #12
10050fd0:	300d      	adds	r0, #13
10050fd2:	f7fb fc75 	bl	1004c8c0 <char_copy>
10050fd6:	9804      	ldr	r0, [sp, #16]
10050fd8:	6320      	str	r0, [r4, #48]	; 0x30
10050fda:	9803      	ldr	r0, [sp, #12]
10050fdc:	6360      	str	r0, [r4, #52]	; 0x34
10050fde:	f000 f822 	bl	10051026 <wait_for_aes_ready>
10050fe2:	490a      	ldr	r1, [pc, #40]	; (1005100c <isr_postproc1+0x10c>)
10050fe4:	a805      	add	r0, sp, #20
10050fe6:	3908      	subs	r1, #8
10050fe8:	f7fc fc58 	bl	1004d89c <copy_4_u32>
10050fec:	2210      	movs	r2, #16
10050fee:	4631      	mov	r1, r6
10050ff0:	9800      	ldr	r0, [sp, #0]
10050ff2:	f7fb fc65 	bl	1004c8c0 <char_copy>
10050ff6:	e7be      	b.n	10050f76 <isr_postproc1+0x76>
10050ff8:	7aa0      	ldrb	r0, [r4, #10]
10050ffa:	0600      	lsls	r0, r0, #24
10050ffc:	d4bb      	bmi.n	10050f76 <isr_postproc1+0x76>
10050ffe:	980a      	ldr	r0, [sp, #40]	; 0x28
10051000:	f000 f806 	bl	10051010 <isr_postproc_encrypt_data>
10051004:	e7b7      	b.n	10050f76 <isr_postproc1+0x76>
10051006:	0000      	.short	0x0000
10051008:	2000098c 	.word	0x2000098c
1005100c:	48000040 	.word	0x48000040

10051010 <isr_postproc_encrypt_data>:
10051010:	b510      	push	{r4, lr}
10051012:	4604      	mov	r4, r0
10051014:	3480      	adds	r4, #128	; 0x80
10051016:	6c60      	ldr	r0, [r4, #68]	; 0x44
10051018:	2800      	cmp	r0, #0
1005101a:	d003      	beq.n	10051024 <isr_postproc_encrypt_data+0x14>
1005101c:	f7fc fc8a 	bl	1004d934 <encrypt>
10051020:	2000      	movs	r0, #0
10051022:	6460      	str	r0, [r4, #68]	; 0x44
10051024:	bd10      	pop	{r4, pc}

10051026 <wait_for_aes_ready>:
10051026:	b508      	push	{r3, lr}
10051028:	2064      	movs	r0, #100	; 0x64
1005102a:	4669      	mov	r1, sp
1005102c:	7008      	strb	r0, [r1, #0]
1005102e:	2109      	movs	r1, #9
10051030:	06c9      	lsls	r1, r1, #27
10051032:	466a      	mov	r2, sp
10051034:	7810      	ldrb	r0, [r2, #0]
10051036:	1e40      	subs	r0, r0, #1
10051038:	7010      	strb	r0, [r2, #0]
1005103a:	6948      	ldr	r0, [r1, #20]
1005103c:	04c0      	lsls	r0, r0, #19
1005103e:	d402      	bmi.n	10051046 <wait_for_aes_ready+0x20>
10051040:	7810      	ldrb	r0, [r2, #0]
10051042:	2800      	cmp	r0, #0
10051044:	d1f5      	bne.n	10051032 <wait_for_aes_ready+0xc>
10051046:	7810      	ldrb	r0, [r2, #0]
10051048:	bd08      	pop	{r3, pc}
	...

1005104c <LL_update_proc>:
1005104c:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005104e:	b081      	sub	sp, #4
10051050:	2300      	movs	r3, #0
10051052:	9300      	str	r3, [sp, #0]
10051054:	9b04      	ldr	r3, [sp, #16]
10051056:	2b01      	cmp	r3, #1
10051058:	d02b      	beq.n	100510b2 <LL_update_proc+0x66>
1005105a:	8c4b      	ldrh	r3, [r1, #34]	; 0x22
1005105c:	4d20      	ldr	r5, [pc, #128]	; (100510e0 <LL_update_proc+0x94>)
1005105e:	011c      	lsls	r4, r3, #4
10051060:	8c0b      	ldrh	r3, [r1, #32]
10051062:	469c      	mov	ip, r3
10051064:	7ecb      	ldrb	r3, [r1, #27]
10051066:	436b      	muls	r3, r5
10051068:	8b8d      	ldrh	r5, [r1, #28]
1005106a:	46ae      	mov	lr, r5
1005106c:	8bcd      	ldrh	r5, [r1, #30]
1005106e:	6996      	ldr	r6, [r2, #24]
10051070:	42a6      	cmp	r6, r4
10051072:	d105      	bne.n	10051080 <LL_update_proc+0x34>
10051074:	8996      	ldrh	r6, [r2, #12]
10051076:	4566      	cmp	r6, ip
10051078:	d102      	bne.n	10051080 <LL_update_proc+0x34>
1005107a:	8f16      	ldrh	r6, [r2, #56]	; 0x38
1005107c:	42ae      	cmp	r6, r5
1005107e:	d001      	beq.n	10051084 <LL_update_proc+0x38>
10051080:	2640      	movs	r6, #64	; 0x40
10051082:	9600      	str	r6, [sp, #0]
10051084:	7996      	ldrb	r6, [r2, #6]
10051086:	2704      	movs	r7, #4
10051088:	0876      	lsrs	r6, r6, #1
1005108a:	0076      	lsls	r6, r6, #1
1005108c:	433e      	orrs	r6, r7
1005108e:	7196      	strb	r6, [r2, #6]
10051090:	6194      	str	r4, [r2, #24]
10051092:	6154      	str	r4, [r2, #20]
10051094:	4664      	mov	r4, ip
10051096:	8194      	strh	r4, [r2, #12]
10051098:	8715      	strh	r5, [r2, #56]	; 0x38
1005109a:	9a04      	ldr	r2, [sp, #16]
1005109c:	2a01      	cmp	r2, #1
1005109e:	d017      	beq.n	100510d0 <LL_update_proc+0x84>
100510a0:	610b      	str	r3, [r1, #16]
100510a2:	4670      	mov	r0, lr
100510a4:	684a      	ldr	r2, [r1, #4]
100510a6:	0040      	lsls	r0, r0, #1
100510a8:	1810      	adds	r0, r2, r0
100510aa:	6048      	str	r0, [r1, #4]
100510ac:	9800      	ldr	r0, [sp, #0]
100510ae:	b005      	add	sp, #20
100510b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100510b2:	4603      	mov	r3, r0
100510b4:	3340      	adds	r3, #64	; 0x40
100510b6:	461d      	mov	r5, r3
100510b8:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
100510ba:	4e09      	ldr	r6, [pc, #36]	; (100510e0 <LL_update_proc+0x94>)
100510bc:	011c      	lsls	r4, r3, #4
100510be:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
100510c0:	469c      	mov	ip, r3
100510c2:	2360      	movs	r3, #96	; 0x60
100510c4:	5c1b      	ldrb	r3, [r3, r0]
100510c6:	4373      	muls	r3, r6
100510c8:	8cae      	ldrh	r6, [r5, #36]	; 0x24
100510ca:	8d2d      	ldrh	r5, [r5, #40]	; 0x28
100510cc:	46b6      	mov	lr, r6
100510ce:	e7ce      	b.n	1005106e <LL_update_proc+0x22>
100510d0:	6583      	str	r3, [r0, #88]	; 0x58
100510d2:	4671      	mov	r1, lr
100510d4:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
100510d6:	0049      	lsls	r1, r1, #1
100510d8:	1851      	adds	r1, r2, r1
100510da:	64c1      	str	r1, [r0, #76]	; 0x4c
100510dc:	e7e6      	b.n	100510ac <LL_update_proc+0x60>
100510de:	0000      	.short	0x0000
100510e0:	000004e2 	.word	0x000004e2

100510e4 <addr_u32_from_u8>:
100510e4:	b570      	push	{r4, r5, r6, lr}
100510e6:	4604      	mov	r4, r0
100510e8:	4616      	mov	r6, r2
100510ea:	460d      	mov	r5, r1
100510ec:	4608      	mov	r0, r1
100510ee:	f000 f9ae 	bl	1005144e <le4ByteToInt32>
100510f2:	6020      	str	r0, [r4, #0]
100510f4:	1d28      	adds	r0, r5, #4
100510f6:	f000 f9a5 	bl	10051444 <le2ByteToInt16>
100510fa:	0431      	lsls	r1, r6, #16
100510fc:	1840      	adds	r0, r0, r1
100510fe:	6060      	str	r0, [r4, #4]
10051100:	bd70      	pop	{r4, r5, r6, pc}

10051102 <cancel_connect_master_ucfg>:
10051102:	2000      	movs	r0, #0
10051104:	4770      	bx	lr
	...

10051108 <cancel_master>:
10051108:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005110a:	4601      	mov	r1, r0
1005110c:	481b      	ldr	r0, [pc, #108]	; (1005117c <cancel_master+0x74>)
1005110e:	2209      	movs	r2, #9
10051110:	6800      	ldr	r0, [r0, #0]
10051112:	0212      	lsls	r2, r2, #8
10051114:	1882      	adds	r2, r0, r2
10051116:	6b13      	ldr	r3, [r2, #48]	; 0x30
10051118:	2258      	movs	r2, #88	; 0x58
1005111a:	434a      	muls	r2, r1
1005111c:	189e      	adds	r6, r3, r2
1005111e:	2241      	movs	r2, #65	; 0x41
10051120:	0152      	lsls	r2, r2, #5
10051122:	1885      	adds	r5, r0, r2
10051124:	4a16      	ldr	r2, [pc, #88]	; (10051180 <cancel_master+0x78>)
10051126:	0188      	lsls	r0, r1, #6
10051128:	1887      	adds	r7, r0, r2
1005112a:	78b0      	ldrb	r0, [r6, #2]
1005112c:	2400      	movs	r4, #0
1005112e:	0740      	lsls	r0, r0, #29
10051130:	0f40      	lsrs	r0, r0, #29
10051132:	2805      	cmp	r0, #5
10051134:	d002      	beq.n	1005113c <cancel_master+0x34>
10051136:	2801      	cmp	r0, #1
10051138:	d005      	beq.n	10051146 <cancel_master+0x3e>
1005113a:	e010      	b.n	1005115e <cancel_master+0x56>
1005113c:	4608      	mov	r0, r1
1005113e:	f7ff ffe0 	bl	10051102 <cancel_connect_master_ucfg>
10051142:	4604      	mov	r4, r0
10051144:	e00b      	b.n	1005115e <cancel_master+0x56>
10051146:	462a      	mov	r2, r5
10051148:	3280      	adds	r2, #128	; 0x80
1005114a:	8a10      	ldrh	r0, [r2, #16]
1005114c:	2800      	cmp	r0, #0
1005114e:	d002      	beq.n	10051156 <cancel_master+0x4e>
10051150:	1e40      	subs	r0, r0, #1
10051152:	8210      	strh	r0, [r2, #16]
10051154:	e003      	b.n	1005115e <cancel_master+0x56>
10051156:	2401      	movs	r4, #1
10051158:	4608      	mov	r0, r1
1005115a:	f7fe fedd 	bl	1004ff18 <cancel_current_master>
1005115e:	7bf0      	ldrb	r0, [r6, #15]
10051160:	28ff      	cmp	r0, #255	; 0xff
10051162:	d201      	bcs.n	10051168 <cancel_master+0x60>
10051164:	1c40      	adds	r0, r0, #1
10051166:	73f0      	strb	r0, [r6, #15]
10051168:	2c00      	cmp	r4, #0
1005116a:	d006      	beq.n	1005117a <cancel_master+0x72>
1005116c:	4623      	mov	r3, r4
1005116e:	4632      	mov	r2, r6
10051170:	4629      	mov	r1, r5
10051172:	2000      	movs	r0, #0
10051174:	9700      	str	r7, [sp, #0]
10051176:	f7fd fcd9 	bl	1004eb2c <isr_event_handler>
1005117a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005117c:	2000098c 	.word	0x2000098c
10051180:	200000cc 	.word	0x200000cc

10051184 <get_adv_addr>:
10051184:	b510      	push	{r4, lr}
10051186:	460b      	mov	r3, r1
10051188:	7801      	ldrb	r1, [r0, #0]
1005118a:	09ca      	lsrs	r2, r1, #7
1005118c:	4601      	mov	r1, r0
1005118e:	3108      	adds	r1, #8
10051190:	4618      	mov	r0, r3
10051192:	f7ff ffa7 	bl	100510e4 <addr_u32_from_u8>
10051196:	bd10      	pop	{r4, pc}

10051198 <get_scan_addr>:
10051198:	b510      	push	{r4, lr}
1005119a:	460b      	mov	r3, r1
1005119c:	7801      	ldrb	r1, [r0, #0]
1005119e:	0649      	lsls	r1, r1, #25
100511a0:	0fca      	lsrs	r2, r1, #31
100511a2:	1c81      	adds	r1, r0, #2
100511a4:	4618      	mov	r0, r3
100511a6:	f7ff ff9d 	bl	100510e4 <addr_u32_from_u8>
100511aa:	bd10      	pop	{r4, pc}

100511ac <go_to_connect>:
100511ac:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100511ae:	460d      	mov	r5, r1
100511b0:	4606      	mov	r6, r0
100511b2:	b08d      	sub	sp, #52	; 0x34
100511b4:	2000      	movs	r0, #0
100511b6:	2109      	movs	r1, #9
100511b8:	06c9      	lsls	r1, r1, #27
100511ba:	9f16      	ldr	r7, [sp, #88]	; 0x58
100511bc:	4614      	mov	r4, r2
100511be:	6048      	str	r0, [r1, #4]
100511c0:	4630      	mov	r0, r6
100511c2:	300e      	adds	r0, #14
100511c4:	f000 f943 	bl	1005144e <le4ByteToInt32>
100511c8:	9008      	str	r0, [sp, #32]
100511ca:	7cb1      	ldrb	r1, [r6, #18]
100511cc:	7cf0      	ldrb	r0, [r6, #19]
100511ce:	0202      	lsls	r2, r0, #8
100511d0:	7d30      	ldrb	r0, [r6, #20]
100511d2:	0400      	lsls	r0, r0, #16
100511d4:	4310      	orrs	r0, r2
100511d6:	4308      	orrs	r0, r1
100511d8:	900a      	str	r0, [sp, #40]	; 0x28
100511da:	7d70      	ldrb	r0, [r6, #21]
100511dc:	9007      	str	r0, [sp, #28]
100511de:	4630      	mov	r0, r6
100511e0:	3016      	adds	r0, #22
100511e2:	f000 f92f 	bl	10051444 <le2ByteToInt16>
100511e6:	900c      	str	r0, [sp, #48]	; 0x30
100511e8:	4630      	mov	r0, r6
100511ea:	3018      	adds	r0, #24
100511ec:	f000 f92a 	bl	10051444 <le2ByteToInt16>
100511f0:	9006      	str	r0, [sp, #24]
100511f2:	4630      	mov	r0, r6
100511f4:	301a      	adds	r0, #26
100511f6:	f000 f925 	bl	10051444 <le2ByteToInt16>
100511fa:	900b      	str	r0, [sp, #44]	; 0x2c
100511fc:	4630      	mov	r0, r6
100511fe:	301c      	adds	r0, #28
10051200:	f000 f920 	bl	10051444 <le2ByteToInt16>
10051204:	9001      	str	r0, [sp, #4]
10051206:	4630      	mov	r0, r6
10051208:	301e      	adds	r0, #30
1005120a:	3620      	adds	r6, #32
1005120c:	9000      	str	r0, [sp, #0]
1005120e:	78f0      	ldrb	r0, [r6, #3]
10051210:	06c1      	lsls	r1, r0, #27
10051212:	0ec9      	lsrs	r1, r1, #27
10051214:	0946      	lsrs	r6, r0, #5
10051216:	2009      	movs	r0, #9
10051218:	06c0      	lsls	r0, r0, #27
1005121a:	9109      	str	r1, [sp, #36]	; 0x24
1005121c:	6880      	ldr	r0, [r0, #8]
1005121e:	64a8      	str	r0, [r5, #72]	; 0x48
10051220:	2000      	movs	r0, #0
10051222:	4639      	mov	r1, r7
10051224:	64e8      	str	r0, [r5, #76]	; 0x4c
10051226:	3121      	adds	r1, #33	; 0x21
10051228:	2205      	movs	r2, #5
1005122a:	9102      	str	r1, [sp, #8]
1005122c:	9800      	ldr	r0, [sp, #0]
1005122e:	f7fb fb47 	bl	1004c8c0 <char_copy>
10051232:	2102      	movs	r1, #2
10051234:	70e1      	strb	r1, [r4, #3]
10051236:	2000      	movs	r0, #0
10051238:	2222      	movs	r2, #34	; 0x22
1005123a:	5550      	strb	r0, [r2, r5]
1005123c:	73e0      	strb	r0, [r4, #15]
1005123e:	9806      	ldr	r0, [sp, #24]
10051240:	220c      	movs	r2, #12
10051242:	4350      	muls	r0, r2
10051244:	6160      	str	r0, [r4, #20]
10051246:	2000      	movs	r0, #0
10051248:	2231      	movs	r2, #49	; 0x31
1005124a:	5510      	strb	r0, [r2, r4]
1005124c:	9801      	ldr	r0, [sp, #4]
1005124e:	2301      	movs	r3, #1
10051250:	0100      	lsls	r0, r0, #4
10051252:	61a0      	str	r0, [r4, #24]
10051254:	4628      	mov	r0, r5
10051256:	7121      	strb	r1, [r4, #4]
10051258:	3040      	adds	r0, #64	; 0x40
1005125a:	9003      	str	r0, [sp, #12]
1005125c:	7183      	strb	r3, [r0, #6]
1005125e:	9806      	ldr	r0, [sp, #24]
10051260:	4970      	ldr	r1, [pc, #448]	; (10051424 <go_to_connect+0x278>)
10051262:	0240      	lsls	r0, r0, #9
10051264:	1840      	adds	r0, r0, r1
10051266:	4970      	ldr	r1, [pc, #448]	; (10051428 <go_to_connect+0x27c>)
10051268:	6a89      	ldr	r1, [r1, #40]	; 0x28
1005126a:	4281      	cmp	r1, r0
1005126c:	d200      	bcs.n	10051270 <go_to_connect+0xc4>
1005126e:	4608      	mov	r0, r1
10051270:	2100      	movs	r1, #0
10051272:	6568      	str	r0, [r5, #84]	; 0x54
10051274:	8121      	strh	r1, [r4, #8]
10051276:	980b      	ldr	r0, [sp, #44]	; 0x2c
10051278:	81a0      	strh	r0, [r4, #12]
1005127a:	9806      	ldr	r0, [sp, #24]
1005127c:	8720      	strh	r0, [r4, #56]	; 0x38
1005127e:	980c      	ldr	r0, [sp, #48]	; 0x30
10051280:	0042      	lsls	r2, r0, #1
10051282:	2001      	movs	r0, #1
10051284:	1c92      	adds	r2, r2, #2
10051286:	64ea      	str	r2, [r5, #76]	; 0x4c
10051288:	9a03      	ldr	r2, [sp, #12]
1005128a:	8396      	strh	r6, [r2, #28]
1005128c:	9a03      	ldr	r2, [sp, #12]
1005128e:	8096      	strh	r6, [r2, #4]
10051290:	71a1      	strb	r1, [r4, #6]
10051292:	6121      	str	r1, [r4, #16]
10051294:	8020      	strh	r0, [r4, #0]
10051296:	6aa0      	ldr	r0, [r4, #40]	; 0x28
10051298:	8000      	strh	r0, [r0, #0]
1005129a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
1005129c:	8044      	strh	r4, [r0, #2]
1005129e:	4620      	mov	r0, r4
100512a0:	3040      	adds	r0, #64	; 0x40
100512a2:	7501      	strb	r1, [r0, #20]
100512a4:	261b      	movs	r6, #27
100512a6:	21ff      	movs	r1, #255	; 0xff
100512a8:	8766      	strh	r6, [r4, #58]	; 0x3a
100512aa:	3149      	adds	r1, #73	; 0x49
100512ac:	462a      	mov	r2, r5
100512ae:	8101      	strh	r1, [r0, #8]
100512b0:	32c0      	adds	r2, #192	; 0xc0
100512b2:	8a13      	ldrh	r3, [r2, #16]
100512b4:	2b1b      	cmp	r3, #27
100512b6:	d102      	bne.n	100512be <go_to_connect+0x112>
100512b8:	8a53      	ldrh	r3, [r2, #18]
100512ba:	428b      	cmp	r3, r1
100512bc:	d001      	beq.n	100512c2 <go_to_connect+0x116>
100512be:	2310      	movs	r3, #16
100512c0:	7503      	strb	r3, [r0, #20]
100512c2:	8b13      	ldrh	r3, [r2, #24]
100512c4:	87a3      	strh	r3, [r4, #60]	; 0x3c
100512c6:	87e6      	strh	r6, [r4, #62]	; 0x3e
100512c8:	8006      	strh	r6, [r0, #0]
100512ca:	8046      	strh	r6, [r0, #2]
100512cc:	8086      	strh	r6, [r0, #4]
100512ce:	80c6      	strh	r6, [r0, #6]
100512d0:	8b52      	ldrh	r2, [r2, #26]
100512d2:	8142      	strh	r2, [r0, #10]
100512d4:	8181      	strh	r1, [r0, #12]
100512d6:	81c1      	strh	r1, [r0, #14]
100512d8:	8201      	strh	r1, [r0, #16]
100512da:	8241      	strh	r1, [r0, #18]
100512dc:	8c28      	ldrh	r0, [r5, #32]
100512de:	4953      	ldr	r1, [pc, #332]	; (1005142c <go_to_connect+0x280>)
100512e0:	1c40      	adds	r0, r0, #1
100512e2:	b280      	uxth	r0, r0
100512e4:	4288      	cmp	r0, r1
100512e6:	d902      	bls.n	100512ee <go_to_connect+0x142>
100512e8:	4249      	negs	r1, r1
100512ea:	1840      	adds	r0, r0, r1
100512ec:	b280      	uxth	r0, r0
100512ee:	8160      	strh	r0, [r4, #10]
100512f0:	8428      	strh	r0, [r5, #32]
100512f2:	20c7      	movs	r0, #199	; 0xc7
100512f4:	9001      	str	r0, [sp, #4]
100512f6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
100512f8:	72c8      	strb	r0, [r1, #11]
100512fa:	2205      	movs	r2, #5
100512fc:	9902      	ldr	r1, [sp, #8]
100512fe:	9800      	ldr	r0, [sp, #0]
10051300:	f7fb fade 	bl	1004c8c0 <char_copy>
10051304:	2000      	movs	r0, #0
10051306:	72f8      	strb	r0, [r7, #11]
10051308:	8d21      	ldrh	r1, [r4, #40]	; 0x28
1005130a:	8239      	strh	r1, [r7, #16]
1005130c:	75f8      	strb	r0, [r7, #23]
1005130e:	9808      	ldr	r0, [sp, #32]
10051310:	61b8      	str	r0, [r7, #24]
10051312:	980a      	ldr	r0, [sp, #40]	; 0x28
10051314:	61f8      	str	r0, [r7, #28]
10051316:	2120      	movs	r1, #32
10051318:	9809      	ldr	r0, [sp, #36]	; 0x24
1005131a:	55c8      	strb	r0, [r1, r7]
1005131c:	f7fb fb79 	bl	1004ca12 <data_length_extension_csr_ucfg>
10051320:	2280      	movs	r2, #128	; 0x80
10051322:	2801      	cmp	r0, #1
10051324:	d100      	bne.n	10051328 <go_to_connect+0x17c>
10051326:	75ba      	strb	r2, [r7, #22]
10051328:	2042      	movs	r0, #66	; 0x42
1005132a:	9002      	str	r0, [sp, #8]
1005132c:	9005      	str	r0, [sp, #20]
1005132e:	4840      	ldr	r0, [pc, #256]	; (10051430 <go_to_connect+0x284>)
10051330:	9004      	str	r0, [sp, #16]
10051332:	462e      	mov	r6, r5
10051334:	9810      	ldr	r0, [sp, #64]	; 0x40
10051336:	493f      	ldr	r1, [pc, #252]	; (10051434 <go_to_connect+0x288>)
10051338:	3680      	adds	r6, #128	; 0x80
1005133a:	2800      	cmp	r0, #0
1005133c:	d039      	beq.n	100513b2 <go_to_connect+0x206>
1005133e:	6bb0      	ldr	r0, [r6, #56]	; 0x38
10051340:	8000      	strh	r0, [r0, #0]
10051342:	6bb2      	ldr	r2, [r6, #56]	; 0x38
10051344:	9801      	ldr	r0, [sp, #4]
10051346:	72d0      	strb	r0, [r2, #11]
10051348:	8f30      	ldrh	r0, [r6, #56]	; 0x38
1005134a:	8278      	strh	r0, [r7, #18]
1005134c:	9810      	ldr	r0, [sp, #64]	; 0x40
1005134e:	4a3a      	ldr	r2, [pc, #232]	; (10051438 <go_to_connect+0x28c>)
10051350:	6800      	ldr	r0, [r0, #0]
10051352:	6128      	str	r0, [r5, #16]
10051354:	9810      	ldr	r0, [sp, #64]	; 0x40
10051356:	6840      	ldr	r0, [r0, #4]
10051358:	6168      	str	r0, [r5, #20]
1005135a:	9807      	ldr	r0, [sp, #28]
1005135c:	4350      	muls	r0, r2
1005135e:	30ff      	adds	r0, #255	; 0xff
10051360:	30f5      	adds	r0, #245	; 0xf5
10051362:	65a8      	str	r0, [r5, #88]	; 0x58
10051364:	9a03      	ldr	r2, [sp, #12]
10051366:	2001      	movs	r0, #1
10051368:	7790      	strb	r0, [r2, #30]
1005136a:	8808      	ldrh	r0, [r1, #0]
1005136c:	4a33      	ldr	r2, [pc, #204]	; (1005143c <go_to_connect+0x290>)
1005136e:	0740      	lsls	r0, r0, #29
10051370:	6812      	ldr	r2, [r2, #0]
10051372:	233f      	movs	r3, #63	; 0x3f
10051374:	0f40      	lsrs	r0, r0, #29
10051376:	015b      	lsls	r3, r3, #5
10051378:	18d2      	adds	r2, r2, r3
1005137a:	7290      	strb	r0, [r2, #10]
1005137c:	7960      	ldrb	r0, [r4, #5]
1005137e:	22c0      	movs	r2, #192	; 0xc0
10051380:	4310      	orrs	r0, r2
10051382:	7160      	strb	r0, [r4, #5]
10051384:	2000      	movs	r0, #0
10051386:	72b8      	strb	r0, [r7, #10]
10051388:	78a0      	ldrb	r0, [r4, #2]
1005138a:	08c0      	lsrs	r0, r0, #3
1005138c:	00c0      	lsls	r0, r0, #3
1005138e:	1c80      	adds	r0, r0, #2
10051390:	70a0      	strb	r0, [r4, #2]
10051392:	6bb2      	ldr	r2, [r6, #56]	; 0x38
10051394:	201b      	movs	r0, #27
10051396:	7290      	strb	r0, [r2, #10]
10051398:	8808      	ldrh	r0, [r1, #0]
1005139a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
1005139c:	0140      	lsls	r0, r0, #5
1005139e:	3008      	adds	r0, #8
100513a0:	7288      	strb	r0, [r1, #10]
100513a2:	2000      	movs	r0, #0
100513a4:	43c0      	mvns	r0, r0
100513a6:	8230      	strh	r0, [r6, #16]
100513a8:	6bb1      	ldr	r1, [r6, #56]	; 0x38
100513aa:	2203      	movs	r2, #3
100513ac:	1dc9      	adds	r1, r1, #7
100513ae:	9802      	ldr	r0, [sp, #8]
100513b0:	e025      	b.n	100513fe <go_to_connect+0x252>
100513b2:	6b70      	ldr	r0, [r6, #52]	; 0x34
100513b4:	8000      	strh	r0, [r0, #0]
100513b6:	6b73      	ldr	r3, [r6, #52]	; 0x34
100513b8:	9801      	ldr	r0, [sp, #4]
100513ba:	72d8      	strb	r0, [r3, #11]
100513bc:	8eb0      	ldrh	r0, [r6, #52]	; 0x34
100513be:	8278      	strh	r0, [r7, #18]
100513c0:	7960      	ldrb	r0, [r4, #5]
100513c2:	23c0      	movs	r3, #192	; 0xc0
100513c4:	4318      	orrs	r0, r3
100513c6:	7160      	strb	r0, [r4, #5]
100513c8:	72ba      	strb	r2, [r7, #10]
100513ca:	78a0      	ldrb	r0, [r4, #2]
100513cc:	4d1c      	ldr	r5, [pc, #112]	; (10051440 <go_to_connect+0x294>)
100513ce:	08c0      	lsrs	r0, r0, #3
100513d0:	00c0      	lsls	r0, r0, #3
100513d2:	1d40      	adds	r0, r0, #5
100513d4:	70a0      	strb	r0, [r4, #2]
100513d6:	8808      	ldrh	r0, [r1, #0]
100513d8:	6aa1      	ldr	r1, [r4, #40]	; 0x28
100513da:	0140      	lsls	r0, r0, #5
100513dc:	3019      	adds	r0, #25
100513de:	7288      	strb	r0, [r1, #10]
100513e0:	6b71      	ldr	r1, [r6, #52]	; 0x34
100513e2:	200a      	movs	r0, #10
100513e4:	7288      	strb	r0, [r1, #10]
100513e6:	f7ff f8b3 	bl	10050550 <timebase_start_connect>
100513ea:	6b71      	ldr	r1, [r6, #52]	; 0x34
100513ec:	2203      	movs	r2, #3
100513ee:	1dc9      	adds	r1, r1, #7
100513f0:	9802      	ldr	r0, [sp, #8]
100513f2:	f7fb fab7 	bl	1004c964 <set_string>
100513f6:	6b71      	ldr	r1, [r6, #52]	; 0x34
100513f8:	2203      	movs	r2, #3
100513fa:	4628      	mov	r0, r5
100513fc:	1d09      	adds	r1, r1, #4
100513fe:	f7fb fab1 	bl	1004c964 <set_string>
10051402:	2001      	movs	r0, #1
10051404:	f004 fdb0 	bl	10055f68 <advance_wakeup_timer>
10051408:	6aa1      	ldr	r1, [r4, #40]	; 0x28
1005140a:	2203      	movs	r2, #3
1005140c:	1dc9      	adds	r1, r1, #7
1005140e:	9805      	ldr	r0, [sp, #20]
10051410:	f7fb faa8 	bl	1004c964 <set_string>
10051414:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10051416:	2203      	movs	r2, #3
10051418:	1d09      	adds	r1, r1, #4
1005141a:	9804      	ldr	r0, [sp, #16]
1005141c:	f7fb faa2 	bl	1004c964 <set_string>
10051420:	b011      	add	sp, #68	; 0x44
10051422:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051424:	fffffd9a 	.word	0xfffffd9a
10051428:	200002cc 	.word	0x200002cc
1005142c:	00000eff 	.word	0x00000eff
10051430:	003000fa 	.word	0x003000fa
10051434:	200000c0 	.word	0x200000c0
10051438:	000004e2 	.word	0x000004e2
1005143c:	2000098c 	.word	0x2000098c
10051440:	00b0012c 	.word	0x00b0012c

10051444 <le2ByteToInt16>:
10051444:	7801      	ldrb	r1, [r0, #0]
10051446:	7840      	ldrb	r0, [r0, #1]
10051448:	0200      	lsls	r0, r0, #8
1005144a:	4308      	orrs	r0, r1
1005144c:	4770      	bx	lr

1005144e <le4ByteToInt32>:
1005144e:	7801      	ldrb	r1, [r0, #0]
10051450:	7842      	ldrb	r2, [r0, #1]
10051452:	0213      	lsls	r3, r2, #8
10051454:	7882      	ldrb	r2, [r0, #2]
10051456:	78c0      	ldrb	r0, [r0, #3]
10051458:	0412      	lsls	r2, r2, #16
1005145a:	0600      	lsls	r0, r0, #24
1005145c:	4310      	orrs	r0, r2
1005145e:	4318      	orrs	r0, r3
10051460:	4308      	orrs	r0, r1
10051462:	4770      	bx	lr

10051464 <unpack_channel_map>:
10051464:	b570      	push	{r4, r5, r6, lr}
10051466:	4605      	mov	r5, r0
10051468:	4616      	mov	r6, r2
1005146a:	460c      	mov	r4, r1
1005146c:	1cc0      	adds	r0, r0, #3
1005146e:	f7ff ffee 	bl	1005144e <le4ByteToInt32>
10051472:	2184      	movs	r1, #132	; 0x84
10051474:	5108      	str	r0, [r1, r4]
10051476:	79e9      	ldrb	r1, [r5, #7]
10051478:	207b      	movs	r0, #123	; 0x7b
1005147a:	5501      	strb	r1, [r0, r4]
1005147c:	4628      	mov	r0, r5
1005147e:	3008      	adds	r0, #8
10051480:	f7ff ffe0 	bl	10051444 <le2ByteToInt16>
10051484:	3440      	adds	r4, #64	; 0x40
10051486:	8720      	strh	r0, [r4, #56]	; 0x38
10051488:	79b0      	ldrb	r0, [r6, #6]
1005148a:	2102      	movs	r1, #2
1005148c:	4308      	orrs	r0, r1
1005148e:	71b0      	strb	r0, [r6, #6]
10051490:	bd70      	pop	{r4, r5, r6, pc}

10051492 <unpack_update_request>:
10051492:	b570      	push	{r4, r5, r6, lr}
10051494:	460c      	mov	r4, r1
10051496:	4605      	mov	r5, r0
10051498:	78c1      	ldrb	r1, [r0, #3]
1005149a:	2060      	movs	r0, #96	; 0x60
1005149c:	5501      	strb	r1, [r0, r4]
1005149e:	4616      	mov	r6, r2
100514a0:	1d28      	adds	r0, r5, #4
100514a2:	f7ff ffcf 	bl	10051444 <le2ByteToInt16>
100514a6:	3440      	adds	r4, #64	; 0x40
100514a8:	84a0      	strh	r0, [r4, #36]	; 0x24
100514aa:	1da8      	adds	r0, r5, #6
100514ac:	f7ff ffca 	bl	10051444 <le2ByteToInt16>
100514b0:	8520      	strh	r0, [r4, #40]	; 0x28
100514b2:	4628      	mov	r0, r5
100514b4:	3008      	adds	r0, #8
100514b6:	f7ff ffc5 	bl	10051444 <le2ByteToInt16>
100514ba:	85a0      	strh	r0, [r4, #44]	; 0x2c
100514bc:	4628      	mov	r0, r5
100514be:	300a      	adds	r0, #10
100514c0:	f7ff ffc0 	bl	10051444 <le2ByteToInt16>
100514c4:	8620      	strh	r0, [r4, #48]	; 0x30
100514c6:	4628      	mov	r0, r5
100514c8:	300c      	adds	r0, #12
100514ca:	f7ff ffbb 	bl	10051444 <le2ByteToInt16>
100514ce:	86a0      	strh	r0, [r4, #52]	; 0x34
100514d0:	79b0      	ldrb	r0, [r6, #6]
100514d2:	2101      	movs	r1, #1
100514d4:	4308      	orrs	r0, r1
100514d6:	71b0      	strb	r0, [r6, #6]
100514d8:	bd70      	pop	{r4, r5, r6, pc}

100514da <Is_Address_Initialized>:
100514da:	4602      	mov	r2, r0
100514dc:	2000      	movs	r0, #0
100514de:	4601      	mov	r1, r0
100514e0:	5c53      	ldrb	r3, [r2, r1]
100514e2:	2b00      	cmp	r3, #0
100514e4:	d000      	beq.n	100514e8 <Is_Address_Initialized+0xe>
100514e6:	2001      	movs	r0, #1
100514e8:	1c49      	adds	r1, r1, #1
100514ea:	b2c9      	uxtb	r1, r1
100514ec:	2906      	cmp	r1, #6
100514ee:	d3f7      	bcc.n	100514e0 <Is_Address_Initialized+0x6>
100514f0:	4770      	bx	lr

100514f2 <LL_Allow_Address_Setting>:
100514f2:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100514f4:	460f      	mov	r7, r1
100514f6:	4606      	mov	r6, r0
100514f8:	2400      	movs	r4, #0
100514fa:	f7fe fe63 	bl	100501c4 <get_scan_connection>
100514fe:	4605      	mov	r5, r0
10051500:	f7fe fdde 	bl	100500c0 <get_advertiser>
10051504:	2d08      	cmp	r5, #8
10051506:	d301      	bcc.n	1005150c <LL_Allow_Address_Setting+0x1a>
10051508:	2808      	cmp	r0, #8
1005150a:	d211      	bcs.n	10051530 <LL_Allow_Address_Setting+0x3e>
1005150c:	a902      	add	r1, sp, #8
1005150e:	4668      	mov	r0, sp
10051510:	f000 fa1c 	bl	1005194c <LL_Get_Address>
10051514:	2f00      	cmp	r7, #0
10051516:	4668      	mov	r0, sp
10051518:	d006      	beq.n	10051528 <LL_Allow_Address_Setting+0x36>
1005151a:	7940      	ldrb	r0, [r0, #5]
1005151c:	0640      	lsls	r0, r0, #25
1005151e:	d501      	bpl.n	10051524 <LL_Allow_Address_Setting+0x32>
10051520:	2102      	movs	r1, #2
10051522:	e002      	b.n	1005152a <LL_Allow_Address_Setting+0x38>
10051524:	2103      	movs	r1, #3
10051526:	e000      	b.n	1005152a <LL_Allow_Address_Setting+0x38>
10051528:	7a01      	ldrb	r1, [r0, #8]
1005152a:	42b1      	cmp	r1, r6
1005152c:	d000      	beq.n	10051530 <LL_Allow_Address_Setting+0x3e>
1005152e:	2441      	movs	r4, #65	; 0x41
10051530:	4620      	mov	r0, r4
10051532:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10051534 <LL_Check_And_Set_Addresses>:
10051534:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10051536:	4607      	mov	r7, r0
10051538:	b08d      	sub	sp, #52	; 0x34
1005153a:	2000      	movs	r0, #0
1005153c:	9008      	str	r0, [sp, #32]
1005153e:	9007      	str	r0, [sp, #28]
10051540:	4878      	ldr	r0, [pc, #480]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
10051542:	461e      	mov	r6, r3
10051544:	6801      	ldr	r1, [r0, #0]
10051546:	2041      	movs	r0, #65	; 0x41
10051548:	0140      	lsls	r0, r0, #5
1005154a:	180c      	adds	r4, r1, r0
1005154c:	2023      	movs	r0, #35	; 0x23
1005154e:	0140      	lsls	r0, r0, #5
10051550:	1808      	adds	r0, r1, r0
10051552:	7147      	strb	r7, [r0, #5]
10051554:	4615      	mov	r5, r2
10051556:	71c2      	strb	r2, [r0, #7]
10051558:	2b00      	cmp	r3, #0
1005155a:	d001      	beq.n	10051560 <LL_Check_And_Set_Addresses+0x2c>
1005155c:	2100      	movs	r1, #0
1005155e:	7101      	strb	r1, [r0, #4]
10051560:	980e      	ldr	r0, [sp, #56]	; 0x38
10051562:	2800      	cmp	r0, #0
10051564:	d07e      	beq.n	10051664 <LL_Check_And_Set_Addresses+0x130>
10051566:	f7ff ffb8 	bl	100514da <Is_Address_Initialized>
1005156a:	2800      	cmp	r0, #0
1005156c:	d07a      	beq.n	10051664 <LL_Check_And_Set_Addresses+0x130>
1005156e:	2e00      	cmp	r6, #0
10051570:	d003      	beq.n	1005157a <LL_Check_And_Set_Addresses+0x46>
10051572:	3420      	adds	r4, #32
10051574:	7920      	ldrb	r0, [r4, #4]
10051576:	2801      	cmp	r0, #1
10051578:	d074      	beq.n	10051664 <LL_Check_And_Set_Addresses+0x130>
1005157a:	24ff      	movs	r4, #255	; 0xff
1005157c:	2e00      	cmp	r6, #0
1005157e:	d007      	beq.n	10051590 <LL_Check_And_Set_Addresses+0x5c>
10051580:	2d02      	cmp	r5, #2
10051582:	d002      	beq.n	1005158a <LL_Check_And_Set_Addresses+0x56>
10051584:	2d03      	cmp	r5, #3
10051586:	d002      	beq.n	1005158e <LL_Check_And_Set_Addresses+0x5a>
10051588:	e002      	b.n	10051590 <LL_Check_And_Set_Addresses+0x5c>
1005158a:	2500      	movs	r5, #0
1005158c:	e000      	b.n	10051590 <LL_Check_And_Set_Addresses+0x5c>
1005158e:	2501      	movs	r5, #1
10051590:	4864      	ldr	r0, [pc, #400]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
10051592:	4965      	ldr	r1, [pc, #404]	; (10051728 <LL_Check_And_Set_Addresses+0x1f4>)
10051594:	6800      	ldr	r0, [r0, #0]
10051596:	1840      	adds	r0, r0, r1
10051598:	900b      	str	r0, [sp, #44]	; 0x2c
1005159a:	2f02      	cmp	r7, #2
1005159c:	d001      	beq.n	100515a2 <LL_Check_And_Set_Addresses+0x6e>
1005159e:	2f03      	cmp	r7, #3
100515a0:	d16a      	bne.n	10051678 <LL_Check_And_Set_Addresses+0x144>
100515a2:	4668      	mov	r0, sp
100515a4:	7005      	strb	r5, [r0, #0]
100515a6:	2206      	movs	r2, #6
100515a8:	1c40      	adds	r0, r0, #1
100515aa:	990e      	ldr	r1, [sp, #56]	; 0x38
100515ac:	f7f1 fe07 	bl	100431be <Osal_MemCpy>
100515b0:	4669      	mov	r1, sp
100515b2:	2000      	movs	r0, #0
100515b4:	f7fd f83a 	bl	1004e62c <PRIVWHIT_u8SearchAddrInList>
100515b8:	28ff      	cmp	r0, #255	; 0xff
100515ba:	d003      	beq.n	100515c4 <LL_Check_And_Set_Addresses+0x90>
100515bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
100515be:	00c2      	lsls	r2, r0, #3
100515c0:	1851      	adds	r1, r2, r1
100515c2:	79cc      	ldrb	r4, [r1, #7]
100515c4:	2311      	movs	r3, #17
100515c6:	019b      	lsls	r3, r3, #6
100515c8:	4956      	ldr	r1, [pc, #344]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
100515ca:	2e00      	cmp	r6, #0
100515cc:	d014      	beq.n	100515f8 <LL_Check_And_Set_Addresses+0xc4>
100515ce:	6809      	ldr	r1, [r1, #0]
100515d0:	18ca      	adds	r2, r1, r3
100515d2:	7694      	strb	r4, [r2, #26]
100515d4:	2323      	movs	r3, #35	; 0x23
100515d6:	2200      	movs	r2, #0
100515d8:	015b      	lsls	r3, r3, #5
100515da:	18c9      	adds	r1, r1, r3
100515dc:	710a      	strb	r2, [r1, #4]
100515de:	28ff      	cmp	r0, #255	; 0xff
100515e0:	d04a      	beq.n	10051678 <LL_Check_And_Set_Addresses+0x144>
100515e2:	2037      	movs	r0, #55	; 0x37
100515e4:	4344      	muls	r4, r0
100515e6:	484f      	ldr	r0, [pc, #316]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
100515e8:	21ff      	movs	r1, #255	; 0xff
100515ea:	6800      	ldr	r0, [r0, #0]
100515ec:	312f      	adds	r1, #47	; 0x2f
100515ee:	1820      	adds	r0, r4, r0
100515f0:	5c09      	ldrb	r1, [r1, r0]
100515f2:	2900      	cmp	r1, #0
100515f4:	d004      	beq.n	10051600 <LL_Check_And_Set_Addresses+0xcc>
100515f6:	e015      	b.n	10051624 <LL_Check_And_Set_Addresses+0xf0>
100515f8:	680a      	ldr	r2, [r1, #0]
100515fa:	18d1      	adds	r1, r2, r3
100515fc:	758c      	strb	r4, [r1, #22]
100515fe:	e7ee      	b.n	100515de <LL_Check_And_Set_Addresses+0xaa>
10051600:	4601      	mov	r1, r0
10051602:	31ff      	adds	r1, #255	; 0xff
10051604:	30ff      	adds	r0, #255	; 0xff
10051606:	3147      	adds	r1, #71	; 0x47
10051608:	301f      	adds	r0, #31
1005160a:	f7fd f8dd 	bl	1004e7c8 <PRIV_vGeneratePrivateAddress_ucfg>
1005160e:	4845      	ldr	r0, [pc, #276]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
10051610:	2206      	movs	r2, #6
10051612:	6800      	ldr	r0, [r0, #0]
10051614:	1821      	adds	r1, r4, r0
10051616:	31ff      	adds	r1, #255	; 0xff
10051618:	a805      	add	r0, sp, #20
1005161a:	3148      	adds	r1, #72	; 0x48
1005161c:	f7f1 fdcf 	bl	100431be <Osal_MemCpy>
10051620:	2001      	movs	r0, #1
10051622:	9007      	str	r0, [sp, #28]
10051624:	493f      	ldr	r1, [pc, #252]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
10051626:	22ff      	movs	r2, #255	; 0xff
10051628:	6808      	ldr	r0, [r1, #0]
1005162a:	324e      	adds	r2, #78	; 0x4e
1005162c:	1820      	adds	r0, r4, r0
1005162e:	5c12      	ldrb	r2, [r2, r0]
10051630:	2a00      	cmp	r2, #0
10051632:	d11c      	bne.n	1005166e <LL_Check_And_Set_Addresses+0x13a>
10051634:	4601      	mov	r1, r0
10051636:	31ff      	adds	r1, #255	; 0xff
10051638:	30ff      	adds	r0, #255	; 0xff
1005163a:	3140      	adds	r1, #64	; 0x40
1005163c:	3030      	adds	r0, #48	; 0x30
1005163e:	f7fd f8c3 	bl	1004e7c8 <PRIV_vGeneratePrivateAddress_ucfg>
10051642:	4838      	ldr	r0, [pc, #224]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
10051644:	2206      	movs	r2, #6
10051646:	6800      	ldr	r0, [r0, #0]
10051648:	1821      	adds	r1, r4, r0
1005164a:	31ff      	adds	r1, #255	; 0xff
1005164c:	a803      	add	r0, sp, #12
1005164e:	3141      	adds	r1, #65	; 0x41
10051650:	f7f1 fdb5 	bl	100431be <Osal_MemCpy>
10051654:	2001      	movs	r0, #1
10051656:	9008      	str	r0, [sp, #32]
10051658:	2e00      	cmp	r6, #0
1005165a:	d008      	beq.n	1005166e <LL_Check_And_Set_Addresses+0x13a>
1005165c:	4831      	ldr	r0, [pc, #196]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
1005165e:	2101      	movs	r1, #1
10051660:	6802      	ldr	r2, [r0, #0]
10051662:	e000      	b.n	10051666 <LL_Check_And_Set_Addresses+0x132>
10051664:	e017      	b.n	10051696 <LL_Check_And_Set_Addresses+0x162>
10051666:	2023      	movs	r0, #35	; 0x23
10051668:	0140      	lsls	r0, r0, #5
1005166a:	1810      	adds	r0, r2, r0
1005166c:	7101      	strb	r1, [r0, #4]
1005166e:	9807      	ldr	r0, [sp, #28]
10051670:	2800      	cmp	r0, #0
10051672:	d001      	beq.n	10051678 <LL_Check_And_Set_Addresses+0x144>
10051674:	2e00      	cmp	r6, #0
10051676:	d00a      	beq.n	1005168e <LL_Check_And_Set_Addresses+0x15a>
10051678:	4632      	mov	r2, r6
1005167a:	4629      	mov	r1, r5
1005167c:	980e      	ldr	r0, [sp, #56]	; 0x38
1005167e:	f000 fc51 	bl	10051f24 <LL_Set_DirectAddress>
10051682:	9808      	ldr	r0, [sp, #32]
10051684:	2800      	cmp	r0, #0
10051686:	d006      	beq.n	10051696 <LL_Check_And_Set_Addresses+0x162>
10051688:	2101      	movs	r1, #1
1005168a:	a803      	add	r0, sp, #12
1005168c:	e015      	b.n	100516ba <LL_Check_And_Set_Addresses+0x186>
1005168e:	4632      	mov	r2, r6
10051690:	2101      	movs	r1, #1
10051692:	a805      	add	r0, sp, #20
10051694:	e7f3      	b.n	1005167e <LL_Check_And_Set_Addresses+0x14a>
10051696:	2f00      	cmp	r7, #0
10051698:	d006      	beq.n	100516a8 <LL_Check_And_Set_Addresses+0x174>
1005169a:	2f01      	cmp	r7, #1
1005169c:	d01a      	beq.n	100516d4 <LL_Check_And_Set_Addresses+0x1a0>
1005169e:	2f02      	cmp	r7, #2
100516a0:	d002      	beq.n	100516a8 <LL_Check_And_Set_Addresses+0x174>
100516a2:	2f03      	cmp	r7, #3
100516a4:	d107      	bne.n	100516b6 <LL_Check_And_Set_Addresses+0x182>
100516a6:	e015      	b.n	100516d4 <LL_Check_And_Set_Addresses+0x1a0>
100516a8:	481e      	ldr	r0, [pc, #120]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
100516aa:	2206      	movs	r2, #6
100516ac:	6801      	ldr	r1, [r0, #0]
100516ae:	4668      	mov	r0, sp
100516b0:	3178      	adds	r1, #120	; 0x78
100516b2:	f7f1 fd84 	bl	100431be <Osal_MemCpy>
100516b6:	2100      	movs	r1, #0
100516b8:	4668      	mov	r0, sp
100516ba:	f000 fc4f 	bl	10051f5c <LL_Set_OwnAddress>
100516be:	2401      	movs	r4, #1
100516c0:	02a4      	lsls	r4, r4, #10
100516c2:	2f00      	cmp	r7, #0
100516c4:	d010      	beq.n	100516e8 <LL_Check_And_Set_Addresses+0x1b4>
100516c6:	2f01      	cmp	r7, #1
100516c8:	d016      	beq.n	100516f8 <LL_Check_And_Set_Addresses+0x1c4>
100516ca:	2f02      	cmp	r7, #2
100516cc:	d00c      	beq.n	100516e8 <LL_Check_And_Set_Addresses+0x1b4>
100516ce:	2f03      	cmp	r7, #3
100516d0:	d124      	bne.n	1005171c <LL_Check_And_Set_Addresses+0x1e8>
100516d2:	e011      	b.n	100516f8 <LL_Check_And_Set_Addresses+0x1c4>
100516d4:	4813      	ldr	r0, [pc, #76]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
100516d6:	2206      	movs	r2, #6
100516d8:	6801      	ldr	r1, [r0, #0]
100516da:	4814      	ldr	r0, [pc, #80]	; (1005172c <LL_Check_And_Set_Addresses+0x1f8>)
100516dc:	1809      	adds	r1, r1, r0
100516de:	4668      	mov	r0, sp
100516e0:	f7f1 fd6d 	bl	100431be <Osal_MemCpy>
100516e4:	2101      	movs	r1, #1
100516e6:	e7e7      	b.n	100516b8 <LL_Check_And_Set_Addresses+0x184>
100516e8:	480e      	ldr	r0, [pc, #56]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
100516ea:	6800      	ldr	r0, [r0, #0]
100516ec:	6f81      	ldr	r1, [r0, #120]	; 0x78
100516ee:	1904      	adds	r4, r0, r4
100516f0:	0209      	lsls	r1, r1, #8
100516f2:	307b      	adds	r0, #123	; 0x7b
100516f4:	65e1      	str	r1, [r4, #92]	; 0x5c
100516f6:	e00c      	b.n	10051712 <LL_Check_And_Set_Addresses+0x1de>
100516f8:	480a      	ldr	r0, [pc, #40]	; (10051724 <LL_Check_And_Set_Addresses+0x1f0>)
100516fa:	6805      	ldr	r5, [r0, #0]
100516fc:	480b      	ldr	r0, [pc, #44]	; (1005172c <LL_Check_And_Set_Addresses+0x1f8>)
100516fe:	1828      	adds	r0, r5, r0
10051700:	f7ee ff5a 	bl	100405b8 <__aeabi_uread4>
10051704:	0200      	lsls	r0, r0, #8
10051706:	192c      	adds	r4, r5, r4
10051708:	1c40      	adds	r0, r0, #1
1005170a:	65e0      	str	r0, [r4, #92]	; 0x5c
1005170c:	4807      	ldr	r0, [pc, #28]	; (1005172c <LL_Check_And_Set_Addresses+0x1f8>)
1005170e:	1cc0      	adds	r0, r0, #3
10051710:	1828      	adds	r0, r5, r0
10051712:	f7ee ff51 	bl	100405b8 <__aeabi_uread4>
10051716:	0200      	lsls	r0, r0, #8
10051718:	0a00      	lsrs	r0, r0, #8
1005171a:	6620      	str	r0, [r4, #96]	; 0x60
1005171c:	2000      	movs	r0, #0
1005171e:	b011      	add	sp, #68	; 0x44
10051720:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051722:	0000      	.short	0x0000
10051724:	2000098c 	.word	0x2000098c
10051728:	0000046c 	.word	0x0000046c
1005172c:	000006ef 	.word	0x000006ef

10051730 <LL_Enable_Disable_Adv>:
10051730:	b5f0      	push	{r4, r5, r6, r7, lr}
10051732:	4d81      	ldr	r5, [pc, #516]	; (10051938 <LL_Enable_Disable_Adv+0x208>)
10051734:	4604      	mov	r4, r0
10051736:	2141      	movs	r1, #65	; 0x41
10051738:	6828      	ldr	r0, [r5, #0]
1005173a:	0149      	lsls	r1, r1, #5
1005173c:	b085      	sub	sp, #20
1005173e:	1840      	adds	r0, r0, r1
10051740:	9001      	str	r0, [sp, #4]
10051742:	f7fe fcbd 	bl	100500c0 <get_advertiser>
10051746:	2609      	movs	r6, #9
10051748:	0236      	lsls	r6, r6, #8
1005174a:	2c00      	cmp	r4, #0
1005174c:	d07e      	beq.n	1005184c <LL_Enable_Disable_Adv+0x11c>
1005174e:	2808      	cmp	r0, #8
10051750:	d30d      	bcc.n	1005176e <LL_Enable_Disable_Adv+0x3e>
10051752:	2042      	movs	r0, #66	; 0x42
10051754:	4607      	mov	r7, r0
10051756:	9003      	str	r0, [sp, #12]
10051758:	4878      	ldr	r0, [pc, #480]	; (1005193c <LL_Enable_Disable_Adv+0x20c>)
1005175a:	2400      	movs	r4, #0
1005175c:	9002      	str	r0, [sp, #8]
1005175e:	f7fe fd17 	bl	10050190 <get_next_free_slot>
10051762:	9000      	str	r0, [sp, #0]
10051764:	2008      	movs	r0, #8
10051766:	9004      	str	r0, [sp, #16]
10051768:	9800      	ldr	r0, [sp, #0]
1005176a:	2808      	cmp	r0, #8
1005176c:	d302      	bcc.n	10051774 <LL_Enable_Disable_Adv+0x44>
1005176e:	200c      	movs	r0, #12
10051770:	b005      	add	sp, #20
10051772:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051774:	f000 fb92 	bl	10051e9c <LL_Set_Advertising_Buffers>
10051778:	f000 fa84 	bl	10051c84 <LL_Set_Adv_PDU_Format>
1005177c:	9800      	ldr	r0, [sp, #0]
1005177e:	4970      	ldr	r1, [pc, #448]	; (10051940 <LL_Enable_Disable_Adv+0x210>)
10051780:	0180      	lsls	r0, r0, #6
10051782:	1842      	adds	r2, r0, r1
10051784:	6828      	ldr	r0, [r5, #0]
10051786:	1980      	adds	r0, r0, r6
10051788:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
1005178a:	9801      	ldr	r0, [sp, #4]
1005178c:	3080      	adds	r0, #128	; 0x80
1005178e:	6b03      	ldr	r3, [r0, #48]	; 0x30
10051790:	31c0      	adds	r1, #192	; 0xc0
10051792:	8059      	strh	r1, [r3, #2]
10051794:	6b01      	ldr	r1, [r0, #48]	; 0x30
10051796:	8009      	strh	r1, [r1, #0]
10051798:	2100      	movs	r1, #0
1005179a:	43c9      	mvns	r1, r1
1005179c:	8201      	strh	r1, [r0, #16]
1005179e:	2100      	movs	r1, #0
100517a0:	6a45      	ldr	r5, [r0, #36]	; 0x24
100517a2:	1dcb      	adds	r3, r1, #7
100517a4:	54ef      	strb	r7, [r5, r3]
100517a6:	6a85      	ldr	r5, [r0, #40]	; 0x28
100517a8:	54ef      	strb	r7, [r5, r3]
100517aa:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
100517ac:	54ef      	strb	r7, [r5, r3]
100517ae:	6a05      	ldr	r5, [r0, #32]
100517b0:	54ef      	strb	r7, [r5, r3]
100517b2:	6b06      	ldr	r6, [r0, #48]	; 0x30
100517b4:	9d03      	ldr	r5, [sp, #12]
100517b6:	54f5      	strb	r5, [r6, r3]
100517b8:	9b03      	ldr	r3, [sp, #12]
100517ba:	0a3f      	lsrs	r7, r7, #8
100517bc:	0a1b      	lsrs	r3, r3, #8
100517be:	9303      	str	r3, [sp, #12]
100517c0:	6a46      	ldr	r6, [r0, #36]	; 0x24
100517c2:	9d02      	ldr	r5, [sp, #8]
100517c4:	1d0b      	adds	r3, r1, #4
100517c6:	54f5      	strb	r5, [r6, r3]
100517c8:	6a86      	ldr	r6, [r0, #40]	; 0x28
100517ca:	54f5      	strb	r5, [r6, r3]
100517cc:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
100517ce:	54f5      	strb	r5, [r6, r3]
100517d0:	6a06      	ldr	r6, [r0, #32]
100517d2:	54f5      	strb	r5, [r6, r3]
100517d4:	6b06      	ldr	r6, [r0, #48]	; 0x30
100517d6:	54f5      	strb	r5, [r6, r3]
100517d8:	9b02      	ldr	r3, [sp, #8]
100517da:	1c49      	adds	r1, r1, #1
100517dc:	0a1b      	lsrs	r3, r3, #8
100517de:	b2c9      	uxtb	r1, r1
100517e0:	9302      	str	r3, [sp, #8]
100517e2:	2903      	cmp	r1, #3
100517e4:	d3dc      	bcc.n	100517a0 <LL_Enable_Disable_Adv+0x70>
100517e6:	9900      	ldr	r1, [sp, #0]
100517e8:	2311      	movs	r3, #17
100517ea:	0749      	lsls	r1, r1, #29
100517ec:	0e09      	lsrs	r1, r1, #24
100517ee:	6a45      	ldr	r5, [r0, #36]	; 0x24
100517f0:	430b      	orrs	r3, r1
100517f2:	72ab      	strb	r3, [r5, #10]
100517f4:	6a85      	ldr	r5, [r0, #40]	; 0x28
100517f6:	72ab      	strb	r3, [r5, #10]
100517f8:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
100517fa:	72ab      	strb	r3, [r5, #10]
100517fc:	9b01      	ldr	r3, [sp, #4]
100517fe:	7e1d      	ldrb	r5, [r3, #24]
10051800:	2302      	movs	r3, #2
10051802:	2d02      	cmp	r5, #2
10051804:	d10b      	bne.n	1005181e <LL_Enable_Disable_Adv+0xee>
10051806:	6a45      	ldr	r5, [r0, #36]	; 0x24
10051808:	7aae      	ldrb	r6, [r5, #10]
1005180a:	431e      	orrs	r6, r3
1005180c:	72ae      	strb	r6, [r5, #10]
1005180e:	6a85      	ldr	r5, [r0, #40]	; 0x28
10051810:	7aae      	ldrb	r6, [r5, #10]
10051812:	431e      	orrs	r6, r3
10051814:	72ae      	strb	r6, [r5, #10]
10051816:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
10051818:	7aae      	ldrb	r6, [r5, #10]
1005181a:	431e      	orrs	r6, r3
1005181c:	72ae      	strb	r6, [r5, #10]
1005181e:	6a46      	ldr	r6, [r0, #36]	; 0x24
10051820:	2701      	movs	r7, #1
10051822:	72f7      	strb	r7, [r6, #11]
10051824:	6a86      	ldr	r6, [r0, #40]	; 0x28
10051826:	72f7      	strb	r7, [r6, #11]
10051828:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
1005182a:	72f7      	strb	r7, [r6, #11]
1005182c:	4319      	orrs	r1, r3
1005182e:	6b03      	ldr	r3, [r0, #48]	; 0x30
10051830:	7299      	strb	r1, [r3, #10]
10051832:	6a03      	ldr	r3, [r0, #32]
10051834:	7299      	strb	r1, [r3, #10]
10051836:	6b03      	ldr	r3, [r0, #48]	; 0x30
10051838:	2103      	movs	r1, #3
1005183a:	72d9      	strb	r1, [r3, #11]
1005183c:	6a01      	ldr	r1, [r0, #32]
1005183e:	72cf      	strb	r7, [r1, #11]
10051840:	2100      	movs	r1, #0
10051842:	460b      	mov	r3, r1
10051844:	5453      	strb	r3, [r2, r1]
10051846:	1855      	adds	r5, r2, r1
10051848:	716b      	strb	r3, [r5, #5]
1005184a:	e000      	b.n	1005184e <LL_Enable_Disable_Adv+0x11e>
1005184c:	e04b      	b.n	100518e6 <LL_Enable_Disable_Adv+0x1b6>
1005184e:	1c49      	adds	r1, r1, #1
10051850:	b2c9      	uxtb	r1, r1
10051852:	2905      	cmp	r1, #5
10051854:	d3f6      	bcc.n	10051844 <LL_Enable_Disable_Adv+0x114>
10051856:	2580      	movs	r5, #128	; 0x80
10051858:	7295      	strb	r5, [r2, #10]
1005185a:	9901      	ldr	r1, [sp, #4]
1005185c:	3120      	adds	r1, #32
1005185e:	7bce      	ldrb	r6, [r1, #15]
10051860:	72d6      	strb	r6, [r2, #11]
10051862:	8c86      	ldrh	r6, [r0, #36]	; 0x24
10051864:	8216      	strh	r6, [r2, #16]
10051866:	8e06      	ldrh	r6, [r0, #48]	; 0x30
10051868:	8256      	strh	r6, [r2, #18]
1005186a:	4e36      	ldr	r6, [pc, #216]	; (10051944 <LL_Enable_Disable_Adv+0x214>)
1005186c:	6196      	str	r6, [r2, #24]
1005186e:	4e36      	ldr	r6, [pc, #216]	; (10051948 <LL_Enable_Disable_Adv+0x218>)
10051870:	61d6      	str	r6, [r2, #28]
10051872:	463e      	mov	r6, r7
10051874:	2720      	movs	r7, #32
10051876:	54be      	strb	r6, [r7, r2]
10051878:	75d3      	strb	r3, [r2, #23]
1005187a:	9a01      	ldr	r2, [sp, #4]
1005187c:	7e12      	ldrb	r2, [r2, #24]
1005187e:	2a00      	cmp	r2, #0
10051880:	d004      	beq.n	1005188c <LL_Enable_Disable_Adv+0x15c>
10051882:	2a01      	cmp	r2, #1
10051884:	d004      	beq.n	10051890 <LL_Enable_Disable_Adv+0x160>
10051886:	2a06      	cmp	r2, #6
10051888:	d112      	bne.n	100518b0 <LL_Enable_Disable_Adv+0x180>
1005188a:	e010      	b.n	100518ae <LL_Enable_Disable_Adv+0x17e>
1005188c:	2418      	movs	r4, #24
1005188e:	e00f      	b.n	100518b0 <LL_Enable_Disable_Adv+0x180>
10051890:	2203      	movs	r2, #3
10051892:	6883      	ldr	r3, [r0, #8]
10051894:	2428      	movs	r4, #40	; 0x28
10051896:	0252      	lsls	r2, r2, #9
10051898:	4293      	cmp	r3, r2
1005189a:	d109      	bne.n	100518b0 <LL_Enable_Disable_Adv+0x180>
1005189c:	68c3      	ldr	r3, [r0, #12]
1005189e:	4293      	cmp	r3, r2
100518a0:	d106      	bne.n	100518b0 <LL_Enable_Disable_Adv+0x180>
100518a2:	2200      	movs	r2, #0
100518a4:	9204      	str	r2, [sp, #16]
100518a6:	22ff      	movs	r2, #255	; 0xff
100518a8:	3256      	adds	r2, #86	; 0x56
100518aa:	8202      	strh	r2, [r0, #16]
100518ac:	e000      	b.n	100518b0 <LL_Enable_Disable_Adv+0x180>
100518ae:	2410      	movs	r4, #16
100518b0:	7b49      	ldrb	r1, [r1, #13]
100518b2:	2900      	cmp	r1, #0
100518b4:	d004      	beq.n	100518c0 <LL_Enable_Disable_Adv+0x190>
100518b6:	2901      	cmp	r1, #1
100518b8:	d004      	beq.n	100518c4 <LL_Enable_Disable_Adv+0x194>
100518ba:	2902      	cmp	r1, #2
100518bc:	d106      	bne.n	100518cc <LL_Enable_Disable_Adv+0x19c>
100518be:	e003      	b.n	100518c8 <LL_Enable_Disable_Adv+0x198>
100518c0:	21c0      	movs	r1, #192	; 0xc0
100518c2:	e002      	b.n	100518ca <LL_Enable_Disable_Adv+0x19a>
100518c4:	432c      	orrs	r4, r5
100518c6:	e001      	b.n	100518cc <LL_Enable_Disable_Adv+0x19c>
100518c8:	2140      	movs	r1, #64	; 0x40
100518ca:	430c      	orrs	r4, r1
100518cc:	9904      	ldr	r1, [sp, #16]
100518ce:	68c2      	ldr	r2, [r0, #12]
100518d0:	0209      	lsls	r1, r1, #8
100518d2:	6880      	ldr	r0, [r0, #8]
100518d4:	1853      	adds	r3, r2, r1
100518d6:	1842      	adds	r2, r0, r1
100518d8:	08e1      	lsrs	r1, r4, #3
100518da:	00c9      	lsls	r1, r1, #3
100518dc:	1c49      	adds	r1, r1, #1
100518de:	9800      	ldr	r0, [sp, #0]
100518e0:	f7fe fd70 	bl	100503c4 <schedule_advertise_slot>
100518e4:	e744      	b.n	10051770 <LL_Enable_Disable_Adv+0x40>
100518e6:	b672      	cpsid	i
100518e8:	2808      	cmp	r0, #8
100518ea:	d20a      	bcs.n	10051902 <LL_Enable_Disable_Adv+0x1d2>
100518ec:	682a      	ldr	r2, [r5, #0]
100518ee:	1991      	adds	r1, r2, r6
100518f0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
100518f2:	2158      	movs	r1, #88	; 0x58
100518f4:	4341      	muls	r1, r0
100518f6:	1c89      	adds	r1, r1, #2
100518f8:	5c5c      	ldrb	r4, [r3, r1]
100518fa:	0764      	lsls	r4, r4, #29
100518fc:	0f64      	lsrs	r4, r4, #29
100518fe:	2c01      	cmp	r4, #1
10051900:	d001      	beq.n	10051906 <LL_Enable_Disable_Adv+0x1d6>
10051902:	b662      	cpsie	i
10051904:	e733      	b.n	1005176e <LL_Enable_Disable_Adv+0x3e>
10051906:	24f0      	movs	r4, #240	; 0xf0
10051908:	5ca4      	ldrb	r4, [r4, r2]
1005190a:	2c00      	cmp	r4, #0
1005190c:	d004      	beq.n	10051918 <LL_Enable_Disable_Adv+0x1e8>
1005190e:	2611      	movs	r6, #17
10051910:	24ff      	movs	r4, #255	; 0xff
10051912:	01b6      	lsls	r6, r6, #6
10051914:	1992      	adds	r2, r2, r6
10051916:	7594      	strb	r4, [r2, #22]
10051918:	2200      	movs	r2, #0
1005191a:	545a      	strb	r2, [r3, r1]
1005191c:	211f      	movs	r1, #31
1005191e:	682a      	ldr	r2, [r5, #0]
10051920:	0189      	lsls	r1, r1, #6
10051922:	1851      	adds	r1, r2, r1
10051924:	790b      	ldrb	r3, [r1, #4]
10051926:	2201      	movs	r2, #1
10051928:	4082      	lsls	r2, r0
1005192a:	4393      	bics	r3, r2
1005192c:	710b      	strb	r3, [r1, #4]
1005192e:	b662      	cpsie	i
10051930:	f000 fbc0 	bl	100520b4 <wait_for_prescheduled_slot_cancellation>
10051934:	2000      	movs	r0, #0
10051936:	e71b      	b.n	10051770 <LL_Enable_Disable_Adv+0x40>
10051938:	2000098c 	.word	0x2000098c
1005193c:	00b00081 	.word	0x00b00081
10051940:	200000cc 	.word	0x200000cc
10051944:	8e89bed6 	.word	0x8e89bed6
10051948:	00555555 	.word	0x00555555

1005194c <LL_Get_Address>:
1005194c:	b570      	push	{r4, r5, r6, lr}
1005194e:	4604      	mov	r4, r0
10051950:	4808      	ldr	r0, [pc, #32]	; (10051974 <LL_Get_Address+0x28>)
10051952:	460d      	mov	r5, r1
10051954:	6800      	ldr	r0, [r0, #0]
10051956:	2141      	movs	r1, #65	; 0x41
10051958:	0149      	lsls	r1, r1, #5
1005195a:	1846      	adds	r6, r0, r1
1005195c:	4620      	mov	r0, r4
1005195e:	6831      	ldr	r1, [r6, #0]
10051960:	f000 fb94 	bl	1005208c <int32ToLe4Byte>
10051964:	6872      	ldr	r2, [r6, #4]
10051966:	7122      	strb	r2, [r4, #4]
10051968:	0a10      	lsrs	r0, r2, #8
1005196a:	7160      	strb	r0, [r4, #5]
1005196c:	0c10      	lsrs	r0, r2, #16
1005196e:	7028      	strb	r0, [r5, #0]
10051970:	2000      	movs	r0, #0
10051972:	bd70      	pop	{r4, r5, r6, pc}
10051974:	2000098c 	.word	0x2000098c

10051978 <LL_Get_AdvAddress>:
10051978:	b570      	push	{r4, r5, r6, lr}
1005197a:	460d      	mov	r5, r1
1005197c:	4604      	mov	r4, r0
1005197e:	f7fe fb9f 	bl	100500c0 <get_advertiser>
10051982:	2808      	cmp	r0, #8
10051984:	d301      	bcc.n	1005198a <LL_Get_AdvAddress+0x12>
10051986:	201f      	movs	r0, #31
10051988:	bd70      	pop	{r4, r5, r6, pc}
1005198a:	480a      	ldr	r0, [pc, #40]	; (100519b4 <LL_Get_AdvAddress+0x3c>)
1005198c:	2141      	movs	r1, #65	; 0x41
1005198e:	6800      	ldr	r0, [r0, #0]
10051990:	0149      	lsls	r1, r1, #5
10051992:	1840      	adds	r0, r0, r1
10051994:	2200      	movs	r2, #0
10051996:	6b41      	ldr	r1, [r0, #52]	; 0x34
10051998:	1c93      	adds	r3, r2, #2
1005199a:	5cc9      	ldrb	r1, [r1, r3]
1005199c:	54a1      	strb	r1, [r4, r2]
1005199e:	1c52      	adds	r2, r2, #1
100519a0:	2a06      	cmp	r2, #6
100519a2:	dbf8      	blt.n	10051996 <LL_Get_AdvAddress+0x1e>
100519a4:	6b40      	ldr	r0, [r0, #52]	; 0x34
100519a6:	7800      	ldrb	r0, [r0, #0]
100519a8:	0640      	lsls	r0, r0, #25
100519aa:	0fc0      	lsrs	r0, r0, #31
100519ac:	7028      	strb	r0, [r5, #0]
100519ae:	2000      	movs	r0, #0
100519b0:	bd70      	pop	{r4, r5, r6, pc}
100519b2:	0000      	.short	0x0000
100519b4:	2000098c 	.word	0x2000098c

100519b8 <LL_Get_Adv_Data>:
100519b8:	b530      	push	{r4, r5, lr}
100519ba:	4a0c      	ldr	r2, [pc, #48]	; (100519ec <LL_Get_Adv_Data+0x34>)
100519bc:	2341      	movs	r3, #65	; 0x41
100519be:	6812      	ldr	r2, [r2, #0]
100519c0:	015b      	lsls	r3, r3, #5
100519c2:	18d2      	adds	r2, r2, r3
100519c4:	6a93      	ldr	r3, [r2, #40]	; 0x28
100519c6:	3220      	adds	r2, #32
100519c8:	7b14      	ldrb	r4, [r2, #12]
100519ca:	2c1f      	cmp	r4, #31
100519cc:	d902      	bls.n	100519d4 <LL_Get_Adv_Data+0x1c>
100519ce:	2000      	movs	r0, #0
100519d0:	7008      	strb	r0, [r1, #0]
100519d2:	bd30      	pop	{r4, r5, pc}
100519d4:	2200      	movs	r2, #0
100519d6:	e005      	b.n	100519e4 <LL_Get_Adv_Data+0x2c>
100519d8:	781d      	ldrb	r5, [r3, #0]
100519da:	7005      	strb	r5, [r0, #0]
100519dc:	1c52      	adds	r2, r2, #1
100519de:	1c40      	adds	r0, r0, #1
100519e0:	b2d2      	uxtb	r2, r2
100519e2:	1c5b      	adds	r3, r3, #1
100519e4:	42a2      	cmp	r2, r4
100519e6:	d3f7      	bcc.n	100519d8 <LL_Get_Adv_Data+0x20>
100519e8:	700c      	strb	r4, [r1, #0]
100519ea:	bd30      	pop	{r4, r5, pc}
100519ec:	2000098c 	.word	0x2000098c

100519f0 <LL_Get_ScanAddress>:
100519f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100519f2:	460c      	mov	r4, r1
100519f4:	4605      	mov	r5, r0
100519f6:	f7fe fbe5 	bl	100501c4 <get_scan_connection>
100519fa:	2808      	cmp	r0, #8
100519fc:	d301      	bcc.n	10051a02 <LL_Get_ScanAddress+0x12>
100519fe:	201f      	movs	r0, #31
10051a00:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051a02:	4e0a      	ldr	r6, [pc, #40]	; (10051a2c <LL_Get_ScanAddress+0x3c>)
10051a04:	2709      	movs	r7, #9
10051a06:	6830      	ldr	r0, [r6, #0]
10051a08:	023f      	lsls	r7, r7, #8
10051a0a:	19c0      	adds	r0, r0, r7
10051a0c:	6d00      	ldr	r0, [r0, #80]	; 0x50
10051a0e:	2206      	movs	r2, #6
10051a10:	4629      	mov	r1, r5
10051a12:	1c80      	adds	r0, r0, #2
10051a14:	f7fa ff54 	bl	1004c8c0 <char_copy>
10051a18:	6830      	ldr	r0, [r6, #0]
10051a1a:	19c0      	adds	r0, r0, r7
10051a1c:	6d00      	ldr	r0, [r0, #80]	; 0x50
10051a1e:	7800      	ldrb	r0, [r0, #0]
10051a20:	0640      	lsls	r0, r0, #25
10051a22:	0fc0      	lsrs	r0, r0, #31
10051a24:	7020      	strb	r0, [r4, #0]
10051a26:	2000      	movs	r0, #0
10051a28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051a2a:	0000      	.short	0x0000
10051a2c:	2000098c 	.word	0x2000098c

10051a30 <LL_Init>:
10051a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051a32:	4c5d      	ldr	r4, [pc, #372]	; (10051ba8 <LL_Init+0x178>)
10051a34:	2041      	movs	r0, #65	; 0x41
10051a36:	6825      	ldr	r5, [r4, #0]
10051a38:	0140      	lsls	r0, r0, #5
10051a3a:	1828      	adds	r0, r5, r0
10051a3c:	2200      	movs	r2, #0
10051a3e:	4601      	mov	r1, r0
10051a40:	2309      	movs	r3, #9
10051a42:	7602      	strb	r2, [r0, #24]
10051a44:	3120      	adds	r1, #32
10051a46:	021b      	lsls	r3, r3, #8
10051a48:	730a      	strb	r2, [r1, #12]
10051a4a:	18ed      	adds	r5, r5, r3
10051a4c:	6d2e      	ldr	r6, [r5, #80]	; 0x50
10051a4e:	27fb      	movs	r7, #251	; 0xfb
10051a50:	3628      	adds	r6, #40	; 0x28
10051a52:	6386      	str	r6, [r0, #56]	; 0x38
10051a54:	6d2d      	ldr	r5, [r5, #80]	; 0x50
10051a56:	26ff      	movs	r6, #255	; 0xff
10051a58:	3550      	adds	r5, #80	; 0x50
10051a5a:	6345      	str	r5, [r0, #52]	; 0x34
10051a5c:	3508      	adds	r5, #8
10051a5e:	6285      	str	r5, [r0, #40]	; 0x28
10051a60:	2507      	movs	r5, #7
10051a62:	738d      	strb	r5, [r1, #14]
10051a64:	6b41      	ldr	r1, [r0, #52]	; 0x34
10051a66:	700a      	strb	r2, [r1, #0]
10051a68:	6b45      	ldr	r5, [r0, #52]	; 0x34
10051a6a:	2106      	movs	r1, #6
10051a6c:	7069      	strb	r1, [r5, #1]
10051a6e:	6824      	ldr	r4, [r4, #0]
10051a70:	18e1      	adds	r1, r4, r3
10051a72:	6d0d      	ldr	r5, [r1, #80]	; 0x50
10051a74:	3578      	adds	r5, #120	; 0x78
10051a76:	63c5      	str	r5, [r0, #60]	; 0x3c
10051a78:	6d09      	ldr	r1, [r1, #80]	; 0x50
10051a7a:	2508      	movs	r5, #8
10051a7c:	31a0      	adds	r1, #160	; 0xa0
10051a7e:	6401      	str	r1, [r0, #64]	; 0x40
10051a80:	4601      	mov	r1, r0
10051a82:	31c0      	adds	r1, #192	; 0xc0
10051a84:	724a      	strb	r2, [r1, #9]
10051a86:	720a      	strb	r2, [r1, #8]
10051a88:	73cd      	strb	r5, [r1, #15]
10051a8a:	738d      	strb	r5, [r1, #14]
10051a8c:	251b      	movs	r5, #27
10051a8e:	820d      	strh	r5, [r1, #16]
10051a90:	3649      	adds	r6, #73	; 0x49
10051a92:	824e      	strh	r6, [r1, #18]
10051a94:	828f      	strh	r7, [r1, #20]
10051a96:	4f45      	ldr	r7, [pc, #276]	; (10051bac <LL_Init+0x17c>)
10051a98:	82cf      	strh	r7, [r1, #22]
10051a9a:	27fb      	movs	r7, #251	; 0xfb
10051a9c:	830f      	strh	r7, [r1, #24]
10051a9e:	4f43      	ldr	r7, [pc, #268]	; (10051bac <LL_Init+0x17c>)
10051aa0:	834f      	strh	r7, [r1, #26]
10051aa2:	838d      	strh	r5, [r1, #28]
10051aa4:	83ce      	strh	r6, [r1, #30]
10051aa6:	4942      	ldr	r1, [pc, #264]	; (10051bb0 <LL_Init+0x180>)
10051aa8:	6562      	str	r2, [r4, #84]	; 0x54
10051aaa:	6521      	str	r1, [r4, #80]	; 0x50
10051aac:	4c3e      	ldr	r4, [pc, #248]	; (10051ba8 <LL_Init+0x178>)
10051aae:	4601      	mov	r1, r0
10051ab0:	6826      	ldr	r6, [r4, #0]
10051ab2:	18b5      	adds	r5, r6, r2
10051ab4:	18f6      	adds	r6, r6, r3
10051ab6:	6d37      	ldr	r7, [r6, #80]	; 0x50
10051ab8:	3560      	adds	r5, #96	; 0x60
10051aba:	4616      	mov	r6, r2
10051abc:	7e2d      	ldrb	r5, [r5, #24]
10051abe:	362a      	adds	r6, #42	; 0x2a
10051ac0:	55bd      	strb	r5, [r7, r6]
10051ac2:	6826      	ldr	r6, [r4, #0]
10051ac4:	18f6      	adds	r6, r6, r3
10051ac6:	6d37      	ldr	r7, [r6, #80]	; 0x50
10051ac8:	4616      	mov	r6, r2
10051aca:	3652      	adds	r6, #82	; 0x52
10051acc:	55bd      	strb	r5, [r7, r6]
10051ace:	6826      	ldr	r6, [r4, #0]
10051ad0:	18f6      	adds	r6, r6, r3
10051ad2:	6d37      	ldr	r7, [r6, #80]	; 0x50
10051ad4:	4616      	mov	r6, r2
10051ad6:	367a      	adds	r6, #122	; 0x7a
10051ad8:	55bd      	strb	r5, [r7, r6]
10051ada:	6826      	ldr	r6, [r4, #0]
10051adc:	18f6      	adds	r6, r6, r3
10051ade:	6d37      	ldr	r7, [r6, #80]	; 0x50
10051ae0:	4616      	mov	r6, r2
10051ae2:	36a2      	adds	r6, #162	; 0xa2
10051ae4:	55bd      	strb	r5, [r7, r6]
10051ae6:	700d      	strb	r5, [r1, #0]
10051ae8:	1c52      	adds	r2, r2, #1
10051aea:	b2d2      	uxtb	r2, r2
10051aec:	1c49      	adds	r1, r1, #1
10051aee:	2a06      	cmp	r2, #6
10051af0:	d3de      	bcc.n	10051ab0 <LL_Init+0x80>
10051af2:	2500      	movs	r5, #0
10051af4:	700d      	strb	r5, [r1, #0]
10051af6:	6b82      	ldr	r2, [r0, #56]	; 0x38
10051af8:	2106      	movs	r1, #6
10051afa:	7051      	strb	r1, [r2, #1]
10051afc:	6b42      	ldr	r2, [r0, #52]	; 0x34
10051afe:	7051      	strb	r1, [r2, #1]
10051b00:	4602      	mov	r2, r0
10051b02:	3280      	adds	r2, #128	; 0x80
10051b04:	6155      	str	r5, [r2, #20]
10051b06:	4629      	mov	r1, r5
10051b08:	6195      	str	r5, [r2, #24]
10051b0a:	e01b      	b.n	10051b44 <LL_Init+0x114>
10051b0c:	2509      	movs	r5, #9
10051b0e:	022d      	lsls	r5, r5, #8
10051b10:	195b      	adds	r3, r3, r5
10051b12:	2558      	movs	r5, #88	; 0x58
10051b14:	434d      	muls	r5, r1
10051b16:	6b1f      	ldr	r7, [r3, #48]	; 0x30
10051b18:	462b      	mov	r3, r5
10051b1a:	4e26      	ldr	r6, [pc, #152]	; (10051bb4 <LL_Init+0x184>)
10051b1c:	330a      	adds	r3, #10
10051b1e:	52fe      	strh	r6, [r7, r3]
10051b20:	2309      	movs	r3, #9
10051b22:	6827      	ldr	r7, [r4, #0]
10051b24:	021b      	lsls	r3, r3, #8
10051b26:	18fb      	adds	r3, r7, r3
10051b28:	6b1f      	ldr	r7, [r3, #48]	; 0x30
10051b2a:	462b      	mov	r3, r5
10051b2c:	2600      	movs	r6, #0
10051b2e:	3320      	adds	r3, #32
10051b30:	50fe      	str	r6, [r7, r3]
10051b32:	2309      	movs	r3, #9
10051b34:	6827      	ldr	r7, [r4, #0]
10051b36:	021b      	lsls	r3, r3, #8
10051b38:	18fb      	adds	r3, r7, r3
10051b3a:	3524      	adds	r5, #36	; 0x24
10051b3c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
10051b3e:	1c49      	adds	r1, r1, #1
10051b40:	515e      	str	r6, [r3, r5]
10051b42:	b2c9      	uxtb	r1, r1
10051b44:	6823      	ldr	r3, [r4, #0]
10051b46:	25ac      	movs	r5, #172	; 0xac
10051b48:	5ced      	ldrb	r5, [r5, r3]
10051b4a:	428d      	cmp	r5, r1
10051b4c:	d8de      	bhi.n	10051b0c <LL_Init+0xdc>
10051b4e:	2500      	movs	r5, #0
10051b50:	2101      	movs	r1, #1
10051b52:	8395      	strh	r5, [r2, #28]
10051b54:	02c9      	lsls	r1, r1, #11
10051b56:	8401      	strh	r1, [r0, #32]
10051b58:	6455      	str	r5, [r2, #68]	; 0x44
10051b5a:	2009      	movs	r0, #9
10051b5c:	6821      	ldr	r1, [r4, #0]
10051b5e:	0200      	lsls	r0, r0, #8
10051b60:	1809      	adds	r1, r1, r0
10051b62:	6c09      	ldr	r1, [r1, #64]	; 0x40
10051b64:	6b93      	ldr	r3, [r2, #56]	; 0x38
10051b66:	1c89      	adds	r1, r1, #2
10051b68:	8059      	strh	r1, [r3, #2]
10051b6a:	6821      	ldr	r1, [r4, #0]
10051b6c:	1808      	adds	r0, r1, r0
10051b6e:	6c00      	ldr	r0, [r0, #64]	; 0x40
10051b70:	6b51      	ldr	r1, [r2, #52]	; 0x34
10051b72:	1c80      	adds	r0, r0, #2
10051b74:	8048      	strh	r0, [r1, #2]
10051b76:	4810      	ldr	r0, [pc, #64]	; (10051bb8 <LL_Init+0x188>)
10051b78:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
10051b7a:	6820      	ldr	r0, [r4, #0]
10051b7c:	3040      	adds	r0, #64	; 0x40
10051b7e:	8601      	strh	r1, [r0, #48]	; 0x30
10051b80:	f000 fbb4 	bl	100522ec <Blue_Init_Global>
10051b84:	211f      	movs	r1, #31
10051b86:	6820      	ldr	r0, [r4, #0]
10051b88:	0189      	lsls	r1, r1, #6
10051b8a:	1841      	adds	r1, r0, r1
10051b8c:	223f      	movs	r2, #63	; 0x3f
10051b8e:	710d      	strb	r5, [r1, #4]
10051b90:	0152      	lsls	r2, r2, #5
10051b92:	2108      	movs	r1, #8
10051b94:	1880      	adds	r0, r0, r2
10051b96:	7281      	strb	r1, [r0, #10]
10051b98:	f7fc fd34 	bl	1004e604 <LL_LE_Clear_White_List>
10051b9c:	f7fe fb50 	bl	10050240 <nsar_init>
10051ba0:	6820      	ldr	r0, [r4, #0]
10051ba2:	3020      	adds	r0, #32
10051ba4:	74c5      	strb	r5, [r0, #19]
10051ba6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051ba8:	2000098c 	.word	0x2000098c
10051bac:	00000848 	.word	0x00000848
10051bb0:	00002e86 	.word	0x00002e86
10051bb4:	0000ffff 	.word	0x0000ffff
10051bb8:	200002cc 	.word	0x200002cc

10051bbc <LL_Send_ACL_Data>:
10051bbc:	b510      	push	{r4, lr}
10051bbe:	4604      	mov	r4, r0
10051bc0:	8880      	ldrh	r0, [r0, #4]
10051bc2:	2103      	movs	r1, #3
10051bc4:	f7fe faa0 	bl	10050108 <get_connection_no>
10051bc8:	2102      	movs	r1, #2
10051bca:	b672      	cpsid	i
10051bcc:	2808      	cmp	r0, #8
10051bce:	d215      	bcs.n	10051bfc <LL_Send_ACL_Data+0x40>
10051bd0:	4a0d      	ldr	r2, [pc, #52]	; (10051c08 <LL_Send_ACL_Data+0x4c>)
10051bd2:	6813      	ldr	r3, [r2, #0]
10051bd4:	2209      	movs	r2, #9
10051bd6:	0212      	lsls	r2, r2, #8
10051bd8:	189a      	adds	r2, r3, r2
10051bda:	2358      	movs	r3, #88	; 0x58
10051bdc:	6b12      	ldr	r2, [r2, #48]	; 0x30
10051bde:	4358      	muls	r0, r3
10051be0:	1c83      	adds	r3, r0, #2
10051be2:	5cd3      	ldrb	r3, [r2, r3]
10051be4:	2b00      	cmp	r3, #0
10051be6:	d009      	beq.n	10051bfc <LL_Send_ACL_Data+0x40>
10051be8:	2100      	movs	r1, #0
10051bea:	1810      	adds	r0, r2, r0
10051bec:	6021      	str	r1, [r4, #0]
10051bee:	6a01      	ldr	r1, [r0, #32]
10051bf0:	2900      	cmp	r1, #0
10051bf2:	d006      	beq.n	10051c02 <LL_Send_ACL_Data+0x46>
10051bf4:	6a41      	ldr	r1, [r0, #36]	; 0x24
10051bf6:	600c      	str	r4, [r1, #0]
10051bf8:	2145      	movs	r1, #69	; 0x45
10051bfa:	6244      	str	r4, [r0, #36]	; 0x24
10051bfc:	b662      	cpsie	i
10051bfe:	4608      	mov	r0, r1
10051c00:	bd10      	pop	{r4, pc}
10051c02:	6204      	str	r4, [r0, #32]
10051c04:	e7f8      	b.n	10051bf8 <LL_Send_ACL_Data+0x3c>
10051c06:	0000      	.short	0x0000
10051c08:	2000098c 	.word	0x2000098c

10051c0c <LL_Set_Adv_Data>:
10051c0c:	b570      	push	{r4, r5, r6, lr}
10051c0e:	4a1c      	ldr	r2, [pc, #112]	; (10051c80 <LL_Set_Adv_Data+0x74>)
10051c10:	2341      	movs	r3, #65	; 0x41
10051c12:	6812      	ldr	r2, [r2, #0]
10051c14:	015b      	lsls	r3, r3, #5
10051c16:	18d4      	adds	r4, r2, r3
10051c18:	6be3      	ldr	r3, [r4, #60]	; 0x3c
10051c1a:	3308      	adds	r3, #8
10051c1c:	62a3      	str	r3, [r4, #40]	; 0x28
10051c1e:	291f      	cmp	r1, #31
10051c20:	d901      	bls.n	10051c26 <LL_Set_Adv_Data+0x1a>
10051c22:	2030      	movs	r0, #48	; 0x30
10051c24:	bd70      	pop	{r4, r5, r6, pc}
10051c26:	2200      	movs	r2, #0
10051c28:	6b65      	ldr	r5, [r4, #52]	; 0x34
10051c2a:	6be6      	ldr	r6, [r4, #60]	; 0x3c
10051c2c:	5cad      	ldrb	r5, [r5, r2]
10051c2e:	54b5      	strb	r5, [r6, r2]
10051c30:	1c52      	adds	r2, r2, #1
10051c32:	b2d2      	uxtb	r2, r2
10051c34:	2a08      	cmp	r2, #8
10051c36:	d3f7      	bcc.n	10051c28 <LL_Set_Adv_Data+0x1c>
10051c38:	2200      	movs	r2, #0
10051c3a:	e005      	b.n	10051c48 <LL_Set_Adv_Data+0x3c>
10051c3c:	7805      	ldrb	r5, [r0, #0]
10051c3e:	1c52      	adds	r2, r2, #1
10051c40:	701d      	strb	r5, [r3, #0]
10051c42:	1c40      	adds	r0, r0, #1
10051c44:	b2d2      	uxtb	r2, r2
10051c46:	1c5b      	adds	r3, r3, #1
10051c48:	428a      	cmp	r2, r1
10051c4a:	d3f7      	bcc.n	10051c3c <LL_Set_Adv_Data+0x30>
10051c4c:	202c      	movs	r0, #44	; 0x2c
10051c4e:	5501      	strb	r1, [r0, r4]
10051c50:	6be0      	ldr	r0, [r4, #60]	; 0x3c
10051c52:	1d89      	adds	r1, r1, #6
10051c54:	7041      	strb	r1, [r0, #1]
10051c56:	f7fe fa33 	bl	100500c0 <get_advertiser>
10051c5a:	7e21      	ldrb	r1, [r4, #24]
10051c5c:	2901      	cmp	r1, #1
10051c5e:	d00c      	beq.n	10051c7a <LL_Set_Adv_Data+0x6e>
10051c60:	2808      	cmp	r0, #8
10051c62:	d20a      	bcs.n	10051c7a <LL_Set_Adv_Data+0x6e>
10051c64:	6b61      	ldr	r1, [r4, #52]	; 0x34
10051c66:	6be0      	ldr	r0, [r4, #60]	; 0x3c
10051c68:	63e1      	str	r1, [r4, #60]	; 0x3c
10051c6a:	6360      	str	r0, [r4, #52]	; 0x34
10051c6c:	3480      	adds	r4, #128	; 0x80
10051c6e:	6a61      	ldr	r1, [r4, #36]	; 0x24
10051c70:	8048      	strh	r0, [r1, #2]
10051c72:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10051c74:	8048      	strh	r0, [r1, #2]
10051c76:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10051c78:	8048      	strh	r0, [r1, #2]
10051c7a:	2000      	movs	r0, #0
10051c7c:	bd70      	pop	{r4, r5, r6, pc}
10051c7e:	0000      	.short	0x0000
10051c80:	2000098c 	.word	0x2000098c

10051c84 <LL_Set_Adv_PDU_Format>:
10051c84:	b530      	push	{r4, r5, lr}
10051c86:	4831      	ldr	r0, [pc, #196]	; (10051d4c <LL_Set_Adv_PDU_Format+0xc8>)
10051c88:	2141      	movs	r1, #65	; 0x41
10051c8a:	6800      	ldr	r0, [r0, #0]
10051c8c:	0149      	lsls	r1, r1, #5
10051c8e:	1840      	adds	r0, r0, r1
10051c90:	6b41      	ldr	r1, [r0, #52]	; 0x34
10051c92:	7e03      	ldrb	r3, [r0, #24]
10051c94:	780a      	ldrb	r2, [r1, #0]
10051c96:	071b      	lsls	r3, r3, #28
10051c98:	0992      	lsrs	r2, r2, #6
10051c9a:	0192      	lsls	r2, r2, #6
10051c9c:	0f1b      	lsrs	r3, r3, #28
10051c9e:	431a      	orrs	r2, r3
10051ca0:	700a      	strb	r2, [r1, #0]
10051ca2:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
10051ca4:	7e03      	ldrb	r3, [r0, #24]
10051ca6:	780a      	ldrb	r2, [r1, #0]
10051ca8:	071b      	lsls	r3, r3, #28
10051caa:	0992      	lsrs	r2, r2, #6
10051cac:	0192      	lsls	r2, r2, #6
10051cae:	0f1b      	lsrs	r3, r3, #28
10051cb0:	431a      	orrs	r2, r3
10051cb2:	700a      	strb	r2, [r1, #0]
10051cb4:	6b81      	ldr	r1, [r0, #56]	; 0x38
10051cb6:	780a      	ldrb	r2, [r1, #0]
10051cb8:	0992      	lsrs	r2, r2, #6
10051cba:	0192      	lsls	r2, r2, #6
10051cbc:	1d12      	adds	r2, r2, #4
10051cbe:	700a      	strb	r2, [r1, #0]
10051cc0:	6c01      	ldr	r1, [r0, #64]	; 0x40
10051cc2:	780a      	ldrb	r2, [r1, #0]
10051cc4:	0992      	lsrs	r2, r2, #6
10051cc6:	0192      	lsls	r2, r2, #6
10051cc8:	1d12      	adds	r2, r2, #4
10051cca:	700a      	strb	r2, [r1, #0]
10051ccc:	2100      	movs	r1, #0
10051cce:	4602      	mov	r2, r0
10051cd0:	3220      	adds	r2, #32
10051cd2:	e00b      	b.n	10051cec <LL_Set_Adv_PDU_Format+0x68>
10051cd4:	6a83      	ldr	r3, [r0, #40]	; 0x28
10051cd6:	6b45      	ldr	r5, [r0, #52]	; 0x34
10051cd8:	5c5c      	ldrb	r4, [r3, r1]
10051cda:	460b      	mov	r3, r1
10051cdc:	3308      	adds	r3, #8
10051cde:	54ec      	strb	r4, [r5, r3]
10051ce0:	6a84      	ldr	r4, [r0, #40]	; 0x28
10051ce2:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
10051ce4:	5c64      	ldrb	r4, [r4, r1]
10051ce6:	1c49      	adds	r1, r1, #1
10051ce8:	54ec      	strb	r4, [r5, r3]
10051cea:	b289      	uxth	r1, r1
10051cec:	7b13      	ldrb	r3, [r2, #12]
10051cee:	428b      	cmp	r3, r1
10051cf0:	d901      	bls.n	10051cf6 <LL_Set_Adv_PDU_Format+0x72>
10051cf2:	291f      	cmp	r1, #31
10051cf4:	d3ee      	bcc.n	10051cd4 <LL_Set_Adv_PDU_Format+0x50>
10051cf6:	7e01      	ldrb	r1, [r0, #24]
10051cf8:	2901      	cmp	r1, #1
10051cfa:	d007      	beq.n	10051d0c <LL_Set_Adv_PDU_Format+0x88>
10051cfc:	b2d9      	uxtb	r1, r3
10051cfe:	6b42      	ldr	r2, [r0, #52]	; 0x34
10051d00:	1d89      	adds	r1, r1, #6
10051d02:	7051      	strb	r1, [r2, #1]
10051d04:	6b41      	ldr	r1, [r0, #52]	; 0x34
10051d06:	3108      	adds	r1, #8
10051d08:	6281      	str	r1, [r0, #40]	; 0x28
10051d0a:	bd30      	pop	{r4, r5, pc}
10051d0c:	4603      	mov	r3, r0
10051d0e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
10051d10:	3310      	adds	r3, #16
10051d12:	3208      	adds	r2, #8
10051d14:	6881      	ldr	r1, [r0, #8]
10051d16:	6282      	str	r2, [r0, #40]	; 0x28
10051d18:	6b44      	ldr	r4, [r0, #52]	; 0x34
10051d1a:	220c      	movs	r2, #12
10051d1c:	7062      	strb	r2, [r4, #1]
10051d1e:	2200      	movs	r2, #0
10051d20:	4615      	mov	r5, r2
10051d22:	6b44      	ldr	r4, [r0, #52]	; 0x34
10051d24:	3508      	adds	r5, #8
10051d26:	5561      	strb	r1, [r4, r5]
10051d28:	7019      	strb	r1, [r3, #0]
10051d2a:	0a09      	lsrs	r1, r1, #8
10051d2c:	1c5b      	adds	r3, r3, #1
10051d2e:	2a03      	cmp	r2, #3
10051d30:	d100      	bne.n	10051d34 <LL_Set_Adv_PDU_Format+0xb0>
10051d32:	68c1      	ldr	r1, [r0, #12]
10051d34:	1c52      	adds	r2, r2, #1
10051d36:	b2d2      	uxtb	r2, r2
10051d38:	2a06      	cmp	r2, #6
10051d3a:	d3f1      	bcc.n	10051d20 <LL_Set_Adv_PDU_Format+0x9c>
10051d3c:	6b40      	ldr	r0, [r0, #52]	; 0x34
10051d3e:	7802      	ldrb	r2, [r0, #0]
10051d40:	0652      	lsls	r2, r2, #25
10051d42:	0e52      	lsrs	r2, r2, #25
10051d44:	01c9      	lsls	r1, r1, #7
10051d46:	430a      	orrs	r2, r1
10051d48:	7002      	strb	r2, [r0, #0]
10051d4a:	bd30      	pop	{r4, r5, pc}
10051d4c:	2000098c 	.word	0x2000098c

10051d50 <LL_Set_Adv_Params>:
10051d50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051d52:	4f51      	ldr	r7, [pc, #324]	; (10051e98 <LL_Set_Adv_Params+0x148>)
10051d54:	4606      	mov	r6, r0
10051d56:	2141      	movs	r1, #65	; 0x41
10051d58:	6838      	ldr	r0, [r7, #0]
10051d5a:	0149      	lsls	r1, r1, #5
10051d5c:	1845      	adds	r5, r0, r1
10051d5e:	f7fe f9af 	bl	100500c0 <get_advertiser>
10051d62:	2808      	cmp	r0, #8
10051d64:	d112      	bne.n	10051d8c <LL_Set_Adv_Params+0x3c>
10051d66:	f7fe fa2d 	bl	100501c4 <get_scan_connection>
10051d6a:	2808      	cmp	r0, #8
10051d6c:	d003      	beq.n	10051d76 <LL_Set_Adv_Params+0x26>
10051d6e:	2023      	movs	r0, #35	; 0x23
10051d70:	5d40      	ldrb	r0, [r0, r5]
10051d72:	2802      	cmp	r0, #2
10051d74:	d00a      	beq.n	10051d8c <LL_Set_Adv_Params+0x3c>
10051d76:	6838      	ldr	r0, [r7, #0]
10051d78:	4634      	mov	r4, r6
10051d7a:	3020      	adds	r0, #32
10051d7c:	7d80      	ldrb	r0, [r0, #22]
10051d7e:	3409      	adds	r4, #9
10051d80:	0700      	lsls	r0, r0, #28
10051d82:	2800      	cmp	r0, #0
10051d84:	7930      	ldrb	r0, [r6, #4]
10051d86:	db03      	blt.n	10051d90 <LL_Set_Adv_Params+0x40>
10051d88:	2803      	cmp	r0, #3
10051d8a:	d003      	beq.n	10051d94 <LL_Set_Adv_Params+0x44>
10051d8c:	200c      	movs	r0, #12
10051d8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051d90:	2801      	cmp	r0, #1
10051d92:	d004      	beq.n	10051d9e <LL_Set_Adv_Params+0x4e>
10051d94:	4620      	mov	r0, r4
10051d96:	f7ff fba0 	bl	100514da <Is_Address_Initialized>
10051d9a:	2800      	cmp	r0, #0
10051d9c:	d006      	beq.n	10051dac <LL_Set_Adv_Params+0x5c>
10051d9e:	7a32      	ldrb	r2, [r6, #8]
10051da0:	79f0      	ldrb	r0, [r6, #7]
10051da2:	2300      	movs	r3, #0
10051da4:	4621      	mov	r1, r4
10051da6:	f7ff fbc5 	bl	10051534 <LL_Check_And_Set_Addresses>
10051daa:	e00b      	b.n	10051dc4 <LL_Set_Adv_Params+0x74>
10051dac:	2300      	movs	r3, #0
10051dae:	79f0      	ldrb	r0, [r6, #7]
10051db0:	461a      	mov	r2, r3
10051db2:	4619      	mov	r1, r3
10051db4:	f7ff fbbe 	bl	10051534 <LL_Check_And_Set_Addresses>
10051db8:	2211      	movs	r2, #17
10051dba:	6839      	ldr	r1, [r7, #0]
10051dbc:	20ff      	movs	r0, #255	; 0xff
10051dbe:	0192      	lsls	r2, r2, #6
10051dc0:	1889      	adds	r1, r1, r2
10051dc2:	7588      	strb	r0, [r1, #22]
10051dc4:	462c      	mov	r4, r5
10051dc6:	3480      	adds	r4, #128	; 0x80
10051dc8:	6a21      	ldr	r1, [r4, #32]
10051dca:	8f28      	ldrh	r0, [r5, #56]	; 0x38
10051dcc:	8048      	strh	r0, [r1, #2]
10051dce:	7930      	ldrb	r0, [r6, #4]
10051dd0:	2801      	cmp	r0, #1
10051dd2:	d021      	beq.n	10051e18 <LL_Set_Adv_Params+0xc8>
10051dd4:	8830      	ldrh	r0, [r6, #0]
10051dd6:	0200      	lsls	r0, r0, #8
10051dd8:	60a0      	str	r0, [r4, #8]
10051dda:	8870      	ldrh	r0, [r6, #2]
10051ddc:	0200      	lsls	r0, r0, #8
10051dde:	60e0      	str	r0, [r4, #12]
10051de0:	2000      	movs	r0, #0
10051de2:	43c0      	mvns	r0, r0
10051de4:	8220      	strh	r0, [r4, #16]
10051de6:	7930      	ldrb	r0, [r6, #4]
10051de8:	2802      	cmp	r0, #2
10051dea:	d01c      	beq.n	10051e26 <LL_Set_Adv_Params+0xd6>
10051dec:	2803      	cmp	r0, #3
10051dee:	d01c      	beq.n	10051e2a <LL_Set_Adv_Params+0xda>
10051df0:	2804      	cmp	r0, #4
10051df2:	d01c      	beq.n	10051e2e <LL_Set_Adv_Params+0xde>
10051df4:	2801      	cmp	r0, #1
10051df6:	d01a      	beq.n	10051e2e <LL_Set_Adv_Params+0xde>
10051df8:	2805      	cmp	r0, #5
10051dfa:	d300      	bcc.n	10051dfe <LL_Set_Adv_Params+0xae>
10051dfc:	20ff      	movs	r0, #255	; 0xff
10051dfe:	7628      	strb	r0, [r5, #24]
10051e00:	4628      	mov	r0, r5
10051e02:	3020      	adds	r0, #32
10051e04:	79b1      	ldrb	r1, [r6, #6]
10051e06:	7341      	strb	r1, [r0, #13]
10051e08:	7971      	ldrb	r1, [r6, #5]
10051e0a:	4603      	mov	r3, r0
10051e0c:	7381      	strb	r1, [r0, #14]
10051e0e:	2027      	movs	r0, #39	; 0x27
10051e10:	2200      	movs	r2, #0
10051e12:	07ce      	lsls	r6, r1, #31
10051e14:	d00f      	beq.n	10051e36 <LL_Set_Adv_Params+0xe6>
10051e16:	e011      	b.n	10051e3c <LL_Set_Adv_Params+0xec>
10051e18:	2003      	movs	r0, #3
10051e1a:	0240      	lsls	r0, r0, #9
10051e1c:	60a0      	str	r0, [r4, #8]
10051e1e:	60e0      	str	r0, [r4, #12]
10051e20:	20ff      	movs	r0, #255	; 0xff
10051e22:	3056      	adds	r0, #86	; 0x56
10051e24:	e7de      	b.n	10051de4 <LL_Set_Adv_Params+0x94>
10051e26:	2006      	movs	r0, #6
10051e28:	e7e9      	b.n	10051dfe <LL_Set_Adv_Params+0xae>
10051e2a:	2002      	movs	r0, #2
10051e2c:	e7e7      	b.n	10051dfe <LL_Set_Adv_Params+0xae>
10051e2e:	2001      	movs	r0, #1
10051e30:	2100      	movs	r1, #0
10051e32:	71b1      	strb	r1, [r6, #6]
10051e34:	e7e3      	b.n	10051dfe <LL_Set_Adv_Params+0xae>
10051e36:	0849      	lsrs	r1, r1, #1
10051e38:	1c40      	adds	r0, r0, #1
10051e3a:	b2c0      	uxtb	r0, r0
10051e3c:	1c52      	adds	r2, r2, #1
10051e3e:	b2d2      	uxtb	r2, r2
10051e40:	2a02      	cmp	r2, #2
10051e42:	d3e6      	bcc.n	10051e12 <LL_Set_Adv_Params+0xc2>
10051e44:	2905      	cmp	r1, #5
10051e46:	d102      	bne.n	10051e4e <LL_Set_Adv_Params+0xfe>
10051e48:	1c80      	adds	r0, r0, #2
10051e4a:	b2c0      	uxtb	r0, r0
10051e4c:	2103      	movs	r1, #3
10051e4e:	2827      	cmp	r0, #39	; 0x27
10051e50:	d901      	bls.n	10051e56 <LL_Set_Adv_Params+0x106>
10051e52:	1ec0      	subs	r0, r0, #3
10051e54:	b2c0      	uxtb	r0, r0
10051e56:	6a66      	ldr	r6, [r4, #36]	; 0x24
10051e58:	8d22      	ldrh	r2, [r4, #40]	; 0x28
10051e5a:	8032      	strh	r2, [r6, #0]
10051e5c:	6aa6      	ldr	r6, [r4, #40]	; 0x28
10051e5e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
10051e60:	8032      	strh	r2, [r6, #0]
10051e62:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
10051e64:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
10051e66:	8032      	strh	r2, [r6, #0]
10051e68:	6a66      	ldr	r6, [r4, #36]	; 0x24
10051e6a:	8eaa      	ldrh	r2, [r5, #52]	; 0x34
10051e6c:	8072      	strh	r2, [r6, #2]
10051e6e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
10051e70:	8eaa      	ldrh	r2, [r5, #52]	; 0x34
10051e72:	8072      	strh	r2, [r6, #2]
10051e74:	8eaa      	ldrh	r2, [r5, #52]	; 0x34
10051e76:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
10051e78:	806a      	strh	r2, [r5, #2]
10051e7a:	73d8      	strb	r0, [r3, #15]
10051e7c:	2903      	cmp	r1, #3
10051e7e:	d002      	beq.n	10051e86 <LL_Set_Adv_Params+0x136>
10051e80:	2901      	cmp	r1, #1
10051e82:	d004      	beq.n	10051e8e <LL_Set_Adv_Params+0x13e>
10051e84:	e005      	b.n	10051e92 <LL_Set_Adv_Params+0x142>
10051e86:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10051e88:	8ca0      	ldrh	r0, [r4, #36]	; 0x24
10051e8a:	8008      	strh	r0, [r1, #0]
10051e8c:	e001      	b.n	10051e92 <LL_Set_Adv_Params+0x142>
10051e8e:	6a60      	ldr	r0, [r4, #36]	; 0x24
10051e90:	8000      	strh	r0, [r0, #0]
10051e92:	2000      	movs	r0, #0
10051e94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051e96:	0000      	.short	0x0000
10051e98:	2000098c 	.word	0x2000098c

10051e9c <LL_Set_Advertising_Buffers>:
10051e9c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10051e9e:	4820      	ldr	r0, [pc, #128]	; (10051f20 <LL_Set_Advertising_Buffers+0x84>)
10051ea0:	2141      	movs	r1, #65	; 0x41
10051ea2:	6800      	ldr	r0, [r0, #0]
10051ea4:	0149      	lsls	r1, r1, #5
10051ea6:	1847      	adds	r7, r0, r1
10051ea8:	4669      	mov	r1, sp
10051eaa:	a801      	add	r0, sp, #4
10051eac:	f7ff fd4e 	bl	1005194c <LL_Get_Address>
10051eb0:	6bbe      	ldr	r6, [r7, #56]	; 0x38
10051eb2:	6b7d      	ldr	r5, [r7, #52]	; 0x34
10051eb4:	6bfc      	ldr	r4, [r7, #60]	; 0x3c
10051eb6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
10051eb8:	b672      	cpsid	i
10051eba:	2000      	movs	r0, #0
10051ebc:	aa01      	add	r2, sp, #4
10051ebe:	1c81      	adds	r1, r0, #2
10051ec0:	5c17      	ldrb	r7, [r2, r0]
10051ec2:	546f      	strb	r7, [r5, r1]
10051ec4:	5c17      	ldrb	r7, [r2, r0]
10051ec6:	5477      	strb	r7, [r6, r1]
10051ec8:	5c17      	ldrb	r7, [r2, r0]
10051eca:	5467      	strb	r7, [r4, r1]
10051ecc:	5c17      	ldrb	r7, [r2, r0]
10051ece:	1c40      	adds	r0, r0, #1
10051ed0:	545f      	strb	r7, [r3, r1]
10051ed2:	2806      	cmp	r0, #6
10051ed4:	dbf3      	blt.n	10051ebe <LL_Set_Advertising_Buffers+0x22>
10051ed6:	4669      	mov	r1, sp
10051ed8:	7809      	ldrb	r1, [r1, #0]
10051eda:	782a      	ldrb	r2, [r5, #0]
10051edc:	20bf      	movs	r0, #191	; 0xbf
10051ede:	07c9      	lsls	r1, r1, #31
10051ee0:	4002      	ands	r2, r0
10051ee2:	0e49      	lsrs	r1, r1, #25
10051ee4:	430a      	orrs	r2, r1
10051ee6:	702a      	strb	r2, [r5, #0]
10051ee8:	4669      	mov	r1, sp
10051eea:	7809      	ldrb	r1, [r1, #0]
10051eec:	7832      	ldrb	r2, [r6, #0]
10051eee:	07c9      	lsls	r1, r1, #31
10051ef0:	4002      	ands	r2, r0
10051ef2:	0e49      	lsrs	r1, r1, #25
10051ef4:	430a      	orrs	r2, r1
10051ef6:	7032      	strb	r2, [r6, #0]
10051ef8:	4669      	mov	r1, sp
10051efa:	7809      	ldrb	r1, [r1, #0]
10051efc:	7822      	ldrb	r2, [r4, #0]
10051efe:	07c9      	lsls	r1, r1, #31
10051f00:	4002      	ands	r2, r0
10051f02:	0e49      	lsrs	r1, r1, #25
10051f04:	430a      	orrs	r2, r1
10051f06:	7022      	strb	r2, [r4, #0]
10051f08:	781a      	ldrb	r2, [r3, #0]
10051f0a:	4669      	mov	r1, sp
10051f0c:	4002      	ands	r2, r0
10051f0e:	7808      	ldrb	r0, [r1, #0]
10051f10:	07c0      	lsls	r0, r0, #31
10051f12:	0e40      	lsrs	r0, r0, #25
10051f14:	4302      	orrs	r2, r0
10051f16:	701a      	strb	r2, [r3, #0]
10051f18:	b662      	cpsie	i
10051f1a:	2000      	movs	r0, #0
10051f1c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10051f1e:	0000      	.short	0x0000
10051f20:	2000098c 	.word	0x2000098c

10051f24 <LL_Set_DirectAddress>:
10051f24:	4603      	mov	r3, r0
10051f26:	b510      	push	{r4, lr}
10051f28:	480a      	ldr	r0, [pc, #40]	; (10051f54 <LL_Set_DirectAddress+0x30>)
10051f2a:	2a00      	cmp	r2, #0
10051f2c:	6800      	ldr	r0, [r0, #0]
10051f2e:	d006      	beq.n	10051f3e <LL_Set_DirectAddress+0x1a>
10051f30:	4a09      	ldr	r2, [pc, #36]	; (10051f58 <LL_Set_DirectAddress+0x34>)
10051f32:	1880      	adds	r0, r0, r2
10051f34:	b672      	cpsid	i
10051f36:	460a      	mov	r2, r1
10051f38:	4619      	mov	r1, r3
10051f3a:	3010      	adds	r0, #16
10051f3c:	e006      	b.n	10051f4c <LL_Set_DirectAddress+0x28>
10051f3e:	2241      	movs	r2, #65	; 0x41
10051f40:	0152      	lsls	r2, r2, #5
10051f42:	1880      	adds	r0, r0, r2
10051f44:	b672      	cpsid	i
10051f46:	460a      	mov	r2, r1
10051f48:	4619      	mov	r1, r3
10051f4a:	3008      	adds	r0, #8
10051f4c:	f000 f88e 	bl	1005206c <addr_u32_from_u8>
10051f50:	b662      	cpsie	i
10051f52:	bd10      	pop	{r4, pc}
10051f54:	2000098c 	.word	0x2000098c
10051f58:	00000904 	.word	0x00000904

10051f5c <LL_Set_OwnAddress>:
10051f5c:	4603      	mov	r3, r0
10051f5e:	b510      	push	{r4, lr}
10051f60:	4806      	ldr	r0, [pc, #24]	; (10051f7c <LL_Set_OwnAddress+0x20>)
10051f62:	2241      	movs	r2, #65	; 0x41
10051f64:	6800      	ldr	r0, [r0, #0]
10051f66:	0152      	lsls	r2, r2, #5
10051f68:	1880      	adds	r0, r0, r2
10051f6a:	b672      	cpsid	i
10051f6c:	460a      	mov	r2, r1
10051f6e:	4619      	mov	r1, r3
10051f70:	f000 f87c 	bl	1005206c <addr_u32_from_u8>
10051f74:	b662      	cpsie	i
10051f76:	2000      	movs	r0, #0
10051f78:	bd10      	pop	{r4, pc}
10051f7a:	0000      	.short	0x0000
10051f7c:	2000098c 	.word	0x2000098c

10051f80 <LL_Set_Scan_Resp_Data>:
10051f80:	b5f0      	push	{r4, r5, r6, r7, lr}
10051f82:	4a15      	ldr	r2, [pc, #84]	; (10051fd8 <LL_Set_Scan_Resp_Data+0x58>)
10051f84:	2341      	movs	r3, #65	; 0x41
10051f86:	6812      	ldr	r2, [r2, #0]
10051f88:	015b      	lsls	r3, r3, #5
10051f8a:	18d3      	adds	r3, r2, r3
10051f8c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
10051f8e:	4615      	mov	r5, r2
10051f90:	3208      	adds	r2, #8
10051f92:	291f      	cmp	r1, #31
10051f94:	d901      	bls.n	10051f9a <LL_Set_Scan_Resp_Data+0x1a>
10051f96:	2030      	movs	r0, #48	; 0x30
10051f98:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051f9a:	2400      	movs	r4, #0
10051f9c:	6b9e      	ldr	r6, [r3, #56]	; 0x38
10051f9e:	6c1f      	ldr	r7, [r3, #64]	; 0x40
10051fa0:	5d36      	ldrb	r6, [r6, r4]
10051fa2:	553e      	strb	r6, [r7, r4]
10051fa4:	1c64      	adds	r4, r4, #1
10051fa6:	b2e4      	uxtb	r4, r4
10051fa8:	2c08      	cmp	r4, #8
10051faa:	d3f7      	bcc.n	10051f9c <LL_Set_Scan_Resp_Data+0x1c>
10051fac:	2400      	movs	r4, #0
10051fae:	e005      	b.n	10051fbc <LL_Set_Scan_Resp_Data+0x3c>
10051fb0:	7806      	ldrb	r6, [r0, #0]
10051fb2:	1c64      	adds	r4, r4, #1
10051fb4:	7016      	strb	r6, [r2, #0]
10051fb6:	1c40      	adds	r0, r0, #1
10051fb8:	b2e4      	uxtb	r4, r4
10051fba:	1c52      	adds	r2, r2, #1
10051fbc:	428c      	cmp	r4, r1
10051fbe:	d3f7      	bcc.n	10051fb0 <LL_Set_Scan_Resp_Data+0x30>
10051fc0:	6c18      	ldr	r0, [r3, #64]	; 0x40
10051fc2:	1d89      	adds	r1, r1, #6
10051fc4:	7041      	strb	r1, [r0, #1]
10051fc6:	6b98      	ldr	r0, [r3, #56]	; 0x38
10051fc8:	639d      	str	r5, [r3, #56]	; 0x38
10051fca:	6418      	str	r0, [r3, #64]	; 0x40
10051fcc:	3380      	adds	r3, #128	; 0x80
10051fce:	6a18      	ldr	r0, [r3, #32]
10051fd0:	8045      	strh	r5, [r0, #2]
10051fd2:	2000      	movs	r0, #0
10051fd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051fd6:	0000      	.short	0x0000
10051fd8:	2000098c 	.word	0x2000098c

10051fdc <LL_Update_Advertising_Buffers>:
10051fdc:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10051fde:	480f      	ldr	r0, [pc, #60]	; (1005201c <LL_Update_Advertising_Buffers+0x40>)
10051fe0:	2141      	movs	r1, #65	; 0x41
10051fe2:	6800      	ldr	r0, [r0, #0]
10051fe4:	0149      	lsls	r1, r1, #5
10051fe6:	1844      	adds	r4, r0, r1
10051fe8:	490d      	ldr	r1, [pc, #52]	; (10052020 <LL_Update_Advertising_Buffers+0x44>)
10051fea:	2206      	movs	r2, #6
10051fec:	1841      	adds	r1, r0, r1
10051fee:	4668      	mov	r0, sp
10051ff0:	f7f1 f8e5 	bl	100431be <Osal_MemCpy>
10051ff4:	6ba6      	ldr	r6, [r4, #56]	; 0x38
10051ff6:	6be5      	ldr	r5, [r4, #60]	; 0x3c
10051ff8:	6b63      	ldr	r3, [r4, #52]	; 0x34
10051ffa:	6c24      	ldr	r4, [r4, #64]	; 0x40
10051ffc:	2000      	movs	r0, #0
10051ffe:	466a      	mov	r2, sp
10052000:	1c81      	adds	r1, r0, #2
10052002:	5c17      	ldrb	r7, [r2, r0]
10052004:	545f      	strb	r7, [r3, r1]
10052006:	5c17      	ldrb	r7, [r2, r0]
10052008:	5477      	strb	r7, [r6, r1]
1005200a:	5c17      	ldrb	r7, [r2, r0]
1005200c:	546f      	strb	r7, [r5, r1]
1005200e:	5c17      	ldrb	r7, [r2, r0]
10052010:	1c40      	adds	r0, r0, #1
10052012:	5467      	strb	r7, [r4, r1]
10052014:	2806      	cmp	r0, #6
10052016:	dbf3      	blt.n	10052000 <LL_Update_Advertising_Buffers+0x24>
10052018:	2000      	movs	r0, #0
1005201a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005201c:	2000098c 	.word	0x2000098c
10052020:	000006ef 	.word	0x000006ef

10052024 <LL_Update_Scanning_Initiating_Buffers>:
10052024:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10052026:	4c0e      	ldr	r4, [pc, #56]	; (10052060 <LL_Update_Scanning_Initiating_Buffers+0x3c>)
10052028:	490e      	ldr	r1, [pc, #56]	; (10052064 <LL_Update_Scanning_Initiating_Buffers+0x40>)
1005202a:	6820      	ldr	r0, [r4, #0]
1005202c:	2206      	movs	r2, #6
1005202e:	1845      	adds	r5, r0, r1
10052030:	490d      	ldr	r1, [pc, #52]	; (10052068 <LL_Update_Scanning_Initiating_Buffers+0x44>)
10052032:	1841      	adds	r1, r0, r1
10052034:	4668      	mov	r0, sp
10052036:	f7f1 f8c2 	bl	100431be <Osal_MemCpy>
1005203a:	6a29      	ldr	r1, [r5, #32]
1005203c:	2206      	movs	r2, #6
1005203e:	4668      	mov	r0, sp
10052040:	1c89      	adds	r1, r1, #2
10052042:	f7fa fc3d 	bl	1004c8c0 <char_copy>
10052046:	2109      	movs	r1, #9
10052048:	6820      	ldr	r0, [r4, #0]
1005204a:	0209      	lsls	r1, r1, #8
1005204c:	1840      	adds	r0, r0, r1
1005204e:	6d01      	ldr	r1, [r0, #80]	; 0x50
10052050:	2206      	movs	r2, #6
10052052:	4668      	mov	r0, sp
10052054:	1c89      	adds	r1, r1, #2
10052056:	f7fa fc33 	bl	1004c8c0 <char_copy>
1005205a:	2000      	movs	r0, #0
1005205c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005205e:	0000      	.short	0x0000
10052060:	2000098c 	.word	0x2000098c
10052064:	00000904 	.word	0x00000904
10052068:	000006ef 	.word	0x000006ef

1005206c <addr_u32_from_u8>:
1005206c:	b570      	push	{r4, r5, r6, lr}
1005206e:	4605      	mov	r5, r0
10052070:	4616      	mov	r6, r2
10052072:	460c      	mov	r4, r1
10052074:	4608      	mov	r0, r1
10052076:	f000 f811 	bl	1005209c <le4ByteToInt32>
1005207a:	6028      	str	r0, [r5, #0]
1005207c:	7921      	ldrb	r1, [r4, #4]
1005207e:	7960      	ldrb	r0, [r4, #5]
10052080:	0200      	lsls	r0, r0, #8
10052082:	4308      	orrs	r0, r1
10052084:	0431      	lsls	r1, r6, #16
10052086:	1840      	adds	r0, r0, r1
10052088:	6068      	str	r0, [r5, #4]
1005208a:	bd70      	pop	{r4, r5, r6, pc}

1005208c <int32ToLe4Byte>:
1005208c:	7001      	strb	r1, [r0, #0]
1005208e:	0a0a      	lsrs	r2, r1, #8
10052090:	7042      	strb	r2, [r0, #1]
10052092:	0c0a      	lsrs	r2, r1, #16
10052094:	7082      	strb	r2, [r0, #2]
10052096:	0e09      	lsrs	r1, r1, #24
10052098:	70c1      	strb	r1, [r0, #3]
1005209a:	4770      	bx	lr

1005209c <le4ByteToInt32>:
1005209c:	7801      	ldrb	r1, [r0, #0]
1005209e:	7842      	ldrb	r2, [r0, #1]
100520a0:	0213      	lsls	r3, r2, #8
100520a2:	7882      	ldrb	r2, [r0, #2]
100520a4:	78c0      	ldrb	r0, [r0, #3]
100520a6:	0412      	lsls	r2, r2, #16
100520a8:	0600      	lsls	r0, r0, #24
100520aa:	4310      	orrs	r0, r2
100520ac:	4318      	orrs	r0, r3
100520ae:	4308      	orrs	r0, r1
100520b0:	4770      	bx	lr
	...

100520b4 <wait_for_prescheduled_slot_cancellation>:
100520b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100520b6:	4e1b      	ldr	r6, [pc, #108]	; (10052124 <wait_for_prescheduled_slot_cancellation+0x70>)
100520b8:	8831      	ldrh	r1, [r6, #0]
100520ba:	4604      	mov	r4, r0
100520bc:	0709      	lsls	r1, r1, #28
100520be:	2008      	movs	r0, #8
100520c0:	0f09      	lsrs	r1, r1, #28
100520c2:	4304      	orrs	r4, r0
100520c4:	42a1      	cmp	r1, r4
100520c6:	d12b      	bne.n	10052120 <wait_for_prescheduled_slot_cancellation+0x6c>
100520c8:	4d17      	ldr	r5, [pc, #92]	; (10052128 <wait_for_prescheduled_slot_cancellation+0x74>)
100520ca:	2100      	movs	r1, #0
100520cc:	6828      	ldr	r0, [r5, #0]
100520ce:	6381      	str	r1, [r0, #56]	; 0x38
100520d0:	14b1      	asrs	r1, r6, #18
100520d2:	1840      	adds	r0, r0, r1
100520d4:	2109      	movs	r1, #9
100520d6:	06c9      	lsls	r1, r1, #27
100520d8:	6f00      	ldr	r0, [r0, #112]	; 0x70
100520da:	6909      	ldr	r1, [r1, #16]
100520dc:	1a47      	subs	r7, r0, r1
100520de:	2064      	movs	r0, #100	; 0x64
100520e0:	f000 f872 	bl	100521c8 <machine_time_trans>
100520e4:	7a71      	ldrb	r1, [r6, #9]
100520e6:	00c9      	lsls	r1, r1, #3
100520e8:	1840      	adds	r0, r0, r1
100520ea:	6829      	ldr	r1, [r5, #0]
100520ec:	6a89      	ldr	r1, [r1, #40]	; 0x28
100520ee:	1840      	adds	r0, r0, r1
100520f0:	1a38      	subs	r0, r7, r0
100520f2:	0200      	lsls	r0, r0, #8
100520f4:	2101      	movs	r1, #1
100520f6:	0a00      	lsrs	r0, r0, #8
100520f8:	05c9      	lsls	r1, r1, #23
100520fa:	4288      	cmp	r0, r1
100520fc:	d202      	bcs.n	10052104 <wait_for_prescheduled_slot_cancellation+0x50>
100520fe:	2000      	movs	r0, #0
10052100:	f003 ff32 	bl	10055f68 <advance_wakeup_timer>
10052104:	4909      	ldr	r1, [pc, #36]	; (1005212c <wait_for_prescheduled_slot_cancellation+0x78>)
10052106:	6828      	ldr	r0, [r5, #0]
10052108:	8832      	ldrh	r2, [r6, #0]
1005210a:	0712      	lsls	r2, r2, #28
1005210c:	0f12      	lsrs	r2, r2, #28
1005210e:	42a2      	cmp	r2, r4
10052110:	d106      	bne.n	10052120 <wait_for_prescheduled_slot_cancellation+0x6c>
10052112:	6b82      	ldr	r2, [r0, #56]	; 0x38
10052114:	428a      	cmp	r2, r1
10052116:	d203      	bcs.n	10052120 <wait_for_prescheduled_slot_cancellation+0x6c>
10052118:	6b82      	ldr	r2, [r0, #56]	; 0x38
1005211a:	1c52      	adds	r2, r2, #1
1005211c:	6382      	str	r2, [r0, #56]	; 0x38
1005211e:	e7f3      	b.n	10052108 <wait_for_prescheduled_slot_cancellation+0x54>
10052120:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10052122:	0000      	.short	0x0000
10052124:	200000c0 	.word	0x200000c0
10052128:	2000098c 	.word	0x2000098c
1005212c:	00027100 	.word	0x00027100

10052130 <Blue_Set_Radio_Config_Data>:
10052130:	b510      	push	{r4, lr}
10052132:	4806      	ldr	r0, [pc, #24]	; (1005214c <Blue_Set_Radio_Config_Data+0x1c>)
10052134:	6801      	ldr	r1, [r0, #0]
10052136:	4806      	ldr	r0, [pc, #24]	; (10052150 <Blue_Set_Radio_Config_Data+0x20>)
10052138:	6a40      	ldr	r0, [r0, #36]	; 0x24
1005213a:	2800      	cmp	r0, #0
1005213c:	d003      	beq.n	10052146 <Blue_Set_Radio_Config_Data+0x16>
1005213e:	2220      	movs	r2, #32
10052140:	f7fa fbbe 	bl	1004c8c0 <char_copy>
10052144:	bd10      	pop	{r4, pc}
10052146:	2000      	movs	r0, #0
10052148:	7008      	strb	r0, [r1, #0]
1005214a:	bd10      	pop	{r4, pc}
1005214c:	2000098c 	.word	0x2000098c
10052150:	200002cc 	.word	0x200002cc

10052154 <LL_Get_Adv_Tx_Power_Level>:
10052154:	b510      	push	{r4, lr}
10052156:	4604      	mov	r4, r0
10052158:	4803      	ldr	r0, [pc, #12]	; (10052168 <LL_Get_Adv_Tx_Power_Level+0x14>)
1005215a:	7a80      	ldrb	r0, [r0, #10]
1005215c:	f000 f806 	bl	1005216c <convert_power>
10052160:	7020      	strb	r0, [r4, #0]
10052162:	2000      	movs	r0, #0
10052164:	bd10      	pop	{r4, pc}
10052166:	0000      	.short	0x0000
10052168:	20000100 	.word	0x20000100

1005216c <convert_power>:
1005216c:	0641      	lsls	r1, r0, #25
1005216e:	2203      	movs	r2, #3
10052170:	0fc9      	lsrs	r1, r1, #31
10052172:	0212      	lsls	r2, r2, #8
10052174:	4351      	muls	r1, r2
10052176:	0680      	lsls	r0, r0, #26
10052178:	4a04      	ldr	r2, [pc, #16]	; (1005218c <convert_power+0x20>)
1005217a:	0f40      	lsrs	r0, r0, #29
1005217c:	4350      	muls	r0, r2
1005217e:	1808      	adds	r0, r1, r0
10052180:	2123      	movs	r1, #35	; 0x23
10052182:	01c9      	lsls	r1, r1, #7
10052184:	1a40      	subs	r0, r0, r1
10052186:	0400      	lsls	r0, r0, #16
10052188:	0e00      	lsrs	r0, r0, #24
1005218a:	4770      	bx	lr
1005218c:	00000349 	.word	0x00000349

10052190 <modulo_37>:
10052190:	4905      	ldr	r1, [pc, #20]	; (100521a8 <modulo_37+0x18>)
10052192:	2225      	movs	r2, #37	; 0x25
10052194:	4341      	muls	r1, r0
10052196:	0c09      	lsrs	r1, r1, #16
10052198:	4351      	muls	r1, r2
1005219a:	1a40      	subs	r0, r0, r1
1005219c:	b280      	uxth	r0, r0
1005219e:	2825      	cmp	r0, #37	; 0x25
100521a0:	d300      	bcc.n	100521a4 <modulo_37+0x14>
100521a2:	3825      	subs	r0, #37	; 0x25
100521a4:	b2c0      	uxtb	r0, r0
100521a6:	4770      	bx	lr
100521a8:	000006eb 	.word	0x000006eb

100521ac <WindowWiden1>:
100521ac:	0889      	lsrs	r1, r1, #2
100521ae:	4341      	muls	r1, r0
100521b0:	0a88      	lsrs	r0, r1, #10
100521b2:	1c40      	adds	r0, r0, #1
100521b4:	4770      	bx	lr

100521b6 <WindowWiden2>:
100521b6:	4341      	muls	r1, r0
100521b8:	0a08      	lsrs	r0, r1, #8
100521ba:	2129      	movs	r1, #41	; 0x29
100521bc:	0109      	lsls	r1, r1, #4
100521be:	4348      	muls	r0, r1
100521c0:	0ac0      	lsrs	r0, r0, #11
100521c2:	1c40      	adds	r0, r0, #1
100521c4:	4770      	bx	lr
	...

100521c8 <machine_time_trans>:
100521c8:	4906      	ldr	r1, [pc, #24]	; (100521e4 <machine_time_trans+0x1c>)
100521ca:	0bc2      	lsrs	r2, r0, #15
100521cc:	6809      	ldr	r1, [r1, #0]
100521ce:	0440      	lsls	r0, r0, #17
100521d0:	6a09      	ldr	r1, [r1, #32]
100521d2:	0c40      	lsrs	r0, r0, #17
100521d4:	09cb      	lsrs	r3, r1, #7
100521d6:	4358      	muls	r0, r3
100521d8:	4351      	muls	r1, r2
100521da:	0a00      	lsrs	r0, r0, #8
100521dc:	1808      	adds	r0, r1, r0
100521de:	3020      	adds	r0, #32
100521e0:	0980      	lsrs	r0, r0, #6
100521e2:	4770      	bx	lr
100521e4:	2000098c 	.word	0x2000098c

100521e8 <set_freq>:
100521e8:	b570      	push	{r4, r5, r6, lr}
100521ea:	4a1a      	ldr	r2, [pc, #104]	; (10052254 <set_freq+0x6c>)
100521ec:	4c1a      	ldr	r4, [pc, #104]	; (10052258 <set_freq+0x70>)
100521ee:	7bd3      	ldrb	r3, [r2, #15]
100521f0:	6822      	ldr	r2, [r4, #0]
100521f2:	2b00      	cmp	r3, #0
100521f4:	d011      	beq.n	1005221a <set_freq+0x32>
100521f6:	4e1a      	ldr	r6, [pc, #104]	; (10052260 <set_freq+0x78>)
100521f8:	4b18      	ldr	r3, [pc, #96]	; (1005225c <set_freq+0x74>)
100521fa:	0980      	lsrs	r0, r0, #6
100521fc:	b2cd      	uxtb	r5, r1
100521fe:	4358      	muls	r0, r3
10052200:	4375      	muls	r5, r6
10052202:	0a0b      	lsrs	r3, r1, #8
10052204:	0a2d      	lsrs	r5, r5, #8
10052206:	4373      	muls	r3, r6
10052208:	3510      	adds	r5, #16
1005220a:	195b      	adds	r3, r3, r5
1005220c:	4d15      	ldr	r5, [pc, #84]	; (10052264 <set_freq+0x7c>)
1005220e:	3080      	adds	r0, #128	; 0x80
10052210:	095b      	lsrs	r3, r3, #5
10052212:	0a00      	lsrs	r0, r0, #8
10052214:	4369      	muls	r1, r5
10052216:	0c09      	lsrs	r1, r1, #16
10052218:	e004      	b.n	10052224 <set_freq+0x3c>
1005221a:	2319      	movs	r3, #25
1005221c:	4812      	ldr	r0, [pc, #72]	; (10052268 <set_freq+0x80>)
1005221e:	041b      	lsls	r3, r3, #16
10052220:	21ff      	movs	r1, #255	; 0xff
10052222:	31e9      	adds	r1, #233	; 0xe9
10052224:	4d11      	ldr	r5, [pc, #68]	; (1005226c <set_freq+0x84>)
10052226:	8611      	strh	r1, [r2, #48]	; 0x30
10052228:	8069      	strh	r1, [r5, #2]
1005222a:	6253      	str	r3, [r2, #36]	; 0x24
1005222c:	6210      	str	r0, [r2, #32]
1005222e:	4809      	ldr	r0, [pc, #36]	; (10052254 <set_freq+0x6c>)
10052230:	3820      	subs	r0, #32
10052232:	8e00      	ldrh	r0, [r0, #48]	; 0x30
10052234:	f7ff ffc8 	bl	100521c8 <machine_time_trans>
10052238:	14e9      	asrs	r1, r5, #19
1005223a:	4288      	cmp	r0, r1
1005223c:	d300      	bcc.n	10052240 <set_freq+0x58>
1005223e:	1e48      	subs	r0, r1, #1
10052240:	0540      	lsls	r0, r0, #21
10052242:	6821      	ldr	r1, [r4, #0]
10052244:	0e00      	lsrs	r0, r0, #24
10052246:	3120      	adds	r1, #32
10052248:	7508      	strb	r0, [r1, #20]
1005224a:	8829      	ldrh	r1, [r5, #0]
1005224c:	0709      	lsls	r1, r1, #28
1005224e:	d400      	bmi.n	10052252 <set_freq+0x6a>
10052250:	7268      	strb	r0, [r5, #9]
10052252:	bd70      	pop	{r4, r5, r6, pc}
10052254:	200002ec 	.word	0x200002ec
10052258:	2000098c 	.word	0x2000098c
1005225c:	00000753 	.word	0x00000753
10052260:	0008bcf6 	.word	0x0008bcf6
10052264:	00000555 	.word	0x00000555
10052268:	0028f5c2 	.word	0x0028f5c2
1005226c:	200000c0 	.word	0x200000c0

10052270 <set_sca>:
10052270:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10052272:	4c05      	ldr	r4, [pc, #20]	; (10052288 <set_sca+0x18>)
10052274:	0740      	lsls	r0, r0, #29
10052276:	cc1e      	ldmia	r4, {r1, r2, r3, r4}
10052278:	9403      	str	r4, [sp, #12]
1005227a:	466c      	mov	r4, sp
1005227c:	c40e      	stmia	r4!, {r1, r2, r3}
1005227e:	0f00      	lsrs	r0, r0, #28
10052280:	4669      	mov	r1, sp
10052282:	5a08      	ldrh	r0, [r1, r0]
10052284:	b004      	add	sp, #16
10052286:	bd10      	pop	{r4, pc}
10052288:	10058f44 	.word	0x10058f44

1005228c <system_time_trans>:
1005228c:	b508      	push	{r3, lr}
1005228e:	2100      	movs	r1, #0
10052290:	466a      	mov	r2, sp
10052292:	8011      	strh	r1, [r2, #0]
10052294:	4669      	mov	r1, sp
10052296:	f000 f801 	bl	1005229c <system_time_trans_ext>
1005229a:	bd08      	pop	{r3, pc}

1005229c <system_time_trans_ext>:
1005229c:	b510      	push	{r4, lr}
1005229e:	4a0a      	ldr	r2, [pc, #40]	; (100522c8 <system_time_trans_ext+0x2c>)
100522a0:	0b83      	lsrs	r3, r0, #14
100522a2:	6812      	ldr	r2, [r2, #0]
100522a4:	0480      	lsls	r0, r0, #18
100522a6:	6a52      	ldr	r2, [r2, #36]	; 0x24
100522a8:	0c80      	lsrs	r0, r0, #18
100522aa:	0a14      	lsrs	r4, r2, #8
100522ac:	4360      	muls	r0, r4
100522ae:	435a      	muls	r2, r3
100522b0:	0980      	lsrs	r0, r0, #6
100522b2:	1810      	adds	r0, r2, r0
100522b4:	2200      	movs	r2, #0
100522b6:	5e8a      	ldrsh	r2, [r1, r2]
100522b8:	1a82      	subs	r2, r0, r2
100522ba:	4610      	mov	r0, r2
100522bc:	3040      	adds	r0, #64	; 0x40
100522be:	09c0      	lsrs	r0, r0, #7
100522c0:	01c3      	lsls	r3, r0, #7
100522c2:	1a9a      	subs	r2, r3, r2
100522c4:	800a      	strh	r2, [r1, #0]
100522c6:	bd10      	pop	{r4, pc}
100522c8:	2000098c 	.word	0x2000098c

100522cc <time_offset1>:
100522cc:	2803      	cmp	r0, #3
100522ce:	d002      	beq.n	100522d6 <time_offset1+0xa>
100522d0:	2063      	movs	r0, #99	; 0x63
100522d2:	43c0      	mvns	r0, r0
100522d4:	4770      	bx	lr
100522d6:	2066      	movs	r0, #102	; 0x66
100522d8:	4770      	bx	lr
	...

100522dc <time_offset2>:
100522dc:	2801      	cmp	r0, #1
100522de:	d001      	beq.n	100522e4 <time_offset2+0x8>
100522e0:	4801      	ldr	r0, [pc, #4]	; (100522e8 <time_offset2+0xc>)
100522e2:	4770      	bx	lr
100522e4:	2000      	movs	r0, #0
100522e6:	4770      	bx	lr
100522e8:	0000037a 	.word	0x0000037a

100522ec <Blue_Init_Global>:
100522ec:	b570      	push	{r4, r5, r6, lr}
100522ee:	4a23      	ldr	r2, [pc, #140]	; (1005237c <Blue_Init_Global+0x90>)
100522f0:	2100      	movs	r1, #0
100522f2:	6810      	ldr	r0, [r2, #0]
100522f4:	4604      	mov	r4, r0
100522f6:	3040      	adds	r0, #64	; 0x40
100522f8:	7641      	strb	r1, [r0, #25]
100522fa:	7601      	strb	r1, [r0, #24]
100522fc:	2309      	movs	r3, #9
100522fe:	021b      	lsls	r3, r3, #8
10052300:	18e0      	adds	r0, r4, r3
10052302:	7041      	strb	r1, [r0, #1]
10052304:	250f      	movs	r5, #15
10052306:	2036      	movs	r0, #54	; 0x36
10052308:	5505      	strb	r5, [r0, r4]
1005230a:	4608      	mov	r0, r1
1005230c:	6814      	ldr	r4, [r2, #0]
1005230e:	18e4      	adds	r4, r4, r3
10052310:	6ce4      	ldr	r4, [r4, #76]	; 0x4c
10052312:	5421      	strb	r1, [r4, r0]
10052314:	6814      	ldr	r4, [r2, #0]
10052316:	18e4      	adds	r4, r4, r3
10052318:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
1005231a:	4604      	mov	r4, r0
1005231c:	3430      	adds	r4, #48	; 0x30
1005231e:	5529      	strb	r1, [r5, r4]
10052320:	6814      	ldr	r4, [r2, #0]
10052322:	18e4      	adds	r4, r4, r3
10052324:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
10052326:	4604      	mov	r4, r0
10052328:	3460      	adds	r4, #96	; 0x60
1005232a:	5529      	strb	r1, [r5, r4]
1005232c:	6814      	ldr	r4, [r2, #0]
1005232e:	18e4      	adds	r4, r4, r3
10052330:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
10052332:	4604      	mov	r4, r0
10052334:	3490      	adds	r4, #144	; 0x90
10052336:	1c40      	adds	r0, r0, #1
10052338:	b2c0      	uxtb	r0, r0
1005233a:	5529      	strb	r1, [r5, r4]
1005233c:	282d      	cmp	r0, #45	; 0x2d
1005233e:	d3e5      	bcc.n	1005230c <Blue_Init_Global+0x20>
10052340:	6812      	ldr	r2, [r2, #0]
10052342:	18d3      	adds	r3, r2, r3
10052344:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
10052346:	6258      	str	r0, [r3, #36]	; 0x24
10052348:	4604      	mov	r4, r0
1005234a:	3430      	adds	r4, #48	; 0x30
1005234c:	621c      	str	r4, [r3, #32]
1005234e:	3090      	adds	r0, #144	; 0x90
10052350:	61d8      	str	r0, [r3, #28]
10052352:	480b      	ldr	r0, [pc, #44]	; (10052380 <Blue_Init_Global+0x94>)
10052354:	4614      	mov	r4, r2
10052356:	3448      	adds	r4, #72	; 0x48
10052358:	8001      	strh	r1, [r0, #0]
1005235a:	2109      	movs	r1, #9
1005235c:	7141      	strb	r1, [r0, #5]
1005235e:	2305      	movs	r3, #5
10052360:	7183      	strb	r3, [r0, #6]
10052362:	71c1      	strb	r1, [r0, #7]
10052364:	7203      	strb	r3, [r0, #8]
10052366:	8142      	strh	r2, [r0, #10]
10052368:	f7ff fee2 	bl	10052130 <Blue_Set_Radio_Config_Data>
1005236c:	20ff      	movs	r0, #255	; 0xff
1005236e:	7020      	strb	r0, [r4, #0]
10052370:	7060      	strb	r0, [r4, #1]
10052372:	70a0      	strb	r0, [r4, #2]
10052374:	70e0      	strb	r0, [r4, #3]
10052376:	201f      	movs	r0, #31
10052378:	7120      	strb	r0, [r4, #4]
1005237a:	bd70      	pop	{r4, r5, r6, pc}
1005237c:	2000098c 	.word	0x2000098c
10052380:	200000c0 	.word	0x200000c0

10052384 <advance_transmit>:
10052384:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10052386:	4852      	ldr	r0, [pc, #328]	; (100524d0 <advance_transmit+0x14c>)
10052388:	8800      	ldrh	r0, [r0, #0]
1005238a:	2358      	movs	r3, #88	; 0x58
1005238c:	0741      	lsls	r1, r0, #29
1005238e:	4851      	ldr	r0, [pc, #324]	; (100524d4 <advance_transmit+0x150>)
10052390:	0f49      	lsrs	r1, r1, #29
10052392:	6802      	ldr	r2, [r0, #0]
10052394:	2009      	movs	r0, #9
10052396:	0200      	lsls	r0, r0, #8
10052398:	1810      	adds	r0, r2, r0
1005239a:	6b02      	ldr	r2, [r0, #48]	; 0x30
1005239c:	4359      	muls	r1, r3
1005239e:	1854      	adds	r4, r2, r1
100523a0:	78a2      	ldrb	r2, [r4, #2]
100523a2:	6925      	ldr	r5, [r4, #16]
100523a4:	0752      	lsls	r2, r2, #29
100523a6:	0f52      	lsrs	r2, r2, #29
100523a8:	6a21      	ldr	r1, [r4, #32]
100523aa:	9200      	str	r2, [sp, #0]
100523ac:	2a02      	cmp	r2, #2
100523ae:	d001      	beq.n	100523b4 <advance_transmit+0x30>
100523b0:	2a05      	cmp	r2, #5
100523b2:	d120      	bne.n	100523f6 <advance_transmit+0x72>
100523b4:	042a      	lsls	r2, r5, #16
100523b6:	d404      	bmi.n	100523c2 <advance_transmit+0x3e>
100523b8:	7962      	ldrb	r2, [r4, #5]
100523ba:	0792      	lsls	r2, r2, #30
100523bc:	d101      	bne.n	100523c2 <advance_transmit+0x3e>
100523be:	2900      	cmp	r1, #0
100523c0:	d019      	beq.n	100523f6 <advance_transmit+0x72>
100523c2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
100523c4:	4a44      	ldr	r2, [pc, #272]	; (100524d8 <advance_transmit+0x154>)
100523c6:	042b      	lsls	r3, r5, #16
100523c8:	d543      	bpl.n	10052452 <advance_transmit+0xce>
100523ca:	7963      	ldrb	r3, [r4, #5]
100523cc:	079b      	lsls	r3, r3, #30
100523ce:	d015      	beq.n	100523fc <advance_transmit+0x78>
100523d0:	6b67      	ldr	r7, [r4, #52]	; 0x34
100523d2:	8077      	strh	r7, [r6, #2]
100523d4:	2001      	movs	r0, #1
100523d6:	03c0      	lsls	r0, r0, #15
100523d8:	4385      	bics	r5, r0
100523da:	6125      	str	r5, [r4, #16]
100523dc:	f7fa fb19 	bl	1004ca12 <data_length_extension_csr_ucfg>
100523e0:	2801      	cmp	r0, #1
100523e2:	d009      	beq.n	100523f8 <advance_transmit+0x74>
100523e4:	211f      	movs	r1, #31
100523e6:	7878      	ldrb	r0, [r7, #1]
100523e8:	4201      	tst	r1, r0
100523ea:	d004      	beq.n	100523f6 <advance_transmit+0x72>
100523ec:	8a21      	ldrh	r1, [r4, #16]
100523ee:	0489      	lsls	r1, r1, #18
100523f0:	d501      	bpl.n	100523f6 <advance_transmit+0x72>
100523f2:	1d00      	adds	r0, r0, #4
100523f4:	7078      	strb	r0, [r7, #1]
100523f6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100523f8:	21ff      	movs	r1, #255	; 0xff
100523fa:	e7f4      	b.n	100523e6 <advance_transmit+0x62>
100523fc:	2900      	cmp	r1, #0
100523fe:	d0fa      	beq.n	100523f6 <advance_transmit+0x72>
10052400:	4215      	tst	r5, r2
10052402:	d1f8      	bne.n	100523f6 <advance_transmit+0x72>
10052404:	7c0a      	ldrb	r2, [r1, #16]
10052406:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
10052408:	06d2      	lsls	r2, r2, #27
1005240a:	0ed2      	lsrs	r2, r2, #27
1005240c:	1c92      	adds	r2, r2, #2
1005240e:	1817      	adds	r7, r2, r0
10052410:	b2b8      	uxth	r0, r7
10052412:	9001      	str	r0, [sp, #4]
10052414:	8070      	strh	r0, [r6, #2]
10052416:	4620      	mov	r0, r4
10052418:	f7fb fa4a 	bl	1004d8b0 <copy_tx_data_packet>
1005241c:	2001      	movs	r0, #1
1005241e:	03c0      	lsls	r0, r0, #15
10052420:	4385      	bics	r5, r0
10052422:	6125      	str	r5, [r4, #16]
10052424:	1105      	asrs	r5, r0, #4
10052426:	9800      	ldr	r0, [sp, #0]
10052428:	2805      	cmp	r0, #5
1005242a:	d100      	bne.n	1005242e <advance_transmit+0xaa>
1005242c:	00ad      	lsls	r5, r5, #2
1005242e:	f7fa faf0 	bl	1004ca12 <data_length_extension_csr_ucfg>
10052432:	2801      	cmp	r0, #1
10052434:	d00b      	beq.n	1005244e <advance_transmit+0xca>
10052436:	211f      	movs	r1, #31
10052438:	7878      	ldrb	r0, [r7, #1]
1005243a:	4201      	tst	r1, r0
1005243c:	d004      	beq.n	10052448 <advance_transmit+0xc4>
1005243e:	6921      	ldr	r1, [r4, #16]
10052440:	4229      	tst	r1, r5
10052442:	d001      	beq.n	10052448 <advance_transmit+0xc4>
10052444:	1d00      	adds	r0, r0, #4
10052446:	7078      	strb	r0, [r7, #1]
10052448:	9801      	ldr	r0, [sp, #4]
1005244a:	8070      	strh	r0, [r6, #2]
1005244c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005244e:	21ff      	movs	r1, #255	; 0xff
10052450:	e7f2      	b.n	10052438 <advance_transmit+0xb4>
10052452:	8870      	ldrh	r0, [r6, #2]
10052454:	2301      	movs	r3, #1
10052456:	075b      	lsls	r3, r3, #29
10052458:	18c0      	adds	r0, r0, r3
1005245a:	7963      	ldrb	r3, [r4, #5]
1005245c:	469c      	mov	ip, r3
1005245e:	079b      	lsls	r3, r3, #30
10052460:	d004      	beq.n	1005246c <advance_transmit+0xe8>
10052462:	6b63      	ldr	r3, [r4, #52]	; 0x34
10052464:	4283      	cmp	r3, r0
10052466:	d001      	beq.n	1005246c <advance_transmit+0xe8>
10052468:	2701      	movs	r7, #1
1005246a:	e000      	b.n	1005246e <advance_transmit+0xea>
1005246c:	2700      	movs	r7, #0
1005246e:	6b66      	ldr	r6, [r4, #52]	; 0x34
10052470:	4286      	cmp	r6, r0
10052472:	d002      	beq.n	1005247a <advance_transmit+0xf6>
10052474:	8823      	ldrh	r3, [r4, #0]
10052476:	4283      	cmp	r3, r0
10052478:	d112      	bne.n	100524a0 <advance_transmit+0x11c>
1005247a:	2900      	cmp	r1, #0
1005247c:	d012      	beq.n	100524a4 <advance_transmit+0x120>
1005247e:	4215      	tst	r5, r2
10052480:	d10e      	bne.n	100524a0 <advance_transmit+0x11c>
10052482:	2301      	movs	r3, #1
10052484:	2900      	cmp	r1, #0
10052486:	d00e      	beq.n	100524a6 <advance_transmit+0x122>
10052488:	4286      	cmp	r6, r0
1005248a:	d00c      	beq.n	100524a6 <advance_transmit+0x122>
1005248c:	8824      	ldrh	r4, [r4, #0]
1005248e:	4284      	cmp	r4, r0
10052490:	d009      	beq.n	100524a6 <advance_transmit+0x122>
10052492:	6809      	ldr	r1, [r1, #0]
10052494:	2900      	cmp	r1, #0
10052496:	d006      	beq.n	100524a6 <advance_transmit+0x122>
10052498:	4215      	tst	r5, r2
1005249a:	d104      	bne.n	100524a6 <advance_transmit+0x122>
1005249c:	2101      	movs	r1, #1
1005249e:	e003      	b.n	100524a8 <advance_transmit+0x124>
100524a0:	2300      	movs	r3, #0
100524a2:	e7ef      	b.n	10052484 <advance_transmit+0x100>
100524a4:	2300      	movs	r3, #0
100524a6:	2100      	movs	r1, #0
100524a8:	4662      	mov	r2, ip
100524aa:	0692      	lsls	r2, r2, #26
100524ac:	0f92      	lsrs	r2, r2, #30
100524ae:	d003      	beq.n	100524b8 <advance_transmit+0x134>
100524b0:	2200      	movs	r2, #0
100524b2:	2f00      	cmp	r7, #0
100524b4:	d106      	bne.n	100524c4 <advance_transmit+0x140>
100524b6:	e001      	b.n	100524bc <advance_transmit+0x138>
100524b8:	2201      	movs	r2, #1
100524ba:	e7fa      	b.n	100524b2 <advance_transmit+0x12e>
100524bc:	430b      	orrs	r3, r1
100524be:	d0c5      	beq.n	1005244c <advance_transmit+0xc8>
100524c0:	2a00      	cmp	r2, #0
100524c2:	d0c3      	beq.n	1005244c <advance_transmit+0xc8>
100524c4:	7801      	ldrb	r1, [r0, #0]
100524c6:	2210      	movs	r2, #16
100524c8:	4311      	orrs	r1, r2
100524ca:	7001      	strb	r1, [r0, #0]
100524cc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100524ce:	0000      	.short	0x0000
100524d0:	200000c0 	.word	0x200000c0
100524d4:	2000098c 	.word	0x2000098c
100524d8:	00000660 	.word	0x00000660

100524dc <microseconds_to_machine_time>:
100524dc:	0141      	lsls	r1, r0, #5
100524de:	1840      	adds	r0, r0, r1
100524e0:	0980      	lsrs	r0, r0, #6
100524e2:	4770      	bx	lr

100524e4 <slave_advance>:
100524e4:	b5f0      	push	{r4, r5, r6, r7, lr}
100524e6:	4d7d      	ldr	r5, [pc, #500]	; (100526dc <slave_advance+0x1f8>)
100524e8:	4604      	mov	r4, r0
100524ea:	2141      	movs	r1, #65	; 0x41
100524ec:	6828      	ldr	r0, [r5, #0]
100524ee:	0149      	lsls	r1, r1, #5
100524f0:	b091      	sub	sp, #68	; 0x44
100524f2:	1840      	adds	r0, r0, r1
100524f4:	9008      	str	r0, [sp, #32]
100524f6:	2000      	movs	r0, #0
100524f8:	900d      	str	r0, [sp, #52]	; 0x34
100524fa:	b672      	cpsid	i
100524fc:	f005 fc28 	bl	10057d50 <LL_Sleep_Req>
10052500:	2800      	cmp	r0, #0
10052502:	d101      	bne.n	10052508 <slave_advance+0x24>
10052504:	2c00      	cmp	r4, #0
10052506:	d007      	beq.n	10052518 <slave_advance+0x34>
10052508:	4874      	ldr	r0, [pc, #464]	; (100526dc <slave_advance+0x1f8>)
1005250a:	2400      	movs	r4, #0
1005250c:	6801      	ldr	r1, [r0, #0]
1005250e:	2009      	movs	r0, #9
10052510:	0200      	lsls	r0, r0, #8
10052512:	1808      	adds	r0, r1, r0
10052514:	7846      	ldrb	r6, [r0, #1]
10052516:	e0dd      	b.n	100526d4 <slave_advance+0x1f0>
10052518:	b662      	cpsie	i
1005251a:	980d      	ldr	r0, [sp, #52]	; 0x34
1005251c:	b011      	add	sp, #68	; 0x44
1005251e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052520:	07f0      	lsls	r0, r6, #31
10052522:	d07d      	beq.n	10052620 <slave_advance+0x13c>
10052524:	496e      	ldr	r1, [pc, #440]	; (100526e0 <slave_advance+0x1fc>)
10052526:	01a0      	lsls	r0, r4, #6
10052528:	1840      	adds	r0, r0, r1
1005252a:	900e      	str	r0, [sp, #56]	; 0x38
1005252c:	486b      	ldr	r0, [pc, #428]	; (100526dc <slave_advance+0x1f8>)
1005252e:	6801      	ldr	r1, [r0, #0]
10052530:	2009      	movs	r0, #9
10052532:	0200      	lsls	r0, r0, #8
10052534:	1808      	adds	r0, r1, r0
10052536:	6b01      	ldr	r1, [r0, #48]	; 0x30
10052538:	2058      	movs	r0, #88	; 0x58
1005253a:	4360      	muls	r0, r4
1005253c:	180d      	adds	r5, r1, r0
1005253e:	78a9      	ldrb	r1, [r5, #2]
10052540:	6a28      	ldr	r0, [r5, #32]
10052542:	0749      	lsls	r1, r1, #29
10052544:	0f49      	lsrs	r1, r1, #29
10052546:	2902      	cmp	r1, #2
10052548:	d14a      	bne.n	100525e0 <slave_advance+0xfc>
1005254a:	79a9      	ldrb	r1, [r5, #6]
1005254c:	0749      	lsls	r1, r1, #29
1005254e:	d447      	bmi.n	100525e0 <slave_advance+0xfc>
10052550:	2800      	cmp	r0, #0
10052552:	d045      	beq.n	100525e0 <slave_advance+0xfc>
10052554:	8f28      	ldrh	r0, [r5, #56]	; 0x38
10052556:	0040      	lsls	r0, r0, #1
10052558:	9009      	str	r0, [sp, #36]	; 0x24
1005255a:	0200      	lsls	r0, r0, #8
1005255c:	f7ff fe34 	bl	100521c8 <machine_time_trans>
10052560:	9003      	str	r0, [sp, #12]
10052562:	2000      	movs	r0, #0
10052564:	900f      	str	r0, [sp, #60]	; 0x3c
10052566:	485d      	ldr	r0, [pc, #372]	; (100526dc <slave_advance+0x1f8>)
10052568:	2136      	movs	r1, #54	; 0x36
1005256a:	6800      	ldr	r0, [r0, #0]
1005256c:	5c09      	ldrb	r1, [r1, r0]
1005256e:	070a      	lsls	r2, r1, #28
10052570:	d40a      	bmi.n	10052588 <slave_advance+0xa4>
10052572:	0749      	lsls	r1, r1, #29
10052574:	0f49      	lsrs	r1, r1, #29
10052576:	42a1      	cmp	r1, r4
10052578:	d106      	bne.n	10052588 <slave_advance+0xa4>
1005257a:	2101      	movs	r1, #1
1005257c:	3080      	adds	r0, #128	; 0x80
1005257e:	910f      	str	r1, [sp, #60]	; 0x3c
10052580:	6c41      	ldr	r1, [r0, #68]	; 0x44
10052582:	9101      	str	r1, [sp, #4]
10052584:	6c80      	ldr	r0, [r0, #72]	; 0x48
10052586:	e006      	b.n	10052596 <slave_advance+0xb2>
10052588:	9908      	ldr	r1, [sp, #32]
1005258a:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
1005258c:	9101      	str	r1, [sp, #4]
1005258e:	210f      	movs	r1, #15
10052590:	01c9      	lsls	r1, r1, #7
10052592:	1840      	adds	r0, r0, r1
10052594:	6e40      	ldr	r0, [r0, #100]	; 0x64
10052596:	9000      	str	r0, [sp, #0]
10052598:	20ff      	movs	r0, #255	; 0xff
1005259a:	305f      	adds	r0, #95	; 0x5f
1005259c:	f7ff fe14 	bl	100521c8 <machine_time_trans>
100525a0:	494f      	ldr	r1, [pc, #316]	; (100526e0 <slave_advance+0x1fc>)
100525a2:	390c      	subs	r1, #12
100525a4:	7a49      	ldrb	r1, [r1, #9]
100525a6:	00c9      	lsls	r1, r1, #3
100525a8:	1841      	adds	r1, r0, r1
100525aa:	9800      	ldr	r0, [sp, #0]
100525ac:	1a41      	subs	r1, r0, r1
100525ae:	9803      	ldr	r0, [sp, #12]
100525b0:	1a08      	subs	r0, r1, r0
100525b2:	9007      	str	r0, [sp, #28]
100525b4:	980e      	ldr	r0, [sp, #56]	; 0x38
100525b6:	210b      	movs	r1, #11
100525b8:	5641      	ldrsb	r1, [r0, r1]
100525ba:	3020      	adds	r0, #32
100525bc:	9105      	str	r1, [sp, #20]
100525be:	7800      	ldrb	r0, [r0, #0]
100525c0:	900a      	str	r0, [sp, #40]	; 0x28
100525c2:	2000      	movs	r0, #0
100525c4:	9002      	str	r0, [sp, #8]
100525c6:	8928      	ldrh	r0, [r5, #8]
100525c8:	9006      	str	r0, [sp, #24]
100525ca:	2009      	movs	r0, #9
100525cc:	06c0      	lsls	r0, r0, #27
100525ce:	6901      	ldr	r1, [r0, #16]
100525d0:	9807      	ldr	r0, [sp, #28]
100525d2:	1a40      	subs	r0, r0, r1
100525d4:	0207      	lsls	r7, r0, #8
100525d6:	2001      	movs	r0, #1
100525d8:	0a3f      	lsrs	r7, r7, #8
100525da:	05c0      	lsls	r0, r0, #23
100525dc:	4287      	cmp	r7, r0
100525de:	d329      	bcc.n	10052634 <slave_advance+0x150>
100525e0:	e06b      	b.n	100526ba <slave_advance+0x1d6>
100525e2:	2001      	movs	r0, #1
100525e4:	900d      	str	r0, [sp, #52]	; 0x34
100525e6:	9903      	ldr	r1, [sp, #12]
100525e8:	9807      	ldr	r0, [sp, #28]
100525ea:	1a40      	subs	r0, r0, r1
100525ec:	9007      	str	r0, [sp, #28]
100525ee:	9802      	ldr	r0, [sp, #8]
100525f0:	1840      	adds	r0, r0, r1
100525f2:	9002      	str	r0, [sp, #8]
100525f4:	9909      	ldr	r1, [sp, #36]	; 0x24
100525f6:	9801      	ldr	r0, [sp, #4]
100525f8:	1a40      	subs	r0, r0, r1
100525fa:	9001      	str	r0, [sp, #4]
100525fc:	6969      	ldr	r1, [r5, #20]
100525fe:	9809      	ldr	r0, [sp, #36]	; 0x24
10052600:	1808      	adds	r0, r1, r0
10052602:	6168      	str	r0, [r5, #20]
10052604:	9905      	ldr	r1, [sp, #20]
10052606:	980a      	ldr	r0, [sp, #40]	; 0x28
10052608:	1a08      	subs	r0, r1, r0
1005260a:	b240      	sxtb	r0, r0
1005260c:	9005      	str	r0, [sp, #20]
1005260e:	9806      	ldr	r0, [sp, #24]
10052610:	1e40      	subs	r0, r0, #1
10052612:	b280      	uxth	r0, r0
10052614:	9006      	str	r0, [sp, #24]
10052616:	9805      	ldr	r0, [sp, #20]
10052618:	2800      	cmp	r0, #0
1005261a:	da04      	bge.n	10052626 <slave_advance+0x142>
1005261c:	3025      	adds	r0, #37	; 0x25
1005261e:	e000      	b.n	10052622 <slave_advance+0x13e>
10052620:	e055      	b.n	100526ce <slave_advance+0x1ea>
10052622:	b240      	sxtb	r0, r0
10052624:	9005      	str	r0, [sp, #20]
10052626:	2009      	movs	r0, #9
10052628:	06c0      	lsls	r0, r0, #27
1005262a:	6901      	ldr	r1, [r0, #16]
1005262c:	9807      	ldr	r0, [sp, #28]
1005262e:	1a40      	subs	r0, r0, r1
10052630:	0207      	lsls	r7, r0, #8
10052632:	0a3f      	lsrs	r7, r7, #8
10052634:	2064      	movs	r0, #100	; 0x64
10052636:	f7ff fdc7 	bl	100521c8 <machine_time_trans>
1005263a:	4929      	ldr	r1, [pc, #164]	; (100526e0 <slave_advance+0x1fc>)
1005263c:	390c      	subs	r1, #12
1005263e:	7a49      	ldrb	r1, [r1, #9]
10052640:	00c9      	lsls	r1, r1, #3
10052642:	1841      	adds	r1, r0, r1
10052644:	4825      	ldr	r0, [pc, #148]	; (100526dc <slave_advance+0x1f8>)
10052646:	6800      	ldr	r0, [r0, #0]
10052648:	6a80      	ldr	r0, [r0, #40]	; 0x28
1005264a:	1808      	adds	r0, r1, r0
1005264c:	42b8      	cmp	r0, r7
1005264e:	d207      	bcs.n	10052660 <slave_advance+0x17c>
10052650:	2001      	movs	r0, #1
10052652:	05c0      	lsls	r0, r0, #23
10052654:	4287      	cmp	r7, r0
10052656:	d203      	bcs.n	10052660 <slave_advance+0x17c>
10052658:	9909      	ldr	r1, [sp, #36]	; 0x24
1005265a:	9801      	ldr	r0, [sp, #4]
1005265c:	4288      	cmp	r0, r1
1005265e:	d8c0      	bhi.n	100525e2 <slave_advance+0xfe>
10052660:	9902      	ldr	r1, [sp, #8]
10052662:	9800      	ldr	r0, [sp, #0]
10052664:	1a40      	subs	r0, r0, r1
10052666:	0200      	lsls	r0, r0, #8
10052668:	990d      	ldr	r1, [sp, #52]	; 0x34
1005266a:	0a00      	lsrs	r0, r0, #8
1005266c:	2900      	cmp	r1, #0
1005266e:	d00c      	beq.n	1005268a <slave_advance+0x1a6>
10052670:	491a      	ldr	r1, [pc, #104]	; (100526dc <slave_advance+0x1f8>)
10052672:	2201      	movs	r2, #1
10052674:	6809      	ldr	r1, [r1, #0]
10052676:	02d2      	lsls	r2, r2, #11
10052678:	1889      	adds	r1, r1, r2
1005267a:	6f09      	ldr	r1, [r1, #112]	; 0x70
1005267c:	1a41      	subs	r1, r0, r1
1005267e:	0209      	lsls	r1, r1, #8
10052680:	1209      	asrs	r1, r1, #8
10052682:	2900      	cmp	r1, #0
10052684:	dd01      	ble.n	1005268a <slave_advance+0x1a6>
10052686:	2100      	movs	r1, #0
10052688:	910d      	str	r1, [sp, #52]	; 0x34
1005268a:	990f      	ldr	r1, [sp, #60]	; 0x3c
1005268c:	2900      	cmp	r1, #0
1005268e:	d006      	beq.n	1005269e <slave_advance+0x1ba>
10052690:	4912      	ldr	r1, [pc, #72]	; (100526dc <slave_advance+0x1f8>)
10052692:	9a01      	ldr	r2, [sp, #4]
10052694:	6809      	ldr	r1, [r1, #0]
10052696:	3180      	adds	r1, #128	; 0x80
10052698:	644a      	str	r2, [r1, #68]	; 0x44
1005269a:	6488      	str	r0, [r1, #72]	; 0x48
1005269c:	e008      	b.n	100526b0 <slave_advance+0x1cc>
1005269e:	9a08      	ldr	r2, [sp, #32]
100526a0:	9901      	ldr	r1, [sp, #4]
100526a2:	64d1      	str	r1, [r2, #76]	; 0x4c
100526a4:	490d      	ldr	r1, [pc, #52]	; (100526dc <slave_advance+0x1f8>)
100526a6:	680a      	ldr	r2, [r1, #0]
100526a8:	210f      	movs	r1, #15
100526aa:	01c9      	lsls	r1, r1, #7
100526ac:	1851      	adds	r1, r2, r1
100526ae:	6648      	str	r0, [r1, #100]	; 0x64
100526b0:	990e      	ldr	r1, [sp, #56]	; 0x38
100526b2:	9805      	ldr	r0, [sp, #20]
100526b4:	72c8      	strb	r0, [r1, #11]
100526b6:	9806      	ldr	r0, [sp, #24]
100526b8:	8128      	strh	r0, [r5, #8]
100526ba:	4808      	ldr	r0, [pc, #32]	; (100526dc <slave_advance+0x1f8>)
100526bc:	2201      	movs	r2, #1
100526be:	6801      	ldr	r1, [r0, #0]
100526c0:	2009      	movs	r0, #9
100526c2:	0200      	lsls	r0, r0, #8
100526c4:	1808      	adds	r0, r1, r0
100526c6:	7841      	ldrb	r1, [r0, #1]
100526c8:	40a2      	lsls	r2, r4
100526ca:	4391      	bics	r1, r2
100526cc:	7041      	strb	r1, [r0, #1]
100526ce:	1c64      	adds	r4, r4, #1
100526d0:	b2e4      	uxtb	r4, r4
100526d2:	0876      	lsrs	r6, r6, #1
100526d4:	2e00      	cmp	r6, #0
100526d6:	d000      	beq.n	100526da <slave_advance+0x1f6>
100526d8:	e722      	b.n	10052520 <slave_advance+0x3c>
100526da:	e71d      	b.n	10052518 <slave_advance+0x34>
100526dc:	2000098c 	.word	0x2000098c
100526e0:	200000cc 	.word	0x200000cc

100526e4 <swap_slaves>:
100526e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100526e6:	4d4c      	ldr	r5, [pc, #304]	; (10052818 <swap_slaves+0x134>)
100526e8:	2141      	movs	r1, #65	; 0x41
100526ea:	6828      	ldr	r0, [r5, #0]
100526ec:	0149      	lsls	r1, r1, #5
100526ee:	1844      	adds	r4, r0, r1
100526f0:	4626      	mov	r6, r4
100526f2:	3640      	adds	r6, #64	; 0x40
100526f4:	8bb0      	ldrh	r0, [r6, #28]
100526f6:	f7ff fdbb 	bl	10052270 <set_sca>
100526fa:	6829      	ldr	r1, [r5, #0]
100526fc:	3140      	adds	r1, #64	; 0x40
100526fe:	8e09      	ldrh	r1, [r1, #48]	; 0x30
10052700:	1840      	adds	r0, r0, r1
10052702:	b280      	uxth	r0, r0
10052704:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
10052706:	f7ff fd56 	bl	100521b6 <WindowWiden2>
1005270a:	4607      	mov	r7, r0
1005270c:	7fb0      	ldrb	r0, [r6, #30]
1005270e:	f7ff fde5 	bl	100522dc <time_offset2>
10052712:	6da1      	ldr	r1, [r4, #88]	; 0x58
10052714:	1838      	adds	r0, r7, r0
10052716:	1841      	adds	r1, r0, r1
10052718:	2007      	movs	r0, #7
1005271a:	0500      	lsls	r0, r0, #20
1005271c:	4301      	orrs	r1, r0
1005271e:	9100      	str	r1, [sp, #0]
10052720:	4a3e      	ldr	r2, [pc, #248]	; (1005281c <swap_slaves+0x138>)
10052722:	6829      	ldr	r1, [r5, #0]
10052724:	1888      	adds	r0, r1, r2
10052726:	3136      	adds	r1, #54	; 0x36
10052728:	f000 f884 	bl	10052834 <swap_u8>
1005272c:	213f      	movs	r1, #63	; 0x3f
1005272e:	6828      	ldr	r0, [r5, #0]
10052730:	0149      	lsls	r1, r1, #5
10052732:	1842      	adds	r2, r0, r1
10052734:	7a91      	ldrb	r1, [r2, #10]
10052736:	074b      	lsls	r3, r1, #29
10052738:	4601      	mov	r1, r0
1005273a:	3120      	adds	r1, #32
1005273c:	7d8e      	ldrb	r6, [r1, #22]
1005273e:	0f5b      	lsrs	r3, r3, #29
10052740:	0937      	lsrs	r7, r6, #4
10052742:	013f      	lsls	r7, r7, #4
10052744:	433b      	orrs	r3, r7
10052746:	7293      	strb	r3, [r2, #10]
10052748:	0772      	lsls	r2, r6, #29
1005274a:	0f52      	lsrs	r2, r2, #29
1005274c:	758a      	strb	r2, [r1, #22]
1005274e:	4a33      	ldr	r2, [pc, #204]	; (1005281c <swap_slaves+0x138>)
10052750:	31a8      	adds	r1, #168	; 0xa8
10052752:	1f92      	subs	r2, r2, #6
10052754:	1880      	adds	r0, r0, r2
10052756:	f000 f868 	bl	1005282a <swap_u32>
1005275a:	6828      	ldr	r0, [r5, #0]
1005275c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
1005275e:	30c0      	adds	r0, #192	; 0xc0
10052760:	6802      	ldr	r2, [r0, #0]
10052762:	64a2      	str	r2, [r4, #72]	; 0x48
10052764:	6001      	str	r1, [r0, #0]
10052766:	6828      	ldr	r0, [r5, #0]
10052768:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
1005276a:	30c4      	adds	r0, #196	; 0xc4
1005276c:	6802      	ldr	r2, [r0, #0]
1005276e:	64e2      	str	r2, [r4, #76]	; 0x4c
10052770:	6001      	str	r1, [r0, #0]
10052772:	6828      	ldr	r0, [r5, #0]
10052774:	9900      	ldr	r1, [sp, #0]
10052776:	22cc      	movs	r2, #204	; 0xcc
10052778:	5011      	str	r1, [r2, r0]
1005277a:	30d0      	adds	r0, #208	; 0xd0
1005277c:	6da1      	ldr	r1, [r4, #88]	; 0x58
1005277e:	6802      	ldr	r2, [r0, #0]
10052780:	65a2      	str	r2, [r4, #88]	; 0x58
10052782:	6001      	str	r1, [r0, #0]
10052784:	6828      	ldr	r0, [r5, #0]
10052786:	6d61      	ldr	r1, [r4, #84]	; 0x54
10052788:	30d4      	adds	r0, #212	; 0xd4
1005278a:	6802      	ldr	r2, [r0, #0]
1005278c:	6562      	str	r2, [r4, #84]	; 0x54
1005278e:	6001      	str	r1, [r0, #0]
10052790:	6829      	ldr	r1, [r5, #0]
10052792:	4620      	mov	r0, r4
10052794:	305c      	adds	r0, #92	; 0x5c
10052796:	31d8      	adds	r1, #216	; 0xd8
10052798:	f000 f842 	bl	10052820 <swap_u16>
1005279c:	6829      	ldr	r1, [r5, #0]
1005279e:	4620      	mov	r0, r4
100527a0:	305e      	adds	r0, #94	; 0x5e
100527a2:	31da      	adds	r1, #218	; 0xda
100527a4:	f000 f846 	bl	10052834 <swap_u8>
100527a8:	6829      	ldr	r1, [r5, #0]
100527aa:	4620      	mov	r0, r4
100527ac:	3060      	adds	r0, #96	; 0x60
100527ae:	31db      	adds	r1, #219	; 0xdb
100527b0:	f000 f840 	bl	10052834 <swap_u8>
100527b4:	6829      	ldr	r1, [r5, #0]
100527b6:	4620      	mov	r0, r4
100527b8:	3064      	adds	r0, #100	; 0x64
100527ba:	31dc      	adds	r1, #220	; 0xdc
100527bc:	f000 f830 	bl	10052820 <swap_u16>
100527c0:	6829      	ldr	r1, [r5, #0]
100527c2:	4620      	mov	r0, r4
100527c4:	3068      	adds	r0, #104	; 0x68
100527c6:	31de      	adds	r1, #222	; 0xde
100527c8:	f000 f82a 	bl	10052820 <swap_u16>
100527cc:	6829      	ldr	r1, [r5, #0]
100527ce:	4620      	mov	r0, r4
100527d0:	306c      	adds	r0, #108	; 0x6c
100527d2:	31e0      	adds	r1, #224	; 0xe0
100527d4:	f000 f824 	bl	10052820 <swap_u16>
100527d8:	6829      	ldr	r1, [r5, #0]
100527da:	4620      	mov	r0, r4
100527dc:	3070      	adds	r0, #112	; 0x70
100527de:	31e2      	adds	r1, #226	; 0xe2
100527e0:	f000 f81e 	bl	10052820 <swap_u16>
100527e4:	6829      	ldr	r1, [r5, #0]
100527e6:	4620      	mov	r0, r4
100527e8:	3074      	adds	r0, #116	; 0x74
100527ea:	31e4      	adds	r1, #228	; 0xe4
100527ec:	f000 f818 	bl	10052820 <swap_u16>
100527f0:	6829      	ldr	r1, [r5, #0]
100527f2:	4620      	mov	r0, r4
100527f4:	3078      	adds	r0, #120	; 0x78
100527f6:	31e6      	adds	r1, #230	; 0xe6
100527f8:	f000 f812 	bl	10052820 <swap_u16>
100527fc:	6829      	ldr	r1, [r5, #0]
100527fe:	4620      	mov	r0, r4
10052800:	307b      	adds	r0, #123	; 0x7b
10052802:	31e8      	adds	r1, #232	; 0xe8
10052804:	f000 f816 	bl	10052834 <swap_u8>
10052808:	6829      	ldr	r1, [r5, #0]
1005280a:	4620      	mov	r0, r4
1005280c:	3084      	adds	r0, #132	; 0x84
1005280e:	31ec      	adds	r1, #236	; 0xec
10052810:	f000 f80b 	bl	1005282a <swap_u32>
10052814:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10052816:	0000      	.short	0x0000
10052818:	2000098c 	.word	0x2000098c
1005281c:	000007ea 	.word	0x000007ea

10052820 <swap_u16>:
10052820:	8802      	ldrh	r2, [r0, #0]
10052822:	880b      	ldrh	r3, [r1, #0]
10052824:	8003      	strh	r3, [r0, #0]
10052826:	800a      	strh	r2, [r1, #0]
10052828:	4770      	bx	lr

1005282a <swap_u32>:
1005282a:	6802      	ldr	r2, [r0, #0]
1005282c:	680b      	ldr	r3, [r1, #0]
1005282e:	6003      	str	r3, [r0, #0]
10052830:	600a      	str	r2, [r1, #0]
10052832:	4770      	bx	lr

10052834 <swap_u8>:
10052834:	7802      	ldrb	r2, [r0, #0]
10052836:	780b      	ldrb	r3, [r1, #0]
10052838:	7003      	strb	r3, [r0, #0]
1005283a:	700a      	strb	r2, [r1, #0]
1005283c:	4770      	bx	lr

1005283e <Erase_Sector>:
1005283e:	b510      	push	{r4, lr}
10052840:	01c0      	lsls	r0, r0, #7
10052842:	0c00      	lsrs	r0, r0, #16
10052844:	f7f1 fb22 	bl	10043e8c <FLASH_ErasePage>
10052848:	2000      	movs	r0, #0
1005284a:	bd10      	pop	{r4, pc}

1005284c <SDB_Add_Record>:
1005284c:	b40f      	push	{r0, r1, r2, r3}
1005284e:	b5f0      	push	{r4, r5, r6, r7, lr}
10052850:	4e5e      	ldr	r6, [pc, #376]	; (100529cc <SDB_Add_Record+0x180>)
10052852:	2709      	movs	r7, #9
10052854:	6830      	ldr	r0, [r6, #0]
10052856:	023f      	lsls	r7, r7, #8
10052858:	b097      	sub	sp, #92	; 0x5c
1005285a:	19c0      	adds	r0, r0, r7
1005285c:	6f45      	ldr	r5, [r0, #116]	; 0x74
1005285e:	2400      	movs	r4, #0
10052860:	4669      	mov	r1, sp
10052862:	a810      	add	r0, sp, #64	; 0x40
10052864:	700c      	strb	r4, [r1, #0]
10052866:	3002      	adds	r0, #2
10052868:	9016      	str	r0, [sp, #88]	; 0x58
1005286a:	306c      	adds	r0, #108	; 0x6c
1005286c:	9015      	str	r0, [sp, #84]	; 0x54
1005286e:	e01d      	b.n	100528ac <SDB_Add_Record+0x60>
10052870:	4669      	mov	r1, sp
10052872:	4628      	mov	r0, r5
10052874:	f000 fc8a 	bl	1005318c <sdb_read_record_validity>
10052878:	4668      	mov	r0, sp
1005287a:	7800      	ldrb	r0, [r0, #0]
1005287c:	28fe      	cmp	r0, #254	; 0xfe
1005287e:	d009      	beq.n	10052894 <SDB_Add_Record+0x48>
10052880:	28ff      	cmp	r0, #255	; 0xff
10052882:	d018      	beq.n	100528b6 <SDB_Add_Record+0x6a>
10052884:	2800      	cmp	r0, #0
10052886:	d010      	beq.n	100528aa <SDB_Add_Record+0x5e>
10052888:	20fa      	movs	r0, #250	; 0xfa
1005288a:	b017      	add	sp, #92	; 0x5c
1005288c:	bcf0      	pop	{r4, r5, r6, r7}
1005288e:	bc08      	pop	{r3}
10052890:	b004      	add	sp, #16
10052892:	4718      	bx	r3
10052894:	a901      	add	r1, sp, #4
10052896:	4628      	mov	r0, r5
10052898:	f000 fc66 	bl	10053168 <sdb_read_record>
1005289c:	2206      	movs	r2, #6
1005289e:	9916      	ldr	r1, [sp, #88]	; 0x58
100528a0:	9815      	ldr	r0, [sp, #84]	; 0x54
100528a2:	f7f0 fc94 	bl	100431ce <Osal_MemCmp>
100528a6:	2800      	cmp	r0, #0
100528a8:	d01f      	beq.n	100528ea <SDB_Add_Record+0x9e>
100528aa:	3514      	adds	r5, #20
100528ac:	4620      	mov	r0, r4
100528ae:	1c64      	adds	r4, r4, #1
100528b0:	b2e4      	uxtb	r4, r4
100528b2:	280c      	cmp	r0, #12
100528b4:	d3dc      	bcc.n	10052870 <SDB_Add_Record+0x24>
100528b6:	a818      	add	r0, sp, #96	; 0x60
100528b8:	7c40      	ldrb	r0, [r0, #17]
100528ba:	0900      	lsrs	r0, r0, #4
100528bc:	d0e5      	beq.n	1005288a <SDB_Add_Record+0x3e>
100528be:	2c0c      	cmp	r4, #12
100528c0:	d97e      	bls.n	100529c0 <SDB_Add_Record+0x174>
100528c2:	b672      	cpsid	i
100528c4:	f000 fb1e 	bl	10052f04 <sdb_delete>
100528c8:	b662      	cpsie	i
100528ca:	6830      	ldr	r0, [r6, #0]
100528cc:	4669      	mov	r1, sp
100528ce:	19c0      	adds	r0, r0, r7
100528d0:	6f45      	ldr	r5, [r0, #116]	; 0x74
100528d2:	20fe      	movs	r0, #254	; 0xfe
100528d4:	7008      	strb	r0, [r1, #0]
100528d6:	4669      	mov	r1, sp
100528d8:	4628      	mov	r0, r5
100528da:	f000 fc57 	bl	1005318c <sdb_read_record_validity>
100528de:	4668      	mov	r0, sp
100528e0:	7800      	ldrb	r0, [r0, #0]
100528e2:	28ff      	cmp	r0, #255	; 0xff
100528e4:	d06c      	beq.n	100529c0 <SDB_Add_Record+0x174>
100528e6:	3514      	adds	r5, #20
100528e8:	e7f5      	b.n	100528d6 <SDB_Add_Record+0x8a>
100528ea:	2250      	movs	r2, #80	; 0x50
100528ec:	a901      	add	r1, sp, #4
100528ee:	a81c      	add	r0, sp, #112	; 0x70
100528f0:	f7f0 fc6d 	bl	100431ce <Osal_MemCmp>
100528f4:	2800      	cmp	r0, #0
100528f6:	d0c8      	beq.n	1005288a <SDB_Add_Record+0x3e>
100528f8:	4628      	mov	r0, r5
100528fa:	f000 fc25 	bl	10053148 <sdb_invalidate_record>
100528fe:	e00c      	b.n	1005291a <SDB_Add_Record+0xce>
10052900:	3514      	adds	r5, #20
10052902:	4669      	mov	r1, sp
10052904:	4628      	mov	r0, r5
10052906:	f000 fc41 	bl	1005318c <sdb_read_record_validity>
1005290a:	4668      	mov	r0, sp
1005290c:	7800      	ldrb	r0, [r0, #0]
1005290e:	28fe      	cmp	r0, #254	; 0xfe
10052910:	d003      	beq.n	1005291a <SDB_Add_Record+0xce>
10052912:	2800      	cmp	r0, #0
10052914:	d001      	beq.n	1005291a <SDB_Add_Record+0xce>
10052916:	28ff      	cmp	r0, #255	; 0xff
10052918:	d1b6      	bne.n	10052888 <SDB_Add_Record+0x3c>
1005291a:	4620      	mov	r0, r4
1005291c:	1c64      	adds	r4, r4, #1
1005291e:	b2e4      	uxtb	r4, r4
10052920:	280c      	cmp	r0, #12
10052922:	d203      	bcs.n	1005292c <SDB_Add_Record+0xe0>
10052924:	4668      	mov	r0, sp
10052926:	7800      	ldrb	r0, [r0, #0]
10052928:	28ff      	cmp	r0, #255	; 0xff
1005292a:	d1e9      	bne.n	10052900 <SDB_Add_Record+0xb4>
1005292c:	a818      	add	r0, sp, #96	; 0x60
1005292e:	7cc1      	ldrb	r1, [r0, #19]
10052930:	4668      	mov	r0, sp
10052932:	79c0      	ldrb	r0, [r0, #7]
10052934:	4281      	cmp	r1, r0
10052936:	d1be      	bne.n	100528b6 <SDB_Add_Record+0x6a>
10052938:	a818      	add	r0, sp, #96	; 0x60
1005293a:	7c40      	ldrb	r0, [r0, #17]
1005293c:	06c0      	lsls	r0, r0, #27
1005293e:	d40e      	bmi.n	1005295e <SDB_Add_Record+0x112>
10052940:	4668      	mov	r0, sp
10052942:	7940      	ldrb	r0, [r0, #5]
10052944:	06c0      	lsls	r0, r0, #27
10052946:	d50a      	bpl.n	1005295e <SDB_Add_Record+0x112>
10052948:	2202      	movs	r2, #2
1005294a:	a912      	add	r1, sp, #72	; 0x48
1005294c:	a82d      	add	r0, sp, #180	; 0xb4
1005294e:	f7f0 fc36 	bl	100431be <Osal_MemCpy>
10052952:	a918      	add	r1, sp, #96	; 0x60
10052954:	7c48      	ldrb	r0, [r1, #17]
10052956:	2110      	movs	r1, #16
10052958:	4308      	orrs	r0, r1
1005295a:	a918      	add	r1, sp, #96	; 0x60
1005295c:	7448      	strb	r0, [r1, #17]
1005295e:	a818      	add	r0, sp, #96	; 0x60
10052960:	7c40      	ldrb	r0, [r0, #17]
10052962:	0680      	lsls	r0, r0, #26
10052964:	d415      	bmi.n	10052992 <SDB_Add_Record+0x146>
10052966:	4668      	mov	r0, sp
10052968:	7940      	ldrb	r0, [r0, #5]
1005296a:	0680      	lsls	r0, r0, #26
1005296c:	d511      	bpl.n	10052992 <SDB_Add_Record+0x146>
1005296e:	a908      	add	r1, sp, #32
10052970:	a823      	add	r0, sp, #140	; 0x8c
10052972:	2210      	movs	r2, #16
10052974:	3102      	adds	r1, #2
10052976:	3002      	adds	r0, #2
10052978:	f7f0 fc21 	bl	100431be <Osal_MemCpy>
1005297c:	2206      	movs	r2, #6
1005297e:	9916      	ldr	r1, [sp, #88]	; 0x58
10052980:	9815      	ldr	r0, [sp, #84]	; 0x54
10052982:	f7f0 fc1c 	bl	100431be <Osal_MemCpy>
10052986:	a818      	add	r0, sp, #96	; 0x60
10052988:	7c41      	ldrb	r1, [r0, #17]
1005298a:	2020      	movs	r0, #32
1005298c:	4301      	orrs	r1, r0
1005298e:	a818      	add	r0, sp, #96	; 0x60
10052990:	7441      	strb	r1, [r0, #17]
10052992:	a818      	add	r0, sp, #96	; 0x60
10052994:	7c40      	ldrb	r0, [r0, #17]
10052996:	0640      	lsls	r0, r0, #25
10052998:	d48d      	bmi.n	100528b6 <SDB_Add_Record+0x6a>
1005299a:	4668      	mov	r0, sp
1005299c:	7940      	ldrb	r0, [r0, #5]
1005299e:	0640      	lsls	r0, r0, #25
100529a0:	d589      	bpl.n	100528b6 <SDB_Add_Record+0x6a>
100529a2:	a90c      	add	r1, sp, #48	; 0x30
100529a4:	a827      	add	r0, sp, #156	; 0x9c
100529a6:	2210      	movs	r2, #16
100529a8:	3102      	adds	r1, #2
100529aa:	3002      	adds	r0, #2
100529ac:	f7f0 fc07 	bl	100431be <Osal_MemCpy>
100529b0:	a918      	add	r1, sp, #96	; 0x60
100529b2:	7c48      	ldrb	r0, [r1, #17]
100529b4:	2140      	movs	r1, #64	; 0x40
100529b6:	4308      	orrs	r0, r1
100529b8:	a918      	add	r1, sp, #96	; 0x60
100529ba:	7448      	strb	r0, [r1, #17]
100529bc:	e77b      	b.n	100528b6 <SDB_Add_Record+0x6a>
100529be:	e7ff      	b.n	100529c0 <SDB_Add_Record+0x174>
100529c0:	2201      	movs	r2, #1
100529c2:	a91c      	add	r1, sp, #112	; 0x70
100529c4:	4628      	mov	r0, r5
100529c6:	f000 fbe9 	bl	1005319c <sdb_write_record>
100529ca:	e75e      	b.n	1005288a <SDB_Add_Record+0x3e>
100529cc:	2000098c 	.word	0x2000098c

100529d0 <SDB_Find_Matching_LTK>:
100529d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100529d2:	4826      	ldr	r0, [pc, #152]	; (10052a6c <SDB_Find_Matching_LTK+0x9c>)
100529d4:	2109      	movs	r1, #9
100529d6:	6800      	ldr	r0, [r0, #0]
100529d8:	0209      	lsls	r1, r1, #8
100529da:	1840      	adds	r0, r0, r1
100529dc:	6f46      	ldr	r6, [r0, #116]	; 0x74
100529de:	2000      	movs	r0, #0
100529e0:	b098      	sub	sp, #96	; 0x60
100529e2:	4669      	mov	r1, sp
100529e4:	7108      	strb	r0, [r1, #4]
100529e6:	4605      	mov	r5, r0
100529e8:	9016      	str	r0, [sp, #88]	; 0x58
100529ea:	a813      	add	r0, sp, #76	; 0x4c
100529ec:	4614      	mov	r4, r2
100529ee:	270c      	movs	r7, #12
100529f0:	9000      	str	r0, [sp, #0]
100529f2:	e020      	b.n	10052a36 <SDB_Find_Matching_LTK+0x66>
100529f4:	a901      	add	r1, sp, #4
100529f6:	4630      	mov	r0, r6
100529f8:	f000 fbc8 	bl	1005318c <sdb_read_record_validity>
100529fc:	4668      	mov	r0, sp
100529fe:	7900      	ldrb	r0, [r0, #4]
10052a00:	28fe      	cmp	r0, #254	; 0xfe
10052a02:	d002      	beq.n	10052a0a <SDB_Find_Matching_LTK+0x3a>
10052a04:	2800      	cmp	r0, #0
10052a06:	d11b      	bne.n	10052a40 <SDB_Find_Matching_LTK+0x70>
10052a08:	e014      	b.n	10052a34 <SDB_Find_Matching_LTK+0x64>
10052a0a:	a902      	add	r1, sp, #8
10052a0c:	4630      	mov	r0, r6
10052a0e:	f000 fbab 	bl	10053168 <sdb_read_record>
10052a12:	4668      	mov	r0, sp
10052a14:	7a40      	ldrb	r0, [r0, #9]
10052a16:	06c0      	lsls	r0, r0, #27
10052a18:	d50c      	bpl.n	10052a34 <SDB_Find_Matching_LTK+0x64>
10052a1a:	2301      	movs	r3, #1
10052a1c:	aa17      	add	r2, sp, #92	; 0x5c
10052a1e:	9919      	ldr	r1, [sp, #100]	; 0x64
10052a20:	9800      	ldr	r0, [sp, #0]
10052a22:	f001 fabb 	bl	10053f9c <SMA_generate_EDIV_recovery_DIV>
10052a26:	2202      	movs	r2, #2
10052a28:	a817      	add	r0, sp, #92	; 0x5c
10052a2a:	9918      	ldr	r1, [sp, #96]	; 0x60
10052a2c:	f7f0 fbcf 	bl	100431ce <Osal_MemCmp>
10052a30:	2800      	cmp	r0, #0
10052a32:	d008      	beq.n	10052a46 <SDB_Find_Matching_LTK+0x76>
10052a34:	3614      	adds	r6, #20
10052a36:	4628      	mov	r0, r5
10052a38:	1c6d      	adds	r5, r5, #1
10052a3a:	b2ed      	uxtb	r5, r5
10052a3c:	42b8      	cmp	r0, r7
10052a3e:	d3d9      	bcc.n	100529f4 <SDB_Find_Matching_LTK+0x24>
10052a40:	2041      	movs	r0, #65	; 0x41
10052a42:	b01b      	add	sp, #108	; 0x6c
10052a44:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052a46:	a902      	add	r1, sp, #8
10052a48:	4620      	mov	r0, r4
10052a4a:	f000 f8f1 	bl	10052c30 <SDB_get_security_data_record>
10052a4e:	2001      	movs	r0, #1
10052a50:	9000      	str	r0, [sp, #0]
10052a52:	4806      	ldr	r0, [pc, #24]	; (10052a6c <SDB_Find_Matching_LTK+0x9c>)
10052a54:	4623      	mov	r3, r4
10052a56:	6800      	ldr	r0, [r0, #0]
10052a58:	4621      	mov	r1, r4
10052a5a:	332a      	adds	r3, #42	; 0x2a
10052a5c:	aa16      	add	r2, sp, #88	; 0x58
10052a5e:	3120      	adds	r1, #32
10052a60:	3080      	adds	r0, #128	; 0x80
10052a62:	f001 fa4b 	bl	10053efc <SMA_Diversify>
10052a66:	2000      	movs	r0, #0
10052a68:	e7eb      	b.n	10052a42 <SDB_Find_Matching_LTK+0x72>
10052a6a:	0000      	.short	0x0000
10052a6c:	2000098c 	.word	0x2000098c

10052a70 <SDB_Find_Record>:
10052a70:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10052a72:	4607      	mov	r7, r0
10052a74:	482e      	ldr	r0, [pc, #184]	; (10052b30 <SDB_Find_Record+0xc0>)
10052a76:	460e      	mov	r6, r1
10052a78:	6800      	ldr	r0, [r0, #0]
10052a7a:	2109      	movs	r1, #9
10052a7c:	0209      	lsls	r1, r1, #8
10052a7e:	1840      	adds	r0, r0, r1
10052a80:	6f45      	ldr	r5, [r0, #116]	; 0x74
10052a82:	2000      	movs	r0, #0
10052a84:	4669      	mov	r1, sp
10052a86:	4614      	mov	r4, r2
10052a88:	7008      	strb	r0, [r1, #0]
10052a8a:	2e00      	cmp	r6, #0
10052a8c:	d01b      	beq.n	10052ac6 <SDB_Find_Record+0x56>
10052a8e:	2e01      	cmp	r6, #1
10052a90:	d106      	bne.n	10052aa0 <SDB_Find_Record+0x30>
10052a92:	7978      	ldrb	r0, [r7, #5]
10052a94:	0601      	lsls	r1, r0, #24
10052a96:	d501      	bpl.n	10052a9c <SDB_Find_Record+0x2c>
10052a98:	0641      	lsls	r1, r0, #25
10052a9a:	d414      	bmi.n	10052ac6 <SDB_Find_Record+0x56>
10052a9c:	0980      	lsrs	r0, r0, #6
10052a9e:	d012      	beq.n	10052ac6 <SDB_Find_Record+0x56>
10052aa0:	7978      	ldrb	r0, [r7, #5]
10052aa2:	0640      	lsls	r0, r0, #25
10052aa4:	d541      	bpl.n	10052b2a <SDB_Find_Record+0xba>
10052aa6:	4669      	mov	r1, sp
10052aa8:	4628      	mov	r0, r5
10052aaa:	f000 fb6f 	bl	1005318c <sdb_read_record_validity>
10052aae:	4626      	mov	r6, r4
10052ab0:	361e      	adds	r6, #30
10052ab2:	4668      	mov	r0, sp
10052ab4:	7800      	ldrb	r0, [r0, #0]
10052ab6:	28fe      	cmp	r0, #254	; 0xfe
10052ab8:	d027      	beq.n	10052b0a <SDB_Find_Record+0x9a>
10052aba:	28ff      	cmp	r0, #255	; 0xff
10052abc:	d035      	beq.n	10052b2a <SDB_Find_Record+0xba>
10052abe:	2800      	cmp	r0, #0
10052ac0:	d02d      	beq.n	10052b1e <SDB_Find_Record+0xae>
10052ac2:	20fa      	movs	r0, #250	; 0xfa
10052ac4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10052ac6:	4620      	mov	r0, r4
10052ac8:	303e      	adds	r0, #62	; 0x3e
10052aca:	9001      	str	r0, [sp, #4]
10052acc:	4669      	mov	r1, sp
10052ace:	4628      	mov	r0, r5
10052ad0:	f000 fb5c 	bl	1005318c <sdb_read_record_validity>
10052ad4:	4668      	mov	r0, sp
10052ad6:	7800      	ldrb	r0, [r0, #0]
10052ad8:	28fe      	cmp	r0, #254	; 0xfe
10052ada:	d005      	beq.n	10052ae8 <SDB_Find_Record+0x78>
10052adc:	28ff      	cmp	r0, #255	; 0xff
10052ade:	d024      	beq.n	10052b2a <SDB_Find_Record+0xba>
10052ae0:	2800      	cmp	r0, #0
10052ae2:	d1ee      	bne.n	10052ac2 <SDB_Find_Record+0x52>
10052ae4:	3514      	adds	r5, #20
10052ae6:	e7f1      	b.n	10052acc <SDB_Find_Record+0x5c>
10052ae8:	4621      	mov	r1, r4
10052aea:	4628      	mov	r0, r5
10052aec:	f000 fb3c 	bl	10053168 <sdb_read_record>
10052af0:	7860      	ldrb	r0, [r4, #1]
10052af2:	07c0      	lsls	r0, r0, #31
10052af4:	0fc0      	lsrs	r0, r0, #31
10052af6:	42b0      	cmp	r0, r6
10052af8:	d1f4      	bne.n	10052ae4 <SDB_Find_Record+0x74>
10052afa:	2206      	movs	r2, #6
10052afc:	4639      	mov	r1, r7
10052afe:	9801      	ldr	r0, [sp, #4]
10052b00:	f7f0 fb65 	bl	100431ce <Osal_MemCmp>
10052b04:	2800      	cmp	r0, #0
10052b06:	d0dd      	beq.n	10052ac4 <SDB_Find_Record+0x54>
10052b08:	e7ec      	b.n	10052ae4 <SDB_Find_Record+0x74>
10052b0a:	4621      	mov	r1, r4
10052b0c:	4628      	mov	r0, r5
10052b0e:	f000 fb2b 	bl	10053168 <sdb_read_record>
10052b12:	4631      	mov	r1, r6
10052b14:	4638      	mov	r0, r7
10052b16:	f001 faa2 	bl	1005405e <SM_Resolve_Private_Address>
10052b1a:	2800      	cmp	r0, #0
10052b1c:	d0d2      	beq.n	10052ac4 <SDB_Find_Record+0x54>
10052b1e:	3514      	adds	r5, #20
10052b20:	4669      	mov	r1, sp
10052b22:	4628      	mov	r0, r5
10052b24:	f000 fb32 	bl	1005318c <sdb_read_record_validity>
10052b28:	e7c3      	b.n	10052ab2 <SDB_Find_Record+0x42>
10052b2a:	205c      	movs	r0, #92	; 0x5c
10052b2c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10052b2e:	0000      	.short	0x0000
10052b30:	2000098c 	.word	0x2000098c

10052b34 <SDB_Get_Number_Of_Valid_Records>:
10052b34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10052b36:	480f      	ldr	r0, [pc, #60]	; (10052b74 <SDB_Get_Number_Of_Valid_Records+0x40>)
10052b38:	2109      	movs	r1, #9
10052b3a:	6800      	ldr	r0, [r0, #0]
10052b3c:	0209      	lsls	r1, r1, #8
10052b3e:	1840      	adds	r0, r0, r1
10052b40:	2614      	movs	r6, #20
10052b42:	6f45      	ldr	r5, [r0, #116]	; 0x74
10052b44:	2000      	movs	r0, #0
10052b46:	4669      	mov	r1, sp
10052b48:	7008      	strb	r0, [r1, #0]
10052b4a:	4604      	mov	r4, r0
10052b4c:	4669      	mov	r1, sp
10052b4e:	4628      	mov	r0, r5
10052b50:	f000 fb1c 	bl	1005318c <sdb_read_record_validity>
10052b54:	4668      	mov	r0, sp
10052b56:	7800      	ldrb	r0, [r0, #0]
10052b58:	28fe      	cmp	r0, #254	; 0xfe
10052b5a:	d005      	beq.n	10052b68 <SDB_Get_Number_Of_Valid_Records+0x34>
10052b5c:	28ff      	cmp	r0, #255	; 0xff
10052b5e:	d007      	beq.n	10052b70 <SDB_Get_Number_Of_Valid_Records+0x3c>
10052b60:	2800      	cmp	r0, #0
10052b62:	d003      	beq.n	10052b6c <SDB_Get_Number_Of_Valid_Records+0x38>
10052b64:	20fa      	movs	r0, #250	; 0xfa
10052b66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10052b68:	1c64      	adds	r4, r4, #1
10052b6a:	b2e4      	uxtb	r4, r4
10052b6c:	19ad      	adds	r5, r5, r6
10052b6e:	e7ed      	b.n	10052b4c <SDB_Get_Number_Of_Valid_Records+0x18>
10052b70:	4620      	mov	r0, r4
10052b72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10052b74:	2000098c 	.word	0x2000098c

10052b78 <SDB_flash_write_client_data>:
10052b78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10052b7a:	b098      	sub	sp, #96	; 0x60
10052b7c:	4616      	mov	r6, r2
10052b7e:	255e      	movs	r5, #94	; 0x5e
10052b80:	f001 fcb2 	bl	100544e8 <SMP_get_remote_device_list_item>
10052b84:	0004      	movs	r4, r0
10052b86:	d04e      	beq.n	10052c26 <SDB_flash_write_client_data+0xae>
10052b88:	7860      	ldrb	r0, [r4, #1]
10052b8a:	07c0      	lsls	r0, r0, #31
10052b8c:	d020      	beq.n	10052bd0 <SDB_flash_write_client_data+0x58>
10052b8e:	79e0      	ldrb	r0, [r4, #7]
10052b90:	0981      	lsrs	r1, r0, #6
10052b92:	2903      	cmp	r1, #3
10052b94:	d01c      	beq.n	10052bd0 <SDB_flash_write_client_data+0x58>
10052b96:	0981      	lsrs	r1, r0, #6
10052b98:	d01a      	beq.n	10052bd0 <SDB_flash_write_client_data+0x58>
10052b9a:	0640      	lsls	r0, r0, #25
10052b9c:	d515      	bpl.n	10052bca <SDB_flash_write_client_data+0x52>
10052b9e:	4823      	ldr	r0, [pc, #140]	; (10052c2c <SDB_flash_write_client_data+0xb4>)
10052ba0:	2109      	movs	r1, #9
10052ba2:	6800      	ldr	r0, [r0, #0]
10052ba4:	0209      	lsls	r1, r1, #8
10052ba6:	1840      	adds	r0, r0, r1
10052ba8:	6f45      	ldr	r5, [r0, #116]	; 0x74
10052baa:	2000      	movs	r0, #0
10052bac:	4669      	mov	r1, sp
10052bae:	7008      	strb	r0, [r1, #0]
10052bb0:	4628      	mov	r0, r5
10052bb2:	f000 faeb 	bl	1005318c <sdb_read_record_validity>
10052bb6:	af08      	add	r7, sp, #32
10052bb8:	3702      	adds	r7, #2
10052bba:	4668      	mov	r0, sp
10052bbc:	7800      	ldrb	r0, [r0, #0]
10052bbe:	28fe      	cmp	r0, #254	; 0xfe
10052bc0:	d009      	beq.n	10052bd6 <SDB_flash_write_client_data+0x5e>
10052bc2:	28ff      	cmp	r0, #255	; 0xff
10052bc4:	d001      	beq.n	10052bca <SDB_flash_write_client_data+0x52>
10052bc6:	2800      	cmp	r0, #0
10052bc8:	d00f      	beq.n	10052bea <SDB_flash_write_client_data+0x72>
10052bca:	2047      	movs	r0, #71	; 0x47
10052bcc:	b01b      	add	sp, #108	; 0x6c
10052bce:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052bd0:	2206      	movs	r2, #6
10052bd2:	1ca1      	adds	r1, r4, #2
10052bd4:	e012      	b.n	10052bfc <SDB_flash_write_client_data+0x84>
10052bd6:	a901      	add	r1, sp, #4
10052bd8:	4628      	mov	r0, r5
10052bda:	f000 fac5 	bl	10053168 <sdb_read_record>
10052bde:	4639      	mov	r1, r7
10052be0:	1ca0      	adds	r0, r4, #2
10052be2:	f001 fa3c 	bl	1005405e <SM_Resolve_Private_Address>
10052be6:	2800      	cmp	r0, #0
10052be8:	d005      	beq.n	10052bf6 <SDB_flash_write_client_data+0x7e>
10052bea:	3514      	adds	r5, #20
10052bec:	4669      	mov	r1, sp
10052bee:	4628      	mov	r0, r5
10052bf0:	f000 facc 	bl	1005318c <sdb_read_record_validity>
10052bf4:	e7e1      	b.n	10052bba <SDB_flash_write_client_data+0x42>
10052bf6:	2206      	movs	r2, #6
10052bf8:	a910      	add	r1, sp, #64	; 0x40
10052bfa:	3102      	adds	r1, #2
10052bfc:	a815      	add	r0, sp, #84	; 0x54
10052bfe:	f7f0 fade 	bl	100431be <Osal_MemCpy>
10052c02:	4632      	mov	r2, r6
10052c04:	a815      	add	r0, sp, #84	; 0x54
10052c06:	9919      	ldr	r1, [sp, #100]	; 0x64
10052c08:	f000 f89c 	bl	10052d44 <Write_Client_Data>
10052c0c:	4605      	mov	r5, r0
10052c0e:	285d      	cmp	r0, #93	; 0x5d
10052c10:	d109      	bne.n	10052c26 <SDB_flash_write_client_data+0xae>
10052c12:	b672      	cpsid	i
10052c14:	f000 f976 	bl	10052f04 <sdb_delete>
10052c18:	b662      	cpsie	i
10052c1a:	4632      	mov	r2, r6
10052c1c:	a815      	add	r0, sp, #84	; 0x54
10052c1e:	9919      	ldr	r1, [sp, #100]	; 0x64
10052c20:	f000 f890 	bl	10052d44 <Write_Client_Data>
10052c24:	4605      	mov	r5, r0
10052c26:	4628      	mov	r0, r5
10052c28:	e7d0      	b.n	10052bcc <SDB_flash_write_client_data+0x54>
10052c2a:	0000      	.short	0x0000
10052c2c:	2000098c 	.word	0x2000098c

10052c30 <SDB_get_security_data_record>:
10052c30:	b570      	push	{r4, r5, r6, lr}
10052c32:	4604      	mov	r4, r0
10052c34:	2001      	movs	r0, #1
10052c36:	460d      	mov	r5, r1
10052c38:	76a0      	strb	r0, [r4, #26]
10052c3a:	78c9      	ldrb	r1, [r1, #3]
10052c3c:	7721      	strb	r1, [r4, #28]
10052c3e:	7869      	ldrb	r1, [r5, #1]
10052c40:	0609      	lsls	r1, r1, #24
10052c42:	d503      	bpl.n	10052c4c <SDB_get_security_data_record+0x1c>
10052c44:	7f61      	ldrb	r1, [r4, #29]
10052c46:	2210      	movs	r2, #16
10052c48:	4311      	orrs	r1, r2
10052c4a:	7761      	strb	r1, [r4, #29]
10052c4c:	786a      	ldrb	r2, [r5, #1]
10052c4e:	7f61      	ldrb	r1, [r4, #29]
10052c50:	2360      	movs	r3, #96	; 0x60
10052c52:	401a      	ands	r2, r3
10052c54:	4311      	orrs	r1, r2
10052c56:	7761      	strb	r1, [r4, #29]
10052c58:	7869      	ldrb	r1, [r5, #1]
10052c5a:	06c9      	lsls	r1, r1, #27
10052c5c:	d502      	bpl.n	10052c64 <SDB_get_security_data_record+0x34>
10052c5e:	7fa1      	ldrb	r1, [r4, #30]
10052c60:	4301      	orrs	r1, r0
10052c62:	77a1      	strb	r1, [r4, #30]
10052c64:	6ce8      	ldr	r0, [r5, #76]	; 0x4c
10052c66:	6160      	str	r0, [r4, #20]
10052c68:	6ca8      	ldr	r0, [r5, #72]	; 0x48
10052c6a:	4629      	mov	r1, r5
10052c6c:	6120      	str	r0, [r4, #16]
10052c6e:	310e      	adds	r1, #14
10052c70:	4620      	mov	r0, r4
10052c72:	2210      	movs	r2, #16
10052c74:	460e      	mov	r6, r1
10052c76:	303a      	adds	r0, #58	; 0x3a
10052c78:	f7f0 faa1 	bl	100431be <Osal_MemCpy>
10052c7c:	4629      	mov	r1, r5
10052c7e:	4620      	mov	r0, r4
10052c80:	2210      	movs	r2, #16
10052c82:	311e      	adds	r1, #30
10052c84:	3054      	adds	r0, #84	; 0x54
10052c86:	f7f0 fa9a 	bl	100431be <Osal_MemCpy>
10052c8a:	4629      	mov	r1, r5
10052c8c:	4620      	mov	r0, r4
10052c8e:	2210      	movs	r2, #16
10052c90:	312e      	adds	r1, #46	; 0x2e
10052c92:	3064      	adds	r0, #100	; 0x64
10052c94:	f7f0 fa93 	bl	100431be <Osal_MemCpy>
10052c98:	4629      	mov	r1, r5
10052c9a:	4620      	mov	r0, r4
10052c9c:	2202      	movs	r2, #2
10052c9e:	3144      	adds	r1, #68	; 0x44
10052ca0:	3020      	adds	r0, #32
10052ca2:	f7f0 fa8c 	bl	100431be <Osal_MemCpy>
10052ca6:	4620      	mov	r0, r4
10052ca8:	2208      	movs	r2, #8
10052caa:	1da9      	adds	r1, r5, #6
10052cac:	304a      	adds	r0, #74	; 0x4a
10052cae:	f7f0 fa86 	bl	100431be <Osal_MemCpy>
10052cb2:	4620      	mov	r0, r4
10052cb4:	2202      	movs	r2, #2
10052cb6:	1d29      	adds	r1, r5, #4
10052cb8:	3052      	adds	r0, #82	; 0x52
10052cba:	f7f0 fa80 	bl	100431be <Osal_MemCpy>
10052cbe:	7868      	ldrb	r0, [r5, #1]
10052cc0:	0780      	lsls	r0, r0, #30
10052cc2:	d504      	bpl.n	10052cce <SDB_get_security_data_record+0x9e>
10052cc4:	8920      	ldrh	r0, [r4, #8]
10052cc6:	2101      	movs	r1, #1
10052cc8:	0349      	lsls	r1, r1, #13
10052cca:	4308      	orrs	r0, r1
10052ccc:	8120      	strh	r0, [r4, #8]
10052cce:	7868      	ldrb	r0, [r5, #1]
10052cd0:	0740      	lsls	r0, r0, #29
10052cd2:	d504      	bpl.n	10052cde <SDB_get_security_data_record+0xae>
10052cd4:	8920      	ldrh	r0, [r4, #8]
10052cd6:	2101      	movs	r1, #1
10052cd8:	0389      	lsls	r1, r1, #14
10052cda:	4308      	orrs	r0, r1
10052cdc:	8120      	strh	r0, [r4, #8]
10052cde:	7868      	ldrb	r0, [r5, #1]
10052ce0:	0700      	lsls	r0, r0, #28
10052ce2:	d504      	bpl.n	10052cee <SDB_get_security_data_record+0xbe>
10052ce4:	8920      	ldrh	r0, [r4, #8]
10052ce6:	2101      	movs	r1, #1
10052ce8:	03c9      	lsls	r1, r1, #15
10052cea:	4308      	orrs	r0, r1
10052cec:	8120      	strh	r0, [r4, #8]
10052cee:	78a8      	ldrb	r0, [r5, #2]
10052cf0:	0701      	lsls	r1, r0, #28
10052cf2:	d506      	bpl.n	10052d02 <SDB_get_security_data_record+0xd2>
10052cf4:	72e0      	strb	r0, [r4, #11]
10052cf6:	4620      	mov	r0, r4
10052cf8:	2210      	movs	r2, #16
10052cfa:	4631      	mov	r1, r6
10052cfc:	302a      	adds	r0, #42	; 0x2a
10052cfe:	f7f0 fa5e 	bl	100431be <Osal_MemCpy>
10052d02:	20f1      	movs	r0, #241	; 0xf1
10052d04:	72a0      	strb	r0, [r4, #10]
10052d06:	bd70      	pop	{r4, r5, r6, pc}

10052d08 <SDB_read_peer_bonded_data>:
10052d08:	b570      	push	{r4, r5, r6, lr}
10052d0a:	b094      	sub	sp, #80	; 0x50
10052d0c:	4615      	mov	r5, r2
10052d0e:	460e      	mov	r6, r1
10052d10:	466c      	mov	r4, sp
10052d12:	f001 fbe9 	bl	100544e8 <SMP_get_remote_device_list_item>
10052d16:	2800      	cmp	r0, #0
10052d18:	d012      	beq.n	10052d40 <SDB_read_peer_bonded_data+0x38>
10052d1a:	7841      	ldrb	r1, [r0, #1]
10052d1c:	4622      	mov	r2, r4
10052d1e:	07c9      	lsls	r1, r1, #31
10052d20:	0fc9      	lsrs	r1, r1, #31
10052d22:	1c80      	adds	r0, r0, #2
10052d24:	f7ff fea4 	bl	10052a70 <SDB_Find_Record>
10052d28:	2800      	cmp	r0, #0
10052d2a:	d002      	beq.n	10052d32 <SDB_read_peer_bonded_data+0x2a>
10052d2c:	205c      	movs	r0, #92	; 0x5c
10052d2e:	b014      	add	sp, #80	; 0x50
10052d30:	bd70      	pop	{r4, r5, r6, pc}
10052d32:	a80f      	add	r0, sp, #60	; 0x3c
10052d34:	462a      	mov	r2, r5
10052d36:	4631      	mov	r1, r6
10052d38:	3002      	adds	r0, #2
10052d3a:	f000 f995 	bl	10053068 <sdb_find_client_data>
10052d3e:	e7f6      	b.n	10052d2e <SDB_read_peer_bonded_data+0x26>
10052d40:	2040      	movs	r0, #64	; 0x40
10052d42:	e7f4      	b.n	10052d2e <SDB_read_peer_bonded_data+0x26>

10052d44 <Write_Client_Data>:
10052d44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10052d46:	b086      	sub	sp, #24
10052d48:	4605      	mov	r5, r0
10052d4a:	f000 f9f1 	bl	10053130 <sdb_get_gatt_db_start_address>
10052d4e:	4604      	mov	r4, r0
10052d50:	2000      	movs	r0, #0
10052d52:	4669      	mov	r1, sp
10052d54:	7208      	strb	r0, [r1, #8]
10052d56:	4606      	mov	r6, r0
10052d58:	200c      	movs	r0, #12
10052d5a:	9003      	str	r0, [sp, #12]
10052d5c:	e05a      	b.n	10052e14 <Write_Client_Data+0xd0>
10052d5e:	a902      	add	r1, sp, #8
10052d60:	4620      	mov	r0, r4
10052d62:	f000 fa13 	bl	1005318c <sdb_read_record_validity>
10052d66:	4668      	mov	r0, sp
10052d68:	7a02      	ldrb	r2, [r0, #8]
10052d6a:	2aff      	cmp	r2, #255	; 0xff
10052d6c:	d059      	beq.n	10052e22 <Write_Client_Data+0xde>
10052d6e:	2afe      	cmp	r2, #254	; 0xfe
10052d70:	d004      	beq.n	10052d7c <Write_Client_Data+0x38>
10052d72:	2a00      	cmp	r2, #0
10052d74:	d002      	beq.n	10052d7c <Write_Client_Data+0x38>
10052d76:	20fa      	movs	r0, #250	; 0xfa
10052d78:	b009      	add	sp, #36	; 0x24
10052d7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052d7c:	495b      	ldr	r1, [pc, #364]	; (10052eec <Write_Client_Data+0x1a8>)
10052d7e:	00a0      	lsls	r0, r4, #2
10052d80:	1840      	adds	r0, r0, r1
10052d82:	6800      	ldr	r0, [r0, #0]
10052d84:	466b      	mov	r3, sp
10052d86:	0a07      	lsrs	r7, r0, #8
10052d88:	701f      	strb	r7, [r3, #0]
10052d8a:	0c07      	lsrs	r7, r0, #16
10052d8c:	705f      	strb	r7, [r3, #1]
10052d8e:	0e00      	lsrs	r0, r0, #24
10052d90:	7098      	strb	r0, [r3, #2]
10052d92:	1c64      	adds	r4, r4, #1
10052d94:	00a0      	lsls	r0, r4, #2
10052d96:	1840      	adds	r0, r0, r1
10052d98:	6800      	ldr	r0, [r0, #0]
10052d9a:	70d8      	strb	r0, [r3, #3]
10052d9c:	0a07      	lsrs	r7, r0, #8
10052d9e:	711f      	strb	r7, [r3, #4]
10052da0:	0c00      	lsrs	r0, r0, #16
10052da2:	7158      	strb	r0, [r3, #5]
10052da4:	1c64      	adds	r4, r4, #1
10052da6:	00a0      	lsls	r0, r4, #2
10052da8:	1840      	adds	r0, r0, r1
10052daa:	6800      	ldr	r0, [r0, #0]
10052dac:	9004      	str	r0, [sp, #16]
10052dae:	2afe      	cmp	r2, #254	; 0xfe
10052db0:	d003      	beq.n	10052dba <Write_Client_Data+0x76>
10052db2:	0880      	lsrs	r0, r0, #2
10052db4:	1904      	adds	r4, r0, r4
10052db6:	1c64      	adds	r4, r4, #1
10052db8:	e02c      	b.n	10052e14 <Write_Client_Data+0xd0>
10052dba:	2206      	movs	r2, #6
10052dbc:	4629      	mov	r1, r5
10052dbe:	4618      	mov	r0, r3
10052dc0:	f7f0 fa05 	bl	100431ce <Osal_MemCmp>
10052dc4:	2800      	cmp	r0, #0
10052dc6:	9804      	ldr	r0, [sp, #16]
10052dc8:	d1f3      	bne.n	10052db2 <Write_Client_Data+0x6e>
10052dca:	9907      	ldr	r1, [sp, #28]
10052dcc:	4288      	cmp	r0, r1
10052dce:	d119      	bne.n	10052e04 <Write_Client_Data+0xc0>
10052dd0:	2206      	movs	r2, #6
10052dd2:	21ff      	movs	r1, #255	; 0xff
10052dd4:	4668      	mov	r0, sp
10052dd6:	f7f0 f9f6 	bl	100431c6 <Osal_MemSet>
10052dda:	2700      	movs	r7, #0
10052ddc:	e035      	b.n	10052e4a <Write_Client_Data+0x106>
10052dde:	1c64      	adds	r4, r4, #1
10052de0:	4842      	ldr	r0, [pc, #264]	; (10052eec <Write_Client_Data+0x1a8>)
10052de2:	00a1      	lsls	r1, r4, #2
10052de4:	1808      	adds	r0, r1, r0
10052de6:	6801      	ldr	r1, [r0, #0]
10052de8:	4668      	mov	r0, sp
10052dea:	f000 f883 	bl	10052ef4 <int32ToLe4Byte>
10052dee:	9808      	ldr	r0, [sp, #32]
10052df0:	2204      	movs	r2, #4
10052df2:	19c0      	adds	r0, r0, r7
10052df4:	4669      	mov	r1, sp
10052df6:	f7f0 f9ea 	bl	100431ce <Osal_MemCmp>
10052dfa:	2800      	cmp	r0, #0
10052dfc:	d024      	beq.n	10052e48 <Write_Client_Data+0x104>
10052dfe:	08b8      	lsrs	r0, r7, #2
10052e00:	1a24      	subs	r4, r4, r0
10052e02:	1e64      	subs	r4, r4, #1
10052e04:	1ea4      	subs	r4, r4, #2
10052e06:	4620      	mov	r0, r4
10052e08:	f000 f99e 	bl	10053148 <sdb_invalidate_record>
10052e0c:	9804      	ldr	r0, [sp, #16]
10052e0e:	0880      	lsrs	r0, r0, #2
10052e10:	1904      	adds	r4, r0, r4
10052e12:	1ce4      	adds	r4, r4, #3
10052e14:	4630      	mov	r0, r6
10052e16:	9903      	ldr	r1, [sp, #12]
10052e18:	1c76      	adds	r6, r6, #1
10052e1a:	4288      	cmp	r0, r1
10052e1c:	d39f      	bcc.n	10052d5e <Write_Client_Data+0x1a>
10052e1e:	428e      	cmp	r6, r1
10052e20:	d810      	bhi.n	10052e44 <Write_Client_Data+0x100>
10052e22:	4833      	ldr	r0, [pc, #204]	; (10052ef0 <Write_Client_Data+0x1ac>)
10052e24:	6801      	ldr	r1, [r0, #0]
10052e26:	2009      	movs	r0, #9
10052e28:	0200      	lsls	r0, r0, #8
10052e2a:	1808      	adds	r0, r1, r0
10052e2c:	6f82      	ldr	r2, [r0, #120]	; 0x78
10052e2e:	6f41      	ldr	r1, [r0, #116]	; 0x74
10052e30:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
10052e32:	1889      	adds	r1, r1, r2
10052e34:	1e40      	subs	r0, r0, #1
10052e36:	1808      	adds	r0, r1, r0
10052e38:	9907      	ldr	r1, [sp, #28]
10052e3a:	310c      	adds	r1, #12
10052e3c:	0889      	lsrs	r1, r1, #2
10052e3e:	1909      	adds	r1, r1, r4
10052e40:	4288      	cmp	r0, r1
10052e42:	d206      	bcs.n	10052e52 <Write_Client_Data+0x10e>
10052e44:	205d      	movs	r0, #93	; 0x5d
10052e46:	e797      	b.n	10052d78 <Write_Client_Data+0x34>
10052e48:	1d3f      	adds	r7, r7, #4
10052e4a:	9804      	ldr	r0, [sp, #16]
10052e4c:	4287      	cmp	r7, r0
10052e4e:	d3c6      	bcc.n	10052dde <Write_Client_Data+0x9a>
10052e50:	e04a      	b.n	10052ee8 <Write_Client_Data+0x1a4>
10052e52:	20fe      	movs	r0, #254	; 0xfe
10052e54:	4669      	mov	r1, sp
10052e56:	7008      	strb	r0, [r1, #0]
10052e58:	7828      	ldrb	r0, [r5, #0]
10052e5a:	7048      	strb	r0, [r1, #1]
10052e5c:	7868      	ldrb	r0, [r5, #1]
10052e5e:	7088      	strb	r0, [r1, #2]
10052e60:	78a8      	ldrb	r0, [r5, #2]
10052e62:	70c8      	strb	r0, [r1, #3]
10052e64:	9900      	ldr	r1, [sp, #0]
10052e66:	0600      	lsls	r0, r0, #24
10052e68:	0209      	lsls	r1, r1, #8
10052e6a:	0a09      	lsrs	r1, r1, #8
10052e6c:	4301      	orrs	r1, r0
10052e6e:	4620      	mov	r0, r4
10052e70:	f7fd fb8a 	bl	10050588 <Flash_Write_Flagged>
10052e74:	2800      	cmp	r0, #0
10052e76:	d131      	bne.n	10052edc <Write_Client_Data+0x198>
10052e78:	78e9      	ldrb	r1, [r5, #3]
10052e7a:	4668      	mov	r0, sp
10052e7c:	7001      	strb	r1, [r0, #0]
10052e7e:	7929      	ldrb	r1, [r5, #4]
10052e80:	7041      	strb	r1, [r0, #1]
10052e82:	7969      	ldrb	r1, [r5, #5]
10052e84:	7081      	strb	r1, [r0, #2]
10052e86:	21ff      	movs	r1, #255	; 0xff
10052e88:	70c1      	strb	r1, [r0, #3]
10052e8a:	9800      	ldr	r0, [sp, #0]
10052e8c:	1c64      	adds	r4, r4, #1
10052e8e:	0201      	lsls	r1, r0, #8
10052e90:	20ff      	movs	r0, #255	; 0xff
10052e92:	0a09      	lsrs	r1, r1, #8
10052e94:	0600      	lsls	r0, r0, #24
10052e96:	4301      	orrs	r1, r0
10052e98:	4620      	mov	r0, r4
10052e9a:	f7fd fb75 	bl	10050588 <Flash_Write_Flagged>
10052e9e:	2800      	cmp	r0, #0
10052ea0:	d11c      	bne.n	10052edc <Write_Client_Data+0x198>
10052ea2:	1c64      	adds	r4, r4, #1
10052ea4:	4620      	mov	r0, r4
10052ea6:	9907      	ldr	r1, [sp, #28]
10052ea8:	f7fd fb6e 	bl	10050588 <Flash_Write_Flagged>
10052eac:	2800      	cmp	r0, #0
10052eae:	d115      	bne.n	10052edc <Write_Client_Data+0x198>
10052eb0:	9807      	ldr	r0, [sp, #28]
10052eb2:	2500      	movs	r5, #0
10052eb4:	0781      	lsls	r1, r0, #30
10052eb6:	0f89      	lsrs	r1, r1, #30
10052eb8:	180f      	adds	r7, r1, r0
10052eba:	1c64      	adds	r4, r4, #1
10052ebc:	e012      	b.n	10052ee4 <Write_Client_Data+0x1a0>
10052ebe:	9808      	ldr	r0, [sp, #32]
10052ec0:	1946      	adds	r6, r0, r5
10052ec2:	4630      	mov	r0, r6
10052ec4:	f7ed fb78 	bl	100405b8 <__aeabi_uread4>
10052ec8:	0201      	lsls	r1, r0, #8
10052eca:	78f0      	ldrb	r0, [r6, #3]
10052ecc:	0a09      	lsrs	r1, r1, #8
10052ece:	0600      	lsls	r0, r0, #24
10052ed0:	4301      	orrs	r1, r0
10052ed2:	4620      	mov	r0, r4
10052ed4:	f7fd fb58 	bl	10050588 <Flash_Write_Flagged>
10052ed8:	2800      	cmp	r0, #0
10052eda:	d001      	beq.n	10052ee0 <Write_Client_Data+0x19c>
10052edc:	20fb      	movs	r0, #251	; 0xfb
10052ede:	e74b      	b.n	10052d78 <Write_Client_Data+0x34>
10052ee0:	1c64      	adds	r4, r4, #1
10052ee2:	1d2d      	adds	r5, r5, #4
10052ee4:	42bd      	cmp	r5, r7
10052ee6:	d3ea      	bcc.n	10052ebe <Write_Client_Data+0x17a>
10052ee8:	2000      	movs	r0, #0
10052eea:	e745      	b.n	10052d78 <Write_Client_Data+0x34>
10052eec:	10040000 	.word	0x10040000
10052ef0:	2000098c 	.word	0x2000098c

10052ef4 <int32ToLe4Byte>:
10052ef4:	7001      	strb	r1, [r0, #0]
10052ef6:	0a0a      	lsrs	r2, r1, #8
10052ef8:	7042      	strb	r2, [r0, #1]
10052efa:	0c0a      	lsrs	r2, r1, #16
10052efc:	7082      	strb	r2, [r0, #2]
10052efe:	0e09      	lsrs	r1, r1, #24
10052f00:	70c1      	strb	r1, [r0, #3]
10052f02:	4770      	bx	lr

10052f04 <sdb_delete>:
10052f04:	b5f0      	push	{r4, r5, r6, r7, lr}
10052f06:	b0ff      	sub	sp, #508	; 0x1fc
10052f08:	b0ff      	sub	sp, #508	; 0x1fc
10052f0a:	2000      	movs	r0, #0
10052f0c:	b087      	sub	sp, #28
10052f0e:	4f55      	ldr	r7, [pc, #340]	; (10053064 <sdb_delete+0x160>)
10052f10:	9000      	str	r0, [sp, #0]
10052f12:	9001      	str	r0, [sp, #4]
10052f14:	9002      	str	r0, [sp, #8]
10052f16:	9003      	str	r0, [sp, #12]
10052f18:	2209      	movs	r2, #9
10052f1a:	6839      	ldr	r1, [r7, #0]
10052f1c:	0212      	lsls	r2, r2, #8
10052f1e:	1889      	adds	r1, r1, r2
10052f20:	6f4e      	ldr	r6, [r1, #116]	; 0x74
10052f22:	9006      	str	r0, [sp, #24]
10052f24:	4669      	mov	r1, sp
10052f26:	9005      	str	r0, [sp, #20]
10052f28:	4605      	mov	r5, r0
10052f2a:	7408      	strb	r0, [r1, #16]
10052f2c:	4604      	mov	r4, r0
10052f2e:	a904      	add	r1, sp, #16
10052f30:	4630      	mov	r0, r6
10052f32:	1c6d      	adds	r5, r5, #1
10052f34:	f000 f92a 	bl	1005318c <sdb_read_record_validity>
10052f38:	4668      	mov	r0, sp
10052f3a:	7c00      	ldrb	r0, [r0, #16]
10052f3c:	28fe      	cmp	r0, #254	; 0xfe
10052f3e:	d00e      	beq.n	10052f5e <sdb_delete+0x5a>
10052f40:	28ff      	cmp	r0, #255	; 0xff
10052f42:	d011      	beq.n	10052f68 <sdb_delete+0x64>
10052f44:	2800      	cmp	r0, #0
10052f46:	d00c      	beq.n	10052f62 <sdb_delete+0x5e>
10052f48:	2009      	movs	r0, #9
10052f4a:	6839      	ldr	r1, [r7, #0]
10052f4c:	0200      	lsls	r0, r0, #8
10052f4e:	1808      	adds	r0, r1, r0
10052f50:	6f40      	ldr	r0, [r0, #116]	; 0x74
10052f52:	f7ff fc74 	bl	1005283e <Erase_Sector>
10052f56:	b07f      	add	sp, #508	; 0x1fc
10052f58:	b07f      	add	sp, #508	; 0x1fc
10052f5a:	b007      	add	sp, #28
10052f5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052f5e:	1c64      	adds	r4, r4, #1
10052f60:	b2e4      	uxtb	r4, r4
10052f62:	3614      	adds	r6, #20
10052f64:	2d0c      	cmp	r5, #12
10052f66:	d3e2      	bcc.n	10052f2e <sdb_delete+0x2a>
10052f68:	4625      	mov	r5, r4
10052f6a:	2c04      	cmp	r4, #4
10052f6c:	d900      	bls.n	10052f70 <sdb_delete+0x6c>
10052f6e:	2404      	movs	r4, #4
10052f70:	1b28      	subs	r0, r5, r4
10052f72:	b2c0      	uxtb	r0, r0
10052f74:	9007      	str	r0, [sp, #28]
10052f76:	483b      	ldr	r0, [pc, #236]	; (10053064 <sdb_delete+0x160>)
10052f78:	2109      	movs	r1, #9
10052f7a:	6800      	ldr	r0, [r0, #0]
10052f7c:	2600      	movs	r6, #0
10052f7e:	0209      	lsls	r1, r1, #8
10052f80:	1840      	adds	r0, r0, r1
10052f82:	6f47      	ldr	r7, [r0, #116]	; 0x74
10052f84:	e00f      	b.n	10052fa6 <sdb_delete+0xa2>
10052f86:	a904      	add	r1, sp, #16
10052f88:	4638      	mov	r0, r7
10052f8a:	f000 f8ff 	bl	1005318c <sdb_read_record_validity>
10052f8e:	4668      	mov	r0, sp
10052f90:	7c00      	ldrb	r0, [r0, #16]
10052f92:	28fe      	cmp	r0, #254	; 0xfe
10052f94:	d106      	bne.n	10052fa4 <sdb_delete+0xa0>
10052f96:	9807      	ldr	r0, [sp, #28]
10052f98:	2800      	cmp	r0, #0
10052f9a:	d016      	beq.n	10052fca <sdb_delete+0xc6>
10052f9c:	1e40      	subs	r0, r0, #1
10052f9e:	b2c0      	uxtb	r0, r0
10052fa0:	9007      	str	r0, [sp, #28]
10052fa2:	1c76      	adds	r6, r6, #1
10052fa4:	3714      	adds	r7, #20
10052fa6:	42ae      	cmp	r6, r5
10052fa8:	d3ed      	bcc.n	10052f86 <sdb_delete+0x82>
10052faa:	4d2e      	ldr	r5, [pc, #184]	; (10053064 <sdb_delete+0x160>)
10052fac:	2609      	movs	r6, #9
10052fae:	6828      	ldr	r0, [r5, #0]
10052fb0:	0236      	lsls	r6, r6, #8
10052fb2:	1980      	adds	r0, r0, r6
10052fb4:	6f40      	ldr	r0, [r0, #116]	; 0x74
10052fb6:	01c0      	lsls	r0, r0, #7
10052fb8:	0c00      	lsrs	r0, r0, #16
10052fba:	f7f0 ff67 	bl	10043e8c <FLASH_ErasePage>
10052fbe:	6828      	ldr	r0, [r5, #0]
10052fc0:	1980      	adds	r0, r0, r6
10052fc2:	2600      	movs	r6, #0
10052fc4:	4635      	mov	r5, r6
10052fc6:	6f47      	ldr	r7, [r0, #116]	; 0x74
10052fc8:	e048      	b.n	1005305c <sdb_delete+0x158>
10052fca:	9906      	ldr	r1, [sp, #24]
10052fcc:	2050      	movs	r0, #80	; 0x50
10052fce:	4341      	muls	r1, r0
10052fd0:	a8b4      	add	r0, sp, #720	; 0x2d0
10052fd2:	1808      	adds	r0, r1, r0
10052fd4:	4601      	mov	r1, r0
10052fd6:	9009      	str	r0, [sp, #36]	; 0x24
10052fd8:	4638      	mov	r0, r7
10052fda:	f000 f8c5 	bl	10053168 <sdb_read_record>
10052fde:	2155      	movs	r1, #85	; 0x55
10052fe0:	9805      	ldr	r0, [sp, #20]
10052fe2:	00c9      	lsls	r1, r1, #3
10052fe4:	1a0a      	subs	r2, r1, r0
10052fe6:	9806      	ldr	r0, [sp, #24]
10052fe8:	466b      	mov	r3, sp
10052fea:	0080      	lsls	r0, r0, #2
10052fec:	9008      	str	r0, [sp, #32]
10052fee:	501a      	str	r2, [r3, r0]
10052ff0:	9a05      	ldr	r2, [sp, #20]
10052ff2:	a90a      	add	r1, sp, #40	; 0x28
10052ff4:	188a      	adds	r2, r1, r2
10052ff6:	4669      	mov	r1, sp
10052ff8:	1841      	adds	r1, r0, r1
10052ffa:	9809      	ldr	r0, [sp, #36]	; 0x24
10052ffc:	303e      	adds	r0, #62	; 0x3e
10052ffe:	f000 f833 	bl	10053068 <sdb_find_client_data>
10053002:	2800      	cmp	r0, #0
10053004:	d007      	beq.n	10053016 <sdb_delete+0x112>
10053006:	9908      	ldr	r1, [sp, #32]
10053008:	2000      	movs	r0, #0
1005300a:	466a      	mov	r2, sp
1005300c:	5050      	str	r0, [r2, r1]
1005300e:	9806      	ldr	r0, [sp, #24]
10053010:	1c40      	adds	r0, r0, #1
10053012:	9006      	str	r0, [sp, #24]
10053014:	e7c5      	b.n	10052fa2 <sdb_delete+0x9e>
10053016:	9808      	ldr	r0, [sp, #32]
10053018:	4669      	mov	r1, sp
1005301a:	5809      	ldr	r1, [r1, r0]
1005301c:	9805      	ldr	r0, [sp, #20]
1005301e:	1808      	adds	r0, r1, r0
10053020:	9005      	str	r0, [sp, #20]
10053022:	e7f4      	b.n	1005300e <sdb_delete+0x10a>
10053024:	2050      	movs	r0, #80	; 0x50
10053026:	4629      	mov	r1, r5
10053028:	4341      	muls	r1, r0
1005302a:	a8b4      	add	r0, sp, #720	; 0x2d0
1005302c:	1809      	adds	r1, r1, r0
1005302e:	2200      	movs	r2, #0
10053030:	4638      	mov	r0, r7
10053032:	9106      	str	r1, [sp, #24]
10053034:	f000 f8b2 	bl	1005319c <sdb_write_record>
10053038:	00a8      	lsls	r0, r5, #2
1005303a:	4669      	mov	r1, sp
1005303c:	9005      	str	r0, [sp, #20]
1005303e:	5809      	ldr	r1, [r1, r0]
10053040:	3714      	adds	r7, #20
10053042:	2900      	cmp	r1, #0
10053044:	d005      	beq.n	10053052 <sdb_delete+0x14e>
10053046:	a80a      	add	r0, sp, #40	; 0x28
10053048:	1982      	adds	r2, r0, r6
1005304a:	9806      	ldr	r0, [sp, #24]
1005304c:	303e      	adds	r0, #62	; 0x3e
1005304e:	f7ff fe79 	bl	10052d44 <Write_Client_Data>
10053052:	9805      	ldr	r0, [sp, #20]
10053054:	4669      	mov	r1, sp
10053056:	5808      	ldr	r0, [r1, r0]
10053058:	1986      	adds	r6, r0, r6
1005305a:	1c6d      	adds	r5, r5, #1
1005305c:	42a5      	cmp	r5, r4
1005305e:	d3e1      	bcc.n	10053024 <sdb_delete+0x120>
10053060:	2000      	movs	r0, #0
10053062:	e778      	b.n	10052f56 <sdb_delete+0x52>
10053064:	2000098c 	.word	0x2000098c

10053068 <sdb_find_client_data>:
10053068:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005306a:	b086      	sub	sp, #24
1005306c:	460f      	mov	r7, r1
1005306e:	f000 f85f 	bl	10053130 <sdb_get_gatt_db_start_address>
10053072:	4604      	mov	r4, r0
10053074:	2000      	movs	r0, #0
10053076:	4669      	mov	r1, sp
10053078:	7208      	strb	r0, [r1, #8]
1005307a:	4606      	mov	r6, r0
1005307c:	6838      	ldr	r0, [r7, #0]
1005307e:	9004      	str	r0, [sp, #16]
10053080:	200c      	movs	r0, #12
10053082:	9003      	str	r0, [sp, #12]
10053084:	a902      	add	r1, sp, #8
10053086:	4620      	mov	r0, r4
10053088:	f000 f880 	bl	1005318c <sdb_read_record_validity>
1005308c:	4668      	mov	r0, sp
1005308e:	7a01      	ldrb	r1, [r0, #8]
10053090:	1c76      	adds	r6, r6, #1
10053092:	29ff      	cmp	r1, #255	; 0xff
10053094:	d032      	beq.n	100530fc <sdb_find_client_data+0x94>
10053096:	29fe      	cmp	r1, #254	; 0xfe
10053098:	d004      	beq.n	100530a4 <sdb_find_client_data+0x3c>
1005309a:	2900      	cmp	r1, #0
1005309c:	d002      	beq.n	100530a4 <sdb_find_client_data+0x3c>
1005309e:	20fa      	movs	r0, #250	; 0xfa
100530a0:	b009      	add	sp, #36	; 0x24
100530a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100530a4:	4821      	ldr	r0, [pc, #132]	; (1005312c <sdb_find_client_data+0xc4>)
100530a6:	00a2      	lsls	r2, r4, #2
100530a8:	1812      	adds	r2, r2, r0
100530aa:	6813      	ldr	r3, [r2, #0]
100530ac:	466a      	mov	r2, sp
100530ae:	0a1d      	lsrs	r5, r3, #8
100530b0:	7015      	strb	r5, [r2, #0]
100530b2:	0c1d      	lsrs	r5, r3, #16
100530b4:	7055      	strb	r5, [r2, #1]
100530b6:	0e1b      	lsrs	r3, r3, #24
100530b8:	7093      	strb	r3, [r2, #2]
100530ba:	1c64      	adds	r4, r4, #1
100530bc:	00a2      	lsls	r2, r4, #2
100530be:	1812      	adds	r2, r2, r0
100530c0:	6813      	ldr	r3, [r2, #0]
100530c2:	466a      	mov	r2, sp
100530c4:	70d3      	strb	r3, [r2, #3]
100530c6:	0a1d      	lsrs	r5, r3, #8
100530c8:	7115      	strb	r5, [r2, #4]
100530ca:	0c1b      	lsrs	r3, r3, #16
100530cc:	7153      	strb	r3, [r2, #5]
100530ce:	1c64      	adds	r4, r4, #1
100530d0:	00a2      	lsls	r2, r4, #2
100530d2:	1810      	adds	r0, r2, r0
100530d4:	6805      	ldr	r5, [r0, #0]
100530d6:	29fe      	cmp	r1, #254	; 0xfe
100530d8:	d106      	bne.n	100530e8 <sdb_find_client_data+0x80>
100530da:	2206      	movs	r2, #6
100530dc:	4668      	mov	r0, sp
100530de:	9906      	ldr	r1, [sp, #24]
100530e0:	f7f0 f875 	bl	100431ce <Osal_MemCmp>
100530e4:	2800      	cmp	r0, #0
100530e6:	d00b      	beq.n	10053100 <sdb_find_client_data+0x98>
100530e8:	08a8      	lsrs	r0, r5, #2
100530ea:	1904      	adds	r4, r0, r4
100530ec:	1c64      	adds	r4, r4, #1
100530ee:	a902      	add	r1, sp, #8
100530f0:	4620      	mov	r0, r4
100530f2:	f000 f84b 	bl	1005318c <sdb_read_record_validity>
100530f6:	9803      	ldr	r0, [sp, #12]
100530f8:	4286      	cmp	r6, r0
100530fa:	d3c7      	bcc.n	1005308c <sdb_find_client_data+0x24>
100530fc:	205c      	movs	r0, #92	; 0x5c
100530fe:	e7cf      	b.n	100530a0 <sdb_find_client_data+0x38>
10053100:	9804      	ldr	r0, [sp, #16]
10053102:	4285      	cmp	r5, r0
10053104:	d901      	bls.n	1005310a <sdb_find_client_data+0xa2>
10053106:	2048      	movs	r0, #72	; 0x48
10053108:	e7ca      	b.n	100530a0 <sdb_find_client_data+0x38>
1005310a:	603d      	str	r5, [r7, #0]
1005310c:	2600      	movs	r6, #0
1005310e:	4f07      	ldr	r7, [pc, #28]	; (1005312c <sdb_find_client_data+0xc4>)
10053110:	e008      	b.n	10053124 <sdb_find_client_data+0xbc>
10053112:	1c64      	adds	r4, r4, #1
10053114:	00a0      	lsls	r0, r4, #2
10053116:	19c0      	adds	r0, r0, r7
10053118:	6801      	ldr	r1, [r0, #0]
1005311a:	9808      	ldr	r0, [sp, #32]
1005311c:	1980      	adds	r0, r0, r6
1005311e:	f7ff fee9 	bl	10052ef4 <int32ToLe4Byte>
10053122:	1d36      	adds	r6, r6, #4
10053124:	42ae      	cmp	r6, r5
10053126:	d3f4      	bcc.n	10053112 <sdb_find_client_data+0xaa>
10053128:	2000      	movs	r0, #0
1005312a:	e7b9      	b.n	100530a0 <sdb_find_client_data+0x38>
1005312c:	10040000 	.word	0x10040000

10053130 <sdb_get_gatt_db_start_address>:
10053130:	4804      	ldr	r0, [pc, #16]	; (10053144 <sdb_get_gatt_db_start_address+0x14>)
10053132:	6801      	ldr	r1, [r0, #0]
10053134:	2009      	movs	r0, #9
10053136:	0200      	lsls	r0, r0, #8
10053138:	1808      	adds	r0, r1, r0
1005313a:	6f41      	ldr	r1, [r0, #116]	; 0x74
1005313c:	6f80      	ldr	r0, [r0, #120]	; 0x78
1005313e:	1808      	adds	r0, r1, r0
10053140:	4770      	bx	lr
10053142:	0000      	.short	0x0000
10053144:	2000098c 	.word	0x2000098c

10053148 <sdb_invalidate_record>:
10053148:	0081      	lsls	r1, r0, #2
1005314a:	b510      	push	{r4, lr}
1005314c:	4805      	ldr	r0, [pc, #20]	; (10053164 <sdb_invalidate_record+0x1c>)
1005314e:	180c      	adds	r4, r1, r0
10053150:	6820      	ldr	r0, [r4, #0]
10053152:	0a01      	lsrs	r1, r0, #8
10053154:	0209      	lsls	r1, r1, #8
10053156:	4620      	mov	r0, r4
10053158:	f7f0 feb0 	bl	10043ebc <FLASH_ProgramWord>
1005315c:	6820      	ldr	r0, [r4, #0]
1005315e:	2000      	movs	r0, #0
10053160:	bd10      	pop	{r4, pc}
10053162:	0000      	.short	0x0000
10053164:	10040000 	.word	0x10040000

10053168 <sdb_read_record>:
10053168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005316a:	4f07      	ldr	r7, [pc, #28]	; (10053188 <sdb_read_record+0x20>)
1005316c:	460e      	mov	r6, r1
1005316e:	4604      	mov	r4, r0
10053170:	2500      	movs	r5, #0
10053172:	00a0      	lsls	r0, r4, #2
10053174:	19c0      	adds	r0, r0, r7
10053176:	6801      	ldr	r1, [r0, #0]
10053178:	1970      	adds	r0, r6, r5
1005317a:	f7ff febb 	bl	10052ef4 <int32ToLe4Byte>
1005317e:	1c64      	adds	r4, r4, #1
10053180:	1d2d      	adds	r5, r5, #4
10053182:	2d50      	cmp	r5, #80	; 0x50
10053184:	d3f5      	bcc.n	10053172 <sdb_read_record+0xa>
10053186:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10053188:	10040000 	.word	0x10040000

1005318c <sdb_read_record_validity>:
1005318c:	4a02      	ldr	r2, [pc, #8]	; (10053198 <sdb_read_record_validity+0xc>)
1005318e:	0080      	lsls	r0, r0, #2
10053190:	1880      	adds	r0, r0, r2
10053192:	6800      	ldr	r0, [r0, #0]
10053194:	7008      	strb	r0, [r1, #0]
10053196:	4770      	bx	lr
10053198:	10040000 	.word	0x10040000

1005319c <sdb_write_record>:
1005319c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1005319e:	2400      	movs	r4, #0
100531a0:	2650      	movs	r6, #80	; 0x50
100531a2:	4605      	mov	r5, r0
100531a4:	2a00      	cmp	r2, #0
100531a6:	d020      	beq.n	100531ea <sdb_write_record+0x4e>
100531a8:	2700      	movs	r7, #0
100531aa:	2009      	movs	r0, #9
100531ac:	06c0      	lsls	r0, r0, #27
100531ae:	6901      	ldr	r1, [r0, #16]
100531b0:	6842      	ldr	r2, [r0, #4]
100531b2:	0152      	lsls	r2, r2, #5
100531b4:	0f52      	lsrs	r2, r2, #29
100531b6:	2a03      	cmp	r2, #3
100531b8:	d00e      	beq.n	100531d8 <sdb_write_record+0x3c>
100531ba:	6842      	ldr	r2, [r0, #4]
100531bc:	0152      	lsls	r2, r2, #5
100531be:	0f52      	lsrs	r2, r2, #29
100531c0:	d00a      	beq.n	100531d8 <sdb_write_record+0x3c>
100531c2:	6840      	ldr	r0, [r0, #4]
100531c4:	1a40      	subs	r0, r0, r1
100531c6:	0200      	lsls	r0, r0, #8
100531c8:	0a00      	lsrs	r0, r0, #8
100531ca:	f7ff f85f 	bl	1005228c <system_time_trans>
100531ce:	4601      	mov	r1, r0
100531d0:	4810      	ldr	r0, [pc, #64]	; (10053214 <sdb_write_record+0x78>)
100531d2:	4281      	cmp	r1, r0
100531d4:	d809      	bhi.n	100531ea <sdb_write_record+0x4e>
100531d6:	e003      	b.n	100531e0 <sdb_write_record+0x44>
100531d8:	20ff      	movs	r0, #255	; 0xff
100531da:	30f5      	adds	r0, #245	; 0xf5
100531dc:	f001 ff26 	bl	1005502c <Delay_With_NOP_Cycles>
100531e0:	207d      	movs	r0, #125	; 0x7d
100531e2:	00c0      	lsls	r0, r0, #3
100531e4:	1c7f      	adds	r7, r7, #1
100531e6:	4287      	cmp	r7, r0
100531e8:	dbdf      	blt.n	100531aa <sdb_write_record+0xe>
100531ea:	9801      	ldr	r0, [sp, #4]
100531ec:	1900      	adds	r0, r0, r4
100531ee:	7807      	ldrb	r7, [r0, #0]
100531f0:	7841      	ldrb	r1, [r0, #1]
100531f2:	020b      	lsls	r3, r1, #8
100531f4:	7881      	ldrb	r1, [r0, #2]
100531f6:	78c0      	ldrb	r0, [r0, #3]
100531f8:	040a      	lsls	r2, r1, #16
100531fa:	0601      	lsls	r1, r0, #24
100531fc:	4311      	orrs	r1, r2
100531fe:	4319      	orrs	r1, r3
10053200:	4339      	orrs	r1, r7
10053202:	4628      	mov	r0, r5
10053204:	f7fd f9c0 	bl	10050588 <Flash_Write_Flagged>
10053208:	1d24      	adds	r4, r4, #4
1005320a:	1c6d      	adds	r5, r5, #1
1005320c:	42b4      	cmp	r4, r6
1005320e:	d3ec      	bcc.n	100531ea <sdb_write_record+0x4e>
10053210:	2000      	movs	r0, #0
10053212:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10053214:	000004cc 	.word	0x000004cc

10053218 <SMP_Process_Q>:
10053218:	b5f0      	push	{r4, r5, r6, r7, lr}
1005321a:	b093      	sub	sp, #76	; 0x4c
1005321c:	2000      	movs	r0, #0
1005321e:	9006      	str	r0, [sp, #24]
10053220:	b672      	cpsid	i
10053222:	4d61      	ldr	r5, [pc, #388]	; (100533a8 <SMP_Process_Q+0x190>)
10053224:	2204      	movs	r2, #4
10053226:	6828      	ldr	r0, [r5, #0]
10053228:	3040      	adds	r0, #64	; 0x40
1005322a:	79c1      	ldrb	r1, [r0, #7]
1005322c:	4311      	orrs	r1, r2
1005322e:	71c1      	strb	r1, [r0, #7]
10053230:	b662      	cpsie	i
10053232:	f001 fec1 	bl	10054fb8 <smp_sc_check_for_ecc_pk_generation_request_ucfg>
10053236:	2700      	movs	r7, #0
10053238:	4e5c      	ldr	r6, [pc, #368]	; (100533ac <SMP_Process_Q+0x194>)
1005323a:	e073      	b.n	10053324 <SMP_Process_Q+0x10c>
1005323c:	6830      	ldr	r0, [r6, #0]
1005323e:	6fc1      	ldr	r1, [r0, #124]	; 0x7c
10053240:	207c      	movs	r0, #124	; 0x7c
10053242:	4378      	muls	r0, r7
10053244:	180c      	adds	r4, r1, r0
10053246:	d06b      	beq.n	10053320 <SMP_Process_Q+0x108>
10053248:	8920      	ldrh	r0, [r4, #8]
1005324a:	2800      	cmp	r0, #0
1005324c:	d068      	beq.n	10053320 <SMP_Process_Q+0x108>
1005324e:	7b61      	ldrb	r1, [r4, #13]
10053250:	07c9      	lsls	r1, r1, #31
10053252:	d05f      	beq.n	10053314 <SMP_Process_Q+0xfc>
10053254:	0500      	lsls	r0, r0, #20
10053256:	0d00      	lsrs	r0, r0, #20
10053258:	4621      	mov	r1, r4
1005325a:	312a      	adds	r1, #42	; 0x2a
1005325c:	9001      	str	r0, [sp, #4]
1005325e:	2210      	movs	r2, #16
10053260:	9111      	str	r1, [sp, #68]	; 0x44
10053262:	a80c      	add	r0, sp, #48	; 0x30
10053264:	f7ef ffab 	bl	100431be <Osal_MemCpy>
10053268:	a907      	add	r1, sp, #28
1005326a:	4620      	mov	r0, r4
1005326c:	f000 fa04 	bl	10053678 <smp_Get_Long_Term_Key>
10053270:	2800      	cmp	r0, #0
10053272:	d03c      	beq.n	100532ee <SMP_Process_Q+0xd6>
10053274:	9801      	ldr	r0, [sp, #4]
10053276:	f7f9 fc11 	bl	1004ca9c <hci_le_long_term_key_requested_negative_reply>
1005327a:	900b      	str	r0, [sp, #44]	; 0x2c
1005327c:	7b20      	ldrb	r0, [r4, #12]
1005327e:	0780      	lsls	r0, r0, #30
10053280:	d00c      	beq.n	1005329c <SMP_Process_Q+0x84>
10053282:	9801      	ldr	r0, [sp, #4]
10053284:	f001 fc26 	bl	10054ad4 <smp_find_remote_device_index>
10053288:	4602      	mov	r2, r0
1005328a:	4b49      	ldr	r3, [pc, #292]	; (100533b0 <SMP_Process_Q+0x198>)
1005328c:	2100      	movs	r1, #0
1005328e:	2001      	movs	r0, #1
10053290:	f001 fa98 	bl	100547c4 <SMP_reset_timer>
10053294:	7b20      	ldrb	r0, [r4, #12]
10053296:	0900      	lsrs	r0, r0, #4
10053298:	0100      	lsls	r0, r0, #4
1005329a:	7320      	strb	r0, [r4, #12]
1005329c:	2002      	movs	r0, #2
1005329e:	9004      	str	r0, [sp, #16]
100532a0:	9801      	ldr	r0, [sp, #4]
100532a2:	9003      	str	r0, [sp, #12]
100532a4:	2003      	movs	r0, #3
100532a6:	9002      	str	r0, [sp, #8]
100532a8:	2137      	movs	r1, #55	; 0x37
100532aa:	6828      	ldr	r0, [r5, #0]
100532ac:	0149      	lsls	r1, r1, #5
100532ae:	1841      	adds	r1, r0, r1
100532b0:	7a89      	ldrb	r1, [r1, #10]
100532b2:	2301      	movs	r3, #1
100532b4:	0789      	lsls	r1, r1, #30
100532b6:	d512      	bpl.n	100532de <SMP_Process_Q+0xc6>
100532b8:	02d9      	lsls	r1, r3, #11
100532ba:	3008      	adds	r0, #8
100532bc:	1840      	adds	r0, r0, r1
100532be:	2213      	movs	r2, #19
100532c0:	6940      	ldr	r0, [r0, #20]
100532c2:	2102      	movs	r1, #2
100532c4:	f001 ff92 	bl	100551ec <aci_event_fifo_push_header>
100532c8:	0001      	movs	r1, r0
100532ca:	d008      	beq.n	100532de <SMP_Process_Q+0xc6>
100532cc:	9a03      	ldr	r2, [sp, #12]
100532ce:	808a      	strh	r2, [r1, #4]
100532d0:	9a02      	ldr	r2, [sp, #8]
100532d2:	2300      	movs	r3, #0
100532d4:	718a      	strb	r2, [r1, #6]
100532d6:	71cb      	strb	r3, [r1, #7]
100532d8:	9804      	ldr	r0, [sp, #16]
100532da:	f001 ff73 	bl	100551c4 <aci_event_fifo_push>
100532de:	980b      	ldr	r0, [sp, #44]	; 0x2c
100532e0:	283a      	cmp	r0, #58	; 0x3a
100532e2:	d00a      	beq.n	100532fa <SMP_Process_Q+0xe2>
100532e4:	7b60      	ldrb	r0, [r4, #13]
100532e6:	0840      	lsrs	r0, r0, #1
100532e8:	0040      	lsls	r0, r0, #1
100532ea:	7360      	strb	r0, [r4, #13]
100532ec:	e012      	b.n	10053314 <SMP_Process_Q+0xfc>
100532ee:	a907      	add	r1, sp, #28
100532f0:	9801      	ldr	r0, [sp, #4]
100532f2:	f7f9 fbcc 	bl	1004ca8e <hci_le_long_term_key_request_reply>
100532f6:	900b      	str	r0, [sp, #44]	; 0x2c
100532f8:	e7f1      	b.n	100532de <SMP_Process_Q+0xc6>
100532fa:	2210      	movs	r2, #16
100532fc:	a90c      	add	r1, sp, #48	; 0x30
100532fe:	9811      	ldr	r0, [sp, #68]	; 0x44
10053300:	f7ef ff5d 	bl	100431be <Osal_MemCpy>
10053304:	b672      	cpsid	i
10053306:	6828      	ldr	r0, [r5, #0]
10053308:	22fb      	movs	r2, #251	; 0xfb
1005330a:	3040      	adds	r0, #64	; 0x40
1005330c:	79c1      	ldrb	r1, [r0, #7]
1005330e:	4011      	ands	r1, r2
10053310:	71c1      	strb	r1, [r0, #7]
10053312:	b662      	cpsie	i
10053314:	7aa0      	ldrb	r0, [r4, #10]
10053316:	2800      	cmp	r0, #0
10053318:	d002      	beq.n	10053320 <SMP_Process_Q+0x108>
1005331a:	4620      	mov	r0, r4
1005331c:	f000 f8e2 	bl	100534e4 <smp_Execute_Actions_wrt_Current_State>
10053320:	1c7f      	adds	r7, r7, #1
10053322:	b2ff      	uxtb	r7, r7
10053324:	6828      	ldr	r0, [r5, #0]
10053326:	30a0      	adds	r0, #160	; 0xa0
10053328:	7b00      	ldrb	r0, [r0, #12]
1005332a:	42b8      	cmp	r0, r7
1005332c:	d886      	bhi.n	1005323c <SMP_Process_Q+0x24>
1005332e:	e034      	b.n	1005339a <SMP_Process_Q+0x182>
10053330:	a906      	add	r1, sp, #24
10053332:	6830      	ldr	r0, [r6, #0]
10053334:	f002 fe01 	bl	10055f3a <acl_list_remove_head>
10053338:	9806      	ldr	r0, [sp, #24]
1005333a:	8880      	ldrh	r0, [r0, #4]
1005333c:	f001 f8d4 	bl	100544e8 <SMP_get_remote_device_list_item>
10053340:	0004      	movs	r4, r0
10053342:	d02a      	beq.n	1005339a <SMP_Process_Q+0x182>
10053344:	9806      	ldr	r0, [sp, #24]
10053346:	6881      	ldr	r1, [r0, #8]
10053348:	7b09      	ldrb	r1, [r1, #12]
1005334a:	2905      	cmp	r1, #5
1005334c:	d005      	beq.n	1005335a <SMP_Process_Q+0x142>
1005334e:	4621      	mov	r1, r4
10053350:	f000 fb50 	bl	100539f4 <smp_Process_Rx_Packet_wrt_Current_State>
10053354:	28ff      	cmp	r0, #255	; 0xff
10053356:	d007      	beq.n	10053368 <SMP_Process_Q+0x150>
10053358:	e013      	b.n	10053382 <SMP_Process_Q+0x16a>
1005335a:	7aa1      	ldrb	r1, [r4, #10]
1005335c:	29fb      	cmp	r1, #251	; 0xfb
1005335e:	d018      	beq.n	10053392 <SMP_Process_Q+0x17a>
10053360:	4621      	mov	r1, r4
10053362:	f001 fd45 	bl	10054df0 <smp_pairing_failed_receive>
10053366:	e014      	b.n	10053392 <SMP_Process_Q+0x17a>
10053368:	9806      	ldr	r0, [sp, #24]
1005336a:	6881      	ldr	r1, [r0, #8]
1005336c:	7b09      	ldrb	r1, [r1, #12]
1005336e:	2903      	cmp	r1, #3
10053370:	d009      	beq.n	10053386 <SMP_Process_Q+0x16e>
10053372:	7ae1      	ldrb	r1, [r4, #11]
10053374:	0709      	lsls	r1, r1, #28
10053376:	d506      	bpl.n	10053386 <SMP_Process_Q+0x16e>
10053378:	9000      	str	r0, [sp, #0]
1005337a:	9401      	str	r4, [sp, #4]
1005337c:	4668      	mov	r0, sp
1005337e:	f000 fb37 	bl	100539f0 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt_ucfg>
10053382:	2800      	cmp	r0, #0
10053384:	d005      	beq.n	10053392 <SMP_Process_Q+0x17a>
10053386:	9906      	ldr	r1, [sp, #24]
10053388:	6830      	ldr	r0, [r6, #0]
1005338a:	f002 fd84 	bl	10055e96 <acl_list_insert_head>
1005338e:	b013      	add	sp, #76	; 0x4c
10053390:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053392:	2101      	movs	r1, #1
10053394:	9806      	ldr	r0, [sp, #24]
10053396:	f7fd fa1d 	bl	100507d4 <PM_Release_Acl_Pckt>
1005339a:	6830      	ldr	r0, [r6, #0]
1005339c:	f002 fda4 	bl	10055ee8 <acl_list_is_empty>
100533a0:	2800      	cmp	r0, #0
100533a2:	d0c5      	beq.n	10053330 <SMP_Process_Q+0x118>
100533a4:	e7f3      	b.n	1005338e <SMP_Process_Q+0x176>
100533a6:	0000      	.short	0x0000
100533a8:	2000098c 	.word	0x2000098c
100533ac:	20000990 	.word	0x20000990
100533b0:	00007530 	.word	0x00007530

100533b4 <int32ToLe4Byte>:
100533b4:	7001      	strb	r1, [r0, #0]
100533b6:	0a0a      	lsrs	r2, r1, #8
100533b8:	7042      	strb	r2, [r0, #1]
100533ba:	0c0a      	lsrs	r2, r1, #16
100533bc:	7082      	strb	r2, [r0, #2]
100533be:	0e09      	lsrs	r1, r1, #24
100533c0:	70c1      	strb	r1, [r0, #3]
100533c2:	4770      	bx	lr

100533c4 <smp_Build_AuthReq_Field>:
100533c4:	07c0      	lsls	r0, r0, #31
100533c6:	07c9      	lsls	r1, r1, #31
100533c8:	0fc0      	lsrs	r0, r0, #31
100533ca:	0f49      	lsrs	r1, r1, #29
100533cc:	4308      	orrs	r0, r1
100533ce:	07d1      	lsls	r1, r2, #31
100533d0:	0f09      	lsrs	r1, r1, #28
100533d2:	4308      	orrs	r0, r1
100533d4:	07d9      	lsls	r1, r3, #31
100533d6:	0ec9      	lsrs	r1, r1, #27
100533d8:	4308      	orrs	r0, r1
100533da:	4770      	bx	lr

100533dc <smp_Build_Pairing_ReqResp_Packet>:
100533dc:	b5f0      	push	{r4, r5, r6, r7, lr}
100533de:	2407      	movs	r4, #7
100533e0:	9e05      	ldr	r6, [sp, #20]
100533e2:	9d06      	ldr	r5, [sp, #24]
100533e4:	80c4      	strh	r4, [r0, #6]
100533e6:	6884      	ldr	r4, [r0, #8]
100533e8:	07d2      	lsls	r2, r2, #31
100533ea:	7321      	strb	r1, [r4, #12]
100533ec:	4c08      	ldr	r4, [pc, #32]	; (10053410 <smp_Build_Pairing_ReqResp_Packet+0x34>)
100533ee:	6881      	ldr	r1, [r0, #8]
100533f0:	6824      	ldr	r4, [r4, #0]
100533f2:	0fd2      	lsrs	r2, r2, #31
100533f4:	7e27      	ldrb	r7, [r4, #24]
100533f6:	734f      	strb	r7, [r1, #13]
100533f8:	6881      	ldr	r1, [r0, #8]
100533fa:	738a      	strb	r2, [r1, #14]
100533fc:	6881      	ldr	r1, [r0, #8]
100533fe:	73cb      	strb	r3, [r1, #15]
10053400:	6881      	ldr	r1, [r0, #8]
10053402:	7be2      	ldrb	r2, [r4, #15]
10053404:	740a      	strb	r2, [r1, #16]
10053406:	6881      	ldr	r1, [r0, #8]
10053408:	744e      	strb	r6, [r1, #17]
1005340a:	6880      	ldr	r0, [r0, #8]
1005340c:	7485      	strb	r5, [r0, #18]
1005340e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053410:	20000990 	.word	0x20000990

10053414 <smp_Check_Incoming_Pairing_Parameters>:
10053414:	4601      	mov	r1, r0
10053416:	6889      	ldr	r1, [r1, #8]
10053418:	2000      	movs	r0, #0
1005341a:	7b4a      	ldrb	r2, [r1, #13]
1005341c:	2a04      	cmp	r2, #4
1005341e:	d805      	bhi.n	1005342c <smp_Check_Incoming_Pairing_Parameters+0x18>
10053420:	7b8a      	ldrb	r2, [r1, #14]
10053422:	2a01      	cmp	r2, #1
10053424:	d802      	bhi.n	1005342c <smp_Check_Incoming_Pairing_Parameters+0x18>
10053426:	7bca      	ldrb	r2, [r1, #15]
10053428:	0792      	lsls	r2, r2, #30
1005342a:	d501      	bpl.n	10053430 <smp_Check_Incoming_Pairing_Parameters+0x1c>
1005342c:	200a      	movs	r0, #10
1005342e:	4770      	bx	lr
10053430:	4a04      	ldr	r2, [pc, #16]	; (10053444 <smp_Check_Incoming_Pairing_Parameters+0x30>)
10053432:	7c09      	ldrb	r1, [r1, #16]
10053434:	6812      	ldr	r2, [r2, #0]
10053436:	7b92      	ldrb	r2, [r2, #14]
10053438:	4291      	cmp	r1, r2
1005343a:	d301      	bcc.n	10053440 <smp_Check_Incoming_Pairing_Parameters+0x2c>
1005343c:	2910      	cmp	r1, #16
1005343e:	d9f6      	bls.n	1005342e <smp_Check_Incoming_Pairing_Parameters+0x1a>
10053440:	2006      	movs	r0, #6
10053442:	4770      	bx	lr
10053444:	20000990 	.word	0x20000990

10053448 <smp_Determine_Key_Association_Method>:
10053448:	b5f0      	push	{r4, r5, r6, r7, lr}
1005344a:	b087      	sub	sp, #28
1005344c:	4604      	mov	r4, r0
1005344e:	221c      	movs	r2, #28
10053450:	4922      	ldr	r1, [pc, #136]	; (100534dc <smp_Determine_Key_Association_Method+0x94>)
10053452:	4668      	mov	r0, sp
10053454:	f7f1 f890 	bl	10044578 <__aeabi_memcpy4>
10053458:	7e22      	ldrb	r2, [r4, #24]
1005345a:	2103      	movs	r1, #3
1005345c:	43d0      	mvns	r0, r2
1005345e:	0783      	lsls	r3, r0, #30
10053460:	481f      	ldr	r0, [pc, #124]	; (100534e0 <smp_Determine_Key_Association_Method+0x98>)
10053462:	2b00      	cmp	r3, #0
10053464:	6800      	ldr	r0, [r0, #0]
10053466:	d004      	beq.n	10053472 <smp_Determine_Key_Association_Method+0x2a>
10053468:	7ae3      	ldrb	r3, [r4, #11]
1005346a:	071d      	lsls	r5, r3, #28
1005346c:	d505      	bpl.n	1005347a <smp_Determine_Key_Association_Method+0x32>
1005346e:	07d5      	lsls	r5, r2, #31
10053470:	d001      	beq.n	10053476 <smp_Determine_Key_Association_Method+0x2e>
10053472:	77e1      	strb	r1, [r4, #31]
10053474:	e01c      	b.n	100534b0 <smp_Determine_Key_Association_Method+0x68>
10053476:	0792      	lsls	r2, r2, #30
10053478:	d4fb      	bmi.n	10053472 <smp_Determine_Key_Association_Method+0x2a>
1005347a:	7ee2      	ldrb	r2, [r4, #27]
1005347c:	2505      	movs	r5, #5
1005347e:	422a      	tst	r2, r5
10053480:	d012      	beq.n	100534a8 <smp_Determine_Key_Association_Method+0x60>
10053482:	7e62      	ldrb	r2, [r4, #25]
10053484:	7e05      	ldrb	r5, [r0, #24]
10053486:	0096      	lsls	r6, r2, #2
10053488:	1996      	adds	r6, r2, r6
1005348a:	466f      	mov	r7, sp
1005348c:	19f6      	adds	r6, r6, r7
1005348e:	5dad      	ldrb	r5, [r5, r6]
10053490:	77e5      	strb	r5, [r4, #31]
10053492:	2d00      	cmp	r5, #0
10053494:	d10c      	bne.n	100534b0 <smp_Determine_Key_Association_Method+0x68>
10053496:	071b      	lsls	r3, r3, #28
10053498:	d408      	bmi.n	100534ac <smp_Determine_Key_Association_Method+0x64>
1005349a:	2a01      	cmp	r2, #1
1005349c:	d102      	bne.n	100534a4 <smp_Determine_Key_Association_Method+0x5c>
1005349e:	7e02      	ldrb	r2, [r0, #24]
100534a0:	2a01      	cmp	r2, #1
100534a2:	d001      	beq.n	100534a8 <smp_Determine_Key_Association_Method+0x60>
100534a4:	2202      	movs	r2, #2
100534a6:	e002      	b.n	100534ae <smp_Determine_Key_Association_Method+0x66>
100534a8:	2201      	movs	r2, #1
100534aa:	e000      	b.n	100534ae <smp_Determine_Key_Association_Method+0x66>
100534ac:	2204      	movs	r2, #4
100534ae:	77e2      	strb	r2, [r4, #31]
100534b0:	7b40      	ldrb	r0, [r0, #13]
100534b2:	07c0      	lsls	r0, r0, #31
100534b4:	0fc0      	lsrs	r0, r0, #31
100534b6:	d002      	beq.n	100534be <smp_Determine_Key_Association_Method+0x76>
100534b8:	7fe0      	ldrb	r0, [r4, #31]
100534ba:	2801      	cmp	r0, #1
100534bc:	d006      	beq.n	100534cc <smp_Determine_Key_Association_Method+0x84>
100534be:	7ae0      	ldrb	r0, [r4, #11]
100534c0:	0700      	lsls	r0, r0, #28
100534c2:	d509      	bpl.n	100534d8 <smp_Determine_Key_Association_Method+0x90>
100534c4:	7fe0      	ldrb	r0, [r4, #31]
100534c6:	2802      	cmp	r0, #2
100534c8:	d004      	beq.n	100534d4 <smp_Determine_Key_Association_Method+0x8c>
100534ca:	e005      	b.n	100534d8 <smp_Determine_Key_Association_Method+0x90>
100534cc:	77e1      	strb	r1, [r4, #31]
100534ce:	2047      	movs	r0, #71	; 0x47
100534d0:	b007      	add	sp, #28
100534d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100534d4:	2000      	movs	r0, #0
100534d6:	73e0      	strb	r0, [r4, #15]
100534d8:	2000      	movs	r0, #0
100534da:	e7f9      	b.n	100534d0 <smp_Determine_Key_Association_Method+0x88>
100534dc:	10058f54 	.word	0x10058f54
100534e0:	20000990 	.word	0x20000990

100534e4 <smp_Execute_Actions_wrt_Current_State>:
100534e4:	b5f0      	push	{r4, r5, r6, r7, lr}
100534e6:	4604      	mov	r4, r0
100534e8:	7a80      	ldrb	r0, [r0, #10]
100534ea:	4625      	mov	r5, r4
100534ec:	3560      	adds	r5, #96	; 0x60
100534ee:	b099      	sub	sp, #100	; 0x64
100534f0:	2810      	cmp	r0, #16
100534f2:	d020      	beq.n	10053536 <smp_Execute_Actions_wrt_Current_State+0x52>
100534f4:	28d1      	cmp	r0, #209	; 0xd1
100534f6:	d07b      	beq.n	100535f0 <smp_Execute_Actions_wrt_Current_State+0x10c>
100534f8:	28d2      	cmp	r0, #210	; 0xd2
100534fa:	d079      	beq.n	100535f0 <smp_Execute_Actions_wrt_Current_State+0x10c>
100534fc:	28d3      	cmp	r0, #211	; 0xd3
100534fe:	d077      	beq.n	100535f0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10053500:	28d4      	cmp	r0, #212	; 0xd4
10053502:	d075      	beq.n	100535f0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10053504:	28d5      	cmp	r0, #213	; 0xd5
10053506:	d073      	beq.n	100535f0 <smp_Execute_Actions_wrt_Current_State+0x10c>
10053508:	28f0      	cmp	r0, #240	; 0xf0
1005350a:	d075      	beq.n	100535f8 <smp_Execute_Actions_wrt_Current_State+0x114>
1005350c:	28fe      	cmp	r0, #254	; 0xfe
1005350e:	d077      	beq.n	10053600 <smp_Execute_Actions_wrt_Current_State+0x11c>
10053510:	28a2      	cmp	r0, #162	; 0xa2
10053512:	d07f      	beq.n	10053614 <smp_Execute_Actions_wrt_Current_State+0x130>
10053514:	28b2      	cmp	r0, #178	; 0xb2
10053516:	d07d      	beq.n	10053614 <smp_Execute_Actions_wrt_Current_State+0x130>
10053518:	28b4      	cmp	r0, #180	; 0xb4
1005351a:	d068      	beq.n	100535ee <smp_Execute_Actions_wrt_Current_State+0x10a>
1005351c:	28bf      	cmp	r0, #191	; 0xbf
1005351e:	4620      	mov	r0, r4
10053520:	d077      	beq.n	10053612 <smp_Execute_Actions_wrt_Current_State+0x12e>
10053522:	f000 f8a5 	bl	10053670 <smp_Execute_Actions_wrt_Current_State_MI_excerpt_ucfg>
10053526:	7ae0      	ldrb	r0, [r4, #11]
10053528:	0700      	lsls	r0, r0, #28
1005352a:	d502      	bpl.n	10053532 <smp_Execute_Actions_wrt_Current_State+0x4e>
1005352c:	4620      	mov	r0, r4
1005352e:	f000 f8a0 	bl	10053672 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2_ucfg>
10053532:	b019      	add	sp, #100	; 0x64
10053534:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053536:	7860      	ldrb	r0, [r4, #1]
10053538:	aa04      	add	r2, sp, #16
1005353a:	07c1      	lsls	r1, r0, #31
1005353c:	0fc9      	lsrs	r1, r1, #31
1005353e:	1ca0      	adds	r0, r4, #2
10053540:	f7ff fa96 	bl	10052a70 <SDB_Find_Record>
10053544:	2702      	movs	r7, #2
10053546:	4e49      	ldr	r6, [pc, #292]	; (1005366c <smp_Execute_Actions_wrt_Current_State+0x188>)
10053548:	2800      	cmp	r0, #0
1005354a:	d02a      	beq.n	100535a2 <smp_Execute_Actions_wrt_Current_State+0xbe>
1005354c:	f7fd fb60 	bl	10050c10 <GapIsPrivacySupported>
10053550:	2800      	cmp	r0, #0
10053552:	d024      	beq.n	1005359e <smp_Execute_Actions_wrt_Current_State+0xba>
10053554:	7d28      	ldrb	r0, [r5, #20]
10053556:	07c0      	lsls	r0, r0, #31
10053558:	d021      	beq.n	1005359e <smp_Execute_Actions_wrt_Current_State+0xba>
1005355a:	f7ff faeb 	bl	10052b34 <SDB_Get_Number_Of_Valid_Records>
1005355e:	28fa      	cmp	r0, #250	; 0xfa
10053560:	d01d      	beq.n	1005359e <smp_Execute_Actions_wrt_Current_State+0xba>
10053562:	2800      	cmp	r0, #0
10053564:	d01b      	beq.n	1005359e <smp_Execute_Actions_wrt_Current_State+0xba>
10053566:	79e0      	ldrb	r0, [r4, #7]
10053568:	0640      	lsls	r0, r0, #25
1005356a:	d518      	bpl.n	1005359e <smp_Execute_Actions_wrt_Current_State+0xba>
1005356c:	2002      	movs	r0, #2
1005356e:	9003      	str	r0, [sp, #12]
10053570:	2137      	movs	r1, #55	; 0x37
10053572:	6830      	ldr	r0, [r6, #0]
10053574:	0149      	lsls	r1, r1, #5
10053576:	1841      	adds	r1, r0, r1
10053578:	7ac9      	ldrb	r1, [r1, #11]
1005357a:	8925      	ldrh	r5, [r4, #8]
1005357c:	2301      	movs	r3, #1
1005357e:	0709      	lsls	r1, r1, #28
10053580:	d50d      	bpl.n	1005359e <smp_Execute_Actions_wrt_Current_State+0xba>
10053582:	02de      	lsls	r6, r3, #11
10053584:	3008      	adds	r0, #8
10053586:	1980      	adds	r0, r0, r6
10053588:	221a      	movs	r2, #26
1005358a:	4639      	mov	r1, r7
1005358c:	6940      	ldr	r0, [r0, #20]
1005358e:	f001 fe2d 	bl	100551ec <aci_event_fifo_push_header>
10053592:	0001      	movs	r1, r0
10053594:	d003      	beq.n	1005359e <smp_Execute_Actions_wrt_Current_State+0xba>
10053596:	808d      	strh	r5, [r1, #4]
10053598:	9803      	ldr	r0, [sp, #12]
1005359a:	f001 fe13 	bl	100551c4 <aci_event_fifo_push>
1005359e:	2000      	movs	r0, #0
100535a0:	e04d      	b.n	1005363e <smp_Execute_Actions_wrt_Current_State+0x15a>
100535a2:	a904      	add	r1, sp, #16
100535a4:	4620      	mov	r0, r4
100535a6:	f7ff fb43 	bl	10052c30 <SDB_get_security_data_record>
100535aa:	8920      	ldrh	r0, [r4, #8]
100535ac:	0401      	lsls	r1, r0, #16
100535ae:	d5ba      	bpl.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
100535b0:	2102      	movs	r1, #2
100535b2:	9101      	str	r1, [sp, #4]
100535b4:	0505      	lsls	r5, r0, #20
100535b6:	2137      	movs	r1, #55	; 0x37
100535b8:	6830      	ldr	r0, [r6, #0]
100535ba:	0149      	lsls	r1, r1, #5
100535bc:	1841      	adds	r1, r0, r1
100535be:	7a89      	ldrb	r1, [r1, #10]
100535c0:	0d2d      	lsrs	r5, r5, #20
100535c2:	2301      	movs	r3, #1
100535c4:	0709      	lsls	r1, r1, #28
100535c6:	d5ae      	bpl.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
100535c8:	02de      	lsls	r6, r3, #11
100535ca:	3008      	adds	r0, #8
100535cc:	1980      	adds	r0, r0, r6
100535ce:	2215      	movs	r2, #21
100535d0:	4639      	mov	r1, r7
100535d2:	6940      	ldr	r0, [r0, #20]
100535d4:	f001 fe0a 	bl	100551ec <aci_event_fifo_push_header>
100535d8:	0001      	movs	r1, r0
100535da:	d0a4      	beq.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
100535dc:	808d      	strh	r5, [r1, #4]
100535de:	9801      	ldr	r0, [sp, #4]
100535e0:	f001 fdf0 	bl	100551c4 <aci_event_fifo_push>
100535e4:	e79f      	b.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
100535e6:	e003      	b.n	100535f0 <smp_Execute_Actions_wrt_Current_State+0x10c>
100535e8:	e006      	b.n	100535f8 <smp_Execute_Actions_wrt_Current_State+0x114>
100535ea:	e009      	b.n	10053600 <smp_Execute_Actions_wrt_Current_State+0x11c>
100535ec:	e012      	b.n	10053614 <smp_Execute_Actions_wrt_Current_State+0x130>
100535ee:	e02a      	b.n	10053646 <smp_Execute_Actions_wrt_Current_State+0x162>
100535f0:	4620      	mov	r0, r4
100535f2:	f000 f8c5 	bl	10053780 <smp_Keys_Distribution_Send>
100535f6:	e796      	b.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
100535f8:	4620      	mov	r0, r4
100535fa:	f001 fbbd 	bl	10054d78 <smp_pairing_completed>
100535fe:	e792      	b.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
10053600:	7d28      	ldrb	r0, [r5, #20]
10053602:	0600      	lsls	r0, r0, #24
10053604:	d58f      	bpl.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
10053606:	227c      	movs	r2, #124	; 0x7c
10053608:	2100      	movs	r1, #0
1005360a:	4620      	mov	r0, r4
1005360c:	f7ef fddb 	bl	100431c6 <Osal_MemSet>
10053610:	e789      	b.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
10053612:	e027      	b.n	10053664 <smp_Execute_Actions_wrt_Current_State+0x180>
10053614:	7ae1      	ldrb	r1, [r4, #11]
10053616:	2001      	movs	r0, #1
10053618:	0709      	lsls	r1, r1, #28
1005361a:	d504      	bpl.n	10053626 <smp_Execute_Actions_wrt_Current_State+0x142>
1005361c:	4620      	mov	r0, r4
1005361e:	f000 f829 	bl	10053674 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2_ucfg>
10053622:	2800      	cmp	r0, #0
10053624:	d0de      	beq.n	100535e4 <smp_Execute_Actions_wrt_Current_State+0x100>
10053626:	7fe1      	ldrb	r1, [r4, #31]
10053628:	2902      	cmp	r1, #2
1005362a:	d102      	bne.n	10053632 <smp_Execute_Actions_wrt_Current_State+0x14e>
1005362c:	7ee1      	ldrb	r1, [r4, #27]
1005362e:	06c9      	lsls	r1, r1, #27
10053630:	d5d8      	bpl.n	100535e4 <smp_Execute_Actions_wrt_Current_State+0x100>
10053632:	2800      	cmp	r0, #0
10053634:	d0d6      	beq.n	100535e4 <smp_Execute_Actions_wrt_Current_State+0x100>
10053636:	7d28      	ldrb	r0, [r5, #20]
10053638:	07c0      	lsls	r0, r0, #31
1005363a:	d002      	beq.n	10053642 <smp_Execute_Actions_wrt_Current_State+0x15e>
1005363c:	20b4      	movs	r0, #180	; 0xb4
1005363e:	72a0      	strb	r0, [r4, #10]
10053640:	e771      	b.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
10053642:	20a4      	movs	r0, #164	; 0xa4
10053644:	e7fb      	b.n	1005363e <smp_Execute_Actions_wrt_Current_State+0x15a>
10053646:	4620      	mov	r0, r4
10053648:	2110      	movs	r1, #16
1005364a:	3064      	adds	r0, #100	; 0x64
1005364c:	f7f9 f844 	bl	1004c6d8 <HAL_Generate_Random_Bytes_To>
10053650:	7ae0      	ldrb	r0, [r4, #11]
10053652:	0700      	lsls	r0, r0, #28
10053654:	d503      	bpl.n	1005365e <smp_Execute_Actions_wrt_Current_State+0x17a>
10053656:	4620      	mov	r0, r4
10053658:	f000 fc32 	bl	10053ec0 <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt_ucfg>
1005365c:	e763      	b.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
1005365e:	21b5      	movs	r1, #181	; 0xb5
10053660:	72a1      	strb	r1, [r4, #10]
10053662:	e760      	b.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
10053664:	f001 fac8 	bl	10054bf8 <smp_keys_distribution_start>
10053668:	e75d      	b.n	10053526 <smp_Execute_Actions_wrt_Current_State+0x42>
1005366a:	0000      	.short	0x0000
1005366c:	2000098c 	.word	0x2000098c

10053670 <smp_Execute_Actions_wrt_Current_State_MI_excerpt_ucfg>:
10053670:	4770      	bx	lr

10053672 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase2as2_ucfg>:
10053672:	4770      	bx	lr

10053674 <smp_Execute_Actions_wrt_Current_State_sc_excerpt_phase_1_to_2_ucfg>:
10053674:	201f      	movs	r0, #31
10053676:	4770      	bx	lr

10053678 <smp_Get_Long_Term_Key>:
10053678:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
1005367a:	b085      	sub	sp, #20
1005367c:	2700      	movs	r7, #0
1005367e:	4604      	mov	r4, r0
10053680:	4605      	mov	r5, r0
10053682:	4606      	mov	r6, r0
10053684:	9701      	str	r7, [sp, #4]
10053686:	7a80      	ldrb	r0, [r0, #10]
10053688:	352a      	adds	r5, #42	; 0x2a
1005368a:	3632      	adds	r6, #50	; 0x32
1005368c:	28bc      	cmp	r0, #188	; 0xbc
1005368e:	d024      	beq.n	100536da <smp_Get_Long_Term_Key+0x62>
10053690:	28f1      	cmp	r0, #241	; 0xf1
10053692:	d111      	bne.n	100536b8 <smp_Get_Long_Term_Key+0x40>
10053694:	7ae0      	ldrb	r0, [r4, #11]
10053696:	0700      	lsls	r0, r0, #28
10053698:	d41f      	bmi.n	100536da <smp_Get_Long_Term_Key+0x62>
1005369a:	4620      	mov	r0, r4
1005369c:	3020      	adds	r0, #32
1005369e:	2300      	movs	r3, #0
100536a0:	aa02      	add	r2, sp, #8
100536a2:	4629      	mov	r1, r5
100536a4:	9003      	str	r0, [sp, #12]
100536a6:	f000 fc79 	bl	10053f9c <SMA_generate_EDIV_recovery_DIV>
100536aa:	2202      	movs	r2, #2
100536ac:	4631      	mov	r1, r6
100536ae:	a802      	add	r0, sp, #8
100536b0:	f7ef fd8d 	bl	100431ce <Osal_MemCmp>
100536b4:	2800      	cmp	r0, #0
100536b6:	d007      	beq.n	100536c8 <smp_Get_Long_Term_Key+0x50>
100536b8:	4622      	mov	r2, r4
100536ba:	4629      	mov	r1, r5
100536bc:	4630      	mov	r0, r6
100536be:	f7ff f987 	bl	100529d0 <SDB_Find_Matching_LTK>
100536c2:	2041      	movs	r0, #65	; 0x41
100536c4:	b007      	add	sp, #28
100536c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100536c8:	480a      	ldr	r0, [pc, #40]	; (100536f4 <smp_Get_Long_Term_Key+0x7c>)
100536ca:	9700      	str	r7, [sp, #0]
100536cc:	6800      	ldr	r0, [r0, #0]
100536ce:	462b      	mov	r3, r5
100536d0:	aa01      	add	r2, sp, #4
100536d2:	9903      	ldr	r1, [sp, #12]
100536d4:	3080      	adds	r0, #128	; 0x80
100536d6:	f000 fc11 	bl	10053efc <SMA_Diversify>
100536da:	2210      	movs	r2, #16
100536dc:	2100      	movs	r1, #0
100536de:	9806      	ldr	r0, [sp, #24]
100536e0:	f7ef fd71 	bl	100431c6 <Osal_MemSet>
100536e4:	7f22      	ldrb	r2, [r4, #28]
100536e6:	4629      	mov	r1, r5
100536e8:	9806      	ldr	r0, [sp, #24]
100536ea:	f7ef fd68 	bl	100431be <Osal_MemCpy>
100536ee:	2000      	movs	r0, #0
100536f0:	e7e8      	b.n	100536c4 <smp_Get_Long_Term_Key+0x4c>
100536f2:	0000      	.short	0x0000
100536f4:	2000098c 	.word	0x2000098c

100536f8 <smp_Get_Pairing_Parameters_From_Peer_Packet>:
100536f8:	b510      	push	{r4, lr}
100536fa:	6882      	ldr	r2, [r0, #8]
100536fc:	7b52      	ldrb	r2, [r2, #13]
100536fe:	764a      	strb	r2, [r1, #25]
10053700:	6882      	ldr	r2, [r0, #8]
10053702:	7b92      	ldrb	r2, [r2, #14]
10053704:	2a01      	cmp	r2, #1
10053706:	d103      	bne.n	10053710 <smp_Get_Pairing_Parameters_From_Peer_Packet+0x18>
10053708:	7e0a      	ldrb	r2, [r1, #24]
1005370a:	2302      	movs	r3, #2
1005370c:	431a      	orrs	r2, r3
1005370e:	760a      	strb	r2, [r1, #24]
10053710:	4b1a      	ldr	r3, [pc, #104]	; (1005377c <smp_Get_Pairing_Parameters_From_Peer_Packet+0x84>)
10053712:	6882      	ldr	r2, [r0, #8]
10053714:	681b      	ldr	r3, [r3, #0]
10053716:	7bd2      	ldrb	r2, [r2, #15]
10053718:	3380      	adds	r3, #128	; 0x80
1005371a:	721a      	strb	r2, [r3, #8]
1005371c:	6884      	ldr	r4, [r0, #8]
1005371e:	7c64      	ldrb	r4, [r4, #17]
10053720:	725c      	strb	r4, [r3, #9]
10053722:	6884      	ldr	r4, [r0, #8]
10053724:	7ca4      	ldrb	r4, [r4, #18]
10053726:	729c      	strb	r4, [r3, #10]
10053728:	7e8b      	ldrb	r3, [r1, #26]
1005372a:	07d4      	lsls	r4, r2, #31
1005372c:	0fe4      	lsrs	r4, r4, #31
1005372e:	4323      	orrs	r3, r4
10053730:	768b      	strb	r3, [r1, #26]
10053732:	7ecb      	ldrb	r3, [r1, #27]
10053734:	2404      	movs	r4, #4
10053736:	4022      	ands	r2, r4
10053738:	4313      	orrs	r3, r2
1005373a:	76cb      	strb	r3, [r1, #27]
1005373c:	6882      	ldr	r2, [r0, #8]
1005373e:	7c12      	ldrb	r2, [r2, #16]
10053740:	770a      	strb	r2, [r1, #28]
10053742:	2274      	movs	r2, #116	; 0x74
10053744:	5c52      	ldrb	r2, [r2, r1]
10053746:	07d2      	lsls	r2, r2, #31
10053748:	d012      	beq.n	10053770 <smp_Get_Pairing_Parameters_From_Peer_Packet+0x78>
1005374a:	7f8b      	ldrb	r3, [r1, #30]
1005374c:	2205      	movs	r2, #5
1005374e:	08dc      	lsrs	r4, r3, #3
10053750:	00e4      	lsls	r4, r4, #3
10053752:	778c      	strb	r4, [r1, #30]
10053754:	6883      	ldr	r3, [r0, #8]
10053756:	7c9b      	ldrb	r3, [r3, #18]
10053758:	075b      	lsls	r3, r3, #29
1005375a:	0f5b      	lsrs	r3, r3, #29
1005375c:	4323      	orrs	r3, r4
1005375e:	778b      	strb	r3, [r1, #30]
10053760:	6880      	ldr	r0, [r0, #8]
10053762:	3008      	adds	r0, #8
10053764:	1880      	adds	r0, r0, r2
10053766:	7900      	ldrb	r0, [r0, #4]
10053768:	0740      	lsls	r0, r0, #29
1005376a:	0f40      	lsrs	r0, r0, #29
1005376c:	7748      	strb	r0, [r1, #29]
1005376e:	bd10      	pop	{r4, pc}
10053770:	6883      	ldr	r3, [r0, #8]
10053772:	2206      	movs	r2, #6
10053774:	7c5b      	ldrb	r3, [r3, #17]
10053776:	075b      	lsls	r3, r3, #29
10053778:	0f5b      	lsrs	r3, r3, #29
1005377a:	e7f0      	b.n	1005375e <smp_Get_Pairing_Parameters_From_Peer_Packet+0x66>
1005377c:	20000990 	.word	0x20000990

10053780 <smp_Keys_Distribution_Send>:
10053780:	b5f0      	push	{r4, r5, r6, r7, lr}
10053782:	b08d      	sub	sp, #52	; 0x34
10053784:	2700      	movs	r7, #0
10053786:	4605      	mov	r5, r0
10053788:	9707      	str	r7, [sp, #28]
1005378a:	8900      	ldrh	r0, [r0, #8]
1005378c:	2220      	movs	r2, #32
1005378e:	0501      	lsls	r1, r0, #20
10053790:	0d09      	lsrs	r1, r1, #20
10053792:	4638      	mov	r0, r7
10053794:	f7fc ffc2 	bl	1005071c <PM_Get_Pckt>
10053798:	0004      	movs	r4, r0
1005379a:	d06f      	beq.n	1005387c <smp_Keys_Distribution_Send+0xfc>
1005379c:	462e      	mov	r6, r5
1005379e:	3660      	adds	r6, #96	; 0x60
100537a0:	7d30      	ldrb	r0, [r6, #20]
100537a2:	06c1      	lsls	r1, r0, #27
100537a4:	4628      	mov	r0, r5
100537a6:	3020      	adds	r0, #32
100537a8:	9002      	str	r0, [sp, #8]
100537aa:	2900      	cmp	r1, #0
100537ac:	db06      	blt.n	100537bc <smp_Keys_Distribution_Send+0x3c>
100537ae:	2102      	movs	r1, #2
100537b0:	f7f8 ff92 	bl	1004c6d8 <HAL_Generate_Random_Bytes_To>
100537b4:	7d30      	ldrb	r0, [r6, #20]
100537b6:	2110      	movs	r1, #16
100537b8:	4308      	orrs	r0, r1
100537ba:	7530      	strb	r0, [r6, #20]
100537bc:	7aa8      	ldrb	r0, [r5, #10]
100537be:	462e      	mov	r6, r5
100537c0:	3622      	adds	r6, #34	; 0x22
100537c2:	28d1      	cmp	r0, #209	; 0xd1
100537c4:	d008      	beq.n	100537d8 <smp_Keys_Distribution_Send+0x58>
100537c6:	28d2      	cmp	r0, #210	; 0xd2
100537c8:	d01b      	beq.n	10053802 <smp_Keys_Distribution_Send+0x82>
100537ca:	28d3      	cmp	r0, #211	; 0xd3
100537cc:	d02e      	beq.n	1005382c <smp_Keys_Distribution_Send+0xac>
100537ce:	28d4      	cmp	r0, #212	; 0xd4
100537d0:	d037      	beq.n	10053842 <smp_Keys_Distribution_Send+0xc2>
100537d2:	28d5      	cmp	r0, #213	; 0xd5
100537d4:	d054      	beq.n	10053880 <smp_Keys_Distribution_Send+0x100>
100537d6:	e049      	b.n	1005386c <smp_Keys_Distribution_Send+0xec>
100537d8:	2108      	movs	r1, #8
100537da:	4630      	mov	r0, r6
100537dc:	f7f8 ff7c 	bl	1004c6d8 <HAL_Generate_Random_Bytes_To>
100537e0:	482d      	ldr	r0, [pc, #180]	; (10053898 <smp_Keys_Distribution_Send+0x118>)
100537e2:	9700      	str	r7, [sp, #0]
100537e4:	6800      	ldr	r0, [r0, #0]
100537e6:	ab03      	add	r3, sp, #12
100537e8:	aa07      	add	r2, sp, #28
100537ea:	9902      	ldr	r1, [sp, #8]
100537ec:	3080      	adds	r0, #128	; 0x80
100537ee:	f000 fb85 	bl	10053efc <SMA_Diversify>
100537f2:	68a0      	ldr	r0, [r4, #8]
100537f4:	2106      	movs	r1, #6
100537f6:	7301      	strb	r1, [r0, #12]
100537f8:	2011      	movs	r0, #17
100537fa:	80e0      	strh	r0, [r4, #6]
100537fc:	7f2a      	ldrb	r2, [r5, #28]
100537fe:	ab03      	add	r3, sp, #12
10053800:	e01d      	b.n	1005383e <smp_Keys_Distribution_Send+0xbe>
10053802:	200b      	movs	r0, #11
10053804:	80e0      	strh	r0, [r4, #6]
10053806:	68a0      	ldr	r0, [r4, #8]
10053808:	2107      	movs	r1, #7
1005380a:	7301      	strb	r1, [r0, #12]
1005380c:	2300      	movs	r3, #0
1005380e:	aa07      	add	r2, sp, #28
10053810:	4631      	mov	r1, r6
10053812:	9802      	ldr	r0, [sp, #8]
10053814:	f000 fbc2 	bl	10053f9c <SMA_generate_EDIV_recovery_DIV>
10053818:	ab07      	add	r3, sp, #28
1005381a:	2202      	movs	r2, #2
1005381c:	2105      	movs	r1, #5
1005381e:	4620      	mov	r0, r4
10053820:	f7fd f82c 	bl	1005087c <PM_Write_Pckt_Data>
10053824:	2208      	movs	r2, #8
10053826:	4633      	mov	r3, r6
10053828:	2107      	movs	r1, #7
1005382a:	e01c      	b.n	10053866 <smp_Keys_Distribution_Send+0xe6>
1005382c:	2011      	movs	r0, #17
1005382e:	80e0      	strh	r0, [r4, #6]
10053830:	68a0      	ldr	r0, [r4, #8]
10053832:	2108      	movs	r1, #8
10053834:	7301      	strb	r1, [r0, #12]
10053836:	a808      	add	r0, sp, #32
10053838:	f000 fb88 	bl	10053f4c <SMA_Generate_IRK>
1005383c:	e029      	b.n	10053892 <smp_Keys_Distribution_Send+0x112>
1005383e:	2105      	movs	r1, #5
10053840:	e011      	b.n	10053866 <smp_Keys_Distribution_Send+0xe6>
10053842:	4669      	mov	r1, sp
10053844:	700f      	strb	r7, [r1, #0]
10053846:	a908      	add	r1, sp, #32
10053848:	4668      	mov	r0, sp
1005384a:	f001 f991 	bl	10054b70 <smp_get_local_identity_address>
1005384e:	2008      	movs	r0, #8
10053850:	80e0      	strh	r0, [r4, #6]
10053852:	2109      	movs	r1, #9
10053854:	68a0      	ldr	r0, [r4, #8]
10053856:	2206      	movs	r2, #6
10053858:	7301      	strb	r1, [r0, #12]
1005385a:	4669      	mov	r1, sp
1005385c:	68a0      	ldr	r0, [r4, #8]
1005385e:	7809      	ldrb	r1, [r1, #0]
10053860:	7341      	strb	r1, [r0, #13]
10053862:	ab08      	add	r3, sp, #32
10053864:	4611      	mov	r1, r2
10053866:	4620      	mov	r0, r4
10053868:	f7fd f808 	bl	1005087c <PM_Write_Pckt_Data>
1005386c:	4629      	mov	r1, r5
1005386e:	4620      	mov	r0, r4
10053870:	f000 fb28 	bl	10053ec4 <smp_send_packet>
10053874:	2800      	cmp	r0, #0
10053876:	d101      	bne.n	1005387c <smp_Keys_Distribution_Send+0xfc>
10053878:	20dd      	movs	r0, #221	; 0xdd
1005387a:	72a8      	strb	r0, [r5, #10]
1005387c:	b00d      	add	sp, #52	; 0x34
1005387e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053880:	2011      	movs	r0, #17
10053882:	80e0      	strh	r0, [r4, #6]
10053884:	68a0      	ldr	r0, [r4, #8]
10053886:	210a      	movs	r1, #10
10053888:	7301      	strb	r1, [r0, #12]
1005388a:	a908      	add	r1, sp, #32
1005388c:	4628      	mov	r0, r5
1005388e:	f000 fb49 	bl	10053f24 <SMA_Generate_CSRK>
10053892:	ab08      	add	r3, sp, #32
10053894:	2210      	movs	r2, #16
10053896:	e7d2      	b.n	1005383e <smp_Keys_Distribution_Send+0xbe>
10053898:	2000098c 	.word	0x2000098c

1005389c <smp_LP_SR_Compute_c1_Confirm_Value>:
1005389c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005389e:	b099      	sub	sp, #100	; 0x64
100538a0:	4616      	mov	r6, r2
100538a2:	460d      	mov	r5, r1
100538a4:	4604      	mov	r4, r0
100538a6:	223c      	movs	r2, #60	; 0x3c
100538a8:	2100      	movs	r1, #0
100538aa:	4668      	mov	r0, sp
100538ac:	f7ef fc8b 	bl	100431c6 <Osal_MemSet>
100538b0:	2210      	movs	r2, #16
100538b2:	4629      	mov	r1, r5
100538b4:	a804      	add	r0, sp, #16
100538b6:	f7ef fc82 	bl	100431be <Osal_MemCpy>
100538ba:	7fe0      	ldrb	r0, [r4, #31]
100538bc:	4d4a      	ldr	r5, [pc, #296]	; (100539e8 <smp_LP_SR_Compute_c1_Confirm_Value+0x14c>)
100538be:	2802      	cmp	r0, #2
100538c0:	d002      	beq.n	100538c8 <smp_LP_SR_Compute_c1_Confirm_Value+0x2c>
100538c2:	2803      	cmp	r0, #3
100538c4:	d006      	beq.n	100538d4 <smp_LP_SR_Compute_c1_Confirm_Value+0x38>
100538c6:	e00b      	b.n	100538e0 <smp_LP_SR_Compute_c1_Confirm_Value+0x44>
100538c8:	6828      	ldr	r0, [r5, #0]
100538ca:	6901      	ldr	r1, [r0, #16]
100538cc:	4668      	mov	r0, sp
100538ce:	f7ff fd71 	bl	100533b4 <int32ToLe4Byte>
100538d2:	e005      	b.n	100538e0 <smp_LP_SR_Compute_c1_Confirm_Value+0x44>
100538d4:	6829      	ldr	r1, [r5, #0]
100538d6:	2210      	movs	r2, #16
100538d8:	4668      	mov	r0, sp
100538da:	311c      	adds	r1, #28
100538dc:	f7ef fc6f 	bl	100431be <Osal_MemCpy>
100538e0:	2101      	movs	r1, #1
100538e2:	a808      	add	r0, sp, #32
100538e4:	7001      	strb	r1, [r0, #0]
100538e6:	7e61      	ldrb	r1, [r4, #25]
100538e8:	7041      	strb	r1, [r0, #1]
100538ea:	7e20      	ldrb	r0, [r4, #24]
100538ec:	0780      	lsls	r0, r0, #30
100538ee:	0fc1      	lsrs	r1, r0, #31
100538f0:	a808      	add	r0, sp, #32
100538f2:	7081      	strb	r1, [r0, #2]
100538f4:	682a      	ldr	r2, [r5, #0]
100538f6:	4611      	mov	r1, r2
100538f8:	3180      	adds	r1, #128	; 0x80
100538fa:	7a0b      	ldrb	r3, [r1, #8]
100538fc:	70c3      	strb	r3, [r0, #3]
100538fe:	7f23      	ldrb	r3, [r4, #28]
10053900:	7103      	strb	r3, [r0, #4]
10053902:	7a4b      	ldrb	r3, [r1, #9]
10053904:	7143      	strb	r3, [r0, #5]
10053906:	7a8b      	ldrb	r3, [r1, #10]
10053908:	7183      	strb	r3, [r0, #6]
1005390a:	2302      	movs	r3, #2
1005390c:	71c3      	strb	r3, [r0, #7]
1005390e:	7e13      	ldrb	r3, [r2, #24]
10053910:	7203      	strb	r3, [r0, #8]
10053912:	7e20      	ldrb	r0, [r4, #24]
10053914:	07c3      	lsls	r3, r0, #31
10053916:	0fdb      	lsrs	r3, r3, #31
10053918:	a808      	add	r0, sp, #32
1005391a:	7243      	strb	r3, [r0, #9]
1005391c:	7ac9      	ldrb	r1, [r1, #11]
1005391e:	7281      	strb	r1, [r0, #10]
10053920:	7bd1      	ldrb	r1, [r2, #15]
10053922:	72c1      	strb	r1, [r0, #11]
10053924:	7f60      	ldrb	r0, [r4, #29]
10053926:	0741      	lsls	r1, r0, #29
10053928:	0f49      	lsrs	r1, r1, #29
1005392a:	a808      	add	r0, sp, #32
1005392c:	7301      	strb	r1, [r0, #12]
1005392e:	7fa0      	ldrb	r0, [r4, #30]
10053930:	0741      	lsls	r1, r0, #29
10053932:	0f49      	lsrs	r1, r1, #29
10053934:	a808      	add	r0, sp, #32
10053936:	7341      	strb	r1, [r0, #13]
10053938:	3016      	adds	r0, #22
1005393a:	1e47      	subs	r7, r0, #1
1005393c:	4605      	mov	r5, r0
1005393e:	4639      	mov	r1, r7
10053940:	f7fe f804 	bl	1005194c <LL_Get_Address>
10053944:	7860      	ldrb	r0, [r4, #1]
10053946:	2206      	movs	r2, #6
10053948:	07c1      	lsls	r1, r0, #31
1005394a:	0fc9      	lsrs	r1, r1, #31
1005394c:	a808      	add	r0, sp, #32
1005394e:	7381      	strb	r1, [r0, #14]
10053950:	300f      	adds	r0, #15
10053952:	1ca1      	adds	r1, r4, #2
10053954:	9017      	str	r0, [sp, #92]	; 0x5c
10053956:	f7ef fc32 	bl	100431be <Osal_MemCpy>
1005395a:	a811      	add	r0, sp, #68	; 0x44
1005395c:	a909      	add	r1, sp, #36	; 0x24
1005395e:	2207      	movs	r2, #7
10053960:	3001      	adds	r0, #1
10053962:	3103      	adds	r1, #3
10053964:	f7ef fc2b 	bl	100431be <Osal_MemCpy>
10053968:	ac0f      	add	r4, sp, #60	; 0x3c
1005396a:	2207      	movs	r2, #7
1005396c:	1ca0      	adds	r0, r4, #2
1005396e:	a908      	add	r1, sp, #32
10053970:	f7ef fc25 	bl	100431be <Osal_MemCpy>
10053974:	2201      	movs	r2, #1
10053976:	4639      	mov	r1, r7
10053978:	1c60      	adds	r0, r4, #1
1005397a:	f7ef fc20 	bl	100431be <Osal_MemCpy>
1005397e:	2201      	movs	r2, #1
10053980:	a80f      	add	r0, sp, #60	; 0x3c
10053982:	1ff9      	subs	r1, r7, #7
10053984:	f7ef fc1b 	bl	100431be <Osal_MemCpy>
10053988:	2000      	movs	r0, #0
1005398a:	4669      	mov	r1, sp
1005398c:	af13      	add	r7, sp, #76	; 0x4c
1005398e:	180a      	adds	r2, r1, r0
10053990:	7c12      	ldrb	r2, [r2, #16]
10053992:	5c23      	ldrb	r3, [r4, r0]
10053994:	405a      	eors	r2, r3
10053996:	543a      	strb	r2, [r7, r0]
10053998:	1c40      	adds	r0, r0, #1
1005399a:	b2c0      	uxtb	r0, r0
1005399c:	2810      	cmp	r0, #16
1005399e:	d3f6      	bcc.n	1005398e <smp_LP_SR_Compute_c1_Confirm_Value+0xf2>
100539a0:	4632      	mov	r2, r6
100539a2:	4639      	mov	r1, r7
100539a4:	4668      	mov	r0, sp
100539a6:	f7f9 f86d 	bl	1004ca84 <hci_le_encrypt>
100539aa:	2210      	movs	r2, #16
100539ac:	2100      	movs	r1, #0
100539ae:	a80f      	add	r0, sp, #60	; 0x3c
100539b0:	f7ef fc09 	bl	100431c6 <Osal_MemSet>
100539b4:	2206      	movs	r2, #6
100539b6:	1da0      	adds	r0, r4, #6
100539b8:	9917      	ldr	r1, [sp, #92]	; 0x5c
100539ba:	f7ef fc00 	bl	100431be <Osal_MemCpy>
100539be:	2206      	movs	r2, #6
100539c0:	4629      	mov	r1, r5
100539c2:	a80f      	add	r0, sp, #60	; 0x3c
100539c4:	f7ef fbfb 	bl	100431be <Osal_MemCpy>
100539c8:	2000      	movs	r0, #0
100539ca:	5c31      	ldrb	r1, [r6, r0]
100539cc:	5c22      	ldrb	r2, [r4, r0]
100539ce:	4051      	eors	r1, r2
100539d0:	5439      	strb	r1, [r7, r0]
100539d2:	1c40      	adds	r0, r0, #1
100539d4:	b2c0      	uxtb	r0, r0
100539d6:	2810      	cmp	r0, #16
100539d8:	d3f7      	bcc.n	100539ca <smp_LP_SR_Compute_c1_Confirm_Value+0x12e>
100539da:	4632      	mov	r2, r6
100539dc:	a913      	add	r1, sp, #76	; 0x4c
100539de:	4668      	mov	r0, sp
100539e0:	f7f9 f850 	bl	1004ca84 <hci_le_encrypt>
100539e4:	b019      	add	sp, #100	; 0x64
100539e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100539e8:	20000990 	.word	0x20000990

100539ec <smp_MI_Start_Encryption_ucfg>:
100539ec:	201f      	movs	r0, #31
100539ee:	4770      	bx	lr

100539f0 <smp_Process_Rx_Packet_Exception_Cases_sc_excerpt_ucfg>:
100539f0:	201f      	movs	r0, #31
100539f2:	4770      	bx	lr

100539f4 <smp_Process_Rx_Packet_wrt_Current_State>:
100539f4:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100539f6:	4606      	mov	r6, r0
100539f8:	6880      	ldr	r0, [r0, #8]
100539fa:	25ff      	movs	r5, #255	; 0xff
100539fc:	7b07      	ldrb	r7, [r0, #12]
100539fe:	7a88      	ldrb	r0, [r1, #10]
10053a00:	460c      	mov	r4, r1
10053a02:	28d0      	cmp	r0, #208	; 0xd0
10053a04:	d00b      	beq.n	10053a1e <smp_Process_Rx_Packet_wrt_Current_State+0x2a>
10053a06:	7ae0      	ldrb	r0, [r4, #11]
10053a08:	0700      	lsls	r0, r0, #28
10053a0a:	d50d      	bpl.n	10053a28 <smp_Process_Rx_Packet_wrt_Current_State+0x34>
10053a0c:	4668      	mov	r0, sp
10053a0e:	9600      	str	r6, [sp, #0]
10053a10:	9401      	str	r4, [sp, #4]
10053a12:	f000 f889 	bl	10053b28 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt_ucfg>
10053a16:	4605      	mov	r5, r0
10053a18:	28ff      	cmp	r0, #255	; 0xff
10053a1a:	d005      	beq.n	10053a28 <smp_Process_Rx_Packet_wrt_Current_State+0x34>
10053a1c:	e07c      	b.n	10053b18 <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10053a1e:	4630      	mov	r0, r6
10053a20:	f001 f906 	bl	10054c30 <smp_keys_receiving>
10053a24:	2500      	movs	r5, #0
10053a26:	e077      	b.n	10053b18 <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10053a28:	2074      	movs	r0, #116	; 0x74
10053a2a:	5d00      	ldrb	r0, [r0, r4]
10053a2c:	07c0      	lsls	r0, r0, #31
10053a2e:	d06d      	beq.n	10053b0c <smp_Process_Rx_Packet_wrt_Current_State+0x118>
10053a30:	7aa0      	ldrb	r0, [r4, #10]
10053a32:	2800      	cmp	r0, #0
10053a34:	d008      	beq.n	10053a48 <smp_Process_Rx_Packet_wrt_Current_State+0x54>
10053a36:	28f1      	cmp	r0, #241	; 0xf1
10053a38:	d006      	beq.n	10053a48 <smp_Process_Rx_Packet_wrt_Current_State+0x54>
10053a3a:	28b5      	cmp	r0, #181	; 0xb5
10053a3c:	d04f      	beq.n	10053ade <smp_Process_Rx_Packet_wrt_Current_State+0xea>
10053a3e:	28b6      	cmp	r0, #182	; 0xb6
10053a40:	d054      	beq.n	10053aec <smp_Process_Rx_Packet_wrt_Current_State+0xf8>
10053a42:	28fb      	cmp	r0, #251	; 0xfb
10053a44:	d059      	beq.n	10053afa <smp_Process_Rx_Packet_wrt_Current_State+0x106>
10053a46:	e067      	b.n	10053b18 <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10053a48:	2f01      	cmp	r7, #1
10053a4a:	d165      	bne.n	10053b18 <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10053a4c:	2700      	movs	r7, #0
10053a4e:	8920      	ldrh	r0, [r4, #8]
10053a50:	f001 f840 	bl	10054ad4 <smp_find_remote_device_index>
10053a54:	4602      	mov	r2, r0
10053a56:	2100      	movs	r1, #0
10053a58:	4b30      	ldr	r3, [pc, #192]	; (10053b1c <smp_Process_Rx_Packet_wrt_Current_State+0x128>)
10053a5a:	4608      	mov	r0, r1
10053a5c:	f000 feb2 	bl	100547c4 <SMP_reset_timer>
10053a60:	7b20      	ldrb	r0, [r4, #12]
10053a62:	43c1      	mvns	r1, r0
10053a64:	0789      	lsls	r1, r1, #30
10053a66:	d005      	beq.n	10053a74 <smp_Process_Rx_Packet_wrt_Current_State+0x80>
10053a68:	0781      	lsls	r1, r0, #30
10053a6a:	d515      	bpl.n	10053a98 <smp_Process_Rx_Packet_wrt_Current_State+0xa4>
10053a6c:	2101      	movs	r1, #1
10053a6e:	4308      	orrs	r0, r1
10053a70:	7320      	strb	r0, [r4, #12]
10053a72:	e00c      	b.n	10053a8e <smp_Process_Rx_Packet_wrt_Current_State+0x9a>
10053a74:	210c      	movs	r1, #12
10053a76:	4008      	ands	r0, r1
10053a78:	d030      	beq.n	10053adc <smp_Process_Rx_Packet_wrt_Current_State+0xe8>
10053a7a:	2804      	cmp	r0, #4
10053a7c:	d007      	beq.n	10053a8e <smp_Process_Rx_Packet_wrt_Current_State+0x9a>
10053a7e:	2808      	cmp	r0, #8
10053a80:	d02b      	beq.n	10053ada <smp_Process_Rx_Packet_wrt_Current_State+0xe6>
10053a82:	280c      	cmp	r0, #12
10053a84:	d100      	bne.n	10053a88 <smp_Process_Rx_Packet_wrt_Current_State+0x94>
10053a86:	2701      	movs	r7, #1
10053a88:	2f00      	cmp	r7, #0
10053a8a:	d105      	bne.n	10053a98 <smp_Process_Rx_Packet_wrt_Current_State+0xa4>
10053a8c:	e044      	b.n	10053b18 <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10053a8e:	7b20      	ldrb	r0, [r4, #12]
10053a90:	0701      	lsls	r1, r0, #28
10053a92:	0f89      	lsrs	r1, r1, #30
10053a94:	2901      	cmp	r1, #1
10053a96:	d004      	beq.n	10053aa2 <smp_Process_Rx_Packet_wrt_Current_State+0xae>
10053a98:	4621      	mov	r1, r4
10053a9a:	4630      	mov	r0, r6
10053a9c:	f000 f950 	bl	10053d40 <smp____SR_PairingRequest_Receive>
10053aa0:	e039      	b.n	10053b16 <smp_Process_Rx_Packet_wrt_Current_State+0x122>
10053aa2:	21fb      	movs	r1, #251	; 0xfb
10053aa4:	4008      	ands	r0, r1
10053aa6:	2108      	movs	r1, #8
10053aa8:	4308      	orrs	r0, r1
10053aaa:	7320      	strb	r0, [r4, #12]
10053aac:	481c      	ldr	r0, [pc, #112]	; (10053b20 <smp_Process_Rx_Packet_wrt_Current_State+0x12c>)
10053aae:	2137      	movs	r1, #55	; 0x37
10053ab0:	6800      	ldr	r0, [r0, #0]
10053ab2:	0149      	lsls	r1, r1, #5
10053ab4:	1841      	adds	r1, r0, r1
10053ab6:	7a89      	ldrb	r1, [r1, #10]
10053ab8:	2402      	movs	r4, #2
10053aba:	0689      	lsls	r1, r1, #26
10053abc:	d50d      	bpl.n	10053ada <smp_Process_Rx_Packet_wrt_Current_State+0xe6>
10053abe:	2102      	movs	r1, #2
10053ac0:	028b      	lsls	r3, r1, #10
10053ac2:	3008      	adds	r0, #8
10053ac4:	18c0      	adds	r0, r0, r3
10053ac6:	2217      	movs	r2, #23
10053ac8:	6940      	ldr	r0, [r0, #20]
10053aca:	2300      	movs	r3, #0
10053acc:	f001 fb8e 	bl	100551ec <aci_event_fifo_push_header>
10053ad0:	0001      	movs	r1, r0
10053ad2:	d002      	beq.n	10053ada <smp_Process_Rx_Packet_wrt_Current_State+0xe6>
10053ad4:	4620      	mov	r0, r4
10053ad6:	f001 fb75 	bl	100551c4 <aci_event_fifo_push>
10053ada:	2043      	movs	r0, #67	; 0x43
10053adc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10053ade:	2f03      	cmp	r7, #3
10053ae0:	d11a      	bne.n	10053b18 <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10053ae2:	4621      	mov	r1, r4
10053ae4:	4630      	mov	r0, r6
10053ae6:	f000 f85d 	bl	10053ba4 <smp____SR_PairingConfirm_Receive>
10053aea:	e014      	b.n	10053b16 <smp_Process_Rx_Packet_wrt_Current_State+0x122>
10053aec:	2f04      	cmp	r7, #4
10053aee:	d113      	bne.n	10053b18 <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10053af0:	4621      	mov	r1, r4
10053af2:	4630      	mov	r0, r6
10053af4:	f000 f894 	bl	10053c20 <smp____SR_PairingRandom_Receive>
10053af8:	e00d      	b.n	10053b16 <smp_Process_Rx_Packet_wrt_Current_State+0x122>
10053afa:	2f01      	cmp	r7, #1
10053afc:	d10c      	bne.n	10053b18 <smp_Process_Rx_Packet_wrt_Current_State+0x124>
10053afe:	2301      	movs	r3, #1
10053b00:	2200      	movs	r2, #0
10053b02:	2109      	movs	r1, #9
10053b04:	4620      	mov	r0, r4
10053b06:	f001 f97b 	bl	10054e00 <smp_pairing_failed_send>
10053b0a:	e004      	b.n	10053b16 <smp_Process_Rx_Packet_wrt_Current_State+0x122>
10053b0c:	4668      	mov	r0, sp
10053b0e:	9600      	str	r6, [sp, #0]
10053b10:	9401      	str	r4, [sp, #4]
10053b12:	f000 f807 	bl	10053b24 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt_ucfg>
10053b16:	4605      	mov	r5, r0
10053b18:	4628      	mov	r0, r5
10053b1a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10053b1c:	00007530 	.word	0x00007530
10053b20:	2000098c 	.word	0x2000098c

10053b24 <smp_Process_Rx_Packet_wrt_Current_State_MI_excerpt_ucfg>:
10053b24:	201f      	movs	r0, #31
10053b26:	4770      	bx	lr

10053b28 <smp_Process_Rx_Packet_wrt_Current_State_sc_excerpt_ucfg>:
10053b28:	201f      	movs	r0, #31
10053b2a:	4770      	bx	lr

10053b2c <smp_Set_Key_Association_Method>:
10053b2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10053b2e:	4604      	mov	r4, r0
10053b30:	2500      	movs	r5, #0
10053b32:	f7ff fc89 	bl	10053448 <smp_Determine_Key_Association_Method>
10053b36:	2847      	cmp	r0, #71	; 0x47
10053b38:	d003      	beq.n	10053b42 <smp_Set_Key_Association_Method+0x16>
10053b3a:	7fe0      	ldrb	r0, [r4, #31]
10053b3c:	2802      	cmp	r0, #2
10053b3e:	d002      	beq.n	10053b46 <smp_Set_Key_Association_Method+0x1a>
10053b40:	e026      	b.n	10053b90 <smp_Set_Key_Association_Method+0x64>
10053b42:	7fe5      	ldrb	r5, [r4, #31]
10053b44:	e024      	b.n	10053b90 <smp_Set_Key_Association_Method+0x64>
10053b46:	4815      	ldr	r0, [pc, #84]	; (10053b9c <smp_Set_Key_Association_Method+0x70>)
10053b48:	6800      	ldr	r0, [r0, #0]
10053b4a:	7d00      	ldrb	r0, [r0, #20]
10053b4c:	2800      	cmp	r0, #0
10053b4e:	d021      	beq.n	10053b94 <smp_Set_Key_Association_Method+0x68>
10053b50:	2002      	movs	r0, #2
10053b52:	9000      	str	r0, [sp, #0]
10053b54:	8920      	ldrh	r0, [r4, #8]
10053b56:	2137      	movs	r1, #55	; 0x37
10053b58:	0506      	lsls	r6, r0, #20
10053b5a:	4811      	ldr	r0, [pc, #68]	; (10053ba0 <smp_Set_Key_Association_Method+0x74>)
10053b5c:	0149      	lsls	r1, r1, #5
10053b5e:	6800      	ldr	r0, [r0, #0]
10053b60:	0d36      	lsrs	r6, r6, #20
10053b62:	1841      	adds	r1, r0, r1
10053b64:	7a89      	ldrb	r1, [r1, #10]
10053b66:	2301      	movs	r3, #1
10053b68:	0749      	lsls	r1, r1, #29
10053b6a:	d50d      	bpl.n	10053b88 <smp_Set_Key_Association_Method+0x5c>
10053b6c:	2102      	movs	r1, #2
10053b6e:	028f      	lsls	r7, r1, #10
10053b70:	3008      	adds	r0, #8
10053b72:	19c0      	adds	r0, r0, r7
10053b74:	2214      	movs	r2, #20
10053b76:	6940      	ldr	r0, [r0, #20]
10053b78:	f001 fb38 	bl	100551ec <aci_event_fifo_push_header>
10053b7c:	0001      	movs	r1, r0
10053b7e:	d003      	beq.n	10053b88 <smp_Set_Key_Association_Method+0x5c>
10053b80:	808e      	strh	r6, [r1, #4]
10053b82:	9800      	ldr	r0, [sp, #0]
10053b84:	f001 fb1e 	bl	100551c4 <aci_event_fifo_push>
10053b88:	7ee0      	ldrb	r0, [r4, #27]
10053b8a:	21ef      	movs	r1, #239	; 0xef
10053b8c:	4008      	ands	r0, r1
10053b8e:	76e0      	strb	r0, [r4, #27]
10053b90:	4628      	mov	r0, r5
10053b92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10053b94:	7ee0      	ldrb	r0, [r4, #27]
10053b96:	2110      	movs	r1, #16
10053b98:	4308      	orrs	r0, r1
10053b9a:	e7f8      	b.n	10053b8e <smp_Set_Key_Association_Method+0x62>
10053b9c:	20000990 	.word	0x20000990
10053ba0:	2000098c 	.word	0x2000098c

10053ba4 <smp____SR_PairingConfirm_Receive>:
10053ba4:	b570      	push	{r4, r5, r6, lr}
10053ba6:	4606      	mov	r6, r0
10053ba8:	8908      	ldrh	r0, [r1, #8]
10053baa:	460c      	mov	r4, r1
10053bac:	0501      	lsls	r1, r0, #20
10053bae:	b08a      	sub	sp, #40	; 0x28
10053bb0:	0d09      	lsrs	r1, r1, #20
10053bb2:	2220      	movs	r2, #32
10053bb4:	2000      	movs	r0, #0
10053bb6:	f7fc fdb1 	bl	1005071c <PM_Get_Pckt>
10053bba:	0005      	movs	r5, r0
10053bbc:	d012      	beq.n	10053be4 <smp____SR_PairingConfirm_Receive+0x40>
10053bbe:	2e00      	cmp	r6, #0
10053bc0:	d006      	beq.n	10053bd0 <smp____SR_PairingConfirm_Receive+0x2c>
10053bc2:	4623      	mov	r3, r4
10053bc4:	332a      	adds	r3, #42	; 0x2a
10053bc6:	2210      	movs	r2, #16
10053bc8:	2105      	movs	r1, #5
10053bca:	4630      	mov	r0, r6
10053bcc:	f7fc fd66 	bl	1005069c <PM_Copy_Pckt_Data>
10053bd0:	7ae0      	ldrb	r0, [r4, #11]
10053bd2:	0700      	lsls	r0, r0, #28
10053bd4:	d509      	bpl.n	10053bea <smp____SR_PairingConfirm_Receive+0x46>
10053bd6:	a805      	add	r0, sp, #20
10053bd8:	9002      	str	r0, [sp, #8]
10053bda:	9401      	str	r4, [sp, #4]
10053bdc:	a801      	add	r0, sp, #4
10053bde:	f000 f96d 	bl	10053ebc <smp_sc_SR_PairingConfirm_Receive_sc_excerpt_ucfg>
10053be2:	e008      	b.n	10053bf6 <smp____SR_PairingConfirm_Receive+0x52>
10053be4:	2064      	movs	r0, #100	; 0x64
10053be6:	b00a      	add	sp, #40	; 0x28
10053be8:	bd70      	pop	{r4, r5, r6, pc}
10053bea:	4621      	mov	r1, r4
10053bec:	aa05      	add	r2, sp, #20
10053bee:	3164      	adds	r1, #100	; 0x64
10053bf0:	4620      	mov	r0, r4
10053bf2:	f7ff fe53 	bl	1005389c <smp_LP_SR_Compute_c1_Confirm_Value>
10053bf6:	2011      	movs	r0, #17
10053bf8:	80e8      	strh	r0, [r5, #6]
10053bfa:	68a8      	ldr	r0, [r5, #8]
10053bfc:	2103      	movs	r1, #3
10053bfe:	7301      	strb	r1, [r0, #12]
10053c00:	ab05      	add	r3, sp, #20
10053c02:	2210      	movs	r2, #16
10053c04:	2105      	movs	r1, #5
10053c06:	4628      	mov	r0, r5
10053c08:	f7fc fe38 	bl	1005087c <PM_Write_Pckt_Data>
10053c0c:	4621      	mov	r1, r4
10053c0e:	4628      	mov	r0, r5
10053c10:	f000 f958 	bl	10053ec4 <smp_send_packet>
10053c14:	2800      	cmp	r0, #0
10053c16:	d1e6      	bne.n	10053be6 <smp____SR_PairingConfirm_Receive+0x42>
10053c18:	21b6      	movs	r1, #182	; 0xb6
10053c1a:	72a1      	strb	r1, [r4, #10]
10053c1c:	e7e3      	b.n	10053be6 <smp____SR_PairingConfirm_Receive+0x42>
	...

10053c20 <smp____SR_PairingRandom_Receive>:
10053c20:	b5f0      	push	{r4, r5, r6, r7, lr}
10053c22:	4606      	mov	r6, r0
10053c24:	b093      	sub	sp, #76	; 0x4c
10053c26:	2000      	movs	r0, #0
10053c28:	9005      	str	r0, [sp, #20]
10053c2a:	8908      	ldrh	r0, [r1, #8]
10053c2c:	460c      	mov	r4, r1
10053c2e:	0501      	lsls	r1, r0, #20
10053c30:	0d09      	lsrs	r1, r1, #20
10053c32:	2220      	movs	r2, #32
10053c34:	2000      	movs	r0, #0
10053c36:	f7fc fd71 	bl	1005071c <PM_Get_Pckt>
10053c3a:	0005      	movs	r5, r0
10053c3c:	d019      	beq.n	10053c72 <smp____SR_PairingRandom_Receive+0x52>
10053c3e:	4623      	mov	r3, r4
10053c40:	3354      	adds	r3, #84	; 0x54
10053c42:	2210      	movs	r2, #16
10053c44:	2105      	movs	r1, #5
10053c46:	4630      	mov	r0, r6
10053c48:	9302      	str	r3, [sp, #8]
10053c4a:	f7fc fd27 	bl	1005069c <PM_Copy_Pckt_Data>
10053c4e:	7ae0      	ldrb	r0, [r4, #11]
10053c50:	0701      	lsls	r1, r0, #28
10053c52:	4620      	mov	r0, r4
10053c54:	302a      	adds	r0, #42	; 0x2a
10053c56:	9001      	str	r0, [sp, #4]
10053c58:	2900      	cmp	r1, #0
10053c5a:	da0d      	bge.n	10053c78 <smp____SR_PairingRandom_Receive+0x58>
10053c5c:	a80f      	add	r0, sp, #60	; 0x3c
10053c5e:	9008      	str	r0, [sp, #32]
10053c60:	a805      	add	r0, sp, #20
10053c62:	9009      	str	r0, [sp, #36]	; 0x24
10053c64:	a806      	add	r0, sp, #24
10053c66:	900a      	str	r0, [sp, #40]	; 0x28
10053c68:	9407      	str	r4, [sp, #28]
10053c6a:	a807      	add	r0, sp, #28
10053c6c:	f000 f927 	bl	10053ebe <smp_sc_SR_PairingRandom_Receive_sc_excerpt_ucfg>
10053c70:	e010      	b.n	10053c94 <smp____SR_PairingRandom_Receive+0x74>
10053c72:	2064      	movs	r0, #100	; 0x64
10053c74:	b013      	add	sp, #76	; 0x4c
10053c76:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053c78:	aa0f      	add	r2, sp, #60	; 0x3c
10053c7a:	4620      	mov	r0, r4
10053c7c:	9902      	ldr	r1, [sp, #8]
10053c7e:	f7ff fe0d 	bl	1005389c <smp_LP_SR_Compute_c1_Confirm_Value>
10053c82:	2210      	movs	r2, #16
10053c84:	a80f      	add	r0, sp, #60	; 0x3c
10053c86:	9901      	ldr	r1, [sp, #4]
10053c88:	f7ef faa1 	bl	100431ce <Osal_MemCmp>
10053c8c:	9005      	str	r0, [sp, #20]
10053c8e:	20bc      	movs	r0, #188	; 0xbc
10053c90:	4669      	mov	r1, sp
10053c92:	7608      	strb	r0, [r1, #24]
10053c94:	4626      	mov	r6, r4
10053c96:	9805      	ldr	r0, [sp, #20]
10053c98:	3664      	adds	r6, #100	; 0x64
10053c9a:	4f28      	ldr	r7, [pc, #160]	; (10053d3c <smp____SR_PairingRandom_Receive+0x11c>)
10053c9c:	2800      	cmp	r0, #0
10053c9e:	d009      	beq.n	10053cb4 <smp____SR_PairingRandom_Receive+0x94>
10053ca0:	2301      	movs	r3, #1
10053ca2:	462a      	mov	r2, r5
10053ca4:	2104      	movs	r1, #4
10053ca6:	4620      	mov	r0, r4
10053ca8:	f001 f8aa 	bl	10054e00 <smp_pairing_failed_send>
10053cac:	9805      	ldr	r0, [sp, #20]
10053cae:	2800      	cmp	r0, #0
10053cb0:	d01b      	beq.n	10053cea <smp____SR_PairingRandom_Receive+0xca>
10053cb2:	e040      	b.n	10053d36 <smp____SR_PairingRandom_Receive+0x116>
10053cb4:	2011      	movs	r0, #17
10053cb6:	80e8      	strh	r0, [r5, #6]
10053cb8:	68a8      	ldr	r0, [r5, #8]
10053cba:	2104      	movs	r1, #4
10053cbc:	7301      	strb	r1, [r0, #12]
10053cbe:	4633      	mov	r3, r6
10053cc0:	2210      	movs	r2, #16
10053cc2:	2105      	movs	r1, #5
10053cc4:	4628      	mov	r0, r5
10053cc6:	f7fc fdd9 	bl	1005087c <PM_Write_Pckt_Data>
10053cca:	4621      	mov	r1, r4
10053ccc:	4628      	mov	r0, r5
10053cce:	f000 f8f9 	bl	10053ec4 <smp_send_packet>
10053cd2:	2800      	cmp	r0, #0
10053cd4:	d1ea      	bne.n	10053cac <smp____SR_PairingRandom_Receive+0x8c>
10053cd6:	4668      	mov	r0, sp
10053cd8:	7e00      	ldrb	r0, [r0, #24]
10053cda:	72a0      	strb	r0, [r4, #10]
10053cdc:	6838      	ldr	r0, [r7, #0]
10053cde:	7f21      	ldrb	r1, [r4, #28]
10053ce0:	7bc0      	ldrb	r0, [r0, #15]
10053ce2:	4281      	cmp	r1, r0
10053ce4:	d9e2      	bls.n	10053cac <smp____SR_PairingRandom_Receive+0x8c>
10053ce6:	7720      	strb	r0, [r4, #28]
10053ce8:	e7e0      	b.n	10053cac <smp____SR_PairingRandom_Receive+0x8c>
10053cea:	7ae0      	ldrb	r0, [r4, #11]
10053cec:	0700      	lsls	r0, r0, #28
10053cee:	d422      	bmi.n	10053d36 <smp____SR_PairingRandom_Receive+0x116>
10053cf0:	7f60      	ldrb	r0, [r4, #29]
10053cf2:	07c1      	lsls	r1, r0, #31
10053cf4:	d002      	beq.n	10053cfc <smp____SR_PairingRandom_Receive+0xdc>
10053cf6:	0840      	lsrs	r0, r0, #1
10053cf8:	0040      	lsls	r0, r0, #1
10053cfa:	7760      	strb	r0, [r4, #29]
10053cfc:	2210      	movs	r2, #16
10053cfe:	2100      	movs	r1, #0
10053d00:	a80b      	add	r0, sp, #44	; 0x2c
10053d02:	f7ef fa60 	bl	100431c6 <Osal_MemSet>
10053d06:	7fe0      	ldrb	r0, [r4, #31]
10053d08:	2802      	cmp	r0, #2
10053d0a:	d002      	beq.n	10053d12 <smp____SR_PairingRandom_Receive+0xf2>
10053d0c:	2803      	cmp	r0, #3
10053d0e:	d006      	beq.n	10053d1e <smp____SR_PairingRandom_Receive+0xfe>
10053d10:	e00b      	b.n	10053d2a <smp____SR_PairingRandom_Receive+0x10a>
10053d12:	6838      	ldr	r0, [r7, #0]
10053d14:	6901      	ldr	r1, [r0, #16]
10053d16:	a80b      	add	r0, sp, #44	; 0x2c
10053d18:	f7ff fb4c 	bl	100533b4 <int32ToLe4Byte>
10053d1c:	e005      	b.n	10053d2a <smp____SR_PairingRandom_Receive+0x10a>
10053d1e:	6839      	ldr	r1, [r7, #0]
10053d20:	2210      	movs	r2, #16
10053d22:	a80b      	add	r0, sp, #44	; 0x2c
10053d24:	311c      	adds	r1, #28
10053d26:	f7ef fa4a 	bl	100431be <Osal_MemCpy>
10053d2a:	4631      	mov	r1, r6
10053d2c:	a80b      	add	r0, sp, #44	; 0x2c
10053d2e:	9b01      	ldr	r3, [sp, #4]
10053d30:	9a02      	ldr	r2, [sp, #8]
10053d32:	f000 f91f 	bl	10053f74 <SMA_LP_s1_Generate_STK>
10053d36:	2000      	movs	r0, #0
10053d38:	e79c      	b.n	10053c74 <smp____SR_PairingRandom_Receive+0x54>
10053d3a:	0000      	.short	0x0000
10053d3c:	20000990 	.word	0x20000990

10053d40 <smp____SR_PairingRequest_Receive>:
10053d40:	b5f3      	push	{r0, r1, r4, r5, r6, r7, lr}
10053d42:	4e5d      	ldr	r6, [pc, #372]	; (10053eb8 <smp____SR_PairingRequest_Receive+0x178>)
10053d44:	2500      	movs	r5, #0
10053d46:	6830      	ldr	r0, [r6, #0]
10053d48:	27b4      	movs	r7, #180	; 0xb4
10053d4a:	7e80      	ldrb	r0, [r0, #26]
10053d4c:	b083      	sub	sp, #12
10053d4e:	43c0      	mvns	r0, r0
10053d50:	460c      	mov	r4, r1
10053d52:	0780      	lsls	r0, r0, #30
10053d54:	d00e      	beq.n	10053d74 <smp____SR_PairingRequest_Receive+0x34>
10053d56:	8920      	ldrh	r0, [r4, #8]
10053d58:	2220      	movs	r2, #32
10053d5a:	0501      	lsls	r1, r0, #20
10053d5c:	0d09      	lsrs	r1, r1, #20
10053d5e:	2000      	movs	r0, #0
10053d60:	f7fc fcdc 	bl	1005071c <PM_Get_Pckt>
10053d64:	9002      	str	r0, [sp, #8]
10053d66:	2800      	cmp	r0, #0
10053d68:	d007      	beq.n	10053d7a <smp____SR_PairingRequest_Receive+0x3a>
10053d6a:	7aa1      	ldrb	r1, [r4, #10]
10053d6c:	2000      	movs	r0, #0
10053d6e:	29f1      	cmp	r1, #241	; 0xf1
10053d70:	d005      	beq.n	10053d7e <smp____SR_PairingRequest_Receive+0x3e>
10053d72:	e032      	b.n	10053dda <smp____SR_PairingRequest_Receive+0x9a>
10053d74:	2008      	movs	r0, #8
10053d76:	b005      	add	sp, #20
10053d78:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053d7a:	2064      	movs	r0, #100	; 0x64
10053d7c:	e7fb      	b.n	10053d76 <smp____SR_PairingRequest_Receive+0x36>
10053d7e:	7ee1      	ldrb	r1, [r4, #27]
10053d80:	222f      	movs	r2, #47	; 0x2f
10053d82:	4011      	ands	r1, r2
10053d84:	76e1      	strb	r1, [r4, #27]
10053d86:	6831      	ldr	r1, [r6, #0]
10053d88:	7f23      	ldrb	r3, [r4, #28]
10053d8a:	7bc9      	ldrb	r1, [r1, #15]
10053d8c:	428b      	cmp	r3, r1
10053d8e:	d004      	beq.n	10053d9a <smp____SR_PairingRequest_Receive+0x5a>
10053d90:	9a03      	ldr	r2, [sp, #12]
10053d92:	6892      	ldr	r2, [r2, #8]
10053d94:	7c12      	ldrb	r2, [r2, #16]
10053d96:	428a      	cmp	r2, r1
10053d98:	d807      	bhi.n	10053daa <smp____SR_PairingRequest_Receive+0x6a>
10053d9a:	9a03      	ldr	r2, [sp, #12]
10053d9c:	6892      	ldr	r2, [r2, #8]
10053d9e:	4694      	mov	ip, r2
10053da0:	7c12      	ldrb	r2, [r2, #16]
10053da2:	429a      	cmp	r2, r3
10053da4:	d003      	beq.n	10053dae <smp____SR_PairingRequest_Receive+0x6e>
10053da6:	428a      	cmp	r2, r1
10053da8:	d801      	bhi.n	10053dae <smp____SR_PairingRequest_Receive+0x6e>
10053daa:	7760      	strb	r0, [r4, #29]
10053dac:	e015      	b.n	10053dda <smp____SR_PairingRequest_Receive+0x9a>
10053dae:	7f61      	ldrb	r1, [r4, #29]
10053db0:	068a      	lsls	r2, r1, #26
10053db2:	d500      	bpl.n	10053db6 <smp____SR_PairingRequest_Receive+0x76>
10053db4:	2502      	movs	r5, #2
10053db6:	0649      	lsls	r1, r1, #25
10053db8:	d501      	bpl.n	10053dbe <smp____SR_PairingRequest_Receive+0x7e>
10053dba:	2104      	movs	r1, #4
10053dbc:	430d      	orrs	r5, r1
10053dbe:	4661      	mov	r1, ip
10053dc0:	7c49      	ldrb	r1, [r1, #17]
10053dc2:	42a9      	cmp	r1, r5
10053dc4:	d003      	beq.n	10053dce <smp____SR_PairingRequest_Receive+0x8e>
10053dc6:	2201      	movs	r2, #1
10053dc8:	4315      	orrs	r5, r2
10053dca:	42a9      	cmp	r1, r5
10053dcc:	d102      	bne.n	10053dd4 <smp____SR_PairingRequest_Receive+0x94>
10053dce:	7760      	strb	r0, [r4, #29]
10053dd0:	77a0      	strb	r0, [r4, #30]
10053dd2:	e002      	b.n	10053dda <smp____SR_PairingRequest_Receive+0x9a>
10053dd4:	4620      	mov	r0, r4
10053dd6:	f000 fdd9 	bl	1005498c <smp_add_pairing_record_to_bonding_database>
10053dda:	20b0      	movs	r0, #176	; 0xb0
10053ddc:	72a0      	strb	r0, [r4, #10]
10053dde:	6831      	ldr	r1, [r6, #0]
10053de0:	7e88      	ldrb	r0, [r1, #26]
10053de2:	43c2      	mvns	r2, r0
10053de4:	0792      	lsls	r2, r2, #30
10053de6:	d001      	beq.n	10053dec <smp____SR_PairingRequest_Receive+0xac>
10053de8:	1c40      	adds	r0, r0, #1
10053dea:	7688      	strb	r0, [r1, #26]
10053dec:	9803      	ldr	r0, [sp, #12]
10053dee:	f7ff fb11 	bl	10053414 <smp_Check_Incoming_Pairing_Parameters>
10053df2:	9903      	ldr	r1, [sp, #12]
10053df4:	2800      	cmp	r0, #0
10053df6:	6889      	ldr	r1, [r1, #8]
10053df8:	7bcd      	ldrb	r5, [r1, #15]
10053dfa:	d14b      	bne.n	10053e94 <smp____SR_PairingRequest_Receive+0x154>
10053dfc:	6830      	ldr	r0, [r6, #0]
10053dfe:	7d81      	ldrb	r1, [r0, #22]
10053e00:	2902      	cmp	r1, #2
10053e02:	d103      	bne.n	10053e0c <smp____SR_PairingRequest_Receive+0xcc>
10053e04:	072a      	lsls	r2, r5, #28
10053e06:	d401      	bmi.n	10053e0c <smp____SR_PairingRequest_Receive+0xcc>
10053e08:	2003      	movs	r0, #3
10053e0a:	e043      	b.n	10053e94 <smp____SR_PairingRequest_Receive+0x154>
10053e0c:	084a      	lsrs	r2, r1, #1
10053e0e:	4311      	orrs	r1, r2
10053e10:	07ca      	lsls	r2, r1, #31
10053e12:	7dc3      	ldrb	r3, [r0, #23]
10053e14:	7b41      	ldrb	r1, [r0, #13]
10053e16:	0fd2      	lsrs	r2, r2, #31
10053e18:	7b00      	ldrb	r0, [r0, #12]
10053e1a:	f7ff fad3 	bl	100533c4 <smp_Build_AuthReq_Field>
10053e1e:	4606      	mov	r6, r0
10053e20:	4035      	ands	r5, r6
10053e22:	2018      	movs	r0, #24
10053e24:	4005      	ands	r5, r0
10053e26:	72e5      	strb	r5, [r4, #11]
10053e28:	0728      	lsls	r0, r5, #28
10053e2a:	d505      	bpl.n	10053e38 <smp____SR_PairingRequest_Receive+0xf8>
10053e2c:	4620      	mov	r0, r4
10053e2e:	f001 f8c4 	bl	10054fba <smp_sc_continue_on_exclusive_sc_pairing_ucfg>
10053e32:	2800      	cmp	r0, #0
10053e34:	d12e      	bne.n	10053e94 <smp____SR_PairingRequest_Receive+0x154>
10053e36:	27b2      	movs	r7, #178	; 0xb2
10053e38:	4620      	mov	r0, r4
10053e3a:	f000 ff65 	bl	10054d08 <smp_oob_check_is_remote_data_present>
10053e3e:	07f0      	lsls	r0, r6, #31
10053e40:	d000      	beq.n	10053e44 <smp____SR_PairingRequest_Receive+0x104>
10053e42:	2002      	movs	r0, #2
10053e44:	76a0      	strb	r0, [r4, #26]
10053e46:	0770      	lsls	r0, r6, #29
10053e48:	0fc0      	lsrs	r0, r0, #31
10053e4a:	76e0      	strb	r0, [r4, #27]
10053e4c:	4621      	mov	r1, r4
10053e4e:	9803      	ldr	r0, [sp, #12]
10053e50:	f7ff fc52 	bl	100536f8 <smp_Get_Pairing_Parameters_From_Peer_Packet>
10053e54:	4620      	mov	r0, r4
10053e56:	f7ff fe69 	bl	10053b2c <smp_Set_Key_Association_Method>
10053e5a:	2800      	cmp	r0, #0
10053e5c:	d11a      	bne.n	10053e94 <smp____SR_PairingRequest_Receive+0x154>
10053e5e:	7fe0      	ldrb	r0, [r4, #31]
10053e60:	2802      	cmp	r0, #2
10053e62:	d103      	bne.n	10053e6c <smp____SR_PairingRequest_Receive+0x12c>
10053e64:	7ee0      	ldrb	r0, [r4, #27]
10053e66:	06c0      	lsls	r0, r0, #27
10053e68:	d400      	bmi.n	10053e6c <smp____SR_PairingRequest_Receive+0x12c>
10053e6a:	27b2      	movs	r7, #178	; 0xb2
10053e6c:	7fa0      	ldrb	r0, [r4, #30]
10053e6e:	7f61      	ldrb	r1, [r4, #29]
10053e70:	0740      	lsls	r0, r0, #29
10053e72:	0749      	lsls	r1, r1, #29
10053e74:	0f40      	lsrs	r0, r0, #29
10053e76:	0f49      	lsrs	r1, r1, #29
10053e78:	9100      	str	r1, [sp, #0]
10053e7a:	9001      	str	r0, [sp, #4]
10053e7c:	7e22      	ldrb	r2, [r4, #24]
10053e7e:	4633      	mov	r3, r6
10053e80:	2102      	movs	r1, #2
10053e82:	9802      	ldr	r0, [sp, #8]
10053e84:	f7ff faaa 	bl	100533dc <smp_Build_Pairing_ReqResp_Packet>
10053e88:	4621      	mov	r1, r4
10053e8a:	9802      	ldr	r0, [sp, #8]
10053e8c:	f000 f81a 	bl	10053ec4 <smp_send_packet>
10053e90:	2800      	cmp	r0, #0
10053e92:	d006      	beq.n	10053ea2 <smp____SR_PairingRequest_Receive+0x162>
10053e94:	4601      	mov	r1, r0
10053e96:	2301      	movs	r3, #1
10053e98:	4620      	mov	r0, r4
10053e9a:	9a02      	ldr	r2, [sp, #8]
10053e9c:	f000 ffb0 	bl	10054e00 <smp_pairing_failed_send>
10053ea0:	e769      	b.n	10053d76 <smp____SR_PairingRequest_Receive+0x36>
10053ea2:	8921      	ldrh	r1, [r4, #8]
10053ea4:	2207      	movs	r2, #7
10053ea6:	0312      	lsls	r2, r2, #12
10053ea8:	4391      	bics	r1, r2
10053eaa:	8121      	strh	r1, [r4, #8]
10053eac:	4902      	ldr	r1, [pc, #8]	; (10053eb8 <smp____SR_PairingRequest_Receive+0x178>)
10053eae:	6809      	ldr	r1, [r1, #0]
10053eb0:	3180      	adds	r1, #128	; 0x80
10053eb2:	72ce      	strb	r6, [r1, #11]
10053eb4:	72a7      	strb	r7, [r4, #10]
10053eb6:	e75e      	b.n	10053d76 <smp____SR_PairingRequest_Receive+0x36>
10053eb8:	20000990 	.word	0x20000990

10053ebc <smp_sc_SR_PairingConfirm_Receive_sc_excerpt_ucfg>:
10053ebc:	4770      	bx	lr

10053ebe <smp_sc_SR_PairingRandom_Receive_sc_excerpt_ucfg>:
10053ebe:	4770      	bx	lr

10053ec0 <smp_sc_SR_Pairing_Phase_2AS1_Start_sc_excerpt_ucfg>:
10053ec0:	4770      	bx	lr
	...

10053ec4 <smp_send_packet>:
10053ec4:	b570      	push	{r4, r5, r6, lr}
10053ec6:	460d      	mov	r5, r1
10053ec8:	4606      	mov	r6, r0
10053eca:	4601      	mov	r1, r0
10053ecc:	2006      	movs	r0, #6
10053ece:	f7f9 fa1d 	bl	1004d30c <L2C_Send_Data>
10053ed2:	0004      	movs	r4, r0
10053ed4:	d005      	beq.n	10053ee2 <smp_send_packet+0x1e>
10053ed6:	2100      	movs	r1, #0
10053ed8:	4630      	mov	r0, r6
10053eda:	f7fc fc7b 	bl	100507d4 <PM_Release_Acl_Pckt>
10053ede:	4620      	mov	r0, r4
10053ee0:	bd70      	pop	{r4, r5, r6, pc}
10053ee2:	8928      	ldrh	r0, [r5, #8]
10053ee4:	f000 fdf6 	bl	10054ad4 <smp_find_remote_device_index>
10053ee8:	4602      	mov	r2, r0
10053eea:	2100      	movs	r1, #0
10053eec:	4b02      	ldr	r3, [pc, #8]	; (10053ef8 <smp_send_packet+0x34>)
10053eee:	4608      	mov	r0, r1
10053ef0:	f000 fc68 	bl	100547c4 <SMP_reset_timer>
10053ef4:	e7f3      	b.n	10053ede <smp_send_packet+0x1a>
10053ef6:	0000      	.short	0x0000
10053ef8:	00007530 	.word	0x00007530

10053efc <SMA_Diversify>:
10053efc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10053efe:	2400      	movs	r4, #0
10053f00:	9400      	str	r4, [sp, #0]
10053f02:	9401      	str	r4, [sp, #4]
10053f04:	9402      	str	r4, [sp, #8]
10053f06:	9403      	str	r4, [sp, #12]
10053f08:	780d      	ldrb	r5, [r1, #0]
10053f0a:	466c      	mov	r4, sp
10053f0c:	7025      	strb	r5, [r4, #0]
10053f0e:	7849      	ldrb	r1, [r1, #1]
10053f10:	7061      	strb	r1, [r4, #1]
10053f12:	7811      	ldrb	r1, [r2, #0]
10053f14:	70a1      	strb	r1, [r4, #2]
10053f16:	7851      	ldrb	r1, [r2, #1]
10053f18:	70e1      	strb	r1, [r4, #3]
10053f1a:	461a      	mov	r2, r3
10053f1c:	4669      	mov	r1, sp
10053f1e:	f7f8 fdb1 	bl	1004ca84 <hci_le_encrypt>
10053f22:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

10053f24 <SMA_Generate_CSRK>:
10053f24:	b51c      	push	{r2, r3, r4, lr}
10053f26:	a207      	add	r2, pc, #28	; (adr r2, 10053f44 <SMA_Generate_CSRK+0x20>)
10053f28:	6812      	ldr	r2, [r2, #0]
10053f2a:	460b      	mov	r3, r1
10053f2c:	9201      	str	r2, [sp, #4]
10053f2e:	4601      	mov	r1, r0
10053f30:	2200      	movs	r2, #0
10053f32:	4805      	ldr	r0, [pc, #20]	; (10053f48 <SMA_Generate_CSRK+0x24>)
10053f34:	9200      	str	r2, [sp, #0]
10053f36:	6800      	ldr	r0, [r0, #0]
10053f38:	aa01      	add	r2, sp, #4
10053f3a:	3120      	adds	r1, #32
10053f3c:	3080      	adds	r0, #128	; 0x80
10053f3e:	f7ff ffdd 	bl	10053efc <SMA_Diversify>
10053f42:	bd1c      	pop	{r2, r3, r4, pc}
10053f44:	00000001 	.word	0x00000001
10053f48:	2000098c 	.word	0x2000098c

10053f4c <SMA_Generate_IRK>:
10053f4c:	b50e      	push	{r1, r2, r3, lr}
10053f4e:	a107      	add	r1, pc, #28	; (adr r1, 10053f6c <SMA_Generate_IRK+0x20>)
10053f50:	6809      	ldr	r1, [r1, #0]
10053f52:	9101      	str	r1, [sp, #4]
10053f54:	2100      	movs	r1, #0
10053f56:	4603      	mov	r3, r0
10053f58:	4805      	ldr	r0, [pc, #20]	; (10053f70 <SMA_Generate_IRK+0x24>)
10053f5a:	9102      	str	r1, [sp, #8]
10053f5c:	9100      	str	r1, [sp, #0]
10053f5e:	6800      	ldr	r0, [r0, #0]
10053f60:	aa02      	add	r2, sp, #8
10053f62:	a901      	add	r1, sp, #4
10053f64:	3090      	adds	r0, #144	; 0x90
10053f66:	f7ff ffc9 	bl	10053efc <SMA_Diversify>
10053f6a:	bd0e      	pop	{r1, r2, r3, pc}
10053f6c:	00000001 	.word	0x00000001
10053f70:	2000098c 	.word	0x2000098c

10053f74 <SMA_LP_s1_Generate_STK>:
10053f74:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10053f76:	4616      	mov	r6, r2
10053f78:	4604      	mov	r4, r0
10053f7a:	461d      	mov	r5, r3
10053f7c:	2208      	movs	r2, #8
10053f7e:	a802      	add	r0, sp, #8
10053f80:	f7ef f91d 	bl	100431be <Osal_MemCpy>
10053f84:	2208      	movs	r2, #8
10053f86:	4631      	mov	r1, r6
10053f88:	4668      	mov	r0, sp
10053f8a:	f7ef f918 	bl	100431be <Osal_MemCpy>
10053f8e:	462a      	mov	r2, r5
10053f90:	4669      	mov	r1, sp
10053f92:	4620      	mov	r0, r4
10053f94:	f7f8 fd76 	bl	1004ca84 <hci_le_encrypt>
10053f98:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
	...

10053f9c <SMA_generate_EDIV_recovery_DIV>:
10053f9c:	b5f0      	push	{r4, r5, r6, r7, lr}
10053f9e:	b091      	sub	sp, #68	; 0x44
10053fa0:	4605      	mov	r5, r0
10053fa2:	a019      	add	r0, pc, #100	; (adr r0, 10054008 <SMA_generate_EDIV_recovery_DIV+0x6c>)
10053fa4:	6800      	ldr	r0, [r0, #0]
10053fa6:	9006      	str	r0, [sp, #24]
10053fa8:	2000      	movs	r0, #0
10053faa:	9007      	str	r0, [sp, #28]
10053fac:	4817      	ldr	r0, [pc, #92]	; (1005400c <SMA_generate_EDIV_recovery_DIV+0x70>)
10053fae:	9300      	str	r3, [sp, #0]
10053fb0:	6800      	ldr	r0, [r0, #0]
10053fb2:	4614      	mov	r4, r2
10053fb4:	460e      	mov	r6, r1
10053fb6:	ab01      	add	r3, sp, #4
10053fb8:	aa07      	add	r2, sp, #28
10053fba:	a906      	add	r1, sp, #24
10053fbc:	3090      	adds	r0, #144	; 0x90
10053fbe:	f7ff ff9d 	bl	10053efc <SMA_Diversify>
10053fc2:	a801      	add	r0, sp, #4
10053fc4:	9000      	str	r0, [sp, #0]
10053fc6:	af05      	add	r7, sp, #20
10053fc8:	2210      	movs	r2, #16
10053fca:	2100      	movs	r1, #0
10053fcc:	a808      	add	r0, sp, #32
10053fce:	f7ef f8fa 	bl	100431c6 <Osal_MemSet>
10053fd2:	2208      	movs	r2, #8
10053fd4:	4631      	mov	r1, r6
10053fd6:	a808      	add	r0, sp, #32
10053fd8:	f7ef f8f1 	bl	100431be <Osal_MemCpy>
10053fdc:	aa0c      	add	r2, sp, #48	; 0x30
10053fde:	a908      	add	r1, sp, #32
10053fe0:	9800      	ldr	r0, [sp, #0]
10053fe2:	f7f8 fd4f 	bl	1004ca84 <hci_le_encrypt>
10053fe6:	2202      	movs	r2, #2
10053fe8:	a90c      	add	r1, sp, #48	; 0x30
10053fea:	4638      	mov	r0, r7
10053fec:	f7ef f8e7 	bl	100431be <Osal_MemCpy>
10053ff0:	4668      	mov	r0, sp
10053ff2:	7d00      	ldrb	r0, [r0, #20]
10053ff4:	7829      	ldrb	r1, [r5, #0]
10053ff6:	4048      	eors	r0, r1
10053ff8:	7020      	strb	r0, [r4, #0]
10053ffa:	4668      	mov	r0, sp
10053ffc:	7d40      	ldrb	r0, [r0, #21]
10053ffe:	7869      	ldrb	r1, [r5, #1]
10054000:	4048      	eors	r0, r1
10054002:	7060      	strb	r0, [r4, #1]
10054004:	b011      	add	sp, #68	; 0x44
10054006:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054008:	00000003 	.word	0x00000003
1005400c:	2000098c 	.word	0x2000098c

10054010 <SM_Generate_Resolvable_Private_Address>:
10054010:	b510      	push	{r4, lr}
10054012:	b086      	sub	sp, #24
10054014:	4604      	mov	r4, r0
10054016:	a801      	add	r0, sp, #4
10054018:	f7ff ff98 	bl	10053f4c <SMA_Generate_IRK>
1005401c:	f7f8 fc1c 	bl	1004c858 <Hal_Get_Random_Number>
10054020:	4669      	mov	r1, sp
10054022:	7088      	strb	r0, [r1, #2]
10054024:	0a00      	lsrs	r0, r0, #8
10054026:	7048      	strb	r0, [r1, #1]
10054028:	f7f8 fc16 	bl	1004c858 <Hal_Get_Random_Number>
1005402c:	4669      	mov	r1, sp
1005402e:	7008      	strb	r0, [r1, #0]
10054030:	7888      	ldrb	r0, [r1, #2]
10054032:	2140      	movs	r1, #64	; 0x40
10054034:	0640      	lsls	r0, r0, #25
10054036:	0e40      	lsrs	r0, r0, #25
10054038:	4308      	orrs	r0, r1
1005403a:	4669      	mov	r1, sp
1005403c:	7088      	strb	r0, [r1, #2]
1005403e:	aa05      	add	r2, sp, #20
10054040:	a801      	add	r0, sp, #4
10054042:	f000 f880 	bl	10054146 <sma_Calculate_Hash>
10054046:	2203      	movs	r2, #3
10054048:	a905      	add	r1, sp, #20
1005404a:	4620      	mov	r0, r4
1005404c:	f7ef f8b7 	bl	100431be <Osal_MemCpy>
10054050:	2203      	movs	r2, #3
10054052:	4669      	mov	r1, sp
10054054:	1ce0      	adds	r0, r4, #3
10054056:	f7ef f8b2 	bl	100431be <Osal_MemCpy>
1005405a:	b006      	add	sp, #24
1005405c:	bd10      	pop	{r4, pc}

1005405e <SM_Resolve_Private_Address>:
1005405e:	b538      	push	{r3, r4, r5, lr}
10054060:	460b      	mov	r3, r1
10054062:	4604      	mov	r4, r0
10054064:	1cc1      	adds	r1, r0, #3
10054066:	466a      	mov	r2, sp
10054068:	4618      	mov	r0, r3
1005406a:	f000 f86c 	bl	10054146 <sma_Calculate_Hash>
1005406e:	2203      	movs	r2, #3
10054070:	4621      	mov	r1, r4
10054072:	4668      	mov	r0, sp
10054074:	f7ef f8ab 	bl	100431ce <Osal_MemCmp>
10054078:	2800      	cmp	r0, #0
1005407a:	d000      	beq.n	1005407e <SM_Resolve_Private_Address+0x20>
1005407c:	2041      	movs	r0, #65	; 0x41
1005407e:	bd38      	pop	{r3, r4, r5, pc}

10054080 <sma_CMAC_generate_tag>:
10054080:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10054082:	b093      	sub	sp, #76	; 0x4c
10054084:	4614      	mov	r4, r2
10054086:	aa0f      	add	r2, sp, #60	; 0x3c
10054088:	a90b      	add	r1, sp, #44	; 0x2c
1005408a:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005408c:	f000 f876 	bl	1005417c <sma_generate_subkeys>
10054090:	2210      	movs	r2, #16
10054092:	2100      	movs	r1, #0
10054094:	a802      	add	r0, sp, #8
10054096:	f7ef f896 	bl	100431c6 <Osal_MemSet>
1005409a:	2500      	movs	r5, #0
1005409c:	ae02      	add	r6, sp, #8
1005409e:	af06      	add	r7, sp, #24
100540a0:	e01d      	b.n	100540de <sma_CMAC_generate_tag+0x5e>
100540a2:	1d28      	adds	r0, r5, #4
100540a4:	b281      	uxth	r1, r0
100540a6:	ab06      	add	r3, sp, #24
100540a8:	2210      	movs	r2, #16
100540aa:	9814      	ldr	r0, [sp, #80]	; 0x50
100540ac:	f7fc faf6 	bl	1005069c <PM_Copy_Pckt_Data>
100540b0:	2000      	movs	r0, #0
100540b2:	5c31      	ldrb	r1, [r6, r0]
100540b4:	5c3a      	ldrb	r2, [r7, r0]
100540b6:	4051      	eors	r1, r2
100540b8:	5431      	strb	r1, [r6, r0]
100540ba:	1c40      	adds	r0, r0, #1
100540bc:	b2c0      	uxtb	r0, r0
100540be:	2810      	cmp	r0, #16
100540c0:	d3f7      	bcc.n	100540b2 <sma_CMAC_generate_tag+0x32>
100540c2:	aa06      	add	r2, sp, #24
100540c4:	a902      	add	r1, sp, #8
100540c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
100540c8:	f7f8 fcdc 	bl	1004ca84 <hci_le_encrypt>
100540cc:	2210      	movs	r2, #16
100540ce:	a906      	add	r1, sp, #24
100540d0:	a802      	add	r0, sp, #8
100540d2:	f7ef f874 	bl	100431be <Osal_MemCpy>
100540d6:	3510      	adds	r5, #16
100540d8:	3c10      	subs	r4, #16
100540da:	b2ad      	uxth	r5, r5
100540dc:	b2e4      	uxtb	r4, r4
100540de:	2c10      	cmp	r4, #16
100540e0:	d8df      	bhi.n	100540a2 <sma_CMAC_generate_tag+0x22>
100540e2:	d027      	beq.n	10054134 <sma_CMAC_generate_tag+0xb4>
100540e4:	2210      	movs	r2, #16
100540e6:	2100      	movs	r1, #0
100540e8:	a806      	add	r0, sp, #24
100540ea:	f7ef f86c 	bl	100431c6 <Osal_MemSet>
100540ee:	2c00      	cmp	r4, #0
100540f0:	d008      	beq.n	10054104 <sma_CMAC_generate_tag+0x84>
100540f2:	2010      	movs	r0, #16
100540f4:	1b00      	subs	r0, r0, r4
100540f6:	19c3      	adds	r3, r0, r7
100540f8:	1d2d      	adds	r5, r5, #4
100540fa:	b2a9      	uxth	r1, r5
100540fc:	4622      	mov	r2, r4
100540fe:	9814      	ldr	r0, [sp, #80]	; 0x50
10054100:	f7fc facc 	bl	1005069c <PM_Copy_Pckt_Data>
10054104:	2080      	movs	r0, #128	; 0x80
10054106:	210f      	movs	r1, #15
10054108:	1b09      	subs	r1, r1, r4
1005410a:	5478      	strb	r0, [r7, r1]
1005410c:	ac0f      	add	r4, sp, #60	; 0x3c
1005410e:	2000      	movs	r0, #0
10054110:	5c39      	ldrb	r1, [r7, r0]
10054112:	5c22      	ldrb	r2, [r4, r0]
10054114:	4051      	eors	r1, r2
10054116:	5c32      	ldrb	r2, [r6, r0]
10054118:	4051      	eors	r1, r2
1005411a:	5431      	strb	r1, [r6, r0]
1005411c:	1c40      	adds	r0, r0, #1
1005411e:	b2c0      	uxtb	r0, r0
10054120:	2810      	cmp	r0, #16
10054122:	d3f5      	bcc.n	10054110 <sma_CMAC_generate_tag+0x90>
10054124:	a902      	add	r1, sp, #8
10054126:	9a16      	ldr	r2, [sp, #88]	; 0x58
10054128:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005412a:	f7f8 fcab 	bl	1004ca84 <hci_le_encrypt>
1005412e:	2000      	movs	r0, #0
10054130:	b017      	add	sp, #92	; 0x5c
10054132:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054134:	1d2d      	adds	r5, r5, #4
10054136:	ac0b      	add	r4, sp, #44	; 0x2c
10054138:	b2a9      	uxth	r1, r5
1005413a:	ab06      	add	r3, sp, #24
1005413c:	2210      	movs	r2, #16
1005413e:	9814      	ldr	r0, [sp, #80]	; 0x50
10054140:	f7fc faac 	bl	1005069c <PM_Copy_Pckt_Data>
10054144:	e7e3      	b.n	1005410e <sma_CMAC_generate_tag+0x8e>

10054146 <sma_Calculate_Hash>:
10054146:	b570      	push	{r4, r5, r6, lr}
10054148:	b088      	sub	sp, #32
1005414a:	4616      	mov	r6, r2
1005414c:	460c      	mov	r4, r1
1005414e:	4605      	mov	r5, r0
10054150:	2210      	movs	r2, #16
10054152:	2100      	movs	r1, #0
10054154:	4668      	mov	r0, sp
10054156:	f7ef f836 	bl	100431c6 <Osal_MemSet>
1005415a:	2203      	movs	r2, #3
1005415c:	4621      	mov	r1, r4
1005415e:	4668      	mov	r0, sp
10054160:	f7ef f82d 	bl	100431be <Osal_MemCpy>
10054164:	aa04      	add	r2, sp, #16
10054166:	4669      	mov	r1, sp
10054168:	4628      	mov	r0, r5
1005416a:	f7f8 fc8b 	bl	1004ca84 <hci_le_encrypt>
1005416e:	2203      	movs	r2, #3
10054170:	a904      	add	r1, sp, #16
10054172:	4630      	mov	r0, r6
10054174:	f7ef f823 	bl	100431be <Osal_MemCpy>
10054178:	b008      	add	sp, #32
1005417a:	bd70      	pop	{r4, r5, r6, pc}

1005417c <sma_generate_subkeys>:
1005417c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005417e:	b089      	sub	sp, #36	; 0x24
10054180:	4603      	mov	r3, r0
10054182:	2000      	movs	r0, #0
10054184:	4615      	mov	r5, r2
10054186:	460c      	mov	r4, r1
10054188:	9000      	str	r0, [sp, #0]
1005418a:	9001      	str	r0, [sp, #4]
1005418c:	9002      	str	r0, [sp, #8]
1005418e:	9003      	str	r0, [sp, #12]
10054190:	aa04      	add	r2, sp, #16
10054192:	4669      	mov	r1, sp
10054194:	4618      	mov	r0, r3
10054196:	f7f8 fc75 	bl	1004ca84 <hci_le_encrypt>
1005419a:	4668      	mov	r0, sp
1005419c:	7fc0      	ldrb	r0, [r0, #31]
1005419e:	2787      	movs	r7, #135	; 0x87
100541a0:	0600      	lsls	r0, r0, #24
100541a2:	2800      	cmp	r0, #0
100541a4:	466e      	mov	r6, sp
100541a6:	4621      	mov	r1, r4
100541a8:	a804      	add	r0, sp, #16
100541aa:	da0d      	bge.n	100541c8 <sma_generate_subkeys+0x4c>
100541ac:	f000 f825 	bl	100541fa <sma_left_shift>
100541b0:	4668      	mov	r0, sp
100541b2:	7007      	strb	r7, [r0, #0]
100541b4:	2000      	movs	r0, #0
100541b6:	5c21      	ldrb	r1, [r4, r0]
100541b8:	5c32      	ldrb	r2, [r6, r0]
100541ba:	4051      	eors	r1, r2
100541bc:	5421      	strb	r1, [r4, r0]
100541be:	1c40      	adds	r0, r0, #1
100541c0:	b2c0      	uxtb	r0, r0
100541c2:	280f      	cmp	r0, #15
100541c4:	d3f7      	bcc.n	100541b6 <sma_generate_subkeys+0x3a>
100541c6:	e001      	b.n	100541cc <sma_generate_subkeys+0x50>
100541c8:	f000 f817 	bl	100541fa <sma_left_shift>
100541cc:	7be0      	ldrb	r0, [r4, #15]
100541ce:	4629      	mov	r1, r5
100541d0:	0600      	lsls	r0, r0, #24
100541d2:	4620      	mov	r0, r4
100541d4:	d50e      	bpl.n	100541f4 <sma_generate_subkeys+0x78>
100541d6:	f000 f810 	bl	100541fa <sma_left_shift>
100541da:	4668      	mov	r0, sp
100541dc:	7007      	strb	r7, [r0, #0]
100541de:	2000      	movs	r0, #0
100541e0:	5c29      	ldrb	r1, [r5, r0]
100541e2:	5c32      	ldrb	r2, [r6, r0]
100541e4:	4051      	eors	r1, r2
100541e6:	5429      	strb	r1, [r5, r0]
100541e8:	1c40      	adds	r0, r0, #1
100541ea:	b2c0      	uxtb	r0, r0
100541ec:	280f      	cmp	r0, #15
100541ee:	d3f7      	bcc.n	100541e0 <sma_generate_subkeys+0x64>
100541f0:	b009      	add	sp, #36	; 0x24
100541f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100541f4:	f000 f801 	bl	100541fa <sma_left_shift>
100541f8:	e7fa      	b.n	100541f0 <sma_generate_subkeys+0x74>

100541fa <sma_left_shift>:
100541fa:	b530      	push	{r4, r5, lr}
100541fc:	7802      	ldrb	r2, [r0, #0]
100541fe:	0052      	lsls	r2, r2, #1
10054200:	700a      	strb	r2, [r1, #0]
10054202:	2201      	movs	r2, #1
10054204:	4614      	mov	r4, r2
10054206:	5c83      	ldrb	r3, [r0, r2]
10054208:	1885      	adds	r5, r0, r2
1005420a:	065b      	lsls	r3, r3, #25
1005420c:	0e1b      	lsrs	r3, r3, #24
1005420e:	548b      	strb	r3, [r1, r2]
10054210:	3d20      	subs	r5, #32
10054212:	7fed      	ldrb	r5, [r5, #31]
10054214:	062d      	lsls	r5, r5, #24
10054216:	d501      	bpl.n	1005421c <sma_left_shift+0x22>
10054218:	4323      	orrs	r3, r4
1005421a:	548b      	strb	r3, [r1, r2]
1005421c:	1c52      	adds	r2, r2, #1
1005421e:	b2d2      	uxtb	r2, r2
10054220:	2a0f      	cmp	r2, #15
10054222:	d9f0      	bls.n	10054206 <sma_left_shift+0xc>
10054224:	bd30      	pop	{r4, r5, pc}
	...

10054228 <SMP_Init>:
10054228:	b510      	push	{r4, lr}
1005422a:	4c0d      	ldr	r4, [pc, #52]	; (10054260 <SMP_Init+0x38>)
1005422c:	22ff      	movs	r2, #255	; 0xff
1005422e:	2100      	movs	r1, #0
10054230:	6820      	ldr	r0, [r4, #0]
10054232:	f001 fe28 	bl	10055e86 <acl_list_init>
10054236:	6820      	ldr	r0, [r4, #0]
10054238:	2100      	movs	r1, #0
1005423a:	7681      	strb	r1, [r0, #26]
1005423c:	76c1      	strb	r1, [r0, #27]
1005423e:	2201      	movs	r2, #1
10054240:	7342      	strb	r2, [r0, #13]
10054242:	2307      	movs	r3, #7
10054244:	7383      	strb	r3, [r0, #14]
10054246:	2310      	movs	r3, #16
10054248:	73c3      	strb	r3, [r0, #15]
1005424a:	7602      	strb	r2, [r0, #24]
1005424c:	7501      	strb	r1, [r0, #20]
1005424e:	6101      	str	r1, [r0, #16]
10054250:	7302      	strb	r2, [r0, #12]
10054252:	7581      	strb	r1, [r0, #22]
10054254:	75c1      	strb	r1, [r0, #23]
10054256:	4608      	mov	r0, r1
10054258:	f000 feb1 	bl	10054fbe <smp_sc_init_ucfg>
1005425c:	bd10      	pop	{r4, pc}
1005425e:	0000      	.short	0x0000
10054260:	20000990 	.word	0x20000990

10054264 <SMP_Protocol_Timer_cb>:
10054264:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10054266:	3808      	subs	r0, #8
10054268:	4e0e      	ldr	r6, [pc, #56]	; (100542a4 <SMP_Protocol_Timer_cb+0x40>)
1005426a:	b2c4      	uxtb	r4, r0
1005426c:	6830      	ldr	r0, [r6, #0]
1005426e:	217c      	movs	r1, #124	; 0x7c
10054270:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
10054272:	434c      	muls	r4, r1
10054274:	1905      	adds	r5, r0, r4
10054276:	8928      	ldrh	r0, [r5, #8]
10054278:	2300      	movs	r3, #0
1005427a:	0501      	lsls	r1, r0, #20
1005427c:	0d09      	lsrs	r1, r1, #20
1005427e:	2201      	movs	r2, #1
10054280:	2002      	movs	r0, #2
10054282:	f000 fb3b 	bl	100548fc <aci_gap_pairing_complete_event_push>
10054286:	2002      	movs	r0, #2
10054288:	4669      	mov	r1, sp
1005428a:	9500      	str	r5, [sp, #0]
1005428c:	7108      	strb	r0, [r1, #4]
1005428e:	4668      	mov	r0, sp
10054290:	f000 fe76 	bl	10054f80 <smp_update_statistics_on_pairing_complete>
10054294:	6830      	ldr	r0, [r6, #0]
10054296:	227c      	movs	r2, #124	; 0x7c
10054298:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
1005429a:	2100      	movs	r1, #0
1005429c:	1900      	adds	r0, r0, r4
1005429e:	f7ee ff92 	bl	100431c6 <Osal_MemSet>
100542a2:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
100542a4:	20000990 	.word	0x20000990

100542a8 <SMP_acl_data_hndl>:
100542a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100542aa:	4607      	mov	r7, r0
100542ac:	460d      	mov	r5, r1
100542ae:	2600      	movs	r6, #0
100542b0:	8888      	ldrh	r0, [r1, #4]
100542b2:	f000 f919 	bl	100544e8 <SMP_get_remote_device_list_item>
100542b6:	0004      	movs	r4, r0
100542b8:	d064      	beq.n	10054384 <SMP_acl_data_hndl+0xdc>
100542ba:	2f01      	cmp	r7, #1
100542bc:	d002      	beq.n	100542c4 <SMP_acl_data_hndl+0x1c>
100542be:	2f00      	cmp	r7, #0
100542c0:	d009      	beq.n	100542d6 <SMP_acl_data_hndl+0x2e>
100542c2:	e062      	b.n	1005438a <SMP_acl_data_hndl+0xe2>
100542c4:	88e8      	ldrh	r0, [r5, #6]
100542c6:	2841      	cmp	r0, #65	; 0x41
100542c8:	d85e      	bhi.n	10054388 <SMP_acl_data_hndl+0xe0>
100542ca:	4833      	ldr	r0, [pc, #204]	; (10054398 <SMP_acl_data_hndl+0xf0>)
100542cc:	4629      	mov	r1, r5
100542ce:	6800      	ldr	r0, [r0, #0]
100542d0:	f001 fdf4 	bl	10055ebc <acl_list_insert_tail>
100542d4:	e05d      	b.n	10054392 <SMP_acl_data_hndl+0xea>
100542d6:	68a8      	ldr	r0, [r5, #8]
100542d8:	7b00      	ldrb	r0, [r0, #12]
100542da:	2806      	cmp	r0, #6
100542dc:	d00b      	beq.n	100542f6 <SMP_acl_data_hndl+0x4e>
100542de:	21d5      	movs	r1, #213	; 0xd5
100542e0:	2807      	cmp	r0, #7
100542e2:	d00a      	beq.n	100542fa <SMP_acl_data_hndl+0x52>
100542e4:	2808      	cmp	r0, #8
100542e6:	d019      	beq.n	1005431c <SMP_acl_data_hndl+0x74>
100542e8:	2809      	cmp	r0, #9
100542ea:	d019      	beq.n	10054320 <SMP_acl_data_hndl+0x78>
100542ec:	280a      	cmp	r0, #10
100542ee:	d01c      	beq.n	1005432a <SMP_acl_data_hndl+0x82>
100542f0:	280b      	cmp	r0, #11
100542f2:	d01e      	beq.n	10054332 <SMP_acl_data_hndl+0x8a>
100542f4:	e049      	b.n	1005438a <SMP_acl_data_hndl+0xe2>
100542f6:	20d2      	movs	r0, #210	; 0xd2
100542f8:	e006      	b.n	10054308 <SMP_acl_data_hndl+0x60>
100542fa:	7aa0      	ldrb	r0, [r4, #10]
100542fc:	28dd      	cmp	r0, #221	; 0xdd
100542fe:	d144      	bne.n	1005438a <SMP_acl_data_hndl+0xe2>
10054300:	7fa0      	ldrb	r0, [r4, #30]
10054302:	0782      	lsls	r2, r0, #30
10054304:	d502      	bpl.n	1005430c <SMP_acl_data_hndl+0x64>
10054306:	20d3      	movs	r0, #211	; 0xd3
10054308:	72a0      	strb	r0, [r4, #10]
1005430a:	e03e      	b.n	1005438a <SMP_acl_data_hndl+0xe2>
1005430c:	0740      	lsls	r0, r0, #29
1005430e:	d501      	bpl.n	10054314 <SMP_acl_data_hndl+0x6c>
10054310:	72a1      	strb	r1, [r4, #10]
10054312:	e03a      	b.n	1005438a <SMP_acl_data_hndl+0xe2>
10054314:	4620      	mov	r0, r4
10054316:	f000 fb1f 	bl	10054958 <smp_Keys_Distribution_Complete>
1005431a:	e036      	b.n	1005438a <SMP_acl_data_hndl+0xe2>
1005431c:	20d4      	movs	r0, #212	; 0xd4
1005431e:	e7f3      	b.n	10054308 <SMP_acl_data_hndl+0x60>
10054320:	7aa0      	ldrb	r0, [r4, #10]
10054322:	28dd      	cmp	r0, #221	; 0xdd
10054324:	d131      	bne.n	1005438a <SMP_acl_data_hndl+0xe2>
10054326:	7fa0      	ldrb	r0, [r4, #30]
10054328:	e7f0      	b.n	1005430c <SMP_acl_data_hndl+0x64>
1005432a:	7aa0      	ldrb	r0, [r4, #10]
1005432c:	28dd      	cmp	r0, #221	; 0xdd
1005432e:	d0f1      	beq.n	10054314 <SMP_acl_data_hndl+0x6c>
10054330:	e02b      	b.n	1005438a <SMP_acl_data_hndl+0xe2>
10054332:	7b20      	ldrb	r0, [r4, #12]
10054334:	0781      	lsls	r1, r0, #30
10054336:	0f89      	lsrs	r1, r1, #30
10054338:	2901      	cmp	r1, #1
1005433a:	d126      	bne.n	1005438a <SMP_acl_data_hndl+0xe2>
1005433c:	4388      	bics	r0, r1
1005433e:	2102      	movs	r1, #2
10054340:	4308      	orrs	r0, r1
10054342:	7320      	strb	r0, [r4, #12]
10054344:	4815      	ldr	r0, [pc, #84]	; (1005439c <SMP_acl_data_hndl+0xf4>)
10054346:	2137      	movs	r1, #55	; 0x37
10054348:	6800      	ldr	r0, [r0, #0]
1005434a:	0149      	lsls	r1, r1, #5
1005434c:	1841      	adds	r1, r0, r1
1005434e:	7a89      	ldrb	r1, [r1, #10]
10054350:	2742      	movs	r7, #66	; 0x42
10054352:	06c9      	lsls	r1, r1, #27
10054354:	d50e      	bpl.n	10054374 <SMP_acl_data_hndl+0xcc>
10054356:	2101      	movs	r1, #1
10054358:	02c9      	lsls	r1, r1, #11
1005435a:	3008      	adds	r0, #8
1005435c:	1840      	adds	r0, r0, r1
1005435e:	2216      	movs	r2, #22
10054360:	6940      	ldr	r0, [r0, #20]
10054362:	2300      	movs	r3, #0
10054364:	4639      	mov	r1, r7
10054366:	f000 ff41 	bl	100551ec <aci_event_fifo_push_header>
1005436a:	0001      	movs	r1, r0
1005436c:	d002      	beq.n	10054374 <SMP_acl_data_hndl+0xcc>
1005436e:	4638      	mov	r0, r7
10054370:	f000 ff28 	bl	100551c4 <aci_event_fifo_push>
10054374:	7aa0      	ldrb	r0, [r4, #10]
10054376:	28f1      	cmp	r0, #241	; 0xf1
10054378:	d107      	bne.n	1005438a <SMP_acl_data_hndl+0xe2>
1005437a:	7b20      	ldrb	r0, [r4, #12]
1005437c:	2104      	movs	r1, #4
1005437e:	4308      	orrs	r0, r1
10054380:	7320      	strb	r0, [r4, #12]
10054382:	e002      	b.n	1005438a <SMP_acl_data_hndl+0xe2>
10054384:	2f01      	cmp	r7, #1
10054386:	d100      	bne.n	1005438a <SMP_acl_data_hndl+0xe2>
10054388:	2601      	movs	r6, #1
1005438a:	4631      	mov	r1, r6
1005438c:	4628      	mov	r0, r5
1005438e:	f7fc fa21 	bl	100507d4 <PM_Release_Acl_Pckt>
10054392:	2000      	movs	r0, #0
10054394:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054396:	0000      	.short	0x0000
10054398:	20000990 	.word	0x20000990
1005439c:	2000098c 	.word	0x2000098c

100543a0 <SMP_check_encryption_key_size>:
100543a0:	b510      	push	{r4, lr}
100543a2:	460c      	mov	r4, r1
100543a4:	f000 f8a0 	bl	100544e8 <SMP_get_remote_device_list_item>
100543a8:	2800      	cmp	r0, #0
100543aa:	d007      	beq.n	100543bc <SMP_check_encryption_key_size+0x1c>
100543ac:	7a81      	ldrb	r1, [r0, #10]
100543ae:	2900      	cmp	r1, #0
100543b0:	d004      	beq.n	100543bc <SMP_check_encryption_key_size+0x1c>
100543b2:	7f00      	ldrb	r0, [r0, #28]
100543b4:	42a0      	cmp	r0, r4
100543b6:	d301      	bcc.n	100543bc <SMP_check_encryption_key_size+0x1c>
100543b8:	2000      	movs	r0, #0
100543ba:	bd10      	pop	{r4, pc}
100543bc:	205f      	movs	r0, #95	; 0x5f
100543be:	bd10      	pop	{r4, pc}

100543c0 <SMP_check_is_device_bonded>:
100543c0:	b510      	push	{r4, lr}
100543c2:	b094      	sub	sp, #80	; 0x50
100543c4:	4604      	mov	r4, r0
100543c6:	f000 f88f 	bl	100544e8 <SMP_get_remote_device_list_item>
100543ca:	2800      	cmp	r0, #0
100543cc:	d01a      	beq.n	10054404 <SMP_check_is_device_bonded+0x44>
100543ce:	7841      	ldrb	r1, [r0, #1]
100543d0:	466a      	mov	r2, sp
100543d2:	07c9      	lsls	r1, r1, #31
100543d4:	0fc9      	lsrs	r1, r1, #31
100543d6:	1c80      	adds	r0, r0, #2
100543d8:	f7fe fb4a 	bl	10052a70 <SDB_Find_Record>
100543dc:	2800      	cmp	r0, #0
100543de:	d00d      	beq.n	100543fc <SMP_check_is_device_bonded+0x3c>
100543e0:	4620      	mov	r0, r4
100543e2:	f000 f881 	bl	100544e8 <SMP_get_remote_device_list_item>
100543e6:	2800      	cmp	r0, #0
100543e8:	d00c      	beq.n	10054404 <SMP_check_is_device_bonded+0x44>
100543ea:	7a81      	ldrb	r1, [r0, #10]
100543ec:	29f1      	cmp	r1, #241	; 0xf1
100543ee:	d107      	bne.n	10054400 <SMP_check_is_device_bonded+0x40>
100543f0:	7e80      	ldrb	r0, [r0, #26]
100543f2:	07c1      	lsls	r1, r0, #31
100543f4:	d004      	beq.n	10054400 <SMP_check_is_device_bonded+0x40>
100543f6:	0780      	lsls	r0, r0, #30
100543f8:	d502      	bpl.n	10054400 <SMP_check_is_device_bonded+0x40>
100543fa:	2000      	movs	r0, #0
100543fc:	b014      	add	sp, #80	; 0x50
100543fe:	bd10      	pop	{r4, pc}
10054400:	205e      	movs	r0, #94	; 0x5e
10054402:	e7fb      	b.n	100543fc <SMP_check_is_device_bonded+0x3c>
10054404:	2040      	movs	r0, #64	; 0x40
10054406:	e7f9      	b.n	100543fc <SMP_check_is_device_bonded+0x3c>

10054408 <SMP_connection_complete_handler>:
10054408:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
1005440a:	469c      	mov	ip, r3
1005440c:	4b22      	ldr	r3, [pc, #136]	; (10054498 <SMP_connection_complete_handler+0x90>)
1005440e:	2400      	movs	r4, #0
10054410:	681b      	ldr	r3, [r3, #0]
10054412:	4920      	ldr	r1, [pc, #128]	; (10054494 <SMP_connection_complete_handler+0x8c>)
10054414:	4606      	mov	r6, r0
10054416:	33a0      	adds	r3, #160	; 0xa0
10054418:	b081      	sub	sp, #4
1005441a:	4627      	mov	r7, r4
1005441c:	4620      	mov	r0, r4
1005441e:	6809      	ldr	r1, [r1, #0]
10054420:	7b1d      	ldrb	r5, [r3, #12]
10054422:	e008      	b.n	10054436 <SMP_connection_complete_handler+0x2e>
10054424:	237c      	movs	r3, #124	; 0x7c
10054426:	6fcc      	ldr	r4, [r1, #124]	; 0x7c
10054428:	4343      	muls	r3, r0
1005442a:	18e4      	adds	r4, r4, r3
1005442c:	8923      	ldrh	r3, [r4, #8]
1005442e:	2b00      	cmp	r3, #0
10054430:	d00d      	beq.n	1005444e <SMP_connection_complete_handler+0x46>
10054432:	1c40      	adds	r0, r0, #1
10054434:	b2c0      	uxtb	r0, r0
10054436:	4285      	cmp	r5, r0
10054438:	d8f4      	bhi.n	10054424 <SMP_connection_complete_handler+0x1c>
1005443a:	4285      	cmp	r5, r0
1005443c:	d027      	beq.n	1005448e <SMP_connection_complete_handler+0x86>
1005443e:	2f00      	cmp	r7, #0
10054440:	d025      	beq.n	1005448e <SMP_connection_complete_handler+0x86>
10054442:	2003      	movs	r0, #3
10054444:	7020      	strb	r0, [r4, #0]
10054446:	2a00      	cmp	r2, #0
10054448:	d003      	beq.n	10054452 <SMP_connection_complete_handler+0x4a>
1005444a:	2001      	movs	r0, #1
1005444c:	e002      	b.n	10054454 <SMP_connection_complete_handler+0x4c>
1005444e:	2701      	movs	r7, #1
10054450:	e7f3      	b.n	1005443a <SMP_connection_complete_handler+0x32>
10054452:	2000      	movs	r0, #0
10054454:	7060      	strb	r0, [r4, #1]
10054456:	2206      	movs	r2, #6
10054458:	4661      	mov	r1, ip
1005445a:	1ca0      	adds	r0, r4, #2
1005445c:	f7ee feaf 	bl	100431be <Osal_MemCpy>
10054460:	8126      	strh	r6, [r4, #8]
10054462:	2010      	movs	r0, #16
10054464:	72a0      	strb	r0, [r4, #10]
10054466:	4620      	mov	r0, r4
10054468:	3060      	adds	r0, #96	; 0x60
1005446a:	9902      	ldr	r1, [sp, #8]
1005446c:	7501      	strb	r1, [r0, #20]
1005446e:	990b      	ldr	r1, [sp, #44]	; 0x2c
10054470:	7541      	strb	r1, [r0, #21]
10054472:	2206      	movs	r2, #6
10054474:	3016      	adds	r0, #22
10054476:	990a      	ldr	r1, [sp, #40]	; 0x28
10054478:	f7ee fea1 	bl	100431be <Osal_MemCpy>
1005447c:	4620      	mov	r0, r4
1005447e:	2204      	movs	r2, #4
10054480:	2100      	movs	r1, #0
10054482:	300c      	adds	r0, #12
10054484:	f7ee fe9f 	bl	100431c6 <Osal_MemSet>
10054488:	2000      	movs	r0, #0
1005448a:	43c0      	mvns	r0, r0
1005448c:	6160      	str	r0, [r4, #20]
1005448e:	b005      	add	sp, #20
10054490:	bdf0      	pop	{r4, r5, r6, r7, pc}
10054492:	0000      	.short	0x0000
10054494:	20000990 	.word	0x20000990
10054498:	2000098c 	.word	0x2000098c

1005449c <SMP_forget_device_by_conn_handle>:
1005449c:	b510      	push	{r4, lr}
1005449e:	2441      	movs	r4, #65	; 0x41
100544a0:	f000 f822 	bl	100544e8 <SMP_get_remote_device_list_item>
100544a4:	2800      	cmp	r0, #0
100544a6:	d005      	beq.n	100544b4 <SMP_forget_device_by_conn_handle+0x18>
100544a8:	3060      	adds	r0, #96	; 0x60
100544aa:	7d01      	ldrb	r1, [r0, #20]
100544ac:	2280      	movs	r2, #128	; 0x80
100544ae:	4311      	orrs	r1, r2
100544b0:	7501      	strb	r1, [r0, #20]
100544b2:	2400      	movs	r4, #0
100544b4:	4620      	mov	r0, r4
100544b6:	bd10      	pop	{r4, pc}

100544b8 <SMP_get_link_status>:
100544b8:	b510      	push	{r4, lr}
100544ba:	2400      	movs	r4, #0
100544bc:	f000 f814 	bl	100544e8 <SMP_get_remote_device_list_item>
100544c0:	2800      	cmp	r0, #0
100544c2:	d00e      	beq.n	100544e2 <SMP_get_link_status+0x2a>
100544c4:	8900      	ldrh	r0, [r0, #8]
100544c6:	04c1      	lsls	r1, r0, #19
100544c8:	d507      	bpl.n	100544da <SMP_get_link_status+0x22>
100544ca:	2401      	movs	r4, #1
100544cc:	0481      	lsls	r1, r0, #18
100544ce:	d501      	bpl.n	100544d4 <SMP_get_link_status+0x1c>
100544d0:	2403      	movs	r4, #3
100544d2:	e002      	b.n	100544da <SMP_get_link_status+0x22>
100544d4:	0441      	lsls	r1, r0, #17
100544d6:	d500      	bpl.n	100544da <SMP_get_link_status+0x22>
100544d8:	2405      	movs	r4, #5
100544da:	0400      	lsls	r0, r0, #16
100544dc:	d401      	bmi.n	100544e2 <SMP_get_link_status+0x2a>
100544de:	2008      	movs	r0, #8
100544e0:	4304      	orrs	r4, r0
100544e2:	4620      	mov	r0, r4
100544e4:	bd10      	pop	{r4, pc}
	...

100544e8 <SMP_get_remote_device_list_item>:
100544e8:	b570      	push	{r4, r5, r6, lr}
100544ea:	2800      	cmp	r0, #0
100544ec:	d01b      	beq.n	10054526 <SMP_get_remote_device_list_item+0x3e>
100544ee:	0503      	lsls	r3, r0, #20
100544f0:	480f      	ldr	r0, [pc, #60]	; (10054530 <SMP_get_remote_device_list_item+0x48>)
100544f2:	2100      	movs	r1, #0
100544f4:	6800      	ldr	r0, [r0, #0]
100544f6:	4a0d      	ldr	r2, [pc, #52]	; (1005452c <SMP_get_remote_device_list_item+0x44>)
100544f8:	0d1b      	lsrs	r3, r3, #20
100544fa:	30a0      	adds	r0, #160	; 0xa0
100544fc:	6812      	ldr	r2, [r2, #0]
100544fe:	7b04      	ldrb	r4, [r0, #12]
10054500:	e00f      	b.n	10054522 <SMP_get_remote_device_list_item+0x3a>
10054502:	4608      	mov	r0, r1
10054504:	267c      	movs	r6, #124	; 0x7c
10054506:	4370      	muls	r0, r6
10054508:	6fd5      	ldr	r5, [r2, #124]	; 0x7c
1005450a:	3008      	adds	r0, #8
1005450c:	5a28      	ldrh	r0, [r5, r0]
1005450e:	0500      	lsls	r0, r0, #20
10054510:	0d00      	lsrs	r0, r0, #20
10054512:	4298      	cmp	r0, r3
10054514:	d103      	bne.n	1005451e <SMP_get_remote_device_list_item+0x36>
10054516:	227c      	movs	r2, #124	; 0x7c
10054518:	4351      	muls	r1, r2
1005451a:	1868      	adds	r0, r5, r1
1005451c:	bd70      	pop	{r4, r5, r6, pc}
1005451e:	1c49      	adds	r1, r1, #1
10054520:	b2c9      	uxtb	r1, r1
10054522:	428c      	cmp	r4, r1
10054524:	d8ed      	bhi.n	10054502 <SMP_get_remote_device_list_item+0x1a>
10054526:	2000      	movs	r0, #0
10054528:	bd70      	pop	{r4, r5, r6, pc}
1005452a:	0000      	.short	0x0000
1005452c:	20000990 	.word	0x20000990
10054530:	2000098c 	.word	0x2000098c

10054534 <SMP_hci_disconnection_complete_evt_hndl>:
10054534:	b51c      	push	{r2, r3, r4, lr}
10054536:	f7ff ffd7 	bl	100544e8 <SMP_get_remote_device_list_item>
1005453a:	0004      	movs	r4, r0
1005453c:	d016      	beq.n	1005456c <SMP_hci_disconnection_complete_evt_hndl+0x38>
1005453e:	8920      	ldrh	r0, [r4, #8]
10054540:	f000 fac8 	bl	10054ad4 <smp_find_remote_device_index>
10054544:	4602      	mov	r2, r0
10054546:	4b0a      	ldr	r3, [pc, #40]	; (10054570 <SMP_hci_disconnection_complete_evt_hndl+0x3c>)
10054548:	2100      	movs	r1, #0
1005454a:	2001      	movs	r0, #1
1005454c:	f000 f93a 	bl	100547c4 <SMP_reset_timer>
10054550:	8920      	ldrh	r0, [r4, #8]
10054552:	0500      	lsls	r0, r0, #20
10054554:	0d00      	lsrs	r0, r0, #20
10054556:	f000 fadf 	bl	10054b18 <smp_flush_rx_queues>
1005455a:	2002      	movs	r0, #2
1005455c:	4669      	mov	r1, sp
1005455e:	9400      	str	r4, [sp, #0]
10054560:	7108      	strb	r0, [r1, #4]
10054562:	4668      	mov	r0, sp
10054564:	f000 fd0c 	bl	10054f80 <smp_update_statistics_on_pairing_complete>
10054568:	20fe      	movs	r0, #254	; 0xfe
1005456a:	72a0      	strb	r0, [r4, #10]
1005456c:	bd1c      	pop	{r2, r3, r4, pc}
1005456e:	0000      	.short	0x0000
10054570:	00007530 	.word	0x00007530

10054574 <SMP_hci_encryption_change_evt_hndl>:
10054574:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10054576:	4607      	mov	r7, r0
10054578:	460e      	mov	r6, r1
1005457a:	2500      	movs	r5, #0
1005457c:	4610      	mov	r0, r2
1005457e:	f7ff ffb3 	bl	100544e8 <SMP_get_remote_device_list_item>
10054582:	0004      	movs	r4, r0
10054584:	d07d      	beq.n	10054682 <SMP_hci_encryption_change_evt_hndl+0x10e>
10054586:	2e00      	cmp	r6, #0
10054588:	d10b      	bne.n	100545a2 <SMP_hci_encryption_change_evt_hndl+0x2e>
1005458a:	8920      	ldrh	r0, [r4, #8]
1005458c:	2101      	movs	r1, #1
1005458e:	0309      	lsls	r1, r1, #12
10054590:	4308      	orrs	r0, r1
10054592:	8120      	strh	r0, [r4, #8]
10054594:	7fe1      	ldrb	r1, [r4, #31]
10054596:	2902      	cmp	r1, #2
10054598:	d00d      	beq.n	100545b6 <SMP_hci_encryption_change_evt_hndl+0x42>
1005459a:	2903      	cmp	r1, #3
1005459c:	d00b      	beq.n	100545b6 <SMP_hci_encryption_change_evt_hndl+0x42>
1005459e:	2904      	cmp	r1, #4
100545a0:	d009      	beq.n	100545b6 <SMP_hci_encryption_change_evt_hndl+0x42>
100545a2:	8920      	ldrh	r0, [r4, #8]
100545a4:	0501      	lsls	r1, r0, #20
100545a6:	0d09      	lsrs	r1, r1, #20
100545a8:	2e00      	cmp	r6, #0
100545aa:	d00a      	beq.n	100545c2 <SMP_hci_encryption_change_evt_hndl+0x4e>
100545ac:	2074      	movs	r0, #116	; 0x74
100545ae:	5d00      	ldrb	r0, [r0, r4]
100545b0:	07c0      	lsls	r0, r0, #31
100545b2:	d01d      	beq.n	100545f0 <SMP_hci_encryption_change_evt_hndl+0x7c>
100545b4:	e037      	b.n	10054626 <SMP_hci_encryption_change_evt_hndl+0xb2>
100545b6:	2101      	movs	r1, #1
100545b8:	0349      	lsls	r1, r1, #13
100545ba:	4308      	orrs	r0, r1
100545bc:	0501      	lsls	r1, r0, #20
100545be:	8120      	strh	r0, [r4, #8]
100545c0:	0d09      	lsrs	r1, r1, #20
100545c2:	7aa0      	ldrb	r0, [r4, #10]
100545c4:	28bc      	cmp	r0, #188	; 0xbc
100545c6:	d006      	beq.n	100545d6 <SMP_hci_encryption_change_evt_hndl+0x62>
100545c8:	28ad      	cmp	r0, #173	; 0xad
100545ca:	d006      	beq.n	100545da <SMP_hci_encryption_change_evt_hndl+0x66>
100545cc:	28ae      	cmp	r0, #174	; 0xae
100545ce:	d006      	beq.n	100545de <SMP_hci_encryption_change_evt_hndl+0x6a>
100545d0:	28f1      	cmp	r0, #241	; 0xf1
100545d2:	d007      	beq.n	100545e4 <SMP_hci_encryption_change_evt_hndl+0x70>
100545d4:	e037      	b.n	10054646 <SMP_hci_encryption_change_evt_hndl+0xd2>
100545d6:	20bf      	movs	r0, #191	; 0xbf
100545d8:	e002      	b.n	100545e0 <SMP_hci_encryption_change_evt_hndl+0x6c>
100545da:	20af      	movs	r0, #175	; 0xaf
100545dc:	e000      	b.n	100545e0 <SMP_hci_encryption_change_evt_hndl+0x6c>
100545de:	20f0      	movs	r0, #240	; 0xf0
100545e0:	72a0      	strb	r0, [r4, #10]
100545e2:	e030      	b.n	10054646 <SMP_hci_encryption_change_evt_hndl+0xd2>
100545e4:	2f03      	cmp	r7, #3
100545e6:	d12e      	bne.n	10054646 <SMP_hci_encryption_change_evt_hndl+0xd2>
100545e8:	2300      	movs	r3, #0
100545ea:	461a      	mov	r2, r3
100545ec:	2042      	movs	r0, #66	; 0x42
100545ee:	e028      	b.n	10054642 <SMP_hci_encryption_change_evt_hndl+0xce>
100545f0:	7aa0      	ldrb	r0, [r4, #10]
100545f2:	28f1      	cmp	r0, #241	; 0xf1
100545f4:	d117      	bne.n	10054626 <SMP_hci_encryption_change_evt_hndl+0xb2>
100545f6:	4825      	ldr	r0, [pc, #148]	; (1005468c <SMP_hci_encryption_change_evt_hndl+0x118>)
100545f8:	2137      	movs	r1, #55	; 0x37
100545fa:	6800      	ldr	r0, [r0, #0]
100545fc:	0149      	lsls	r1, r1, #5
100545fe:	1841      	adds	r1, r0, r1
10054600:	7a89      	ldrb	r1, [r1, #10]
10054602:	2542      	movs	r5, #66	; 0x42
10054604:	0689      	lsls	r1, r1, #26
10054606:	d50e      	bpl.n	10054626 <SMP_hci_encryption_change_evt_hndl+0xb2>
10054608:	2101      	movs	r1, #1
1005460a:	02c9      	lsls	r1, r1, #11
1005460c:	3008      	adds	r0, #8
1005460e:	1840      	adds	r0, r0, r1
10054610:	2217      	movs	r2, #23
10054612:	6940      	ldr	r0, [r0, #20]
10054614:	2300      	movs	r3, #0
10054616:	4629      	mov	r1, r5
10054618:	f000 fde8 	bl	100551ec <aci_event_fifo_push_header>
1005461c:	0001      	movs	r1, r0
1005461e:	d002      	beq.n	10054626 <SMP_hci_encryption_change_evt_hndl+0xb2>
10054620:	4628      	mov	r0, r5
10054622:	f000 fdcf 	bl	100551c4 <aci_event_fifo_push>
10054626:	2000      	movs	r0, #0
10054628:	2501      	movs	r5, #1
1005462a:	72a0      	strb	r0, [r4, #10]
1005462c:	2f03      	cmp	r7, #3
1005462e:	d10a      	bne.n	10054646 <SMP_hci_encryption_change_evt_hndl+0xd2>
10054630:	2205      	movs	r2, #5
10054632:	2e06      	cmp	r6, #6
10054634:	d100      	bne.n	10054638 <SMP_hci_encryption_change_evt_hndl+0xc4>
10054636:	2204      	movs	r2, #4
10054638:	8920      	ldrh	r0, [r4, #8]
1005463a:	2300      	movs	r3, #0
1005463c:	0501      	lsls	r1, r0, #20
1005463e:	0d09      	lsrs	r1, r1, #20
10054640:	2002      	movs	r0, #2
10054642:	f000 f95b 	bl	100548fc <aci_gap_pairing_complete_event_push>
10054646:	2074      	movs	r0, #116	; 0x74
10054648:	5d00      	ldrb	r0, [r0, r4]
1005464a:	07c0      	lsls	r0, r0, #31
1005464c:	d007      	beq.n	1005465e <SMP_hci_encryption_change_evt_hndl+0xea>
1005464e:	7b20      	ldrb	r0, [r4, #12]
10054650:	0781      	lsls	r1, r0, #30
10054652:	d000      	beq.n	10054656 <SMP_hci_encryption_change_evt_hndl+0xe2>
10054654:	2501      	movs	r5, #1
10054656:	0900      	lsrs	r0, r0, #4
10054658:	0100      	lsls	r0, r0, #4
1005465a:	7320      	strb	r0, [r4, #12]
1005465c:	e007      	b.n	1005466e <SMP_hci_encryption_change_evt_hndl+0xfa>
1005465e:	7ba0      	ldrb	r0, [r4, #14]
10054660:	06c1      	lsls	r1, r0, #27
10054662:	d504      	bpl.n	1005466e <SMP_hci_encryption_change_evt_hndl+0xfa>
10054664:	21ef      	movs	r1, #239	; 0xef
10054666:	4008      	ands	r0, r1
10054668:	73a0      	strb	r0, [r4, #14]
1005466a:	0600      	lsls	r0, r0, #24
1005466c:	d401      	bmi.n	10054672 <SMP_hci_encryption_change_evt_hndl+0xfe>
1005466e:	2d00      	cmp	r5, #0
10054670:	d00a      	beq.n	10054688 <SMP_hci_encryption_change_evt_hndl+0x114>
10054672:	8920      	ldrh	r0, [r4, #8]
10054674:	f000 fa2e 	bl	10054ad4 <smp_find_remote_device_index>
10054678:	4602      	mov	r2, r0
1005467a:	2100      	movs	r1, #0
1005467c:	4b04      	ldr	r3, [pc, #16]	; (10054690 <SMP_hci_encryption_change_evt_hndl+0x11c>)
1005467e:	2001      	movs	r0, #1
10054680:	e000      	b.n	10054684 <SMP_hci_encryption_change_evt_hndl+0x110>
10054682:	e001      	b.n	10054688 <SMP_hci_encryption_change_evt_hndl+0x114>
10054684:	f000 f89e 	bl	100547c4 <SMP_reset_timer>
10054688:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005468a:	0000      	.short	0x0000
1005468c:	2000098c 	.word	0x2000098c
10054690:	00007530 	.word	0x00007530

10054694 <SMP_hci_le_connection_complete_evt_hndl>:
10054694:	b5f0      	push	{r4, r5, r6, r7, lr}
10054696:	b085      	sub	sp, #20
10054698:	460e      	mov	r6, r1
1005469a:	4607      	mov	r7, r0
1005469c:	461c      	mov	r4, r3
1005469e:	4615      	mov	r5, r2
100546a0:	a802      	add	r0, sp, #8
100546a2:	a904      	add	r1, sp, #16
100546a4:	f7fd f952 	bl	1005194c <LL_Get_Address>
100546a8:	4669      	mov	r1, sp
100546aa:	7c09      	ldrb	r1, [r1, #16]
100546ac:	a802      	add	r0, sp, #8
100546ae:	9101      	str	r1, [sp, #4]
100546b0:	9000      	str	r0, [sp, #0]
100546b2:	4623      	mov	r3, r4
100546b4:	462a      	mov	r2, r5
100546b6:	4631      	mov	r1, r6
100546b8:	4638      	mov	r0, r7
100546ba:	f7ff fea5 	bl	10054408 <SMP_connection_complete_handler>
100546be:	b005      	add	sp, #20
100546c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

100546c2 <SMP_hci_le_enhanced_connection_complete_evt_hndl>:
100546c2:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100546c4:	b085      	sub	sp, #20
100546c6:	4615      	mov	r5, r2
100546c8:	460e      	mov	r6, r1
100546ca:	461c      	mov	r4, r3
100546cc:	2206      	movs	r2, #6
100546ce:	a802      	add	r0, sp, #8
100546d0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
100546d2:	990e      	ldr	r1, [sp, #56]	; 0x38
100546d4:	f7ee fd73 	bl	100431be <Osal_MemCpy>
100546d8:	a802      	add	r0, sp, #8
100546da:	f7fc fefe 	bl	100514da <Is_Address_Initialized>
100546de:	2800      	cmp	r0, #0
100546e0:	d006      	beq.n	100546f0 <SMP_hci_le_enhanced_connection_complete_evt_hndl+0x2e>
100546e2:	2001      	movs	r0, #1
100546e4:	4669      	mov	r1, sp
100546e6:	7408      	strb	r0, [r1, #16]
100546e8:	07a8      	lsls	r0, r5, #30
100546ea:	d506      	bpl.n	100546fa <SMP_hci_le_enhanced_connection_complete_evt_hndl+0x38>
100546ec:	463b      	mov	r3, r7
100546ee:	e005      	b.n	100546fc <SMP_hci_le_enhanced_connection_complete_evt_hndl+0x3a>
100546f0:	a802      	add	r0, sp, #8
100546f2:	a904      	add	r1, sp, #16
100546f4:	f7fd f92a 	bl	1005194c <LL_Get_Address>
100546f8:	e7f6      	b.n	100546e8 <SMP_hci_le_enhanced_connection_complete_evt_hndl+0x26>
100546fa:	4623      	mov	r3, r4
100546fc:	4669      	mov	r1, sp
100546fe:	7c09      	ldrb	r1, [r1, #16]
10054700:	a802      	add	r0, sp, #8
10054702:	9101      	str	r1, [sp, #4]
10054704:	9000      	str	r0, [sp, #0]
10054706:	462a      	mov	r2, r5
10054708:	4631      	mov	r1, r6
1005470a:	9805      	ldr	r0, [sp, #20]
1005470c:	f7ff fe7c 	bl	10054408 <SMP_connection_complete_handler>
10054710:	b009      	add	sp, #36	; 0x24
10054712:	bdf0      	pop	{r4, r5, r6, r7, pc}

10054714 <SMP_hci_le_long_term_key_request_evt_hndl>:
10054714:	b570      	push	{r4, r5, r6, lr}
10054716:	4615      	mov	r5, r2
10054718:	460e      	mov	r6, r1
1005471a:	f7ff fee5 	bl	100544e8 <SMP_get_remote_device_list_item>
1005471e:	0004      	movs	r4, r0
10054720:	d013      	beq.n	1005474a <SMP_hci_le_long_term_key_request_evt_hndl+0x36>
10054722:	7b60      	ldrb	r0, [r4, #13]
10054724:	2101      	movs	r1, #1
10054726:	4308      	orrs	r0, r1
10054728:	7360      	strb	r0, [r4, #13]
1005472a:	7aa0      	ldrb	r0, [r4, #10]
1005472c:	28bc      	cmp	r0, #188	; 0xbc
1005472e:	d00c      	beq.n	1005474a <SMP_hci_le_long_term_key_request_evt_hndl+0x36>
10054730:	7ae0      	ldrb	r0, [r4, #11]
10054732:	0700      	lsls	r0, r0, #28
10054734:	d409      	bmi.n	1005474a <SMP_hci_le_long_term_key_request_evt_hndl+0x36>
10054736:	4620      	mov	r0, r4
10054738:	2208      	movs	r2, #8
1005473a:	4631      	mov	r1, r6
1005473c:	302a      	adds	r0, #42	; 0x2a
1005473e:	f7ee fd3e 	bl	100431be <Osal_MemCpy>
10054742:	3432      	adds	r4, #50	; 0x32
10054744:	7025      	strb	r5, [r4, #0]
10054746:	0a28      	lsrs	r0, r5, #8
10054748:	7060      	strb	r0, [r4, #1]
1005474a:	bd70      	pop	{r4, r5, r6, pc}

1005474c <SMP_repeated_attacks_timer_cb>:
1005474c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005474e:	4e1b      	ldr	r6, [pc, #108]	; (100547bc <SMP_repeated_attacks_timer_cb+0x70>)
10054750:	00c0      	lsls	r0, r0, #3
10054752:	6831      	ldr	r1, [r6, #0]
10054754:	4605      	mov	r5, r0
10054756:	3180      	adds	r1, #128	; 0x80
10054758:	680a      	ldr	r2, [r1, #0]
1005475a:	3d08      	subs	r5, #8
1005475c:	5d51      	ldrb	r1, [r2, r5]
1005475e:	2340      	movs	r3, #64	; 0x40
10054760:	0649      	lsls	r1, r1, #25
10054762:	0e49      	lsrs	r1, r1, #25
10054764:	5551      	strb	r1, [r2, r5]
10054766:	6832      	ldr	r2, [r6, #0]
10054768:	4319      	orrs	r1, r3
1005476a:	3280      	adds	r2, #128	; 0x80
1005476c:	6812      	ldr	r2, [r2, #0]
1005476e:	2400      	movs	r4, #0
10054770:	5551      	strb	r1, [r2, r5]
10054772:	1f85      	subs	r5, r0, #6
10054774:	4f12      	ldr	r7, [pc, #72]	; (100547c0 <SMP_repeated_attacks_timer_cb+0x74>)
10054776:	e01a      	b.n	100547ae <SMP_repeated_attacks_timer_cb+0x62>
10054778:	6830      	ldr	r0, [r6, #0]
1005477a:	2180      	movs	r1, #128	; 0x80
1005477c:	5809      	ldr	r1, [r1, r0]
1005477e:	6fc2      	ldr	r2, [r0, #124]	; 0x7c
10054780:	4620      	mov	r0, r4
10054782:	237c      	movs	r3, #124	; 0x7c
10054784:	4358      	muls	r0, r3
10054786:	9000      	str	r0, [sp, #0]
10054788:	1c80      	adds	r0, r0, #2
1005478a:	1810      	adds	r0, r2, r0
1005478c:	1949      	adds	r1, r1, r5
1005478e:	2206      	movs	r2, #6
10054790:	f7ee fd1d 	bl	100431ce <Osal_MemCmp>
10054794:	2800      	cmp	r0, #0
10054796:	d108      	bne.n	100547aa <SMP_repeated_attacks_timer_cb+0x5e>
10054798:	6830      	ldr	r0, [r6, #0]
1005479a:	6fc1      	ldr	r1, [r0, #124]	; 0x7c
1005479c:	9800      	ldr	r0, [sp, #0]
1005479e:	1808      	adds	r0, r1, r0
100547a0:	7a81      	ldrb	r1, [r0, #10]
100547a2:	29fb      	cmp	r1, #251	; 0xfb
100547a4:	d101      	bne.n	100547aa <SMP_repeated_attacks_timer_cb+0x5e>
100547a6:	2110      	movs	r1, #16
100547a8:	7281      	strb	r1, [r0, #10]
100547aa:	1c64      	adds	r4, r4, #1
100547ac:	b2e4      	uxtb	r4, r4
100547ae:	6838      	ldr	r0, [r7, #0]
100547b0:	30a0      	adds	r0, #160	; 0xa0
100547b2:	7b00      	ldrb	r0, [r0, #12]
100547b4:	42a0      	cmp	r0, r4
100547b6:	d8df      	bhi.n	10054778 <SMP_repeated_attacks_timer_cb+0x2c>
100547b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100547ba:	0000      	.short	0x0000
100547bc:	20000990 	.word	0x20000990
100547c0:	2000098c 	.word	0x2000098c

100547c4 <SMP_reset_timer>:
100547c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
100547c6:	2400      	movs	r4, #0
100547c8:	2900      	cmp	r1, #0
100547ca:	d002      	beq.n	100547d2 <SMP_reset_timer+0xe>
100547cc:	2901      	cmp	r1, #1
100547ce:	d002      	beq.n	100547d6 <SMP_reset_timer+0x12>
100547d0:	e002      	b.n	100547d8 <SMP_reset_timer+0x14>
100547d2:	2508      	movs	r5, #8
100547d4:	e000      	b.n	100547d8 <SMP_reset_timer+0x14>
100547d6:	2500      	movs	r5, #0
100547d8:	18a9      	adds	r1, r5, r2
100547da:	466a      	mov	r2, sp
100547dc:	7311      	strb	r1, [r2, #12]
100547de:	9302      	str	r3, [sp, #8]
100547e0:	2801      	cmp	r0, #1
100547e2:	d009      	beq.n	100547f8 <SMP_reset_timer+0x34>
100547e4:	2800      	cmp	r0, #0
100547e6:	d10a      	bne.n	100547fe <SMP_reset_timer+0x3a>
100547e8:	4610      	mov	r0, r2
100547ea:	f7f8 fb69 	bl	1004cec0 <Timer_StopOneShot>
100547ee:	4668      	mov	r0, sp
100547f0:	f7f8 fb1a 	bl	1004ce28 <Timer_StartOneShot>
100547f4:	4604      	mov	r4, r0
100547f6:	e002      	b.n	100547fe <SMP_reset_timer+0x3a>
100547f8:	4610      	mov	r0, r2
100547fa:	f7f8 fb61 	bl	1004cec0 <Timer_StopOneShot>
100547fe:	4620      	mov	r0, r4
10054800:	b004      	add	sp, #16
10054802:	bd70      	pop	{r4, r5, r6, pc}

10054804 <SMP_set_authentication_req>:
10054804:	b570      	push	{r4, r5, r6, lr}
10054806:	4605      	mov	r5, r0
10054808:	f000 f9d0 	bl	10054bac <smp_is_any_pairing_ongoing>
1005480c:	2800      	cmp	r0, #0
1005480e:	d001      	beq.n	10054814 <SMP_set_authentication_req+0x10>
10054810:	2446      	movs	r4, #70	; 0x46
10054812:	e007      	b.n	10054824 <SMP_set_authentication_req+0x20>
10054814:	4804      	ldr	r0, [pc, #16]	; (10054828 <SMP_set_authentication_req+0x24>)
10054816:	2400      	movs	r4, #0
10054818:	6800      	ldr	r0, [r0, #0]
1005481a:	220c      	movs	r2, #12
1005481c:	4629      	mov	r1, r5
1005481e:	300c      	adds	r0, #12
10054820:	f7ee fccd 	bl	100431be <Osal_MemCpy>
10054824:	4620      	mov	r0, r4
10054826:	bd70      	pop	{r4, r5, r6, pc}
10054828:	20000990 	.word	0x20000990

1005482c <SMP_validate_signed_packet>:
1005482c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005482e:	b08b      	sub	sp, #44	; 0x2c
10054830:	460f      	mov	r7, r1
10054832:	88ce      	ldrh	r6, [r1, #6]
10054834:	f7ff fe58 	bl	100544e8 <SMP_get_remote_device_list_item>
10054838:	0005      	movs	r5, r0
1005483a:	d032      	beq.n	100548a2 <SMP_validate_signed_packet+0x76>
1005483c:	a907      	add	r1, sp, #28
1005483e:	f000 f987 	bl	10054b50 <smp_get_CSRK>
10054842:	2800      	cmp	r0, #0
10054844:	d002      	beq.n	1005484c <SMP_validate_signed_packet+0x20>
10054846:	205a      	movs	r0, #90	; 0x5a
10054848:	b00b      	add	sp, #44	; 0x2c
1005484a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005484c:	3e08      	subs	r6, #8
1005484e:	b2b1      	uxth	r1, r6
10054850:	466b      	mov	r3, sp
10054852:	220c      	movs	r2, #12
10054854:	4638      	mov	r0, r7
10054856:	f7fb ff21 	bl	1005069c <PM_Copy_Pckt_Data>
1005485a:	4668      	mov	r0, sp
1005485c:	7801      	ldrb	r1, [r0, #0]
1005485e:	7840      	ldrb	r0, [r0, #1]
10054860:	0202      	lsls	r2, r0, #8
10054862:	4668      	mov	r0, sp
10054864:	7880      	ldrb	r0, [r0, #2]
10054866:	0403      	lsls	r3, r0, #16
10054868:	4668      	mov	r0, sp
1005486a:	78c0      	ldrb	r0, [r0, #3]
1005486c:	0604      	lsls	r4, r0, #24
1005486e:	431c      	orrs	r4, r3
10054870:	4314      	orrs	r4, r2
10054872:	6968      	ldr	r0, [r5, #20]
10054874:	430c      	orrs	r4, r1
10054876:	1c41      	adds	r1, r0, #1
10054878:	d001      	beq.n	1005487e <SMP_validate_signed_packet+0x52>
1005487a:	42a0      	cmp	r0, r4
1005487c:	d20c      	bcs.n	10054898 <SMP_validate_signed_packet+0x6c>
1005487e:	b2f2      	uxtb	r2, r6
10054880:	ab03      	add	r3, sp, #12
10054882:	4639      	mov	r1, r7
10054884:	a807      	add	r0, sp, #28
10054886:	f7ff fbfb 	bl	10054080 <sma_CMAC_generate_tag>
1005488a:	2208      	movs	r2, #8
1005488c:	a905      	add	r1, sp, #20
1005488e:	a801      	add	r0, sp, #4
10054890:	f7ee fc9d 	bl	100431ce <Osal_MemCmp>
10054894:	2800      	cmp	r0, #0
10054896:	d001      	beq.n	1005489c <SMP_validate_signed_packet+0x70>
10054898:	2005      	movs	r0, #5
1005489a:	e7d5      	b.n	10054848 <SMP_validate_signed_packet+0x1c>
1005489c:	2000      	movs	r0, #0
1005489e:	616c      	str	r4, [r5, #20]
100548a0:	e7d2      	b.n	10054848 <SMP_validate_signed_packet+0x1c>
100548a2:	2040      	movs	r0, #64	; 0x40
100548a4:	e7d0      	b.n	10054848 <SMP_validate_signed_packet+0x1c>
	...

100548a8 <aci_gap_authorization_req_event_push>:
100548a8:	b570      	push	{r4, r5, r6, lr}
100548aa:	460d      	mov	r5, r1
100548ac:	2301      	movs	r3, #1
100548ae:	4604      	mov	r4, r0
100548b0:	06c1      	lsls	r1, r0, #27
100548b2:	4811      	ldr	r0, [pc, #68]	; (100548f8 <aci_gap_authorization_req_event_push+0x50>)
100548b4:	6800      	ldr	r0, [r0, #0]
100548b6:	d503      	bpl.n	100548c0 <aci_gap_authorization_req_event_push+0x18>
100548b8:	2218      	movs	r2, #24
100548ba:	21bf      	movs	r1, #191	; 0xbf
100548bc:	400c      	ands	r4, r1
100548be:	e008      	b.n	100548d2 <aci_gap_authorization_req_event_push+0x2a>
100548c0:	2137      	movs	r1, #55	; 0x37
100548c2:	0149      	lsls	r1, r1, #5
100548c4:	1841      	adds	r1, r0, r1
100548c6:	7a89      	ldrb	r1, [r1, #10]
100548c8:	0709      	lsls	r1, r1, #28
100548ca:	d401      	bmi.n	100548d0 <aci_gap_authorization_req_event_push+0x28>
100548cc:	2000      	movs	r0, #0
100548ce:	bd70      	pop	{r4, r5, r6, pc}
100548d0:	2215      	movs	r2, #21
100548d2:	0721      	lsls	r1, r4, #28
100548d4:	0e89      	lsrs	r1, r1, #26
100548d6:	1808      	adds	r0, r1, r0
100548d8:	2101      	movs	r1, #1
100548da:	02c9      	lsls	r1, r1, #11
100548dc:	1840      	adds	r0, r0, r1
100548de:	6940      	ldr	r0, [r0, #20]
100548e0:	4621      	mov	r1, r4
100548e2:	f000 fc83 	bl	100551ec <aci_event_fifo_push_header>
100548e6:	0001      	movs	r1, r0
100548e8:	d004      	beq.n	100548f4 <aci_gap_authorization_req_event_push+0x4c>
100548ea:	808d      	strh	r5, [r1, #4]
100548ec:	4620      	mov	r0, r4
100548ee:	f000 fc69 	bl	100551c4 <aci_event_fifo_push>
100548f2:	e7eb      	b.n	100548cc <aci_gap_authorization_req_event_push+0x24>
100548f4:	2007      	movs	r0, #7
100548f6:	bd70      	pop	{r4, r5, r6, pc}
100548f8:	2000098c 	.word	0x2000098c

100548fc <aci_gap_pairing_complete_event_push>:
100548fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100548fe:	461d      	mov	r5, r3
10054900:	460f      	mov	r7, r1
10054902:	2301      	movs	r3, #1
10054904:	4604      	mov	r4, r0
10054906:	06c1      	lsls	r1, r0, #27
10054908:	4812      	ldr	r0, [pc, #72]	; (10054954 <aci_gap_pairing_complete_event_push+0x58>)
1005490a:	4616      	mov	r6, r2
1005490c:	6800      	ldr	r0, [r0, #0]
1005490e:	d503      	bpl.n	10054918 <aci_gap_pairing_complete_event_push+0x1c>
10054910:	2216      	movs	r2, #22
10054912:	21bf      	movs	r1, #191	; 0xbf
10054914:	400c      	ands	r4, r1
10054916:	e008      	b.n	1005492a <aci_gap_pairing_complete_event_push+0x2e>
10054918:	2137      	movs	r1, #55	; 0x37
1005491a:	0149      	lsls	r1, r1, #5
1005491c:	1841      	adds	r1, r0, r1
1005491e:	7a89      	ldrb	r1, [r1, #10]
10054920:	0789      	lsls	r1, r1, #30
10054922:	d401      	bmi.n	10054928 <aci_gap_pairing_complete_event_push+0x2c>
10054924:	2000      	movs	r0, #0
10054926:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054928:	2213      	movs	r2, #19
1005492a:	0721      	lsls	r1, r4, #28
1005492c:	0e89      	lsrs	r1, r1, #26
1005492e:	1808      	adds	r0, r1, r0
10054930:	2101      	movs	r1, #1
10054932:	02c9      	lsls	r1, r1, #11
10054934:	1840      	adds	r0, r0, r1
10054936:	6940      	ldr	r0, [r0, #20]
10054938:	4621      	mov	r1, r4
1005493a:	f000 fc57 	bl	100551ec <aci_event_fifo_push_header>
1005493e:	0001      	movs	r1, r0
10054940:	d006      	beq.n	10054950 <aci_gap_pairing_complete_event_push+0x54>
10054942:	808f      	strh	r7, [r1, #4]
10054944:	718e      	strb	r6, [r1, #6]
10054946:	71cd      	strb	r5, [r1, #7]
10054948:	4620      	mov	r0, r4
1005494a:	f000 fc3b 	bl	100551c4 <aci_event_fifo_push>
1005494e:	e7e9      	b.n	10054924 <aci_gap_pairing_complete_event_push+0x28>
10054950:	2007      	movs	r0, #7
10054952:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054954:	2000098c 	.word	0x2000098c

10054958 <smp_Keys_Distribution_Complete>:
10054958:	b510      	push	{r4, lr}
1005495a:	2174      	movs	r1, #116	; 0x74
1005495c:	5c09      	ldrb	r1, [r1, r0]
1005495e:	07ca      	lsls	r2, r1, #31
10054960:	7f41      	ldrb	r1, [r0, #29]
10054962:	d007      	beq.n	10054974 <smp_Keys_Distribution_Complete+0x1c>
10054964:	2900      	cmp	r1, #0
10054966:	d002      	beq.n	1005496e <smp_Keys_Distribution_Complete+0x16>
10054968:	21d0      	movs	r1, #208	; 0xd0
1005496a:	7281      	strb	r1, [r0, #10]
1005496c:	bd10      	pop	{r4, pc}
1005496e:	f000 fa03 	bl	10054d78 <smp_pairing_completed>
10054972:	bd10      	pop	{r4, pc}
10054974:	06c9      	lsls	r1, r1, #27
10054976:	d5fa      	bpl.n	1005496e <smp_Keys_Distribution_Complete+0x16>
10054978:	7b81      	ldrb	r1, [r0, #14]
1005497a:	068a      	lsls	r2, r1, #26
1005497c:	d5f7      	bpl.n	1005496e <smp_Keys_Distribution_Complete+0x16>
1005497e:	2204      	movs	r2, #4
10054980:	4311      	orrs	r1, r2
10054982:	7381      	strb	r1, [r0, #14]
10054984:	f7ff f832 	bl	100539ec <smp_MI_Start_Encryption_ucfg>
10054988:	bd10      	pop	{r4, pc}
	...

1005498c <smp_add_pairing_record_to_bonding_database>:
1005498c:	b530      	push	{r4, r5, lr}
1005498e:	4604      	mov	r4, r0
10054990:	7ea1      	ldrb	r1, [r4, #26]
10054992:	2000      	movs	r0, #0
10054994:	b0a5      	sub	sp, #148	; 0x94
10054996:	07ca      	lsls	r2, r1, #31
10054998:	d079      	beq.n	10054a8e <smp_add_pairing_record_to_bonding_database+0x102>
1005499a:	0789      	lsls	r1, r1, #30
1005499c:	d577      	bpl.n	10054a8e <smp_add_pairing_record_to_bonding_database+0x102>
1005499e:	2250      	movs	r2, #80	; 0x50
100549a0:	2100      	movs	r1, #0
100549a2:	a810      	add	r0, sp, #64	; 0x40
100549a4:	f7ee fc0f 	bl	100431c6 <Osal_MemSet>
100549a8:	21fe      	movs	r1, #254	; 0xfe
100549aa:	a810      	add	r0, sp, #64	; 0x40
100549ac:	7001      	strb	r1, [r0, #0]
100549ae:	7841      	ldrb	r1, [r0, #1]
100549b0:	7860      	ldrb	r0, [r4, #1]
100549b2:	2206      	movs	r2, #6
100549b4:	07c0      	lsls	r0, r0, #31
100549b6:	0fc0      	lsrs	r0, r0, #31
100549b8:	4301      	orrs	r1, r0
100549ba:	a810      	add	r0, sp, #64	; 0x40
100549bc:	7041      	strb	r1, [r0, #1]
100549be:	1ca1      	adds	r1, r4, #2
100549c0:	303e      	adds	r0, #62	; 0x3e
100549c2:	f7ee fbfc 	bl	100431be <Osal_MemCpy>
100549c6:	7f21      	ldrb	r1, [r4, #28]
100549c8:	a810      	add	r0, sp, #64	; 0x40
100549ca:	70c1      	strb	r1, [r0, #3]
100549cc:	7f60      	ldrb	r0, [r4, #29]
100549ce:	4d40      	ldr	r5, [pc, #256]	; (10054ad0 <smp_add_pairing_record_to_bonding_database+0x144>)
100549d0:	06c0      	lsls	r0, r0, #27
100549d2:	446d      	add	r5, sp
100549d4:	d519      	bpl.n	10054a0a <smp_add_pairing_record_to_bonding_database+0x7e>
100549d6:	4620      	mov	r0, r4
100549d8:	3040      	adds	r0, #64	; 0x40
100549da:	7c82      	ldrb	r2, [r0, #18]
100549dc:	a910      	add	r1, sp, #64	; 0x40
100549de:	710a      	strb	r2, [r1, #4]
100549e0:	7cc0      	ldrb	r0, [r0, #19]
100549e2:	7148      	strb	r0, [r1, #5]
100549e4:	4621      	mov	r1, r4
100549e6:	a811      	add	r0, sp, #68	; 0x44
100549e8:	2208      	movs	r2, #8
100549ea:	314a      	adds	r1, #74	; 0x4a
100549ec:	3002      	adds	r0, #2
100549ee:	f7ee fbe6 	bl	100431be <Osal_MemCpy>
100549f2:	4621      	mov	r1, r4
100549f4:	2210      	movs	r2, #16
100549f6:	313a      	adds	r1, #58	; 0x3a
100549f8:	4628      	mov	r0, r5
100549fa:	f7ee fbe0 	bl	100431be <Osal_MemCpy>
100549fe:	a910      	add	r1, sp, #64	; 0x40
10054a00:	7848      	ldrb	r0, [r1, #1]
10054a02:	2180      	movs	r1, #128	; 0x80
10054a04:	4308      	orrs	r0, r1
10054a06:	a910      	add	r1, sp, #64	; 0x40
10054a08:	7048      	strb	r0, [r1, #1]
10054a0a:	7ae0      	ldrb	r0, [r4, #11]
10054a0c:	0701      	lsls	r1, r0, #28
10054a0e:	d507      	bpl.n	10054a20 <smp_add_pairing_record_to_bonding_database+0x94>
10054a10:	a910      	add	r1, sp, #64	; 0x40
10054a12:	7088      	strb	r0, [r1, #2]
10054a14:	4621      	mov	r1, r4
10054a16:	2210      	movs	r2, #16
10054a18:	312a      	adds	r1, #42	; 0x2a
10054a1a:	4628      	mov	r0, r5
10054a1c:	f7ee fbcf 	bl	100431be <Osal_MemCpy>
10054a20:	7fa0      	ldrb	r0, [r4, #30]
10054a22:	2105      	movs	r1, #5
10054a24:	4208      	tst	r0, r1
10054a26:	d00b      	beq.n	10054a40 <smp_add_pairing_record_to_bonding_database+0xb4>
10054a28:	4621      	mov	r1, r4
10054a2a:	2202      	movs	r2, #2
10054a2c:	3120      	adds	r1, #32
10054a2e:	a821      	add	r0, sp, #132	; 0x84
10054a30:	f7ee fbc5 	bl	100431be <Osal_MemCpy>
10054a34:	a910      	add	r1, sp, #64	; 0x40
10054a36:	7848      	ldrb	r0, [r1, #1]
10054a38:	2110      	movs	r1, #16
10054a3a:	4308      	orrs	r0, r1
10054a3c:	a910      	add	r1, sp, #64	; 0x40
10054a3e:	7048      	strb	r0, [r1, #1]
10054a40:	7f60      	ldrb	r0, [r4, #29]
10054a42:	0680      	lsls	r0, r0, #26
10054a44:	d50c      	bpl.n	10054a60 <smp_add_pairing_record_to_bonding_database+0xd4>
10054a46:	4621      	mov	r1, r4
10054a48:	a817      	add	r0, sp, #92	; 0x5c
10054a4a:	2210      	movs	r2, #16
10054a4c:	3154      	adds	r1, #84	; 0x54
10054a4e:	3002      	adds	r0, #2
10054a50:	f7ee fbb5 	bl	100431be <Osal_MemCpy>
10054a54:	a910      	add	r1, sp, #64	; 0x40
10054a56:	7848      	ldrb	r0, [r1, #1]
10054a58:	2120      	movs	r1, #32
10054a5a:	4308      	orrs	r0, r1
10054a5c:	a910      	add	r1, sp, #64	; 0x40
10054a5e:	7048      	strb	r0, [r1, #1]
10054a60:	7f60      	ldrb	r0, [r4, #29]
10054a62:	0640      	lsls	r0, r0, #25
10054a64:	d50c      	bpl.n	10054a80 <smp_add_pairing_record_to_bonding_database+0xf4>
10054a66:	4621      	mov	r1, r4
10054a68:	a81b      	add	r0, sp, #108	; 0x6c
10054a6a:	2210      	movs	r2, #16
10054a6c:	3164      	adds	r1, #100	; 0x64
10054a6e:	3002      	adds	r0, #2
10054a70:	f7ee fba5 	bl	100431be <Osal_MemCpy>
10054a74:	a910      	add	r1, sp, #64	; 0x40
10054a76:	7848      	ldrb	r0, [r1, #1]
10054a78:	2140      	movs	r1, #64	; 0x40
10054a7a:	4308      	orrs	r0, r1
10054a7c:	a910      	add	r1, sp, #64	; 0x40
10054a7e:	7048      	strb	r0, [r1, #1]
10054a80:	8920      	ldrh	r0, [r4, #8]
10054a82:	0481      	lsls	r1, r0, #18
10054a84:	d504      	bpl.n	10054a90 <smp_add_pairing_record_to_bonding_database+0x104>
10054a86:	a910      	add	r1, sp, #64	; 0x40
10054a88:	7848      	ldrb	r0, [r1, #1]
10054a8a:	2102      	movs	r1, #2
10054a8c:	e005      	b.n	10054a9a <smp_add_pairing_record_to_bonding_database+0x10e>
10054a8e:	e01d      	b.n	10054acc <smp_add_pairing_record_to_bonding_database+0x140>
10054a90:	0440      	lsls	r0, r0, #17
10054a92:	d505      	bpl.n	10054aa0 <smp_add_pairing_record_to_bonding_database+0x114>
10054a94:	a910      	add	r1, sp, #64	; 0x40
10054a96:	7848      	ldrb	r0, [r1, #1]
10054a98:	2104      	movs	r1, #4
10054a9a:	4308      	orrs	r0, r1
10054a9c:	a910      	add	r1, sp, #64	; 0x40
10054a9e:	7048      	strb	r0, [r1, #1]
10054aa0:	8920      	ldrh	r0, [r4, #8]
10054aa2:	0400      	lsls	r0, r0, #16
10054aa4:	d505      	bpl.n	10054ab2 <smp_add_pairing_record_to_bonding_database+0x126>
10054aa6:	a910      	add	r1, sp, #64	; 0x40
10054aa8:	7848      	ldrb	r0, [r1, #1]
10054aaa:	2108      	movs	r1, #8
10054aac:	4308      	orrs	r0, r1
10054aae:	a910      	add	r1, sp, #64	; 0x40
10054ab0:	7048      	strb	r0, [r1, #1]
10054ab2:	6920      	ldr	r0, [r4, #16]
10054ab4:	9022      	str	r0, [sp, #136]	; 0x88
10054ab6:	6960      	ldr	r0, [r4, #20]
10054ab8:	9023      	str	r0, [sp, #140]	; 0x8c
10054aba:	2240      	movs	r2, #64	; 0x40
10054abc:	a914      	add	r1, sp, #80	; 0x50
10054abe:	4668      	mov	r0, sp
10054ac0:	f7ef fd5a 	bl	10044578 <__aeabi_memcpy4>
10054ac4:	ad10      	add	r5, sp, #64	; 0x40
10054ac6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
10054ac8:	f7fd fec0 	bl	1005284c <SDB_Add_Record>
10054acc:	b025      	add	sp, #148	; 0x94
10054ace:	bd30      	pop	{r4, r5, pc}
10054ad0:	0000004e 	.word	0x0000004e

10054ad4 <smp_find_remote_device_index>:
10054ad4:	b530      	push	{r4, r5, lr}
10054ad6:	4602      	mov	r2, r0
10054ad8:	480d      	ldr	r0, [pc, #52]	; (10054b10 <smp_find_remote_device_index+0x3c>)
10054ada:	6800      	ldr	r0, [r0, #0]
10054adc:	30a0      	adds	r0, #160	; 0xa0
10054ade:	7b00      	ldrb	r0, [r0, #12]
10054ae0:	2a00      	cmp	r2, #0
10054ae2:	4601      	mov	r1, r0
10054ae4:	d012      	beq.n	10054b0c <smp_find_remote_device_index+0x38>
10054ae6:	4c0b      	ldr	r4, [pc, #44]	; (10054b14 <smp_find_remote_device_index+0x40>)
10054ae8:	0513      	lsls	r3, r2, #20
10054aea:	2000      	movs	r0, #0
10054aec:	0d1b      	lsrs	r3, r3, #20
10054aee:	6822      	ldr	r2, [r4, #0]
10054af0:	e00a      	b.n	10054b08 <smp_find_remote_device_index+0x34>
10054af2:	247c      	movs	r4, #124	; 0x7c
10054af4:	4344      	muls	r4, r0
10054af6:	6fd5      	ldr	r5, [r2, #124]	; 0x7c
10054af8:	3408      	adds	r4, #8
10054afa:	5b2c      	ldrh	r4, [r5, r4]
10054afc:	0524      	lsls	r4, r4, #20
10054afe:	0d24      	lsrs	r4, r4, #20
10054b00:	429c      	cmp	r4, r3
10054b02:	d003      	beq.n	10054b0c <smp_find_remote_device_index+0x38>
10054b04:	1c40      	adds	r0, r0, #1
10054b06:	b2c0      	uxtb	r0, r0
10054b08:	4281      	cmp	r1, r0
10054b0a:	d8f2      	bhi.n	10054af2 <smp_find_remote_device_index+0x1e>
10054b0c:	bd30      	pop	{r4, r5, pc}
10054b0e:	0000      	.short	0x0000
10054b10:	2000098c 	.word	0x2000098c
10054b14:	20000990 	.word	0x20000990

10054b18 <smp_flush_rx_queues>:
10054b18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10054b1a:	4e0c      	ldr	r6, [pc, #48]	; (10054b4c <smp_flush_rx_queues+0x34>)
10054b1c:	4605      	mov	r5, r0
10054b1e:	6830      	ldr	r0, [r6, #0]
10054b20:	f001 f99c 	bl	10055e5c <acl_list_first>
10054b24:	052f      	lsls	r7, r5, #20
10054b26:	4604      	mov	r4, r0
10054b28:	0d3f      	lsrs	r7, r7, #20
10054b2a:	e00c      	b.n	10054b46 <smp_flush_rx_queues+0x2e>
10054b2c:	88a0      	ldrh	r0, [r4, #4]
10054b2e:	6825      	ldr	r5, [r4, #0]
10054b30:	42b8      	cmp	r0, r7
10054b32:	d107      	bne.n	10054b44 <smp_flush_rx_queues+0x2c>
10054b34:	4621      	mov	r1, r4
10054b36:	6830      	ldr	r0, [r6, #0]
10054b38:	f001 f9dd 	bl	10055ef6 <acl_list_remove>
10054b3c:	2101      	movs	r1, #1
10054b3e:	4620      	mov	r0, r4
10054b40:	f7fb fe48 	bl	100507d4 <PM_Release_Acl_Pckt>
10054b44:	462c      	mov	r4, r5
10054b46:	2c00      	cmp	r4, #0
10054b48:	d1f0      	bne.n	10054b2c <smp_flush_rx_queues+0x14>
10054b4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054b4c:	20000990 	.word	0x20000990

10054b50 <smp_get_CSRK>:
10054b50:	b510      	push	{r4, lr}
10054b52:	460b      	mov	r3, r1
10054b54:	7f41      	ldrb	r1, [r0, #29]
10054b56:	0649      	lsls	r1, r1, #25
10054b58:	d507      	bpl.n	10054b6a <smp_get_CSRK+0x1a>
10054b5a:	4601      	mov	r1, r0
10054b5c:	2210      	movs	r2, #16
10054b5e:	3164      	adds	r1, #100	; 0x64
10054b60:	4618      	mov	r0, r3
10054b62:	f7ee fb2c 	bl	100431be <Osal_MemCpy>
10054b66:	2000      	movs	r0, #0
10054b68:	bd10      	pop	{r4, pc}
10054b6a:	2041      	movs	r0, #65	; 0x41
10054b6c:	bd10      	pop	{r4, pc}
	...

10054b70 <smp_get_local_identity_address>:
10054b70:	4602      	mov	r2, r0
10054b72:	b510      	push	{r4, lr}
10054b74:	480b      	ldr	r0, [pc, #44]	; (10054ba4 <smp_get_local_identity_address+0x34>)
10054b76:	2400      	movs	r4, #0
10054b78:	6800      	ldr	r0, [r0, #0]
10054b7a:	7d40      	ldrb	r0, [r0, #21]
10054b7c:	7010      	strb	r0, [r2, #0]
10054b7e:	2800      	cmp	r0, #0
10054b80:	d004      	beq.n	10054b8c <smp_get_local_identity_address+0x1c>
10054b82:	2801      	cmp	r0, #1
10054b84:	d00a      	beq.n	10054b9c <smp_get_local_identity_address+0x2c>
10054b86:	241f      	movs	r4, #31
10054b88:	4620      	mov	r0, r4
10054b8a:	bd10      	pop	{r4, pc}
10054b8c:	4608      	mov	r0, r1
10054b8e:	4906      	ldr	r1, [pc, #24]	; (10054ba8 <smp_get_local_identity_address+0x38>)
10054b90:	2206      	movs	r2, #6
10054b92:	6809      	ldr	r1, [r1, #0]
10054b94:	3178      	adds	r1, #120	; 0x78
10054b96:	f7ee fb12 	bl	100431be <Osal_MemCpy>
10054b9a:	e7f5      	b.n	10054b88 <smp_get_local_identity_address+0x18>
10054b9c:	4608      	mov	r0, r1
10054b9e:	f7fc f921 	bl	10050de4 <Get_StaticRandAddr>
10054ba2:	e7f1      	b.n	10054b88 <smp_get_local_identity_address+0x18>
10054ba4:	20000990 	.word	0x20000990
10054ba8:	2000098c 	.word	0x2000098c

10054bac <smp_is_any_pairing_ongoing>:
10054bac:	b530      	push	{r4, r5, lr}
10054bae:	4a10      	ldr	r2, [pc, #64]	; (10054bf0 <smp_is_any_pairing_ongoing+0x44>)
10054bb0:	2000      	movs	r0, #0
10054bb2:	6813      	ldr	r3, [r2, #0]
10054bb4:	4a0f      	ldr	r2, [pc, #60]	; (10054bf4 <smp_is_any_pairing_ongoing+0x48>)
10054bb6:	4601      	mov	r1, r0
10054bb8:	6812      	ldr	r2, [r2, #0]
10054bba:	32a0      	adds	r2, #160	; 0xa0
10054bbc:	7b14      	ldrb	r4, [r2, #12]
10054bbe:	e013      	b.n	10054be8 <smp_is_any_pairing_ongoing+0x3c>
10054bc0:	227c      	movs	r2, #124	; 0x7c
10054bc2:	6fdd      	ldr	r5, [r3, #124]	; 0x7c
10054bc4:	434a      	muls	r2, r1
10054bc6:	18aa      	adds	r2, r5, r2
10054bc8:	2574      	movs	r5, #116	; 0x74
10054bca:	5cad      	ldrb	r5, [r5, r2]
10054bcc:	07ed      	lsls	r5, r5, #31
10054bce:	7a95      	ldrb	r5, [r2, #10]
10054bd0:	d006      	beq.n	10054be0 <smp_is_any_pairing_ongoing+0x34>
10054bd2:	2db0      	cmp	r5, #176	; 0xb0
10054bd4:	d306      	bcc.n	10054be4 <smp_is_any_pairing_ongoing+0x38>
10054bd6:	b2ea      	uxtb	r2, r5
10054bd8:	2af0      	cmp	r2, #240	; 0xf0
10054bda:	d803      	bhi.n	10054be4 <smp_is_any_pairing_ongoing+0x38>
10054bdc:	2001      	movs	r0, #1
10054bde:	bd30      	pop	{r4, r5, pc}
10054be0:	2da0      	cmp	r5, #160	; 0xa0
10054be2:	d2f8      	bcs.n	10054bd6 <smp_is_any_pairing_ongoing+0x2a>
10054be4:	1c49      	adds	r1, r1, #1
10054be6:	b2c9      	uxtb	r1, r1
10054be8:	428c      	cmp	r4, r1
10054bea:	d8e9      	bhi.n	10054bc0 <smp_is_any_pairing_ongoing+0x14>
10054bec:	bd30      	pop	{r4, r5, pc}
10054bee:	0000      	.short	0x0000
10054bf0:	20000990 	.word	0x20000990
10054bf4:	2000098c 	.word	0x2000098c

10054bf8 <smp_keys_distribution_start>:
10054bf8:	7ac1      	ldrb	r1, [r0, #11]
10054bfa:	070a      	lsls	r2, r1, #28
10054bfc:	7f81      	ldrb	r1, [r0, #30]
10054bfe:	d403      	bmi.n	10054c08 <smp_keys_distribution_start+0x10>
10054c00:	07ca      	lsls	r2, r1, #31
10054c02:	d001      	beq.n	10054c08 <smp_keys_distribution_start+0x10>
10054c04:	21d1      	movs	r1, #209	; 0xd1
10054c06:	e002      	b.n	10054c0e <smp_keys_distribution_start+0x16>
10054c08:	078a      	lsls	r2, r1, #30
10054c0a:	d502      	bpl.n	10054c12 <smp_keys_distribution_start+0x1a>
10054c0c:	21d3      	movs	r1, #211	; 0xd3
10054c0e:	7281      	strb	r1, [r0, #10]
10054c10:	4770      	bx	lr
10054c12:	0749      	lsls	r1, r1, #29
10054c14:	d501      	bpl.n	10054c1a <smp_keys_distribution_start+0x22>
10054c16:	21d5      	movs	r1, #213	; 0xd5
10054c18:	e7f9      	b.n	10054c0e <smp_keys_distribution_start+0x16>
10054c1a:	2174      	movs	r1, #116	; 0x74
10054c1c:	5c09      	ldrb	r1, [r1, r0]
10054c1e:	07c9      	lsls	r1, r1, #31
10054c20:	d004      	beq.n	10054c2c <smp_keys_distribution_start+0x34>
10054c22:	7f41      	ldrb	r1, [r0, #29]
10054c24:	0749      	lsls	r1, r1, #29
10054c26:	d001      	beq.n	10054c2c <smp_keys_distribution_start+0x34>
10054c28:	21d0      	movs	r1, #208	; 0xd0
10054c2a:	e7f0      	b.n	10054c0e <smp_keys_distribution_start+0x16>
10054c2c:	21f0      	movs	r1, #240	; 0xf0
10054c2e:	e7ee      	b.n	10054c0e <smp_keys_distribution_start+0x16>

10054c30 <smp_keys_receiving>:
10054c30:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10054c32:	4605      	mov	r5, r0
10054c34:	6880      	ldr	r0, [r0, #8]
10054c36:	460c      	mov	r4, r1
10054c38:	7b01      	ldrb	r1, [r0, #12]
10054c3a:	2906      	cmp	r1, #6
10054c3c:	d01d      	beq.n	10054c7a <smp_keys_receiving+0x4a>
10054c3e:	2907      	cmp	r1, #7
10054c40:	d01e      	beq.n	10054c80 <smp_keys_receiving+0x50>
10054c42:	2908      	cmp	r1, #8
10054c44:	d032      	beq.n	10054cac <smp_keys_receiving+0x7c>
10054c46:	2909      	cmp	r1, #9
10054c48:	d03b      	beq.n	10054cc2 <smp_keys_receiving+0x92>
10054c4a:	290a      	cmp	r1, #10
10054c4c:	d114      	bne.n	10054c78 <smp_keys_receiving+0x48>
10054c4e:	7f60      	ldrb	r0, [r4, #29]
10054c50:	0740      	lsls	r0, r0, #29
10054c52:	d511      	bpl.n	10054c78 <smp_keys_receiving+0x48>
10054c54:	4623      	mov	r3, r4
10054c56:	3364      	adds	r3, #100	; 0x64
10054c58:	2210      	movs	r2, #16
10054c5a:	2105      	movs	r1, #5
10054c5c:	4628      	mov	r0, r5
10054c5e:	f7fb fd1d 	bl	1005069c <PM_Copy_Pckt_Data>
10054c62:	7f60      	ldrb	r0, [r4, #29]
10054c64:	2140      	movs	r1, #64	; 0x40
10054c66:	4308      	orrs	r0, r1
10054c68:	7760      	strb	r0, [r4, #29]
10054c6a:	2074      	movs	r0, #116	; 0x74
10054c6c:	5d00      	ldrb	r0, [r0, r4]
10054c6e:	07c0      	lsls	r0, r0, #31
10054c70:	4620      	mov	r0, r4
10054c72:	d045      	beq.n	10054d00 <smp_keys_receiving+0xd0>
10054c74:	f000 f880 	bl	10054d78 <smp_pairing_completed>
10054c78:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10054c7a:	4623      	mov	r3, r4
10054c7c:	333a      	adds	r3, #58	; 0x3a
10054c7e:	e01a      	b.n	10054cb6 <smp_keys_receiving+0x86>
10054c80:	4621      	mov	r1, r4
10054c82:	7b42      	ldrb	r2, [r0, #13]
10054c84:	3140      	adds	r1, #64	; 0x40
10054c86:	748a      	strb	r2, [r1, #18]
10054c88:	68a8      	ldr	r0, [r5, #8]
10054c8a:	4623      	mov	r3, r4
10054c8c:	7b80      	ldrb	r0, [r0, #14]
10054c8e:	74c8      	strb	r0, [r1, #19]
10054c90:	334a      	adds	r3, #74	; 0x4a
10054c92:	2208      	movs	r2, #8
10054c94:	2107      	movs	r1, #7
10054c96:	4628      	mov	r0, r5
10054c98:	f7fb fd00 	bl	1005069c <PM_Copy_Pckt_Data>
10054c9c:	7f60      	ldrb	r0, [r4, #29]
10054c9e:	2110      	movs	r1, #16
10054ca0:	4308      	orrs	r0, r1
10054ca2:	7760      	strb	r0, [r4, #29]
10054ca4:	0740      	lsls	r0, r0, #29
10054ca6:	0f80      	lsrs	r0, r0, #30
10054ca8:	d0df      	beq.n	10054c6a <smp_keys_receiving+0x3a>
10054caa:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10054cac:	7f60      	ldrb	r0, [r4, #29]
10054cae:	0780      	lsls	r0, r0, #30
10054cb0:	d5fb      	bpl.n	10054caa <smp_keys_receiving+0x7a>
10054cb2:	4623      	mov	r3, r4
10054cb4:	3354      	adds	r3, #84	; 0x54
10054cb6:	2210      	movs	r2, #16
10054cb8:	2105      	movs	r1, #5
10054cba:	4628      	mov	r0, r5
10054cbc:	f7fb fcee 	bl	1005069c <PM_Copy_Pckt_Data>
10054cc0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10054cc2:	7f60      	ldrb	r0, [r4, #29]
10054cc4:	0780      	lsls	r0, r0, #30
10054cc6:	d5fb      	bpl.n	10054cc0 <smp_keys_receiving+0x90>
10054cc8:	2000      	movs	r0, #0
10054cca:	9000      	str	r0, [sp, #0]
10054ccc:	2306      	movs	r3, #6
10054cce:	9001      	str	r0, [sp, #4]
10054cd0:	461a      	mov	r2, r3
10054cd2:	4669      	mov	r1, sp
10054cd4:	4628      	mov	r0, r5
10054cd6:	f7fb fd77 	bl	100507c8 <PM_Pckt_Cmp>
10054cda:	2800      	cmp	r0, #0
10054cdc:	d00c      	beq.n	10054cf8 <smp_keys_receiving+0xc8>
10054cde:	68a8      	ldr	r0, [r5, #8]
10054ce0:	2206      	movs	r2, #6
10054ce2:	7b40      	ldrb	r0, [r0, #13]
10054ce4:	7060      	strb	r0, [r4, #1]
10054ce6:	1ca3      	adds	r3, r4, #2
10054ce8:	4611      	mov	r1, r2
10054cea:	4628      	mov	r0, r5
10054cec:	f7fb fcd6 	bl	1005069c <PM_Copy_Pckt_Data>
10054cf0:	7f60      	ldrb	r0, [r4, #29]
10054cf2:	2120      	movs	r1, #32
10054cf4:	4308      	orrs	r0, r1
10054cf6:	7760      	strb	r0, [r4, #29]
10054cf8:	7f60      	ldrb	r0, [r4, #29]
10054cfa:	0740      	lsls	r0, r0, #29
10054cfc:	d5b5      	bpl.n	10054c6a <smp_keys_receiving+0x3a>
10054cfe:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10054d00:	f7ff ff7a 	bl	10054bf8 <smp_keys_distribution_start>
10054d04:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
	...

10054d08 <smp_oob_check_is_remote_data_present>:
10054d08:	b570      	push	{r4, r5, r6, lr}
10054d0a:	4604      	mov	r4, r0
10054d0c:	480c      	ldr	r0, [pc, #48]	; (10054d40 <smp_oob_check_is_remote_data_present+0x38>)
10054d0e:	7862      	ldrb	r2, [r4, #1]
10054d10:	6800      	ldr	r0, [r0, #0]
10054d12:	07d2      	lsls	r2, r2, #31
10054d14:	3080      	adds	r0, #128	; 0x80
10054d16:	6840      	ldr	r0, [r0, #4]
10054d18:	2500      	movs	r5, #0
10054d1a:	7841      	ldrb	r1, [r0, #1]
10054d1c:	0fd2      	lsrs	r2, r2, #31
10054d1e:	1c80      	adds	r0, r0, #2
10054d20:	428a      	cmp	r2, r1
10054d22:	d10a      	bne.n	10054d3a <smp_oob_check_is_remote_data_present+0x32>
10054d24:	2206      	movs	r2, #6
10054d26:	1ca1      	adds	r1, r4, #2
10054d28:	f7ee fa51 	bl	100431ce <Osal_MemCmp>
10054d2c:	2800      	cmp	r0, #0
10054d2e:	d104      	bne.n	10054d3a <smp_oob_check_is_remote_data_present+0x32>
10054d30:	7e20      	ldrb	r0, [r4, #24]
10054d32:	2101      	movs	r1, #1
10054d34:	4308      	orrs	r0, r1
10054d36:	7620      	strb	r0, [r4, #24]
10054d38:	460d      	mov	r5, r1
10054d3a:	4628      	mov	r0, r5
10054d3c:	bd70      	pop	{r4, r5, r6, pc}
10054d3e:	0000      	.short	0x0000
10054d40:	20000990 	.word	0x20000990

10054d44 <smp_pairing_2octets_packet_send>:
10054d44:	b570      	push	{r4, r5, r6, lr}
10054d46:	461c      	mov	r4, r3
10054d48:	4615      	mov	r5, r2
10054d4a:	2900      	cmp	r1, #0
10054d4c:	d108      	bne.n	10054d60 <smp_pairing_2octets_packet_send+0x1c>
10054d4e:	8900      	ldrh	r0, [r0, #8]
10054d50:	2220      	movs	r2, #32
10054d52:	0501      	lsls	r1, r0, #20
10054d54:	0d09      	lsrs	r1, r1, #20
10054d56:	2000      	movs	r0, #0
10054d58:	f7fb fce0 	bl	1005071c <PM_Get_Pckt>
10054d5c:	0001      	movs	r1, r0
10054d5e:	d009      	beq.n	10054d74 <smp_pairing_2octets_packet_send+0x30>
10054d60:	2002      	movs	r0, #2
10054d62:	80c8      	strh	r0, [r1, #6]
10054d64:	6888      	ldr	r0, [r1, #8]
10054d66:	7305      	strb	r5, [r0, #12]
10054d68:	6888      	ldr	r0, [r1, #8]
10054d6a:	7344      	strb	r4, [r0, #13]
10054d6c:	2006      	movs	r0, #6
10054d6e:	f7f8 facd 	bl	1004d30c <L2C_Send_Data>
10054d72:	bd70      	pop	{r4, r5, r6, pc}
10054d74:	2064      	movs	r0, #100	; 0x64
10054d76:	bd70      	pop	{r4, r5, r6, pc}

10054d78 <smp_pairing_completed>:
10054d78:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10054d7a:	4604      	mov	r4, r0
10054d7c:	8900      	ldrh	r0, [r0, #8]
10054d7e:	0505      	lsls	r5, r0, #20
10054d80:	0d2d      	lsrs	r5, r5, #20
10054d82:	f7ff fea7 	bl	10054ad4 <smp_find_remote_device_index>
10054d86:	4602      	mov	r2, r0
10054d88:	4b17      	ldr	r3, [pc, #92]	; (10054de8 <smp_pairing_completed+0x70>)
10054d8a:	2100      	movs	r1, #0
10054d8c:	2001      	movs	r0, #1
10054d8e:	f7ff fd19 	bl	100547c4 <SMP_reset_timer>
10054d92:	4620      	mov	r0, r4
10054d94:	f7ff fdfa 	bl	1005498c <smp_add_pairing_record_to_bonding_database>
10054d98:	7fe0      	ldrb	r0, [r4, #31]
10054d9a:	2600      	movs	r6, #0
10054d9c:	2803      	cmp	r0, #3
10054d9e:	d107      	bne.n	10054db0 <smp_pairing_completed+0x38>
10054da0:	4812      	ldr	r0, [pc, #72]	; (10054dec <smp_pairing_completed+0x74>)
10054da2:	2228      	movs	r2, #40	; 0x28
10054da4:	6800      	ldr	r0, [r0, #0]
10054da6:	2100      	movs	r1, #0
10054da8:	3080      	adds	r0, #128	; 0x80
10054daa:	6840      	ldr	r0, [r0, #4]
10054dac:	f7ee fa0b 	bl	100431c6 <Osal_MemSet>
10054db0:	4620      	mov	r0, r4
10054db2:	2204      	movs	r2, #4
10054db4:	2100      	movs	r1, #0
10054db6:	300c      	adds	r0, #12
10054db8:	f7ee fa05 	bl	100431c6 <Osal_MemSet>
10054dbc:	4668      	mov	r0, sp
10054dbe:	9400      	str	r4, [sp, #0]
10054dc0:	7106      	strb	r6, [r0, #4]
10054dc2:	f000 f8dd 	bl	10054f80 <smp_update_statistics_on_pairing_complete>
10054dc6:	20f1      	movs	r0, #241	; 0xf1
10054dc8:	72a0      	strb	r0, [r4, #10]
10054dca:	2300      	movs	r3, #0
10054dcc:	461a      	mov	r2, r3
10054dce:	4629      	mov	r1, r5
10054dd0:	2002      	movs	r0, #2
10054dd2:	f7ff fd93 	bl	100548fc <aci_gap_pairing_complete_event_push>
10054dd6:	8920      	ldrh	r0, [r4, #8]
10054dd8:	0401      	lsls	r1, r0, #16
10054dda:	d504      	bpl.n	10054de6 <smp_pairing_completed+0x6e>
10054ddc:	0501      	lsls	r1, r0, #20
10054dde:	0d09      	lsrs	r1, r1, #20
10054de0:	2002      	movs	r0, #2
10054de2:	f7ff fd61 	bl	100548a8 <aci_gap_authorization_req_event_push>
10054de6:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10054de8:	00007530 	.word	0x00007530
10054dec:	20000990 	.word	0x20000990

10054df0 <smp_pairing_failed_receive>:
10054df0:	b510      	push	{r4, lr}
10054df2:	460a      	mov	r2, r1
10054df4:	6881      	ldr	r1, [r0, #8]
10054df6:	4610      	mov	r0, r2
10054df8:	7b49      	ldrb	r1, [r1, #13]
10054dfa:	f000 f817 	bl	10054e2c <smp_pairing_process_abort>
10054dfe:	bd10      	pop	{r4, pc}

10054e00 <smp_pairing_failed_send>:
10054e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10054e02:	461d      	mov	r5, r3
10054e04:	4614      	mov	r4, r2
10054e06:	460e      	mov	r6, r1
10054e08:	460b      	mov	r3, r1
10054e0a:	4607      	mov	r7, r0
10054e0c:	2205      	movs	r2, #5
10054e0e:	4621      	mov	r1, r4
10054e10:	f7ff ff98 	bl	10054d44 <smp_pairing_2octets_packet_send>
10054e14:	4604      	mov	r4, r0
10054e16:	2864      	cmp	r0, #100	; 0x64
10054e18:	d101      	bne.n	10054e1e <smp_pairing_failed_send+0x1e>
10054e1a:	2d01      	cmp	r5, #1
10054e1c:	d103      	bne.n	10054e26 <smp_pairing_failed_send+0x26>
10054e1e:	4631      	mov	r1, r6
10054e20:	4638      	mov	r0, r7
10054e22:	f000 f803 	bl	10054e2c <smp_pairing_process_abort>
10054e26:	4620      	mov	r0, r4
10054e28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

10054e2c <smp_pairing_process_abort>:
10054e2c:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10054e2e:	4604      	mov	r4, r0
10054e30:	460d      	mov	r5, r1
10054e32:	8900      	ldrh	r0, [r0, #8]
10054e34:	f7ff fe4e 	bl	10054ad4 <smp_find_remote_device_index>
10054e38:	4602      	mov	r2, r0
10054e3a:	4b14      	ldr	r3, [pc, #80]	; (10054e8c <smp_pairing_process_abort+0x60>)
10054e3c:	2100      	movs	r1, #0
10054e3e:	2001      	movs	r0, #1
10054e40:	f7ff fcc0 	bl	100547c4 <SMP_reset_timer>
10054e44:	8920      	ldrh	r0, [r4, #8]
10054e46:	0500      	lsls	r0, r0, #20
10054e48:	0d00      	lsrs	r0, r0, #20
10054e4a:	f7ff fe65 	bl	10054b18 <smp_flush_rx_queues>
10054e4e:	2002      	movs	r0, #2
10054e50:	4669      	mov	r1, sp
10054e52:	9400      	str	r4, [sp, #0]
10054e54:	7108      	strb	r0, [r1, #4]
10054e56:	4668      	mov	r0, sp
10054e58:	f000 f892 	bl	10054f80 <smp_update_statistics_on_pairing_complete>
10054e5c:	4620      	mov	r0, r4
10054e5e:	2204      	movs	r2, #4
10054e60:	2100      	movs	r1, #0
10054e62:	300c      	adds	r0, #12
10054e64:	f7ee f9af 	bl	100431c6 <Osal_MemSet>
10054e68:	7ee0      	ldrb	r0, [r4, #27]
10054e6a:	212f      	movs	r1, #47	; 0x2f
10054e6c:	4008      	ands	r0, r1
10054e6e:	76e0      	strb	r0, [r4, #27]
10054e70:	4620      	mov	r0, r4
10054e72:	f000 f80d 	bl	10054e90 <smp_repeated_attacks_protection>
10054e76:	20fb      	movs	r0, #251	; 0xfb
10054e78:	72a0      	strb	r0, [r4, #10]
10054e7a:	8920      	ldrh	r0, [r4, #8]
10054e7c:	2202      	movs	r2, #2
10054e7e:	0501      	lsls	r1, r0, #20
10054e80:	0d09      	lsrs	r1, r1, #20
10054e82:	462b      	mov	r3, r5
10054e84:	4610      	mov	r0, r2
10054e86:	f7ff fd39 	bl	100548fc <aci_gap_pairing_complete_event_push>
10054e8a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10054e8c:	00007530 	.word	0x00007530

10054e90 <smp_repeated_attacks_protection>:
10054e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10054e92:	2400      	movs	r4, #0
10054e94:	4606      	mov	r6, r0
10054e96:	2701      	movs	r7, #1
10054e98:	4d34      	ldr	r5, [pc, #208]	; (10054f6c <smp_repeated_attacks_protection+0xdc>)
10054e9a:	e00c      	b.n	10054eb6 <smp_repeated_attacks_protection+0x26>
10054e9c:	3080      	adds	r0, #128	; 0x80
10054e9e:	6801      	ldr	r1, [r0, #0]
10054ea0:	00e0      	lsls	r0, r4, #3
10054ea2:	1c80      	adds	r0, r0, #2
10054ea4:	1808      	adds	r0, r1, r0
10054ea6:	2206      	movs	r2, #6
10054ea8:	1cb1      	adds	r1, r6, #2
10054eaa:	f7ee f990 	bl	100431ce <Osal_MemCmp>
10054eae:	2800      	cmp	r0, #0
10054eb0:	d021      	beq.n	10054ef6 <smp_repeated_attacks_protection+0x66>
10054eb2:	1c64      	adds	r4, r4, #1
10054eb4:	b2e4      	uxtb	r4, r4
10054eb6:	6828      	ldr	r0, [r5, #0]
10054eb8:	7e41      	ldrb	r1, [r0, #25]
10054eba:	42a1      	cmp	r1, r4
10054ebc:	d8ee      	bhi.n	10054e9c <smp_repeated_attacks_protection+0xc>
10054ebe:	7e41      	ldrb	r1, [r0, #25]
10054ec0:	2903      	cmp	r1, #3
10054ec2:	d03f      	beq.n	10054f44 <smp_repeated_attacks_protection+0xb4>
10054ec4:	1c49      	adds	r1, r1, #1
10054ec6:	7641      	strb	r1, [r0, #25]
10054ec8:	6828      	ldr	r0, [r5, #0]
10054eca:	00e7      	lsls	r7, r4, #3
10054ecc:	3080      	adds	r0, #128	; 0x80
10054ece:	6801      	ldr	r1, [r0, #0]
10054ed0:	1cb8      	adds	r0, r7, #2
10054ed2:	1808      	adds	r0, r1, r0
10054ed4:	2206      	movs	r2, #6
10054ed6:	1cb1      	adds	r1, r6, #2
10054ed8:	f7ee f971 	bl	100431be <Osal_MemCpy>
10054edc:	6829      	ldr	r1, [r5, #0]
10054ede:	2080      	movs	r0, #128	; 0x80
10054ee0:	3180      	adds	r1, #128	; 0x80
10054ee2:	6809      	ldr	r1, [r1, #0]
10054ee4:	1c64      	adds	r4, r4, #1
10054ee6:	4b22      	ldr	r3, [pc, #136]	; (10054f70 <smp_repeated_attacks_protection+0xe0>)
10054ee8:	55c8      	strb	r0, [r1, r7]
10054eea:	b2e2      	uxtb	r2, r4
10054eec:	2101      	movs	r1, #1
10054eee:	2000      	movs	r0, #0
10054ef0:	f7ff fc68 	bl	100547c4 <SMP_reset_timer>
10054ef4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054ef6:	6828      	ldr	r0, [r5, #0]
10054ef8:	00e1      	lsls	r1, r4, #3
10054efa:	3080      	adds	r0, #128	; 0x80
10054efc:	6802      	ldr	r2, [r0, #0]
10054efe:	2380      	movs	r3, #128	; 0x80
10054f00:	5c50      	ldrb	r0, [r2, r1]
10054f02:	4318      	orrs	r0, r3
10054f04:	5450      	strb	r0, [r2, r1]
10054f06:	682a      	ldr	r2, [r5, #0]
10054f08:	3280      	adds	r2, #128	; 0x80
10054f0a:	6812      	ldr	r2, [r2, #0]
10054f0c:	0783      	lsls	r3, r0, #30
10054f0e:	d505      	bpl.n	10054f1c <smp_repeated_attacks_protection+0x8c>
10054f10:	4e18      	ldr	r6, [pc, #96]	; (10054f74 <smp_repeated_attacks_protection+0xe4>)
10054f12:	07c3      	lsls	r3, r0, #31
10054f14:	d112      	bne.n	10054f3c <smp_repeated_attacks_protection+0xac>
10054f16:	4338      	orrs	r0, r7
10054f18:	5450      	strb	r0, [r2, r1]
10054f1a:	e00f      	b.n	10054f3c <smp_repeated_attacks_protection+0xac>
10054f1c:	07c3      	lsls	r3, r0, #31
10054f1e:	d00a      	beq.n	10054f36 <smp_repeated_attacks_protection+0xa6>
10054f20:	2302      	movs	r3, #2
10054f22:	4318      	orrs	r0, r3
10054f24:	5450      	strb	r0, [r2, r1]
10054f26:	682a      	ldr	r2, [r5, #0]
10054f28:	0840      	lsrs	r0, r0, #1
10054f2a:	3280      	adds	r2, #128	; 0x80
10054f2c:	6812      	ldr	r2, [r2, #0]
10054f2e:	0040      	lsls	r0, r0, #1
10054f30:	5450      	strb	r0, [r2, r1]
10054f32:	4e11      	ldr	r6, [pc, #68]	; (10054f78 <smp_repeated_attacks_protection+0xe8>)
10054f34:	e002      	b.n	10054f3c <smp_repeated_attacks_protection+0xac>
10054f36:	4338      	orrs	r0, r7
10054f38:	4e10      	ldr	r6, [pc, #64]	; (10054f7c <smp_repeated_attacks_protection+0xec>)
10054f3a:	5450      	strb	r0, [r2, r1]
10054f3c:	1c64      	adds	r4, r4, #1
10054f3e:	b2e2      	uxtb	r2, r4
10054f40:	4633      	mov	r3, r6
10054f42:	e7d3      	b.n	10054eec <smp_repeated_attacks_protection+0x5c>
10054f44:	2400      	movs	r4, #0
10054f46:	3080      	adds	r0, #128	; 0x80
10054f48:	6800      	ldr	r0, [r0, #0]
10054f4a:	00e1      	lsls	r1, r4, #3
10054f4c:	5c41      	ldrb	r1, [r0, r1]
10054f4e:	0649      	lsls	r1, r1, #25
10054f50:	d4ba      	bmi.n	10054ec8 <smp_repeated_attacks_protection+0x38>
10054f52:	1c64      	adds	r4, r4, #1
10054f54:	b2e4      	uxtb	r4, r4
10054f56:	2c03      	cmp	r4, #3
10054f58:	d3f7      	bcc.n	10054f4a <smp_repeated_attacks_protection+0xba>
10054f5a:	2101      	movs	r1, #1
10054f5c:	2400      	movs	r4, #0
10054f5e:	463a      	mov	r2, r7
10054f60:	4633      	mov	r3, r6
10054f62:	4608      	mov	r0, r1
10054f64:	f7ff fc2e 	bl	100547c4 <SMP_reset_timer>
10054f68:	e7ae      	b.n	10054ec8 <smp_repeated_attacks_protection+0x38>
10054f6a:	0000      	.short	0x0000
10054f6c:	20000990 	.word	0x20000990
10054f70:	00001388 	.word	0x00001388
10054f74:	00020f58 	.word	0x00020f58
10054f78:	0000afc8 	.word	0x0000afc8
10054f7c:	00003a98 	.word	0x00003a98

10054f80 <smp_update_statistics_on_pairing_complete>:
10054f80:	b510      	push	{r4, lr}
10054f82:	6801      	ldr	r1, [r0, #0]
10054f84:	3160      	adds	r1, #96	; 0x60
10054f86:	7d09      	ldrb	r1, [r1, #20]
10054f88:	07ca      	lsls	r2, r1, #31
10054f8a:	6801      	ldr	r1, [r0, #0]
10054f8c:	7a89      	ldrb	r1, [r1, #10]
10054f8e:	d00d      	beq.n	10054fac <smp_update_statistics_on_pairing_complete+0x2c>
10054f90:	29b0      	cmp	r1, #176	; 0xb0
10054f92:	d308      	bcc.n	10054fa6 <smp_update_statistics_on_pairing_complete+0x26>
10054f94:	29f0      	cmp	r1, #240	; 0xf0
10054f96:	d806      	bhi.n	10054fa6 <smp_update_statistics_on_pairing_complete+0x26>
10054f98:	4906      	ldr	r1, [pc, #24]	; (10054fb4 <smp_update_statistics_on_pairing_complete+0x34>)
10054f9a:	680a      	ldr	r2, [r1, #0]
10054f9c:	7e91      	ldrb	r1, [r2, #26]
10054f9e:	078b      	lsls	r3, r1, #30
10054fa0:	d001      	beq.n	10054fa6 <smp_update_statistics_on_pairing_complete+0x26>
10054fa2:	1e49      	subs	r1, r1, #1
10054fa4:	7691      	strb	r1, [r2, #26]
10054fa6:	f000 f82b 	bl	10055000 <smp_sc_update_statistics_on_pairing_complete_ucfg>
10054faa:	bd10      	pop	{r4, pc}
10054fac:	29a0      	cmp	r1, #160	; 0xa0
10054fae:	d2f1      	bcs.n	10054f94 <smp_update_statistics_on_pairing_complete+0x14>
10054fb0:	e7f9      	b.n	10054fa6 <smp_update_statistics_on_pairing_complete+0x26>
10054fb2:	0000      	.short	0x0000
10054fb4:	20000990 	.word	0x20000990

10054fb8 <smp_sc_check_for_ecc_pk_generation_request_ucfg>:
10054fb8:	4770      	bx	lr

10054fba <smp_sc_continue_on_exclusive_sc_pairing_ucfg>:
10054fba:	201f      	movs	r0, #31
10054fbc:	4770      	bx	lr

10054fbe <smp_sc_init_ucfg>:
10054fbe:	4770      	bx	lr

10054fc0 <smp_sc_is_another_sc_pairing_ongoing>:
10054fc0:	b570      	push	{r4, r5, r6, lr}
10054fc2:	4a0d      	ldr	r2, [pc, #52]	; (10054ff8 <smp_sc_is_another_sc_pairing_ongoing+0x38>)
10054fc4:	4605      	mov	r5, r0
10054fc6:	6813      	ldr	r3, [r2, #0]
10054fc8:	4a0c      	ldr	r2, [pc, #48]	; (10054ffc <smp_sc_is_another_sc_pairing_ongoing+0x3c>)
10054fca:	2000      	movs	r0, #0
10054fcc:	6812      	ldr	r2, [r2, #0]
10054fce:	4601      	mov	r1, r0
10054fd0:	32a0      	adds	r2, #160	; 0xa0
10054fd2:	7b14      	ldrb	r4, [r2, #12]
10054fd4:	e00d      	b.n	10054ff2 <smp_sc_is_another_sc_pairing_ongoing+0x32>
10054fd6:	227c      	movs	r2, #124	; 0x7c
10054fd8:	6fde      	ldr	r6, [r3, #124]	; 0x7c
10054fda:	434a      	muls	r2, r1
10054fdc:	18b2      	adds	r2, r6, r2
10054fde:	7ad6      	ldrb	r6, [r2, #11]
10054fe0:	07f6      	lsls	r6, r6, #31
10054fe2:	d004      	beq.n	10054fee <smp_sc_is_another_sc_pairing_ongoing+0x2e>
10054fe4:	8912      	ldrh	r2, [r2, #8]
10054fe6:	42aa      	cmp	r2, r5
10054fe8:	d001      	beq.n	10054fee <smp_sc_is_another_sc_pairing_ongoing+0x2e>
10054fea:	2001      	movs	r0, #1
10054fec:	bd70      	pop	{r4, r5, r6, pc}
10054fee:	1c49      	adds	r1, r1, #1
10054ff0:	b2c9      	uxtb	r1, r1
10054ff2:	428c      	cmp	r4, r1
10054ff4:	d8ef      	bhi.n	10054fd6 <smp_sc_is_another_sc_pairing_ongoing+0x16>
10054ff6:	bd70      	pop	{r4, r5, r6, pc}
10054ff8:	20000990 	.word	0x20000990
10054ffc:	2000098c 	.word	0x2000098c

10055000 <smp_sc_update_statistics_on_pairing_complete_ucfg>:
10055000:	4770      	bx	lr

10055002 <SMP_sc_force_debug_key_usage>:
10055002:	b570      	push	{r4, r5, r6, lr}
10055004:	4605      	mov	r5, r0
10055006:	2400      	movs	r4, #0
10055008:	4620      	mov	r0, r4
1005500a:	f7ff ffd9 	bl	10054fc0 <smp_sc_is_another_sc_pairing_ongoing>
1005500e:	2800      	cmp	r0, #0
10055010:	d001      	beq.n	10055016 <SMP_sc_force_debug_key_usage+0x14>
10055012:	2446      	movs	r4, #70	; 0x46
10055014:	e004      	b.n	10055020 <SMP_sc_force_debug_key_usage+0x1e>
10055016:	2d01      	cmp	r5, #1
10055018:	d102      	bne.n	10055020 <SMP_sc_force_debug_key_usage+0x1e>
1005501a:	2001      	movs	r0, #1
1005501c:	f7ff ffcf 	bl	10054fbe <smp_sc_init_ucfg>
10055020:	4620      	mov	r0, r4
10055022:	bd70      	pop	{r4, r5, r6, pc}

10055024 <secure_connections_csr_ucfg>:
10055024:	2000      	movs	r0, #0
10055026:	4770      	bx	lr

10055028 <smp_sc_hci_le_generate_dhkey_complete_evt_hndl_ucfg>:
10055028:	4770      	bx	lr

1005502a <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl_ucfg>:
1005502a:	4770      	bx	lr

1005502c <Delay_With_NOP_Cycles>:
1005502c:	2100      	movs	r1, #0
1005502e:	e001      	b.n	10055034 <Delay_With_NOP_Cycles+0x8>
10055030:	bf00      	nop
10055032:	1c49      	adds	r1, r1, #1
10055034:	4281      	cmp	r1, r0
10055036:	d3fb      	bcc.n	10055030 <Delay_With_NOP_Cycles+0x4>
10055038:	4770      	bx	lr

1005503a <is_Buffer_All_Set_To>:
1005503a:	b530      	push	{r4, r5, lr}
1005503c:	4604      	mov	r4, r0
1005503e:	2001      	movs	r0, #1
10055040:	2300      	movs	r3, #0
10055042:	e006      	b.n	10055052 <is_Buffer_All_Set_To+0x18>
10055044:	5cd5      	ldrb	r5, [r2, r3]
10055046:	42a5      	cmp	r5, r4
10055048:	d001      	beq.n	1005504e <is_Buffer_All_Set_To+0x14>
1005504a:	2000      	movs	r0, #0
1005504c:	bd30      	pop	{r4, r5, pc}
1005504e:	1c5b      	adds	r3, r3, #1
10055050:	b2db      	uxtb	r3, r3
10055052:	428b      	cmp	r3, r1
10055054:	d3f6      	bcc.n	10055044 <is_Buffer_All_Set_To+0xa>
10055056:	bd30      	pop	{r4, r5, pc}

10055058 <Events_Process_Q>:
10055058:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005505a:	b672      	cpsid	i
1005505c:	4d3f      	ldr	r5, [pc, #252]	; (1005515c <Events_Process_Q+0x104>)
1005505e:	2308      	movs	r3, #8
10055060:	6828      	ldr	r0, [r5, #0]
10055062:	4601      	mov	r1, r0
10055064:	3040      	adds	r0, #64	; 0x40
10055066:	79c2      	ldrb	r2, [r0, #7]
10055068:	431a      	orrs	r2, r3
1005506a:	71c2      	strb	r2, [r0, #7]
1005506c:	b662      	cpsie	i
1005506e:	2000      	movs	r0, #0
10055070:	2701      	movs	r7, #1
10055072:	466c      	mov	r4, sp
10055074:	02ff      	lsls	r7, r7, #11
10055076:	0082      	lsls	r2, r0, #2
10055078:	1852      	adds	r2, r2, r1
1005507a:	19d2      	adds	r2, r2, r7
1005507c:	6952      	ldr	r2, [r2, #20]
1005507e:	8852      	ldrh	r2, [r2, #2]
10055080:	0043      	lsls	r3, r0, #1
10055082:	1c40      	adds	r0, r0, #1
10055084:	b2c0      	uxtb	r0, r0
10055086:	52e2      	strh	r2, [r4, r3]
10055088:	2803      	cmp	r0, #3
1005508a:	d3f4      	bcc.n	10055076 <Events_Process_Q+0x1e>
1005508c:	b672      	cpsid	i
1005508e:	19c8      	adds	r0, r1, r7
10055090:	2100      	movs	r1, #0
10055092:	6806      	ldr	r6, [r0, #0]
10055094:	6001      	str	r1, [r0, #0]
10055096:	b662      	cpsie	i
10055098:	07f0      	lsls	r0, r6, #31
1005509a:	d002      	beq.n	100550a2 <Events_Process_Q+0x4a>
1005509c:	2000      	movs	r0, #0
1005509e:	f000 fd49 	bl	10055b34 <hci_hardware_error_event>
100550a2:	07b0      	lsls	r0, r6, #30
100550a4:	d502      	bpl.n	100550ac <Events_Process_Q+0x54>
100550a6:	2001      	movs	r0, #1
100550a8:	f000 fd44 	bl	10055b34 <hci_hardware_error_event>
100550ac:	0770      	lsls	r0, r6, #29
100550ae:	d502      	bpl.n	100550b6 <Events_Process_Q+0x5e>
100550b0:	2002      	movs	r0, #2
100550b2:	f000 fd3f 	bl	10055b34 <hci_hardware_error_event>
100550b6:	0730      	lsls	r0, r6, #28
100550b8:	d502      	bpl.n	100550c0 <Events_Process_Q+0x68>
100550ba:	2003      	movs	r0, #3
100550bc:	f000 fd3a 	bl	10055b34 <hci_hardware_error_event>
100550c0:	2600      	movs	r6, #0
100550c2:	e023      	b.n	1005510c <Events_Process_Q+0xb4>
100550c4:	280d      	cmp	r0, #13
100550c6:	d21a      	bcs.n	100550fe <Events_Process_Q+0xa6>
100550c8:	1d21      	adds	r1, r4, #4
100550ca:	4a25      	ldr	r2, [pc, #148]	; (10055160 <Events_Process_Q+0x108>)
100550cc:	0080      	lsls	r0, r0, #2
100550ce:	5812      	ldr	r2, [r2, r0]
100550d0:	4620      	mov	r0, r4
100550d2:	4790      	blx	r2
100550d4:	2800      	cmp	r0, #0
100550d6:	d012      	beq.n	100550fe <Events_Process_Q+0xa6>
100550d8:	b672      	cpsid	i
100550da:	6828      	ldr	r0, [r5, #0]
100550dc:	22f7      	movs	r2, #247	; 0xf7
100550de:	3040      	adds	r0, #64	; 0x40
100550e0:	79c1      	ldrb	r1, [r0, #7]
100550e2:	4011      	ands	r1, r2
100550e4:	71c1      	strb	r1, [r0, #7]
100550e6:	b662      	cpsie	i
100550e8:	e030      	b.n	1005514c <Events_Process_Q+0xf4>
100550ea:	283a      	cmp	r0, #58	; 0x3a
100550ec:	d207      	bcs.n	100550fe <Events_Process_Q+0xa6>
100550ee:	491c      	ldr	r1, [pc, #112]	; (10055160 <Events_Process_Q+0x108>)
100550f0:	1d23      	adds	r3, r4, #4
100550f2:	0080      	lsls	r0, r0, #2
100550f4:	39e8      	subs	r1, #232	; 0xe8
100550f6:	580a      	ldr	r2, [r1, r0]
100550f8:	4619      	mov	r1, r3
100550fa:	4620      	mov	r0, r4
100550fc:	4790      	blx	r2
100550fe:	9802      	ldr	r0, [sp, #8]
10055100:	6829      	ldr	r1, [r5, #0]
10055102:	1840      	adds	r0, r0, r1
10055104:	19c0      	adds	r0, r0, r7
10055106:	6940      	ldr	r0, [r0, #20]
10055108:	8821      	ldrh	r1, [r4, #0]
1005510a:	8001      	strh	r1, [r0, #0]
1005510c:	0071      	lsls	r1, r6, #1
1005510e:	4668      	mov	r0, sp
10055110:	5a41      	ldrh	r1, [r0, r1]
10055112:	00b0      	lsls	r0, r6, #2
10055114:	9002      	str	r0, [sp, #8]
10055116:	682a      	ldr	r2, [r5, #0]
10055118:	1880      	adds	r0, r0, r2
1005511a:	19c0      	adds	r0, r0, r7
1005511c:	6940      	ldr	r0, [r0, #20]
1005511e:	8802      	ldrh	r2, [r0, #0]
10055120:	0892      	lsrs	r2, r2, #2
10055122:	0092      	lsls	r2, r2, #2
10055124:	1814      	adds	r4, r2, r0
10055126:	8802      	ldrh	r2, [r0, #0]
10055128:	3408      	adds	r4, #8
1005512a:	428a      	cmp	r2, r1
1005512c:	d00e      	beq.n	1005514c <Events_Process_Q+0xf4>
1005512e:	78a2      	ldrb	r2, [r4, #2]
10055130:	0791      	lsls	r1, r2, #30
10055132:	d00b      	beq.n	1005514c <Events_Process_Q+0xf4>
10055134:	0791      	lsls	r1, r2, #30
10055136:	0f89      	lsrs	r1, r1, #30
10055138:	2901      	cmp	r1, #1
1005513a:	d101      	bne.n	10055140 <Events_Process_Q+0xe8>
1005513c:	4604      	mov	r4, r0
1005513e:	3408      	adds	r4, #8
10055140:	78a0      	ldrb	r0, [r4, #2]
10055142:	0880      	lsrs	r0, r0, #2
10055144:	06c0      	lsls	r0, r0, #27
10055146:	78e0      	ldrb	r0, [r4, #3]
10055148:	d5cf      	bpl.n	100550ea <Events_Process_Q+0x92>
1005514a:	e7bb      	b.n	100550c4 <Events_Process_Q+0x6c>
1005514c:	1c76      	adds	r6, r6, #1
1005514e:	b2f6      	uxtb	r6, r6
10055150:	2e03      	cmp	r6, #3
10055152:	d3db      	bcc.n	1005510c <Events_Process_Q+0xb4>
10055154:	f7f7 fbbe 	bl	1004c8d4 <hal_radio_activity_state_callback_check>
10055158:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005515a:	0000      	.short	0x0000
1005515c:	2000098c 	.word	0x2000098c
10055160:	10059058 	.word	0x10059058

10055164 <Events_Process_init>:
10055164:	b570      	push	{r4, r5, r6, lr}
10055166:	f7f7 fbcf 	bl	1004c908 <hal_radio_activity_state_init>
1005516a:	4c10      	ldr	r4, [pc, #64]	; (100551ac <Events_Process_init+0x48>)
1005516c:	2501      	movs	r5, #1
1005516e:	6820      	ldr	r0, [r4, #0]
10055170:	02ed      	lsls	r5, r5, #11
10055172:	1940      	adds	r0, r0, r5
10055174:	6880      	ldr	r0, [r0, #8]
10055176:	2140      	movs	r1, #64	; 0x40
10055178:	f000 fcd5 	bl	10055b26 <fifoCtrl_init>
1005517c:	6821      	ldr	r1, [r4, #0]
1005517e:	1949      	adds	r1, r1, r5
10055180:	6148      	str	r0, [r1, #20]
10055182:	68c8      	ldr	r0, [r1, #12]
10055184:	2140      	movs	r1, #64	; 0x40
10055186:	f000 fcce 	bl	10055b26 <fifoCtrl_init>
1005518a:	6821      	ldr	r1, [r4, #0]
1005518c:	1949      	adds	r1, r1, r5
1005518e:	6188      	str	r0, [r1, #24]
10055190:	6908      	ldr	r0, [r1, #16]
10055192:	21ff      	movs	r1, #255	; 0xff
10055194:	3181      	adds	r1, #129	; 0x81
10055196:	f000 fcc6 	bl	10055b26 <fifoCtrl_init>
1005519a:	6821      	ldr	r1, [r4, #0]
1005519c:	2208      	movs	r2, #8
1005519e:	194b      	adds	r3, r1, r5
100551a0:	61d8      	str	r0, [r3, #28]
100551a2:	2100      	movs	r1, #0
100551a4:	4618      	mov	r0, r3
100551a6:	f7ee f80e 	bl	100431c6 <Osal_MemSet>
100551aa:	bd70      	pop	{r4, r5, r6, pc}
100551ac:	2000098c 	.word	0x2000098c

100551b0 <aci_att_exec_write_resp_event>:
100551b0:	4770      	bx	lr

100551b2 <aci_att_find_by_type_value_resp_event>:
100551b2:	4770      	bx	lr

100551b4 <aci_att_find_info_resp_event>:
100551b4:	4770      	bx	lr

100551b6 <aci_att_prepare_write_resp_event>:
100551b6:	4770      	bx	lr

100551b8 <aci_att_read_blob_resp_event>:
100551b8:	4770      	bx	lr

100551ba <aci_att_read_by_group_type_resp_event>:
100551ba:	4770      	bx	lr

100551bc <aci_att_read_by_type_resp_event>:
100551bc:	4770      	bx	lr

100551be <aci_att_read_multiple_resp_event>:
100551be:	4770      	bx	lr

100551c0 <aci_att_read_resp_event>:
100551c0:	4770      	bx	lr

100551c2 <aci_att_write_resp_event>:
100551c2:	4770      	bx	lr

100551c4 <aci_event_fifo_push>:
100551c4:	460a      	mov	r2, r1
100551c6:	0640      	lsls	r0, r0, #25
100551c8:	d508      	bpl.n	100551dc <aci_event_fifo_push+0x18>
100551ca:	78d0      	ldrb	r0, [r2, #3]
100551cc:	283a      	cmp	r0, #58	; 0x3a
100551ce:	d20a      	bcs.n	100551e6 <aci_event_fifo_push+0x22>
100551d0:	1d11      	adds	r1, r2, #4
100551d2:	4b05      	ldr	r3, [pc, #20]	; (100551e8 <aci_event_fifo_push+0x24>)
100551d4:	0080      	lsls	r0, r0, #2
100551d6:	581b      	ldr	r3, [r3, r0]
100551d8:	4610      	mov	r0, r2
100551da:	4718      	bx	r3
100551dc:	7890      	ldrb	r0, [r2, #2]
100551de:	0880      	lsrs	r0, r0, #2
100551e0:	0080      	lsls	r0, r0, #2
100551e2:	1c80      	adds	r0, r0, #2
100551e4:	7088      	strb	r0, [r1, #2]
100551e6:	4770      	bx	lr
100551e8:	10058f70 	.word	0x10058f70

100551ec <aci_event_fifo_push_header>:
100551ec:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100551ee:	4604      	mov	r4, r0
100551f0:	2600      	movs	r6, #0
100551f2:	4f2c      	ldr	r7, [pc, #176]	; (100552a4 <aci_event_fifo_push_header+0xb8>)
100551f4:	b083      	sub	sp, #12
100551f6:	469c      	mov	ip, r3
100551f8:	460d      	mov	r5, r1
100551fa:	0608      	lsls	r0, r1, #24
100551fc:	d516      	bpl.n	1005522c <aci_event_fifo_push_header+0x40>
100551fe:	b672      	cpsid	i
10055200:	ab01      	add	r3, sp, #4
10055202:	466a      	mov	r2, sp
10055204:	4661      	mov	r1, ip
10055206:	4620      	mov	r0, r4
10055208:	f000 fc57 	bl	10055aba <fifoBuf_getFreeHeader>
1005520c:	2800      	cmp	r0, #0
1005520e:	d00b      	beq.n	10055228 <aci_event_fifo_push_header+0x3c>
10055210:	4668      	mov	r0, sp
10055212:	8881      	ldrh	r1, [r0, #4]
10055214:	9800      	ldr	r0, [sp, #0]
10055216:	7882      	ldrb	r2, [r0, #2]
10055218:	0892      	lsrs	r2, r2, #2
1005521a:	0092      	lsls	r2, r2, #2
1005521c:	7082      	strb	r2, [r0, #2]
1005521e:	8001      	strh	r1, [r0, #0]
10055220:	8061      	strh	r1, [r4, #2]
10055222:	2601      	movs	r6, #1
10055224:	b662      	cpsie	i
10055226:	e015      	b.n	10055254 <aci_event_fifo_push_header+0x68>
10055228:	b662      	cpsie	i
1005522a:	e021      	b.n	10055270 <aci_event_fifo_push_header+0x84>
1005522c:	ab01      	add	r3, sp, #4
1005522e:	466a      	mov	r2, sp
10055230:	4661      	mov	r1, ip
10055232:	4620      	mov	r0, r4
10055234:	f000 fc41 	bl	10055aba <fifoBuf_getFreeHeader>
10055238:	2800      	cmp	r0, #0
1005523a:	d019      	beq.n	10055270 <aci_event_fifo_push_header+0x84>
1005523c:	0668      	lsls	r0, r5, #25
1005523e:	d409      	bmi.n	10055254 <aci_event_fifo_push_header+0x68>
10055240:	4668      	mov	r0, sp
10055242:	8881      	ldrh	r1, [r0, #4]
10055244:	9800      	ldr	r0, [sp, #0]
10055246:	7882      	ldrb	r2, [r0, #2]
10055248:	0892      	lsrs	r2, r2, #2
1005524a:	0092      	lsls	r2, r2, #2
1005524c:	7082      	strb	r2, [r0, #2]
1005524e:	8001      	strh	r1, [r0, #0]
10055250:	8061      	strh	r1, [r4, #2]
10055252:	2601      	movs	r6, #1
10055254:	9800      	ldr	r0, [sp, #0]
10055256:	00aa      	lsls	r2, r5, #2
10055258:	7881      	ldrb	r1, [r0, #2]
1005525a:	2340      	movs	r3, #64	; 0x40
1005525c:	0789      	lsls	r1, r1, #30
1005525e:	0f89      	lsrs	r1, r1, #30
10055260:	401a      	ands	r2, r3
10055262:	4311      	orrs	r1, r2
10055264:	7081      	strb	r1, [r0, #2]
10055266:	9905      	ldr	r1, [sp, #20]
10055268:	70c1      	strb	r1, [r0, #3]
1005526a:	2e00      	cmp	r6, #0
1005526c:	d10e      	bne.n	1005528c <aci_event_fifo_push_header+0xa0>
1005526e:	e015      	b.n	1005529c <aci_event_fifo_push_header+0xb0>
10055270:	2000      	movs	r0, #0
10055272:	9000      	str	r0, [sp, #0]
10055274:	b672      	cpsid	i
10055276:	06a8      	lsls	r0, r5, #26
10055278:	d40f      	bmi.n	1005529a <aci_event_fifo_push_header+0xae>
1005527a:	2001      	movs	r0, #1
1005527c:	6839      	ldr	r1, [r7, #0]
1005527e:	02c0      	lsls	r0, r0, #11
10055280:	1808      	adds	r0, r1, r0
10055282:	6801      	ldr	r1, [r0, #0]
10055284:	2208      	movs	r2, #8
10055286:	4311      	orrs	r1, r2
10055288:	6001      	str	r1, [r0, #0]
1005528a:	b662      	cpsie	i
1005528c:	b672      	cpsid	i
1005528e:	6838      	ldr	r0, [r7, #0]
10055290:	22f7      	movs	r2, #247	; 0xf7
10055292:	3040      	adds	r0, #64	; 0x40
10055294:	79c1      	ldrb	r1, [r0, #7]
10055296:	4011      	ands	r1, r2
10055298:	71c1      	strb	r1, [r0, #7]
1005529a:	b662      	cpsie	i
1005529c:	9800      	ldr	r0, [sp, #0]
1005529e:	b007      	add	sp, #28
100552a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100552a2:	0000      	.short	0x0000
100552a4:	2000098c 	.word	0x2000098c

100552a8 <aci_gap_addr_not_resolved_event>:
100552a8:	4770      	bx	lr

100552aa <aci_gap_authorization_req_event>:
100552aa:	4770      	bx	lr

100552ac <aci_gap_bond_lost_event>:
100552ac:	4770      	bx	lr

100552ae <aci_gap_device_found_event>:
100552ae:	4770      	bx	lr

100552b0 <aci_gap_keypress_notification_event>:
100552b0:	4770      	bx	lr

100552b2 <aci_gap_limited_discoverable_event>:
100552b2:	4770      	bx	lr

100552b4 <aci_gap_numeric_comparison_value_event>:
100552b4:	4770      	bx	lr

100552b6 <aci_gap_pairing_complete_event>:
100552b6:	4770      	bx	lr

100552b8 <aci_gap_pass_key_req_event>:
100552b8:	4770      	bx	lr

100552ba <aci_gap_proc_complete_event>:
100552ba:	4770      	bx	lr

100552bc <aci_gap_slave_security_initiated_event>:
100552bc:	4770      	bx	lr

100552be <aci_gatt_disc_read_char_by_uuid_resp_event>:
100552be:	4770      	bx	lr

100552c0 <aci_gatt_error_resp_event>:
100552c0:	4770      	bx	lr

100552c2 <aci_gatt_indication_event>:
100552c2:	4770      	bx	lr

100552c4 <aci_gatt_notification_event>:
100552c4:	4770      	bx	lr

100552c6 <aci_gatt_prepare_write_permit_req_event>:
100552c6:	4770      	bx	lr

100552c8 <aci_gatt_proc_complete_event>:
100552c8:	4770      	bx	lr

100552ca <aci_gatt_proc_timeout_event>:
100552ca:	4770      	bx	lr

100552cc <aci_gatt_read_multi_permit_req_event>:
100552cc:	4770      	bx	lr

100552ce <aci_gatt_server_confirmation_event>:
100552ce:	4770      	bx	lr

100552d0 <aci_gatt_tx_pool_available_event>:
100552d0:	4770      	bx	lr

100552d2 <aci_gatt_write_permit_req_event>:
100552d2:	4770      	bx	lr

100552d4 <aci_hal_fw_error_event>:
100552d4:	4770      	bx	lr

100552d6 <aci_hal_scan_req_report_event>:
100552d6:	4770      	bx	lr

100552d8 <aci_l2cap_command_reject_event>:
100552d8:	4770      	bx	lr

100552da <aci_l2cap_connection_update_req_event>:
100552da:	4770      	bx	lr

100552dc <aci_l2cap_connection_update_resp_event>:
100552dc:	4770      	bx	lr

100552de <aci_l2cap_proc_timeout_event>:
100552de:	4770      	bx	lr

100552e0 <cb_aci_att_exchange_mtu_resp_event>:
100552e0:	b510      	push	{r4, lr}
100552e2:	4807      	ldr	r0, [pc, #28]	; (10055300 <cb_aci_att_exchange_mtu_resp_event+0x20>)
100552e4:	2237      	movs	r2, #55	; 0x37
100552e6:	6800      	ldr	r0, [r0, #0]
100552e8:	0152      	lsls	r2, r2, #5
100552ea:	1880      	adds	r0, r0, r2
100552ec:	7b00      	ldrb	r0, [r0, #12]
100552ee:	0740      	lsls	r0, r0, #29
100552f0:	d504      	bpl.n	100552fc <cb_aci_att_exchange_mtu_resp_event+0x1c>
100552f2:	4608      	mov	r0, r1
100552f4:	8849      	ldrh	r1, [r1, #2]
100552f6:	8800      	ldrh	r0, [r0, #0]
100552f8:	f7f2 ff46 	bl	10048188 <aci_att_exchange_mtu_resp_event>
100552fc:	bd10      	pop	{r4, pc}
100552fe:	0000      	.short	0x0000
10055300:	2000098c 	.word	0x2000098c

10055304 <cb_aci_att_exec_write_resp_event>:
10055304:	b510      	push	{r4, lr}
10055306:	4806      	ldr	r0, [pc, #24]	; (10055320 <cb_aci_att_exec_write_resp_event+0x1c>)
10055308:	2237      	movs	r2, #55	; 0x37
1005530a:	6800      	ldr	r0, [r0, #0]
1005530c:	0152      	lsls	r2, r2, #5
1005530e:	1880      	adds	r0, r0, r2
10055310:	7b40      	ldrb	r0, [r0, #13]
10055312:	06c0      	lsls	r0, r0, #27
10055314:	d502      	bpl.n	1005531c <cb_aci_att_exec_write_resp_event+0x18>
10055316:	8808      	ldrh	r0, [r1, #0]
10055318:	f7ff ff4a 	bl	100551b0 <aci_att_exec_write_resp_event>
1005531c:	bd10      	pop	{r4, pc}
1005531e:	0000      	.short	0x0000
10055320:	2000098c 	.word	0x2000098c

10055324 <cb_aci_att_find_by_type_value_resp_event>:
10055324:	b510      	push	{r4, lr}
10055326:	4807      	ldr	r0, [pc, #28]	; (10055344 <cb_aci_att_find_by_type_value_resp_event+0x20>)
10055328:	2237      	movs	r2, #55	; 0x37
1005532a:	6800      	ldr	r0, [r0, #0]
1005532c:	0152      	lsls	r2, r2, #5
1005532e:	1880      	adds	r0, r0, r2
10055330:	7b00      	ldrb	r0, [r0, #12]
10055332:	06c0      	lsls	r0, r0, #27
10055334:	d505      	bpl.n	10055342 <cb_aci_att_find_by_type_value_resp_event+0x1e>
10055336:	460a      	mov	r2, r1
10055338:	8810      	ldrh	r0, [r2, #0]
1005533a:	7889      	ldrb	r1, [r1, #2]
1005533c:	1d12      	adds	r2, r2, #4
1005533e:	f7ff ff38 	bl	100551b2 <aci_att_find_by_type_value_resp_event>
10055342:	bd10      	pop	{r4, pc}
10055344:	2000098c 	.word	0x2000098c

10055348 <cb_aci_att_find_info_resp_event>:
10055348:	b510      	push	{r4, lr}
1005534a:	4808      	ldr	r0, [pc, #32]	; (1005536c <cb_aci_att_find_info_resp_event+0x24>)
1005534c:	2237      	movs	r2, #55	; 0x37
1005534e:	6800      	ldr	r0, [r0, #0]
10055350:	0152      	lsls	r2, r2, #5
10055352:	1880      	adds	r0, r0, r2
10055354:	7b00      	ldrb	r0, [r0, #12]
10055356:	0700      	lsls	r0, r0, #28
10055358:	d506      	bpl.n	10055368 <cb_aci_att_find_info_resp_event+0x20>
1005535a:	460b      	mov	r3, r1
1005535c:	78ca      	ldrb	r2, [r1, #3]
1005535e:	8818      	ldrh	r0, [r3, #0]
10055360:	7889      	ldrb	r1, [r1, #2]
10055362:	1d1b      	adds	r3, r3, #4
10055364:	f7ff ff26 	bl	100551b4 <aci_att_find_info_resp_event>
10055368:	bd10      	pop	{r4, pc}
1005536a:	0000      	.short	0x0000
1005536c:	2000098c 	.word	0x2000098c

10055370 <cb_aci_att_prepare_write_resp_event>:
10055370:	b508      	push	{r3, lr}
10055372:	4809      	ldr	r0, [pc, #36]	; (10055398 <cb_aci_att_prepare_write_resp_event+0x28>)
10055374:	2237      	movs	r2, #55	; 0x37
10055376:	6800      	ldr	r0, [r0, #0]
10055378:	0152      	lsls	r2, r2, #5
1005537a:	1880      	adds	r0, r0, r2
1005537c:	7b40      	ldrb	r0, [r0, #13]
1005537e:	0700      	lsls	r0, r0, #28
10055380:	d508      	bpl.n	10055394 <cb_aci_att_prepare_write_resp_event+0x24>
10055382:	4608      	mov	r0, r1
10055384:	1dc9      	adds	r1, r1, #7
10055386:	9100      	str	r1, [sp, #0]
10055388:	7983      	ldrb	r3, [r0, #6]
1005538a:	8882      	ldrh	r2, [r0, #4]
1005538c:	8841      	ldrh	r1, [r0, #2]
1005538e:	8800      	ldrh	r0, [r0, #0]
10055390:	f7ff ff11 	bl	100551b6 <aci_att_prepare_write_resp_event>
10055394:	bd08      	pop	{r3, pc}
10055396:	0000      	.short	0x0000
10055398:	2000098c 	.word	0x2000098c

1005539c <cb_aci_att_read_blob_resp_event>:
1005539c:	b510      	push	{r4, lr}
1005539e:	4807      	ldr	r0, [pc, #28]	; (100553bc <cb_aci_att_read_blob_resp_event+0x20>)
100553a0:	2237      	movs	r2, #55	; 0x37
100553a2:	6800      	ldr	r0, [r0, #0]
100553a4:	0152      	lsls	r2, r2, #5
100553a6:	1880      	adds	r0, r0, r2
100553a8:	7b00      	ldrb	r0, [r0, #12]
100553aa:	0600      	lsls	r0, r0, #24
100553ac:	d505      	bpl.n	100553ba <cb_aci_att_read_blob_resp_event+0x1e>
100553ae:	460a      	mov	r2, r1
100553b0:	8810      	ldrh	r0, [r2, #0]
100553b2:	7889      	ldrb	r1, [r1, #2]
100553b4:	1cd2      	adds	r2, r2, #3
100553b6:	f7ff feff 	bl	100551b8 <aci_att_read_blob_resp_event>
100553ba:	bd10      	pop	{r4, pc}
100553bc:	2000098c 	.word	0x2000098c

100553c0 <cb_aci_att_read_by_group_type_resp_event>:
100553c0:	b510      	push	{r4, lr}
100553c2:	4808      	ldr	r0, [pc, #32]	; (100553e4 <cb_aci_att_read_by_group_type_resp_event+0x24>)
100553c4:	2237      	movs	r2, #55	; 0x37
100553c6:	6800      	ldr	r0, [r0, #0]
100553c8:	0152      	lsls	r2, r2, #5
100553ca:	1880      	adds	r0, r0, r2
100553cc:	7b40      	ldrb	r0, [r0, #13]
100553ce:	0780      	lsls	r0, r0, #30
100553d0:	d506      	bpl.n	100553e0 <cb_aci_att_read_by_group_type_resp_event+0x20>
100553d2:	460b      	mov	r3, r1
100553d4:	78ca      	ldrb	r2, [r1, #3]
100553d6:	8818      	ldrh	r0, [r3, #0]
100553d8:	7889      	ldrb	r1, [r1, #2]
100553da:	1d1b      	adds	r3, r3, #4
100553dc:	f7ff feed 	bl	100551ba <aci_att_read_by_group_type_resp_event>
100553e0:	bd10      	pop	{r4, pc}
100553e2:	0000      	.short	0x0000
100553e4:	2000098c 	.word	0x2000098c

100553e8 <cb_aci_att_read_by_type_resp_event>:
100553e8:	b510      	push	{r4, lr}
100553ea:	4808      	ldr	r0, [pc, #32]	; (1005540c <cb_aci_att_read_by_type_resp_event+0x24>)
100553ec:	2237      	movs	r2, #55	; 0x37
100553ee:	6800      	ldr	r0, [r0, #0]
100553f0:	0152      	lsls	r2, r2, #5
100553f2:	1880      	adds	r0, r0, r2
100553f4:	7b00      	ldrb	r0, [r0, #12]
100553f6:	0680      	lsls	r0, r0, #26
100553f8:	d506      	bpl.n	10055408 <cb_aci_att_read_by_type_resp_event+0x20>
100553fa:	460b      	mov	r3, r1
100553fc:	78ca      	ldrb	r2, [r1, #3]
100553fe:	8818      	ldrh	r0, [r3, #0]
10055400:	7889      	ldrb	r1, [r1, #2]
10055402:	1d1b      	adds	r3, r3, #4
10055404:	f7ff feda 	bl	100551bc <aci_att_read_by_type_resp_event>
10055408:	bd10      	pop	{r4, pc}
1005540a:	0000      	.short	0x0000
1005540c:	2000098c 	.word	0x2000098c

10055410 <cb_aci_att_read_multiple_resp_event>:
10055410:	b510      	push	{r4, lr}
10055412:	4807      	ldr	r0, [pc, #28]	; (10055430 <cb_aci_att_read_multiple_resp_event+0x20>)
10055414:	2237      	movs	r2, #55	; 0x37
10055416:	6800      	ldr	r0, [r0, #0]
10055418:	0152      	lsls	r2, r2, #5
1005541a:	1880      	adds	r0, r0, r2
1005541c:	7b40      	ldrb	r0, [r0, #13]
1005541e:	07c0      	lsls	r0, r0, #31
10055420:	d005      	beq.n	1005542e <cb_aci_att_read_multiple_resp_event+0x1e>
10055422:	460a      	mov	r2, r1
10055424:	8810      	ldrh	r0, [r2, #0]
10055426:	7889      	ldrb	r1, [r1, #2]
10055428:	1cd2      	adds	r2, r2, #3
1005542a:	f7ff fec8 	bl	100551be <aci_att_read_multiple_resp_event>
1005542e:	bd10      	pop	{r4, pc}
10055430:	2000098c 	.word	0x2000098c

10055434 <cb_aci_att_read_resp_event>:
10055434:	b510      	push	{r4, lr}
10055436:	4807      	ldr	r0, [pc, #28]	; (10055454 <cb_aci_att_read_resp_event+0x20>)
10055438:	2237      	movs	r2, #55	; 0x37
1005543a:	6800      	ldr	r0, [r0, #0]
1005543c:	0152      	lsls	r2, r2, #5
1005543e:	1880      	adds	r0, r0, r2
10055440:	7b00      	ldrb	r0, [r0, #12]
10055442:	0640      	lsls	r0, r0, #25
10055444:	d505      	bpl.n	10055452 <cb_aci_att_read_resp_event+0x1e>
10055446:	460a      	mov	r2, r1
10055448:	8810      	ldrh	r0, [r2, #0]
1005544a:	7889      	ldrb	r1, [r1, #2]
1005544c:	1cd2      	adds	r2, r2, #3
1005544e:	f7ff feb7 	bl	100551c0 <aci_att_read_resp_event>
10055452:	bd10      	pop	{r4, pc}
10055454:	2000098c 	.word	0x2000098c

10055458 <cb_aci_att_write_resp_event>:
10055458:	b510      	push	{r4, lr}
1005545a:	4807      	ldr	r0, [pc, #28]	; (10055478 <cb_aci_att_write_resp_event+0x20>)
1005545c:	2237      	movs	r2, #55	; 0x37
1005545e:	6800      	ldr	r0, [r0, #0]
10055460:	0152      	lsls	r2, r2, #5
10055462:	1880      	adds	r0, r0, r2
10055464:	7b40      	ldrb	r0, [r0, #13]
10055466:	0740      	lsls	r0, r0, #29
10055468:	d505      	bpl.n	10055476 <cb_aci_att_write_resp_event+0x1e>
1005546a:	460a      	mov	r2, r1
1005546c:	8810      	ldrh	r0, [r2, #0]
1005546e:	7889      	ldrb	r1, [r1, #2]
10055470:	1cd2      	adds	r2, r2, #3
10055472:	f7ff fea6 	bl	100551c2 <aci_att_write_resp_event>
10055476:	bd10      	pop	{r4, pc}
10055478:	2000098c 	.word	0x2000098c

1005547c <cb_aci_gap_addr_not_resolved_event>:
1005547c:	b510      	push	{r4, lr}
1005547e:	4806      	ldr	r0, [pc, #24]	; (10055498 <cb_aci_gap_addr_not_resolved_event+0x1c>)
10055480:	2237      	movs	r2, #55	; 0x37
10055482:	6800      	ldr	r0, [r0, #0]
10055484:	0152      	lsls	r2, r2, #5
10055486:	1880      	adds	r0, r0, r2
10055488:	7ac0      	ldrb	r0, [r0, #11]
1005548a:	0700      	lsls	r0, r0, #28
1005548c:	d502      	bpl.n	10055494 <cb_aci_gap_addr_not_resolved_event+0x18>
1005548e:	8808      	ldrh	r0, [r1, #0]
10055490:	f7ff ff0a 	bl	100552a8 <aci_gap_addr_not_resolved_event>
10055494:	bd10      	pop	{r4, pc}
10055496:	0000      	.short	0x0000
10055498:	2000098c 	.word	0x2000098c

1005549c <cb_aci_gap_authorization_req_event>:
1005549c:	b510      	push	{r4, lr}
1005549e:	4806      	ldr	r0, [pc, #24]	; (100554b8 <cb_aci_gap_authorization_req_event+0x1c>)
100554a0:	2237      	movs	r2, #55	; 0x37
100554a2:	6800      	ldr	r0, [r0, #0]
100554a4:	0152      	lsls	r2, r2, #5
100554a6:	1880      	adds	r0, r0, r2
100554a8:	7a80      	ldrb	r0, [r0, #10]
100554aa:	0700      	lsls	r0, r0, #28
100554ac:	d502      	bpl.n	100554b4 <cb_aci_gap_authorization_req_event+0x18>
100554ae:	8808      	ldrh	r0, [r1, #0]
100554b0:	f7ff fefb 	bl	100552aa <aci_gap_authorization_req_event>
100554b4:	bd10      	pop	{r4, pc}
100554b6:	0000      	.short	0x0000
100554b8:	2000098c 	.word	0x2000098c

100554bc <cb_aci_gap_bond_lost_event>:
100554bc:	b510      	push	{r4, lr}
100554be:	4805      	ldr	r0, [pc, #20]	; (100554d4 <cb_aci_gap_bond_lost_event+0x18>)
100554c0:	2137      	movs	r1, #55	; 0x37
100554c2:	6800      	ldr	r0, [r0, #0]
100554c4:	0149      	lsls	r1, r1, #5
100554c6:	1840      	adds	r0, r0, r1
100554c8:	7a80      	ldrb	r0, [r0, #10]
100554ca:	0680      	lsls	r0, r0, #26
100554cc:	d501      	bpl.n	100554d2 <cb_aci_gap_bond_lost_event+0x16>
100554ce:	f7ff feed 	bl	100552ac <aci_gap_bond_lost_event>
100554d2:	bd10      	pop	{r4, pc}
100554d4:	2000098c 	.word	0x2000098c

100554d8 <cb_aci_gap_device_found_event>:
100554d8:	b510      	push	{r4, lr}
100554da:	4806      	ldr	r0, [pc, #24]	; (100554f4 <cb_aci_gap_device_found_event+0x1c>)
100554dc:	2237      	movs	r2, #55	; 0x37
100554de:	6800      	ldr	r0, [r0, #0]
100554e0:	0152      	lsls	r2, r2, #5
100554e2:	1880      	adds	r0, r0, r2
100554e4:	7a80      	ldrb	r0, [r0, #10]
100554e6:	0640      	lsls	r0, r0, #25
100554e8:	d503      	bpl.n	100554f2 <cb_aci_gap_device_found_event+0x1a>
100554ea:	7808      	ldrb	r0, [r1, #0]
100554ec:	1c49      	adds	r1, r1, #1
100554ee:	f7ff fede 	bl	100552ae <aci_gap_device_found_event>
100554f2:	bd10      	pop	{r4, pc}
100554f4:	2000098c 	.word	0x2000098c

100554f8 <cb_aci_gap_keypress_notification_event>:
100554f8:	b510      	push	{r4, lr}
100554fa:	4807      	ldr	r0, [pc, #28]	; (10055518 <cb_aci_gap_keypress_notification_event+0x20>)
100554fc:	2237      	movs	r2, #55	; 0x37
100554fe:	6800      	ldr	r0, [r0, #0]
10055500:	0152      	lsls	r2, r2, #5
10055502:	1880      	adds	r0, r0, r2
10055504:	7ac0      	ldrb	r0, [r0, #11]
10055506:	0640      	lsls	r0, r0, #25
10055508:	d504      	bpl.n	10055514 <cb_aci_gap_keypress_notification_event+0x1c>
1005550a:	4608      	mov	r0, r1
1005550c:	7889      	ldrb	r1, [r1, #2]
1005550e:	8800      	ldrh	r0, [r0, #0]
10055510:	f7ff fece 	bl	100552b0 <aci_gap_keypress_notification_event>
10055514:	bd10      	pop	{r4, pc}
10055516:	0000      	.short	0x0000
10055518:	2000098c 	.word	0x2000098c

1005551c <cb_aci_gap_limited_discoverable_event>:
1005551c:	b510      	push	{r4, lr}
1005551e:	4805      	ldr	r0, [pc, #20]	; (10055534 <cb_aci_gap_limited_discoverable_event+0x18>)
10055520:	2137      	movs	r1, #55	; 0x37
10055522:	6800      	ldr	r0, [r0, #0]
10055524:	0149      	lsls	r1, r1, #5
10055526:	1840      	adds	r0, r0, r1
10055528:	7a80      	ldrb	r0, [r0, #10]
1005552a:	07c0      	lsls	r0, r0, #31
1005552c:	d001      	beq.n	10055532 <cb_aci_gap_limited_discoverable_event+0x16>
1005552e:	f7ff fec0 	bl	100552b2 <aci_gap_limited_discoverable_event>
10055532:	bd10      	pop	{r4, pc}
10055534:	2000098c 	.word	0x2000098c

10055538 <cb_aci_gap_numeric_comparison_value_event>:
10055538:	b510      	push	{r4, lr}
1005553a:	4807      	ldr	r0, [pc, #28]	; (10055558 <cb_aci_gap_numeric_comparison_value_event+0x20>)
1005553c:	2237      	movs	r2, #55	; 0x37
1005553e:	6800      	ldr	r0, [r0, #0]
10055540:	0152      	lsls	r2, r2, #5
10055542:	1880      	adds	r0, r0, r2
10055544:	7ac0      	ldrb	r0, [r0, #11]
10055546:	0680      	lsls	r0, r0, #26
10055548:	d504      	bpl.n	10055554 <cb_aci_gap_numeric_comparison_value_event+0x1c>
1005554a:	4608      	mov	r0, r1
1005554c:	6849      	ldr	r1, [r1, #4]
1005554e:	8800      	ldrh	r0, [r0, #0]
10055550:	f7ff feb0 	bl	100552b4 <aci_gap_numeric_comparison_value_event>
10055554:	bd10      	pop	{r4, pc}
10055556:	0000      	.short	0x0000
10055558:	2000098c 	.word	0x2000098c

1005555c <cb_aci_gap_pairing_complete_event>:
1005555c:	b510      	push	{r4, lr}
1005555e:	4807      	ldr	r0, [pc, #28]	; (1005557c <cb_aci_gap_pairing_complete_event+0x20>)
10055560:	2237      	movs	r2, #55	; 0x37
10055562:	6800      	ldr	r0, [r0, #0]
10055564:	0152      	lsls	r2, r2, #5
10055566:	1880      	adds	r0, r0, r2
10055568:	7a80      	ldrb	r0, [r0, #10]
1005556a:	0780      	lsls	r0, r0, #30
1005556c:	d505      	bpl.n	1005557a <cb_aci_gap_pairing_complete_event+0x1e>
1005556e:	4608      	mov	r0, r1
10055570:	78ca      	ldrb	r2, [r1, #3]
10055572:	7889      	ldrb	r1, [r1, #2]
10055574:	8800      	ldrh	r0, [r0, #0]
10055576:	f7ff fe9e 	bl	100552b6 <aci_gap_pairing_complete_event>
1005557a:	bd10      	pop	{r4, pc}
1005557c:	2000098c 	.word	0x2000098c

10055580 <cb_aci_gap_pass_key_req_event>:
10055580:	b510      	push	{r4, lr}
10055582:	4806      	ldr	r0, [pc, #24]	; (1005559c <cb_aci_gap_pass_key_req_event+0x1c>)
10055584:	2237      	movs	r2, #55	; 0x37
10055586:	6800      	ldr	r0, [r0, #0]
10055588:	0152      	lsls	r2, r2, #5
1005558a:	1880      	adds	r0, r0, r2
1005558c:	7a80      	ldrb	r0, [r0, #10]
1005558e:	0740      	lsls	r0, r0, #29
10055590:	d502      	bpl.n	10055598 <cb_aci_gap_pass_key_req_event+0x18>
10055592:	8808      	ldrh	r0, [r1, #0]
10055594:	f7ff fe90 	bl	100552b8 <aci_gap_pass_key_req_event>
10055598:	bd10      	pop	{r4, pc}
1005559a:	0000      	.short	0x0000
1005559c:	2000098c 	.word	0x2000098c

100555a0 <cb_aci_gap_proc_complete_event>:
100555a0:	b510      	push	{r4, lr}
100555a2:	4808      	ldr	r0, [pc, #32]	; (100555c4 <cb_aci_gap_proc_complete_event+0x24>)
100555a4:	2237      	movs	r2, #55	; 0x37
100555a6:	6800      	ldr	r0, [r0, #0]
100555a8:	0152      	lsls	r2, r2, #5
100555aa:	1880      	adds	r0, r0, r2
100555ac:	7a80      	ldrb	r0, [r0, #10]
100555ae:	0600      	lsls	r0, r0, #24
100555b0:	d506      	bpl.n	100555c0 <cb_aci_gap_proc_complete_event+0x20>
100555b2:	460b      	mov	r3, r1
100555b4:	788a      	ldrb	r2, [r1, #2]
100555b6:	7818      	ldrb	r0, [r3, #0]
100555b8:	7849      	ldrb	r1, [r1, #1]
100555ba:	1cdb      	adds	r3, r3, #3
100555bc:	f7ff fe7d 	bl	100552ba <aci_gap_proc_complete_event>
100555c0:	bd10      	pop	{r4, pc}
100555c2:	0000      	.short	0x0000
100555c4:	2000098c 	.word	0x2000098c

100555c8 <cb_aci_gap_slave_security_initiated_event>:
100555c8:	b510      	push	{r4, lr}
100555ca:	4805      	ldr	r0, [pc, #20]	; (100555e0 <cb_aci_gap_slave_security_initiated_event+0x18>)
100555cc:	2137      	movs	r1, #55	; 0x37
100555ce:	6800      	ldr	r0, [r0, #0]
100555d0:	0149      	lsls	r1, r1, #5
100555d2:	1840      	adds	r0, r0, r1
100555d4:	7a80      	ldrb	r0, [r0, #10]
100555d6:	06c0      	lsls	r0, r0, #27
100555d8:	d501      	bpl.n	100555de <cb_aci_gap_slave_security_initiated_event+0x16>
100555da:	f7ff fe6f 	bl	100552bc <aci_gap_slave_security_initiated_event>
100555de:	bd10      	pop	{r4, pc}
100555e0:	2000098c 	.word	0x2000098c

100555e4 <cb_aci_gatt_attribute_modified_event>:
100555e4:	b508      	push	{r3, lr}
100555e6:	4809      	ldr	r0, [pc, #36]	; (1005560c <cb_aci_gatt_attribute_modified_event+0x28>)
100555e8:	2237      	movs	r2, #55	; 0x37
100555ea:	6800      	ldr	r0, [r0, #0]
100555ec:	0152      	lsls	r2, r2, #5
100555ee:	1880      	adds	r0, r0, r2
100555f0:	7b00      	ldrb	r0, [r0, #12]
100555f2:	07c0      	lsls	r0, r0, #31
100555f4:	d008      	beq.n	10055608 <cb_aci_gatt_attribute_modified_event+0x24>
100555f6:	4608      	mov	r0, r1
100555f8:	3108      	adds	r1, #8
100555fa:	9100      	str	r1, [sp, #0]
100555fc:	88c3      	ldrh	r3, [r0, #6]
100555fe:	8882      	ldrh	r2, [r0, #4]
10055600:	8841      	ldrh	r1, [r0, #2]
10055602:	8800      	ldrh	r0, [r0, #0]
10055604:	f7f2 fdb8 	bl	10048178 <aci_gatt_attribute_modified_event>
10055608:	bd08      	pop	{r3, pc}
1005560a:	0000      	.short	0x0000
1005560c:	2000098c 	.word	0x2000098c

10055610 <cb_aci_gatt_disc_read_char_by_uuid_resp_event>:
10055610:	b510      	push	{r4, lr}
10055612:	4808      	ldr	r0, [pc, #32]	; (10055634 <cb_aci_gatt_disc_read_char_by_uuid_resp_event+0x24>)
10055614:	2237      	movs	r2, #55	; 0x37
10055616:	6800      	ldr	r0, [r0, #0]
10055618:	0152      	lsls	r2, r2, #5
1005561a:	1880      	adds	r0, r0, r2
1005561c:	7b80      	ldrb	r0, [r0, #14]
1005561e:	0780      	lsls	r0, r0, #30
10055620:	d506      	bpl.n	10055630 <cb_aci_gatt_disc_read_char_by_uuid_resp_event+0x20>
10055622:	460b      	mov	r3, r1
10055624:	790a      	ldrb	r2, [r1, #4]
10055626:	8818      	ldrh	r0, [r3, #0]
10055628:	8849      	ldrh	r1, [r1, #2]
1005562a:	1d5b      	adds	r3, r3, #5
1005562c:	f7ff fe47 	bl	100552be <aci_gatt_disc_read_char_by_uuid_resp_event>
10055630:	bd10      	pop	{r4, pc}
10055632:	0000      	.short	0x0000
10055634:	2000098c 	.word	0x2000098c

10055638 <cb_aci_gatt_error_resp_event>:
10055638:	b510      	push	{r4, lr}
1005563a:	4808      	ldr	r0, [pc, #32]	; (1005565c <cb_aci_gatt_error_resp_event+0x24>)
1005563c:	2237      	movs	r2, #55	; 0x37
1005563e:	6800      	ldr	r0, [r0, #0]
10055640:	0152      	lsls	r2, r2, #5
10055642:	1880      	adds	r0, r0, r2
10055644:	7b40      	ldrb	r0, [r0, #13]
10055646:	0600      	lsls	r0, r0, #24
10055648:	d506      	bpl.n	10055658 <cb_aci_gatt_error_resp_event+0x20>
1005564a:	4608      	mov	r0, r1
1005564c:	798b      	ldrb	r3, [r1, #6]
1005564e:	888a      	ldrh	r2, [r1, #4]
10055650:	7889      	ldrb	r1, [r1, #2]
10055652:	8800      	ldrh	r0, [r0, #0]
10055654:	f7ff fe34 	bl	100552c0 <aci_gatt_error_resp_event>
10055658:	bd10      	pop	{r4, pc}
1005565a:	0000      	.short	0x0000
1005565c:	2000098c 	.word	0x2000098c

10055660 <cb_aci_gatt_indication_event>:
10055660:	b510      	push	{r4, lr}
10055662:	4808      	ldr	r0, [pc, #32]	; (10055684 <cb_aci_gatt_indication_event+0x24>)
10055664:	2237      	movs	r2, #55	; 0x37
10055666:	6800      	ldr	r0, [r0, #0]
10055668:	0152      	lsls	r2, r2, #5
1005566a:	1880      	adds	r0, r0, r2
1005566c:	7b40      	ldrb	r0, [r0, #13]
1005566e:	0680      	lsls	r0, r0, #26
10055670:	d506      	bpl.n	10055680 <cb_aci_gatt_indication_event+0x20>
10055672:	460b      	mov	r3, r1
10055674:	790a      	ldrb	r2, [r1, #4]
10055676:	8818      	ldrh	r0, [r3, #0]
10055678:	8849      	ldrh	r1, [r1, #2]
1005567a:	1d5b      	adds	r3, r3, #5
1005567c:	f7ff fe21 	bl	100552c2 <aci_gatt_indication_event>
10055680:	bd10      	pop	{r4, pc}
10055682:	0000      	.short	0x0000
10055684:	2000098c 	.word	0x2000098c

10055688 <cb_aci_gatt_notification_event>:
10055688:	b510      	push	{r4, lr}
1005568a:	4808      	ldr	r0, [pc, #32]	; (100556ac <cb_aci_gatt_notification_event+0x24>)
1005568c:	2237      	movs	r2, #55	; 0x37
1005568e:	6800      	ldr	r0, [r0, #0]
10055690:	0152      	lsls	r2, r2, #5
10055692:	1880      	adds	r0, r0, r2
10055694:	7b40      	ldrb	r0, [r0, #13]
10055696:	0640      	lsls	r0, r0, #25
10055698:	d506      	bpl.n	100556a8 <cb_aci_gatt_notification_event+0x20>
1005569a:	460b      	mov	r3, r1
1005569c:	790a      	ldrb	r2, [r1, #4]
1005569e:	8818      	ldrh	r0, [r3, #0]
100556a0:	8849      	ldrh	r1, [r1, #2]
100556a2:	1d5b      	adds	r3, r3, #5
100556a4:	f7ff fe0e 	bl	100552c4 <aci_gatt_notification_event>
100556a8:	bd10      	pop	{r4, pc}
100556aa:	0000      	.short	0x0000
100556ac:	2000098c 	.word	0x2000098c

100556b0 <cb_aci_gatt_prepare_write_permit_req_event>:
100556b0:	b508      	push	{r3, lr}
100556b2:	4608      	mov	r0, r1
100556b4:	1dc9      	adds	r1, r1, #7
100556b6:	9100      	str	r1, [sp, #0]
100556b8:	7983      	ldrb	r3, [r0, #6]
100556ba:	8882      	ldrh	r2, [r0, #4]
100556bc:	8841      	ldrh	r1, [r0, #2]
100556be:	8800      	ldrh	r0, [r0, #0]
100556c0:	f7ff fe01 	bl	100552c6 <aci_gatt_prepare_write_permit_req_event>
100556c4:	bd08      	pop	{r3, pc}
	...

100556c8 <cb_aci_gatt_proc_complete_event>:
100556c8:	b510      	push	{r4, lr}
100556ca:	4807      	ldr	r0, [pc, #28]	; (100556e8 <cb_aci_gatt_proc_complete_event+0x20>)
100556cc:	2237      	movs	r2, #55	; 0x37
100556ce:	6800      	ldr	r0, [r0, #0]
100556d0:	0152      	lsls	r2, r2, #5
100556d2:	1880      	adds	r0, r0, r2
100556d4:	7b80      	ldrb	r0, [r0, #14]
100556d6:	07c0      	lsls	r0, r0, #31
100556d8:	d004      	beq.n	100556e4 <cb_aci_gatt_proc_complete_event+0x1c>
100556da:	4608      	mov	r0, r1
100556dc:	7889      	ldrb	r1, [r1, #2]
100556de:	8800      	ldrh	r0, [r0, #0]
100556e0:	f7ff fdf2 	bl	100552c8 <aci_gatt_proc_complete_event>
100556e4:	bd10      	pop	{r4, pc}
100556e6:	0000      	.short	0x0000
100556e8:	2000098c 	.word	0x2000098c

100556ec <cb_aci_gatt_proc_timeout_event>:
100556ec:	b510      	push	{r4, lr}
100556ee:	4806      	ldr	r0, [pc, #24]	; (10055708 <cb_aci_gatt_proc_timeout_event+0x1c>)
100556f0:	2237      	movs	r2, #55	; 0x37
100556f2:	6800      	ldr	r0, [r0, #0]
100556f4:	0152      	lsls	r2, r2, #5
100556f6:	1880      	adds	r0, r0, r2
100556f8:	7b00      	ldrb	r0, [r0, #12]
100556fa:	0780      	lsls	r0, r0, #30
100556fc:	d502      	bpl.n	10055704 <cb_aci_gatt_proc_timeout_event+0x18>
100556fe:	8808      	ldrh	r0, [r1, #0]
10055700:	f7ff fde3 	bl	100552ca <aci_gatt_proc_timeout_event>
10055704:	bd10      	pop	{r4, pc}
10055706:	0000      	.short	0x0000
10055708:	2000098c 	.word	0x2000098c

1005570c <cb_aci_gatt_read_multi_permit_req_event>:
1005570c:	b510      	push	{r4, lr}
1005570e:	460a      	mov	r2, r1
10055710:	8810      	ldrh	r0, [r2, #0]
10055712:	7889      	ldrb	r1, [r1, #2]
10055714:	1d12      	adds	r2, r2, #4
10055716:	f7ff fdd9 	bl	100552cc <aci_gatt_read_multi_permit_req_event>
1005571a:	bd10      	pop	{r4, pc}

1005571c <cb_aci_gatt_read_permit_req_event>:
1005571c:	b510      	push	{r4, lr}
1005571e:	4608      	mov	r0, r1
10055720:	888a      	ldrh	r2, [r1, #4]
10055722:	8849      	ldrh	r1, [r1, #2]
10055724:	8800      	ldrh	r0, [r0, #0]
10055726:	f7f2 fa8d 	bl	10047c44 <aci_gatt_read_permit_req_event>
1005572a:	bd10      	pop	{r4, pc}

1005572c <cb_aci_gatt_server_confirmation_event>:
1005572c:	b510      	push	{r4, lr}
1005572e:	8808      	ldrh	r0, [r1, #0]
10055730:	f7ff fdcd 	bl	100552ce <aci_gatt_server_confirmation_event>
10055734:	bd10      	pop	{r4, pc}

10055736 <cb_aci_gatt_tx_pool_available_event>:
10055736:	b510      	push	{r4, lr}
10055738:	4608      	mov	r0, r1
1005573a:	8849      	ldrh	r1, [r1, #2]
1005573c:	8800      	ldrh	r0, [r0, #0]
1005573e:	f7ff fdc7 	bl	100552d0 <aci_gatt_tx_pool_available_event>
10055742:	bd10      	pop	{r4, pc}

10055744 <cb_aci_gatt_write_permit_req_event>:
10055744:	b510      	push	{r4, lr}
10055746:	460b      	mov	r3, r1
10055748:	790a      	ldrb	r2, [r1, #4]
1005574a:	8818      	ldrh	r0, [r3, #0]
1005574c:	8849      	ldrh	r1, [r1, #2]
1005574e:	1d5b      	adds	r3, r3, #5
10055750:	f7ff fdbf 	bl	100552d2 <aci_gatt_write_permit_req_event>
10055754:	bd10      	pop	{r4, pc}

10055756 <cb_aci_hal_fw_error_event>:
10055756:	b510      	push	{r4, lr}
10055758:	460a      	mov	r2, r1
1005575a:	7810      	ldrb	r0, [r2, #0]
1005575c:	7849      	ldrb	r1, [r1, #1]
1005575e:	1c92      	adds	r2, r2, #2
10055760:	f7ff fdb8 	bl	100552d4 <aci_hal_fw_error_event>
10055764:	bd10      	pop	{r4, pc}
	...

10055768 <cb_aci_hal_scan_req_report_event>:
10055768:	b510      	push	{r4, lr}
1005576a:	4808      	ldr	r0, [pc, #32]	; (1005578c <cb_aci_hal_scan_req_report_event+0x24>)
1005576c:	2207      	movs	r2, #7
1005576e:	6800      	ldr	r0, [r0, #0]
10055770:	0212      	lsls	r2, r2, #8
10055772:	1880      	adds	r0, r0, r2
10055774:	7900      	ldrb	r0, [r0, #4]
10055776:	07c0      	lsls	r0, r0, #31
10055778:	d006      	beq.n	10055788 <cb_aci_hal_scan_req_report_event+0x20>
1005577a:	460a      	mov	r2, r1
1005577c:	2000      	movs	r0, #0
1005577e:	5610      	ldrsb	r0, [r2, r0]
10055780:	7849      	ldrb	r1, [r1, #1]
10055782:	1c92      	adds	r2, r2, #2
10055784:	f7ff fda7 	bl	100552d6 <aci_hal_scan_req_report_event>
10055788:	bd10      	pop	{r4, pc}
1005578a:	0000      	.short	0x0000
1005578c:	2000098c 	.word	0x2000098c

10055790 <cb_aci_l2cap_command_reject_event>:
10055790:	b508      	push	{r3, lr}
10055792:	4608      	mov	r0, r1
10055794:	2100      	movs	r1, #0
10055796:	9100      	str	r1, [sp, #0]
10055798:	8882      	ldrh	r2, [r0, #4]
1005579a:	7881      	ldrb	r1, [r0, #2]
1005579c:	8800      	ldrh	r0, [r0, #0]
1005579e:	2300      	movs	r3, #0
100557a0:	f7ff fd9a 	bl	100552d8 <aci_l2cap_command_reject_event>
100557a4:	bd08      	pop	{r3, pc}
	...

100557a8 <cb_aci_l2cap_connection_update_req_event>:
100557a8:	b50e      	push	{r1, r2, r3, lr}
100557aa:	480b      	ldr	r0, [pc, #44]	; (100557d8 <cb_aci_l2cap_connection_update_req_event+0x30>)
100557ac:	2237      	movs	r2, #55	; 0x37
100557ae:	6800      	ldr	r0, [r0, #0]
100557b0:	0152      	lsls	r2, r2, #5
100557b2:	1880      	adds	r0, r0, r2
100557b4:	7ac0      	ldrb	r0, [r0, #11]
100557b6:	07c0      	lsls	r0, r0, #31
100557b8:	d00c      	beq.n	100557d4 <cb_aci_l2cap_connection_update_req_event+0x2c>
100557ba:	4608      	mov	r0, r1
100557bc:	898b      	ldrh	r3, [r1, #12]
100557be:	894a      	ldrh	r2, [r1, #10]
100557c0:	8909      	ldrh	r1, [r1, #8]
100557c2:	9302      	str	r3, [sp, #8]
100557c4:	9201      	str	r2, [sp, #4]
100557c6:	9100      	str	r1, [sp, #0]
100557c8:	88c3      	ldrh	r3, [r0, #6]
100557ca:	8882      	ldrh	r2, [r0, #4]
100557cc:	7881      	ldrb	r1, [r0, #2]
100557ce:	8800      	ldrh	r0, [r0, #0]
100557d0:	f7ff fd83 	bl	100552da <aci_l2cap_connection_update_req_event>
100557d4:	bd0e      	pop	{r1, r2, r3, pc}
100557d6:	0000      	.short	0x0000
100557d8:	2000098c 	.word	0x2000098c

100557dc <cb_aci_l2cap_connection_update_resp_event>:
100557dc:	b510      	push	{r4, lr}
100557de:	4807      	ldr	r0, [pc, #28]	; (100557fc <cb_aci_l2cap_connection_update_resp_event+0x20>)
100557e0:	2237      	movs	r2, #55	; 0x37
100557e2:	6800      	ldr	r0, [r0, #0]
100557e4:	0152      	lsls	r2, r2, #5
100557e6:	1880      	adds	r0, r0, r2
100557e8:	7ac0      	ldrb	r0, [r0, #11]
100557ea:	0780      	lsls	r0, r0, #30
100557ec:	d504      	bpl.n	100557f8 <cb_aci_l2cap_connection_update_resp_event+0x1c>
100557ee:	4608      	mov	r0, r1
100557f0:	8849      	ldrh	r1, [r1, #2]
100557f2:	8800      	ldrh	r0, [r0, #0]
100557f4:	f7ff fd72 	bl	100552dc <aci_l2cap_connection_update_resp_event>
100557f8:	bd10      	pop	{r4, pc}
100557fa:	0000      	.short	0x0000
100557fc:	2000098c 	.word	0x2000098c

10055800 <cb_aci_l2cap_proc_timeout_event>:
10055800:	b510      	push	{r4, lr}
10055802:	4807      	ldr	r0, [pc, #28]	; (10055820 <cb_aci_l2cap_proc_timeout_event+0x20>)
10055804:	2237      	movs	r2, #55	; 0x37
10055806:	6800      	ldr	r0, [r0, #0]
10055808:	0152      	lsls	r2, r2, #5
1005580a:	1880      	adds	r0, r0, r2
1005580c:	7ac0      	ldrb	r0, [r0, #11]
1005580e:	0740      	lsls	r0, r0, #29
10055810:	d504      	bpl.n	1005581c <cb_aci_l2cap_proc_timeout_event+0x1c>
10055812:	8808      	ldrh	r0, [r1, #0]
10055814:	2200      	movs	r2, #0
10055816:	4611      	mov	r1, r2
10055818:	f7ff fd61 	bl	100552de <aci_l2cap_proc_timeout_event>
1005581c:	bd10      	pop	{r4, pc}
1005581e:	0000      	.short	0x0000
10055820:	2000098c 	.word	0x2000098c

10055824 <cb_hci_data_buffer_overflow_event>:
10055824:	4770      	bx	lr
	...

10055828 <cb_hci_disconnection_complete_event>:
10055828:	b510      	push	{r4, lr}
1005582a:	4807      	ldr	r0, [pc, #28]	; (10055848 <cb_hci_disconnection_complete_event+0x20>)
1005582c:	221b      	movs	r2, #27
1005582e:	6800      	ldr	r0, [r0, #0]
10055830:	0192      	lsls	r2, r2, #6
10055832:	1880      	adds	r0, r0, r2
10055834:	7e80      	ldrb	r0, [r0, #26]
10055836:	06c0      	lsls	r0, r0, #27
10055838:	d505      	bpl.n	10055846 <cb_hci_disconnection_complete_event+0x1e>
1005583a:	4608      	mov	r0, r1
1005583c:	790a      	ldrb	r2, [r1, #4]
1005583e:	8849      	ldrh	r1, [r1, #2]
10055840:	7800      	ldrb	r0, [r0, #0]
10055842:	f7f2 f9c7 	bl	10047bd4 <hci_disconnection_complete_event>
10055846:	bd10      	pop	{r4, pc}
10055848:	2000098c 	.word	0x2000098c

1005584c <cb_hci_encryption_change_event>:
1005584c:	b510      	push	{r4, lr}
1005584e:	4807      	ldr	r0, [pc, #28]	; (1005586c <cb_hci_encryption_change_event+0x20>)
10055850:	221b      	movs	r2, #27
10055852:	6800      	ldr	r0, [r0, #0]
10055854:	0192      	lsls	r2, r2, #6
10055856:	1880      	adds	r0, r0, r2
10055858:	7e80      	ldrb	r0, [r0, #26]
1005585a:	0600      	lsls	r0, r0, #24
1005585c:	d505      	bpl.n	1005586a <cb_hci_encryption_change_event+0x1e>
1005585e:	4608      	mov	r0, r1
10055860:	790a      	ldrb	r2, [r1, #4]
10055862:	8849      	ldrh	r1, [r1, #2]
10055864:	7800      	ldrb	r0, [r0, #0]
10055866:	f000 f963 	bl	10055b30 <hci_encryption_change_event>
1005586a:	bd10      	pop	{r4, pc}
1005586c:	2000098c 	.word	0x2000098c

10055870 <cb_hci_encryption_key_refresh_complete_event>:
10055870:	b510      	push	{r4, lr}
10055872:	4807      	ldr	r0, [pc, #28]	; (10055890 <cb_hci_encryption_key_refresh_complete_event+0x20>)
10055874:	221b      	movs	r2, #27
10055876:	6800      	ldr	r0, [r0, #0]
10055878:	0192      	lsls	r2, r2, #6
1005587a:	1880      	adds	r0, r0, r2
1005587c:	7fc0      	ldrb	r0, [r0, #31]
1005587e:	0600      	lsls	r0, r0, #24
10055880:	d504      	bpl.n	1005588c <cb_hci_encryption_key_refresh_complete_event+0x1c>
10055882:	4608      	mov	r0, r1
10055884:	8849      	ldrh	r1, [r1, #2]
10055886:	7800      	ldrb	r0, [r0, #0]
10055888:	f000 f953 	bl	10055b32 <hci_encryption_key_refresh_complete_event>
1005588c:	bd10      	pop	{r4, pc}
1005588e:	0000      	.short	0x0000
10055890:	2000098c 	.word	0x2000098c

10055894 <cb_hci_le_advertising_report_event>:
10055894:	b510      	push	{r4, lr}
10055896:	4807      	ldr	r0, [pc, #28]	; (100558b4 <cb_hci_le_advertising_report_event+0x20>)
10055898:	6802      	ldr	r2, [r0, #0]
1005589a:	2037      	movs	r0, #55	; 0x37
1005589c:	0140      	lsls	r0, r0, #5
1005589e:	1810      	adds	r0, r2, r0
100558a0:	7842      	ldrb	r2, [r0, #1]
100558a2:	0692      	lsls	r2, r2, #26
100558a4:	d505      	bpl.n	100558b2 <cb_hci_le_advertising_report_event+0x1e>
100558a6:	7880      	ldrb	r0, [r0, #2]
100558a8:	0780      	lsls	r0, r0, #30
100558aa:	d502      	bpl.n	100558b2 <cb_hci_le_advertising_report_event+0x1e>
100558ac:	2001      	movs	r0, #1
100558ae:	f000 f942 	bl	10055b36 <hci_le_advertising_report_event>
100558b2:	bd10      	pop	{r4, pc}
100558b4:	2000098c 	.word	0x2000098c

100558b8 <cb_hci_le_connection_complete_event>:
100558b8:	4608      	mov	r0, r1
100558ba:	b510      	push	{r4, lr}
100558bc:	490e      	ldr	r1, [pc, #56]	; (100558f8 <cb_hci_le_connection_complete_event+0x40>)
100558be:	b086      	sub	sp, #24
100558c0:	680a      	ldr	r2, [r1, #0]
100558c2:	2137      	movs	r1, #55	; 0x37
100558c4:	0149      	lsls	r1, r1, #5
100558c6:	1851      	adds	r1, r2, r1
100558c8:	784a      	ldrb	r2, [r1, #1]
100558ca:	0692      	lsls	r2, r2, #26
100558cc:	d511      	bpl.n	100558f2 <cb_hci_le_connection_complete_event+0x3a>
100558ce:	7889      	ldrb	r1, [r1, #2]
100558d0:	07c9      	lsls	r1, r1, #31
100558d2:	d00e      	beq.n	100558f2 <cb_hci_le_connection_complete_event+0x3a>
100558d4:	7c84      	ldrb	r4, [r0, #18]
100558d6:	8a03      	ldrh	r3, [r0, #16]
100558d8:	89c2      	ldrh	r2, [r0, #14]
100558da:	8981      	ldrh	r1, [r0, #12]
100558dc:	9404      	str	r4, [sp, #16]
100558de:	ac01      	add	r4, sp, #4
100558e0:	c40e      	stmia	r4!, {r1, r2, r3}
100558e2:	1d81      	adds	r1, r0, #6
100558e4:	9100      	str	r1, [sp, #0]
100558e6:	7943      	ldrb	r3, [r0, #5]
100558e8:	7902      	ldrb	r2, [r0, #4]
100558ea:	8841      	ldrh	r1, [r0, #2]
100558ec:	7800      	ldrb	r0, [r0, #0]
100558ee:	f7f2 f955 	bl	10047b9c <hci_le_connection_complete_event>
100558f2:	b006      	add	sp, #24
100558f4:	bd10      	pop	{r4, pc}
100558f6:	0000      	.short	0x0000
100558f8:	2000098c 	.word	0x2000098c

100558fc <cb_hci_le_connection_update_complete_event>:
100558fc:	b508      	push	{r3, lr}
100558fe:	480a      	ldr	r0, [pc, #40]	; (10055928 <cb_hci_le_connection_update_complete_event+0x2c>)
10055900:	6802      	ldr	r2, [r0, #0]
10055902:	2037      	movs	r0, #55	; 0x37
10055904:	0140      	lsls	r0, r0, #5
10055906:	1810      	adds	r0, r2, r0
10055908:	7842      	ldrb	r2, [r0, #1]
1005590a:	0692      	lsls	r2, r2, #26
1005590c:	d50b      	bpl.n	10055926 <cb_hci_le_connection_update_complete_event+0x2a>
1005590e:	7880      	ldrb	r0, [r0, #2]
10055910:	0740      	lsls	r0, r0, #29
10055912:	d508      	bpl.n	10055926 <cb_hci_le_connection_update_complete_event+0x2a>
10055914:	4608      	mov	r0, r1
10055916:	8909      	ldrh	r1, [r1, #8]
10055918:	9100      	str	r1, [sp, #0]
1005591a:	88c3      	ldrh	r3, [r0, #6]
1005591c:	8882      	ldrh	r2, [r0, #4]
1005591e:	8841      	ldrh	r1, [r0, #2]
10055920:	7800      	ldrb	r0, [r0, #0]
10055922:	f000 f909 	bl	10055b38 <hci_le_connection_update_complete_event>
10055926:	bd08      	pop	{r3, pc}
10055928:	2000098c 	.word	0x2000098c

1005592c <cb_hci_le_data_length_change_event>:
1005592c:	b508      	push	{r3, lr}
1005592e:	480a      	ldr	r0, [pc, #40]	; (10055958 <cb_hci_le_data_length_change_event+0x2c>)
10055930:	6802      	ldr	r2, [r0, #0]
10055932:	2037      	movs	r0, #55	; 0x37
10055934:	0140      	lsls	r0, r0, #5
10055936:	1810      	adds	r0, r2, r0
10055938:	7842      	ldrb	r2, [r0, #1]
1005593a:	0692      	lsls	r2, r2, #26
1005593c:	d50b      	bpl.n	10055956 <cb_hci_le_data_length_change_event+0x2a>
1005593e:	7880      	ldrb	r0, [r0, #2]
10055940:	0640      	lsls	r0, r0, #25
10055942:	d508      	bpl.n	10055956 <cb_hci_le_data_length_change_event+0x2a>
10055944:	4608      	mov	r0, r1
10055946:	8909      	ldrh	r1, [r1, #8]
10055948:	9100      	str	r1, [sp, #0]
1005594a:	88c3      	ldrh	r3, [r0, #6]
1005594c:	8882      	ldrh	r2, [r0, #4]
1005594e:	8841      	ldrh	r1, [r0, #2]
10055950:	8800      	ldrh	r0, [r0, #0]
10055952:	f000 f8f2 	bl	10055b3a <hci_le_data_length_change_event>
10055956:	bd08      	pop	{r3, pc}
10055958:	2000098c 	.word	0x2000098c

1005595c <cb_hci_le_direct_advertising_report_event>:
1005595c:	b510      	push	{r4, lr}
1005595e:	4807      	ldr	r0, [pc, #28]	; (1005597c <cb_hci_le_direct_advertising_report_event+0x20>)
10055960:	6802      	ldr	r2, [r0, #0]
10055962:	2037      	movs	r0, #55	; 0x37
10055964:	0140      	lsls	r0, r0, #5
10055966:	1810      	adds	r0, r2, r0
10055968:	7842      	ldrb	r2, [r0, #1]
1005596a:	0692      	lsls	r2, r2, #26
1005596c:	d505      	bpl.n	1005597a <cb_hci_le_direct_advertising_report_event+0x1e>
1005596e:	78c0      	ldrb	r0, [r0, #3]
10055970:	0740      	lsls	r0, r0, #29
10055972:	d502      	bpl.n	1005597a <cb_hci_le_direct_advertising_report_event+0x1e>
10055974:	2001      	movs	r0, #1
10055976:	f000 f8e1 	bl	10055b3c <hci_le_direct_advertising_report_event>
1005597a:	bd10      	pop	{r4, pc}
1005597c:	2000098c 	.word	0x2000098c

10055980 <cb_hci_le_enhanced_connection_complete_event>:
10055980:	4608      	mov	r0, r1
10055982:	b510      	push	{r4, lr}
10055984:	4910      	ldr	r1, [pc, #64]	; (100559c8 <cb_hci_le_enhanced_connection_complete_event+0x48>)
10055986:	b088      	sub	sp, #32
10055988:	680a      	ldr	r2, [r1, #0]
1005598a:	2137      	movs	r1, #55	; 0x37
1005598c:	0149      	lsls	r1, r1, #5
1005598e:	1851      	adds	r1, r2, r1
10055990:	784a      	ldrb	r2, [r1, #1]
10055992:	0692      	lsls	r2, r2, #26
10055994:	d516      	bpl.n	100559c4 <cb_hci_le_enhanced_connection_complete_event+0x44>
10055996:	78c9      	ldrb	r1, [r1, #3]
10055998:	0789      	lsls	r1, r1, #30
1005599a:	d513      	bpl.n	100559c4 <cb_hci_le_enhanced_connection_complete_event+0x44>
1005599c:	7f84      	ldrb	r4, [r0, #30]
1005599e:	8b83      	ldrh	r3, [r0, #28]
100559a0:	8b42      	ldrh	r2, [r0, #26]
100559a2:	8b01      	ldrh	r1, [r0, #24]
100559a4:	9406      	str	r4, [sp, #24]
100559a6:	ac03      	add	r4, sp, #12
100559a8:	c40e      	stmia	r4!, {r1, r2, r3}
100559aa:	4601      	mov	r1, r0
100559ac:	3112      	adds	r1, #18
100559ae:	1f8a      	subs	r2, r1, #6
100559b0:	1d83      	adds	r3, r0, #6
100559b2:	9300      	str	r3, [sp, #0]
100559b4:	9201      	str	r2, [sp, #4]
100559b6:	9102      	str	r1, [sp, #8]
100559b8:	7943      	ldrb	r3, [r0, #5]
100559ba:	7902      	ldrb	r2, [r0, #4]
100559bc:	8841      	ldrh	r1, [r0, #2]
100559be:	7800      	ldrb	r0, [r0, #0]
100559c0:	f000 f8bd 	bl	10055b3e <hci_le_enhanced_connection_complete_event>
100559c4:	b008      	add	sp, #32
100559c6:	bd10      	pop	{r4, pc}
100559c8:	2000098c 	.word	0x2000098c

100559cc <cb_hci_le_generate_dhkey_complete_event>:
100559cc:	b510      	push	{r4, lr}
100559ce:	4808      	ldr	r0, [pc, #32]	; (100559f0 <cb_hci_le_generate_dhkey_complete_event+0x24>)
100559d0:	6802      	ldr	r2, [r0, #0]
100559d2:	2037      	movs	r0, #55	; 0x37
100559d4:	0140      	lsls	r0, r0, #5
100559d6:	1810      	adds	r0, r2, r0
100559d8:	7842      	ldrb	r2, [r0, #1]
100559da:	0692      	lsls	r2, r2, #26
100559dc:	d506      	bpl.n	100559ec <cb_hci_le_generate_dhkey_complete_event+0x20>
100559de:	78c0      	ldrb	r0, [r0, #3]
100559e0:	07c0      	lsls	r0, r0, #31
100559e2:	d003      	beq.n	100559ec <cb_hci_le_generate_dhkey_complete_event+0x20>
100559e4:	7808      	ldrb	r0, [r1, #0]
100559e6:	1c49      	adds	r1, r1, #1
100559e8:	f000 f8aa 	bl	10055b40 <hci_le_generate_dhkey_complete_event>
100559ec:	bd10      	pop	{r4, pc}
100559ee:	0000      	.short	0x0000
100559f0:	2000098c 	.word	0x2000098c

100559f4 <cb_hci_le_long_term_key_request_event>:
100559f4:	b510      	push	{r4, lr}
100559f6:	4808      	ldr	r0, [pc, #32]	; (10055a18 <cb_hci_le_long_term_key_request_event+0x24>)
100559f8:	6802      	ldr	r2, [r0, #0]
100559fa:	2037      	movs	r0, #55	; 0x37
100559fc:	0140      	lsls	r0, r0, #5
100559fe:	1810      	adds	r0, r2, r0
10055a00:	7842      	ldrb	r2, [r0, #1]
10055a02:	0692      	lsls	r2, r2, #26
10055a04:	d507      	bpl.n	10055a16 <cb_hci_le_long_term_key_request_event+0x22>
10055a06:	7880      	ldrb	r0, [r0, #2]
10055a08:	06c0      	lsls	r0, r0, #27
10055a0a:	d504      	bpl.n	10055a16 <cb_hci_le_long_term_key_request_event+0x22>
10055a0c:	894a      	ldrh	r2, [r1, #10]
10055a0e:	8808      	ldrh	r0, [r1, #0]
10055a10:	1c89      	adds	r1, r1, #2
10055a12:	f000 f896 	bl	10055b42 <hci_le_long_term_key_request_event>
10055a16:	bd10      	pop	{r4, pc}
10055a18:	2000098c 	.word	0x2000098c

10055a1c <cb_hci_le_read_local_p256_public_key_complete_event>:
10055a1c:	b510      	push	{r4, lr}
10055a1e:	4808      	ldr	r0, [pc, #32]	; (10055a40 <cb_hci_le_read_local_p256_public_key_complete_event+0x24>)
10055a20:	6802      	ldr	r2, [r0, #0]
10055a22:	2037      	movs	r0, #55	; 0x37
10055a24:	0140      	lsls	r0, r0, #5
10055a26:	1810      	adds	r0, r2, r0
10055a28:	7842      	ldrb	r2, [r0, #1]
10055a2a:	0692      	lsls	r2, r2, #26
10055a2c:	d506      	bpl.n	10055a3c <cb_hci_le_read_local_p256_public_key_complete_event+0x20>
10055a2e:	7880      	ldrb	r0, [r0, #2]
10055a30:	0600      	lsls	r0, r0, #24
10055a32:	d503      	bpl.n	10055a3c <cb_hci_le_read_local_p256_public_key_complete_event+0x20>
10055a34:	7808      	ldrb	r0, [r1, #0]
10055a36:	1c49      	adds	r1, r1, #1
10055a38:	f000 f884 	bl	10055b44 <hci_le_read_local_p256_public_key_complete_event>
10055a3c:	bd10      	pop	{r4, pc}
10055a3e:	0000      	.short	0x0000
10055a40:	2000098c 	.word	0x2000098c

10055a44 <cb_hci_le_read_remote_used_features_complete_event>:
10055a44:	b510      	push	{r4, lr}
10055a46:	4809      	ldr	r0, [pc, #36]	; (10055a6c <cb_hci_le_read_remote_used_features_complete_event+0x28>)
10055a48:	6802      	ldr	r2, [r0, #0]
10055a4a:	2037      	movs	r0, #55	; 0x37
10055a4c:	0140      	lsls	r0, r0, #5
10055a4e:	1810      	adds	r0, r2, r0
10055a50:	7842      	ldrb	r2, [r0, #1]
10055a52:	0692      	lsls	r2, r2, #26
10055a54:	d508      	bpl.n	10055a68 <cb_hci_le_read_remote_used_features_complete_event+0x24>
10055a56:	7880      	ldrb	r0, [r0, #2]
10055a58:	0700      	lsls	r0, r0, #28
10055a5a:	d505      	bpl.n	10055a68 <cb_hci_le_read_remote_used_features_complete_event+0x24>
10055a5c:	460a      	mov	r2, r1
10055a5e:	7810      	ldrb	r0, [r2, #0]
10055a60:	8849      	ldrh	r1, [r1, #2]
10055a62:	1d12      	adds	r2, r2, #4
10055a64:	f000 f86f 	bl	10055b46 <hci_le_read_remote_used_features_complete_event>
10055a68:	bd10      	pop	{r4, pc}
10055a6a:	0000      	.short	0x0000
10055a6c:	2000098c 	.word	0x2000098c

10055a70 <cb_hci_number_of_completed_packets_event>:
10055a70:	b510      	push	{r4, lr}
10055a72:	2001      	movs	r0, #1
10055a74:	f000 f868 	bl	10055b48 <hci_number_of_completed_packets_event>
10055a78:	bd10      	pop	{r4, pc}
	...

10055a7c <cb_hci_read_remote_version_information_complete_event>:
10055a7c:	b508      	push	{r3, lr}
10055a7e:	4808      	ldr	r0, [pc, #32]	; (10055aa0 <cb_hci_read_remote_version_information_complete_event+0x24>)
10055a80:	221b      	movs	r2, #27
10055a82:	6800      	ldr	r0, [r0, #0]
10055a84:	0192      	lsls	r2, r2, #6
10055a86:	1880      	adds	r0, r0, r2
10055a88:	7ec0      	ldrb	r0, [r0, #27]
10055a8a:	0700      	lsls	r0, r0, #28
10055a8c:	d507      	bpl.n	10055a9e <cb_hci_read_remote_version_information_complete_event+0x22>
10055a8e:	88c8      	ldrh	r0, [r1, #6]
10055a90:	9000      	str	r0, [sp, #0]
10055a92:	888b      	ldrh	r3, [r1, #4]
10055a94:	788a      	ldrb	r2, [r1, #2]
10055a96:	8809      	ldrh	r1, [r1, #0]
10055a98:	2000      	movs	r0, #0
10055a9a:	f000 f856 	bl	10055b4a <hci_read_remote_version_information_complete_event>
10055a9e:	bd08      	pop	{r3, pc}
10055aa0:	2000098c 	.word	0x2000098c

10055aa4 <cb_hci_rx_acl_data_event>:
10055aa4:	b508      	push	{r3, lr}
10055aa6:	4608      	mov	r0, r1
10055aa8:	1d89      	adds	r1, r1, #6
10055aaa:	9100      	str	r1, [sp, #0]
10055aac:	8883      	ldrh	r3, [r0, #4]
10055aae:	78c2      	ldrb	r2, [r0, #3]
10055ab0:	7881      	ldrb	r1, [r0, #2]
10055ab2:	8800      	ldrh	r0, [r0, #0]
10055ab4:	f000 f84a 	bl	10055b4c <hci_rx_acl_data_event>
10055ab8:	bd08      	pop	{r3, pc}

10055aba <fifoBuf_getFreeHeader>:
10055aba:	b5f0      	push	{r4, r5, r6, r7, lr}
10055abc:	8844      	ldrh	r4, [r0, #2]
10055abe:	1c49      	adds	r1, r1, #1
10055ac0:	b2a4      	uxth	r4, r4
10055ac2:	b2e5      	uxtb	r5, r4
10055ac4:	08a4      	lsrs	r4, r4, #2
10055ac6:	b209      	sxth	r1, r1
10055ac8:	801c      	strh	r4, [r3, #0]
10055aca:	b28e      	uxth	r6, r1
10055acc:	8887      	ldrh	r7, [r0, #4]
10055ace:	1936      	adds	r6, r6, r4
10055ad0:	42be      	cmp	r6, r7
10055ad2:	d904      	bls.n	10055ade <fifoBuf_getFreeHeader+0x24>
10055ad4:	b2a6      	uxth	r6, r4
10055ad6:	1b89      	subs	r1, r1, r6
10055ad8:	1c6d      	adds	r5, r5, #1
10055ada:	b209      	sxth	r1, r1
10055adc:	b2ed      	uxtb	r5, r5
10055ade:	00a4      	lsls	r4, r4, #2
10055ae0:	1824      	adds	r4, r4, r0
10055ae2:	3408      	adds	r4, #8
10055ae4:	6014      	str	r4, [r2, #0]
10055ae6:	881c      	ldrh	r4, [r3, #0]
10055ae8:	07ad      	lsls	r5, r5, #30
10055aea:	1864      	adds	r4, r4, r1
10055aec:	00a4      	lsls	r4, r4, #2
10055aee:	0fad      	lsrs	r5, r5, #30
10055af0:	432c      	orrs	r4, r5
10055af2:	b2a4      	uxth	r4, r4
10055af4:	801c      	strh	r4, [r3, #0]
10055af6:	8803      	ldrh	r3, [r0, #0]
10055af8:	1ae3      	subs	r3, r4, r3
10055afa:	079c      	lsls	r4, r3, #30
10055afc:	0fa4      	lsrs	r4, r4, #30
10055afe:	2c01      	cmp	r4, #1
10055b00:	d802      	bhi.n	10055b08 <fifoBuf_getFreeHeader+0x4e>
10055b02:	d103      	bne.n	10055b0c <fifoBuf_getFreeHeader+0x52>
10055b04:	2b00      	cmp	r3, #0
10055b06:	dd01      	ble.n	10055b0c <fifoBuf_getFreeHeader+0x52>
10055b08:	2300      	movs	r3, #0
10055b0a:	e00a      	b.n	10055b22 <fifoBuf_getFreeHeader+0x68>
10055b0c:	2301      	movs	r3, #1
10055b0e:	2900      	cmp	r1, #0
10055b10:	da07      	bge.n	10055b22 <fifoBuf_getFreeHeader+0x68>
10055b12:	6811      	ldr	r1, [r2, #0]
10055b14:	788c      	ldrb	r4, [r1, #2]
10055b16:	08a4      	lsrs	r4, r4, #2
10055b18:	00a4      	lsls	r4, r4, #2
10055b1a:	1c64      	adds	r4, r4, #1
10055b1c:	708c      	strb	r4, [r1, #2]
10055b1e:	3008      	adds	r0, #8
10055b20:	6010      	str	r0, [r2, #0]
10055b22:	4618      	mov	r0, r3
10055b24:	bdf0      	pop	{r4, r5, r6, r7, pc}

10055b26 <fifoCtrl_init>:
10055b26:	2200      	movs	r2, #0
10055b28:	8002      	strh	r2, [r0, #0]
10055b2a:	8042      	strh	r2, [r0, #2]
10055b2c:	8081      	strh	r1, [r0, #4]
10055b2e:	4770      	bx	lr

10055b30 <hci_encryption_change_event>:
10055b30:	4770      	bx	lr

10055b32 <hci_encryption_key_refresh_complete_event>:
10055b32:	4770      	bx	lr

10055b34 <hci_hardware_error_event>:
10055b34:	4770      	bx	lr

10055b36 <hci_le_advertising_report_event>:
10055b36:	4770      	bx	lr

10055b38 <hci_le_connection_update_complete_event>:
10055b38:	4770      	bx	lr

10055b3a <hci_le_data_length_change_event>:
10055b3a:	4770      	bx	lr

10055b3c <hci_le_direct_advertising_report_event>:
10055b3c:	4770      	bx	lr

10055b3e <hci_le_enhanced_connection_complete_event>:
10055b3e:	4770      	bx	lr

10055b40 <hci_le_generate_dhkey_complete_event>:
10055b40:	4770      	bx	lr

10055b42 <hci_le_long_term_key_request_event>:
10055b42:	4770      	bx	lr

10055b44 <hci_le_read_local_p256_public_key_complete_event>:
10055b44:	4770      	bx	lr

10055b46 <hci_le_read_remote_used_features_complete_event>:
10055b46:	4770      	bx	lr

10055b48 <hci_number_of_completed_packets_event>:
10055b48:	4770      	bx	lr

10055b4a <hci_read_remote_version_information_complete_event>:
10055b4a:	4770      	bx	lr

10055b4c <hci_rx_acl_data_event>:
10055b4c:	2000      	movs	r0, #0
10055b4e:	4770      	bx	lr

10055b50 <int_cb_hci_disconnection_complete_event>:
10055b50:	b570      	push	{r4, r5, r6, lr}
10055b52:	78c5      	ldrb	r5, [r0, #3]
10055b54:	4604      	mov	r4, r0
10055b56:	460e      	mov	r6, r1
10055b58:	4628      	mov	r0, r5
10055b5a:	f7f7 fb6e 	bl	1004d23a <L2C_Rcv_Event_Handler_ISR>
10055b5e:	4631      	mov	r1, r6
10055b60:	4628      	mov	r0, r5
10055b62:	f7f4 fa61 	bl	1004a028 <GAP_LL_Event_Handler_ISR>
10055b66:	2000      	movs	r0, #0
10055b68:	70e0      	strb	r0, [r4, #3]
10055b6a:	78a0      	ldrb	r0, [r4, #2]
10055b6c:	21bf      	movs	r1, #191	; 0xbf
10055b6e:	4008      	ands	r0, r1
10055b70:	70a0      	strb	r0, [r4, #2]
10055b72:	2045      	movs	r0, #69	; 0x45
10055b74:	bd70      	pop	{r4, r5, r6, pc}

10055b76 <int_cb_hci_encryption_change_event>:
10055b76:	b510      	push	{r4, lr}
10055b78:	4604      	mov	r4, r0
10055b7a:	78c0      	ldrb	r0, [r0, #3]
10055b7c:	f7f7 fb5d 	bl	1004d23a <L2C_Rcv_Event_Handler_ISR>
10055b80:	2001      	movs	r0, #1
10055b82:	70e0      	strb	r0, [r4, #3]
10055b84:	78a0      	ldrb	r0, [r4, #2]
10055b86:	21bf      	movs	r1, #191	; 0xbf
10055b88:	4008      	ands	r0, r1
10055b8a:	70a0      	strb	r0, [r4, #2]
10055b8c:	2045      	movs	r0, #69	; 0x45
10055b8e:	bd10      	pop	{r4, pc}

10055b90 <int_cb_hci_encryption_key_refresh_complete_event>:
10055b90:	b510      	push	{r4, lr}
10055b92:	4604      	mov	r4, r0
10055b94:	78c0      	ldrb	r0, [r0, #3]
10055b96:	f7f7 fb50 	bl	1004d23a <L2C_Rcv_Event_Handler_ISR>
10055b9a:	2002      	movs	r0, #2
10055b9c:	70e0      	strb	r0, [r4, #3]
10055b9e:	78a0      	ldrb	r0, [r4, #2]
10055ba0:	21bf      	movs	r1, #191	; 0xbf
10055ba2:	4008      	ands	r0, r1
10055ba4:	70a0      	strb	r0, [r4, #2]
10055ba6:	2045      	movs	r0, #69	; 0x45
10055ba8:	bd10      	pop	{r4, pc}

10055baa <int_cb_hci_le_advertising_report_event>:
10055baa:	b510      	push	{r4, lr}
10055bac:	4604      	mov	r4, r0
10055bae:	78c0      	ldrb	r0, [r0, #3]
10055bb0:	f7f4 fa3a 	bl	1004a028 <GAP_LL_Event_Handler_ISR>
10055bb4:	2800      	cmp	r0, #0
10055bb6:	d006      	beq.n	10055bc6 <int_cb_hci_le_advertising_report_event+0x1c>
10055bb8:	2005      	movs	r0, #5
10055bba:	70e0      	strb	r0, [r4, #3]
10055bbc:	78a0      	ldrb	r0, [r4, #2]
10055bbe:	21bf      	movs	r1, #191	; 0xbf
10055bc0:	4008      	ands	r0, r1
10055bc2:	70a0      	strb	r0, [r4, #2]
10055bc4:	2045      	movs	r0, #69	; 0x45
10055bc6:	bd10      	pop	{r4, pc}

10055bc8 <int_cb_hci_le_connection_complete_event>:
10055bc8:	b570      	push	{r4, r5, r6, lr}
10055bca:	78c5      	ldrb	r5, [r0, #3]
10055bcc:	4604      	mov	r4, r0
10055bce:	460e      	mov	r6, r1
10055bd0:	4628      	mov	r0, r5
10055bd2:	f7f7 fb32 	bl	1004d23a <L2C_Rcv_Event_Handler_ISR>
10055bd6:	4631      	mov	r1, r6
10055bd8:	4628      	mov	r0, r5
10055bda:	f7f4 fa25 	bl	1004a028 <GAP_LL_Event_Handler_ISR>
10055bde:	2003      	movs	r0, #3
10055be0:	70e0      	strb	r0, [r4, #3]
10055be2:	78a0      	ldrb	r0, [r4, #2]
10055be4:	21bf      	movs	r1, #191	; 0xbf
10055be6:	4008      	ands	r0, r1
10055be8:	70a0      	strb	r0, [r4, #2]
10055bea:	2045      	movs	r0, #69	; 0x45
10055bec:	bd70      	pop	{r4, r5, r6, pc}

10055bee <int_cb_hci_le_data_length_change_event>:
10055bee:	2106      	movs	r1, #6
10055bf0:	70c1      	strb	r1, [r0, #3]
10055bf2:	7881      	ldrb	r1, [r0, #2]
10055bf4:	22bf      	movs	r2, #191	; 0xbf
10055bf6:	4011      	ands	r1, r2
10055bf8:	7081      	strb	r1, [r0, #2]
10055bfa:	2045      	movs	r0, #69	; 0x45
10055bfc:	4770      	bx	lr

10055bfe <int_cb_hci_le_direct_advertising_report_event>:
10055bfe:	b510      	push	{r4, lr}
10055c00:	4604      	mov	r4, r0
10055c02:	78c0      	ldrb	r0, [r0, #3]
10055c04:	f7f4 fa10 	bl	1004a028 <GAP_LL_Event_Handler_ISR>
10055c08:	2800      	cmp	r0, #0
10055c0a:	d006      	beq.n	10055c1a <int_cb_hci_le_direct_advertising_report_event+0x1c>
10055c0c:	200a      	movs	r0, #10
10055c0e:	70e0      	strb	r0, [r4, #3]
10055c10:	78a0      	ldrb	r0, [r4, #2]
10055c12:	21bf      	movs	r1, #191	; 0xbf
10055c14:	4008      	ands	r0, r1
10055c16:	70a0      	strb	r0, [r4, #2]
10055c18:	2045      	movs	r0, #69	; 0x45
10055c1a:	bd10      	pop	{r4, pc}

10055c1c <int_cb_hci_le_enhanced_connection_complete_event>:
10055c1c:	b570      	push	{r4, r5, r6, lr}
10055c1e:	78c5      	ldrb	r5, [r0, #3]
10055c20:	4604      	mov	r4, r0
10055c22:	460e      	mov	r6, r1
10055c24:	4628      	mov	r0, r5
10055c26:	f7f7 fb08 	bl	1004d23a <L2C_Rcv_Event_Handler_ISR>
10055c2a:	4631      	mov	r1, r6
10055c2c:	4628      	mov	r0, r5
10055c2e:	f7f4 f9fb 	bl	1004a028 <GAP_LL_Event_Handler_ISR>
10055c32:	2009      	movs	r0, #9
10055c34:	70e0      	strb	r0, [r4, #3]
10055c36:	78a0      	ldrb	r0, [r4, #2]
10055c38:	21bf      	movs	r1, #191	; 0xbf
10055c3a:	4008      	ands	r0, r1
10055c3c:	70a0      	strb	r0, [r4, #2]
10055c3e:	2045      	movs	r0, #69	; 0x45
10055c40:	bd70      	pop	{r4, r5, r6, pc}

10055c42 <int_cb_hci_le_generate_dhkey_complete_event>:
10055c42:	b510      	push	{r4, lr}
10055c44:	4604      	mov	r4, r0
10055c46:	4608      	mov	r0, r1
10055c48:	f7ff f9ee 	bl	10055028 <smp_sc_hci_le_generate_dhkey_complete_evt_hndl_ucfg>
10055c4c:	2008      	movs	r0, #8
10055c4e:	70e0      	strb	r0, [r4, #3]
10055c50:	78a0      	ldrb	r0, [r4, #2]
10055c52:	21bf      	movs	r1, #191	; 0xbf
10055c54:	4008      	ands	r0, r1
10055c56:	70a0      	strb	r0, [r4, #2]
10055c58:	2045      	movs	r0, #69	; 0x45
10055c5a:	bd10      	pop	{r4, pc}

10055c5c <int_cb_hci_le_long_term_key_request_event>:
10055c5c:	b510      	push	{r4, lr}
10055c5e:	78c0      	ldrb	r0, [r0, #3]
10055c60:	f7f7 faeb 	bl	1004d23a <L2C_Rcv_Event_Handler_ISR>
10055c64:	2000      	movs	r0, #0
10055c66:	bd10      	pop	{r4, pc}

10055c68 <int_cb_hci_le_read_local_p256_public_key_complete_event>:
10055c68:	b510      	push	{r4, lr}
10055c6a:	4604      	mov	r4, r0
10055c6c:	4608      	mov	r0, r1
10055c6e:	f7ff f9dc 	bl	1005502a <smp_sc_hci_le_read_local_p256_public_key_complete_evt_hndl_ucfg>
10055c72:	2007      	movs	r0, #7
10055c74:	70e0      	strb	r0, [r4, #3]
10055c76:	78a0      	ldrb	r0, [r4, #2]
10055c78:	21bf      	movs	r1, #191	; 0xbf
10055c7a:	4008      	ands	r0, r1
10055c7c:	70a0      	strb	r0, [r4, #2]
10055c7e:	2045      	movs	r0, #69	; 0x45
10055c80:	bd10      	pop	{r4, pc}
	...

10055c84 <Acl_Init>:
10055c84:	4806      	ldr	r0, [pc, #24]	; (10055ca0 <Acl_Init+0x1c>)
10055c86:	2100      	movs	r1, #0
10055c88:	6802      	ldr	r2, [r0, #0]
10055c8a:	2049      	movs	r0, #73	; 0x49
10055c8c:	0140      	lsls	r0, r0, #5
10055c8e:	1810      	adds	r0, r2, r0
10055c90:	7201      	strb	r1, [r0, #8]
10055c92:	7241      	strb	r1, [r0, #9]
10055c94:	2103      	movs	r1, #3
10055c96:	7281      	strb	r1, [r0, #10]
10055c98:	72c1      	strb	r1, [r0, #11]
10055c9a:	2000      	movs	r0, #0
10055c9c:	4770      	bx	lr
10055c9e:	0000      	.short	0x0000
10055ca0:	2000098c 	.word	0x2000098c

10055ca4 <Acl_Rcv_Pkt_Handler>:
10055ca4:	b570      	push	{r4, r5, r6, lr}
10055ca6:	4d0d      	ldr	r5, [pc, #52]	; (10055cdc <Acl_Rcv_Pkt_Handler+0x38>)
10055ca8:	4604      	mov	r4, r0
10055caa:	2301      	movs	r3, #1
10055cac:	6828      	ldr	r0, [r5, #0]
10055cae:	02d9      	lsls	r1, r3, #11
10055cb0:	1840      	adds	r0, r0, r1
10055cb2:	2690      	movs	r6, #144	; 0x90
10055cb4:	461a      	mov	r2, r3
10055cb6:	6940      	ldr	r0, [r0, #20]
10055cb8:	4631      	mov	r1, r6
10055cba:	f7ff fa97 	bl	100551ec <aci_event_fifo_push_header>
10055cbe:	0001      	movs	r1, r0
10055cc0:	d003      	beq.n	10055cca <Acl_Rcv_Pkt_Handler+0x26>
10055cc2:	4630      	mov	r0, r6
10055cc4:	604c      	str	r4, [r1, #4]
10055cc6:	f7ff fa7d 	bl	100551c4 <aci_event_fifo_push>
10055cca:	2049      	movs	r0, #73	; 0x49
10055ccc:	6829      	ldr	r1, [r5, #0]
10055cce:	0140      	lsls	r0, r0, #5
10055cd0:	1809      	adds	r1, r1, r0
10055cd2:	7a08      	ldrb	r0, [r1, #8]
10055cd4:	1c40      	adds	r0, r0, #1
10055cd6:	7208      	strb	r0, [r1, #8]
10055cd8:	bd70      	pop	{r4, r5, r6, pc}
10055cda:	0000      	.short	0x0000
10055cdc:	2000098c 	.word	0x2000098c

10055ce0 <Acl_Transmit_Data>:
10055ce0:	b510      	push	{r4, lr}
10055ce2:	4604      	mov	r4, r0
10055ce4:	2000      	movs	r0, #0
10055ce6:	8220      	strh	r0, [r4, #16]
10055ce8:	74a0      	strb	r0, [r4, #18]
10055cea:	68a1      	ldr	r1, [r4, #8]
10055cec:	61a1      	str	r1, [r4, #24]
10055cee:	6161      	str	r1, [r4, #20]
10055cf0:	6020      	str	r0, [r4, #0]
10055cf2:	4620      	mov	r0, r4
10055cf4:	f7fb ff62 	bl	10051bbc <LL_Send_ACL_Data>
10055cf8:	2845      	cmp	r0, #69	; 0x45
10055cfa:	d001      	beq.n	10055d00 <Acl_Transmit_Data+0x20>
10055cfc:	2041      	movs	r0, #65	; 0x41
10055cfe:	bd10      	pop	{r4, pc}
10055d00:	88a0      	ldrh	r0, [r4, #4]
10055d02:	2103      	movs	r1, #3
10055d04:	f7fa fa00 	bl	10050108 <get_connection_no>
10055d08:	4604      	mov	r4, r0
10055d0a:	f7fa fa7f 	bl	1005020c <is_slave>
10055d0e:	2800      	cmp	r0, #0
10055d10:	d013      	beq.n	10055d3a <Acl_Transmit_Data+0x5a>
10055d12:	b672      	cpsid	i
10055d14:	480a      	ldr	r0, [pc, #40]	; (10055d40 <Acl_Transmit_Data+0x60>)
10055d16:	2201      	movs	r2, #1
10055d18:	6801      	ldr	r1, [r0, #0]
10055d1a:	2009      	movs	r0, #9
10055d1c:	0200      	lsls	r0, r0, #8
10055d1e:	1809      	adds	r1, r1, r0
10055d20:	7848      	ldrb	r0, [r1, #1]
10055d22:	40a2      	lsls	r2, r4
10055d24:	4310      	orrs	r0, r2
10055d26:	7048      	strb	r0, [r1, #1]
10055d28:	b662      	cpsie	i
10055d2a:	2000      	movs	r0, #0
10055d2c:	f7fc fbda 	bl	100524e4 <slave_advance>
10055d30:	2800      	cmp	r0, #0
10055d32:	d002      	beq.n	10055d3a <Acl_Transmit_Data+0x5a>
10055d34:	2000      	movs	r0, #0
10055d36:	f000 f917 	bl	10055f68 <advance_wakeup_timer>
10055d3a:	2000      	movs	r0, #0
10055d3c:	bd10      	pop	{r4, pc}
10055d3e:	0000      	.short	0x0000
10055d40:	2000098c 	.word	0x2000098c

10055d44 <Acl_Tx_Cmpl_Pkt_Handler>:
10055d44:	b570      	push	{r4, r5, r6, lr}
10055d46:	7cc1      	ldrb	r1, [r0, #19]
10055d48:	4d0e      	ldr	r5, [pc, #56]	; (10055d84 <Acl_Tx_Cmpl_Pkt_Handler+0x40>)
10055d4a:	0649      	lsls	r1, r1, #25
10055d4c:	0e49      	lsrs	r1, r1, #25
10055d4e:	74c1      	strb	r1, [r0, #19]
10055d50:	4604      	mov	r4, r0
10055d52:	2301      	movs	r3, #1
10055d54:	6828      	ldr	r0, [r5, #0]
10055d56:	02d9      	lsls	r1, r3, #11
10055d58:	1840      	adds	r0, r0, r1
10055d5a:	2690      	movs	r6, #144	; 0x90
10055d5c:	2200      	movs	r2, #0
10055d5e:	6940      	ldr	r0, [r0, #20]
10055d60:	4631      	mov	r1, r6
10055d62:	f7ff fa43 	bl	100551ec <aci_event_fifo_push_header>
10055d66:	0001      	movs	r1, r0
10055d68:	d003      	beq.n	10055d72 <Acl_Tx_Cmpl_Pkt_Handler+0x2e>
10055d6a:	4630      	mov	r0, r6
10055d6c:	604c      	str	r4, [r1, #4]
10055d6e:	f7ff fa29 	bl	100551c4 <aci_event_fifo_push>
10055d72:	2049      	movs	r0, #73	; 0x49
10055d74:	6829      	ldr	r1, [r5, #0]
10055d76:	0140      	lsls	r0, r0, #5
10055d78:	1809      	adds	r1, r1, r0
10055d7a:	7a48      	ldrb	r0, [r1, #9]
10055d7c:	1c40      	adds	r0, r0, #1
10055d7e:	7248      	strb	r0, [r1, #9]
10055d80:	bd70      	pop	{r4, r5, r6, pc}
10055d82:	0000      	.short	0x0000
10055d84:	2000098c 	.word	0x2000098c

10055d88 <int_cb_hci_acl_data_ind_event>:
10055d88:	b510      	push	{r4, lr}
10055d8a:	78c2      	ldrb	r2, [r0, #3]
10055d8c:	4c0d      	ldr	r4, [pc, #52]	; (10055dc4 <int_cb_hci_acl_data_ind_event+0x3c>)
10055d8e:	6808      	ldr	r0, [r1, #0]
10055d90:	6821      	ldr	r1, [r4, #0]
10055d92:	31a0      	adds	r1, #160	; 0xa0
10055d94:	7909      	ldrb	r1, [r1, #4]
10055d96:	07c9      	lsls	r1, r1, #31
10055d98:	d005      	beq.n	10055da6 <int_cb_hci_acl_data_ind_event+0x1e>
10055d9a:	f7f6 fe91 	bl	1004cac0 <hci_rx_acl_data>
10055d9e:	2800      	cmp	r0, #0
10055da0:	d006      	beq.n	10055db0 <int_cb_hci_acl_data_ind_event+0x28>
10055da2:	2043      	movs	r0, #67	; 0x43
10055da4:	bd10      	pop	{r4, pc}
10055da6:	4601      	mov	r1, r0
10055da8:	4610      	mov	r0, r2
10055daa:	f7f7 fa37 	bl	1004d21c <L2C_Rcv_Event_Handler>
10055dae:	e7f6      	b.n	10055d9e <int_cb_hci_acl_data_ind_event+0x16>
10055db0:	b672      	cpsid	i
10055db2:	2149      	movs	r1, #73	; 0x49
10055db4:	6822      	ldr	r2, [r4, #0]
10055db6:	0149      	lsls	r1, r1, #5
10055db8:	1852      	adds	r2, r2, r1
10055dba:	7a11      	ldrb	r1, [r2, #8]
10055dbc:	1e49      	subs	r1, r1, #1
10055dbe:	7211      	strb	r1, [r2, #8]
10055dc0:	b662      	cpsie	i
10055dc2:	bd10      	pop	{r4, pc}
10055dc4:	2000098c 	.word	0x2000098c

10055dc8 <int_cb_hci_acl_data_tx_cmpl_event>:
10055dc8:	b570      	push	{r4, r5, r6, lr}
10055dca:	4603      	mov	r3, r0
10055dcc:	2243      	movs	r2, #67	; 0x43
10055dce:	78dc      	ldrb	r4, [r3, #3]
10055dd0:	2600      	movs	r6, #0
10055dd2:	6808      	ldr	r0, [r1, #0]
10055dd4:	e010      	b.n	10055df8 <int_cb_hci_acl_data_tx_cmpl_event+0x30>
10055dd6:	6805      	ldr	r5, [r0, #0]
10055dd8:	6006      	str	r6, [r0, #0]
10055dda:	7cc1      	ldrb	r1, [r0, #19]
10055ddc:	07c9      	lsls	r1, r1, #31
10055dde:	d002      	beq.n	10055de6 <int_cb_hci_acl_data_tx_cmpl_event+0x1e>
10055de0:	f7f6 fea4 	bl	1004cb2c <hci_tx_acl_data_done>
10055de4:	e003      	b.n	10055dee <int_cb_hci_acl_data_tx_cmpl_event+0x26>
10055de6:	4601      	mov	r1, r0
10055de8:	4620      	mov	r0, r4
10055dea:	f7f7 fa17 	bl	1004d21c <L2C_Rcv_Event_Handler>
10055dee:	0002      	movs	r2, r0
10055df0:	d001      	beq.n	10055df6 <int_cb_hci_acl_data_tx_cmpl_event+0x2e>
10055df2:	2243      	movs	r2, #67	; 0x43
10055df4:	e00e      	b.n	10055e14 <int_cb_hci_acl_data_tx_cmpl_event+0x4c>
10055df6:	4628      	mov	r0, r5
10055df8:	2800      	cmp	r0, #0
10055dfa:	d1ec      	bne.n	10055dd6 <int_cb_hci_acl_data_tx_cmpl_event+0xe>
10055dfc:	2a00      	cmp	r2, #0
10055dfe:	d109      	bne.n	10055e14 <int_cb_hci_acl_data_tx_cmpl_event+0x4c>
10055e00:	b672      	cpsid	i
10055e02:	4805      	ldr	r0, [pc, #20]	; (10055e18 <int_cb_hci_acl_data_tx_cmpl_event+0x50>)
10055e04:	6801      	ldr	r1, [r0, #0]
10055e06:	2049      	movs	r0, #73	; 0x49
10055e08:	0140      	lsls	r0, r0, #5
10055e0a:	1809      	adds	r1, r1, r0
10055e0c:	7a48      	ldrb	r0, [r1, #9]
10055e0e:	1e40      	subs	r0, r0, #1
10055e10:	7248      	strb	r0, [r1, #9]
10055e12:	b662      	cpsie	i
10055e14:	4610      	mov	r0, r2
10055e16:	bd70      	pop	{r4, r5, r6, pc}
10055e18:	2000098c 	.word	0x2000098c

10055e1c <isr_Acl_Data_Indication_Queue_Full>:
10055e1c:	4806      	ldr	r0, [pc, #24]	; (10055e38 <isr_Acl_Data_Indication_Queue_Full+0x1c>)
10055e1e:	6801      	ldr	r1, [r0, #0]
10055e20:	2049      	movs	r0, #73	; 0x49
10055e22:	0140      	lsls	r0, r0, #5
10055e24:	1808      	adds	r0, r1, r0
10055e26:	7a01      	ldrb	r1, [r0, #8]
10055e28:	7a80      	ldrb	r0, [r0, #10]
10055e2a:	4281      	cmp	r1, r0
10055e2c:	d901      	bls.n	10055e32 <isr_Acl_Data_Indication_Queue_Full+0x16>
10055e2e:	2001      	movs	r0, #1
10055e30:	4770      	bx	lr
10055e32:	2000      	movs	r0, #0
10055e34:	4770      	bx	lr
10055e36:	0000      	.short	0x0000
10055e38:	2000098c 	.word	0x2000098c

10055e3c <isr_Acl_Data_TX_Cmpl_Queue_Full>:
10055e3c:	4806      	ldr	r0, [pc, #24]	; (10055e58 <isr_Acl_Data_TX_Cmpl_Queue_Full+0x1c>)
10055e3e:	6801      	ldr	r1, [r0, #0]
10055e40:	2049      	movs	r0, #73	; 0x49
10055e42:	0140      	lsls	r0, r0, #5
10055e44:	1808      	adds	r0, r1, r0
10055e46:	7a41      	ldrb	r1, [r0, #9]
10055e48:	7ac0      	ldrb	r0, [r0, #11]
10055e4a:	4281      	cmp	r1, r0
10055e4c:	d901      	bls.n	10055e52 <isr_Acl_Data_TX_Cmpl_Queue_Full+0x16>
10055e4e:	2001      	movs	r0, #1
10055e50:	4770      	bx	lr
10055e52:	2000      	movs	r0, #0
10055e54:	4770      	bx	lr
10055e56:	0000      	.short	0x0000
10055e58:	2000098c 	.word	0x2000098c

10055e5c <acl_list_first>:
10055e5c:	6800      	ldr	r0, [r0, #0]
10055e5e:	4770      	bx	lr

10055e60 <acl_list_full_on_packt>:
10055e60:	b510      	push	{r4, lr}
10055e62:	4604      	mov	r4, r0
10055e64:	7a00      	ldrb	r0, [r0, #8]
10055e66:	28ff      	cmp	r0, #255	; 0xff
10055e68:	d00b      	beq.n	10055e82 <acl_list_full_on_packt+0x22>
10055e6a:	4608      	mov	r0, r1
10055e6c:	f7fa fc50 	bl	10050710 <PM_Get_Mem_Buff_Count>
10055e70:	7ae1      	ldrb	r1, [r4, #11]
10055e72:	7a62      	ldrb	r2, [r4, #9]
10055e74:	1889      	adds	r1, r1, r2
10055e76:	1840      	adds	r0, r0, r1
10055e78:	7a21      	ldrb	r1, [r4, #8]
10055e7a:	4288      	cmp	r0, r1
10055e7c:	d901      	bls.n	10055e82 <acl_list_full_on_packt+0x22>
10055e7e:	2001      	movs	r0, #1
10055e80:	bd10      	pop	{r4, pc}
10055e82:	2000      	movs	r0, #0
10055e84:	bd10      	pop	{r4, pc}

10055e86 <acl_list_init>:
10055e86:	2300      	movs	r3, #0
10055e88:	6003      	str	r3, [r0, #0]
10055e8a:	6043      	str	r3, [r0, #4]
10055e8c:	7241      	strb	r1, [r0, #9]
10055e8e:	7202      	strb	r2, [r0, #8]
10055e90:	72c3      	strb	r3, [r0, #11]
10055e92:	7283      	strb	r3, [r0, #10]
10055e94:	4770      	bx	lr

10055e96 <acl_list_insert_head>:
10055e96:	b510      	push	{r4, lr}
10055e98:	4604      	mov	r4, r0
10055e9a:	6800      	ldr	r0, [r0, #0]
10055e9c:	6008      	str	r0, [r1, #0]
10055e9e:	6820      	ldr	r0, [r4, #0]
10055ea0:	2800      	cmp	r0, #0
10055ea2:	d100      	bne.n	10055ea6 <acl_list_insert_head+0x10>
10055ea4:	6061      	str	r1, [r4, #4]
10055ea6:	4608      	mov	r0, r1
10055ea8:	6021      	str	r1, [r4, #0]
10055eaa:	f7fa fc31 	bl	10050710 <PM_Get_Mem_Buff_Count>
10055eae:	7ae1      	ldrb	r1, [r4, #11]
10055eb0:	1840      	adds	r0, r0, r1
10055eb2:	72e0      	strb	r0, [r4, #11]
10055eb4:	7aa0      	ldrb	r0, [r4, #10]
10055eb6:	1c40      	adds	r0, r0, #1
10055eb8:	72a0      	strb	r0, [r4, #10]
10055eba:	bd10      	pop	{r4, pc}

10055ebc <acl_list_insert_tail>:
10055ebc:	b510      	push	{r4, lr}
10055ebe:	4604      	mov	r4, r0
10055ec0:	2000      	movs	r0, #0
10055ec2:	6008      	str	r0, [r1, #0]
10055ec4:	6820      	ldr	r0, [r4, #0]
10055ec6:	2800      	cmp	r0, #0
10055ec8:	d00c      	beq.n	10055ee4 <acl_list_insert_tail+0x28>
10055eca:	6860      	ldr	r0, [r4, #4]
10055ecc:	6001      	str	r1, [r0, #0]
10055ece:	4608      	mov	r0, r1
10055ed0:	6061      	str	r1, [r4, #4]
10055ed2:	f7fa fc1d 	bl	10050710 <PM_Get_Mem_Buff_Count>
10055ed6:	7ae1      	ldrb	r1, [r4, #11]
10055ed8:	1840      	adds	r0, r0, r1
10055eda:	72e0      	strb	r0, [r4, #11]
10055edc:	7aa0      	ldrb	r0, [r4, #10]
10055ede:	1c40      	adds	r0, r0, #1
10055ee0:	72a0      	strb	r0, [r4, #10]
10055ee2:	bd10      	pop	{r4, pc}
10055ee4:	6021      	str	r1, [r4, #0]
10055ee6:	e7f2      	b.n	10055ece <acl_list_insert_tail+0x12>

10055ee8 <acl_list_is_empty>:
10055ee8:	6800      	ldr	r0, [r0, #0]
10055eea:	2800      	cmp	r0, #0
10055eec:	d001      	beq.n	10055ef2 <acl_list_is_empty+0xa>
10055eee:	2000      	movs	r0, #0
10055ef0:	4770      	bx	lr
10055ef2:	2001      	movs	r0, #1
10055ef4:	4770      	bx	lr

10055ef6 <acl_list_remove>:
10055ef6:	b510      	push	{r4, lr}
10055ef8:	4604      	mov	r4, r0
10055efa:	6800      	ldr	r0, [r0, #0]
10055efc:	4288      	cmp	r0, r1
10055efe:	d109      	bne.n	10055f14 <acl_list_remove+0x1e>
10055f00:	6802      	ldr	r2, [r0, #0]
10055f02:	6022      	str	r2, [r4, #0]
10055f04:	2200      	movs	r2, #0
10055f06:	6002      	str	r2, [r0, #0]
10055f08:	6820      	ldr	r0, [r4, #0]
10055f0a:	2800      	cmp	r0, #0
10055f0c:	d10b      	bne.n	10055f26 <acl_list_remove+0x30>
10055f0e:	6062      	str	r2, [r4, #4]
10055f10:	e009      	b.n	10055f26 <acl_list_remove+0x30>
10055f12:	4610      	mov	r0, r2
10055f14:	6802      	ldr	r2, [r0, #0]
10055f16:	428a      	cmp	r2, r1
10055f18:	d1fb      	bne.n	10055f12 <acl_list_remove+0x1c>
10055f1a:	680a      	ldr	r2, [r1, #0]
10055f1c:	6002      	str	r2, [r0, #0]
10055f1e:	6862      	ldr	r2, [r4, #4]
10055f20:	428a      	cmp	r2, r1
10055f22:	d100      	bne.n	10055f26 <acl_list_remove+0x30>
10055f24:	6060      	str	r0, [r4, #4]
10055f26:	4608      	mov	r0, r1
10055f28:	f7fa fbf2 	bl	10050710 <PM_Get_Mem_Buff_Count>
10055f2c:	7ae1      	ldrb	r1, [r4, #11]
10055f2e:	1a08      	subs	r0, r1, r0
10055f30:	72e0      	strb	r0, [r4, #11]
10055f32:	7aa0      	ldrb	r0, [r4, #10]
10055f34:	1e40      	subs	r0, r0, #1
10055f36:	72a0      	strb	r0, [r4, #10]
10055f38:	bd10      	pop	{r4, pc}

10055f3a <acl_list_remove_head>:
10055f3a:	b510      	push	{r4, lr}
10055f3c:	4604      	mov	r4, r0
10055f3e:	6800      	ldr	r0, [r0, #0]
10055f40:	6008      	str	r0, [r1, #0]
10055f42:	6820      	ldr	r0, [r4, #0]
10055f44:	6802      	ldr	r2, [r0, #0]
10055f46:	6022      	str	r2, [r4, #0]
10055f48:	2200      	movs	r2, #0
10055f4a:	6002      	str	r2, [r0, #0]
10055f4c:	6820      	ldr	r0, [r4, #0]
10055f4e:	2800      	cmp	r0, #0
10055f50:	d100      	bne.n	10055f54 <acl_list_remove_head+0x1a>
10055f52:	6062      	str	r2, [r4, #4]
10055f54:	6808      	ldr	r0, [r1, #0]
10055f56:	f7fa fbdb 	bl	10050710 <PM_Get_Mem_Buff_Count>
10055f5a:	7ae1      	ldrb	r1, [r4, #11]
10055f5c:	1a08      	subs	r0, r1, r0
10055f5e:	72e0      	strb	r0, [r4, #11]
10055f60:	7aa0      	ldrb	r0, [r4, #10]
10055f62:	1e40      	subs	r0, r0, #1
10055f64:	72a0      	strb	r0, [r4, #10]
10055f66:	bd10      	pop	{r4, pc}

10055f68 <advance_wakeup_timer>:
10055f68:	b5f1      	push	{r0, r4, r5, r6, r7, lr}
10055f6a:	4ff7      	ldr	r7, [pc, #988]	; (10056348 <advance_wakeup_timer+0x3e0>)
10055f6c:	207b      	movs	r0, #123	; 0x7b
10055f6e:	6839      	ldr	r1, [r7, #0]
10055f70:	0100      	lsls	r0, r0, #4
10055f72:	180d      	adds	r5, r1, r0
10055f74:	4608      	mov	r0, r1
10055f76:	b096      	sub	sp, #88	; 0x58
10055f78:	3068      	adds	r0, #104	; 0x68
10055f7a:	9012      	str	r0, [sp, #72]	; 0x48
10055f7c:	2009      	movs	r0, #9
10055f7e:	0200      	lsls	r0, r0, #8
10055f80:	1808      	adds	r0, r1, r0
10055f82:	6b00      	ldr	r0, [r0, #48]	; 0x30
10055f84:	9013      	str	r0, [sp, #76]	; 0x4c
10055f86:	2041      	movs	r0, #65	; 0x41
10055f88:	0140      	lsls	r0, r0, #5
10055f8a:	180e      	adds	r6, r1, r0
10055f8c:	2009      	movs	r0, #9
10055f8e:	06c0      	lsls	r0, r0, #27
10055f90:	6900      	ldr	r0, [r0, #16]
10055f92:	9007      	str	r0, [sp, #28]
10055f94:	2000      	movs	r0, #0
10055f96:	9003      	str	r0, [sp, #12]
10055f98:	2408      	movs	r4, #8
10055f9a:	48ec      	ldr	r0, [pc, #944]	; (1005634c <advance_wakeup_timer+0x3e4>)
10055f9c:	f7fc f914 	bl	100521c8 <machine_time_trans>
10055fa0:	9002      	str	r0, [sp, #8]
10055fa2:	2000      	movs	r0, #0
10055fa4:	9014      	str	r0, [sp, #80]	; 0x50
10055fa6:	b672      	cpsid	i
10055fa8:	6838      	ldr	r0, [r7, #0]
10055faa:	22f7      	movs	r2, #247	; 0xf7
10055fac:	3040      	adds	r0, #64	; 0x40
10055fae:	79c1      	ldrb	r1, [r0, #7]
10055fb0:	4011      	ands	r1, r2
10055fb2:	71c1      	strb	r1, [r0, #7]
10055fb4:	9812      	ldr	r0, [sp, #72]	; 0x48
10055fb6:	2101      	movs	r1, #1
10055fb8:	7101      	strb	r1, [r0, #4]
10055fba:	9812      	ldr	r0, [sp, #72]	; 0x48
10055fbc:	6801      	ldr	r1, [r0, #0]
10055fbe:	074a      	lsls	r2, r1, #29
10055fc0:	0f52      	lsrs	r2, r2, #29
10055fc2:	7142      	strb	r2, [r0, #5]
10055fc4:	08c9      	lsrs	r1, r1, #3
10055fc6:	9812      	ldr	r0, [sp, #72]	; 0x48
10055fc8:	00c9      	lsls	r1, r1, #3
10055fca:	6001      	str	r1, [r0, #0]
10055fcc:	b662      	cpsie	i
10055fce:	9816      	ldr	r0, [sp, #88]	; 0x58
10055fd0:	2800      	cmp	r0, #0
10055fd2:	d001      	beq.n	10055fd8 <advance_wakeup_timer+0x70>
10055fd4:	9807      	ldr	r0, [sp, #28]
10055fd6:	e00d      	b.n	10055ff4 <advance_wakeup_timer+0x8c>
10055fd8:	2064      	movs	r0, #100	; 0x64
10055fda:	f7fc f8f5 	bl	100521c8 <machine_time_trans>
10055fde:	9907      	ldr	r1, [sp, #28]
10055fe0:	1842      	adds	r2, r0, r1
10055fe2:	48db      	ldr	r0, [pc, #876]	; (10056350 <advance_wakeup_timer+0x3e8>)
10055fe4:	7a41      	ldrb	r1, [r0, #9]
10055fe6:	48d8      	ldr	r0, [pc, #864]	; (10056348 <advance_wakeup_timer+0x3e0>)
10055fe8:	6800      	ldr	r0, [r0, #0]
10055fea:	6a80      	ldr	r0, [r0, #40]	; 0x28
10055fec:	1808      	adds	r0, r1, r0
10055fee:	1810      	adds	r0, r2, r0
10055ff0:	0200      	lsls	r0, r0, #8
10055ff2:	0a00      	lsrs	r0, r0, #8
10055ff4:	f7f9 fe2a 	bl	1004fc4c <advance_slave_timing_MultiSlave>
10055ff8:	6b68      	ldr	r0, [r5, #52]	; 0x34
10055ffa:	9004      	str	r0, [sp, #16]
10055ffc:	203a      	movs	r0, #58	; 0x3a
10055ffe:	5d40      	ldrb	r0, [r0, r5]
10056000:	900e      	str	r0, [sp, #56]	; 0x38
10056002:	2808      	cmp	r0, #8
10056004:	d242      	bcs.n	1005608c <advance_wakeup_timer+0x124>
10056006:	2001      	movs	r0, #1
10056008:	9003      	str	r0, [sp, #12]
1005600a:	980e      	ldr	r0, [sp, #56]	; 0x38
1005600c:	2158      	movs	r1, #88	; 0x58
1005600e:	4348      	muls	r0, r1
10056010:	9913      	ldr	r1, [sp, #76]	; 0x4c
10056012:	1840      	adds	r0, r0, r1
10056014:	9005      	str	r0, [sp, #20]
10056016:	48cf      	ldr	r0, [pc, #828]	; (10056354 <advance_wakeup_timer+0x3ec>)
10056018:	6a87      	ldr	r7, [r0, #40]	; 0x28
1005601a:	48cd      	ldr	r0, [pc, #820]	; (10056350 <advance_wakeup_timer+0x3e8>)
1005601c:	7a40      	ldrb	r0, [r0, #9]
1005601e:	00c0      	lsls	r0, r0, #3
10056020:	f7fc f934 	bl	1005228c <system_time_trans>
10056024:	4601      	mov	r1, r0
10056026:	9805      	ldr	r0, [sp, #20]
10056028:	8f00      	ldrh	r0, [r0, #56]	; 0x38
1005602a:	0240      	lsls	r0, r0, #9
1005602c:	1808      	adds	r0, r1, r0
1005602e:	49c7      	ldr	r1, [pc, #796]	; (1005634c <advance_wakeup_timer+0x3e4>)
10056030:	4249      	negs	r1, r1
10056032:	1840      	adds	r0, r0, r1
10056034:	4287      	cmp	r7, r0
10056036:	d200      	bcs.n	1005603a <advance_wakeup_timer+0xd2>
10056038:	4638      	mov	r0, r7
1005603a:	6570      	str	r0, [r6, #84]	; 0x54
1005603c:	20b8      	movs	r0, #184	; 0xb8
1005603e:	5981      	ldr	r1, [r0, r6]
10056040:	790a      	ldrb	r2, [r1, #4]
10056042:	7948      	ldrb	r0, [r1, #5]
10056044:	7989      	ldrb	r1, [r1, #6]
10056046:	0200      	lsls	r0, r0, #8
10056048:	4310      	orrs	r0, r2
1005604a:	0789      	lsls	r1, r1, #30
1005604c:	0b89      	lsrs	r1, r1, #14
1005604e:	4301      	orrs	r1, r0
10056050:	9805      	ldr	r0, [sp, #20]
10056052:	31ff      	adds	r1, #255	; 0xff
10056054:	3040      	adds	r0, #64	; 0x40
10056056:	8a02      	ldrh	r2, [r0, #16]
10056058:	8a40      	ldrh	r0, [r0, #18]
1005605a:	31c3      	adds	r1, #195	; 0xc3
1005605c:	1810      	adds	r0, r2, r0
1005605e:	1840      	adds	r0, r0, r1
10056060:	f7fc fa3c 	bl	100524dc <microseconds_to_machine_time>
10056064:	4607      	mov	r7, r0
10056066:	205f      	movs	r0, #95	; 0x5f
10056068:	0100      	lsls	r0, r0, #4
1005606a:	f7fc f8ad 	bl	100521c8 <machine_time_trans>
1005606e:	42b8      	cmp	r0, r7
10056070:	d904      	bls.n	1005607c <advance_wakeup_timer+0x114>
10056072:	205f      	movs	r0, #95	; 0x5f
10056074:	0100      	lsls	r0, r0, #4
10056076:	f7fc f8a7 	bl	100521c8 <machine_time_trans>
1005607a:	e000      	b.n	1005607e <advance_wakeup_timer+0x116>
1005607c:	4638      	mov	r0, r7
1005607e:	9904      	ldr	r1, [sp, #16]
10056080:	1809      	adds	r1, r1, r0
10056082:	48b3      	ldr	r0, [pc, #716]	; (10056350 <advance_wakeup_timer+0x3e8>)
10056084:	7a40      	ldrb	r0, [r0, #9]
10056086:	00c0      	lsls	r0, r0, #3
10056088:	1808      	adds	r0, r1, r0
1005608a:	9014      	str	r0, [sp, #80]	; 0x50
1005608c:	6d70      	ldr	r0, [r6, #84]	; 0x54
1005608e:	f7fc f89b 	bl	100521c8 <machine_time_trans>
10056092:	9904      	ldr	r1, [sp, #16]
10056094:	1840      	adds	r0, r0, r1
10056096:	9001      	str	r0, [sp, #4]
10056098:	2000      	movs	r0, #0
1005609a:	4607      	mov	r7, r0
1005609c:	9006      	str	r0, [sp, #24]
1005609e:	7d28      	ldrb	r0, [r5, #20]
100560a0:	2800      	cmp	r0, #0
100560a2:	d109      	bne.n	100560b8 <advance_wakeup_timer+0x150>
100560a4:	980e      	ldr	r0, [sp, #56]	; 0x38
100560a6:	2808      	cmp	r0, #8
100560a8:	d306      	bcc.n	100560b8 <advance_wakeup_timer+0x150>
100560aa:	49a9      	ldr	r1, [pc, #676]	; (10056350 <advance_wakeup_timer+0x3e8>)
100560ac:	2000      	movs	r0, #0
100560ae:	8008      	strh	r0, [r1, #0]
100560b0:	2109      	movs	r1, #9
100560b2:	06c9      	lsls	r1, r1, #27
100560b4:	6048      	str	r0, [r1, #4]
100560b6:	e165      	b.n	10056384 <advance_wakeup_timer+0x41c>
100560b8:	6868      	ldr	r0, [r5, #4]
100560ba:	9008      	str	r0, [sp, #32]
100560bc:	6c68      	ldr	r0, [r5, #68]	; 0x44
100560be:	900a      	str	r0, [sp, #40]	; 0x28
100560c0:	6829      	ldr	r1, [r5, #0]
100560c2:	9807      	ldr	r0, [sp, #28]
100560c4:	1a40      	subs	r0, r0, r1
100560c6:	0200      	lsls	r0, r0, #8
100560c8:	1204      	asrs	r4, r0, #8
100560ca:	48a1      	ldr	r0, [pc, #644]	; (10056350 <advance_wakeup_timer+0x3e8>)
100560cc:	8800      	ldrh	r0, [r0, #0]
100560ce:	0740      	lsls	r0, r0, #29
100560d0:	0f40      	lsrs	r0, r0, #29
100560d2:	f7fa f89b 	bl	1005020c <is_slave>
100560d6:	2800      	cmp	r0, #0
100560d8:	d001      	beq.n	100560de <advance_wakeup_timer+0x176>
100560da:	2000      	movs	r0, #0
100560dc:	e007      	b.n	100560ee <advance_wakeup_timer+0x186>
100560de:	2c00      	cmp	r4, #0
100560e0:	dbfb      	blt.n	100560da <advance_wakeup_timer+0x172>
100560e2:	4620      	mov	r0, r4
100560e4:	f7fc f8d2 	bl	1005228c <system_time_trans>
100560e8:	990a      	ldr	r1, [sp, #40]	; 0x28
100560ea:	4288      	cmp	r0, r1
100560ec:	da00      	bge.n	100560f0 <advance_wakeup_timer+0x188>
100560ee:	900a      	str	r0, [sp, #40]	; 0x28
100560f0:	2001      	movs	r0, #1
100560f2:	0780      	lsls	r0, r0, #30
100560f4:	2408      	movs	r4, #8
100560f6:	900c      	str	r0, [sp, #48]	; 0x30
100560f8:	2000      	movs	r0, #0
100560fa:	900f      	str	r0, [sp, #60]	; 0x3c
100560fc:	7d29      	ldrb	r1, [r5, #20]
100560fe:	e03a      	b.n	10056176 <advance_wakeup_timer+0x20e>
10056100:	9a0e      	ldr	r2, [sp, #56]	; 0x38
10056102:	4290      	cmp	r0, r2
10056104:	d034      	beq.n	10056170 <advance_wakeup_timer+0x208>
10056106:	4a90      	ldr	r2, [pc, #576]	; (10056348 <advance_wakeup_timer+0x3e0>)
10056108:	6812      	ldr	r2, [r2, #0]
1005610a:	3220      	adds	r2, #32
1005610c:	7d92      	ldrb	r2, [r2, #22]
1005610e:	0712      	lsls	r2, r2, #28
10056110:	0f12      	lsrs	r2, r2, #28
10056112:	4282      	cmp	r2, r0
10056114:	d02c      	beq.n	10056170 <advance_wakeup_timer+0x208>
10056116:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
10056118:	0042      	lsls	r2, r0, #1
1005611a:	9306      	str	r3, [sp, #24]
1005611c:	9207      	str	r2, [sp, #28]
1005611e:	5a9f      	ldrh	r7, [r3, r2]
10056120:	9705      	str	r7, [sp, #20]
10056122:	6a6b      	ldr	r3, [r5, #36]	; 0x24
10056124:	5a9a      	ldrh	r2, [r3, r2]
10056126:	9b08      	ldr	r3, [sp, #32]
10056128:	0192      	lsls	r2, r2, #6
1005612a:	437b      	muls	r3, r7
1005612c:	18d3      	adds	r3, r2, r3
1005612e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10056130:	469c      	mov	ip, r3
10056132:	4293      	cmp	r3, r2
10056134:	da12      	bge.n	1005615c <advance_wakeup_timer+0x1f4>
10056136:	07ca      	lsls	r2, r1, #31
10056138:	d010      	beq.n	1005615c <advance_wakeup_timer+0x1f4>
1005613a:	6b2a      	ldr	r2, [r5, #48]	; 0x30
1005613c:	9b07      	ldr	r3, [sp, #28]
1005613e:	9f08      	ldr	r7, [sp, #32]
10056140:	5ad2      	ldrh	r2, [r2, r3]
10056142:	1c52      	adds	r2, r2, #1
10056144:	b293      	uxth	r3, r2
10056146:	461a      	mov	r2, r3
10056148:	437a      	muls	r2, r7
1005614a:	9f05      	ldr	r7, [sp, #20]
1005614c:	4494      	add	ip, r2
1005614e:	18fa      	adds	r2, r7, r3
10056150:	b292      	uxth	r2, r2
10056152:	4613      	mov	r3, r2
10056154:	9205      	str	r2, [sp, #20]
10056156:	9f07      	ldr	r7, [sp, #28]
10056158:	9a06      	ldr	r2, [sp, #24]
1005615a:	53d3      	strh	r3, [r2, r7]
1005615c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
1005615e:	4663      	mov	r3, ip
10056160:	4594      	cmp	ip, r2
10056162:	d205      	bcs.n	10056170 <advance_wakeup_timer+0x208>
10056164:	07ca      	lsls	r2, r1, #31
10056166:	d003      	beq.n	10056170 <advance_wakeup_timer+0x208>
10056168:	9a05      	ldr	r2, [sp, #20]
1005616a:	930c      	str	r3, [sp, #48]	; 0x30
1005616c:	4604      	mov	r4, r0
1005616e:	920f      	str	r2, [sp, #60]	; 0x3c
10056170:	0849      	lsrs	r1, r1, #1
10056172:	1c40      	adds	r0, r0, #1
10056174:	b2c0      	uxtb	r0, r0
10056176:	2900      	cmp	r1, #0
10056178:	d1c2      	bne.n	10056100 <advance_wakeup_timer+0x198>
1005617a:	980c      	ldr	r0, [sp, #48]	; 0x30
1005617c:	f7fc f824 	bl	100521c8 <machine_time_trans>
10056180:	6829      	ldr	r1, [r5, #0]
10056182:	1847      	adds	r7, r0, r1
10056184:	6aa8      	ldr	r0, [r5, #40]	; 0x28
10056186:	0061      	lsls	r1, r4, #1
10056188:	5a40      	ldrh	r0, [r0, r1]
1005618a:	0180      	lsls	r0, r0, #6
1005618c:	f7fc f81c 	bl	100521c8 <machine_time_trans>
10056190:	19c0      	adds	r0, r0, r7
10056192:	9006      	str	r0, [sp, #24]
10056194:	486e      	ldr	r0, [pc, #440]	; (10056350 <advance_wakeup_timer+0x3e8>)
10056196:	7a40      	ldrb	r0, [r0, #9]
10056198:	2258      	movs	r2, #88	; 0x58
1005619a:	00c1      	lsls	r1, r0, #3
1005619c:	486a      	ldr	r0, [pc, #424]	; (10056348 <advance_wakeup_timer+0x3e0>)
1005619e:	6800      	ldr	r0, [r0, #0]
100561a0:	5c12      	ldrb	r2, [r2, r0]
100561a2:	2a00      	cmp	r2, #0
100561a4:	4a6c      	ldr	r2, [pc, #432]	; (10056358 <advance_wakeup_timer+0x3f0>)
100561a6:	6912      	ldr	r2, [r2, #16]
100561a8:	d00c      	beq.n	100561c4 <advance_wakeup_timer+0x25c>
100561aa:	1abb      	subs	r3, r7, r2
100561ac:	9a02      	ldr	r2, [sp, #8]
100561ae:	0052      	lsls	r2, r2, #1
100561b0:	1a9b      	subs	r3, r3, r2
100561b2:	9a16      	ldr	r2, [sp, #88]	; 0x58
100561b4:	2a00      	cmp	r2, #0
100561b6:	d001      	beq.n	100561bc <advance_wakeup_timer+0x254>
100561b8:	2000      	movs	r0, #0
100561ba:	e001      	b.n	100561c0 <advance_wakeup_timer+0x258>
100561bc:	6a80      	ldr	r0, [r0, #40]	; 0x28
100561be:	1840      	adds	r0, r0, r1
100561c0:	1a18      	subs	r0, r3, r0
100561c2:	e00b      	b.n	100561dc <advance_wakeup_timer+0x274>
100561c4:	1abb      	subs	r3, r7, r2
100561c6:	9a02      	ldr	r2, [sp, #8]
100561c8:	0852      	lsrs	r2, r2, #1
100561ca:	1a9a      	subs	r2, r3, r2
100561cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
100561ce:	2b00      	cmp	r3, #0
100561d0:	d001      	beq.n	100561d6 <advance_wakeup_timer+0x26e>
100561d2:	2000      	movs	r0, #0
100561d4:	e001      	b.n	100561da <advance_wakeup_timer+0x272>
100561d6:	6a80      	ldr	r0, [r0, #40]	; 0x28
100561d8:	1840      	adds	r0, r0, r1
100561da:	1a10      	subs	r0, r2, r0
100561dc:	0200      	lsls	r0, r0, #8
100561de:	0a00      	lsrs	r0, r0, #8
100561e0:	2101      	movs	r1, #1
100561e2:	05c9      	lsls	r1, r1, #23
100561e4:	9005      	str	r0, [sp, #20]
100561e6:	4288      	cmp	r0, r1
100561e8:	d309      	bcc.n	100561fe <advance_wakeup_timer+0x296>
100561ea:	2c08      	cmp	r4, #8
100561ec:	d07e      	beq.n	100562ec <advance_wakeup_timer+0x384>
100561ee:	4620      	mov	r0, r4
100561f0:	f7fa ff8a 	bl	10051108 <cancel_master>
100561f4:	4955      	ldr	r1, [pc, #340]	; (1005634c <advance_wakeup_timer+0x3e4>)
100561f6:	980c      	ldr	r0, [sp, #48]	; 0x30
100561f8:	1840      	adds	r0, r0, r1
100561fa:	900a      	str	r0, [sp, #40]	; 0x28
100561fc:	6468      	str	r0, [r5, #68]	; 0x44
100561fe:	2101      	movs	r1, #1
10056200:	9805      	ldr	r0, [sp, #20]
10056202:	05c9      	lsls	r1, r1, #23
10056204:	4288      	cmp	r0, r1
10056206:	d300      	bcc.n	1005620a <advance_wakeup_timer+0x2a2>
10056208:	e772      	b.n	100560f0 <advance_wakeup_timer+0x188>
1005620a:	2c08      	cmp	r4, #8
1005620c:	d06e      	beq.n	100562ec <advance_wakeup_timer+0x384>
1005620e:	980f      	ldr	r0, [sp, #60]	; 0x3c
10056210:	2800      	cmp	r0, #0
10056212:	d02d      	beq.n	10056270 <advance_wakeup_timer+0x308>
10056214:	9908      	ldr	r1, [sp, #32]
10056216:	4348      	muls	r0, r1
10056218:	9005      	str	r0, [sp, #20]
1005621a:	f7fb ffd5 	bl	100521c8 <machine_time_trans>
1005621e:	6829      	ldr	r1, [r5, #0]
10056220:	1840      	adds	r0, r0, r1
10056222:	0200      	lsls	r0, r0, #8
10056224:	0a00      	lsrs	r0, r0, #8
10056226:	6028      	str	r0, [r5, #0]
10056228:	6c69      	ldr	r1, [r5, #68]	; 0x44
1005622a:	9805      	ldr	r0, [sp, #20]
1005622c:	1a08      	subs	r0, r1, r0
1005622e:	6468      	str	r0, [r5, #68]	; 0x44
10056230:	990c      	ldr	r1, [sp, #48]	; 0x30
10056232:	9805      	ldr	r0, [sp, #20]
10056234:	1a08      	subs	r0, r1, r0
10056236:	2100      	movs	r1, #0
10056238:	900c      	str	r0, [sp, #48]	; 0x30
1005623a:	e013      	b.n	10056264 <advance_wakeup_timer+0x2fc>
1005623c:	6aea      	ldr	r2, [r5, #44]	; 0x2c
1005623e:	0048      	lsls	r0, r1, #1
10056240:	9005      	str	r0, [sp, #20]
10056242:	4694      	mov	ip, r2
10056244:	5a10      	ldrh	r0, [r2, r0]
10056246:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
10056248:	1a80      	subs	r0, r0, r2
1005624a:	e004      	b.n	10056256 <advance_wakeup_timer+0x2ee>
1005624c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
1005624e:	9a05      	ldr	r2, [sp, #20]
10056250:	1c40      	adds	r0, r0, #1
10056252:	5a9a      	ldrh	r2, [r3, r2]
10056254:	1810      	adds	r0, r2, r0
10056256:	2800      	cmp	r0, #0
10056258:	dbf8      	blt.n	1005624c <advance_wakeup_timer+0x2e4>
1005625a:	9b05      	ldr	r3, [sp, #20]
1005625c:	4662      	mov	r2, ip
1005625e:	1c49      	adds	r1, r1, #1
10056260:	52d0      	strh	r0, [r2, r3]
10056262:	b2c9      	uxtb	r1, r1
10056264:	4838      	ldr	r0, [pc, #224]	; (10056348 <advance_wakeup_timer+0x3e0>)
10056266:	6800      	ldr	r0, [r0, #0]
10056268:	30a0      	adds	r0, #160	; 0xa0
1005626a:	7b00      	ldrb	r0, [r0, #12]
1005626c:	4288      	cmp	r0, r1
1005626e:	d8e5      	bhi.n	1005623c <advance_wakeup_timer+0x2d4>
10056270:	980e      	ldr	r0, [sp, #56]	; 0x38
10056272:	2808      	cmp	r0, #8
10056274:	d276      	bcs.n	10056364 <advance_wakeup_timer+0x3fc>
10056276:	9804      	ldr	r0, [sp, #16]
10056278:	1bc0      	subs	r0, r0, r7
1005627a:	0201      	lsls	r1, r0, #8
1005627c:	2001      	movs	r0, #1
1005627e:	0a09      	lsrs	r1, r1, #8
10056280:	05c0      	lsls	r0, r0, #23
10056282:	4281      	cmp	r1, r0
10056284:	d322      	bcc.n	100562cc <advance_wakeup_timer+0x364>
10056286:	9802      	ldr	r0, [sp, #8]
10056288:	1a3a      	subs	r2, r7, r0
1005628a:	9814      	ldr	r0, [sp, #80]	; 0x50
1005628c:	1a10      	subs	r0, r2, r0
1005628e:	0201      	lsls	r1, r0, #8
10056290:	2001      	movs	r0, #1
10056292:	0a09      	lsrs	r1, r1, #8
10056294:	05c0      	lsls	r0, r0, #23
10056296:	4281      	cmp	r1, r0
10056298:	d301      	bcc.n	1005629e <advance_wakeup_timer+0x336>
1005629a:	9814      	ldr	r0, [sp, #80]	; 0x50
1005629c:	e00d      	b.n	100562ba <advance_wakeup_timer+0x352>
1005629e:	9901      	ldr	r1, [sp, #4]
100562a0:	1a51      	subs	r1, r2, r1
100562a2:	0209      	lsls	r1, r1, #8
100562a4:	0a09      	lsrs	r1, r1, #8
100562a6:	4281      	cmp	r1, r0
100562a8:	d308      	bcc.n	100562bc <advance_wakeup_timer+0x354>
100562aa:	2001      	movs	r0, #1
100562ac:	0240      	lsls	r0, r0, #9
100562ae:	f7fb ff8b 	bl	100521c8 <machine_time_trans>
100562b2:	9902      	ldr	r1, [sp, #8]
100562b4:	0049      	lsls	r1, r1, #1
100562b6:	1a79      	subs	r1, r7, r1
100562b8:	1a08      	subs	r0, r1, r0
100562ba:	9001      	str	r0, [sp, #4]
100562bc:	9901      	ldr	r1, [sp, #4]
100562be:	9804      	ldr	r0, [sp, #16]
100562c0:	1a08      	subs	r0, r1, r0
100562c2:	0200      	lsls	r0, r0, #8
100562c4:	0a00      	lsrs	r0, r0, #8
100562c6:	f7fb ffe1 	bl	1005228c <system_time_trans>
100562ca:	6570      	str	r0, [r6, #84]	; 0x54
100562cc:	9902      	ldr	r1, [sp, #8]
100562ce:	9801      	ldr	r0, [sp, #4]
100562d0:	1840      	adds	r0, r0, r1
100562d2:	1bc0      	subs	r0, r0, r7
100562d4:	0201      	lsls	r1, r0, #8
100562d6:	2001      	movs	r0, #1
100562d8:	0a09      	lsrs	r1, r1, #8
100562da:	05c0      	lsls	r0, r0, #23
100562dc:	4281      	cmp	r1, r0
100562de:	d255      	bcs.n	1005638c <advance_wakeup_timer+0x424>
100562e0:	9902      	ldr	r1, [sp, #8]
100562e2:	004a      	lsls	r2, r1, #1
100562e4:	9906      	ldr	r1, [sp, #24]
100562e6:	1852      	adds	r2, r2, r1
100562e8:	9904      	ldr	r1, [sp, #16]
100562ea:	e000      	b.n	100562ee <advance_wakeup_timer+0x386>
100562ec:	e04a      	b.n	10056384 <advance_wakeup_timer+0x41c>
100562ee:	1a51      	subs	r1, r2, r1
100562f0:	0209      	lsls	r1, r1, #8
100562f2:	0a09      	lsrs	r1, r1, #8
100562f4:	4281      	cmp	r1, r0
100562f6:	d235      	bcs.n	10056364 <advance_wakeup_timer+0x3fc>
100562f8:	980e      	ldr	r0, [sp, #56]	; 0x38
100562fa:	2158      	movs	r1, #88	; 0x58
100562fc:	4348      	muls	r0, r1
100562fe:	9913      	ldr	r1, [sp, #76]	; 0x4c
10056300:	1842      	adds	r2, r0, r1
10056302:	2058      	movs	r0, #88	; 0x58
10056304:	4621      	mov	r1, r4
10056306:	4341      	muls	r1, r0
10056308:	9813      	ldr	r0, [sp, #76]	; 0x4c
1005630a:	7bd3      	ldrb	r3, [r2, #15]
1005630c:	1808      	adds	r0, r1, r0
1005630e:	7bc1      	ldrb	r1, [r0, #15]
10056310:	4299      	cmp	r1, r3
10056312:	d301      	bcc.n	10056318 <advance_wakeup_timer+0x3b0>
10056314:	2110      	movs	r1, #16
10056316:	e000      	b.n	1005631a <advance_wakeup_timer+0x3b2>
10056318:	2100      	movs	r1, #0
1005631a:	06c9      	lsls	r1, r1, #27
1005631c:	d41e      	bmi.n	1005635c <advance_wakeup_timer+0x3f4>
1005631e:	7981      	ldrb	r1, [r0, #6]
10056320:	07ca      	lsls	r2, r1, #31
10056322:	d002      	beq.n	1005632a <advance_wakeup_timer+0x3c2>
10056324:	2172      	movs	r1, #114	; 0x72
10056326:	5b89      	ldrh	r1, [r1, r6]
10056328:	e003      	b.n	10056332 <advance_wakeup_timer+0x3ca>
1005632a:	0789      	lsls	r1, r1, #30
1005632c:	d507      	bpl.n	1005633e <advance_wakeup_timer+0x3d6>
1005632e:	2176      	movs	r1, #118	; 0x76
10056330:	5b89      	ldrh	r1, [r1, r6]
10056332:	8902      	ldrh	r2, [r0, #8]
10056334:	1a89      	subs	r1, r1, r2
10056336:	1e49      	subs	r1, r1, #1
10056338:	0409      	lsls	r1, r1, #16
1005633a:	0c09      	lsrs	r1, r1, #16
1005633c:	d012      	beq.n	10056364 <advance_wakeup_timer+0x3fc>
1005633e:	7940      	ldrb	r0, [r0, #5]
10056340:	0600      	lsls	r0, r0, #24
10056342:	d40f      	bmi.n	10056364 <advance_wakeup_timer+0x3fc>
10056344:	e022      	b.n	1005638c <advance_wakeup_timer+0x424>
10056346:	e00d      	b.n	10056364 <advance_wakeup_timer+0x3fc>
10056348:	2000098c 	.word	0x2000098c
1005634c:	00000266 	.word	0x00000266
10056350:	200000c0 	.word	0x200000c0
10056354:	200002cc 	.word	0x200002cc
10056358:	48000000 	.word	0x48000000
1005635c:	7950      	ldrb	r0, [r2, #5]
1005635e:	2190      	movs	r1, #144	; 0x90
10056360:	4208      	tst	r0, r1
10056362:	d113      	bne.n	1005638c <advance_wakeup_timer+0x424>
10056364:	2c08      	cmp	r4, #8
10056366:	d015      	beq.n	10056394 <advance_wakeup_timer+0x42c>
10056368:	499e      	ldr	r1, [pc, #632]	; (100565e4 <advance_wakeup_timer+0x67c>)
1005636a:	980c      	ldr	r0, [sp, #48]	; 0x30
1005636c:	1840      	adds	r0, r0, r1
1005636e:	6468      	str	r0, [r5, #68]	; 0x44
10056370:	2058      	movs	r0, #88	; 0x58
10056372:	9913      	ldr	r1, [sp, #76]	; 0x4c
10056374:	4360      	muls	r0, r4
10056376:	1840      	adds	r0, r0, r1
10056378:	7880      	ldrb	r0, [r0, #2]
1005637a:	0740      	lsls	r0, r0, #29
1005637c:	0f40      	lsrs	r0, r0, #29
1005637e:	2801      	cmp	r0, #1
10056380:	d03f      	beq.n	10056402 <advance_wakeup_timer+0x49a>
10056382:	e007      	b.n	10056394 <advance_wakeup_timer+0x42c>
10056384:	9803      	ldr	r0, [sp, #12]
10056386:	2800      	cmp	r0, #0
10056388:	d004      	beq.n	10056394 <advance_wakeup_timer+0x42c>
1005638a:	d003      	beq.n	10056394 <advance_wakeup_timer+0x42c>
1005638c:	9f04      	ldr	r7, [sp, #16]
1005638e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
10056390:	9801      	ldr	r0, [sp, #4]
10056392:	9006      	str	r0, [sp, #24]
10056394:	0238      	lsls	r0, r7, #8
10056396:	0a00      	lsrs	r0, r0, #8
10056398:	9000      	str	r0, [sp, #0]
1005639a:	9806      	ldr	r0, [sp, #24]
1005639c:	0201      	lsls	r1, r0, #8
1005639e:	0a09      	lsrs	r1, r1, #8
100563a0:	2001      	movs	r0, #1
100563a2:	0280      	lsls	r0, r0, #10
100563a4:	9106      	str	r1, [sp, #24]
100563a6:	f7fb ff0f 	bl	100521c8 <machine_time_trans>
100563aa:	9003      	str	r0, [sp, #12]
100563ac:	2001      	movs	r0, #1
100563ae:	0240      	lsls	r0, r0, #9
100563b0:	f7fb ff0a 	bl	100521c8 <machine_time_trans>
100563b4:	4607      	mov	r7, r0
100563b6:	9906      	ldr	r1, [sp, #24]
100563b8:	9800      	ldr	r0, [sp, #0]
100563ba:	1a08      	subs	r0, r1, r0
100563bc:	0200      	lsls	r0, r0, #8
100563be:	1200      	asrs	r0, r0, #8
100563c0:	2800      	cmp	r0, #0
100563c2:	dd09      	ble.n	100563d8 <advance_wakeup_timer+0x470>
100563c4:	9903      	ldr	r1, [sp, #12]
100563c6:	0a00      	lsrs	r0, r0, #8
100563c8:	4288      	cmp	r0, r1
100563ca:	d900      	bls.n	100563ce <advance_wakeup_timer+0x466>
100563cc:	4601      	mov	r1, r0
100563ce:	9103      	str	r1, [sp, #12]
100563d0:	42b8      	cmp	r0, r7
100563d2:	d800      	bhi.n	100563d6 <advance_wakeup_timer+0x46e>
100563d4:	4638      	mov	r0, r7
100563d6:	4607      	mov	r7, r0
100563d8:	2c08      	cmp	r4, #8
100563da:	d07d      	beq.n	100564d8 <advance_wakeup_timer+0x570>
100563dc:	4882      	ldr	r0, [pc, #520]	; (100565e8 <advance_wakeup_timer+0x680>)
100563de:	8800      	ldrh	r0, [r0, #0]
100563e0:	0740      	lsls	r0, r0, #29
100563e2:	0f40      	lsrs	r0, r0, #29
100563e4:	42a0      	cmp	r0, r4
100563e6:	d04f      	beq.n	10056488 <advance_wakeup_timer+0x520>
100563e8:	2058      	movs	r0, #88	; 0x58
100563ea:	9913      	ldr	r1, [sp, #76]	; 0x4c
100563ec:	4360      	muls	r0, r4
100563ee:	1840      	adds	r0, r0, r1
100563f0:	9005      	str	r0, [sp, #20]
100563f2:	7880      	ldrb	r0, [r0, #2]
100563f4:	0740      	lsls	r0, r0, #29
100563f6:	0f40      	lsrs	r0, r0, #29
100563f8:	2805      	cmp	r0, #5
100563fa:	d012      	beq.n	10056422 <advance_wakeup_timer+0x4ba>
100563fc:	2802      	cmp	r0, #2
100563fe:	d010      	beq.n	10056422 <advance_wakeup_timer+0x4ba>
10056400:	e042      	b.n	10056488 <advance_wakeup_timer+0x520>
10056402:	4631      	mov	r1, r6
10056404:	3180      	adds	r1, #128	; 0x80
10056406:	2003      	movs	r0, #3
10056408:	688a      	ldr	r2, [r1, #8]
1005640a:	0240      	lsls	r0, r0, #9
1005640c:	4282      	cmp	r2, r0
1005640e:	d0c1      	beq.n	10056394 <advance_wakeup_timer+0x42c>
10056410:	68c9      	ldr	r1, [r1, #12]
10056412:	4281      	cmp	r1, r0
10056414:	d0be      	beq.n	10056394 <advance_wakeup_timer+0x42c>
10056416:	f7f6 fa1f 	bl	1004c858 <Hal_Get_Random_Number>
1005641a:	0540      	lsls	r0, r0, #21
1005641c:	0d40      	lsrs	r0, r0, #21
1005641e:	19c7      	adds	r7, r0, r7
10056420:	e7b8      	b.n	10056394 <advance_wakeup_timer+0x42c>
10056422:	9805      	ldr	r0, [sp, #20]
10056424:	01a1      	lsls	r1, r4, #6
10056426:	6a00      	ldr	r0, [r0, #32]
10056428:	9002      	str	r0, [sp, #8]
1005642a:	486f      	ldr	r0, [pc, #444]	; (100565e8 <advance_wakeup_timer+0x680>)
1005642c:	1808      	adds	r0, r1, r0
1005642e:	8b81      	ldrh	r1, [r0, #28]
10056430:	9805      	ldr	r0, [sp, #20]
10056432:	b280      	uxth	r0, r0
10056434:	4281      	cmp	r1, r0
10056436:	d027      	beq.n	10056488 <advance_wakeup_timer+0x520>
10056438:	9802      	ldr	r0, [sp, #8]
1005643a:	2800      	cmp	r0, #0
1005643c:	d024      	beq.n	10056488 <advance_wakeup_timer+0x520>
1005643e:	9902      	ldr	r1, [sp, #8]
10056440:	9805      	ldr	r0, [sp, #20]
10056442:	f7f7 fa35 	bl	1004d8b0 <copy_tx_data_packet>
10056446:	4969      	ldr	r1, [pc, #420]	; (100565ec <advance_wakeup_timer+0x684>)
10056448:	9802      	ldr	r0, [sp, #8]
1005644a:	680a      	ldr	r2, [r1, #0]
1005644c:	7c00      	ldrb	r0, [r0, #16]
1005644e:	2109      	movs	r1, #9
10056450:	0209      	lsls	r1, r1, #8
10056452:	06c0      	lsls	r0, r0, #27
10056454:	1851      	adds	r1, r2, r1
10056456:	0ec0      	lsrs	r0, r0, #27
10056458:	6bc9      	ldr	r1, [r1, #60]	; 0x3c
1005645a:	1c80      	adds	r0, r0, #2
1005645c:	1840      	adds	r0, r0, r1
1005645e:	9002      	str	r0, [sp, #8]
10056460:	9805      	ldr	r0, [sp, #20]
10056462:	2121      	movs	r1, #33	; 0x21
10056464:	6900      	ldr	r0, [r0, #16]
10056466:	0189      	lsls	r1, r1, #6
10056468:	4208      	tst	r0, r1
1005646a:	d00d      	beq.n	10056488 <advance_wakeup_timer+0x520>
1005646c:	f7f6 fad1 	bl	1004ca12 <data_length_extension_csr_ucfg>
10056470:	2801      	cmp	r0, #1
10056472:	d03b      	beq.n	100564ec <advance_wakeup_timer+0x584>
10056474:	201f      	movs	r0, #31
10056476:	9902      	ldr	r1, [sp, #8]
10056478:	7849      	ldrb	r1, [r1, #1]
1005647a:	4208      	tst	r0, r1
1005647c:	d004      	beq.n	10056488 <advance_wakeup_timer+0x520>
1005647e:	9802      	ldr	r0, [sp, #8]
10056480:	7840      	ldrb	r0, [r0, #1]
10056482:	9902      	ldr	r1, [sp, #8]
10056484:	1d00      	adds	r0, r0, #4
10056486:	7048      	strb	r0, [r1, #1]
10056488:	4858      	ldr	r0, [pc, #352]	; (100565ec <advance_wakeup_timer+0x684>)
1005648a:	4957      	ldr	r1, [pc, #348]	; (100565e8 <advance_wakeup_timer+0x680>)
1005648c:	6800      	ldr	r0, [r0, #0]
1005648e:	3020      	adds	r0, #32
10056490:	7484      	strb	r4, [r0, #18]
10056492:	2048      	movs	r0, #72	; 0x48
10056494:	4320      	orrs	r0, r4
10056496:	8008      	strh	r0, [r1, #0]
10056498:	4633      	mov	r3, r6
1005649a:	3380      	adds	r3, #128	; 0x80
1005649c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
1005649e:	7a90      	ldrb	r0, [r2, #10]
100564a0:	06c1      	lsls	r1, r0, #27
100564a2:	0ec9      	lsrs	r1, r1, #27
100564a4:	0160      	lsls	r0, r4, #5
100564a6:	4301      	orrs	r1, r0
100564a8:	7291      	strb	r1, [r2, #10]
100564aa:	6b9a      	ldr	r2, [r3, #56]	; 0x38
100564ac:	7a91      	ldrb	r1, [r2, #10]
100564ae:	06c9      	lsls	r1, r1, #27
100564b0:	0ec9      	lsrs	r1, r1, #27
100564b2:	4301      	orrs	r1, r0
100564b4:	7291      	strb	r1, [r2, #10]
100564b6:	9800      	ldr	r0, [sp, #0]
100564b8:	6530      	str	r0, [r6, #80]	; 0x50
100564ba:	f001 fc49 	bl	10057d50 <LL_Sleep_Req>
100564be:	2801      	cmp	r0, #1
100564c0:	d016      	beq.n	100564f0 <advance_wakeup_timer+0x588>
100564c2:	484a      	ldr	r0, [pc, #296]	; (100565ec <advance_wakeup_timer+0x684>)
100564c4:	6800      	ldr	r0, [r0, #0]
100564c6:	3020      	adds	r0, #32
100564c8:	7d01      	ldrb	r1, [r0, #20]
100564ca:	4847      	ldr	r0, [pc, #284]	; (100565e8 <advance_wakeup_timer+0x680>)
100564cc:	7a40      	ldrb	r0, [r0, #9]
100564ce:	1a08      	subs	r0, r1, r0
100564d0:	6d31      	ldr	r1, [r6, #80]	; 0x50
100564d2:	00c0      	lsls	r0, r0, #3
100564d4:	1808      	adds	r0, r1, r0
100564d6:	e000      	b.n	100564da <advance_wakeup_timer+0x572>
100564d8:	e03a      	b.n	10056550 <advance_wakeup_timer+0x5e8>
100564da:	0200      	lsls	r0, r0, #8
100564dc:	2101      	movs	r1, #1
100564de:	0a00      	lsrs	r0, r0, #8
100564e0:	0649      	lsls	r1, r1, #25
100564e2:	1841      	adds	r1, r0, r1
100564e4:	2009      	movs	r0, #9
100564e6:	06c0      	lsls	r0, r0, #27
100564e8:	6041      	str	r1, [r0, #4]
100564ea:	e00e      	b.n	1005650a <advance_wakeup_timer+0x5a2>
100564ec:	20ff      	movs	r0, #255	; 0xff
100564ee:	e7c2      	b.n	10056476 <advance_wakeup_timer+0x50e>
100564f0:	2101      	movs	r1, #1
100564f2:	6d30      	ldr	r0, [r6, #80]	; 0x50
100564f4:	0609      	lsls	r1, r1, #24
100564f6:	1841      	adds	r1, r0, r1
100564f8:	2009      	movs	r0, #9
100564fa:	06c0      	lsls	r0, r0, #27
100564fc:	6041      	str	r1, [r0, #4]
100564fe:	483b      	ldr	r0, [pc, #236]	; (100565ec <advance_wakeup_timer+0x684>)
10056500:	6800      	ldr	r0, [r0, #0]
10056502:	3020      	adds	r0, #32
10056504:	7d01      	ldrb	r1, [r0, #20]
10056506:	4838      	ldr	r0, [pc, #224]	; (100565e8 <advance_wakeup_timer+0x680>)
10056508:	7241      	strb	r1, [r0, #9]
1005650a:	2c08      	cmp	r4, #8
1005650c:	d224      	bcs.n	10056558 <advance_wakeup_timer+0x5f0>
1005650e:	2058      	movs	r0, #88	; 0x58
10056510:	4344      	muls	r4, r0
10056512:	9813      	ldr	r0, [sp, #76]	; 0x4c
10056514:	1824      	adds	r4, r4, r0
10056516:	b672      	cpsid	i
10056518:	9812      	ldr	r0, [sp, #72]	; 0x48
1005651a:	78a1      	ldrb	r1, [r4, #2]
1005651c:	6800      	ldr	r0, [r0, #0]
1005651e:	0749      	lsls	r1, r1, #29
10056520:	08c0      	lsrs	r0, r0, #3
10056522:	00c0      	lsls	r0, r0, #3
10056524:	0f49      	lsrs	r1, r1, #29
10056526:	4308      	orrs	r0, r1
10056528:	4931      	ldr	r1, [pc, #196]	; (100565f0 <advance_wakeup_timer+0x688>)
1005652a:	4008      	ands	r0, r1
1005652c:	9900      	ldr	r1, [sp, #0]
1005652e:	00c9      	lsls	r1, r1, #3
10056530:	4308      	orrs	r0, r1
10056532:	9912      	ldr	r1, [sp, #72]	; 0x48
10056534:	6008      	str	r0, [r1, #0]
10056536:	b662      	cpsie	i
10056538:	78a0      	ldrb	r0, [r4, #2]
1005653a:	0740      	lsls	r0, r0, #29
1005653c:	0f40      	lsrs	r0, r0, #29
1005653e:	2803      	cmp	r0, #3
10056540:	d00f      	beq.n	10056562 <advance_wakeup_timer+0x5fa>
10056542:	f7f6 fa66 	bl	1004ca12 <data_length_extension_csr_ucfg>
10056546:	2801      	cmp	r0, #1
10056548:	d00f      	beq.n	1005656a <advance_wakeup_timer+0x602>
1005654a:	9806      	ldr	r0, [sp, #24]
1005654c:	1bc0      	subs	r0, r0, r7
1005654e:	e019      	b.n	10056584 <advance_wakeup_timer+0x61c>
10056550:	2000      	movs	r0, #0
10056552:	2109      	movs	r1, #9
10056554:	06c9      	lsls	r1, r1, #27
10056556:	6048      	str	r0, [r1, #4]
10056558:	4923      	ldr	r1, [pc, #140]	; (100565e8 <advance_wakeup_timer+0x680>)
1005655a:	2000      	movs	r0, #0
1005655c:	8008      	strh	r0, [r1, #0]
1005655e:	b017      	add	sp, #92	; 0x5c
10056560:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056562:	9903      	ldr	r1, [sp, #12]
10056564:	9806      	ldr	r0, [sp, #24]
10056566:	1a40      	subs	r0, r0, r1
10056568:	e00c      	b.n	10056584 <advance_wakeup_timer+0x61c>
1005656a:	3440      	adds	r4, #64	; 0x40
1005656c:	8a20      	ldrh	r0, [r4, #16]
1005656e:	8a61      	ldrh	r1, [r4, #18]
10056570:	1840      	adds	r0, r0, r1
10056572:	30ff      	adds	r0, #255	; 0xff
10056574:	30c3      	adds	r0, #195	; 0xc3
10056576:	f7fb ffb1 	bl	100524dc <microseconds_to_machine_time>
1005657a:	4287      	cmp	r7, r0
1005657c:	d900      	bls.n	10056580 <advance_wakeup_timer+0x618>
1005657e:	4638      	mov	r0, r7
10056580:	9906      	ldr	r1, [sp, #24]
10056582:	1a08      	subs	r0, r1, r0
10056584:	0200      	lsls	r0, r0, #8
10056586:	0a00      	lsrs	r0, r0, #8
10056588:	63e8      	str	r0, [r5, #60]	; 0x3c
1005658a:	8ba8      	ldrh	r0, [r5, #28]
1005658c:	0180      	lsls	r0, r0, #6
1005658e:	f7fb fe1b 	bl	100521c8 <machine_time_trans>
10056592:	6829      	ldr	r1, [r5, #0]
10056594:	2600      	movs	r6, #0
10056596:	1844      	adds	r4, r0, r1
10056598:	4812      	ldr	r0, [pc, #72]	; (100565e4 <advance_wakeup_timer+0x67c>)
1005659a:	3831      	subs	r0, #49	; 0x31
1005659c:	f7fb fe14 	bl	100521c8 <machine_time_trans>
100565a0:	1a20      	subs	r0, r4, r0
100565a2:	0200      	lsls	r0, r0, #8
100565a4:	0a00      	lsrs	r0, r0, #8
100565a6:	6428      	str	r0, [r5, #64]	; 0x40
100565a8:	4c10      	ldr	r4, [pc, #64]	; (100565ec <advance_wakeup_timer+0x684>)
100565aa:	842e      	strh	r6, [r5, #32]
100565ac:	6820      	ldr	r0, [r4, #0]
100565ae:	3040      	adds	r0, #64	; 0x40
100565b0:	7e40      	ldrb	r0, [r0, #25]
100565b2:	2800      	cmp	r0, #0
100565b4:	d007      	beq.n	100565c6 <advance_wakeup_timer+0x65e>
100565b6:	f7fb fd11 	bl	10051fdc <LL_Update_Advertising_Buffers>
100565ba:	6820      	ldr	r0, [r4, #0]
100565bc:	3040      	adds	r0, #64	; 0x40
100565be:	7e41      	ldrb	r1, [r0, #25]
100565c0:	0849      	lsrs	r1, r1, #1
100565c2:	0049      	lsls	r1, r1, #1
100565c4:	7641      	strb	r1, [r0, #25]
100565c6:	6820      	ldr	r0, [r4, #0]
100565c8:	3040      	adds	r0, #64	; 0x40
100565ca:	7e40      	ldrb	r0, [r0, #25]
100565cc:	2800      	cmp	r0, #0
100565ce:	d0c6      	beq.n	1005655e <advance_wakeup_timer+0x5f6>
100565d0:	f7fb fd28 	bl	10052024 <LL_Update_Scanning_Initiating_Buffers>
100565d4:	6820      	ldr	r0, [r4, #0]
100565d6:	3040      	adds	r0, #64	; 0x40
100565d8:	7e41      	ldrb	r1, [r0, #25]
100565da:	22fd      	movs	r2, #253	; 0xfd
100565dc:	4011      	ands	r1, r2
100565de:	7641      	strb	r1, [r0, #25]
100565e0:	e7bd      	b.n	1005655e <advance_wakeup_timer+0x5f6>
100565e2:	0000      	.short	0x0000
100565e4:	00000266 	.word	0x00000266
100565e8:	200000c0 	.word	0x200000c0
100565ec:	2000098c 	.word	0x2000098c
100565f0:	f8000007 	.word	0xf8000007

100565f4 <ATT_fill_error_resp>:
100565f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
100565f6:	4605      	mov	r5, r0
100565f8:	6898      	ldr	r0, [r3, #8]
100565fa:	2201      	movs	r2, #1
100565fc:	7302      	strb	r2, [r0, #12]
100565fe:	689a      	ldr	r2, [r3, #8]
10056600:	461c      	mov	r4, r3
10056602:	7351      	strb	r1, [r2, #13]
10056604:	6898      	ldr	r0, [r3, #8]
10056606:	2202      	movs	r2, #2
10056608:	a902      	add	r1, sp, #8
1005660a:	300e      	adds	r0, #14
1005660c:	f7ec fdd7 	bl	100431be <Osal_MemCpy>
10056610:	68a1      	ldr	r1, [r4, #8]
10056612:	2005      	movs	r0, #5
10056614:	740d      	strb	r5, [r1, #16]
10056616:	80e0      	strh	r0, [r4, #6]
10056618:	bd7f      	pop	{r0, r1, r2, r3, r4, r5, r6, pc}

1005661a <ATT_fill_type_val_entry>:
1005661a:	b570      	push	{r4, r5, r6, lr}
1005661c:	4606      	mov	r6, r0
1005661e:	8808      	ldrh	r0, [r1, #0]
10056620:	461d      	mov	r5, r3
10056622:	460c      	mov	r4, r1
10056624:	1d00      	adds	r0, r0, #4
10056626:	b281      	uxth	r1, r0
10056628:	4613      	mov	r3, r2
1005662a:	2202      	movs	r2, #2
1005662c:	4630      	mov	r0, r6
1005662e:	f7fa f925 	bl	1005087c <PM_Write_Pckt_Data>
10056632:	8821      	ldrh	r1, [r4, #0]
10056634:	462b      	mov	r3, r5
10056636:	1c89      	adds	r1, r1, #2
10056638:	8021      	strh	r1, [r4, #0]
1005663a:	1d09      	adds	r1, r1, #4
1005663c:	b289      	uxth	r1, r1
1005663e:	2202      	movs	r2, #2
10056640:	4630      	mov	r0, r6
10056642:	f7fa f91b 	bl	1005087c <PM_Write_Pckt_Data>
10056646:	8820      	ldrh	r0, [r4, #0]
10056648:	1c80      	adds	r0, r0, #2
1005664a:	8020      	strh	r0, [r4, #0]
1005664c:	bd70      	pop	{r4, r5, r6, pc}

1005664e <ATT_validate_prepare_req>:
1005664e:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10056650:	2400      	movs	r4, #0
10056652:	460e      	mov	r6, r1
10056654:	4627      	mov	r7, r4
10056656:	6805      	ldr	r5, [r0, #0]
10056658:	e045      	b.n	100566e6 <ATT_validate_prepare_req+0x98>
1005665a:	6828      	ldr	r0, [r5, #0]
1005665c:	9002      	str	r0, [sp, #8]
1005665e:	68a9      	ldr	r1, [r5, #8]
10056660:	2202      	movs	r2, #2
10056662:	4630      	mov	r0, r6
10056664:	310d      	adds	r1, #13
10056666:	f7ec fdaa 	bl	100431be <Osal_MemCpy>
1005666a:	8830      	ldrh	r0, [r6, #0]
1005666c:	42b8      	cmp	r0, r7
1005666e:	d009      	beq.n	10056684 <ATT_validate_prepare_req+0x36>
10056670:	b287      	uxth	r7, r0
10056672:	4638      	mov	r0, r7
10056674:	f7f4 fe46 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
10056678:	4601      	mov	r1, r0
1005667a:	aa01      	add	r2, sp, #4
1005667c:	4638      	mov	r0, r7
1005667e:	f7f5 fcd3 	bl	1004c028 <Gatt_search_handle>
10056682:	9c01      	ldr	r4, [sp, #4]
10056684:	68a9      	ldr	r1, [r5, #8]
10056686:	2202      	movs	r2, #2
10056688:	4668      	mov	r0, sp
1005668a:	310f      	adds	r1, #15
1005668c:	f7ec fd97 	bl	100431be <Osal_MemCpy>
10056690:	88e8      	ldrh	r0, [r5, #6]
10056692:	1f40      	subs	r0, r0, #5
10056694:	b281      	uxth	r1, r0
10056696:	2022      	movs	r0, #34	; 0x22
10056698:	5d00      	ldrb	r0, [r0, r4]
1005669a:	2800      	cmp	r0, #0
1005669c:	d006      	beq.n	100566ac <ATT_validate_prepare_req+0x5e>
1005669e:	2801      	cmp	r0, #1
100566a0:	d00b      	beq.n	100566ba <ATT_validate_prepare_req+0x6c>
100566a2:	2800      	cmp	r0, #0
100566a4:	d011      	beq.n	100566ca <ATT_validate_prepare_req+0x7c>
100566a6:	2801      	cmp	r0, #1
100566a8:	d014      	beq.n	100566d4 <ATT_validate_prepare_req+0x86>
100566aa:	e01b      	b.n	100566e4 <ATT_validate_prepare_req+0x96>
100566ac:	8be0      	ldrh	r0, [r4, #30]
100566ae:	466a      	mov	r2, sp
100566b0:	8812      	ldrh	r2, [r2, #0]
100566b2:	1e40      	subs	r0, r0, #1
100566b4:	4290      	cmp	r0, r2
100566b6:	d306      	bcc.n	100566c6 <ATT_validate_prepare_req+0x78>
100566b8:	e007      	b.n	100566ca <ATT_validate_prepare_req+0x7c>
100566ba:	8c20      	ldrh	r0, [r4, #32]
100566bc:	466a      	mov	r2, sp
100566be:	8812      	ldrh	r2, [r2, #0]
100566c0:	1e40      	subs	r0, r0, #1
100566c2:	4290      	cmp	r0, r2
100566c4:	d206      	bcs.n	100566d4 <ATT_validate_prepare_req+0x86>
100566c6:	2007      	movs	r0, #7
100566c8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100566ca:	4668      	mov	r0, sp
100566cc:	8800      	ldrh	r0, [r0, #0]
100566ce:	1808      	adds	r0, r1, r0
100566d0:	8be1      	ldrh	r1, [r4, #30]
100566d2:	e003      	b.n	100566dc <ATT_validate_prepare_req+0x8e>
100566d4:	4668      	mov	r0, sp
100566d6:	8800      	ldrh	r0, [r0, #0]
100566d8:	1808      	adds	r0, r1, r0
100566da:	8c21      	ldrh	r1, [r4, #32]
100566dc:	4288      	cmp	r0, r1
100566de:	d901      	bls.n	100566e4 <ATT_validate_prepare_req+0x96>
100566e0:	200d      	movs	r0, #13
100566e2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100566e4:	9d02      	ldr	r5, [sp, #8]
100566e6:	2d00      	cmp	r5, #0
100566e8:	d1b7      	bne.n	1005665a <ATT_validate_prepare_req+0xc>
100566ea:	2000      	movs	r0, #0
100566ec:	8030      	strh	r0, [r6, #0]
100566ee:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100566f0 <Att_Check_Perms>:
100566f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100566f2:	4616      	mov	r6, r2
100566f4:	460d      	mov	r5, r1
100566f6:	4607      	mov	r7, r0
100566f8:	2400      	movs	r4, #0
100566fa:	f7fd fef5 	bl	100544e8 <SMP_get_remote_device_list_item>
100566fe:	2800      	cmp	r0, #0
10056700:	d006      	beq.n	10056710 <Att_Check_Perms+0x20>
10056702:	4632      	mov	r2, r6
10056704:	4629      	mov	r1, r5
10056706:	4638      	mov	r0, r7
10056708:	f000 f830 	bl	1005676c <Check_Permission>
1005670c:	4604      	mov	r4, r0
1005670e:	e004      	b.n	1005671a <Att_Check_Perms+0x2a>
10056710:	3520      	adds	r5, #32
10056712:	7968      	ldrb	r0, [r5, #5]
10056714:	2800      	cmp	r0, #0
10056716:	d002      	beq.n	1005671e <Att_Check_Perms+0x2e>
10056718:	240e      	movs	r4, #14
1005671a:	4620      	mov	r0, r4
1005671c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005671e:	7928      	ldrb	r0, [r5, #4]
10056720:	07c1      	lsls	r1, r0, #31
10056722:	d101      	bne.n	10056728 <Att_Check_Perms+0x38>
10056724:	2e01      	cmp	r6, #1
10056726:	d009      	beq.n	1005673c <Att_Check_Perms+0x4c>
10056728:	0781      	lsls	r1, r0, #30
1005672a:	d401      	bmi.n	10056730 <Att_Check_Perms+0x40>
1005672c:	2e02      	cmp	r6, #2
1005672e:	d003      	beq.n	10056738 <Att_Check_Perms+0x48>
10056730:	0740      	lsls	r0, r0, #29
10056732:	d4f2      	bmi.n	1005671a <Att_Check_Perms+0x2a>
10056734:	2e04      	cmp	r6, #4
10056736:	d1f0      	bne.n	1005671a <Att_Check_Perms+0x2a>
10056738:	2403      	movs	r4, #3
1005673a:	e7ee      	b.n	1005671a <Att_Check_Perms+0x2a>
1005673c:	2402      	movs	r4, #2
1005673e:	e7ec      	b.n	1005671a <Att_Check_Perms+0x2a>

10056740 <CheckSecForSignedWrite>:
10056740:	b570      	push	{r4, r5, r6, lr}
10056742:	4615      	mov	r5, r2
10056744:	4606      	mov	r6, r0
10056746:	f7ff ffd3 	bl	100566f0 <Att_Check_Perms>
1005674a:	4604      	mov	r4, r0
1005674c:	2d08      	cmp	r5, #8
1005674e:	d10b      	bne.n	10056768 <CheckSecForSignedWrite+0x28>
10056750:	2c05      	cmp	r4, #5
10056752:	d109      	bne.n	10056768 <CheckSecForSignedWrite+0x28>
10056754:	4630      	mov	r0, r6
10056756:	f7fd fec7 	bl	100544e8 <SMP_get_remote_device_list_item>
1005675a:	2800      	cmp	r0, #0
1005675c:	d004      	beq.n	10056768 <CheckSecForSignedWrite+0x28>
1005675e:	8900      	ldrh	r0, [r0, #8]
10056760:	0440      	lsls	r0, r0, #17
10056762:	0f80      	lsrs	r0, r0, #30
10056764:	d000      	beq.n	10056768 <CheckSecForSignedWrite+0x28>
10056766:	2400      	movs	r4, #0
10056768:	4620      	mov	r0, r4
1005676a:	bd70      	pop	{r4, r5, r6, pc}

1005676c <Check_Permission>:
1005676c:	b570      	push	{r4, r5, r6, lr}
1005676e:	4615      	mov	r5, r2
10056770:	460c      	mov	r4, r1
10056772:	4606      	mov	r6, r0
10056774:	f7fd fea0 	bl	100544b8 <SMP_get_link_status>
10056778:	3420      	adds	r4, #32
1005677a:	7961      	ldrb	r1, [r4, #5]
1005677c:	2d01      	cmp	r5, #1
1005677e:	d009      	beq.n	10056794 <Check_Permission+0x28>
10056780:	070a      	lsls	r2, r1, #28
10056782:	d502      	bpl.n	1005678a <Check_Permission+0x1e>
10056784:	0742      	lsls	r2, r0, #29
10056786:	0f92      	lsrs	r2, r2, #30
10056788:	d00f      	beq.n	100567aa <Check_Permission+0x3e>
1005678a:	06ca      	lsls	r2, r1, #27
1005678c:	d525      	bpl.n	100567da <Check_Permission+0x6e>
1005678e:	0702      	lsls	r2, r0, #28
10056790:	d509      	bpl.n	100567a6 <Check_Permission+0x3a>
10056792:	e022      	b.n	100567da <Check_Permission+0x6e>
10056794:	07ca      	lsls	r2, r1, #31
10056796:	d002      	beq.n	1005679e <Check_Permission+0x32>
10056798:	0742      	lsls	r2, r0, #29
1005679a:	0f92      	lsrs	r2, r2, #30
1005679c:	d005      	beq.n	100567aa <Check_Permission+0x3e>
1005679e:	078a      	lsls	r2, r1, #30
100567a0:	d505      	bpl.n	100567ae <Check_Permission+0x42>
100567a2:	0702      	lsls	r2, r0, #28
100567a4:	d403      	bmi.n	100567ae <Check_Permission+0x42>
100567a6:	2008      	movs	r0, #8
100567a8:	bd70      	pop	{r4, r5, r6, pc}
100567aa:	2005      	movs	r0, #5
100567ac:	bd70      	pop	{r4, r5, r6, pc}
100567ae:	0749      	lsls	r1, r1, #29
100567b0:	d507      	bpl.n	100567c2 <Check_Permission+0x56>
100567b2:	07c0      	lsls	r0, r0, #31
100567b4:	d009      	beq.n	100567ca <Check_Permission+0x5e>
100567b6:	79e1      	ldrb	r1, [r4, #7]
100567b8:	4630      	mov	r0, r6
100567ba:	f7fd fdf1 	bl	100543a0 <SMP_check_encryption_key_size>
100567be:	285f      	cmp	r0, #95	; 0x5f
100567c0:	d005      	beq.n	100567ce <Check_Permission+0x62>
100567c2:	7920      	ldrb	r0, [r4, #4]
100567c4:	07c0      	lsls	r0, r0, #31
100567c6:	d004      	beq.n	100567d2 <Check_Permission+0x66>
100567c8:	e005      	b.n	100567d6 <Check_Permission+0x6a>
100567ca:	200f      	movs	r0, #15
100567cc:	bd70      	pop	{r4, r5, r6, pc}
100567ce:	200c      	movs	r0, #12
100567d0:	bd70      	pop	{r4, r5, r6, pc}
100567d2:	2002      	movs	r0, #2
100567d4:	bd70      	pop	{r4, r5, r6, pc}
100567d6:	2000      	movs	r0, #0
100567d8:	bd70      	pop	{r4, r5, r6, pc}
100567da:	0689      	lsls	r1, r1, #26
100567dc:	d507      	bpl.n	100567ee <Check_Permission+0x82>
100567de:	07c0      	lsls	r0, r0, #31
100567e0:	d0f3      	beq.n	100567ca <Check_Permission+0x5e>
100567e2:	79e1      	ldrb	r1, [r4, #7]
100567e4:	4630      	mov	r0, r6
100567e6:	f7fd fddb 	bl	100543a0 <SMP_check_encryption_key_size>
100567ea:	285f      	cmp	r0, #95	; 0x5f
100567ec:	d0ef      	beq.n	100567ce <Check_Permission+0x62>
100567ee:	7920      	ldrb	r0, [r4, #4]
100567f0:	0781      	lsls	r1, r0, #30
100567f2:	d401      	bmi.n	100567f8 <Check_Permission+0x8c>
100567f4:	2d02      	cmp	r5, #2
100567f6:	d007      	beq.n	10056808 <Check_Permission+0x9c>
100567f8:	0741      	lsls	r1, r0, #29
100567fa:	d401      	bmi.n	10056800 <Check_Permission+0x94>
100567fc:	2d04      	cmp	r5, #4
100567fe:	d003      	beq.n	10056808 <Check_Permission+0x9c>
10056800:	0700      	lsls	r0, r0, #28
10056802:	d4e8      	bmi.n	100567d6 <Check_Permission+0x6a>
10056804:	2d08      	cmp	r5, #8
10056806:	d1e6      	bne.n	100567d6 <Check_Permission+0x6a>
10056808:	2003      	movs	r0, #3
1005680a:	bd70      	pop	{r4, r5, r6, pc}

1005680c <Exchg_Mtu_Resp>:
1005680c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005680e:	4606      	mov	r6, r0
10056810:	4829      	ldr	r0, [pc, #164]	; (100568b8 <Exchg_Mtu_Resp+0xac>)
10056812:	4614      	mov	r4, r2
10056814:	6800      	ldr	r0, [r0, #0]
10056816:	4a29      	ldr	r2, [pc, #164]	; (100568bc <Exchg_Mtu_Resp+0xb0>)
10056818:	1885      	adds	r5, r0, r2
1005681a:	88c8      	ldrh	r0, [r1, #6]
1005681c:	2803      	cmp	r0, #3
1005681e:	d006      	beq.n	1005682e <Exchg_Mtu_Resp+0x22>
10056820:	4623      	mov	r3, r4
10056822:	2200      	movs	r2, #0
10056824:	2102      	movs	r1, #2
10056826:	2004      	movs	r0, #4
10056828:	f7ff fee4 	bl	100565f4 <ATT_fill_error_resp>
1005682c:	e042      	b.n	100568b4 <Exchg_Mtu_Resp+0xa8>
1005682e:	6889      	ldr	r1, [r1, #8]
10056830:	2202      	movs	r2, #2
10056832:	4668      	mov	r0, sp
10056834:	310d      	adds	r1, #13
10056836:	f7ec fcc2 	bl	100431be <Osal_MemCpy>
1005683a:	6932      	ldr	r2, [r6, #16]
1005683c:	0590      	lsls	r0, r2, #22
1005683e:	d42e      	bmi.n	1005689e <Exchg_Mtu_Resp+0x92>
10056840:	4668      	mov	r0, sp
10056842:	8801      	ldrh	r1, [r0, #0]
10056844:	2917      	cmp	r1, #23
10056846:	d303      	bcc.n	10056850 <Exchg_Mtu_Resp+0x44>
10056848:	205c      	movs	r0, #92	; 0x5c
1005684a:	5b40      	ldrh	r0, [r0, r5]
1005684c:	2817      	cmp	r0, #23
1005684e:	d201      	bcs.n	10056854 <Exchg_Mtu_Resp+0x48>
10056850:	2017      	movs	r0, #23
10056852:	e002      	b.n	1005685a <Exchg_Mtu_Resp+0x4e>
10056854:	4281      	cmp	r1, r0
10056856:	d200      	bcs.n	1005685a <Exchg_Mtu_Resp+0x4e>
10056858:	4608      	mov	r0, r1
1005685a:	8070      	strh	r0, [r6, #2]
1005685c:	2001      	movs	r0, #1
1005685e:	0240      	lsls	r0, r0, #9
10056860:	4302      	orrs	r2, r0
10056862:	2002      	movs	r0, #2
10056864:	6132      	str	r2, [r6, #16]
10056866:	9001      	str	r0, [sp, #4]
10056868:	4813      	ldr	r0, [pc, #76]	; (100568b8 <Exchg_Mtu_Resp+0xac>)
1005686a:	2137      	movs	r1, #55	; 0x37
1005686c:	6800      	ldr	r0, [r0, #0]
1005686e:	0149      	lsls	r1, r1, #5
10056870:	1841      	adds	r1, r0, r1
10056872:	8837      	ldrh	r7, [r6, #0]
10056874:	7b09      	ldrb	r1, [r1, #12]
10056876:	8876      	ldrh	r6, [r6, #2]
10056878:	2301      	movs	r3, #1
1005687a:	0749      	lsls	r1, r1, #29
1005687c:	d50f      	bpl.n	1005689e <Exchg_Mtu_Resp+0x92>
1005687e:	02d9      	lsls	r1, r3, #11
10056880:	3008      	adds	r0, #8
10056882:	1840      	adds	r0, r0, r1
10056884:	2224      	movs	r2, #36	; 0x24
10056886:	6940      	ldr	r0, [r0, #20]
10056888:	2102      	movs	r1, #2
1005688a:	f7fe fcaf 	bl	100551ec <aci_event_fifo_push_header>
1005688e:	2800      	cmp	r0, #0
10056890:	d005      	beq.n	1005689e <Exchg_Mtu_Resp+0x92>
10056892:	8087      	strh	r7, [r0, #4]
10056894:	80c6      	strh	r6, [r0, #6]
10056896:	4601      	mov	r1, r0
10056898:	9801      	ldr	r0, [sp, #4]
1005689a:	f7fe fc93 	bl	100551c4 <aci_event_fifo_push>
1005689e:	68a0      	ldr	r0, [r4, #8]
100568a0:	2603      	movs	r6, #3
100568a2:	7306      	strb	r6, [r0, #12]
100568a4:	68a0      	ldr	r0, [r4, #8]
100568a6:	4629      	mov	r1, r5
100568a8:	2202      	movs	r2, #2
100568aa:	315c      	adds	r1, #92	; 0x5c
100568ac:	300d      	adds	r0, #13
100568ae:	f7ec fc86 	bl	100431be <Osal_MemCpy>
100568b2:	80e6      	strh	r6, [r4, #6]
100568b4:	2000      	movs	r0, #0
100568b6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100568b8:	2000098c 	.word	0x2000098c
100568bc:	0000072c 	.word	0x0000072c

100568c0 <Exec_Write_Resp>:
100568c0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100568c2:	b090      	sub	sp, #64	; 0x40
100568c4:	2000      	movs	r0, #0
100568c6:	466a      	mov	r2, sp
100568c8:	900d      	str	r0, [sp, #52]	; 0x34
100568ca:	8290      	strh	r0, [r2, #20]
100568cc:	4a6a      	ldr	r2, [pc, #424]	; (10056a78 <Exec_Write_Resp+0x1b8>)
100568ce:	4b6b      	ldr	r3, [pc, #428]	; (10056a7c <Exec_Write_Resp+0x1bc>)
100568d0:	6812      	ldr	r2, [r2, #0]
100568d2:	4604      	mov	r4, r0
100568d4:	18d2      	adds	r2, r2, r3
100568d6:	88cb      	ldrh	r3, [r1, #6]
100568d8:	2b02      	cmp	r3, #2
100568da:	d008      	beq.n	100568ee <Exec_Write_Resp+0x2e>
100568dc:	2200      	movs	r2, #0
100568de:	2118      	movs	r1, #24
100568e0:	2004      	movs	r0, #4
100568e2:	9b12      	ldr	r3, [sp, #72]	; 0x48
100568e4:	f7ff fe86 	bl	100565f4 <ATT_fill_error_resp>
100568e8:	2000      	movs	r0, #0
100568ea:	b013      	add	sp, #76	; 0x4c
100568ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
100568ee:	688b      	ldr	r3, [r1, #8]
100568f0:	2000      	movs	r0, #0
100568f2:	7b5e      	ldrb	r6, [r3, #13]
100568f4:	900a      	str	r0, [sp, #40]	; 0x28
100568f6:	900b      	str	r0, [sp, #44]	; 0x2c
100568f8:	8888      	ldrh	r0, [r1, #4]
100568fa:	3230      	adds	r2, #48	; 0x30
100568fc:	9201      	str	r2, [sp, #4]
100568fe:	9009      	str	r0, [sp, #36]	; 0x24
10056900:	2700      	movs	r7, #0
10056902:	9801      	ldr	r0, [sp, #4]
10056904:	f7ff faaa 	bl	10055e5c <acl_list_first>
10056908:	4605      	mov	r5, r0
1005690a:	e020      	b.n	1005694e <Exec_Write_Resp+0x8e>
1005690c:	6828      	ldr	r0, [r5, #0]
1005690e:	9008      	str	r0, [sp, #32]
10056910:	88a9      	ldrh	r1, [r5, #4]
10056912:	9809      	ldr	r0, [sp, #36]	; 0x24
10056914:	4281      	cmp	r1, r0
10056916:	d119      	bne.n	1005694c <Exec_Write_Resp+0x8c>
10056918:	68a9      	ldr	r1, [r5, #8]
1005691a:	2202      	movs	r2, #2
1005691c:	a807      	add	r0, sp, #28
1005691e:	310d      	adds	r1, #13
10056920:	f7ec fc4d 	bl	100431be <Osal_MemCpy>
10056924:	2f00      	cmp	r7, #0
10056926:	d101      	bne.n	1005692c <Exec_Write_Resp+0x6c>
10056928:	4668      	mov	r0, sp
1005692a:	8b87      	ldrh	r7, [r0, #28]
1005692c:	4668      	mov	r0, sp
1005692e:	8b80      	ldrh	r0, [r0, #28]
10056930:	4287      	cmp	r7, r0
10056932:	d10b      	bne.n	1005694c <Exec_Write_Resp+0x8c>
10056934:	4629      	mov	r1, r5
10056936:	9801      	ldr	r0, [sp, #4]
10056938:	f7ff fadd 	bl	10055ef6 <acl_list_remove>
1005693c:	2000      	movs	r0, #0
1005693e:	6028      	str	r0, [r5, #0]
10056940:	980a      	ldr	r0, [sp, #40]	; 0x28
10056942:	2800      	cmp	r0, #0
10056944:	d011      	beq.n	1005696a <Exec_Write_Resp+0xaa>
10056946:	980b      	ldr	r0, [sp, #44]	; 0x2c
10056948:	6005      	str	r5, [r0, #0]
1005694a:	950b      	str	r5, [sp, #44]	; 0x2c
1005694c:	9d08      	ldr	r5, [sp, #32]
1005694e:	2d00      	cmp	r5, #0
10056950:	d1dc      	bne.n	1005690c <Exec_Write_Resp+0x4c>
10056952:	2f00      	cmp	r7, #0
10056954:	d1d4      	bne.n	10056900 <Exec_Write_Resp+0x40>
10056956:	9812      	ldr	r0, [sp, #72]	; 0x48
10056958:	2119      	movs	r1, #25
1005695a:	6880      	ldr	r0, [r0, #8]
1005695c:	7301      	strb	r1, [r0, #12]
1005695e:	2101      	movs	r1, #1
10056960:	9812      	ldr	r0, [sp, #72]	; 0x48
10056962:	2e01      	cmp	r6, #1
10056964:	80c1      	strh	r1, [r0, #6]
10056966:	d002      	beq.n	1005696e <Exec_Write_Resp+0xae>
10056968:	e081      	b.n	10056a6e <Exec_Write_Resp+0x1ae>
1005696a:	950a      	str	r5, [sp, #40]	; 0x28
1005696c:	e7ed      	b.n	1005694a <Exec_Write_Resp+0x8a>
1005696e:	a902      	add	r1, sp, #8
10056970:	a80a      	add	r0, sp, #40	; 0x28
10056972:	f7ff fe6c 	bl	1005664e <ATT_validate_prepare_req>
10056976:	2800      	cmp	r0, #0
10056978:	d079      	beq.n	10056a6e <Exec_Write_Resp+0x1ae>
1005697a:	4669      	mov	r1, sp
1005697c:	890a      	ldrh	r2, [r1, #8]
1005697e:	2118      	movs	r1, #24
10056980:	9b12      	ldr	r3, [sp, #72]	; 0x48
10056982:	f7ff fe37 	bl	100565f4 <ATT_fill_error_resp>
10056986:	2600      	movs	r6, #0
10056988:	e071      	b.n	10056a6e <Exec_Write_Resp+0x1ae>
1005698a:	6881      	ldr	r1, [r0, #8]
1005698c:	4605      	mov	r5, r0
1005698e:	2202      	movs	r2, #2
10056990:	a802      	add	r0, sp, #8
10056992:	310d      	adds	r1, #13
10056994:	f7ec fc13 	bl	100431be <Osal_MemCpy>
10056998:	2e01      	cmp	r6, #1
1005699a:	d166      	bne.n	10056a6a <Exec_Write_Resp+0x1aa>
1005699c:	4668      	mov	r0, sp
1005699e:	8900      	ldrh	r0, [r0, #8]
100569a0:	f7f4 fcb0 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
100569a4:	4601      	mov	r1, r0
100569a6:	4668      	mov	r0, sp
100569a8:	aa0e      	add	r2, sp, #56	; 0x38
100569aa:	8900      	ldrh	r0, [r0, #8]
100569ac:	f7f5 fb3c 	bl	1004c028 <Gatt_search_handle>
100569b0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
100569b2:	9910      	ldr	r1, [sp, #64]	; 0x40
100569b4:	4620      	mov	r0, r4
100569b6:	f7f3 ffe7 	bl	1004a988 <Find_Attr_Index>
100569ba:	900d      	str	r0, [sp, #52]	; 0x34
100569bc:	e055      	b.n	10056a6a <Exec_Write_Resp+0x1aa>
100569be:	682f      	ldr	r7, [r5, #0]
100569c0:	2e01      	cmp	r6, #1
100569c2:	d13f      	bne.n	10056a44 <Exec_Write_Resp+0x184>
100569c4:	2f00      	cmp	r7, #0
100569c6:	d006      	beq.n	100569d6 <Exec_Write_Resp+0x116>
100569c8:	68b9      	ldr	r1, [r7, #8]
100569ca:	2202      	movs	r2, #2
100569cc:	a805      	add	r0, sp, #20
100569ce:	310d      	adds	r1, #13
100569d0:	f7ec fbf5 	bl	100431be <Osal_MemCpy>
100569d4:	e002      	b.n	100569dc <Exec_Write_Resp+0x11c>
100569d6:	2000      	movs	r0, #0
100569d8:	4669      	mov	r1, sp
100569da:	8288      	strh	r0, [r1, #20]
100569dc:	68a9      	ldr	r1, [r5, #8]
100569de:	2202      	movs	r2, #2
100569e0:	a804      	add	r0, sp, #16
100569e2:	310f      	adds	r1, #15
100569e4:	f7ec fbeb 	bl	100431be <Osal_MemCpy>
100569e8:	88e8      	ldrh	r0, [r5, #6]
100569ea:	990d      	ldr	r1, [sp, #52]	; 0x34
100569ec:	1f40      	subs	r0, r0, #5
100569ee:	b280      	uxth	r0, r0
100569f0:	9000      	str	r0, [sp, #0]
100569f2:	8c20      	ldrh	r0, [r4, #32]
100569f4:	69a2      	ldr	r2, [r4, #24]
100569f6:	4348      	muls	r0, r1
100569f8:	4669      	mov	r1, sp
100569fa:	1810      	adds	r0, r2, r0
100569fc:	8a09      	ldrh	r1, [r1, #16]
100569fe:	9a00      	ldr	r2, [sp, #0]
10056a00:	1843      	adds	r3, r0, r1
10056a02:	2109      	movs	r1, #9
10056a04:	4628      	mov	r0, r5
10056a06:	f7f9 fe49 	bl	1005069c <PM_Copy_Pckt_Data>
10056a0a:	2022      	movs	r0, #34	; 0x22
10056a0c:	5d00      	ldrb	r0, [r0, r4]
10056a0e:	2801      	cmp	r0, #1
10056a10:	d104      	bne.n	10056a1c <Exec_Write_Resp+0x15c>
10056a12:	4668      	mov	r0, sp
10056a14:	8a01      	ldrh	r1, [r0, #16]
10056a16:	9800      	ldr	r0, [sp, #0]
10056a18:	1808      	adds	r0, r1, r0
10056a1a:	83e0      	strh	r0, [r4, #30]
10056a1c:	4668      	mov	r0, sp
10056a1e:	8901      	ldrh	r1, [r0, #8]
10056a20:	8a80      	ldrh	r0, [r0, #20]
10056a22:	4281      	cmp	r1, r0
10056a24:	d00e      	beq.n	10056a44 <Exec_Write_Resp+0x184>
10056a26:	8c20      	ldrh	r0, [r4, #32]
10056a28:	990d      	ldr	r1, [sp, #52]	; 0x34
10056a2a:	69a2      	ldr	r2, [r4, #24]
10056a2c:	4348      	muls	r0, r1
10056a2e:	1810      	adds	r0, r2, r0
10056a30:	2100      	movs	r1, #0
10056a32:	9001      	str	r0, [sp, #4]
10056a34:	9100      	str	r1, [sp, #0]
10056a36:	9810      	ldr	r0, [sp, #64]	; 0x40
10056a38:	8be3      	ldrh	r3, [r4, #30]
10056a3a:	8801      	ldrh	r1, [r0, #0]
10056a3c:	8ba2      	ldrh	r2, [r4, #28]
10056a3e:	2002      	movs	r0, #2
10056a40:	f001 f85e 	bl	10057b00 <aci_gatt_attribute_modified_event_push>
10056a44:	990a      	ldr	r1, [sp, #40]	; 0x28
10056a46:	6808      	ldr	r0, [r1, #0]
10056a48:	900a      	str	r0, [sp, #40]	; 0x28
10056a4a:	2000      	movs	r0, #0
10056a4c:	6008      	str	r0, [r1, #0]
10056a4e:	990a      	ldr	r1, [sp, #40]	; 0x28
10056a50:	2900      	cmp	r1, #0
10056a52:	d100      	bne.n	10056a56 <Exec_Write_Resp+0x196>
10056a54:	900b      	str	r0, [sp, #44]	; 0x2c
10056a56:	2101      	movs	r1, #1
10056a58:	4628      	mov	r0, r5
10056a5a:	f7f9 febb 	bl	100507d4 <PM_Release_Acl_Pckt>
10056a5e:	4669      	mov	r1, sp
10056a60:	8908      	ldrh	r0, [r1, #8]
10056a62:	8a89      	ldrh	r1, [r1, #20]
10056a64:	4288      	cmp	r0, r1
10056a66:	d102      	bne.n	10056a6e <Exec_Write_Resp+0x1ae>
10056a68:	463d      	mov	r5, r7
10056a6a:	2d00      	cmp	r5, #0
10056a6c:	d1a7      	bne.n	100569be <Exec_Write_Resp+0xfe>
10056a6e:	980a      	ldr	r0, [sp, #40]	; 0x28
10056a70:	2800      	cmp	r0, #0
10056a72:	d18a      	bne.n	1005698a <Exec_Write_Resp+0xca>
10056a74:	e739      	b.n	100568ea <Exec_Write_Resp+0x2a>
10056a76:	0000      	.short	0x0000
10056a78:	2000098c 	.word	0x2000098c
10056a7c:	0000072c 	.word	0x0000072c

10056a80 <Find_By_Type_Val_Resp>:
10056a80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10056a82:	4878      	ldr	r0, [pc, #480]	; (10056c64 <Find_By_Type_Val_Resp+0x1e4>)
10056a84:	460f      	mov	r7, r1
10056a86:	6800      	ldr	r0, [r0, #0]
10056a88:	4977      	ldr	r1, [pc, #476]	; (10056c68 <Find_By_Type_Val_Resp+0x1e8>)
10056a8a:	b088      	sub	sp, #32
10056a8c:	1844      	adds	r4, r0, r1
10056a8e:	88f8      	ldrh	r0, [r7, #6]
10056a90:	2807      	cmp	r0, #7
10056a92:	d204      	bcs.n	10056a9e <Find_By_Type_Val_Resp+0x1e>
10056a94:	2200      	movs	r2, #0
10056a96:	2106      	movs	r1, #6
10056a98:	2004      	movs	r0, #4
10056a9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
10056a9c:	e02a      	b.n	10056af4 <Find_By_Type_Val_Resp+0x74>
10056a9e:	68b9      	ldr	r1, [r7, #8]
10056aa0:	2202      	movs	r2, #2
10056aa2:	4668      	mov	r0, sp
10056aa4:	310d      	adds	r1, #13
10056aa6:	f7ec fb8a 	bl	100431be <Osal_MemCpy>
10056aaa:	68b9      	ldr	r1, [r7, #8]
10056aac:	2202      	movs	r2, #2
10056aae:	a801      	add	r0, sp, #4
10056ab0:	310f      	adds	r1, #15
10056ab2:	f7ec fb84 	bl	100431be <Osal_MemCpy>
10056ab6:	68b9      	ldr	r1, [r7, #8]
10056ab8:	2202      	movs	r2, #2
10056aba:	a804      	add	r0, sp, #16
10056abc:	3111      	adds	r1, #17
10056abe:	f7ec fb7e 	bl	100431be <Osal_MemCpy>
10056ac2:	88f8      	ldrh	r0, [r7, #6]
10056ac4:	1fc0      	subs	r0, r0, #7
10056ac6:	b280      	uxth	r0, r0
10056ac8:	9003      	str	r0, [sp, #12]
10056aca:	4668      	mov	r0, sp
10056acc:	8802      	ldrh	r2, [r0, #0]
10056ace:	8880      	ldrh	r0, [r0, #4]
10056ad0:	4282      	cmp	r2, r0
10056ad2:	d80c      	bhi.n	10056aee <Find_By_Type_Val_Resp+0x6e>
10056ad4:	2a00      	cmp	r2, #0
10056ad6:	d00a      	beq.n	10056aee <Find_By_Type_Val_Resp+0x6e>
10056ad8:	9808      	ldr	r0, [sp, #32]
10056ada:	2100      	movs	r1, #0
10056adc:	8842      	ldrh	r2, [r0, #2]
10056ade:	980a      	ldr	r0, [sp, #40]	; 0x28
10056ae0:	f000 f9ba 	bl	10056e58 <Pm_Resize_Host_Acl_Pckt>
10056ae4:	2800      	cmp	r0, #0
10056ae6:	d008      	beq.n	10056afa <Find_By_Type_Val_Resp+0x7a>
10056ae8:	2045      	movs	r0, #69	; 0x45
10056aea:	b00b      	add	sp, #44	; 0x2c
10056aec:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056aee:	2106      	movs	r1, #6
10056af0:	2001      	movs	r0, #1
10056af2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
10056af4:	f7ff fd7e 	bl	100565f4 <ATT_fill_error_resp>
10056af8:	e0ab      	b.n	10056c52 <Find_By_Type_Val_Resp+0x1d2>
10056afa:	980a      	ldr	r0, [sp, #40]	; 0x28
10056afc:	2107      	movs	r1, #7
10056afe:	6880      	ldr	r0, [r0, #8]
10056b00:	3408      	adds	r4, #8
10056b02:	7301      	strb	r1, [r0, #12]
10056b04:	2101      	movs	r1, #1
10056b06:	4668      	mov	r0, sp
10056b08:	8101      	strh	r1, [r0, #8]
10056b0a:	9405      	str	r4, [sp, #20]
10056b0c:	8800      	ldrh	r0, [r0, #0]
10056b0e:	f7f4 fbf9 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
10056b12:	0005      	movs	r5, r0
10056b14:	d07c      	beq.n	10056c10 <Find_By_Type_Val_Resp+0x190>
10056b16:	e086      	b.n	10056c26 <Find_By_Type_Val_Resp+0x1a6>
10056b18:	4668      	mov	r0, sp
10056b1a:	8a00      	ldrh	r0, [r0, #16]
10056b1c:	2205      	movs	r2, #5
10056b1e:	02d2      	lsls	r2, r2, #11
10056b20:	4290      	cmp	r0, r2
10056b22:	d002      	beq.n	10056b2a <Find_By_Type_Val_Resp+0xaa>
10056b24:	1c52      	adds	r2, r2, #1
10056b26:	4290      	cmp	r0, r2
10056b28:	d126      	bne.n	10056b78 <Find_By_Type_Val_Resp+0xf8>
10056b2a:	4668      	mov	r0, sp
10056b2c:	8800      	ldrh	r0, [r0, #0]
10056b2e:	4281      	cmp	r1, r0
10056b30:	d378      	bcc.n	10056c24 <Find_By_Type_Val_Resp+0x1a4>
10056b32:	4629      	mov	r1, r5
10056b34:	220b      	movs	r2, #11
10056b36:	3108      	adds	r1, #8
10056b38:	4638      	mov	r0, r7
10056b3a:	9b03      	ldr	r3, [sp, #12]
10056b3c:	f7f9 fe44 	bl	100507c8 <PM_Pckt_Cmp>
10056b40:	4669      	mov	r1, sp
10056b42:	8d6a      	ldrh	r2, [r5, #42]	; 0x2a
10056b44:	8a09      	ldrh	r1, [r1, #16]
10056b46:	428a      	cmp	r2, r1
10056b48:	d16c      	bne.n	10056c24 <Find_By_Type_Val_Resp+0x1a4>
10056b4a:	9903      	ldr	r1, [sp, #12]
10056b4c:	2902      	cmp	r1, #2
10056b4e:	d001      	beq.n	10056b54 <Find_By_Type_Val_Resp+0xd4>
10056b50:	2910      	cmp	r1, #16
10056b52:	d167      	bne.n	10056c24 <Find_By_Type_Val_Resp+0x1a4>
10056b54:	2800      	cmp	r0, #0
10056b56:	d165      	bne.n	10056c24 <Find_By_Type_Val_Resp+0x1a4>
10056b58:	462a      	mov	r2, r5
10056b5a:	4628      	mov	r0, r5
10056b5c:	6a29      	ldr	r1, [r5, #32]
10056b5e:	3228      	adds	r2, #40	; 0x28
10056b60:	3020      	adds	r0, #32
10056b62:	4281      	cmp	r1, r0
10056b64:	d002      	beq.n	10056b6c <Find_By_Type_Val_Resp+0xec>
10056b66:	6a6b      	ldr	r3, [r5, #36]	; 0x24
10056b68:	331c      	adds	r3, #28
10056b6a:	e000      	b.n	10056b6e <Find_By_Type_Val_Resp+0xee>
10056b6c:	4613      	mov	r3, r2
10056b6e:	a902      	add	r1, sp, #8
10056b70:	980a      	ldr	r0, [sp, #40]	; 0x28
10056b72:	f7ff fd52 	bl	1005661a <ATT_fill_type_val_entry>
10056b76:	e055      	b.n	10056c24 <Find_By_Type_Val_Resp+0x1a4>
10056b78:	462e      	mov	r6, r5
10056b7a:	6a2c      	ldr	r4, [r5, #32]
10056b7c:	3620      	adds	r6, #32
10056b7e:	42b4      	cmp	r4, r6
10056b80:	d14e      	bne.n	10056c20 <Find_By_Type_Val_Resp+0x1a0>
10056b82:	e04f      	b.n	10056c24 <Find_By_Type_Val_Resp+0x1a4>
10056b84:	4669      	mov	r1, sp
10056b86:	8ba0      	ldrh	r0, [r4, #28]
10056b88:	8809      	ldrh	r1, [r1, #0]
10056b8a:	4288      	cmp	r0, r1
10056b8c:	d347      	bcc.n	10056c1e <Find_By_Type_Val_Resp+0x19e>
10056b8e:	4669      	mov	r1, sp
10056b90:	8889      	ldrh	r1, [r1, #4]
10056b92:	4288      	cmp	r0, r1
10056b94:	d857      	bhi.n	10056c46 <Find_By_Type_Val_Resp+0x1c6>
10056b96:	2023      	movs	r0, #35	; 0x23
10056b98:	5d00      	ldrb	r0, [r0, r4]
10056b9a:	2801      	cmp	r0, #1
10056b9c:	d13f      	bne.n	10056c1e <Find_By_Type_Val_Resp+0x19e>
10056b9e:	4620      	mov	r0, r4
10056ba0:	9908      	ldr	r1, [sp, #32]
10056ba2:	f7f3 fef1 	bl	1004a988 <Find_Attr_Index>
10056ba6:	8c21      	ldrh	r1, [r4, #32]
10056ba8:	69a2      	ldr	r2, [r4, #24]
10056baa:	4341      	muls	r1, r0
10056bac:	1851      	adds	r1, r2, r1
10056bae:	220b      	movs	r2, #11
10056bb0:	4638      	mov	r0, r7
10056bb2:	9b03      	ldr	r3, [sp, #12]
10056bb4:	f7f9 fe08 	bl	100507c8 <PM_Pckt_Cmp>
10056bb8:	9006      	str	r0, [sp, #24]
10056bba:	9808      	ldr	r0, [sp, #32]
10056bbc:	2201      	movs	r2, #1
10056bbe:	8800      	ldrh	r0, [r0, #0]
10056bc0:	4621      	mov	r1, r4
10056bc2:	0500      	lsls	r0, r0, #20
10056bc4:	0d00      	lsrs	r0, r0, #20
10056bc6:	f7ff fd93 	bl	100566f0 <Att_Check_Perms>
10056bca:	4601      	mov	r1, r0
10056bcc:	466a      	mov	r2, sp
10056bce:	8920      	ldrh	r0, [r4, #8]
10056bd0:	8a12      	ldrh	r2, [r2, #16]
10056bd2:	4290      	cmp	r0, r2
10056bd4:	d123      	bne.n	10056c1e <Find_By_Type_Val_Resp+0x19e>
10056bd6:	2900      	cmp	r1, #0
10056bd8:	d121      	bne.n	10056c1e <Find_By_Type_Val_Resp+0x19e>
10056bda:	8be2      	ldrh	r2, [r4, #30]
10056bdc:	9903      	ldr	r1, [sp, #12]
10056bde:	428a      	cmp	r2, r1
10056be0:	d11d      	bne.n	10056c1e <Find_By_Type_Val_Resp+0x19e>
10056be2:	9906      	ldr	r1, [sp, #24]
10056be4:	2900      	cmp	r1, #0
10056be6:	d11a      	bne.n	10056c1e <Find_By_Type_Val_Resp+0x19e>
10056be8:	9908      	ldr	r1, [sp, #32]
10056bea:	466a      	mov	r2, sp
10056bec:	8849      	ldrh	r1, [r1, #2]
10056bee:	8912      	ldrh	r2, [r2, #8]
10056bf0:	1a89      	subs	r1, r1, r2
10056bf2:	2904      	cmp	r1, #4
10056bf4:	d327      	bcc.n	10056c46 <Find_By_Type_Val_Resp+0x1c6>
10056bf6:	4622      	mov	r2, r4
10056bf8:	491c      	ldr	r1, [pc, #112]	; (10056c6c <Find_By_Type_Val_Resp+0x1ec>)
10056bfa:	321c      	adds	r2, #28
10056bfc:	4288      	cmp	r0, r1
10056bfe:	d108      	bne.n	10056c12 <Find_By_Type_Val_Resp+0x192>
10056c00:	6820      	ldr	r0, [r4, #0]
10056c02:	42b0      	cmp	r0, r6
10056c04:	d005      	beq.n	10056c12 <Find_By_Type_Val_Resp+0x192>
10056c06:	8900      	ldrh	r0, [r0, #8]
10056c08:	4288      	cmp	r0, r1
10056c0a:	d002      	beq.n	10056c12 <Find_By_Type_Val_Resp+0x192>
10056c0c:	6824      	ldr	r4, [r4, #0]
10056c0e:	e7f7      	b.n	10056c00 <Find_By_Type_Val_Resp+0x180>
10056c10:	e019      	b.n	10056c46 <Find_By_Type_Val_Resp+0x1c6>
10056c12:	4623      	mov	r3, r4
10056c14:	331c      	adds	r3, #28
10056c16:	a902      	add	r1, sp, #8
10056c18:	980a      	ldr	r0, [sp, #40]	; 0x28
10056c1a:	f7ff fcfe 	bl	1005661a <ATT_fill_type_val_entry>
10056c1e:	6824      	ldr	r4, [r4, #0]
10056c20:	42b4      	cmp	r4, r6
10056c22:	d1af      	bne.n	10056b84 <Find_By_Type_Val_Resp+0x104>
10056c24:	682d      	ldr	r5, [r5, #0]
10056c26:	9805      	ldr	r0, [sp, #20]
10056c28:	4285      	cmp	r5, r0
10056c2a:	d00c      	beq.n	10056c46 <Find_By_Type_Val_Resp+0x1c6>
10056c2c:	4668      	mov	r0, sp
10056c2e:	8d29      	ldrh	r1, [r5, #40]	; 0x28
10056c30:	8880      	ldrh	r0, [r0, #4]
10056c32:	4281      	cmp	r1, r0
10056c34:	d807      	bhi.n	10056c46 <Find_By_Type_Val_Resp+0x1c6>
10056c36:	9808      	ldr	r0, [sp, #32]
10056c38:	466a      	mov	r2, sp
10056c3a:	8840      	ldrh	r0, [r0, #2]
10056c3c:	8912      	ldrh	r2, [r2, #8]
10056c3e:	1a80      	subs	r0, r0, r2
10056c40:	2804      	cmp	r0, #4
10056c42:	d300      	bcc.n	10056c46 <Find_By_Type_Val_Resp+0x1c6>
10056c44:	e768      	b.n	10056b18 <Find_By_Type_Val_Resp+0x98>
10056c46:	4668      	mov	r0, sp
10056c48:	8900      	ldrh	r0, [r0, #8]
10056c4a:	2801      	cmp	r0, #1
10056c4c:	d903      	bls.n	10056c56 <Find_By_Type_Val_Resp+0x1d6>
10056c4e:	990a      	ldr	r1, [sp, #40]	; 0x28
10056c50:	80c8      	strh	r0, [r1, #6]
10056c52:	2000      	movs	r0, #0
10056c54:	e749      	b.n	10056aea <Find_By_Type_Val_Resp+0x6a>
10056c56:	4668      	mov	r0, sp
10056c58:	8802      	ldrh	r2, [r0, #0]
10056c5a:	2106      	movs	r1, #6
10056c5c:	200a      	movs	r0, #10
10056c5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
10056c60:	e748      	b.n	10056af4 <Find_By_Type_Val_Resp+0x74>
10056c62:	0000      	.short	0x0000
10056c64:	2000098c 	.word	0x2000098c
10056c68:	0000072c 	.word	0x0000072c
10056c6c:	00002803 	.word	0x00002803

10056c70 <Find_Info_Resp>:
10056c70:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10056c72:	b089      	sub	sp, #36	; 0x24
10056c74:	2400      	movs	r4, #0
10056c76:	4605      	mov	r5, r0
10056c78:	9407      	str	r4, [sp, #28]
10056c7a:	88d0      	ldrh	r0, [r2, #6]
10056c7c:	4616      	mov	r6, r2
10056c7e:	2805      	cmp	r0, #5
10056c80:	d004      	beq.n	10056c8c <Find_Info_Resp+0x1c>
10056c82:	2200      	movs	r2, #0
10056c84:	2104      	movs	r1, #4
10056c86:	4608      	mov	r0, r1
10056c88:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10056c8a:	e020      	b.n	10056cce <Find_Info_Resp+0x5e>
10056c8c:	68b1      	ldr	r1, [r6, #8]
10056c8e:	2202      	movs	r2, #2
10056c90:	a808      	add	r0, sp, #32
10056c92:	310d      	adds	r1, #13
10056c94:	f7ec fa93 	bl	100431be <Osal_MemCpy>
10056c98:	68b1      	ldr	r1, [r6, #8]
10056c9a:	2202      	movs	r2, #2
10056c9c:	4668      	mov	r0, sp
10056c9e:	310f      	adds	r1, #15
10056ca0:	f7ec fa8d 	bl	100431be <Osal_MemCpy>
10056ca4:	4668      	mov	r0, sp
10056ca6:	8c02      	ldrh	r2, [r0, #32]
10056ca8:	8800      	ldrh	r0, [r0, #0]
10056caa:	4282      	cmp	r2, r0
10056cac:	d80c      	bhi.n	10056cc8 <Find_Info_Resp+0x58>
10056cae:	2a00      	cmp	r2, #0
10056cb0:	d00a      	beq.n	10056cc8 <Find_Info_Resp+0x58>
10056cb2:	980a      	ldr	r0, [sp, #40]	; 0x28
10056cb4:	2100      	movs	r1, #0
10056cb6:	8842      	ldrh	r2, [r0, #2]
10056cb8:	980c      	ldr	r0, [sp, #48]	; 0x30
10056cba:	f000 f8cd 	bl	10056e58 <Pm_Resize_Host_Acl_Pckt>
10056cbe:	2800      	cmp	r0, #0
10056cc0:	d008      	beq.n	10056cd4 <Find_Info_Resp+0x64>
10056cc2:	2045      	movs	r0, #69	; 0x45
10056cc4:	b00d      	add	sp, #52	; 0x34
10056cc6:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056cc8:	2104      	movs	r1, #4
10056cca:	2001      	movs	r0, #1
10056ccc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10056cce:	f7ff fc91 	bl	100565f4 <ATT_fill_error_resp>
10056cd2:	e0b9      	b.n	10056e48 <Find_Info_Resp+0x1d8>
10056cd4:	4668      	mov	r0, sp
10056cd6:	8c00      	ldrh	r0, [r0, #32]
10056cd8:	f7f4 fb14 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
10056cdc:	0006      	movs	r6, r0
10056cde:	d076      	beq.n	10056dce <Find_Info_Resp+0x15e>
10056ce0:	3508      	adds	r5, #8
10056ce2:	9504      	str	r5, [sp, #16]
10056ce4:	9804      	ldr	r0, [sp, #16]
10056ce6:	4286      	cmp	r6, r0
10056ce8:	d072      	beq.n	10056dd0 <Find_Info_Resp+0x160>
10056cea:	4669      	mov	r1, sp
10056cec:	8d30      	ldrh	r0, [r6, #40]	; 0x28
10056cee:	8c09      	ldrh	r1, [r1, #32]
10056cf0:	4288      	cmp	r0, r1
10056cf2:	d330      	bcc.n	10056d56 <Find_Info_Resp+0xe6>
10056cf4:	4669      	mov	r1, sp
10056cf6:	8809      	ldrh	r1, [r1, #0]
10056cf8:	4288      	cmp	r0, r1
10056cfa:	d82c      	bhi.n	10056d56 <Find_Info_Resp+0xe6>
10056cfc:	2c00      	cmp	r4, #0
10056cfe:	d10a      	bne.n	10056d16 <Find_Info_Resp+0xa6>
10056d00:	2101      	movs	r1, #1
10056d02:	9107      	str	r1, [sp, #28]
10056d04:	980c      	ldr	r0, [sp, #48]	; 0x30
10056d06:	2105      	movs	r1, #5
10056d08:	6880      	ldr	r0, [r0, #8]
10056d0a:	2402      	movs	r4, #2
10056d0c:	7301      	strb	r1, [r0, #12]
10056d0e:	980c      	ldr	r0, [sp, #48]	; 0x30
10056d10:	9907      	ldr	r1, [sp, #28]
10056d12:	6880      	ldr	r0, [r0, #8]
10056d14:	7341      	strb	r1, [r0, #13]
10056d16:	980a      	ldr	r0, [sp, #40]	; 0x28
10056d18:	8840      	ldrh	r0, [r0, #2]
10056d1a:	1b00      	subs	r0, r0, r4
10056d1c:	2804      	cmp	r0, #4
10056d1e:	d357      	bcc.n	10056dd0 <Find_Info_Resp+0x160>
10056d20:	9807      	ldr	r0, [sp, #28]
10056d22:	2801      	cmp	r0, #1
10056d24:	d154      	bne.n	10056dd0 <Find_Info_Resp+0x160>
10056d26:	1d20      	adds	r0, r4, #4
10056d28:	b281      	uxth	r1, r0
10056d2a:	4633      	mov	r3, r6
10056d2c:	3328      	adds	r3, #40	; 0x28
10056d2e:	2202      	movs	r2, #2
10056d30:	980c      	ldr	r0, [sp, #48]	; 0x30
10056d32:	f7f9 fda3 	bl	1005087c <PM_Write_Pckt_Data>
10056d36:	1da0      	adds	r0, r4, #6
10056d38:	b281      	uxth	r1, r0
10056d3a:	4633      	mov	r3, r6
10056d3c:	332a      	adds	r3, #42	; 0x2a
10056d3e:	2202      	movs	r2, #2
10056d40:	1ca4      	adds	r4, r4, #2
10056d42:	980c      	ldr	r0, [sp, #48]	; 0x30
10056d44:	f7f9 fd9a 	bl	1005087c <PM_Write_Pckt_Data>
10056d48:	4669      	mov	r1, sp
10056d4a:	1ca4      	adds	r4, r4, #2
10056d4c:	8d30      	ldrh	r0, [r6, #40]	; 0x28
10056d4e:	8809      	ldrh	r1, [r1, #0]
10056d50:	b2a4      	uxth	r4, r4
10056d52:	4288      	cmp	r0, r1
10056d54:	d074      	beq.n	10056e40 <Find_Info_Resp+0x1d0>
10056d56:	4637      	mov	r7, r6
10056d58:	6a35      	ldr	r5, [r6, #32]
10056d5a:	3720      	adds	r7, #32
10056d5c:	42bd      	cmp	r5, r7
10056d5e:	d0c1      	beq.n	10056ce4 <Find_Info_Resp+0x74>
10056d60:	e060      	b.n	10056e24 <Find_Info_Resp+0x1b4>
10056d62:	4669      	mov	r1, sp
10056d64:	8ba8      	ldrh	r0, [r5, #28]
10056d66:	8c09      	ldrh	r1, [r1, #32]
10056d68:	4288      	cmp	r0, r1
10056d6a:	d35a      	bcc.n	10056e22 <Find_Info_Resp+0x1b2>
10056d6c:	4669      	mov	r1, sp
10056d6e:	8809      	ldrh	r1, [r1, #0]
10056d70:	4288      	cmp	r0, r1
10056d72:	d865      	bhi.n	10056e40 <Find_Info_Resp+0x1d0>
10056d74:	2c00      	cmp	r4, #0
10056d76:	d036      	beq.n	10056de6 <Find_Info_Resp+0x176>
10056d78:	2023      	movs	r0, #35	; 0x23
10056d7a:	5d41      	ldrb	r1, [r0, r5]
10056d7c:	9807      	ldr	r0, [sp, #28]
10056d7e:	4281      	cmp	r1, r0
10056d80:	d160      	bne.n	10056e44 <Find_Info_Resp+0x1d4>
10056d82:	980a      	ldr	r0, [sp, #40]	; 0x28
10056d84:	8840      	ldrh	r0, [r0, #2]
10056d86:	1b00      	subs	r0, r0, r4
10056d88:	2804      	cmp	r0, #4
10056d8a:	d302      	bcc.n	10056d92 <Find_Info_Resp+0x122>
10056d8c:	9907      	ldr	r1, [sp, #28]
10056d8e:	2901      	cmp	r1, #1
10056d90:	d004      	beq.n	10056d9c <Find_Info_Resp+0x12c>
10056d92:	2812      	cmp	r0, #18
10056d94:	d356      	bcc.n	10056e44 <Find_Info_Resp+0x1d4>
10056d96:	9807      	ldr	r0, [sp, #28]
10056d98:	2802      	cmp	r0, #2
10056d9a:	d153      	bne.n	10056e44 <Find_Info_Resp+0x1d4>
10056d9c:	1d20      	adds	r0, r4, #4
10056d9e:	b281      	uxth	r1, r0
10056da0:	462b      	mov	r3, r5
10056da2:	331c      	adds	r3, #28
10056da4:	2202      	movs	r2, #2
10056da6:	980c      	ldr	r0, [sp, #48]	; 0x30
10056da8:	f7f9 fd68 	bl	1005087c <PM_Write_Pckt_Data>
10056dac:	1ca4      	adds	r4, r4, #2
10056dae:	9807      	ldr	r0, [sp, #28]
10056db0:	b2a4      	uxth	r4, r4
10056db2:	2801      	cmp	r0, #1
10056db4:	d00d      	beq.n	10056dd2 <Find_Info_Resp+0x162>
10056db6:	1d20      	adds	r0, r4, #4
10056db8:	b281      	uxth	r1, r0
10056dba:	462b      	mov	r3, r5
10056dbc:	3308      	adds	r3, #8
10056dbe:	2210      	movs	r2, #16
10056dc0:	980c      	ldr	r0, [sp, #48]	; 0x30
10056dc2:	f7f9 fd5b 	bl	1005087c <PM_Write_Pckt_Data>
10056dc6:	4620      	mov	r0, r4
10056dc8:	3010      	adds	r0, #16
10056dca:	b284      	uxth	r4, r0
10056dcc:	e029      	b.n	10056e22 <Find_Info_Resp+0x1b2>
10056dce:	e03d      	b.n	10056e4c <Find_Info_Resp+0x1dc>
10056dd0:	e036      	b.n	10056e40 <Find_Info_Resp+0x1d0>
10056dd2:	1d20      	adds	r0, r4, #4
10056dd4:	b281      	uxth	r1, r0
10056dd6:	462b      	mov	r3, r5
10056dd8:	3308      	adds	r3, #8
10056dda:	2202      	movs	r2, #2
10056ddc:	980c      	ldr	r0, [sp, #48]	; 0x30
10056dde:	f7f9 fd4d 	bl	1005087c <PM_Write_Pckt_Data>
10056de2:	1ca0      	adds	r0, r4, #2
10056de4:	e7f1      	b.n	10056dca <Find_Info_Resp+0x15a>
10056de6:	2023      	movs	r0, #35	; 0x23
10056de8:	5d41      	ldrb	r1, [r0, r5]
10056dea:	9107      	str	r1, [sp, #28]
10056dec:	980c      	ldr	r0, [sp, #48]	; 0x30
10056dee:	2105      	movs	r1, #5
10056df0:	6880      	ldr	r0, [r0, #8]
10056df2:	2202      	movs	r2, #2
10056df4:	7301      	strb	r1, [r0, #12]
10056df6:	980c      	ldr	r0, [sp, #48]	; 0x30
10056df8:	9907      	ldr	r1, [sp, #28]
10056dfa:	6880      	ldr	r0, [r0, #8]
10056dfc:	7341      	strb	r1, [r0, #13]
10056dfe:	980c      	ldr	r0, [sp, #48]	; 0x30
10056e00:	4629      	mov	r1, r5
10056e02:	6880      	ldr	r0, [r0, #8]
10056e04:	311c      	adds	r1, #28
10056e06:	300e      	adds	r0, #14
10056e08:	f7ec f9d9 	bl	100431be <Osal_MemCpy>
10056e0c:	9907      	ldr	r1, [sp, #28]
10056e0e:	2901      	cmp	r1, #1
10056e10:	d00c      	beq.n	10056e2c <Find_Info_Resp+0x1bc>
10056e12:	462b      	mov	r3, r5
10056e14:	3308      	adds	r3, #8
10056e16:	2210      	movs	r2, #16
10056e18:	2108      	movs	r1, #8
10056e1a:	980c      	ldr	r0, [sp, #48]	; 0x30
10056e1c:	f7f9 fd2e 	bl	1005087c <PM_Write_Pckt_Data>
10056e20:	2414      	movs	r4, #20
10056e22:	682d      	ldr	r5, [r5, #0]
10056e24:	42bd      	cmp	r5, r7
10056e26:	d19c      	bne.n	10056d62 <Find_Info_Resp+0xf2>
10056e28:	6836      	ldr	r6, [r6, #0]
10056e2a:	e75b      	b.n	10056ce4 <Find_Info_Resp+0x74>
10056e2c:	980c      	ldr	r0, [sp, #48]	; 0x30
10056e2e:	4629      	mov	r1, r5
10056e30:	6880      	ldr	r0, [r0, #8]
10056e32:	2202      	movs	r2, #2
10056e34:	3108      	adds	r1, #8
10056e36:	3010      	adds	r0, #16
10056e38:	f7ec f9c1 	bl	100431be <Osal_MemCpy>
10056e3c:	2406      	movs	r4, #6
10056e3e:	e7f0      	b.n	10056e22 <Find_Info_Resp+0x1b2>
10056e40:	2c00      	cmp	r4, #0
10056e42:	d003      	beq.n	10056e4c <Find_Info_Resp+0x1dc>
10056e44:	980c      	ldr	r0, [sp, #48]	; 0x30
10056e46:	80c4      	strh	r4, [r0, #6]
10056e48:	2000      	movs	r0, #0
10056e4a:	e73b      	b.n	10056cc4 <Find_Info_Resp+0x54>
10056e4c:	4668      	mov	r0, sp
10056e4e:	8c02      	ldrh	r2, [r0, #32]
10056e50:	2104      	movs	r1, #4
10056e52:	200a      	movs	r0, #10
10056e54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10056e56:	e73a      	b.n	10056cce <Find_Info_Resp+0x5e>

10056e58 <Pm_Resize_Host_Acl_Pckt>:
10056e58:	b510      	push	{r4, lr}
10056e5a:	1d12      	adds	r2, r2, #4
10056e5c:	6880      	ldr	r0, [r0, #8]
10056e5e:	b292      	uxth	r2, r2
10056e60:	f7f9 fcd6 	bl	10050810 <PM_Resize_Pckt_Pdu_Size>
10056e64:	bd10      	pop	{r4, pc}
	...

10056e68 <Prepare_Write_Resp>:
10056e68:	b5f0      	push	{r4, r5, r6, r7, lr}
10056e6a:	4606      	mov	r6, r0
10056e6c:	485a      	ldr	r0, [pc, #360]	; (10056fd8 <Prepare_Write_Resp+0x170>)
10056e6e:	460c      	mov	r4, r1
10056e70:	6800      	ldr	r0, [r0, #0]
10056e72:	495a      	ldr	r1, [pc, #360]	; (10056fdc <Prepare_Write_Resp+0x174>)
10056e74:	b08d      	sub	sp, #52	; 0x34
10056e76:	1847      	adds	r7, r0, r1
10056e78:	88e0      	ldrh	r0, [r4, #6]
10056e7a:	4615      	mov	r5, r2
10056e7c:	2805      	cmp	r0, #5
10056e7e:	d204      	bcs.n	10056e8a <Prepare_Write_Resp+0x22>
10056e80:	4613      	mov	r3, r2
10056e82:	2200      	movs	r2, #0
10056e84:	2116      	movs	r1, #22
10056e86:	2004      	movs	r0, #4
10056e88:	e0a2      	b.n	10056fd0 <Prepare_Write_Resp+0x168>
10056e8a:	68a1      	ldr	r1, [r4, #8]
10056e8c:	2202      	movs	r2, #2
10056e8e:	a808      	add	r0, sp, #32
10056e90:	310d      	adds	r1, #13
10056e92:	f7ec f994 	bl	100431be <Osal_MemCpy>
10056e96:	4668      	mov	r0, sp
10056e98:	8c00      	ldrh	r0, [r0, #32]
10056e9a:	2800      	cmp	r0, #0
10056e9c:	d073      	beq.n	10056f86 <Prepare_Write_Resp+0x11e>
10056e9e:	f7f4 fa31 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
10056ea2:	0001      	movs	r1, r0
10056ea4:	d06f      	beq.n	10056f86 <Prepare_Write_Resp+0x11e>
10056ea6:	4668      	mov	r0, sp
10056ea8:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
10056eaa:	8c00      	ldrh	r0, [r0, #32]
10056eac:	4282      	cmp	r2, r0
10056eae:	d104      	bne.n	10056eba <Prepare_Write_Resp+0x52>
10056eb0:	4602      	mov	r2, r0
10056eb2:	2116      	movs	r1, #22
10056eb4:	462b      	mov	r3, r5
10056eb6:	2003      	movs	r0, #3
10056eb8:	e08a      	b.n	10056fd0 <Prepare_Write_Resp+0x168>
10056eba:	aa01      	add	r2, sp, #4
10056ebc:	f7f5 f8b4 	bl	1004c028 <Gatt_search_handle>
10056ec0:	2800      	cmp	r0, #0
10056ec2:	d160      	bne.n	10056f86 <Prepare_Write_Resp+0x11e>
10056ec4:	8830      	ldrh	r0, [r6, #0]
10056ec6:	2202      	movs	r2, #2
10056ec8:	0500      	lsls	r0, r0, #20
10056eca:	0d00      	lsrs	r0, r0, #20
10056ecc:	9901      	ldr	r1, [sp, #4]
10056ece:	f7ff fc0f 	bl	100566f0 <Att_Check_Perms>
10056ed2:	2800      	cmp	r0, #0
10056ed4:	d004      	beq.n	10056ee0 <Prepare_Write_Resp+0x78>
10056ed6:	4669      	mov	r1, sp
10056ed8:	8c0a      	ldrh	r2, [r1, #32]
10056eda:	462b      	mov	r3, r5
10056edc:	2116      	movs	r1, #22
10056ede:	e077      	b.n	10056fd0 <Prepare_Write_Resp+0x168>
10056ee0:	4638      	mov	r0, r7
10056ee2:	3030      	adds	r0, #48	; 0x30
10056ee4:	4621      	mov	r1, r4
10056ee6:	9000      	str	r0, [sp, #0]
10056ee8:	f7fe ffba 	bl	10055e60 <acl_list_full_on_packt>
10056eec:	2801      	cmp	r0, #1
10056eee:	d044      	beq.n	10056f7a <Prepare_Write_Resp+0x112>
10056ef0:	9801      	ldr	r0, [sp, #4]
10056ef2:	3020      	adds	r0, #32
10056ef4:	7980      	ldrb	r0, [r0, #6]
10056ef6:	0780      	lsls	r0, r0, #30
10056ef8:	d546      	bpl.n	10056f88 <Prepare_Write_Resp+0x120>
10056efa:	6930      	ldr	r0, [r6, #16]
10056efc:	0381      	lsls	r1, r0, #14
10056efe:	d443      	bmi.n	10056f88 <Prepare_Write_Resp+0x120>
10056f00:	01c0      	lsls	r0, r0, #7
10056f02:	d441      	bmi.n	10056f88 <Prepare_Write_Resp+0x120>
10056f04:	68a1      	ldr	r1, [r4, #8]
10056f06:	2202      	movs	r2, #2
10056f08:	a809      	add	r0, sp, #36	; 0x24
10056f0a:	310f      	adds	r1, #15
10056f0c:	f7ec f957 	bl	100431be <Osal_MemCpy>
10056f10:	2101      	movs	r1, #1
10056f12:	6930      	ldr	r0, [r6, #16]
10056f14:	0449      	lsls	r1, r1, #17
10056f16:	4308      	orrs	r0, r1
10056f18:	6130      	str	r0, [r6, #16]
10056f1a:	2002      	movs	r0, #2
10056f1c:	9007      	str	r0, [sp, #28]
10056f1e:	8830      	ldrh	r0, [r6, #0]
10056f20:	9006      	str	r0, [sp, #24]
10056f22:	9801      	ldr	r0, [sp, #4]
10056f24:	2103      	movs	r1, #3
10056f26:	8b87      	ldrh	r7, [r0, #28]
10056f28:	4668      	mov	r0, sp
10056f2a:	8c86      	ldrh	r6, [r0, #36]	; 0x24
10056f2c:	79a0      	ldrb	r0, [r4, #6]
10056f2e:	940a      	str	r4, [sp, #40]	; 0x28
10056f30:	1f40      	subs	r0, r0, #5
10056f32:	b2c5      	uxtb	r5, r0
10056f34:	1de8      	adds	r0, r5, #7
10056f36:	4308      	orrs	r0, r1
10056f38:	1c40      	adds	r0, r0, #1
10056f3a:	0883      	lsrs	r3, r0, #2
10056f3c:	4826      	ldr	r0, [pc, #152]	; (10056fd8 <Prepare_Write_Resp+0x170>)
10056f3e:	2102      	movs	r1, #2
10056f40:	6800      	ldr	r0, [r0, #0]
10056f42:	028c      	lsls	r4, r1, #10
10056f44:	3008      	adds	r0, #8
10056f46:	1900      	adds	r0, r0, r4
10056f48:	2235      	movs	r2, #53	; 0x35
10056f4a:	6940      	ldr	r0, [r0, #20]
10056f4c:	f7fe f94e 	bl	100551ec <aci_event_fifo_push_header>
10056f50:	0004      	movs	r4, r0
10056f52:	d00f      	beq.n	10056f74 <Prepare_Write_Resp+0x10c>
10056f54:	9806      	ldr	r0, [sp, #24]
10056f56:	80a0      	strh	r0, [r4, #4]
10056f58:	80e7      	strh	r7, [r4, #6]
10056f5a:	8126      	strh	r6, [r4, #8]
10056f5c:	72a5      	strb	r5, [r4, #10]
10056f5e:	4623      	mov	r3, r4
10056f60:	462a      	mov	r2, r5
10056f62:	2109      	movs	r1, #9
10056f64:	330b      	adds	r3, #11
10056f66:	980a      	ldr	r0, [sp, #40]	; 0x28
10056f68:	f7f9 fb98 	bl	1005069c <PM_Copy_Pckt_Data>
10056f6c:	4621      	mov	r1, r4
10056f6e:	9807      	ldr	r0, [sp, #28]
10056f70:	f7fe f928 	bl	100551c4 <aci_event_fifo_push>
10056f74:	2069      	movs	r0, #105	; 0x69
10056f76:	b00d      	add	sp, #52	; 0x34
10056f78:	bdf0      	pop	{r4, r5, r6, r7, pc}
10056f7a:	4668      	mov	r0, sp
10056f7c:	8c02      	ldrh	r2, [r0, #32]
10056f7e:	2116      	movs	r1, #22
10056f80:	462b      	mov	r3, r5
10056f82:	2009      	movs	r0, #9
10056f84:	e024      	b.n	10056fd0 <Prepare_Write_Resp+0x168>
10056f86:	e01e      	b.n	10056fc6 <Prepare_Write_Resp+0x15e>
10056f88:	88e2      	ldrh	r2, [r4, #6]
10056f8a:	2100      	movs	r1, #0
10056f8c:	4628      	mov	r0, r5
10056f8e:	f7ff ff63 	bl	10056e58 <Pm_Resize_Host_Acl_Pckt>
10056f92:	2800      	cmp	r0, #0
10056f94:	d001      	beq.n	10056f9a <Prepare_Write_Resp+0x132>
10056f96:	2045      	movs	r0, #69	; 0x45
10056f98:	e7ed      	b.n	10056f76 <Prepare_Write_Resp+0x10e>
10056f9a:	4638      	mov	r0, r7
10056f9c:	4621      	mov	r1, r4
10056f9e:	3024      	adds	r0, #36	; 0x24
10056fa0:	f7fe ffa9 	bl	10055ef6 <acl_list_remove>
10056fa4:	4621      	mov	r1, r4
10056fa6:	4628      	mov	r0, r5
10056fa8:	f7f9 fb3c 	bl	10050624 <PM_Clone_Pckt>
10056fac:	4621      	mov	r1, r4
10056fae:	9800      	ldr	r0, [sp, #0]
10056fb0:	f7fe ff84 	bl	10055ebc <acl_list_insert_tail>
10056fb4:	68a8      	ldr	r0, [r5, #8]
10056fb6:	2117      	movs	r1, #23
10056fb8:	7301      	strb	r1, [r0, #12]
10056fba:	88e8      	ldrh	r0, [r5, #6]
10056fbc:	2800      	cmp	r0, #0
10056fbe:	d002      	beq.n	10056fc6 <Prepare_Write_Resp+0x15e>
10056fc0:	80e8      	strh	r0, [r5, #6]
10056fc2:	2067      	movs	r0, #103	; 0x67
10056fc4:	e7d7      	b.n	10056f76 <Prepare_Write_Resp+0x10e>
10056fc6:	4668      	mov	r0, sp
10056fc8:	8c02      	ldrh	r2, [r0, #32]
10056fca:	462b      	mov	r3, r5
10056fcc:	2116      	movs	r1, #22
10056fce:	2001      	movs	r0, #1
10056fd0:	f7ff fb10 	bl	100565f4 <ATT_fill_error_resp>
10056fd4:	2000      	movs	r0, #0
10056fd6:	e7ce      	b.n	10056f76 <Prepare_Write_Resp+0x10e>
10056fd8:	2000098c 	.word	0x2000098c
10056fdc:	0000072c 	.word	0x0000072c

10056fe0 <Read_Blob_Resp>:
10056fe0:	b570      	push	{r4, r5, r6, lr}
10056fe2:	4605      	mov	r5, r0
10056fe4:	88c8      	ldrh	r0, [r1, #6]
10056fe6:	b088      	sub	sp, #32
10056fe8:	460c      	mov	r4, r1
10056fea:	4616      	mov	r6, r2
10056fec:	2805      	cmp	r0, #5
10056fee:	d004      	beq.n	10056ffa <Read_Blob_Resp+0x1a>
10056ff0:	4613      	mov	r3, r2
10056ff2:	2200      	movs	r2, #0
10056ff4:	210c      	movs	r1, #12
10056ff6:	2004      	movs	r0, #4
10056ff8:	e01f      	b.n	1005703a <Read_Blob_Resp+0x5a>
10056ffa:	68a1      	ldr	r1, [r4, #8]
10056ffc:	2202      	movs	r2, #2
10056ffe:	a804      	add	r0, sp, #16
10057000:	310d      	adds	r1, #13
10057002:	f7ec f8dc 	bl	100431be <Osal_MemCpy>
10057006:	4668      	mov	r0, sp
10057008:	8a02      	ldrh	r2, [r0, #16]
1005700a:	2a00      	cmp	r2, #0
1005700c:	d013      	beq.n	10057036 <Read_Blob_Resp+0x56>
1005700e:	68a1      	ldr	r1, [r4, #8]
10057010:	2202      	movs	r2, #2
10057012:	a802      	add	r0, sp, #8
10057014:	310f      	adds	r1, #15
10057016:	f7ec f8d2 	bl	100431be <Osal_MemCpy>
1005701a:	4668      	mov	r0, sp
1005701c:	8a00      	ldrh	r0, [r0, #16]
1005701e:	f7f4 f971 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
10057022:	0001      	movs	r1, r0
10057024:	d076      	beq.n	10057114 <Read_Blob_Resp+0x134>
10057026:	4668      	mov	r0, sp
10057028:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
1005702a:	8a00      	ldrh	r0, [r0, #16]
1005702c:	4282      	cmp	r2, r0
1005702e:	d107      	bne.n	10057040 <Read_Blob_Resp+0x60>
10057030:	4633      	mov	r3, r6
10057032:	4602      	mov	r2, r0
10057034:	e020      	b.n	10057078 <Read_Blob_Resp+0x98>
10057036:	4633      	mov	r3, r6
10057038:	e06f      	b.n	1005711a <Read_Blob_Resp+0x13a>
1005703a:	f7ff fadb 	bl	100565f4 <ATT_fill_error_resp>
1005703e:	e066      	b.n	1005710e <Read_Blob_Resp+0x12e>
10057040:	466a      	mov	r2, sp
10057042:	f7f4 fff1 	bl	1004c028 <Gatt_search_handle>
10057046:	2800      	cmp	r0, #0
10057048:	d164      	bne.n	10057114 <Read_Blob_Resp+0x134>
1005704a:	8828      	ldrh	r0, [r5, #0]
1005704c:	2201      	movs	r2, #1
1005704e:	0500      	lsls	r0, r0, #20
10057050:	0d00      	lsrs	r0, r0, #20
10057052:	9900      	ldr	r1, [sp, #0]
10057054:	f7ff fb4c 	bl	100566f0 <Att_Check_Perms>
10057058:	2800      	cmp	r0, #0
1005705a:	d004      	beq.n	10057066 <Read_Blob_Resp+0x86>
1005705c:	4669      	mov	r1, sp
1005705e:	8a0a      	ldrh	r2, [r1, #16]
10057060:	4633      	mov	r3, r6
10057062:	210c      	movs	r1, #12
10057064:	e7e9      	b.n	1005703a <Read_Blob_Resp+0x5a>
10057066:	9800      	ldr	r0, [sp, #0]
10057068:	886a      	ldrh	r2, [r5, #2]
1005706a:	8bc1      	ldrh	r1, [r0, #30]
1005706c:	1ed3      	subs	r3, r2, #3
1005706e:	4299      	cmp	r1, r3
10057070:	d805      	bhi.n	1005707e <Read_Blob_Resp+0x9e>
10057072:	4668      	mov	r0, sp
10057074:	8a02      	ldrh	r2, [r0, #16]
10057076:	4633      	mov	r3, r6
10057078:	210c      	movs	r1, #12
1005707a:	200b      	movs	r0, #11
1005707c:	e7dd      	b.n	1005703a <Read_Blob_Resp+0x5a>
1005707e:	466b      	mov	r3, sp
10057080:	891b      	ldrh	r3, [r3, #8]
10057082:	4299      	cmp	r1, r3
10057084:	d205      	bcs.n	10057092 <Read_Blob_Resp+0xb2>
10057086:	4668      	mov	r0, sp
10057088:	8a02      	ldrh	r2, [r0, #16]
1005708a:	210c      	movs	r1, #12
1005708c:	4633      	mov	r3, r6
1005708e:	2007      	movs	r0, #7
10057090:	e7d3      	b.n	1005703a <Read_Blob_Resp+0x5a>
10057092:	2126      	movs	r1, #38	; 0x26
10057094:	5c09      	ldrb	r1, [r1, r0]
10057096:	0749      	lsls	r1, r1, #29
10057098:	d50e      	bpl.n	100570b8 <Read_Blob_Resp+0xd8>
1005709a:	6929      	ldr	r1, [r5, #16]
1005709c:	030c      	lsls	r4, r1, #12
1005709e:	d40b      	bmi.n	100570b8 <Read_Blob_Resp+0xd8>
100570a0:	2201      	movs	r2, #1
100570a2:	04d2      	lsls	r2, r2, #19
100570a4:	4311      	orrs	r1, r2
100570a6:	6129      	str	r1, [r5, #16]
100570a8:	8b82      	ldrh	r2, [r0, #28]
100570aa:	8829      	ldrh	r1, [r5, #0]
100570ac:	2002      	movs	r0, #2
100570ae:	f000 fd97 	bl	10057be0 <aci_gatt_read_permit_req_event_push>
100570b2:	2069      	movs	r0, #105	; 0x69
100570b4:	b008      	add	sp, #32
100570b6:	bd70      	pop	{r4, r5, r6, pc}
100570b8:	2100      	movs	r1, #0
100570ba:	4630      	mov	r0, r6
100570bc:	f7ff fecc 	bl	10056e58 <Pm_Resize_Host_Acl_Pckt>
100570c0:	2800      	cmp	r0, #0
100570c2:	d001      	beq.n	100570c8 <Read_Blob_Resp+0xe8>
100570c4:	2045      	movs	r0, #69	; 0x45
100570c6:	e7f5      	b.n	100570b4 <Read_Blob_Resp+0xd4>
100570c8:	68b0      	ldr	r0, [r6, #8]
100570ca:	210d      	movs	r1, #13
100570cc:	7301      	strb	r1, [r0, #12]
100570ce:	4629      	mov	r1, r5
100570d0:	9800      	ldr	r0, [sp, #0]
100570d2:	f7f3 fc59 	bl	1004a988 <Find_Attr_Index>
100570d6:	4601      	mov	r1, r0
100570d8:	9800      	ldr	r0, [sp, #0]
100570da:	466a      	mov	r2, sp
100570dc:	8bc3      	ldrh	r3, [r0, #30]
100570de:	8912      	ldrh	r2, [r2, #8]
100570e0:	1a9b      	subs	r3, r3, r2
100570e2:	b29c      	uxth	r4, r3
100570e4:	886b      	ldrh	r3, [r5, #2]
100570e6:	1e5b      	subs	r3, r3, #1
100570e8:	b29b      	uxth	r3, r3
100570ea:	429c      	cmp	r4, r3
100570ec:	d300      	bcc.n	100570f0 <Read_Blob_Resp+0x110>
100570ee:	461c      	mov	r4, r3
100570f0:	6983      	ldr	r3, [r0, #24]
100570f2:	8c00      	ldrh	r0, [r0, #32]
100570f4:	4348      	muls	r0, r1
100570f6:	1818      	adds	r0, r3, r0
100570f8:	1883      	adds	r3, r0, r2
100570fa:	2105      	movs	r1, #5
100570fc:	4622      	mov	r2, r4
100570fe:	4630      	mov	r0, r6
10057100:	f7f9 fbbc 	bl	1005087c <PM_Write_Pckt_Data>
10057104:	1c64      	adds	r4, r4, #1
10057106:	0420      	lsls	r0, r4, #16
10057108:	0c00      	lsrs	r0, r0, #16
1005710a:	d003      	beq.n	10057114 <Read_Blob_Resp+0x134>
1005710c:	80f0      	strh	r0, [r6, #6]
1005710e:	2000      	movs	r0, #0
10057110:	e7d0      	b.n	100570b4 <Read_Blob_Resp+0xd4>
10057112:	e7ff      	b.n	10057114 <Read_Blob_Resp+0x134>
10057114:	4668      	mov	r0, sp
10057116:	8a02      	ldrh	r2, [r0, #16]
10057118:	4633      	mov	r3, r6
1005711a:	210c      	movs	r1, #12
1005711c:	2001      	movs	r0, #1
1005711e:	e78c      	b.n	1005703a <Read_Blob_Resp+0x5a>

10057120 <Read_By_Grp_Type_Resp>:
10057120:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10057122:	2000      	movs	r0, #0
10057124:	b092      	sub	sp, #72	; 0x48
10057126:	4605      	mov	r5, r0
10057128:	9008      	str	r0, [sp, #32]
1005712a:	4873      	ldr	r0, [pc, #460]	; (100572f8 <Read_By_Grp_Type_Resp+0x1d8>)
1005712c:	460c      	mov	r4, r1
1005712e:	6800      	ldr	r0, [r0, #0]
10057130:	4972      	ldr	r1, [pc, #456]	; (100572fc <Read_By_Grp_Type_Resp+0x1dc>)
10057132:	4616      	mov	r6, r2
10057134:	1847      	adds	r7, r0, r1
10057136:	88e0      	ldrh	r0, [r4, #6]
10057138:	2807      	cmp	r0, #7
1005713a:	d006      	beq.n	1005714a <Read_By_Grp_Type_Resp+0x2a>
1005713c:	2815      	cmp	r0, #21
1005713e:	d004      	beq.n	1005714a <Read_By_Grp_Type_Resp+0x2a>
10057140:	4613      	mov	r3, r2
10057142:	2200      	movs	r2, #0
10057144:	2110      	movs	r1, #16
10057146:	2004      	movs	r0, #4
10057148:	e045      	b.n	100571d6 <Read_By_Grp_Type_Resp+0xb6>
1005714a:	68a1      	ldr	r1, [r4, #8]
1005714c:	2202      	movs	r2, #2
1005714e:	a805      	add	r0, sp, #20
10057150:	310d      	adds	r1, #13
10057152:	f7ec f834 	bl	100431be <Osal_MemCpy>
10057156:	68a1      	ldr	r1, [r4, #8]
10057158:	2202      	movs	r2, #2
1005715a:	a806      	add	r0, sp, #24
1005715c:	310f      	adds	r1, #15
1005715e:	f7ec f82e 	bl	100431be <Osal_MemCpy>
10057162:	4668      	mov	r0, sp
10057164:	8a82      	ldrh	r2, [r0, #20]
10057166:	8b00      	ldrh	r0, [r0, #24]
10057168:	4282      	cmp	r2, r0
1005716a:	d831      	bhi.n	100571d0 <Read_By_Grp_Type_Resp+0xb0>
1005716c:	2a00      	cmp	r2, #0
1005716e:	d02f      	beq.n	100571d0 <Read_By_Grp_Type_Resp+0xb0>
10057170:	2210      	movs	r2, #16
10057172:	4963      	ldr	r1, [pc, #396]	; (10057300 <Read_By_Grp_Type_Resp+0x1e0>)
10057174:	a80d      	add	r0, sp, #52	; 0x34
10057176:	f7ec f822 	bl	100431be <Osal_MemCpy>
1005717a:	88e1      	ldrh	r1, [r4, #6]
1005717c:	a80c      	add	r0, sp, #48	; 0x30
1005717e:	9001      	str	r0, [sp, #4]
10057180:	2907      	cmp	r1, #7
10057182:	d02b      	beq.n	100571dc <Read_By_Grp_Type_Resp+0xbc>
10057184:	4603      	mov	r3, r0
10057186:	2210      	movs	r2, #16
10057188:	2109      	movs	r1, #9
1005718a:	4620      	mov	r0, r4
1005718c:	f7f9 fa86 	bl	1005069c <PM_Copy_Pckt_Data>
10057190:	2202      	movs	r2, #2
10057192:	a807      	add	r0, sp, #28
10057194:	3708      	adds	r7, #8
10057196:	9901      	ldr	r1, [sp, #4]
10057198:	f7ec f811 	bl	100431be <Osal_MemCpy>
1005719c:	4668      	mov	r0, sp
1005719e:	8b80      	ldrh	r0, [r0, #28]
100571a0:	2105      	movs	r1, #5
100571a2:	02c9      	lsls	r1, r1, #11
100571a4:	4288      	cmp	r0, r1
100571a6:	d002      	beq.n	100571ae <Read_By_Grp_Type_Resp+0x8e>
100571a8:	1c49      	adds	r1, r1, #1
100571aa:	4288      	cmp	r0, r1
100571ac:	d17e      	bne.n	100572ac <Read_By_Grp_Type_Resp+0x18c>
100571ae:	4668      	mov	r0, sp
100571b0:	8a80      	ldrh	r0, [r0, #20]
100571b2:	f7f4 f891 	bl	1004b2d8 <Gatt_Find_Srv_From_Handle>
100571b6:	0004      	movs	r4, r0
100571b8:	d079      	beq.n	100572ae <Read_By_Grp_Type_Resp+0x18e>
100571ba:	9812      	ldr	r0, [sp, #72]	; 0x48
100571bc:	2100      	movs	r1, #0
100571be:	8842      	ldrh	r2, [r0, #2]
100571c0:	4630      	mov	r0, r6
100571c2:	f7ff fe49 	bl	10056e58 <Pm_Resize_Host_Acl_Pckt>
100571c6:	2800      	cmp	r0, #0
100571c8:	d07e      	beq.n	100572c8 <Read_By_Grp_Type_Resp+0x1a8>
100571ca:	2045      	movs	r0, #69	; 0x45
100571cc:	b015      	add	sp, #84	; 0x54
100571ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
100571d0:	4633      	mov	r3, r6
100571d2:	2110      	movs	r1, #16
100571d4:	2001      	movs	r0, #1
100571d6:	f7ff fa0d 	bl	100565f4 <ATT_fill_error_resp>
100571da:	e07f      	b.n	100572dc <Read_By_Grp_Type_Resp+0x1bc>
100571dc:	2210      	movs	r2, #16
100571de:	4948      	ldr	r1, [pc, #288]	; (10057300 <Read_By_Grp_Type_Resp+0x1e0>)
100571e0:	a809      	add	r0, sp, #36	; 0x24
100571e2:	f7eb ffec 	bl	100431be <Osal_MemCpy>
100571e6:	68a1      	ldr	r1, [r4, #8]
100571e8:	2202      	movs	r2, #2
100571ea:	3111      	adds	r1, #17
100571ec:	9801      	ldr	r0, [sp, #4]
100571ee:	f7eb ffe6 	bl	100431be <Osal_MemCpy>
100571f2:	e7cd      	b.n	10057190 <Read_By_Grp_Type_Resp+0x70>
100571f4:	4669      	mov	r1, sp
100571f6:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
100571f8:	8b89      	ldrh	r1, [r1, #28]
100571fa:	4288      	cmp	r0, r1
100571fc:	d163      	bne.n	100572c6 <Read_By_Grp_Type_Resp+0x1a6>
100571fe:	2d00      	cmp	r5, #0
10057200:	d10c      	bne.n	1005721c <Read_By_Grp_Type_Resp+0xfc>
10057202:	68b0      	ldr	r0, [r6, #8]
10057204:	2111      	movs	r1, #17
10057206:	7301      	strb	r1, [r0, #12]
10057208:	202c      	movs	r0, #44	; 0x2c
1005720a:	5d00      	ldrb	r0, [r0, r4]
1005720c:	2801      	cmp	r0, #1
1005720e:	d010      	beq.n	10057232 <Read_By_Grp_Type_Resp+0x112>
10057210:	2014      	movs	r0, #20
10057212:	9008      	str	r0, [sp, #32]
10057214:	68b0      	ldr	r0, [r6, #8]
10057216:	9908      	ldr	r1, [sp, #32]
10057218:	7341      	strb	r1, [r0, #13]
1005721a:	2502      	movs	r5, #2
1005721c:	9812      	ldr	r0, [sp, #72]	; 0x48
1005721e:	8840      	ldrh	r0, [r0, #2]
10057220:	1b40      	subs	r0, r0, r5
10057222:	2804      	cmp	r0, #4
10057224:	d357      	bcc.n	100572d6 <Read_By_Grp_Type_Resp+0x1b6>
10057226:	9808      	ldr	r0, [sp, #32]
10057228:	2806      	cmp	r0, #6
1005722a:	d004      	beq.n	10057236 <Read_By_Grp_Type_Resp+0x116>
1005722c:	2814      	cmp	r0, #20
1005722e:	d007      	beq.n	10057240 <Read_By_Grp_Type_Resp+0x120>
10057230:	e051      	b.n	100572d6 <Read_By_Grp_Type_Resp+0x1b6>
10057232:	2006      	movs	r0, #6
10057234:	e7ed      	b.n	10057212 <Read_By_Grp_Type_Resp+0xf2>
10057236:	202c      	movs	r0, #44	; 0x2c
10057238:	5d00      	ldrb	r0, [r0, r4]
1005723a:	2801      	cmp	r0, #1
1005723c:	d004      	beq.n	10057248 <Read_By_Grp_Type_Resp+0x128>
1005723e:	e04a      	b.n	100572d6 <Read_By_Grp_Type_Resp+0x1b6>
10057240:	202c      	movs	r0, #44	; 0x2c
10057242:	5d00      	ldrb	r0, [r0, r4]
10057244:	2802      	cmp	r0, #2
10057246:	d146      	bne.n	100572d6 <Read_By_Grp_Type_Resp+0x1b6>
10057248:	1d28      	adds	r0, r5, #4
1005724a:	4623      	mov	r3, r4
1005724c:	b281      	uxth	r1, r0
1005724e:	3328      	adds	r3, #40	; 0x28
10057250:	2202      	movs	r2, #2
10057252:	4630      	mov	r0, r6
10057254:	9304      	str	r3, [sp, #16]
10057256:	f7f9 fb11 	bl	1005087c <PM_Write_Pckt_Data>
1005725a:	1cad      	adds	r5, r5, #2
1005725c:	4620      	mov	r0, r4
1005725e:	6a21      	ldr	r1, [r4, #32]
10057260:	3020      	adds	r0, #32
10057262:	b2ad      	uxth	r5, r5
10057264:	4281      	cmp	r1, r0
10057266:	d006      	beq.n	10057276 <Read_By_Grp_Type_Resp+0x156>
10057268:	1d28      	adds	r0, r5, #4
1005726a:	6a63      	ldr	r3, [r4, #36]	; 0x24
1005726c:	b281      	uxth	r1, r0
1005726e:	2202      	movs	r2, #2
10057270:	4630      	mov	r0, r6
10057272:	331c      	adds	r3, #28
10057274:	e004      	b.n	10057280 <Read_By_Grp_Type_Resp+0x160>
10057276:	1d28      	adds	r0, r5, #4
10057278:	b281      	uxth	r1, r0
1005727a:	2202      	movs	r2, #2
1005727c:	4630      	mov	r0, r6
1005727e:	9b04      	ldr	r3, [sp, #16]
10057280:	f7f9 fafc 	bl	1005087c <PM_Write_Pckt_Data>
10057284:	9808      	ldr	r0, [sp, #32]
10057286:	1cad      	adds	r5, r5, #2
10057288:	1f00      	subs	r0, r0, #4
1005728a:	b281      	uxth	r1, r0
1005728c:	9812      	ldr	r0, [sp, #72]	; 0x48
1005728e:	b2ad      	uxth	r5, r5
10057290:	8840      	ldrh	r0, [r0, #2]
10057292:	1b40      	subs	r0, r0, r5
10057294:	b280      	uxth	r0, r0
10057296:	4281      	cmp	r1, r0
10057298:	d200      	bcs.n	1005729c <Read_By_Grp_Type_Resp+0x17c>
1005729a:	4608      	mov	r0, r1
1005729c:	9003      	str	r0, [sp, #12]
1005729e:	1d28      	adds	r0, r5, #4
100572a0:	b281      	uxth	r1, r0
100572a2:	4623      	mov	r3, r4
100572a4:	3308      	adds	r3, #8
100572a6:	4630      	mov	r0, r6
100572a8:	9a03      	ldr	r2, [sp, #12]
100572aa:	e002      	b.n	100572b2 <Read_By_Grp_Type_Resp+0x192>
100572ac:	e018      	b.n	100572e0 <Read_By_Grp_Type_Resp+0x1c0>
100572ae:	e01d      	b.n	100572ec <Read_By_Grp_Type_Resp+0x1cc>
100572b0:	e00a      	b.n	100572c8 <Read_By_Grp_Type_Resp+0x1a8>
100572b2:	f7f9 fae3 	bl	1005087c <PM_Write_Pckt_Data>
100572b6:	9803      	ldr	r0, [sp, #12]
100572b8:	1828      	adds	r0, r5, r0
100572ba:	b285      	uxth	r5, r0
100572bc:	9812      	ldr	r0, [sp, #72]	; 0x48
100572be:	8840      	ldrh	r0, [r0, #2]
100572c0:	1b40      	subs	r0, r0, r5
100572c2:	2804      	cmp	r0, #4
100572c4:	d307      	bcc.n	100572d6 <Read_By_Grp_Type_Resp+0x1b6>
100572c6:	6824      	ldr	r4, [r4, #0]
100572c8:	42bc      	cmp	r4, r7
100572ca:	d004      	beq.n	100572d6 <Read_By_Grp_Type_Resp+0x1b6>
100572cc:	4669      	mov	r1, sp
100572ce:	8d20      	ldrh	r0, [r4, #40]	; 0x28
100572d0:	8b09      	ldrh	r1, [r1, #24]
100572d2:	4288      	cmp	r0, r1
100572d4:	d98e      	bls.n	100571f4 <Read_By_Grp_Type_Resp+0xd4>
100572d6:	2d00      	cmp	r5, #0
100572d8:	d008      	beq.n	100572ec <Read_By_Grp_Type_Resp+0x1cc>
100572da:	80f5      	strh	r5, [r6, #6]
100572dc:	2000      	movs	r0, #0
100572de:	e775      	b.n	100571cc <Read_By_Grp_Type_Resp+0xac>
100572e0:	4668      	mov	r0, sp
100572e2:	8a82      	ldrh	r2, [r0, #20]
100572e4:	2110      	movs	r1, #16
100572e6:	4633      	mov	r3, r6
100572e8:	4608      	mov	r0, r1
100572ea:	e774      	b.n	100571d6 <Read_By_Grp_Type_Resp+0xb6>
100572ec:	4668      	mov	r0, sp
100572ee:	8a82      	ldrh	r2, [r0, #20]
100572f0:	2110      	movs	r1, #16
100572f2:	4633      	mov	r3, r6
100572f4:	200a      	movs	r0, #10
100572f6:	e76e      	b.n	100571d6 <Read_By_Grp_Type_Resp+0xb6>
100572f8:	2000098c 	.word	0x2000098c
100572fc:	0000072c 	.word	0x0000072c
10057300:	1005908c 	.word	0x1005908c

10057304 <Read_By_Type_Resp>:
10057304:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
10057306:	b0ff      	sub	sp, #508	; 0x1fc
10057308:	b093      	sub	sp, #76	; 0x4c
1005730a:	4607      	mov	r7, r0
1005730c:	460c      	mov	r4, r1
1005730e:	2000      	movs	r0, #0
10057310:	a980      	add	r1, sp, #512	; 0x200
10057312:	9003      	str	r0, [sp, #12]
10057314:	8388      	strh	r0, [r1, #28]
10057316:	48ad      	ldr	r0, [pc, #692]	; (100575cc <Read_By_Type_Resp+0x2c8>)
10057318:	49ad      	ldr	r1, [pc, #692]	; (100575d0 <Read_By_Type_Resp+0x2cc>)
1005731a:	6800      	ldr	r0, [r0, #0]
1005731c:	2602      	movs	r6, #2
1005731e:	1845      	adds	r5, r0, r1
10057320:	88e0      	ldrh	r0, [r4, #6]
10057322:	2807      	cmp	r0, #7
10057324:	d006      	beq.n	10057334 <Read_By_Type_Resp+0x30>
10057326:	2815      	cmp	r0, #21
10057328:	d004      	beq.n	10057334 <Read_By_Type_Resp+0x30>
1005732a:	2200      	movs	r2, #0
1005732c:	2108      	movs	r1, #8
1005732e:	2004      	movs	r0, #4
10057330:	9b94      	ldr	r3, [sp, #592]	; 0x250
10057332:	e04c      	b.n	100573ce <Read_By_Type_Resp+0xca>
10057334:	68a1      	ldr	r1, [r4, #8]
10057336:	2202      	movs	r2, #2
10057338:	a885      	add	r0, sp, #532	; 0x214
1005733a:	310d      	adds	r1, #13
1005733c:	f7eb ff3f 	bl	100431be <Osal_MemCpy>
10057340:	68a1      	ldr	r1, [r4, #8]
10057342:	2202      	movs	r2, #2
10057344:	a886      	add	r0, sp, #536	; 0x218
10057346:	310f      	adds	r1, #15
10057348:	f7eb ff39 	bl	100431be <Osal_MemCpy>
1005734c:	a880      	add	r0, sp, #512	; 0x200
1005734e:	8a82      	ldrh	r2, [r0, #20]
10057350:	8b00      	ldrh	r0, [r0, #24]
10057352:	4282      	cmp	r2, r0
10057354:	d838      	bhi.n	100573c8 <Read_By_Type_Resp+0xc4>
10057356:	2a00      	cmp	r2, #0
10057358:	d036      	beq.n	100573c8 <Read_By_Type_Resp+0xc4>
1005735a:	2210      	movs	r2, #16
1005735c:	499d      	ldr	r1, [pc, #628]	; (100575d4 <Read_By_Type_Resp+0x2d0>)
1005735e:	a88d      	add	r0, sp, #564	; 0x234
10057360:	f7eb ff2d 	bl	100431be <Osal_MemCpy>
10057364:	88e0      	ldrh	r0, [r4, #6]
10057366:	2807      	cmp	r0, #7
10057368:	d034      	beq.n	100573d4 <Read_By_Type_Resp+0xd0>
1005736a:	ab89      	add	r3, sp, #548	; 0x224
1005736c:	2210      	movs	r2, #16
1005736e:	2109      	movs	r1, #9
10057370:	4620      	mov	r0, r4
10057372:	f7f9 f993 	bl	1005069c <PM_Copy_Pckt_Data>
10057376:	6938      	ldr	r0, [r7, #16]
10057378:	0300      	lsls	r0, r0, #12
1005737a:	d437      	bmi.n	100573ec <Read_By_Type_Resp+0xe8>
1005737c:	8839      	ldrh	r1, [r7, #0]
1005737e:	4668      	mov	r0, sp
10057380:	7401      	strb	r1, [r0, #16]
10057382:	0a09      	lsrs	r1, r1, #8
10057384:	7441      	strb	r1, [r0, #17]
10057386:	a980      	add	r1, sp, #512	; 0x200
10057388:	8b0a      	ldrh	r2, [r1, #24]
1005738a:	8a89      	ldrh	r1, [r1, #20]
1005738c:	a889      	add	r0, sp, #548	; 0x224
1005738e:	466c      	mov	r4, sp
10057390:	c407      	stmia	r4!, {r0, r1, r2}
10057392:	ac04      	add	r4, sp, #16
10057394:	ab8d      	add	r3, sp, #564	; 0x234
10057396:	aa87      	add	r2, sp, #540	; 0x21c
10057398:	4628      	mov	r0, r5
1005739a:	1ca1      	adds	r1, r4, #2
1005739c:	f7f9 faae 	bl	100508fc <Accu_UuidTypes_Requiring_Auth>
100573a0:	a880      	add	r0, sp, #512	; 0x200
100573a2:	8b80      	ldrh	r0, [r0, #28]
100573a4:	2800      	cmp	r0, #0
100573a6:	d021      	beq.n	100573ec <Read_By_Type_Resp+0xe8>
100573a8:	2101      	movs	r1, #1
100573aa:	693a      	ldr	r2, [r7, #16]
100573ac:	04c9      	lsls	r1, r1, #19
100573ae:	430a      	orrs	r2, r1
100573b0:	613a      	str	r2, [r7, #16]
100573b2:	0640      	lsls	r0, r0, #25
100573b4:	0e02      	lsrs	r2, r0, #24
100573b6:	8839      	ldrh	r1, [r7, #0]
100573b8:	1ca3      	adds	r3, r4, #2
100573ba:	2002      	movs	r0, #2
100573bc:	f000 fbdc 	bl	10057b78 <aci_gatt_read_multi_permit_req_event_push>
100573c0:	2069      	movs	r0, #105	; 0x69
100573c2:	b07f      	add	sp, #508	; 0x1fc
100573c4:	b016      	add	sp, #88	; 0x58
100573c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100573c8:	2108      	movs	r1, #8
100573ca:	2001      	movs	r0, #1
100573cc:	9b94      	ldr	r3, [sp, #592]	; 0x250
100573ce:	f7ff f911 	bl	100565f4 <ATT_fill_error_resp>
100573d2:	e0f2      	b.n	100575ba <Read_By_Type_Resp+0x2b6>
100573d4:	2210      	movs	r2, #16
100573d6:	497f      	ldr	r1, [pc, #508]	; (100575d4 <Read_By_Type_Resp+0x2d0>)
100573d8:	a889      	add	r0, sp, #548	; 0x224
100573da:	f7eb fef0 	bl	100431be <Osal_MemCpy>
100573de:	68a1      	ldr	r1, [r4, #8]
100573e0:	2202      	movs	r2, #2
100573e2:	a88c      	add	r0, sp, #560	; 0x230
100573e4:	3111      	adds	r1, #17
100573e6:	f7eb feea 	bl	100431be <Osal_MemCpy>
100573ea:	e7c4      	b.n	10057376 <Read_By_Type_Resp+0x72>
100573ec:	887a      	ldrh	r2, [r7, #2]
100573ee:	2100      	movs	r1, #0
100573f0:	9894      	ldr	r0, [sp, #592]	; 0x250
100573f2:	f7ff fd31 	bl	10056e58 <Pm_Resize_Host_Acl_Pckt>
100573f6:	2800      	cmp	r0, #0
100573f8:	d001      	beq.n	100573fe <Read_By_Type_Resp+0xfa>
100573fa:	2045      	movs	r0, #69	; 0x45
100573fc:	e7e1      	b.n	100573c2 <Read_By_Type_Resp+0xbe>
100573fe:	3508      	adds	r5, #8
10057400:	a880      	add	r0, sp, #512	; 0x200
10057402:	9588      	str	r5, [sp, #544]	; 0x220
10057404:	8a80      	ldrh	r0, [r0, #20]
10057406:	f7f3 ff7d 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
1005740a:	0005      	movs	r5, r0
1005740c:	a890      	add	r0, sp, #576	; 0x240
1005740e:	9001      	str	r0, [sp, #4]
10057410:	d074      	beq.n	100574fc <Read_By_Type_Resp+0x1f8>
10057412:	e0b8      	b.n	10057586 <Read_By_Type_Resp+0x282>
10057414:	4629      	mov	r1, r5
10057416:	2202      	movs	r2, #2
10057418:	312a      	adds	r1, #42	; 0x2a
1005741a:	9801      	ldr	r0, [sp, #4]
1005741c:	f7eb fecf 	bl	100431be <Osal_MemCpy>
10057420:	2210      	movs	r2, #16
10057422:	a989      	add	r1, sp, #548	; 0x224
10057424:	a88d      	add	r0, sp, #564	; 0x234
10057426:	f7eb fed2 	bl	100431ce <Osal_MemCmp>
1005742a:	2800      	cmp	r0, #0
1005742c:	d006      	beq.n	1005743c <Read_By_Type_Resp+0x138>
1005742e:	4628      	mov	r0, r5
10057430:	3020      	adds	r0, #32
10057432:	9000      	str	r0, [sp, #0]
10057434:	6a2c      	ldr	r4, [r5, #32]
10057436:	4284      	cmp	r4, r0
10057438:	d17e      	bne.n	10057538 <Read_By_Type_Resp+0x234>
1005743a:	e0a3      	b.n	10057584 <Read_By_Type_Resp+0x280>
1005743c:	9803      	ldr	r0, [sp, #12]
1005743e:	2800      	cmp	r0, #0
10057440:	d004      	beq.n	1005744c <Read_By_Type_Resp+0x148>
10057442:	2804      	cmp	r0, #4
10057444:	d010      	beq.n	10057468 <Read_By_Type_Resp+0x164>
10057446:	2812      	cmp	r0, #18
10057448:	d006      	beq.n	10057458 <Read_By_Type_Resp+0x154>
1005744a:	e0aa      	b.n	100575a2 <Read_By_Type_Resp+0x29e>
1005744c:	202c      	movs	r0, #44	; 0x2c
1005744e:	5d40      	ldrb	r0, [r0, r5]
10057450:	2801      	cmp	r0, #1
10057452:	d006      	beq.n	10057462 <Read_By_Type_Resp+0x15e>
10057454:	2012      	movs	r0, #18
10057456:	9003      	str	r0, [sp, #12]
10057458:	202c      	movs	r0, #44	; 0x2c
1005745a:	5d40      	ldrb	r0, [r0, r5]
1005745c:	2802      	cmp	r0, #2
1005745e:	d007      	beq.n	10057470 <Read_By_Type_Resp+0x16c>
10057460:	e09f      	b.n	100575a2 <Read_By_Type_Resp+0x29e>
10057462:	2004      	movs	r0, #4
10057464:	9003      	str	r0, [sp, #12]
10057466:	e003      	b.n	10057470 <Read_By_Type_Resp+0x16c>
10057468:	202c      	movs	r0, #44	; 0x2c
1005746a:	5d40      	ldrb	r0, [r0, r5]
1005746c:	2801      	cmp	r0, #1
1005746e:	d17d      	bne.n	1005756c <Read_By_Type_Resp+0x268>
10057470:	1d30      	adds	r0, r6, #4
10057472:	b281      	uxth	r1, r0
10057474:	462b      	mov	r3, r5
10057476:	3328      	adds	r3, #40	; 0x28
10057478:	2202      	movs	r2, #2
1005747a:	9894      	ldr	r0, [sp, #592]	; 0x250
1005747c:	f7f9 f9fe 	bl	1005087c <PM_Write_Pckt_Data>
10057480:	9803      	ldr	r0, [sp, #12]
10057482:	462b      	mov	r3, r5
10057484:	1e80      	subs	r0, r0, #2
10057486:	b282      	uxth	r2, r0
10057488:	1db0      	adds	r0, r6, #6
1005748a:	b281      	uxth	r1, r0
1005748c:	3308      	adds	r3, #8
1005748e:	1cb6      	adds	r6, r6, #2
10057490:	9894      	ldr	r0, [sp, #592]	; 0x250
10057492:	f7f9 f9f3 	bl	1005087c <PM_Write_Pckt_Data>
10057496:	9803      	ldr	r0, [sp, #12]
10057498:	1830      	adds	r0, r6, r0
1005749a:	1e80      	subs	r0, r0, #2
1005749c:	b286      	uxth	r6, r0
1005749e:	e071      	b.n	10057584 <Read_By_Type_Resp+0x280>
100574a0:	a980      	add	r1, sp, #512	; 0x200
100574a2:	8ba0      	ldrh	r0, [r4, #28]
100574a4:	8a89      	ldrh	r1, [r1, #20]
100574a6:	4288      	cmp	r0, r1
100574a8:	d368      	bcc.n	1005757c <Read_By_Type_Resp+0x278>
100574aa:	a980      	add	r1, sp, #512	; 0x200
100574ac:	8b09      	ldrh	r1, [r1, #24]
100574ae:	4288      	cmp	r0, r1
100574b0:	d877      	bhi.n	100575a2 <Read_By_Type_Resp+0x29e>
100574b2:	2023      	movs	r0, #35	; 0x23
100574b4:	5d00      	ldrb	r0, [r0, r4]
100574b6:	2801      	cmp	r0, #1
100574b8:	d008      	beq.n	100574cc <Read_By_Type_Resp+0x1c8>
100574ba:	4620      	mov	r0, r4
100574bc:	3008      	adds	r0, #8
100574be:	2210      	movs	r2, #16
100574c0:	a989      	add	r1, sp, #548	; 0x224
100574c2:	f7eb fe84 	bl	100431ce <Osal_MemCmp>
100574c6:	2800      	cmp	r0, #0
100574c8:	d008      	beq.n	100574dc <Read_By_Type_Resp+0x1d8>
100574ca:	e057      	b.n	1005757c <Read_By_Type_Resp+0x278>
100574cc:	4621      	mov	r1, r4
100574ce:	2202      	movs	r2, #2
100574d0:	3108      	adds	r1, #8
100574d2:	9801      	ldr	r0, [sp, #4]
100574d4:	f7eb fe73 	bl	100431be <Osal_MemCpy>
100574d8:	a88d      	add	r0, sp, #564	; 0x234
100574da:	e7f0      	b.n	100574be <Read_By_Type_Resp+0x1ba>
100574dc:	8838      	ldrh	r0, [r7, #0]
100574de:	2201      	movs	r2, #1
100574e0:	0500      	lsls	r0, r0, #20
100574e2:	0d00      	lsrs	r0, r0, #20
100574e4:	4621      	mov	r1, r4
100574e6:	f7ff f903 	bl	100566f0 <Att_Check_Perms>
100574ea:	9903      	ldr	r1, [sp, #12]
100574ec:	2900      	cmp	r1, #0
100574ee:	d115      	bne.n	1005751c <Read_By_Type_Resp+0x218>
100574f0:	2800      	cmp	r0, #0
100574f2:	d004      	beq.n	100574fe <Read_By_Type_Resp+0x1fa>
100574f4:	8ba2      	ldrh	r2, [r4, #28]
100574f6:	2108      	movs	r1, #8
100574f8:	9b94      	ldr	r3, [sp, #592]	; 0x250
100574fa:	e768      	b.n	100573ce <Read_By_Type_Resp+0xca>
100574fc:	e05f      	b.n	100575be <Read_By_Type_Resp+0x2ba>
100574fe:	8be1      	ldrh	r1, [r4, #30]
10057500:	29fd      	cmp	r1, #253	; 0xfd
10057502:	d901      	bls.n	10057508 <Read_By_Type_Resp+0x204>
10057504:	21ff      	movs	r1, #255	; 0xff
10057506:	e001      	b.n	1005750c <Read_By_Type_Resp+0x208>
10057508:	1c89      	adds	r1, r1, #2
1005750a:	b2c9      	uxtb	r1, r1
1005750c:	9103      	str	r1, [sp, #12]
1005750e:	8879      	ldrh	r1, [r7, #2]
10057510:	9a03      	ldr	r2, [sp, #12]
10057512:	1e89      	subs	r1, r1, #2
10057514:	4291      	cmp	r1, r2
10057516:	d201      	bcs.n	1005751c <Read_By_Type_Resp+0x218>
10057518:	b2c9      	uxtb	r1, r1
1005751a:	9103      	str	r1, [sp, #12]
1005751c:	8879      	ldrh	r1, [r7, #2]
1005751e:	1b8a      	subs	r2, r1, r6
10057520:	9903      	ldr	r1, [sp, #12]
10057522:	428a      	cmp	r2, r1
10057524:	db3d      	blt.n	100575a2 <Read_By_Type_Resp+0x29e>
10057526:	2800      	cmp	r0, #0
10057528:	d13b      	bne.n	100575a2 <Read_By_Type_Resp+0x29e>
1005752a:	9803      	ldr	r0, [sp, #12]
1005752c:	8be1      	ldrh	r1, [r4, #30]
1005752e:	1e80      	subs	r0, r0, #2
10057530:	9002      	str	r0, [sp, #8]
10057532:	4281      	cmp	r1, r0
10057534:	d135      	bne.n	100575a2 <Read_By_Type_Resp+0x29e>
10057536:	e000      	b.n	1005753a <Read_By_Type_Resp+0x236>
10057538:	e021      	b.n	1005757e <Read_By_Type_Resp+0x27a>
1005753a:	1d30      	adds	r0, r6, #4
1005753c:	b281      	uxth	r1, r0
1005753e:	4623      	mov	r3, r4
10057540:	331c      	adds	r3, #28
10057542:	2202      	movs	r2, #2
10057544:	9894      	ldr	r0, [sp, #592]	; 0x250
10057546:	f7f9 f999 	bl	1005087c <PM_Write_Pckt_Data>
1005754a:	4639      	mov	r1, r7
1005754c:	4620      	mov	r0, r4
1005754e:	f7f3 fa1b 	bl	1004a988 <Find_Attr_Index>
10057552:	8c21      	ldrh	r1, [r4, #32]
10057554:	69a2      	ldr	r2, [r4, #24]
10057556:	4341      	muls	r1, r0
10057558:	9802      	ldr	r0, [sp, #8]
1005755a:	1853      	adds	r3, r2, r1
1005755c:	b282      	uxth	r2, r0
1005755e:	1db0      	adds	r0, r6, #6
10057560:	b281      	uxth	r1, r0
10057562:	9894      	ldr	r0, [sp, #592]	; 0x250
10057564:	f7f9 f98a 	bl	1005087c <PM_Write_Pckt_Data>
10057568:	9803      	ldr	r0, [sp, #12]
1005756a:	e000      	b.n	1005756e <Read_By_Type_Resp+0x26a>
1005756c:	e019      	b.n	100575a2 <Read_By_Type_Resp+0x29e>
1005756e:	1830      	adds	r0, r6, r0
10057570:	b286      	uxth	r6, r0
10057572:	8878      	ldrh	r0, [r7, #2]
10057574:	1b81      	subs	r1, r0, r6
10057576:	9803      	ldr	r0, [sp, #12]
10057578:	4281      	cmp	r1, r0
1005757a:	db12      	blt.n	100575a2 <Read_By_Type_Resp+0x29e>
1005757c:	6824      	ldr	r4, [r4, #0]
1005757e:	9800      	ldr	r0, [sp, #0]
10057580:	4284      	cmp	r4, r0
10057582:	d18d      	bne.n	100574a0 <Read_By_Type_Resp+0x19c>
10057584:	682d      	ldr	r5, [r5, #0]
10057586:	9888      	ldr	r0, [sp, #544]	; 0x220
10057588:	4285      	cmp	r5, r0
1005758a:	d00a      	beq.n	100575a2 <Read_By_Type_Resp+0x29e>
1005758c:	a980      	add	r1, sp, #512	; 0x200
1005758e:	8d28      	ldrh	r0, [r5, #40]	; 0x28
10057590:	8b09      	ldrh	r1, [r1, #24]
10057592:	4288      	cmp	r0, r1
10057594:	d805      	bhi.n	100575a2 <Read_By_Type_Resp+0x29e>
10057596:	8878      	ldrh	r0, [r7, #2]
10057598:	9903      	ldr	r1, [sp, #12]
1005759a:	1b80      	subs	r0, r0, r6
1005759c:	4288      	cmp	r0, r1
1005759e:	db00      	blt.n	100575a2 <Read_By_Type_Resp+0x29e>
100575a0:	e738      	b.n	10057414 <Read_By_Type_Resp+0x110>
100575a2:	2e02      	cmp	r6, #2
100575a4:	d90b      	bls.n	100575be <Read_By_Type_Resp+0x2ba>
100575a6:	9894      	ldr	r0, [sp, #592]	; 0x250
100575a8:	2109      	movs	r1, #9
100575aa:	6880      	ldr	r0, [r0, #8]
100575ac:	7301      	strb	r1, [r0, #12]
100575ae:	9894      	ldr	r0, [sp, #592]	; 0x250
100575b0:	9903      	ldr	r1, [sp, #12]
100575b2:	6880      	ldr	r0, [r0, #8]
100575b4:	7341      	strb	r1, [r0, #13]
100575b6:	9894      	ldr	r0, [sp, #592]	; 0x250
100575b8:	80c6      	strh	r6, [r0, #6]
100575ba:	2000      	movs	r0, #0
100575bc:	e701      	b.n	100573c2 <Read_By_Type_Resp+0xbe>
100575be:	a880      	add	r0, sp, #512	; 0x200
100575c0:	8a82      	ldrh	r2, [r0, #20]
100575c2:	2108      	movs	r1, #8
100575c4:	200a      	movs	r0, #10
100575c6:	9b94      	ldr	r3, [sp, #592]	; 0x250
100575c8:	e701      	b.n	100573ce <Read_By_Type_Resp+0xca>
100575ca:	0000      	.short	0x0000
100575cc:	2000098c 	.word	0x2000098c
100575d0:	0000072c 	.word	0x0000072c
100575d4:	1005908c 	.word	0x1005908c

100575d8 <Read_Multi_Resp>:
100575d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
100575da:	b0ff      	sub	sp, #508	; 0x1fc
100575dc:	b085      	sub	sp, #20
100575de:	4605      	mov	r5, r0
100575e0:	2400      	movs	r4, #0
100575e2:	4669      	mov	r1, sp
100575e4:	818c      	strh	r4, [r1, #12]
100575e6:	485f      	ldr	r0, [pc, #380]	; (10057764 <Read_Multi_Resp+0x18c>)
100575e8:	495f      	ldr	r1, [pc, #380]	; (10057768 <Read_Multi_Resp+0x190>)
100575ea:	6800      	ldr	r0, [r0, #0]
100575ec:	1846      	adds	r6, r0, r1
100575ee:	9885      	ldr	r0, [sp, #532]	; 0x214
100575f0:	88c0      	ldrh	r0, [r0, #6]
100575f2:	1e41      	subs	r1, r0, #1
100575f4:	2904      	cmp	r1, #4
100575f6:	d302      	bcc.n	100575fe <Read_Multi_Resp+0x26>
100575f8:	43c0      	mvns	r0, r0
100575fa:	07c0      	lsls	r0, r0, #31
100575fc:	d004      	beq.n	10057608 <Read_Multi_Resp+0x30>
100575fe:	2200      	movs	r2, #0
10057600:	210e      	movs	r1, #14
10057602:	2004      	movs	r0, #4
10057604:	9b86      	ldr	r3, [sp, #536]	; 0x218
10057606:	e044      	b.n	10057692 <Read_Multi_Resp+0xba>
10057608:	6928      	ldr	r0, [r5, #16]
1005760a:	0300      	lsls	r0, r0, #12
1005760c:	d41b      	bmi.n	10057646 <Read_Multi_Resp+0x6e>
1005760e:	a803      	add	r0, sp, #12
10057610:	9000      	str	r0, [sp, #0]
10057612:	ab04      	add	r3, sp, #16
10057614:	4630      	mov	r0, r6
10057616:	9a86      	ldr	r2, [sp, #536]	; 0x218
10057618:	9985      	ldr	r1, [sp, #532]	; 0x214
1005761a:	f7f9 f938 	bl	1005088e <Accu_Handles_Requiring_Auth>
1005761e:	4668      	mov	r0, sp
10057620:	8980      	ldrh	r0, [r0, #12]
10057622:	2800      	cmp	r0, #0
10057624:	d00f      	beq.n	10057646 <Read_Multi_Resp+0x6e>
10057626:	2201      	movs	r2, #1
10057628:	6929      	ldr	r1, [r5, #16]
1005762a:	04d2      	lsls	r2, r2, #19
1005762c:	4311      	orrs	r1, r2
1005762e:	0640      	lsls	r0, r0, #25
10057630:	0e02      	lsrs	r2, r0, #24
10057632:	6129      	str	r1, [r5, #16]
10057634:	8829      	ldrh	r1, [r5, #0]
10057636:	ab04      	add	r3, sp, #16
10057638:	2002      	movs	r0, #2
1005763a:	f000 fa9d 	bl	10057b78 <aci_gatt_read_multi_permit_req_event_push>
1005763e:	2069      	movs	r0, #105	; 0x69
10057640:	b07f      	add	sp, #508	; 0x1fc
10057642:	b008      	add	sp, #32
10057644:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057646:	886a      	ldrh	r2, [r5, #2]
10057648:	2100      	movs	r1, #0
1005764a:	9886      	ldr	r0, [sp, #536]	; 0x218
1005764c:	f7ff fc04 	bl	10056e58 <Pm_Resize_Host_Acl_Pckt>
10057650:	2800      	cmp	r0, #0
10057652:	d001      	beq.n	10057658 <Read_Multi_Resp+0x80>
10057654:	2045      	movs	r0, #69	; 0x45
10057656:	e7f3      	b.n	10057640 <Read_Multi_Resp+0x68>
10057658:	9885      	ldr	r0, [sp, #532]	; 0x214
1005765a:	88c0      	ldrh	r0, [r0, #6]
1005765c:	1e40      	subs	r0, r0, #1
1005765e:	b287      	uxth	r7, r0
10057660:	2601      	movs	r6, #1
10057662:	e077      	b.n	10057754 <Read_Multi_Resp+0x17c>
10057664:	1d30      	adds	r0, r6, #4
10057666:	b281      	uxth	r1, r0
10057668:	ab01      	add	r3, sp, #4
1005766a:	2202      	movs	r2, #2
1005766c:	9885      	ldr	r0, [sp, #532]	; 0x214
1005766e:	f7f9 f815 	bl	1005069c <PM_Copy_Pckt_Data>
10057672:	4668      	mov	r0, sp
10057674:	8880      	ldrh	r0, [r0, #4]
10057676:	2800      	cmp	r0, #0
10057678:	d032      	beq.n	100576e0 <Read_Multi_Resp+0x108>
1005767a:	f7f3 fe43 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
1005767e:	0001      	movs	r1, r0
10057680:	d02e      	beq.n	100576e0 <Read_Multi_Resp+0x108>
10057682:	4668      	mov	r0, sp
10057684:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
10057686:	8880      	ldrh	r0, [r0, #4]
10057688:	4282      	cmp	r2, r0
1005768a:	d124      	bne.n	100576d6 <Read_Multi_Resp+0xfe>
1005768c:	2c00      	cmp	r4, #0
1005768e:	d003      	beq.n	10057698 <Read_Multi_Resp+0xc0>
10057690:	e007      	b.n	100576a2 <Read_Multi_Resp+0xca>
10057692:	f7fe ffaf 	bl	100565f4 <ATT_fill_error_resp>
10057696:	e063      	b.n	10057760 <Read_Multi_Resp+0x188>
10057698:	9886      	ldr	r0, [sp, #536]	; 0x218
1005769a:	220f      	movs	r2, #15
1005769c:	6880      	ldr	r0, [r0, #8]
1005769e:	2401      	movs	r4, #1
100576a0:	7302      	strb	r2, [r0, #12]
100576a2:	8868      	ldrh	r0, [r5, #2]
100576a4:	42a0      	cmp	r0, r4
100576a6:	d053      	beq.n	10057750 <Read_Multi_Resp+0x178>
100576a8:	222c      	movs	r2, #44	; 0x2c
100576aa:	5c52      	ldrb	r2, [r2, r1]
100576ac:	2a01      	cmp	r2, #1
100576ae:	d005      	beq.n	100576bc <Read_Multi_Resp+0xe4>
100576b0:	1b00      	subs	r0, r0, r4
100576b2:	b280      	uxth	r0, r0
100576b4:	2810      	cmp	r0, #16
100576b6:	d306      	bcc.n	100576c6 <Read_Multi_Resp+0xee>
100576b8:	2010      	movs	r0, #16
100576ba:	e004      	b.n	100576c6 <Read_Multi_Resp+0xee>
100576bc:	1b00      	subs	r0, r0, r4
100576be:	b280      	uxth	r0, r0
100576c0:	2802      	cmp	r0, #2
100576c2:	d300      	bcc.n	100576c6 <Read_Multi_Resp+0xee>
100576c4:	2002      	movs	r0, #2
100576c6:	9000      	str	r0, [sp, #0]
100576c8:	1d20      	adds	r0, r4, #4
100576ca:	460b      	mov	r3, r1
100576cc:	b280      	uxth	r0, r0
100576ce:	3308      	adds	r3, #8
100576d0:	4601      	mov	r1, r0
100576d2:	9a00      	ldr	r2, [sp, #0]
100576d4:	e036      	b.n	10057744 <Read_Multi_Resp+0x16c>
100576d6:	aa02      	add	r2, sp, #8
100576d8:	f7f4 fca6 	bl	1004c028 <Gatt_search_handle>
100576dc:	2800      	cmp	r0, #0
100576de:	d005      	beq.n	100576ec <Read_Multi_Resp+0x114>
100576e0:	4668      	mov	r0, sp
100576e2:	8882      	ldrh	r2, [r0, #4]
100576e4:	210e      	movs	r1, #14
100576e6:	2001      	movs	r0, #1
100576e8:	9b86      	ldr	r3, [sp, #536]	; 0x218
100576ea:	e7d2      	b.n	10057692 <Read_Multi_Resp+0xba>
100576ec:	8828      	ldrh	r0, [r5, #0]
100576ee:	2201      	movs	r2, #1
100576f0:	0500      	lsls	r0, r0, #20
100576f2:	0d00      	lsrs	r0, r0, #20
100576f4:	9902      	ldr	r1, [sp, #8]
100576f6:	f7fe fffb 	bl	100566f0 <Att_Check_Perms>
100576fa:	2800      	cmp	r0, #0
100576fc:	d004      	beq.n	10057708 <Read_Multi_Resp+0x130>
100576fe:	4669      	mov	r1, sp
10057700:	888a      	ldrh	r2, [r1, #4]
10057702:	210e      	movs	r1, #14
10057704:	9b86      	ldr	r3, [sp, #536]	; 0x218
10057706:	e7c4      	b.n	10057692 <Read_Multi_Resp+0xba>
10057708:	2c00      	cmp	r4, #0
1005770a:	d104      	bne.n	10057716 <Read_Multi_Resp+0x13e>
1005770c:	9886      	ldr	r0, [sp, #536]	; 0x218
1005770e:	210f      	movs	r1, #15
10057710:	6880      	ldr	r0, [r0, #8]
10057712:	2401      	movs	r4, #1
10057714:	7301      	strb	r1, [r0, #12]
10057716:	8868      	ldrh	r0, [r5, #2]
10057718:	42a0      	cmp	r0, r4
1005771a:	d019      	beq.n	10057750 <Read_Multi_Resp+0x178>
1005771c:	9a02      	ldr	r2, [sp, #8]
1005771e:	1b00      	subs	r0, r0, r4
10057720:	8bd1      	ldrh	r1, [r2, #30]
10057722:	b280      	uxth	r0, r0
10057724:	4288      	cmp	r0, r1
10057726:	d300      	bcc.n	1005772a <Read_Multi_Resp+0x152>
10057728:	4608      	mov	r0, r1
1005772a:	9000      	str	r0, [sp, #0]
1005772c:	4629      	mov	r1, r5
1005772e:	4610      	mov	r0, r2
10057730:	f7f3 f92a 	bl	1004a988 <Find_Attr_Index>
10057734:	9902      	ldr	r1, [sp, #8]
10057736:	698a      	ldr	r2, [r1, #24]
10057738:	8c09      	ldrh	r1, [r1, #32]
1005773a:	4341      	muls	r1, r0
1005773c:	1853      	adds	r3, r2, r1
1005773e:	1d20      	adds	r0, r4, #4
10057740:	9a00      	ldr	r2, [sp, #0]
10057742:	b281      	uxth	r1, r0
10057744:	9886      	ldr	r0, [sp, #536]	; 0x218
10057746:	f7f9 f899 	bl	1005087c <PM_Write_Pckt_Data>
1005774a:	9800      	ldr	r0, [sp, #0]
1005774c:	1820      	adds	r0, r4, r0
1005774e:	b284      	uxth	r4, r0
10057750:	1cb6      	adds	r6, r6, #2
10057752:	b2b6      	uxth	r6, r6
10057754:	42be      	cmp	r6, r7
10057756:	d385      	bcc.n	10057664 <Read_Multi_Resp+0x8c>
10057758:	2c00      	cmp	r4, #0
1005775a:	d001      	beq.n	10057760 <Read_Multi_Resp+0x188>
1005775c:	9886      	ldr	r0, [sp, #536]	; 0x218
1005775e:	80c4      	strh	r4, [r0, #6]
10057760:	2000      	movs	r0, #0
10057762:	e76d      	b.n	10057640 <Read_Multi_Resp+0x68>
10057764:	2000098c 	.word	0x2000098c
10057768:	0000072c 	.word	0x0000072c

1005776c <Read_Resp>:
1005776c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005776e:	4604      	mov	r4, r0
10057770:	2000      	movs	r0, #0
10057772:	9002      	str	r0, [sp, #8]
10057774:	88c8      	ldrh	r0, [r1, #6]
10057776:	4615      	mov	r5, r2
10057778:	2803      	cmp	r0, #3
1005777a:	d004      	beq.n	10057786 <Read_Resp+0x1a>
1005777c:	4613      	mov	r3, r2
1005777e:	2200      	movs	r2, #0
10057780:	210a      	movs	r1, #10
10057782:	2004      	movs	r0, #4
10057784:	e026      	b.n	100577d4 <Read_Resp+0x68>
10057786:	6889      	ldr	r1, [r1, #8]
10057788:	2202      	movs	r2, #2
1005778a:	4668      	mov	r0, sp
1005778c:	310d      	adds	r1, #13
1005778e:	f7eb fd16 	bl	100431be <Osal_MemCpy>
10057792:	4668      	mov	r0, sp
10057794:	8800      	ldrh	r0, [r0, #0]
10057796:	2800      	cmp	r0, #0
10057798:	d019      	beq.n	100577ce <Read_Resp+0x62>
1005779a:	f7f3 fdb3 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
1005779e:	0001      	movs	r1, r0
100577a0:	d073      	beq.n	1005788a <Read_Resp+0x11e>
100577a2:	4668      	mov	r0, sp
100577a4:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
100577a6:	8800      	ldrh	r0, [r0, #0]
100577a8:	270b      	movs	r7, #11
100577aa:	2605      	movs	r6, #5
100577ac:	4282      	cmp	r2, r0
100577ae:	d11d      	bne.n	100577ec <Read_Resp+0x80>
100577b0:	68a8      	ldr	r0, [r5, #8]
100577b2:	7307      	strb	r7, [r0, #12]
100577b4:	202c      	movs	r0, #44	; 0x2c
100577b6:	5c40      	ldrb	r0, [r0, r1]
100577b8:	2801      	cmp	r0, #1
100577ba:	d00e      	beq.n	100577da <Read_Resp+0x6e>
100577bc:	460b      	mov	r3, r1
100577be:	3308      	adds	r3, #8
100577c0:	2210      	movs	r2, #16
100577c2:	4631      	mov	r1, r6
100577c4:	4628      	mov	r0, r5
100577c6:	f7f9 f859 	bl	1005087c <PM_Write_Pckt_Data>
100577ca:	2011      	movs	r0, #17
100577cc:	e059      	b.n	10057882 <Read_Resp+0x116>
100577ce:	462b      	mov	r3, r5
100577d0:	4602      	mov	r2, r0
100577d2:	e05d      	b.n	10057890 <Read_Resp+0x124>
100577d4:	f7fe ff0e 	bl	100565f4 <ATT_fill_error_resp>
100577d8:	e054      	b.n	10057884 <Read_Resp+0x118>
100577da:	460b      	mov	r3, r1
100577dc:	3308      	adds	r3, #8
100577de:	2202      	movs	r2, #2
100577e0:	4631      	mov	r1, r6
100577e2:	4628      	mov	r0, r5
100577e4:	f7f9 f84a 	bl	1005087c <PM_Write_Pckt_Data>
100577e8:	2003      	movs	r0, #3
100577ea:	e04a      	b.n	10057882 <Read_Resp+0x116>
100577ec:	aa01      	add	r2, sp, #4
100577ee:	f7f4 fc1b 	bl	1004c028 <Gatt_search_handle>
100577f2:	2800      	cmp	r0, #0
100577f4:	d149      	bne.n	1005788a <Read_Resp+0x11e>
100577f6:	8820      	ldrh	r0, [r4, #0]
100577f8:	2201      	movs	r2, #1
100577fa:	0500      	lsls	r0, r0, #20
100577fc:	0d00      	lsrs	r0, r0, #20
100577fe:	9901      	ldr	r1, [sp, #4]
10057800:	f7fe ff76 	bl	100566f0 <Att_Check_Perms>
10057804:	2800      	cmp	r0, #0
10057806:	d004      	beq.n	10057812 <Read_Resp+0xa6>
10057808:	4669      	mov	r1, sp
1005780a:	880a      	ldrh	r2, [r1, #0]
1005780c:	462b      	mov	r3, r5
1005780e:	210a      	movs	r1, #10
10057810:	e7e0      	b.n	100577d4 <Read_Resp+0x68>
10057812:	9901      	ldr	r1, [sp, #4]
10057814:	2026      	movs	r0, #38	; 0x26
10057816:	5c40      	ldrb	r0, [r0, r1]
10057818:	0740      	lsls	r0, r0, #29
1005781a:	d50e      	bpl.n	1005783a <Read_Resp+0xce>
1005781c:	6920      	ldr	r0, [r4, #16]
1005781e:	0302      	lsls	r2, r0, #12
10057820:	d40b      	bmi.n	1005783a <Read_Resp+0xce>
10057822:	2201      	movs	r2, #1
10057824:	04d2      	lsls	r2, r2, #19
10057826:	4310      	orrs	r0, r2
10057828:	6120      	str	r0, [r4, #16]
1005782a:	8b8a      	ldrh	r2, [r1, #28]
1005782c:	8821      	ldrh	r1, [r4, #0]
1005782e:	2002      	movs	r0, #2
10057830:	9b02      	ldr	r3, [sp, #8]
10057832:	f000 f9d5 	bl	10057be0 <aci_gatt_read_permit_req_event_push>
10057836:	2069      	movs	r0, #105	; 0x69
10057838:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005783a:	8862      	ldrh	r2, [r4, #2]
1005783c:	2100      	movs	r1, #0
1005783e:	4628      	mov	r0, r5
10057840:	f7ff fb0a 	bl	10056e58 <Pm_Resize_Host_Acl_Pckt>
10057844:	2800      	cmp	r0, #0
10057846:	d001      	beq.n	1005784c <Read_Resp+0xe0>
10057848:	2045      	movs	r0, #69	; 0x45
1005784a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005784c:	68a8      	ldr	r0, [r5, #8]
1005784e:	4621      	mov	r1, r4
10057850:	7307      	strb	r7, [r0, #12]
10057852:	9801      	ldr	r0, [sp, #4]
10057854:	f7f3 f898 	bl	1004a988 <Find_Attr_Index>
10057858:	8861      	ldrh	r1, [r4, #2]
1005785a:	1e49      	subs	r1, r1, #1
1005785c:	b28a      	uxth	r2, r1
1005785e:	9901      	ldr	r1, [sp, #4]
10057860:	8bcc      	ldrh	r4, [r1, #30]
10057862:	42a2      	cmp	r2, r4
10057864:	d200      	bcs.n	10057868 <Read_Resp+0xfc>
10057866:	4614      	mov	r4, r2
10057868:	698a      	ldr	r2, [r1, #24]
1005786a:	8c09      	ldrh	r1, [r1, #32]
1005786c:	4341      	muls	r1, r0
1005786e:	1853      	adds	r3, r2, r1
10057870:	4631      	mov	r1, r6
10057872:	4622      	mov	r2, r4
10057874:	4628      	mov	r0, r5
10057876:	f7f9 f801 	bl	1005087c <PM_Write_Pckt_Data>
1005787a:	1c64      	adds	r4, r4, #1
1005787c:	0420      	lsls	r0, r4, #16
1005787e:	0c00      	lsrs	r0, r0, #16
10057880:	d003      	beq.n	1005788a <Read_Resp+0x11e>
10057882:	80e8      	strh	r0, [r5, #6]
10057884:	2000      	movs	r0, #0
10057886:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10057888:	e7ff      	b.n	1005788a <Read_Resp+0x11e>
1005788a:	4668      	mov	r0, sp
1005788c:	8802      	ldrh	r2, [r0, #0]
1005788e:	462b      	mov	r3, r5
10057890:	210a      	movs	r1, #10
10057892:	2001      	movs	r0, #1
10057894:	e79e      	b.n	100577d4 <Read_Resp+0x68>

10057896 <Write_Cmd>:
10057896:	b5f0      	push	{r4, r5, r6, r7, lr}
10057898:	4604      	mov	r4, r0
1005789a:	6888      	ldr	r0, [r1, #8]
1005789c:	460f      	mov	r7, r1
1005789e:	4601      	mov	r1, r0
100578a0:	7b00      	ldrb	r0, [r0, #12]
100578a2:	3108      	adds	r1, #8
100578a4:	b085      	sub	sp, #20
100578a6:	2852      	cmp	r0, #82	; 0x52
100578a8:	d010      	beq.n	100578cc <Write_Cmd+0x36>
100578aa:	250f      	movs	r5, #15
100578ac:	2608      	movs	r6, #8
100578ae:	88f8      	ldrh	r0, [r7, #6]
100578b0:	42a8      	cmp	r0, r5
100578b2:	d35c      	bcc.n	1005796e <Write_Cmd+0xd8>
100578b4:	2202      	movs	r2, #2
100578b6:	a803      	add	r0, sp, #12
100578b8:	1d49      	adds	r1, r1, #5
100578ba:	f7eb fc80 	bl	100431be <Osal_MemCpy>
100578be:	4668      	mov	r0, sp
100578c0:	8980      	ldrh	r0, [r0, #12]
100578c2:	2800      	cmp	r0, #0
100578c4:	d053      	beq.n	1005796e <Write_Cmd+0xd8>
100578c6:	2e08      	cmp	r6, #8
100578c8:	d003      	beq.n	100578d2 <Write_Cmd+0x3c>
100578ca:	e00d      	b.n	100578e8 <Write_Cmd+0x52>
100578cc:	2503      	movs	r5, #3
100578ce:	2604      	movs	r6, #4
100578d0:	e7ed      	b.n	100578ae <Write_Cmd+0x18>
100578d2:	6920      	ldr	r0, [r4, #16]
100578d4:	0140      	lsls	r0, r0, #5
100578d6:	d407      	bmi.n	100578e8 <Write_Cmd+0x52>
100578d8:	8820      	ldrh	r0, [r4, #0]
100578da:	4639      	mov	r1, r7
100578dc:	0500      	lsls	r0, r0, #20
100578de:	0d00      	lsrs	r0, r0, #20
100578e0:	f7fc ffa4 	bl	1005482c <SMP_validate_signed_packet>
100578e4:	2800      	cmp	r0, #0
100578e6:	d142      	bne.n	1005796e <Write_Cmd+0xd8>
100578e8:	2101      	movs	r1, #1
100578ea:	6920      	ldr	r0, [r4, #16]
100578ec:	0689      	lsls	r1, r1, #26
100578ee:	4388      	bics	r0, r1
100578f0:	6120      	str	r0, [r4, #16]
100578f2:	4668      	mov	r0, sp
100578f4:	8980      	ldrh	r0, [r0, #12]
100578f6:	f7f3 fd05 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
100578fa:	0001      	movs	r1, r0
100578fc:	d037      	beq.n	1005796e <Write_Cmd+0xd8>
100578fe:	4668      	mov	r0, sp
10057900:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
10057902:	8980      	ldrh	r0, [r0, #12]
10057904:	4282      	cmp	r2, r0
10057906:	d032      	beq.n	1005796e <Write_Cmd+0xd8>
10057908:	aa02      	add	r2, sp, #8
1005790a:	f7f4 fb8d 	bl	1004c028 <Gatt_search_handle>
1005790e:	2800      	cmp	r0, #0
10057910:	d12d      	bne.n	1005796e <Write_Cmd+0xd8>
10057912:	8820      	ldrh	r0, [r4, #0]
10057914:	4632      	mov	r2, r6
10057916:	0500      	lsls	r0, r0, #20
10057918:	0d00      	lsrs	r0, r0, #20
1005791a:	9902      	ldr	r1, [sp, #8]
1005791c:	f7fe ff10 	bl	10056740 <CheckSecForSignedWrite>
10057920:	2800      	cmp	r0, #0
10057922:	d124      	bne.n	1005796e <Write_Cmd+0xd8>
10057924:	88f8      	ldrh	r0, [r7, #6]
10057926:	1b40      	subs	r0, r0, r5
10057928:	b285      	uxth	r5, r0
1005792a:	9802      	ldr	r0, [sp, #8]
1005792c:	4601      	mov	r1, r0
1005792e:	3120      	adds	r1, #32
10057930:	460a      	mov	r2, r1
10057932:	7889      	ldrb	r1, [r1, #2]
10057934:	2900      	cmp	r1, #0
10057936:	d002      	beq.n	1005793e <Write_Cmd+0xa8>
10057938:	2901      	cmp	r1, #1
1005793a:	d002      	beq.n	10057942 <Write_Cmd+0xac>
1005793c:	e004      	b.n	10057948 <Write_Cmd+0xb2>
1005793e:	8bc1      	ldrh	r1, [r0, #30]
10057940:	e000      	b.n	10057944 <Write_Cmd+0xae>
10057942:	8c01      	ldrh	r1, [r0, #32]
10057944:	42a9      	cmp	r1, r5
10057946:	d312      	bcc.n	1005796e <Write_Cmd+0xd8>
10057948:	7991      	ldrb	r1, [r2, #6]
1005794a:	0789      	lsls	r1, r1, #30
1005794c:	d511      	bpl.n	10057972 <Write_Cmd+0xdc>
1005794e:	6921      	ldr	r1, [r4, #16]
10057950:	034a      	lsls	r2, r1, #13
10057952:	d40e      	bmi.n	10057972 <Write_Cmd+0xdc>
10057954:	2201      	movs	r2, #1
10057956:	0492      	lsls	r2, r2, #18
10057958:	4311      	orrs	r1, r2
1005795a:	6121      	str	r1, [r4, #16]
1005795c:	b2e9      	uxtb	r1, r5
1005795e:	9701      	str	r7, [sp, #4]
10057960:	9100      	str	r1, [sp, #0]
10057962:	8b82      	ldrh	r2, [r0, #28]
10057964:	8821      	ldrh	r1, [r4, #0]
10057966:	2303      	movs	r3, #3
10057968:	2002      	movs	r0, #2
1005796a:	f000 f961 	bl	10057c30 <aci_gatt_write_permit_req_event_push>
1005796e:	b005      	add	sp, #20
10057970:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057972:	4621      	mov	r1, r4
10057974:	f7f3 f808 	bl	1004a988 <Find_Attr_Index>
10057978:	4606      	mov	r6, r0
1005797a:	9802      	ldr	r0, [sp, #8]
1005797c:	462a      	mov	r2, r5
1005797e:	6981      	ldr	r1, [r0, #24]
10057980:	8c00      	ldrh	r0, [r0, #32]
10057982:	4370      	muls	r0, r6
10057984:	180b      	adds	r3, r1, r0
10057986:	2107      	movs	r1, #7
10057988:	4638      	mov	r0, r7
1005798a:	f7f8 fe87 	bl	1005069c <PM_Copy_Pckt_Data>
1005798e:	9802      	ldr	r0, [sp, #8]
10057990:	4601      	mov	r1, r0
10057992:	3120      	adds	r1, #32
10057994:	788a      	ldrb	r2, [r1, #2]
10057996:	2a01      	cmp	r2, #1
10057998:	d100      	bne.n	1005799c <Write_Cmd+0x106>
1005799a:	83c5      	strh	r5, [r0, #30]
1005799c:	7989      	ldrb	r1, [r1, #6]
1005799e:	07c9      	lsls	r1, r1, #31
100579a0:	d0e5      	beq.n	1005796e <Write_Cmd+0xd8>
100579a2:	8c01      	ldrh	r1, [r0, #32]
100579a4:	6982      	ldr	r2, [r0, #24]
100579a6:	4371      	muls	r1, r6
100579a8:	1851      	adds	r1, r2, r1
100579aa:	2200      	movs	r2, #0
100579ac:	9200      	str	r2, [sp, #0]
100579ae:	9101      	str	r1, [sp, #4]
100579b0:	8bc3      	ldrh	r3, [r0, #30]
100579b2:	8b82      	ldrh	r2, [r0, #28]
100579b4:	8820      	ldrh	r0, [r4, #0]
100579b6:	0501      	lsls	r1, r0, #20
100579b8:	0d09      	lsrs	r1, r1, #20
100579ba:	2002      	movs	r0, #2
100579bc:	f000 f8a0 	bl	10057b00 <aci_gatt_attribute_modified_event_push>
100579c0:	e7d5      	b.n	1005796e <Write_Cmd+0xd8>

100579c2 <Write_Resp>:
100579c2:	b5f0      	push	{r4, r5, r6, r7, lr}
100579c4:	4604      	mov	r4, r0
100579c6:	88c8      	ldrh	r0, [r1, #6]
100579c8:	b087      	sub	sp, #28
100579ca:	460f      	mov	r7, r1
100579cc:	4616      	mov	r6, r2
100579ce:	2803      	cmp	r0, #3
100579d0:	d204      	bcs.n	100579dc <Write_Resp+0x1a>
100579d2:	4613      	mov	r3, r2
100579d4:	2200      	movs	r2, #0
100579d6:	2112      	movs	r1, #18
100579d8:	2004      	movs	r0, #4
100579da:	e016      	b.n	10057a0a <Write_Resp+0x48>
100579dc:	68b9      	ldr	r1, [r7, #8]
100579de:	2202      	movs	r2, #2
100579e0:	a805      	add	r0, sp, #20
100579e2:	310d      	adds	r1, #13
100579e4:	f7eb fbeb 	bl	100431be <Osal_MemCpy>
100579e8:	4668      	mov	r0, sp
100579ea:	8a80      	ldrh	r0, [r0, #20]
100579ec:	2800      	cmp	r0, #0
100579ee:	d014      	beq.n	10057a1a <Write_Resp+0x58>
100579f0:	f7f3 fc88 	bl	1004b304 <Gatt_Find_Srv_Owner_Of_Handle>
100579f4:	0001      	movs	r1, r0
100579f6:	d010      	beq.n	10057a1a <Write_Resp+0x58>
100579f8:	4668      	mov	r0, sp
100579fa:	8d0a      	ldrh	r2, [r1, #40]	; 0x28
100579fc:	8a80      	ldrh	r0, [r0, #20]
100579fe:	4282      	cmp	r2, r0
10057a00:	d106      	bne.n	10057a10 <Write_Resp+0x4e>
10057a02:	4602      	mov	r2, r0
10057a04:	4633      	mov	r3, r6
10057a06:	2112      	movs	r1, #18
10057a08:	2003      	movs	r0, #3
10057a0a:	f7fe fdf3 	bl	100565f4 <ATT_fill_error_resp>
10057a0e:	e074      	b.n	10057afa <Write_Resp+0x138>
10057a10:	aa02      	add	r2, sp, #8
10057a12:	f7f4 fb09 	bl	1004c028 <Gatt_search_handle>
10057a16:	2800      	cmp	r0, #0
10057a18:	d005      	beq.n	10057a26 <Write_Resp+0x64>
10057a1a:	4668      	mov	r0, sp
10057a1c:	8a82      	ldrh	r2, [r0, #20]
10057a1e:	2112      	movs	r1, #18
10057a20:	4633      	mov	r3, r6
10057a22:	2001      	movs	r0, #1
10057a24:	e7f1      	b.n	10057a0a <Write_Resp+0x48>
10057a26:	8820      	ldrh	r0, [r4, #0]
10057a28:	2202      	movs	r2, #2
10057a2a:	0500      	lsls	r0, r0, #20
10057a2c:	0d00      	lsrs	r0, r0, #20
10057a2e:	9902      	ldr	r1, [sp, #8]
10057a30:	f7fe fe5e 	bl	100566f0 <Att_Check_Perms>
10057a34:	2800      	cmp	r0, #0
10057a36:	d004      	beq.n	10057a42 <Write_Resp+0x80>
10057a38:	4669      	mov	r1, sp
10057a3a:	8a8a      	ldrh	r2, [r1, #20]
10057a3c:	4633      	mov	r3, r6
10057a3e:	2112      	movs	r1, #18
10057a40:	e7e3      	b.n	10057a0a <Write_Resp+0x48>
10057a42:	88f8      	ldrh	r0, [r7, #6]
10057a44:	1ec0      	subs	r0, r0, #3
10057a46:	b285      	uxth	r5, r0
10057a48:	9802      	ldr	r0, [sp, #8]
10057a4a:	4601      	mov	r1, r0
10057a4c:	3120      	adds	r1, #32
10057a4e:	788a      	ldrb	r2, [r1, #2]
10057a50:	2a00      	cmp	r2, #0
10057a52:	d002      	beq.n	10057a5a <Write_Resp+0x98>
10057a54:	2a01      	cmp	r2, #1
10057a56:	d002      	beq.n	10057a5e <Write_Resp+0x9c>
10057a58:	e00a      	b.n	10057a70 <Write_Resp+0xae>
10057a5a:	8bc2      	ldrh	r2, [r0, #30]
10057a5c:	e000      	b.n	10057a60 <Write_Resp+0x9e>
10057a5e:	8c02      	ldrh	r2, [r0, #32]
10057a60:	42aa      	cmp	r2, r5
10057a62:	d205      	bcs.n	10057a70 <Write_Resp+0xae>
10057a64:	4668      	mov	r0, sp
10057a66:	8a82      	ldrh	r2, [r0, #20]
10057a68:	2112      	movs	r1, #18
10057a6a:	4633      	mov	r3, r6
10057a6c:	200d      	movs	r0, #13
10057a6e:	e7cc      	b.n	10057a0a <Write_Resp+0x48>
10057a70:	7989      	ldrb	r1, [r1, #6]
10057a72:	0789      	lsls	r1, r1, #30
10057a74:	d514      	bpl.n	10057aa0 <Write_Resp+0xde>
10057a76:	6921      	ldr	r1, [r4, #16]
10057a78:	038a      	lsls	r2, r1, #14
10057a7a:	d411      	bmi.n	10057aa0 <Write_Resp+0xde>
10057a7c:	01ca      	lsls	r2, r1, #7
10057a7e:	d40f      	bmi.n	10057aa0 <Write_Resp+0xde>
10057a80:	2201      	movs	r2, #1
10057a82:	0452      	lsls	r2, r2, #17
10057a84:	4311      	orrs	r1, r2
10057a86:	6121      	str	r1, [r4, #16]
10057a88:	b2e9      	uxtb	r1, r5
10057a8a:	9701      	str	r7, [sp, #4]
10057a8c:	9100      	str	r1, [sp, #0]
10057a8e:	8b82      	ldrh	r2, [r0, #28]
10057a90:	8821      	ldrh	r1, [r4, #0]
10057a92:	2303      	movs	r3, #3
10057a94:	2002      	movs	r0, #2
10057a96:	f000 f8cb 	bl	10057c30 <aci_gatt_write_permit_req_event_push>
10057a9a:	2069      	movs	r0, #105	; 0x69
10057a9c:	b007      	add	sp, #28
10057a9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057aa0:	4621      	mov	r1, r4
10057aa2:	f7f2 ff71 	bl	1004a988 <Find_Attr_Index>
10057aa6:	9001      	str	r0, [sp, #4]
10057aa8:	9802      	ldr	r0, [sp, #8]
10057aaa:	8c02      	ldrh	r2, [r0, #32]
10057aac:	6981      	ldr	r1, [r0, #24]
10057aae:	9801      	ldr	r0, [sp, #4]
10057ab0:	4342      	muls	r2, r0
10057ab2:	188b      	adds	r3, r1, r2
10057ab4:	462a      	mov	r2, r5
10057ab6:	2107      	movs	r1, #7
10057ab8:	4638      	mov	r0, r7
10057aba:	f7f8 fdef 	bl	1005069c <PM_Copy_Pckt_Data>
10057abe:	9802      	ldr	r0, [sp, #8]
10057ac0:	4601      	mov	r1, r0
10057ac2:	3120      	adds	r1, #32
10057ac4:	460a      	mov	r2, r1
10057ac6:	7889      	ldrb	r1, [r1, #2]
10057ac8:	2901      	cmp	r1, #1
10057aca:	d100      	bne.n	10057ace <Write_Resp+0x10c>
10057acc:	83c5      	strh	r5, [r0, #30]
10057ace:	68b1      	ldr	r1, [r6, #8]
10057ad0:	2313      	movs	r3, #19
10057ad2:	730b      	strb	r3, [r1, #12]
10057ad4:	7991      	ldrb	r1, [r2, #6]
10057ad6:	2501      	movs	r5, #1
10057ad8:	07c9      	lsls	r1, r1, #31
10057ada:	d00d      	beq.n	10057af8 <Write_Resp+0x136>
10057adc:	8c01      	ldrh	r1, [r0, #32]
10057ade:	9a01      	ldr	r2, [sp, #4]
10057ae0:	6983      	ldr	r3, [r0, #24]
10057ae2:	4351      	muls	r1, r2
10057ae4:	1859      	adds	r1, r3, r1
10057ae6:	2200      	movs	r2, #0
10057ae8:	9200      	str	r2, [sp, #0]
10057aea:	9101      	str	r1, [sp, #4]
10057aec:	8bc3      	ldrh	r3, [r0, #30]
10057aee:	8b82      	ldrh	r2, [r0, #28]
10057af0:	8821      	ldrh	r1, [r4, #0]
10057af2:	2002      	movs	r0, #2
10057af4:	f000 f804 	bl	10057b00 <aci_gatt_attribute_modified_event_push>
10057af8:	80f5      	strh	r5, [r6, #6]
10057afa:	2000      	movs	r0, #0
10057afc:	e7ce      	b.n	10057a9c <Write_Resp+0xda>
	...

10057b00 <aci_gatt_attribute_modified_event_push>:
10057b00:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10057b02:	460f      	mov	r7, r1
10057b04:	4606      	mov	r6, r0
10057b06:	1dd8      	adds	r0, r3, #7
10057b08:	2103      	movs	r1, #3
10057b0a:	4308      	orrs	r0, r1
10057b0c:	461d      	mov	r5, r3
10057b0e:	1c40      	adds	r0, r0, #1
10057b10:	0883      	lsrs	r3, r0, #2
10057b12:	4818      	ldr	r0, [pc, #96]	; (10057b74 <aci_gatt_attribute_modified_event_push+0x74>)
10057b14:	b081      	sub	sp, #4
10057b16:	6800      	ldr	r0, [r0, #0]
10057b18:	06f1      	lsls	r1, r6, #27
10057b1a:	d503      	bpl.n	10057b24 <aci_gatt_attribute_modified_event_push+0x24>
10057b1c:	2225      	movs	r2, #37	; 0x25
10057b1e:	21bf      	movs	r1, #191	; 0xbf
10057b20:	400e      	ands	r6, r1
10057b22:	e006      	b.n	10057b32 <aci_gatt_attribute_modified_event_push+0x32>
10057b24:	2137      	movs	r1, #55	; 0x37
10057b26:	0149      	lsls	r1, r1, #5
10057b28:	1841      	adds	r1, r0, r1
10057b2a:	7b09      	ldrb	r1, [r1, #12]
10057b2c:	07c9      	lsls	r1, r1, #31
10057b2e:	d01c      	beq.n	10057b6a <aci_gatt_attribute_modified_event_push+0x6a>
10057b30:	2222      	movs	r2, #34	; 0x22
10057b32:	0731      	lsls	r1, r6, #28
10057b34:	0e89      	lsrs	r1, r1, #26
10057b36:	1808      	adds	r0, r1, r0
10057b38:	2101      	movs	r1, #1
10057b3a:	02c9      	lsls	r1, r1, #11
10057b3c:	1840      	adds	r0, r0, r1
10057b3e:	6940      	ldr	r0, [r0, #20]
10057b40:	4631      	mov	r1, r6
10057b42:	f7fd fb53 	bl	100551ec <aci_event_fifo_push_header>
10057b46:	0004      	movs	r4, r0
10057b48:	d012      	beq.n	10057b70 <aci_gatt_attribute_modified_event_push+0x70>
10057b4a:	80a7      	strh	r7, [r4, #4]
10057b4c:	9903      	ldr	r1, [sp, #12]
10057b4e:	80e1      	strh	r1, [r4, #6]
10057b50:	990a      	ldr	r1, [sp, #40]	; 0x28
10057b52:	8121      	strh	r1, [r4, #8]
10057b54:	4620      	mov	r0, r4
10057b56:	8165      	strh	r5, [r4, #10]
10057b58:	300c      	adds	r0, #12
10057b5a:	462a      	mov	r2, r5
10057b5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
10057b5e:	f7eb fb2e 	bl	100431be <Osal_MemCpy>
10057b62:	4621      	mov	r1, r4
10057b64:	4630      	mov	r0, r6
10057b66:	f7fd fb2d 	bl	100551c4 <aci_event_fifo_push>
10057b6a:	2000      	movs	r0, #0
10057b6c:	b005      	add	sp, #20
10057b6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057b70:	2007      	movs	r0, #7
10057b72:	e7fb      	b.n	10057b6c <aci_gatt_attribute_modified_event_push+0x6c>
10057b74:	2000098c 	.word	0x2000098c

10057b78 <aci_gatt_read_multi_permit_req_event_push>:
10057b78:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10057b7a:	460f      	mov	r7, r1
10057b7c:	4605      	mov	r5, r0
10057b7e:	1cd0      	adds	r0, r2, #3
10057b80:	2103      	movs	r1, #3
10057b82:	4308      	orrs	r0, r1
10057b84:	1c40      	adds	r0, r0, #1
10057b86:	0883      	lsrs	r3, r0, #2
10057b88:	b081      	sub	sp, #4
10057b8a:	4616      	mov	r6, r2
10057b8c:	06e8      	lsls	r0, r5, #27
10057b8e:	d503      	bpl.n	10057b98 <aci_gatt_read_multi_permit_req_event_push+0x20>
10057b90:	223a      	movs	r2, #58	; 0x3a
10057b92:	20bf      	movs	r0, #191	; 0xbf
10057b94:	4005      	ands	r5, r0
10057b96:	e000      	b.n	10057b9a <aci_gatt_read_multi_permit_req_event_push+0x22>
10057b98:	2237      	movs	r2, #55	; 0x37
10057b9a:	4910      	ldr	r1, [pc, #64]	; (10057bdc <aci_gatt_read_multi_permit_req_event_push+0x64>)
10057b9c:	0728      	lsls	r0, r5, #28
10057b9e:	6809      	ldr	r1, [r1, #0]
10057ba0:	0e80      	lsrs	r0, r0, #26
10057ba2:	1840      	adds	r0, r0, r1
10057ba4:	2101      	movs	r1, #1
10057ba6:	02c9      	lsls	r1, r1, #11
10057ba8:	1840      	adds	r0, r0, r1
10057baa:	6940      	ldr	r0, [r0, #20]
10057bac:	4629      	mov	r1, r5
10057bae:	f7fd fb1d 	bl	100551ec <aci_event_fifo_push_header>
10057bb2:	0004      	movs	r4, r0
10057bb4:	d00f      	beq.n	10057bd6 <aci_gatt_read_multi_permit_req_event_push+0x5e>
10057bb6:	80a7      	strh	r7, [r4, #4]
10057bb8:	0871      	lsrs	r1, r6, #1
10057bba:	71a1      	strb	r1, [r4, #6]
10057bbc:	4620      	mov	r0, r4
10057bbe:	4632      	mov	r2, r6
10057bc0:	3008      	adds	r0, #8
10057bc2:	9904      	ldr	r1, [sp, #16]
10057bc4:	f7eb fafb 	bl	100431be <Osal_MemCpy>
10057bc8:	4621      	mov	r1, r4
10057bca:	4628      	mov	r0, r5
10057bcc:	f7fd fafa 	bl	100551c4 <aci_event_fifo_push>
10057bd0:	2000      	movs	r0, #0
10057bd2:	b005      	add	sp, #20
10057bd4:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057bd6:	2007      	movs	r0, #7
10057bd8:	e7fb      	b.n	10057bd2 <aci_gatt_read_multi_permit_req_event_push+0x5a>
10057bda:	0000      	.short	0x0000
10057bdc:	2000098c 	.word	0x2000098c

10057be0 <aci_gatt_read_permit_req_event_push>:
10057be0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10057be2:	461d      	mov	r5, r3
10057be4:	4604      	mov	r4, r0
10057be6:	2302      	movs	r3, #2
10057be8:	4616      	mov	r6, r2
10057bea:	460f      	mov	r7, r1
10057bec:	06c0      	lsls	r0, r0, #27
10057bee:	d503      	bpl.n	10057bf8 <aci_gatt_read_permit_req_event_push+0x18>
10057bf0:	2239      	movs	r2, #57	; 0x39
10057bf2:	20bf      	movs	r0, #191	; 0xbf
10057bf4:	4004      	ands	r4, r0
10057bf6:	e000      	b.n	10057bfa <aci_gatt_read_permit_req_event_push+0x1a>
10057bf8:	2236      	movs	r2, #54	; 0x36
10057bfa:	490c      	ldr	r1, [pc, #48]	; (10057c2c <aci_gatt_read_permit_req_event_push+0x4c>)
10057bfc:	0720      	lsls	r0, r4, #28
10057bfe:	6809      	ldr	r1, [r1, #0]
10057c00:	0e80      	lsrs	r0, r0, #26
10057c02:	1840      	adds	r0, r0, r1
10057c04:	2101      	movs	r1, #1
10057c06:	02c9      	lsls	r1, r1, #11
10057c08:	1840      	adds	r0, r0, r1
10057c0a:	6940      	ldr	r0, [r0, #20]
10057c0c:	4621      	mov	r1, r4
10057c0e:	f7fd faed 	bl	100551ec <aci_event_fifo_push_header>
10057c12:	0001      	movs	r1, r0
10057c14:	d007      	beq.n	10057c26 <aci_gatt_read_permit_req_event_push+0x46>
10057c16:	808f      	strh	r7, [r1, #4]
10057c18:	80ce      	strh	r6, [r1, #6]
10057c1a:	810d      	strh	r5, [r1, #8]
10057c1c:	4620      	mov	r0, r4
10057c1e:	f7fd fad1 	bl	100551c4 <aci_event_fifo_push>
10057c22:	2000      	movs	r0, #0
10057c24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10057c26:	2007      	movs	r0, #7
10057c28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10057c2a:	0000      	.short	0x0000
10057c2c:	2000098c 	.word	0x2000098c

10057c30 <aci_gatt_write_permit_req_event_push>:
10057c30:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
10057c32:	b081      	sub	sp, #4
10057c34:	9e0a      	ldr	r6, [sp, #40]	; 0x28
10057c36:	4605      	mov	r5, r0
10057c38:	2103      	movs	r1, #3
10057c3a:	1d70      	adds	r0, r6, #5
10057c3c:	4308      	orrs	r0, r1
10057c3e:	1c40      	adds	r0, r0, #1
10057c40:	0883      	lsrs	r3, r0, #2
10057c42:	4617      	mov	r7, r2
10057c44:	06e8      	lsls	r0, r5, #27
10057c46:	d503      	bpl.n	10057c50 <aci_gatt_write_permit_req_event_push+0x20>
10057c48:	2237      	movs	r2, #55	; 0x37
10057c4a:	20bf      	movs	r0, #191	; 0xbf
10057c4c:	4005      	ands	r5, r0
10057c4e:	e000      	b.n	10057c52 <aci_gatt_write_permit_req_event_push+0x22>
10057c50:	2234      	movs	r2, #52	; 0x34
10057c52:	4911      	ldr	r1, [pc, #68]	; (10057c98 <aci_gatt_write_permit_req_event_push+0x68>)
10057c54:	0728      	lsls	r0, r5, #28
10057c56:	6809      	ldr	r1, [r1, #0]
10057c58:	0e80      	lsrs	r0, r0, #26
10057c5a:	1840      	adds	r0, r0, r1
10057c5c:	2101      	movs	r1, #1
10057c5e:	02c9      	lsls	r1, r1, #11
10057c60:	1840      	adds	r0, r0, r1
10057c62:	6940      	ldr	r0, [r0, #20]
10057c64:	4629      	mov	r1, r5
10057c66:	f7fd fac1 	bl	100551ec <aci_event_fifo_push_header>
10057c6a:	0004      	movs	r4, r0
10057c6c:	d012      	beq.n	10057c94 <aci_gatt_write_permit_req_event_push+0x64>
10057c6e:	9802      	ldr	r0, [sp, #8]
10057c70:	80a0      	strh	r0, [r4, #4]
10057c72:	80e7      	strh	r7, [r4, #6]
10057c74:	7226      	strb	r6, [r4, #8]
10057c76:	9904      	ldr	r1, [sp, #16]
10057c78:	4623      	mov	r3, r4
10057c7a:	4632      	mov	r2, r6
10057c7c:	1d09      	adds	r1, r1, #4
10057c7e:	3309      	adds	r3, #9
10057c80:	980b      	ldr	r0, [sp, #44]	; 0x2c
10057c82:	f7f8 fd0b 	bl	1005069c <PM_Copy_Pckt_Data>
10057c86:	4621      	mov	r1, r4
10057c88:	4628      	mov	r0, r5
10057c8a:	f7fd fa9b 	bl	100551c4 <aci_event_fifo_push>
10057c8e:	2000      	movs	r0, #0
10057c90:	b005      	add	sp, #20
10057c92:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057c94:	2007      	movs	r0, #7
10057c96:	e7fb      	b.n	10057c90 <aci_gatt_write_permit_req_event_push+0x60>
10057c98:	2000098c 	.word	0x2000098c

10057c9c <BlueNRG_Stack_Perform_Deep_Sleep_Check>:
10057c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10057c9e:	4d29      	ldr	r5, [pc, #164]	; (10057d44 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa8>)
10057ca0:	2000      	movs	r0, #0
10057ca2:	6829      	ldr	r1, [r5, #0]
10057ca4:	460a      	mov	r2, r1
10057ca6:	3240      	adds	r2, #64	; 0x40
10057ca8:	7813      	ldrb	r3, [r2, #0]
10057caa:	79d2      	ldrb	r2, [r2, #7]
10057cac:	4393      	bics	r3, r2
10057cae:	d147      	bne.n	10057d40 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
10057cb0:	6e4a      	ldr	r2, [r1, #100]	; 0x64
10057cb2:	0e12      	lsrs	r2, r2, #24
10057cb4:	d144      	bne.n	10057d40 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
10057cb6:	223e      	movs	r2, #62	; 0x3e
10057cb8:	5c52      	ldrb	r2, [r2, r1]
10057cba:	2a00      	cmp	r2, #0
10057cbc:	d140      	bne.n	10057d40 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
10057cbe:	1e43      	subs	r3, r0, #1
10057cc0:	4821      	ldr	r0, [pc, #132]	; (10057d48 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xac>)
10057cc2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
10057cc4:	7a46      	ldrb	r6, [r0, #9]
10057cc6:	461a      	mov	r2, r3
10057cc8:	2400      	movs	r4, #0
10057cca:	00f6      	lsls	r6, r6, #3
10057ccc:	19ad      	adds	r5, r5, r6
10057cce:	2609      	movs	r6, #9
10057cd0:	06f6      	lsls	r6, r6, #27
10057cd2:	6937      	ldr	r7, [r6, #16]
10057cd4:	8800      	ldrh	r0, [r0, #0]
10057cd6:	197d      	adds	r5, r7, r5
10057cd8:	0707      	lsls	r7, r0, #28
10057cda:	2001      	movs	r0, #1
10057cdc:	2f00      	cmp	r7, #0
10057cde:	da06      	bge.n	10057cee <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x52>
10057ce0:	02c3      	lsls	r3, r0, #11
10057ce2:	18cb      	adds	r3, r1, r3
10057ce4:	6f1c      	ldr	r4, [r3, #112]	; 0x70
10057ce6:	1b63      	subs	r3, r4, r5
10057ce8:	021b      	lsls	r3, r3, #8
10057cea:	121b      	asrs	r3, r3, #8
10057cec:	d428      	bmi.n	10057d40 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
10057cee:	2707      	movs	r7, #7
10057cf0:	023f      	lsls	r7, r7, #8
10057cf2:	19c9      	adds	r1, r1, r7
10057cf4:	6a49      	ldr	r1, [r1, #36]	; 0x24
10057cf6:	01cf      	lsls	r7, r1, #7
10057cf8:	d503      	bpl.n	10057d02 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x66>
10057cfa:	1b4a      	subs	r2, r1, r5
10057cfc:	0212      	lsls	r2, r2, #8
10057cfe:	1212      	asrs	r2, r2, #8
10057d00:	d41e      	bmi.n	10057d40 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
10057d02:	2501      	movs	r5, #1
10057d04:	072d      	lsls	r5, r5, #28
10057d06:	2b00      	cmp	r3, #0
10057d08:	da06      	bge.n	10057d18 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x7c>
10057d0a:	2a00      	cmp	r2, #0
10057d0c:	da0a      	bge.n	10057d24 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x88>
10057d0e:	6075      	str	r5, [r6, #4]
10057d10:	480e      	ldr	r0, [pc, #56]	; (10057d4c <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xb0>)
10057d12:	6085      	str	r5, [r0, #8]
10057d14:	2003      	movs	r0, #3
10057d16:	e00a      	b.n	10057d2e <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x92>
10057d18:	2011      	movs	r0, #17
10057d1a:	0600      	lsls	r0, r0, #24
10057d1c:	4304      	orrs	r4, r0
10057d1e:	6074      	str	r4, [r6, #4]
10057d20:	2a00      	cmp	r2, #0
10057d22:	db03      	blt.n	10057d2c <BlueNRG_Stack_Perform_Deep_Sleep_Check+0x90>
10057d24:	4329      	orrs	r1, r5
10057d26:	4608      	mov	r0, r1
10057d28:	f7f4 ff66 	bl	1004cbf8 <Set_Host_Timer_value>
10057d2c:	2002      	movs	r0, #2
10057d2e:	4905      	ldr	r1, [pc, #20]	; (10057d44 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa8>)
10057d30:	6809      	ldr	r1, [r1, #0]
10057d32:	3140      	adds	r1, #64	; 0x40
10057d34:	784a      	ldrb	r2, [r1, #1]
10057d36:	2a00      	cmp	r2, #0
10057d38:	d002      	beq.n	10057d40 <BlueNRG_Stack_Perform_Deep_Sleep_Check+0xa4>
10057d3a:	2000      	movs	r0, #0
10057d3c:	7048      	strb	r0, [r1, #1]
10057d3e:	2003      	movs	r0, #3
10057d40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10057d42:	0000      	.short	0x0000
10057d44:	2000098c 	.word	0x2000098c
10057d48:	200000c0 	.word	0x200000c0
10057d4c:	48000040 	.word	0x48000040

10057d50 <LL_Sleep_Req>:
10057d50:	b430      	push	{r4, r5}
10057d52:	4813      	ldr	r0, [pc, #76]	; (10057da0 <LL_Sleep_Req+0x50>)
10057d54:	2209      	movs	r2, #9
10057d56:	6803      	ldr	r3, [r0, #0]
10057d58:	2001      	movs	r0, #1
10057d5a:	02c0      	lsls	r0, r0, #11
10057d5c:	1818      	adds	r0, r3, r0
10057d5e:	06d2      	lsls	r2, r2, #27
10057d60:	6f00      	ldr	r0, [r0, #112]	; 0x70
10057d62:	6911      	ldr	r1, [r2, #16]
10057d64:	4c0f      	ldr	r4, [pc, #60]	; (10057da4 <LL_Sleep_Req+0x54>)
10057d66:	1a41      	subs	r1, r0, r1
10057d68:	0209      	lsls	r1, r1, #8
10057d6a:	8825      	ldrh	r5, [r4, #0]
10057d6c:	0a09      	lsrs	r1, r1, #8
10057d6e:	072d      	lsls	r5, r5, #28
10057d70:	d402      	bmi.n	10057d78 <LL_Sleep_Req+0x28>
10057d72:	bc30      	pop	{r4, r5}
10057d74:	2001      	movs	r0, #1
10057d76:	4770      	bx	lr
10057d78:	7a64      	ldrb	r4, [r4, #9]
10057d7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
10057d7c:	00e4      	lsls	r4, r4, #3
10057d7e:	18e3      	adds	r3, r4, r3
10057d80:	428b      	cmp	r3, r1
10057d82:	d209      	bcs.n	10057d98 <LL_Sleep_Req+0x48>
10057d84:	2301      	movs	r3, #1
10057d86:	05db      	lsls	r3, r3, #23
10057d88:	4299      	cmp	r1, r3
10057d8a:	d205      	bcs.n	10057d98 <LL_Sleep_Req+0x48>
10057d8c:	0059      	lsls	r1, r3, #1
10057d8e:	4308      	orrs	r0, r1
10057d90:	6050      	str	r0, [r2, #4]
10057d92:	bc30      	pop	{r4, r5}
10057d94:	2001      	movs	r0, #1
10057d96:	4770      	bx	lr
10057d98:	bc30      	pop	{r4, r5}
10057d9a:	2000      	movs	r0, #0
10057d9c:	4770      	bx	lr
10057d9e:	0000      	.short	0x0000
10057da0:	2000098c 	.word	0x2000098c
10057da4:	200000c0 	.word	0x200000c0

10057da8 <IDD_Initialize_Device_IDs>:
10057da8:	b5f0      	push	{r4, r5, r6, r7, lr}
10057daa:	4c45      	ldr	r4, [pc, #276]	; (10057ec0 <IDD_Initialize_Device_IDs+0x118>)
10057dac:	2509      	movs	r5, #9
10057dae:	6826      	ldr	r6, [r4, #0]
10057db0:	022d      	lsls	r5, r5, #8
10057db2:	1970      	adds	r0, r6, r5
10057db4:	6e00      	ldr	r0, [r0, #96]	; 0x60
10057db6:	2700      	movs	r7, #0
10057db8:	6b41      	ldr	r1, [r0, #52]	; 0x34
10057dba:	4842      	ldr	r0, [pc, #264]	; (10057ec4 <IDD_Initialize_Device_IDs+0x11c>)
10057dbc:	36ae      	adds	r6, #174	; 0xae
10057dbe:	b08d      	sub	sp, #52	; 0x34
10057dc0:	4281      	cmp	r1, r0
10057dc2:	d042      	beq.n	10057e4a <IDD_Initialize_Device_IDs+0xa2>
10057dc4:	2106      	movs	r1, #6
10057dc6:	4668      	mov	r0, sp
10057dc8:	f7f4 fc86 	bl	1004c6d8 <HAL_Generate_Random_Bytes_To>
10057dcc:	4669      	mov	r1, sp
10057dce:	7948      	ldrb	r0, [r1, #5]
10057dd0:	21c0      	movs	r1, #192	; 0xc0
10057dd2:	4308      	orrs	r0, r1
10057dd4:	4669      	mov	r1, sp
10057dd6:	7148      	strb	r0, [r1, #5]
10057dd8:	6820      	ldr	r0, [r4, #0]
10057dda:	2206      	movs	r2, #6
10057ddc:	1940      	adds	r0, r0, r5
10057dde:	6e00      	ldr	r0, [r0, #96]	; 0x60
10057de0:	3024      	adds	r0, #36	; 0x24
10057de2:	f7f4 fc4f 	bl	1004c684 <HAL_Flash_Store_Data>
10057de6:	4607      	mov	r7, r0
10057de8:	2110      	movs	r1, #16
10057dea:	a805      	add	r0, sp, #20
10057dec:	f7f4 fc74 	bl	1004c6d8 <HAL_Generate_Random_Bytes_To>
10057df0:	6820      	ldr	r0, [r4, #0]
10057df2:	2210      	movs	r2, #16
10057df4:	1940      	adds	r0, r0, r5
10057df6:	6e00      	ldr	r0, [r0, #96]	; 0x60
10057df8:	a905      	add	r1, sp, #20
10057dfa:	1d00      	adds	r0, r0, #4
10057dfc:	f7f4 fc42 	bl	1004c684 <HAL_Flash_Store_Data>
10057e00:	4307      	orrs	r7, r0
10057e02:	2110      	movs	r1, #16
10057e04:	a809      	add	r0, sp, #36	; 0x24
10057e06:	f7f4 fc67 	bl	1004c6d8 <HAL_Generate_Random_Bytes_To>
10057e0a:	6820      	ldr	r0, [r4, #0]
10057e0c:	2210      	movs	r2, #16
10057e0e:	1940      	adds	r0, r0, r5
10057e10:	6e00      	ldr	r0, [r0, #96]	; 0x60
10057e12:	a909      	add	r1, sp, #36	; 0x24
10057e14:	3014      	adds	r0, #20
10057e16:	f7f4 fc35 	bl	1004c684 <HAL_Flash_Store_Data>
10057e1a:	4601      	mov	r1, r0
10057e1c:	4339      	orrs	r1, r7
10057e1e:	d113      	bne.n	10057e48 <IDD_Initialize_Device_IDs+0xa0>
10057e20:	6820      	ldr	r0, [r4, #0]
10057e22:	4929      	ldr	r1, [pc, #164]	; (10057ec8 <IDD_Initialize_Device_IDs+0x120>)
10057e24:	1940      	adds	r0, r0, r5
10057e26:	6e00      	ldr	r0, [r0, #96]	; 0x60
10057e28:	4f26      	ldr	r7, [pc, #152]	; (10057ec4 <IDD_Initialize_Device_IDs+0x11c>)
10057e2a:	1840      	adds	r0, r0, r1
10057e2c:	0880      	lsrs	r0, r0, #2
10057e2e:	0081      	lsls	r1, r0, #2
10057e30:	4826      	ldr	r0, [pc, #152]	; (10057ecc <IDD_Initialize_Device_IDs+0x124>)
10057e32:	1808      	adds	r0, r1, r0
10057e34:	4639      	mov	r1, r7
10057e36:	9004      	str	r0, [sp, #16]
10057e38:	f7ec f840 	bl	10043ebc <FLASH_ProgramWord>
10057e3c:	9804      	ldr	r0, [sp, #16]
10057e3e:	6800      	ldr	r0, [r0, #0]
10057e40:	42b8      	cmp	r0, r7
10057e42:	d101      	bne.n	10057e48 <IDD_Initialize_Device_IDs+0xa0>
10057e44:	2700      	movs	r7, #0
10057e46:	e000      	b.n	10057e4a <IDD_Initialize_Device_IDs+0xa2>
10057e48:	27fb      	movs	r7, #251	; 0xfb
10057e4a:	6822      	ldr	r2, [r4, #0]
10057e4c:	1950      	adds	r0, r2, r5
10057e4e:	6e00      	ldr	r0, [r0, #96]	; 0x60
10057e50:	32a6      	adds	r2, #166	; 0xa6
10057e52:	3024      	adds	r0, #36	; 0x24
10057e54:	9001      	str	r0, [sp, #4]
10057e56:	2006      	movs	r0, #6
10057e58:	4601      	mov	r1, r0
10057e5a:	9000      	str	r0, [sp, #0]
10057e5c:	2000      	movs	r0, #0
10057e5e:	f7fd f8ec 	bl	1005503a <is_Buffer_All_Set_To>
10057e62:	2800      	cmp	r0, #0
10057e64:	d102      	bne.n	10057e6c <IDD_Initialize_Device_IDs+0xc4>
10057e66:	6820      	ldr	r0, [r4, #0]
10057e68:	30a6      	adds	r0, #166	; 0xa6
10057e6a:	9001      	str	r0, [sp, #4]
10057e6c:	1d70      	adds	r0, r6, #5
10057e6e:	9a00      	ldr	r2, [sp, #0]
10057e70:	9901      	ldr	r1, [sp, #4]
10057e72:	f7eb f9a4 	bl	100431be <Osal_MemCpy>
10057e76:	6822      	ldr	r2, [r4, #0]
10057e78:	2610      	movs	r6, #16
10057e7a:	4631      	mov	r1, r6
10057e7c:	2000      	movs	r0, #0
10057e7e:	3280      	adds	r2, #128	; 0x80
10057e80:	f7fd f8db 	bl	1005503a <is_Buffer_All_Set_To>
10057e84:	2800      	cmp	r0, #0
10057e86:	d007      	beq.n	10057e98 <IDD_Initialize_Device_IDs+0xf0>
10057e88:	6820      	ldr	r0, [r4, #0]
10057e8a:	4632      	mov	r2, r6
10057e8c:	1941      	adds	r1, r0, r5
10057e8e:	6e09      	ldr	r1, [r1, #96]	; 0x60
10057e90:	3080      	adds	r0, #128	; 0x80
10057e92:	1d09      	adds	r1, r1, #4
10057e94:	f7eb f993 	bl	100431be <Osal_MemCpy>
10057e98:	6822      	ldr	r2, [r4, #0]
10057e9a:	4631      	mov	r1, r6
10057e9c:	2000      	movs	r0, #0
10057e9e:	3290      	adds	r2, #144	; 0x90
10057ea0:	f7fd f8cb 	bl	1005503a <is_Buffer_All_Set_To>
10057ea4:	2800      	cmp	r0, #0
10057ea6:	d007      	beq.n	10057eb8 <IDD_Initialize_Device_IDs+0x110>
10057ea8:	6820      	ldr	r0, [r4, #0]
10057eaa:	4632      	mov	r2, r6
10057eac:	1941      	adds	r1, r0, r5
10057eae:	6e09      	ldr	r1, [r1, #96]	; 0x60
10057eb0:	3090      	adds	r0, #144	; 0x90
10057eb2:	3114      	adds	r1, #20
10057eb4:	f7eb f983 	bl	100431be <Osal_MemCpy>
10057eb8:	4638      	mov	r0, r7
10057eba:	b00d      	add	sp, #52	; 0x34
10057ebc:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057ebe:	0000      	.short	0x0000
10057ec0:	2000098c 	.word	0x2000098c
10057ec4:	aaaaaaaa 	.word	0xaaaaaaaa
10057ec8:	effc0034 	.word	0xeffc0034
10057ecc:	10040000 	.word	0x10040000

10057ed0 <isr_postproc>:
10057ed0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10057ed2:	7950      	ldrb	r0, [r2, #5]
10057ed4:	6915      	ldr	r5, [r2, #16]
10057ed6:	0780      	lsls	r0, r0, #30
10057ed8:	6b56      	ldr	r6, [r2, #52]	; 0x34
10057eda:	461f      	mov	r7, r3
10057edc:	4614      	mov	r4, r2
10057ede:	0f80      	lsrs	r0, r0, #30
10057ee0:	d10d      	bne.n	10057efe <isr_postproc+0x2e>
10057ee2:	05a8      	lsls	r0, r5, #22
10057ee4:	d50c      	bpl.n	10057f00 <isr_postproc+0x30>
10057ee6:	2001      	movs	r0, #1
10057ee8:	0240      	lsls	r0, r0, #9
10057eea:	4385      	bics	r5, r0
10057eec:	0100      	lsls	r0, r0, #4
10057eee:	4305      	orrs	r5, r0
10057ef0:	486c      	ldr	r0, [pc, #432]	; (100580a4 <isr_postproc+0x1d4>)
10057ef2:	6030      	str	r0, [r6, #0]
10057ef4:	7960      	ldrb	r0, [r4, #5]
10057ef6:	2101      	movs	r1, #1
10057ef8:	4308      	orrs	r0, r1
10057efa:	7160      	strb	r0, [r4, #5]
10057efc:	6115      	str	r5, [r2, #16]
10057efe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10057f00:	0628      	lsls	r0, r5, #24
10057f02:	d509      	bpl.n	10057f18 <isr_postproc+0x48>
10057f04:	2051      	movs	r0, #81	; 0x51
10057f06:	01c0      	lsls	r0, r0, #7
10057f08:	4385      	bics	r5, r0
10057f0a:	04e8      	lsls	r0, r5, #19
10057f0c:	d401      	bmi.n	10057f12 <isr_postproc+0x42>
10057f0e:	2040      	movs	r0, #64	; 0x40
10057f10:	4305      	orrs	r5, r0
10057f12:	4865      	ldr	r0, [pc, #404]	; (100580a8 <isr_postproc+0x1d8>)
10057f14:	6125      	str	r5, [r4, #16]
10057f16:	e098      	b.n	1005804a <isr_postproc+0x17a>
10057f18:	04e8      	lsls	r0, r5, #19
10057f1a:	d539      	bpl.n	10057f90 <isr_postproc+0xc0>
10057f1c:	f7f4 fcb9 	bl	1004c892 <Hal_Get_Random_Number32>
10057f20:	9000      	str	r0, [sp, #0]
10057f22:	f7f4 fcb6 	bl	1004c892 <Hal_Get_Random_Number32>
10057f26:	9001      	str	r0, [sp, #4]
10057f28:	f7f4 fcb3 	bl	1004c892 <Hal_Get_Random_Number32>
10057f2c:	9002      	str	r0, [sp, #8]
10057f2e:	2001      	movs	r0, #1
10057f30:	0300      	lsls	r0, r0, #12
10057f32:	4385      	bics	r5, r0
10057f34:	2003      	movs	r0, #3
10057f36:	0280      	lsls	r0, r0, #10
10057f38:	4305      	orrs	r5, r0
10057f3a:	6125      	str	r5, [r4, #16]
10057f3c:	7960      	ldrb	r0, [r4, #5]
10057f3e:	2101      	movs	r1, #1
10057f40:	4308      	orrs	r0, r1
10057f42:	7160      	strb	r0, [r4, #5]
10057f44:	6b60      	ldr	r0, [r4, #52]	; 0x34
10057f46:	4639      	mov	r1, r7
10057f48:	312e      	adds	r1, #46	; 0x2e
10057f4a:	2210      	movs	r2, #16
10057f4c:	300c      	adds	r0, #12
10057f4e:	f7f4 fcb7 	bl	1004c8c0 <char_copy>
10057f52:	3726      	adds	r7, #38	; 0x26
10057f54:	9802      	ldr	r0, [sp, #8]
10057f56:	7038      	strb	r0, [r7, #0]
10057f58:	0a01      	lsrs	r1, r0, #8
10057f5a:	7079      	strb	r1, [r7, #1]
10057f5c:	0c01      	lsrs	r1, r0, #16
10057f5e:	70b9      	strb	r1, [r7, #2]
10057f60:	0e00      	lsrs	r0, r0, #24
10057f62:	70f8      	strb	r0, [r7, #3]
10057f64:	4851      	ldr	r0, [pc, #324]	; (100580ac <isr_postproc+0x1dc>)
10057f66:	6030      	str	r0, [r6, #0]
10057f68:	6b61      	ldr	r1, [r4, #52]	; 0x34
10057f6a:	2208      	movs	r2, #8
10057f6c:	1d08      	adds	r0, r1, #4
10057f6e:	1cc9      	adds	r1, r1, #3
10057f70:	f7f4 fca6 	bl	1004c8c0 <char_copy>
10057f74:	6b61      	ldr	r1, [r4, #52]	; 0x34
10057f76:	2202      	movs	r2, #2
10057f78:	4608      	mov	r0, r1
10057f7a:	301c      	adds	r0, #28
10057f7c:	310b      	adds	r1, #11
10057f7e:	f7f4 fc9f 	bl	1004c8c0 <char_copy>
10057f82:	6b61      	ldr	r1, [r4, #52]	; 0x34
10057f84:	220c      	movs	r2, #12
10057f86:	4668      	mov	r0, sp
10057f88:	310d      	adds	r1, #13
10057f8a:	f7f4 fc99 	bl	1004c8c0 <char_copy>
10057f8e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10057f90:	0268      	lsls	r0, r5, #9
10057f92:	d535      	bpl.n	10058000 <isr_postproc+0x130>
10057f94:	f7f4 fc7d 	bl	1004c892 <Hal_Get_Random_Number32>
10057f98:	9001      	str	r0, [sp, #4]
10057f9a:	f7f4 fc7a 	bl	1004c892 <Hal_Get_Random_Number32>
10057f9e:	9000      	str	r0, [sp, #0]
10057fa0:	f7f4 fc77 	bl	1004c892 <Hal_Get_Random_Number32>
10057fa4:	4601      	mov	r1, r0
10057fa6:	aa01      	add	r2, sp, #4
10057fa8:	2000      	movs	r0, #0
10057faa:	183d      	adds	r5, r7, r0
10057fac:	7813      	ldrb	r3, [r2, #0]
10057fae:	3520      	adds	r5, #32
10057fb0:	72ab      	strb	r3, [r5, #10]
10057fb2:	1c40      	adds	r0, r0, #1
10057fb4:	b2c0      	uxtb	r0, r0
10057fb6:	1c52      	adds	r2, r2, #1
10057fb8:	2804      	cmp	r0, #4
10057fba:	d3f6      	bcc.n	10057faa <isr_postproc+0xda>
10057fbc:	9800      	ldr	r0, [sp, #0]
10057fbe:	4a3c      	ldr	r2, [pc, #240]	; (100580b0 <isr_postproc+0x1e0>)
10057fc0:	0600      	lsls	r0, r0, #24
10057fc2:	1880      	adds	r0, r0, r2
10057fc4:	6030      	str	r0, [r6, #0]
10057fc6:	9800      	ldr	r0, [sp, #0]
10057fc8:	060a      	lsls	r2, r1, #24
10057fca:	0a00      	lsrs	r0, r0, #8
10057fcc:	4310      	orrs	r0, r2
10057fce:	6070      	str	r0, [r6, #4]
10057fd0:	9801      	ldr	r0, [sp, #4]
10057fd2:	0a0a      	lsrs	r2, r1, #8
10057fd4:	0603      	lsls	r3, r0, #24
10057fd6:	431a      	orrs	r2, r3
10057fd8:	0a00      	lsrs	r0, r0, #8
10057fda:	60b2      	str	r2, [r6, #8]
10057fdc:	60f0      	str	r0, [r6, #12]
10057fde:	4835      	ldr	r0, [pc, #212]	; (100580b4 <isr_postproc+0x1e4>)
10057fe0:	9a00      	ldr	r2, [sp, #0]
10057fe2:	6803      	ldr	r3, [r0, #0]
10057fe4:	2009      	movs	r0, #9
10057fe6:	0200      	lsls	r0, r0, #8
10057fe8:	1818      	adds	r0, r3, r0
10057fea:	66c2      	str	r2, [r0, #108]	; 0x6c
10057fec:	6701      	str	r1, [r0, #112]	; 0x70
10057fee:	7960      	ldrb	r0, [r4, #5]
10057ff0:	2101      	movs	r1, #1
10057ff2:	4308      	orrs	r0, r1
10057ff4:	7160      	strb	r0, [r4, #5]
10057ff6:	6920      	ldr	r0, [r4, #16]
10057ff8:	0589      	lsls	r1, r1, #22
10057ffa:	4388      	bics	r0, r1
10057ffc:	6120      	str	r0, [r4, #16]
10057ffe:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10058000:	0568      	lsls	r0, r5, #21
10058002:	d4fc      	bmi.n	10057ffe <isr_postproc+0x12e>
10058004:	0768      	lsls	r0, r5, #29
10058006:	d516      	bpl.n	10058036 <isr_postproc+0x166>
10058008:	4621      	mov	r1, r4
1005800a:	3120      	adds	r1, #32
1005800c:	7c48      	ldrb	r0, [r1, #17]
1005800e:	2800      	cmp	r0, #0
10058010:	d10d      	bne.n	1005802e <isr_postproc+0x15e>
10058012:	4829      	ldr	r0, [pc, #164]	; (100580b8 <isr_postproc+0x1e8>)
10058014:	6030      	str	r0, [r6, #0]
10058016:	4827      	ldr	r0, [pc, #156]	; (100580b4 <isr_postproc+0x1e4>)
10058018:	6800      	ldr	r0, [r0, #0]
1005801a:	3080      	adds	r0, #128	; 0x80
1005801c:	8c40      	ldrh	r0, [r0, #34]	; 0x22
1005801e:	0400      	lsls	r0, r0, #16
10058020:	3030      	adds	r0, #48	; 0x30
10058022:	6070      	str	r0, [r6, #4]
10058024:	7962      	ldrb	r2, [r4, #5]
10058026:	2001      	movs	r0, #1
10058028:	4302      	orrs	r2, r0
1005802a:	7162      	strb	r2, [r4, #5]
1005802c:	7448      	strb	r0, [r1, #17]
1005802e:	2004      	movs	r0, #4
10058030:	4385      	bics	r5, r0
10058032:	6125      	str	r5, [r4, #16]
10058034:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10058036:	0728      	lsls	r0, r5, #28
10058038:	2708      	movs	r7, #8
1005803a:	2800      	cmp	r0, #0
1005803c:	da0b      	bge.n	10058056 <isr_postproc+0x186>
1005803e:	79e0      	ldrb	r0, [r4, #7]
10058040:	43bd      	bics	r5, r7
10058042:	491e      	ldr	r1, [pc, #120]	; (100580bc <isr_postproc+0x1ec>)
10058044:	0600      	lsls	r0, r0, #24
10058046:	1840      	adds	r0, r0, r1
10058048:	6125      	str	r5, [r4, #16]
1005804a:	6030      	str	r0, [r6, #0]
1005804c:	7960      	ldrb	r0, [r4, #5]
1005804e:	2101      	movs	r1, #1
10058050:	4308      	orrs	r0, r1
10058052:	7150      	strb	r0, [r2, #5]
10058054:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10058056:	06e8      	lsls	r0, r5, #27
10058058:	d510      	bpl.n	1005807c <isr_postproc+0x1ac>
1005805a:	2010      	movs	r0, #16
1005805c:	4385      	bics	r5, r0
1005805e:	6125      	str	r5, [r4, #16]
10058060:	f7f4 fcd7 	bl	1004ca12 <data_length_extension_csr_ucfg>
10058064:	4916      	ldr	r1, [pc, #88]	; (100580c0 <isr_postproc+0x1f0>)
10058066:	0740      	lsls	r0, r0, #29
10058068:	1840      	adds	r0, r0, r1
1005806a:	6030      	str	r0, [r6, #0]
1005806c:	2000      	movs	r0, #0
1005806e:	6070      	str	r0, [r6, #4]
10058070:	60b0      	str	r0, [r6, #8]
10058072:	7960      	ldrb	r0, [r4, #5]
10058074:	2101      	movs	r1, #1
10058076:	4308      	orrs	r0, r1
10058078:	7160      	strb	r0, [r4, #5]
1005807a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005807c:	0368      	lsls	r0, r5, #13
1005807e:	d5fc      	bpl.n	1005807a <isr_postproc+0x1aa>
10058080:	4610      	mov	r0, r2
10058082:	f7f6 fbc9 	bl	1004e818 <LL_Data_Length_Change_Event_ucfg>
10058086:	2800      	cmp	r0, #0
10058088:	d004      	beq.n	10058094 <isr_postproc+0x1c4>
1005808a:	4620      	mov	r0, r4
1005808c:	3040      	adds	r0, #64	; 0x40
1005808e:	7d01      	ldrb	r1, [r0, #20]
10058090:	4339      	orrs	r1, r7
10058092:	7501      	strb	r1, [r0, #20]
10058094:	2001      	movs	r0, #1
10058096:	0480      	lsls	r0, r0, #18
10058098:	4385      	bics	r5, r0
1005809a:	6125      	str	r5, [r4, #16]
1005809c:	8960      	ldrh	r0, [r4, #10]
1005809e:	f7f6 fc2d 	bl	1004e8fc <LL_Send_Length_Resp_ucfg>
100580a2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100580a4:	00060103 	.word	0x00060103
100580a8:	000b0103 	.word	0x000b0103
100580ac:	00031703 	.word	0x00031703
100580b0:	00040d13 	.word	0x00040d13
100580b4:	2000098c 	.word	0x2000098c
100580b8:	0b0c0603 	.word	0x0b0c0603
100580bc:	00070203 	.word	0x00070203
100580c0:	09090903 	.word	0x09090903

100580c4 <LL_receive_data>:
100580c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100580c6:	461d      	mov	r5, r3
100580c8:	4614      	mov	r4, r2
100580ca:	4606      	mov	r6, r0
100580cc:	2700      	movs	r7, #0
100580ce:	f7f4 fca0 	bl	1004ca12 <data_length_extension_csr_ucfg>
100580d2:	2801      	cmp	r0, #1
100580d4:	d00c      	beq.n	100580f0 <LL_receive_data+0x2c>
100580d6:	201f      	movs	r0, #31
100580d8:	7871      	ldrb	r1, [r6, #1]
100580da:	4008      	ands	r0, r1
100580dc:	0006      	movs	r6, r0
100580de:	d036      	beq.n	1005814e <LL_receive_data+0x8a>
100580e0:	2000      	movs	r0, #0
100580e2:	61e8      	str	r0, [r5, #28]
100580e4:	f7fd fe9a 	bl	10055e1c <isr_Acl_Data_Indication_Queue_Full>
100580e8:	2800      	cmp	r0, #0
100580ea:	d003      	beq.n	100580f4 <LL_receive_data+0x30>
100580ec:	69e8      	ldr	r0, [r5, #28]
100580ee:	e007      	b.n	10058100 <LL_receive_data+0x3c>
100580f0:	20ff      	movs	r0, #255	; 0xff
100580f2:	e7f1      	b.n	100580d8 <LL_receive_data+0x14>
100580f4:	8969      	ldrh	r1, [r5, #10]
100580f6:	4632      	mov	r2, r6
100580f8:	2001      	movs	r0, #1
100580fa:	f7f8 fb0f 	bl	1005071c <PM_Get_Pckt>
100580fe:	61e8      	str	r0, [r5, #28]
10058100:	2800      	cmp	r0, #0
10058102:	d001      	beq.n	10058108 <LL_receive_data+0x44>
10058104:	2710      	movs	r7, #16
10058106:	e022      	b.n	1005814e <LL_receive_data+0x8a>
10058108:	7de0      	ldrb	r0, [r4, #23]
1005810a:	2180      	movs	r1, #128	; 0x80
1005810c:	4048      	eors	r0, r1
1005810e:	75e0      	strb	r0, [r4, #23]
10058110:	4910      	ldr	r1, [pc, #64]	; (10058154 <LL_receive_data+0x90>)
10058112:	6928      	ldr	r0, [r5, #16]
10058114:	4208      	tst	r0, r1
10058116:	d01a      	beq.n	1005814e <LL_receive_data+0x8a>
10058118:	7960      	ldrb	r0, [r4, #5]
1005811a:	1e40      	subs	r0, r0, #1
1005811c:	7160      	strb	r0, [r4, #5]
1005811e:	7960      	ldrb	r0, [r4, #5]
10058120:	28ff      	cmp	r0, #255	; 0xff
10058122:	d114      	bne.n	1005814e <LL_receive_data+0x8a>
10058124:	79a0      	ldrb	r0, [r4, #6]
10058126:	1e40      	subs	r0, r0, #1
10058128:	71a0      	strb	r0, [r4, #6]
1005812a:	79a0      	ldrb	r0, [r4, #6]
1005812c:	28ff      	cmp	r0, #255	; 0xff
1005812e:	d10e      	bne.n	1005814e <LL_receive_data+0x8a>
10058130:	79e0      	ldrb	r0, [r4, #7]
10058132:	1e40      	subs	r0, r0, #1
10058134:	71e0      	strb	r0, [r4, #7]
10058136:	79e0      	ldrb	r0, [r4, #7]
10058138:	28ff      	cmp	r0, #255	; 0xff
1005813a:	d108      	bne.n	1005814e <LL_receive_data+0x8a>
1005813c:	7a20      	ldrb	r0, [r4, #8]
1005813e:	1e40      	subs	r0, r0, #1
10058140:	7220      	strb	r0, [r4, #8]
10058142:	7a20      	ldrb	r0, [r4, #8]
10058144:	28ff      	cmp	r0, #255	; 0xff
10058146:	d102      	bne.n	1005814e <LL_receive_data+0x8a>
10058148:	7a60      	ldrb	r0, [r4, #9]
1005814a:	1e40      	subs	r0, r0, #1
1005814c:	7260      	strb	r0, [r4, #9]
1005814e:	4638      	mov	r0, r7
10058150:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10058152:	0000      	.short	0x0000
10058154:	00002820 	.word	0x00002820

10058158 <cancel_slave>:
10058158:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005815a:	4603      	mov	r3, r0
1005815c:	482d      	ldr	r0, [pc, #180]	; (10058214 <cancel_slave+0xbc>)
1005815e:	273f      	movs	r7, #63	; 0x3f
10058160:	6802      	ldr	r2, [r0, #0]
10058162:	2009      	movs	r0, #9
10058164:	0200      	lsls	r0, r0, #8
10058166:	1810      	adds	r0, r2, r0
10058168:	6b01      	ldr	r1, [r0, #48]	; 0x30
1005816a:	2058      	movs	r0, #88	; 0x58
1005816c:	4358      	muls	r0, r3
1005816e:	180c      	adds	r4, r1, r0
10058170:	2041      	movs	r0, #65	; 0x41
10058172:	0140      	lsls	r0, r0, #5
10058174:	1810      	adds	r0, r2, r0
10058176:	4611      	mov	r1, r2
10058178:	4e27      	ldr	r6, [pc, #156]	; (10058218 <cancel_slave+0xc0>)
1005817a:	017f      	lsls	r7, r7, #5
1005817c:	019d      	lsls	r5, r3, #6
1005817e:	19d2      	adds	r2, r2, r7
10058180:	19ae      	adds	r6, r5, r6
10058182:	7a92      	ldrb	r2, [r2, #10]
10058184:	31c0      	adds	r1, #192	; 0xc0
10058186:	2500      	movs	r5, #0
10058188:	429a      	cmp	r2, r3
1005818a:	d10c      	bne.n	100581a6 <cancel_slave+0x4e>
1005818c:	4602      	mov	r2, r0
1005818e:	3240      	adds	r2, #64	; 0x40
10058190:	4617      	mov	r7, r2
10058192:	8e92      	ldrh	r2, [r2, #52]	; 0x34
10058194:	8f3f      	ldrh	r7, [r7, #56]	; 0x38
10058196:	9700      	str	r7, [sp, #0]
10058198:	2784      	movs	r7, #132	; 0x84
1005819a:	583f      	ldr	r7, [r7, r0]
1005819c:	2301      	movs	r3, #1
1005819e:	9701      	str	r7, [sp, #4]
100581a0:	277b      	movs	r7, #123	; 0x7b
100581a2:	5c3f      	ldrb	r7, [r7, r0]
100581a4:	e007      	b.n	100581b6 <cancel_slave+0x5e>
100581a6:	8c8a      	ldrh	r2, [r1, #36]	; 0x24
100581a8:	8ccf      	ldrh	r7, [r1, #38]	; 0x26
100581aa:	9700      	str	r7, [sp, #0]
100581ac:	6acf      	ldr	r7, [r1, #44]	; 0x2c
100581ae:	2300      	movs	r3, #0
100581b0:	9701      	str	r7, [sp, #4]
100581b2:	2728      	movs	r7, #40	; 0x28
100581b4:	5c7f      	ldrb	r7, [r7, r1]
100581b6:	9702      	str	r7, [sp, #8]
100581b8:	79a7      	ldrb	r7, [r4, #6]
100581ba:	07ff      	lsls	r7, r7, #31
100581bc:	d008      	beq.n	100581d0 <cancel_slave+0x78>
100581be:	8927      	ldrh	r7, [r4, #8]
100581c0:	1bd2      	subs	r2, r2, r7
100581c2:	0412      	lsls	r2, r2, #16
100581c4:	0c12      	lsrs	r2, r2, #16
100581c6:	d103      	bne.n	100581d0 <cancel_slave+0x78>
100581c8:	4622      	mov	r2, r4
100581ca:	f7f8 ff3f 	bl	1005104c <LL_update_proc>
100581ce:	4605      	mov	r5, r0
100581d0:	79a0      	ldrb	r0, [r4, #6]
100581d2:	0781      	lsls	r1, r0, #30
100581d4:	d510      	bpl.n	100581f8 <cancel_slave+0xa0>
100581d6:	8922      	ldrh	r2, [r4, #8]
100581d8:	9900      	ldr	r1, [sp, #0]
100581da:	1a89      	subs	r1, r1, r2
100581dc:	1c49      	adds	r1, r1, #1
100581de:	0409      	lsls	r1, r1, #16
100581e0:	0c09      	lsrs	r1, r1, #16
100581e2:	d109      	bne.n	100581f8 <cancel_slave+0xa0>
100581e4:	21fd      	movs	r1, #253	; 0xfd
100581e6:	4008      	ands	r0, r1
100581e8:	ab01      	add	r3, sp, #4
100581ea:	71a0      	strb	r0, [r4, #6]
100581ec:	4631      	mov	r1, r6
100581ee:	2205      	movs	r2, #5
100581f0:	3121      	adds	r1, #33	; 0x21
100581f2:	4618      	mov	r0, r3
100581f4:	f7f4 fb64 	bl	1004c8c0 <char_copy>
100581f8:	2d00      	cmp	r5, #0
100581fa:	d00a      	beq.n	10058212 <cancel_slave+0xba>
100581fc:	4805      	ldr	r0, [pc, #20]	; (10058214 <cancel_slave+0xbc>)
100581fe:	9600      	str	r6, [sp, #0]
10058200:	6801      	ldr	r1, [r0, #0]
10058202:	2041      	movs	r0, #65	; 0x41
10058204:	0140      	lsls	r0, r0, #5
10058206:	1809      	adds	r1, r1, r0
10058208:	462b      	mov	r3, r5
1005820a:	4622      	mov	r2, r4
1005820c:	2000      	movs	r0, #0
1005820e:	f7f6 fc8d 	bl	1004eb2c <isr_event_handler>
10058212:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10058214:	2000098c 	.word	0x2000098c
10058218:	200000cc 	.word	0x200000cc
1005821c:	02003f02 	.word	0x02003f02
10058220:	3c02303e 	.word	0x3c02303e
10058224:	4c3b0220 	.word	0x4c3b0220
10058228:	02403a02 	.word	0x02403a02
1005822c:	3402b239 	.word	0x3402b239
10058230:	0b35025b 	.word	0x0b35025b
10058234:	00          	.byte	0x00
10058235:	00          	.byte	0x00
10058236:	140b      	.short	0x140b
10058238:	2c28221c 	.word	0x2c28221c
1005823c:	0032302e 	.word	0x0032302e
10058240:	1a161009 	.word	0x1a161009
10058244:	2322201e 	.word	0x2322201e
10058248:	0d070023 	.word	0x0d070023
1005824c:	18171411 	.word	0x18171411
10058250:	00191919 	.word	0x00191919
10058254:	0e0c0905 	.word	0x0e0c0905
10058258:	0f0f0f0f 	.word	0x0f0f0f0f
1005825c:	0704000f 	.word	0x0704000f
10058260:	0a0a0a09 	.word	0x0a0a0a09
10058264:	000a0a0a 	.word	0x000a0a0a
10058268:	05050403 	.word	0x05050403
1005826c:	05050505 	.word	0x05050505
10058270:	03020005 	.word	0x03020005
10058274:	03030303 	.word	0x03030303
10058278:	1f030303 	.word	0x1f030303
1005827c:	1f1e1f1c 	.word	0x1f1e1f1c
10058280:	1e1f1f1e 	.word	0x1e1f1f1e
10058284:	1e1f      	.short	0x1e1f
10058286:	1f          	.byte	0x1f
10058287:	12          	.byte	0x12
10058288:	80e10034 	.word	0x80e10034
1005828c:	73754302 	.word	0x73754302
10058290:	6e6f6968 	.word	0x6e6f6968
10058294:	09303030 	.word	0x09303030
10058298:	68737543 	.word	0x68737543
1005829c:	306e6f69 	.word	0x306e6f69
100582a0:	00003030 	.word	0x00003030
100582a4:	10040adc 	.word	0x10040adc
100582a8:	10040aac 	.word	0x10040aac
100582ac:	10040abe 	.word	0x10040abe
100582b0:	10040a00 	.word	0x10040a00
100582b4:	10040abe 	.word	0x10040abe
100582b8:	10040aa2 	.word	0x10040aa2
100582bc:	10040abe 	.word	0x10040abe
100582c0:	10040a00 	.word	0x10040a00
100582c4:	10040aac 	.word	0x10040aac
100582c8:	10040aac 	.word	0x10040aac
100582cc:	10040aa2 	.word	0x10040aa2
100582d0:	10040a00 	.word	0x10040a00
100582d4:	10040a08 	.word	0x10040a08
100582d8:	10040a08 	.word	0x10040a08
100582dc:	10040a08 	.word	0x10040a08
100582e0:	10040ac4 	.word	0x10040ac4
100582e4:	10040aac 	.word	0x10040aac
100582e8:	10040aac 	.word	0x10040aac
100582ec:	10040a80 	.word	0x10040a80
100582f0:	10040b64 	.word	0x10040b64
100582f4:	10040a80 	.word	0x10040a80
100582f8:	10040aa2 	.word	0x10040aa2
100582fc:	10040a80 	.word	0x10040a80
10058300:	10040b64 	.word	0x10040b64
10058304:	10040aac 	.word	0x10040aac
10058308:	10040aac 	.word	0x10040aac
1005830c:	10040aa2 	.word	0x10040aa2
10058310:	10040b64 	.word	0x10040b64
10058314:	10040a08 	.word	0x10040a08
10058318:	10040a08 	.word	0x10040a08
1005831c:	10040a08 	.word	0x10040a08
10058320:	10040b6e 	.word	0x10040b6e
10058324:	10040e5c 	.word	0x10040e5c
10058328:	10040dac 	.word	0x10040dac
1005832c:	10040dac 	.word	0x10040dac
10058330:	10040daa 	.word	0x10040daa
10058334:	10040e4e 	.word	0x10040e4e
10058338:	10040e4e 	.word	0x10040e4e
1005833c:	10040e44 	.word	0x10040e44
10058340:	10040daa 	.word	0x10040daa
10058344:	10040e4e 	.word	0x10040e4e
10058348:	10040e44 	.word	0x10040e44
1005834c:	10040e4e 	.word	0x10040e4e
10058350:	10040daa 	.word	0x10040daa
10058354:	10040e54 	.word	0x10040e54
10058358:	10040e54 	.word	0x10040e54
1005835c:	10040e54 	.word	0x10040e54
10058360:	10040ee4 	.word	0x10040ee4
10058364:	10041c2c 	.word	0x10041c2c
10058368:	10041c0e 	.word	0x10041c0e
1005836c:	10041bc8 	.word	0x10041bc8
10058370:	10041ae6 	.word	0x10041ae6
10058374:	10041bc8 	.word	0x10041bc8
10058378:	10041c00 	.word	0x10041c00
1005837c:	10041bc8 	.word	0x10041bc8
10058380:	10041ae6 	.word	0x10041ae6
10058384:	10041c0e 	.word	0x10041c0e
10058388:	10041c0e 	.word	0x10041c0e
1005838c:	10041c00 	.word	0x10041c00
10058390:	10041ae6 	.word	0x10041ae6
10058394:	10041ade 	.word	0x10041ade
10058398:	10041ade 	.word	0x10041ade
1005839c:	10041ade 	.word	0x10041ade
100583a0:	10041e44 	.word	0x10041e44
100583a4:	1004248c 	.word	0x1004248c
100583a8:	1004234c 	.word	0x1004234c
100583ac:	1004234c 	.word	0x1004234c
100583b0:	10042348 	.word	0x10042348
100583b4:	10042464 	.word	0x10042464
100583b8:	10042464 	.word	0x10042464
100583bc:	10042456 	.word	0x10042456
100583c0:	10042348 	.word	0x10042348
100583c4:	10042464 	.word	0x10042464
100583c8:	10042456 	.word	0x10042456
100583cc:	10042464 	.word	0x10042464
100583d0:	10042348 	.word	0x10042348
100583d4:	1004246c 	.word	0x1004246c
100583d8:	1004246c 	.word	0x1004246c
100583dc:	1004246c 	.word	0x1004246c
100583e0:	10042670 	.word	0x10042670

100583e4 <s_SpiInModeVersion>:
100583e4:	00000004                                ....

100583e8 <s_SpiOutModeVersion>:
100583e8:	00000004                                ....

100583ec <s_SpiSclkModeVersion>:
100583ec:	00000004                                ....

100583f0 <s_UartRxModeVersion>:
100583f0:	00000001                                ....

100583f4 <s_UartRxPinVersion>:
100583f4:	00000800                                ....

100583f8 <s_UartTxModeVersion>:
100583f8:	00000001                                ....

100583fc <s_UartTxPinVersion>:
100583fc:	00000100                                ....

10058400 <s_vectnButtonPinVersion>:
10058400:	00002000 00000020                       . .. ...

10058408 <s_vectnGpioPinVersion>:
10058408:	00000040 00000080 00004000 6d726554     @........@..Term
10058418:	6c616e69 54545200 47455300 00524547     inal.RTT.SEGGER.

10058428 <_aV2C.4606>:
10058428:	33323130 37363534 42413938 46454443     0123456789ABCDEF
10058438:	696e6946 64656873 64646120 20676e69     Finished adding 
10058448:	206c6c61 76726573 73656369 0201000a              all services..

10058456 <CSWTCH.105>:
10058456:	08040201 80402010 736e6553 2520726f     ..... @.Sensor %
10058466:	25203a64 52000a64 20646165 74746162     d: %d..Read batt
10058476:	0a797265 61655200 72702064 75737365     ery..Read pressu
10058486:	000a6572 64616552 616d7320 76206c6c     re..Read small v
10058496:	65766c61 52000a73 20646165 20676962     alves..Read big 
100584a6:	766c6176 000a7365 64616552 6d757020     valves..Read pum
100584b6:	52000a70 20646165 0a4d544c 656c4300     p..Read LTM..Cle
100584c6:	6e697261 656d2067 79726f6d 0a2e2e2e     aring memory....
100584d6:	61655200 202d2064 6f6d654d 63207972     .Read - Memory c
100584e6:	7261656c 6552000a 6c206461 20747361     lear..Read last 
100584f6:	61647075 20646574 65746164 74202620     updated date & t
10058506:	0a656d69 74614400 776f4461 616f6c6e     ime..DataDownloa
10058516:	6f6e2064 69666974 69746163 6f206e6f     d notification o
10058526:	25203a66 4c000a78 73204445 65746174     f: %x..LED state
10058536:	61686320 6465676e 206f7420 2044454c      changed to LED 
10058546:	2c642523 61747320 25206574 56000a64     #%d, state %d..V
10058556:	65766c61 61747320 63206574 676e6168     alve state chang
10058566:	74206465 56203a6f 65766c61 2c782520     ed to: Valve %x,
10058576:	61745320 25206574 54000a78 6c67676f      State %x..Toggl
10058586:	6c206465 65677261 6c617620 203a6576     ed large valve: 
10058596:	000a7825 67676f54 2064656c 706d7570     %x..Toggled pump
100585a6:	7825203a 6941000a 61622072 6f632067     : %x..Air bag co
100585b6:	6f72746e 62202e6c 203a6761 203b7825     ntrol. bag: %x; 
100585c6:	756c6176 25203a65 6d6d2064 000a6748     value: %d mmHg..
100585d6:	69646552 69727473 69747562 7020676e     Redistributing p
100585e6:	73736572 20657275 6d6f7266 67616220     ressure from bag
100585f6:	20642520 25206f74 54203b64 65677261      %d to %d; Targe
10058606:	25203a74 6d6d2064 000a6748 74696e49     t: %d mmHg..Init
10058616:	696c6169 676e697a 72696120 67616220     ializing air bag
10058626:	54202e73 65677261 25203a74 6d6d2064     s. Target: %d mm
10058636:	000a6748 656c6552 6e697361 69612067     Hg..Releasing ai
10058646:	72662072 61206d6f 61206c6c 62207269     r from all air b
10058656:	0a736761 676f5400 64656c67 4d544c20     ags..Toggled LTM
10058666:	6f4c000a 20726577 6e756f42 72502064     ..Lower Bound Pr
10058676:	75737365 73206572 203a7465 6d206425     essure set: %d m
10058686:	0a67486d 70705500 42207265 646e756f     mHg..Upper Bound
10058696:	65725020 72757373 65732065 25203a74      Pressure set: %
100586a6:	6d6d2064 000a6748 67726154 50207465     d mmHg..Target P
100586b6:	73736572 20657275 3a746573 20642520     ressure set: %d 
100586c6:	67486d6d 6153000a 696c706d 5020676e     mmHg..Sampling P
100586d6:	6f697265 65732064 25203a74 696d2064     eriod set: %d mi
100586e6:	6574756e 4e000a73 65626d75 666f2072     nutes..Number of
100586f6:	6d617320 73656c70 74657320 6425203a      samples set: %d
10058706:	6f4d000a 73206564 203a7465 000a6425     ..Mode set: %d..
10058716:	20746553 69766564 49206563 25203a44     Set device ID: %
10058726:	64252064 0a642520 74614400 65732065     d %d %d..Date se
10058736:	25203a74 64252f64 2064252f 253a6425     t: %d/%d/%d %d:%
10058746:	42000a64 65747461 76207972 65756c61     d..Battery value
10058756:	6425203a f000000a                                : %d..

1005875c <BlueNRG_Stack_Init_params>:
1005875c:	1007f000 00000400 00000400 1007f800     ................
1005876c:	20000a08 000031dc 000e005c 000101c1     ... .1..\.......
1005877c:	00dc1a02 20000729 ffffffff 00030064     ....).. ....d...
1005878c:	00000148 63736944 656e6e6f 64657463     H...Disconnected
1005879c:	646f6d20 6e6f2065 6544000a 73657270      mode on..Depres
100587ac:	69727573 676e697a 67616220 20642520     surizing bag %d 
100587bc:	25206f74 6d6d2064 202c6748 68746977     to %d mmHg, with
100587cc:	6c756d20 6c706974 20726569 000a6425      multiplier %d..
100587dc:	656c6552 6e697361 6f662067 64252072     Releasing for %d
100587ec:	0a736d20 696e4900 6c616974 6e697a69      ms..Initializin
100587fc:	6c612067 6961206c 61622072 74207367     g all air bags t
1005880c:	6425206f 486d6d20 50000a67 69706d75     o %d mmHg..Pumpi
1005881c:	6220676e 25206761 6f662064 31312072     ng bag %d for 11
1005882c:	65732035 646e6f63 52000a73 6a646165     5 seconds..Readj
1005883c:	69747375 7020676e 73736572 3a657275     usting pressure:
1005884c:	65744920 69746172 25206e6f 43000a64      Iteration %d..C
1005885c:	65727275 7020746e 73736572 73657275     urrent pressures
1005886c:	2500203a 6d6d2064 202c6748 65725000     : .%d mmHg, .Pre
1005887c:	72757373 68632065 65676e61 72612073     ssure changes ar
1005888c:	6f642065 000a656e 73657250 69727573     e done..Pressuri
1005889c:	676e697a 67616220 20642520 25206f74     zing bag %d to %
100588ac:	6d6d2064 202c6748 68746977 6c756d20     d mmHg, with mul
100588bc:	6c706974 20726569 000a6425 706d7550     tiplier %d..Pump
100588cc:	20676e69 20726f66 6d206425 44000a73     ing for %d ms..D
100588dc:	6f637369 63656e6e 20646574 65646f6d     isconnected mode
100588ec:	66666f20 6552000a 6c206461 7265776f      off..Read lower
100588fc:	756f6220 7020646e 73736572 2e657275      bound pressure.
1005890c:	776f6c20 6f427265 50646e75 73736572      lowerBoundPress
1005891c:	20657275 6425203d 000a203b 64616552     ure = %d; ..Read
1005892c:	73756320 6e6f6968 646f6d20 4d202e65      cushion mode. M
1005893c:	2065646f 6425203d 000a203b 64616552     ode = %d; ..Read
1005894c:	2e6f6e20 20666f20 706d6173 2e73656c      no. of samples.
1005895c:	6d754e20 20726562 7320666f 6c706d61      Number of sampl
1005896c:	3d207365 3b642520 52000a20 20646165     es = %d; ..Read 
1005897c:	706d6173 676e696c 72657020 2e646f69     sampling period.
1005898c:	6d615320 6e696c70 65702067 646f6972      Sampling period
1005899c:	25203d20 0a203b64 61655200 61742064      = %d; ..Read ta
100589ac:	74656772 65727020 72757373 74202e65     rget pressure. t
100589bc:	65677261 65725074 72757373 203d2065     argetPressure = 
100589cc:	203b6425 6552000a 75206461 72657070     %d; ..Read upper
100589dc:	756f6220 7020646e 73736572 2e657275      bound pressure.
100589ec:	70707520 6f427265 50646e75 73736572      upperBoundPress
100589fc:	20657275 6425203d 000a203b 69646552     ure = %d; ..Redi
10058a0c:	69727473 69747562 7020676e 73736572     stributing press
10058a1c:	20657275 6d6f7266 67616220 20642520     ure from bag %d 
10058a2c:	74206f74 65677261 61622074 64252067     to target bag %d
10058a3c:	6977202c 74206874 65677261 72702074     , with target pr
10058a4c:	75737365 25206572 6d6d2064 000a6748     essure %d mmHg..
10058a5c:	6e697355 68632067 63617261 69726574     Using characteri
10058a6c:	63697473 20642520 67486d6d 4800203b     stic %d mmHg; .H
10058a7c:	20646c6f 656d6974 6425203a 3b736d20     old time: %d ms;
10058a8c:	6d694120 20676e69 20726f66 6d206425      Aiming for %d m
10058a9c:	2067486d 6e616863 69206567 7270206e     mHg change in pr
10058aac:	75737365 000a6572 656c6552 6e697361     essure..Releasin
10058abc:	69612067 72662072 61206d6f 62206c6c     g air from all b
10058acc:	0a736761 6c655200 69736165 6220676e     ags..Releasing b
10058adc:	25206761 48000a64 65646165 72772072     ag %d..Header wr
10058aec:	3a65746f 2f642520 252f6425 64252064     ote: %d/%d/%d %d
10058afc:	3b64253a 646e6520 20676e69 6d207461     :%d; ending at m
10058b0c:	726f6d65 6f6c2079 69746163 25206e6f     emory location %
10058b1c:	57000a64 65746f72 6c756d20 6c706974     d..Wrote multipl
10058b2c:	73726569 206f7420 73616c66 57000a68     iers to flash..W
10058b3c:	65746f72 65727020 72757373 61762065     rote pressure va
10058b4c:	7365756c 206f7420 6f6d656d 202c7972     lues to memory, 
10058b5c:	61636f6c 6e6f6974 646e6520 20676e69     location ending 
10058b6c:	203a7461 000a6425 20656854 69766544     at: %d..The Devi
10058b7c:	68206563 62207361 6e616765 696e6920     ce has began ini
10058b8c:	6c616974 74617a69 0a6e6f69 6e6f4300     tialization..Con
10058b9c:	75676966 20646572 53207361 4d204950     figured as SPI M
10058bac:	65747361 45000a72 726f7272 206e6920     aster..Error in 
10058bbc:	20454c42 74696e69 6e49000a 61697469     BLE init..Initia
10058bcc:	657a696c 6e692064 6e726574 41206c61     lized internal A
10058bdc:	000a4344 74696e49 696c6169 2064657a     DC..Initialized 
10058bec:	65747865 6c616e72 43444120 6e49000a     external ADC..In
10058bfc:	61697469 657a696c 50472064 73274f49     itialized GPIO's
10058c0c:	6e49000a 74617020 746e6569 646f6d20     ..In patient mod
10058c1c:	49000a65 6461206e 206e696d 65646f6d     e..In admin mode
10058c2c:	6e49000a 61697469 617a696c 6e6f6974     ..Initialization
10058c3c:	61682073 62206576 206e6565 706d6f63     s have been comp
10058c4c:	6574656c 44000a64 3a617461 0a782520     leted..Data: %x.
10058c5c:	2d2d2d00 2d2d2d2d 2d2d2d2d 2d2d2d2d     .---------------
10058c6c:	2d2d2d2d 2d2d2d2d 2d2d2d2d 42000a2d     -------------..B
10058c7c:	6e696765 676e696e 65727020 72757373     eginning pressur
10058c8c:	64612065 7473756a 746e656d 7250000a     e adjustment..Pr
10058c9c:	75737365 63206572 746e756f 726f6620     essure count for
10058cac:	67616220 20642520 25207369 52000a64      bag %d is %d..R
10058cbc:	73696465 62697274 6e697475 72702067     edistributing pr
10058ccc:	75737365 62206572 65777465 62206e65     essure between b
10058cdc:	20736761 0a776f6e 65725000 72757373     ags now..Pressur
10058cec:	6e692065 73756320 6e6f6968 20642520     e in cushion %d 
10058cfc:	6e207369 6f20776f 50000a6b 73736572     is now ok..Press
10058d0c:	20657275 63206e69 69687375 25206e6f     ure in cushion %
10058d1c:	61682064 6f6e2073 65622077 66206e65     d has now been f
10058d2c:	64657869 206e6920 20656874 636f7270     ixed in the proc
10058d3c:	0a737365 61655200 73756a64 676e6974     ess..Readjusting
10058d4c:	65727020 72757373 666f2065 646e6920      pressure of ind
10058d5c:	64697669 206c6175 73676162 776f6e20     ividual bags now
10058d6c:	6550000a 646f6972 6c616369 7220796c     ..Periodically r
10058d7c:	69646165 6220676e 65747461 000a7972     eading battery..
10058d8c:	74746142 20797265 6576656c 6f74206c     Battery level to
10058d9c:	6f6c206f 202d2077 74756873 676e6974     o low - shutting
10058dac:	66666f20 6553000a 6c622074 6f746575      off..Set blueto
10058dbc:	2068746f 74746573 73676e69 6146000a     oth settings..Fa
10058dcc:	72756c69 6e692065 64644120 6e655320     ilure in Add Sen
10058ddc:	20726f73 76726553 0a656369 206e4900     sor Service..In 
10058dec:	5f746553 69766544 6f436563 63656e6e     Set_DeviceConnec
10058dfc:	6c626174 45202e65 726f7272 3025203a     table. Error: %0
10058e0c:	000a7834 69766544 68206563 62207361     4x..Device has b
10058e1c:	206e6565 20746573 63207361 656e6e6f     een set as conne
10058e2c:	62617463 0a2e656c 75746d00 776f6e20     ctable...mtu now
10058e3c:	0a64252e 65685400 76656420 20656369     .%d..The device 
10058e4c:	20736168 6e656562 73696420 6e6e6f63     has been disconn
10058e5c:	65746365 43000a64 656e6e6f 6f697463     ected..Connectio
10058e6c:	6168206e 65622073 6d206e65 0a656461     n has been made.
10058e7c:	00000000                                ....

10058e80 <__sf_fake_stderr>:
	...

10058ea0 <__sf_fake_stdin>:
	...

10058ec0 <__sf_fake_stdout>:
	...
10058ee0:	00676f6c 00776f70                       log.pow.

10058ee8 <bp>:
10058ee8:	00000000 3ff00000 00000000 3ff80000     .......?.......?

10058ef8 <dp_h>:
	...
10058f00:	40000000 3fe2b803                       ...@...?

10058f08 <dp_l>:
	...
10058f10:	43cfd006 3e4cfdeb                       ...C..L>

10058f18 <TWO52>:
10058f18:	00000000 43300000 00000000 c3300000     ......0C......0.
10058f28:	1702080c 0201010d 01010909 ff090206     ................
10058f38:	ffffffff ffff0909 0000ffff 0107020d     ................
10058f48:	0069009e 0035004f 00150020 01020101     ..i.O.5. .......
10058f58:	02000102 02020001 01020102 01010101     ................
10058f68:	01020002 00000000                       ........

10058f70 <evnt_callback_pfunc>:
10058f70:	10055829 1005584d 10055871 100558b9     )X..MX..qX...X..
10058f80:	100559f5 10055895 1005592d 10055a1d     .Y...X..-Y...Z..
10058f90:	100559cd 10055981 1005595d 10055825     .Y...Y..]Y..%X..
10058fa0:	10055a7d 100558fd 10055a45 10055769     }Z...X..EZ..iW..
10058fb0:	10055a71 10055aa5 1005551d 1005555d     qZ...Z...U..]U..
10058fc0:	10055581 1005549d 100555c9 100554bd     .U...T...U...T..
10058fd0:	100554d9 100555a1 1005547d 10055539     .T...U..}T..9U..
10058fe0:	100554f9 100557dd 10055801 100557a9     .T...W...X...W..
10058ff0:	10055791 10055757 100555e5 100556ed     .W..WW...U...V..
10059000:	100552e1 10055349 10055325 100553e9     .R..IS..%S...S..
10059010:	10055435 1005539d 10055411 100553c1     5T...S...T...S..
10059020:	10055459 10055371 10055305 10055661     YT..qS...S..aV..
10059030:	10055689 100556c9 10055639 10055611     .V...V..9V...V..
10059040:	10055745 100556b1 1005571d 1005570d     EW...V...W...W..
10059050:	10055737 1005572d                       7W..-W..

10059058 <int_evnt_callback_pfunc>:
10059058:	10055dc9 10055d89 10055b51 10055b77     .]...]..Q[..w[..
10059068:	10055b91 10055bc9 10055c5d 10055bab     .[...[..]\...[..
10059078:	10055bef 10055c69 10055c43 10055c1d     .[..i\..C\...\..
10059088:	10055bff                                .[..

1005908c <bleBaseUuid>:
1005908c:	5f9b34fb 80000080 00001000 00000000     .4._............
